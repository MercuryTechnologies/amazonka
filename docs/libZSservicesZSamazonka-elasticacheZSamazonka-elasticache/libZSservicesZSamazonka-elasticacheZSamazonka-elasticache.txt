-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-elasticacheZSamazonka-elasticache
@version 2.0


module Amazonka.ElastiCache.Types.AZMode
newtype AZMode
AZMode' :: Text -> AZMode
[fromAZMode] :: AZMode -> Text
pattern AZMode_Cross_az :: AZMode
pattern AZMode_Single_az :: AZMode
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AZMode.AZMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.AZMode.AZMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.AZMode.AZMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.AZMode.AZMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.AZMode.AZMode
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.AZMode.AZMode
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AZMode.AZMode
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AZMode.AZMode
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AZMode.AZMode
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.AZMode.AZMode
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AZMode.AZMode
instance GHC.Read.Read Amazonka.ElastiCache.Types.AZMode.AZMode
instance GHC.Show.Show Amazonka.ElastiCache.Types.AZMode.AZMode


module Amazonka.ElastiCache.Types.AuthTokenUpdateStatus
newtype AuthTokenUpdateStatus
AuthTokenUpdateStatus' :: Text -> AuthTokenUpdateStatus
[fromAuthTokenUpdateStatus] :: AuthTokenUpdateStatus -> Text
pattern AuthTokenUpdateStatus_ROTATING :: AuthTokenUpdateStatus
pattern AuthTokenUpdateStatus_SETTING :: AuthTokenUpdateStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.AuthTokenUpdateStatus.AuthTokenUpdateStatus


module Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType
newtype AuthTokenUpdateStrategyType
AuthTokenUpdateStrategyType' :: Text -> AuthTokenUpdateStrategyType
[fromAuthTokenUpdateStrategyType] :: AuthTokenUpdateStrategyType -> Text
pattern AuthTokenUpdateStrategyType_DELETE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_ROTATE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_SET :: AuthTokenUpdateStrategyType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance GHC.Read.Read Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType
instance GHC.Show.Show Amazonka.ElastiCache.Types.AuthTokenUpdateStrategyType.AuthTokenUpdateStrategyType


module Amazonka.ElastiCache.Types.AuthenticationType
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance GHC.Read.Read Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType
instance GHC.Show.Show Amazonka.ElastiCache.Types.AuthenticationType.AuthenticationType


module Amazonka.ElastiCache.Types.Authentication

-- | Indicates whether the user requires a password to authenticate.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | The number of passwords belonging to the user. The maximum is two.
[$sel:passwordCount:Authentication'] :: Authentication -> Maybe Int

-- | Indicates whether the user requires a password to authenticate.
[$sel:type':Authentication'] :: Authentication -> Maybe AuthenticationType

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Authentication.Authentication
instance GHC.Show.Show Amazonka.ElastiCache.Types.Authentication.Authentication
instance GHC.Read.Read Amazonka.ElastiCache.Types.Authentication.Authentication
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Authentication.Authentication
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Authentication.Authentication
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Authentication.Authentication
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Authentication.Authentication


module Amazonka.ElastiCache.Types.AutomaticFailoverStatus
newtype AutomaticFailoverStatus
AutomaticFailoverStatus' :: Text -> AutomaticFailoverStatus
[fromAutomaticFailoverStatus] :: AutomaticFailoverStatus -> Text
pattern AutomaticFailoverStatus_Disabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Disabling :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabling :: AutomaticFailoverStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.AutomaticFailoverStatus.AutomaticFailoverStatus


module Amazonka.ElastiCache.Types.AvailabilityZone

-- | Describes an Availability Zone in which the cluster is launched.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | The name of the Availability Zone.
[$sel:name:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance GHC.Show.Show Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance GHC.Read.Read Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.AvailabilityZone.AvailabilityZone


module Amazonka.ElastiCache.Types.CacheEngineVersion

-- | Provides all of the details about a particular cache engine version.
--   
--   <i>See:</i> <a>newCacheEngineVersion</a> smart constructor.
data CacheEngineVersion
CacheEngineVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> CacheEngineVersion

-- | The version number of the cache engine.
[$sel:engineVersion:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The name of the cache parameter group family associated with this
--   cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The description of the cache engine.
[$sel:cacheEngineDescription:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The name of the cache engine.
[$sel:engine:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The description of the cache engine version.
[$sel:cacheEngineVersionDescription:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | Create a value of <a>CacheEngineVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engineVersion</a> - The version number of the
--   cache engine.
--   
--   <a>$sel:cacheParameterGroupFamily:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family associated with this cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheEngineDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineDescription</a> - The description of
--   the cache engine.
--   
--   <a>$sel:engine:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engine</a> - The name of the cache engine.
--   
--   <a>$sel:cacheEngineVersionDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineVersionDescription</a> - The
--   description of the cache engine version.
newCacheEngineVersion :: CacheEngineVersion

-- | The version number of the cache engine.
cacheEngineVersion_engineVersion :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache parameter group family associated with this
--   cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheEngineVersion_cacheParameterGroupFamily :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine.
cacheEngineVersion_cacheEngineDescription :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache engine.
cacheEngineVersion_engine :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine version.
cacheEngineVersion_cacheEngineVersionDescription :: Lens' CacheEngineVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheEngineVersion.CacheEngineVersion


module Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue

-- | A value that applies only to a certain cache node type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificValue</a> smart constructor.
data CacheNodeTypeSpecificValue
CacheNodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> CacheNodeTypeSpecificValue

-- | The cache node type for which this value applies.
[$sel:cacheNodeType:CacheNodeTypeSpecificValue'] :: CacheNodeTypeSpecificValue -> Maybe Text

-- | The value for the cache node type.
[$sel:value:CacheNodeTypeSpecificValue'] :: CacheNodeTypeSpecificValue -> Maybe Text

-- | Create a value of <a>CacheNodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_cacheNodeType</a> - The cache node type
--   for which this value applies.
--   
--   <a>$sel:value:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_value</a> - The value for the cache node
--   type.
newCacheNodeTypeSpecificValue :: CacheNodeTypeSpecificValue

-- | The cache node type for which this value applies.
cacheNodeTypeSpecificValue_cacheNodeType :: Lens' CacheNodeTypeSpecificValue (Maybe Text)

-- | The value for the cache node type.
cacheNodeTypeSpecificValue_value :: Lens' CacheNodeTypeSpecificValue (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheNodeTypeSpecificValue.CacheNodeTypeSpecificValue


module Amazonka.ElastiCache.Types.CacheParameterGroup

-- | Represents the output of a <tt>CreateCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newCacheParameterGroup</a> smart constructor.
data CacheParameterGroup
CacheParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> CacheParameterGroup

-- | The name of the cache parameter group family that this cache parameter
--   group is compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | The ARN (Amazon Resource Name) of the cache parameter group.
[$sel:arn:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | Indicates whether the parameter group is associated with a Global
--   datastore
[$sel:isGlobal:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Bool

-- | The description for this cache parameter group.
[$sel:description:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | Create a value of <a>CacheParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family that this cache parameter group is
--   compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:arn:CacheParameterGroup'</a>, <a>cacheParameterGroup_arn</a> -
--   The ARN (Amazon Resource Name) of the cache parameter group.
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupName</a> - The name of the
--   cache parameter group.
--   
--   <a>$sel:isGlobal:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_isGlobal</a> - Indicates whether the parameter
--   group is associated with a Global datastore
--   
--   <a>$sel:description:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_description</a> - The description for this
--   cache parameter group.
newCacheParameterGroup :: CacheParameterGroup

-- | The name of the cache parameter group family that this cache parameter
--   group is compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheParameterGroup_cacheParameterGroupFamily :: Lens' CacheParameterGroup (Maybe Text)

-- | The ARN (Amazon Resource Name) of the cache parameter group.
cacheParameterGroup_arn :: Lens' CacheParameterGroup (Maybe Text)

-- | The name of the cache parameter group.
cacheParameterGroup_cacheParameterGroupName :: Lens' CacheParameterGroup (Maybe Text)

-- | Indicates whether the parameter group is associated with a Global
--   datastore
cacheParameterGroup_isGlobal :: Lens' CacheParameterGroup (Maybe Bool)

-- | The description for this cache parameter group.
cacheParameterGroup_description :: Lens' CacheParameterGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheParameterGroup.CacheParameterGroup


module Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'] :: CacheParameterGroupNameMessage -> Maybe Text

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheParameterGroupNameMessage.CacheParameterGroupNameMessage


module Amazonka.ElastiCache.Types.CacheParameterGroupStatus

-- | Status of the cache parameter group.
--   
--   <i>See:</i> <a>newCacheParameterGroupStatus</a> smart constructor.
data CacheParameterGroupStatus
CacheParameterGroupStatus' :: Maybe Text -> Maybe [Text] -> Maybe Text -> CacheParameterGroupStatus

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe Text

-- | A list of the cache node IDs which need to be rebooted for parameter
--   changes to be applied. A node ID is a numeric identifier (0001, 0002,
--   etc.).
[$sel:cacheNodeIdsToReboot:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe [Text]

-- | The status of parameter updates.
[$sel:parameterApplyStatus:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe Text

-- | Create a value of <a>CacheParameterGroupStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheParameterGroupName</a> - The name of
--   the cache parameter group.
--   
--   <a>$sel:cacheNodeIdsToReboot:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheNodeIdsToReboot</a> - A list of the
--   cache node IDs which need to be rebooted for parameter changes to be
--   applied. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:parameterApplyStatus:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newCacheParameterGroupStatus :: CacheParameterGroupStatus

-- | The name of the cache parameter group.
cacheParameterGroupStatus_cacheParameterGroupName :: Lens' CacheParameterGroupStatus (Maybe Text)

-- | A list of the cache node IDs which need to be rebooted for parameter
--   changes to be applied. A node ID is a numeric identifier (0001, 0002,
--   etc.).
cacheParameterGroupStatus_cacheNodeIdsToReboot :: Lens' CacheParameterGroupStatus (Maybe [Text])

-- | The status of parameter updates.
cacheParameterGroupStatus_parameterApplyStatus :: Lens' CacheParameterGroupStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheParameterGroupStatus.CacheParameterGroupStatus


module Amazonka.ElastiCache.Types.CacheSecurityGroupMembership

-- | Represents a cluster's status within a particular cache security
--   group.
--   
--   <i>See:</i> <a>newCacheSecurityGroupMembership</a> smart constructor.
data CacheSecurityGroupMembership
CacheSecurityGroupMembership' :: Maybe Text -> Maybe Text -> CacheSecurityGroupMembership

-- | The membership status in the cache security group. The status changes
--   when a cache security group is modified, or when the cache security
--   groups assigned to a cluster are modified.
[$sel:status:CacheSecurityGroupMembership'] :: CacheSecurityGroupMembership -> Maybe Text

-- | The name of the cache security group.
[$sel:cacheSecurityGroupName:CacheSecurityGroupMembership'] :: CacheSecurityGroupMembership -> Maybe Text

-- | Create a value of <a>CacheSecurityGroupMembership</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_status</a> - The membership status in
--   the cache security group. The status changes when a cache security
--   group is modified, or when the cache security groups assigned to a
--   cluster are modified.
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_cacheSecurityGroupName</a> - The name
--   of the cache security group.
newCacheSecurityGroupMembership :: CacheSecurityGroupMembership

-- | The membership status in the cache security group. The status changes
--   when a cache security group is modified, or when the cache security
--   groups assigned to a cluster are modified.
cacheSecurityGroupMembership_status :: Lens' CacheSecurityGroupMembership (Maybe Text)

-- | The name of the cache security group.
cacheSecurityGroupMembership_cacheSecurityGroupName :: Lens' CacheSecurityGroupMembership (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheSecurityGroupMembership.CacheSecurityGroupMembership


module Amazonka.ElastiCache.Types.ChangeType
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_Immediate :: ChangeType
pattern ChangeType_Requires_reboot :: ChangeType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance GHC.Read.Read Amazonka.ElastiCache.Types.ChangeType.ChangeType
instance GHC.Show.Show Amazonka.ElastiCache.Types.ChangeType.ChangeType


module Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter

-- | A parameter that has a different value for each cache node type it is
--   applied to. For example, in a Redis cluster, a <tt>cache.m1.large</tt>
--   cache node type would have a larger <tt>maxmemory</tt> value than a
--   <tt>cache.m1.small</tt> type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificParameter</a> smart
--   constructor.
data CacheNodeTypeSpecificParameter
CacheNodeTypeSpecificParameter' :: Maybe [CacheNodeTypeSpecificValue] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> CacheNodeTypeSpecificParameter

-- | A list of cache node types and their corresponding values for this
--   parameter.
[$sel:cacheNodeTypeSpecificValues:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe [CacheNodeTypeSpecificValue]

-- | The earliest cache engine version to which the parameter can apply.
[$sel:minimumEngineVersion:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The source of the parameter value.
[$sel:source:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
[$sel:isModifiable:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Bool

-- | The valid data type for the parameter.
[$sel:dataType:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | A description of the parameter.
[$sel:description:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
[$sel:changeType:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe ChangeType

-- | Create a value of <a>CacheNodeTypeSpecificParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheNodeTypeSpecificValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues</a> - A
--   list of cache node types and their corresponding values for this
--   parameter.
--   
--   <a>$sel:minimumEngineVersion:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_minimumEngineVersion</a> - The
--   earliest cache engine version to which the parameter can apply.
--   
--   <a>$sel:source:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_source</a> - The source of the
--   parameter value.
--   
--   <a>$sel:isModifiable:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_isModifiable</a> - Indicates whether
--   (<tt>true</tt>) or not (<tt>false</tt>) the parameter can be modified.
--   Some parameters have security or operational implications that prevent
--   them from being changed.
--   
--   <a>$sel:dataType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_dataType</a> - The valid data type
--   for the parameter.
--   
--   <a>$sel:allowedValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_allowedValues</a> - The valid range
--   of values for the parameter.
--   
--   <a>$sel:parameterName:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_parameterName</a> - The name of the
--   parameter.
--   
--   <a>$sel:description:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_description</a> - A description of
--   the parameter.
--   
--   <a>$sel:changeType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_changeType</a> - Indicates whether a
--   change to the parameter is applied immediately or requires a reboot
--   for the change to be applied. You can force a reboot or wait until the
--   next maintenance window's reboot. For more information, see
--   <a>Rebooting a Cluster</a>.
newCacheNodeTypeSpecificParameter :: CacheNodeTypeSpecificParameter

-- | A list of cache node types and their corresponding values for this
--   parameter.
cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues :: Lens' CacheNodeTypeSpecificParameter (Maybe [CacheNodeTypeSpecificValue])

-- | The earliest cache engine version to which the parameter can apply.
cacheNodeTypeSpecificParameter_minimumEngineVersion :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The source of the parameter value.
cacheNodeTypeSpecificParameter_source :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
cacheNodeTypeSpecificParameter_isModifiable :: Lens' CacheNodeTypeSpecificParameter (Maybe Bool)

-- | The valid data type for the parameter.
cacheNodeTypeSpecificParameter_dataType :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The valid range of values for the parameter.
cacheNodeTypeSpecificParameter_allowedValues :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The name of the parameter.
cacheNodeTypeSpecificParameter_parameterName :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | A description of the parameter.
cacheNodeTypeSpecificParameter_description :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
cacheNodeTypeSpecificParameter_changeType :: Lens' CacheNodeTypeSpecificParameter (Maybe ChangeType)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheNodeTypeSpecificParameter.CacheNodeTypeSpecificParameter


module Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails

-- | The configuration details of the CloudWatch Logs destination.
--   
--   <i>See:</i> <a>newCloudWatchLogsDestinationDetails</a> smart
--   constructor.
data CloudWatchLogsDestinationDetails
CloudWatchLogsDestinationDetails' :: Maybe Text -> CloudWatchLogsDestinationDetails

-- | The name of the CloudWatch Logs log group.
[$sel:logGroup:CloudWatchLogsDestinationDetails'] :: CloudWatchLogsDestinationDetails -> Maybe Text

-- | Create a value of <a>CloudWatchLogsDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogsDestinationDetails'</a>,
--   <a>cloudWatchLogsDestinationDetails_logGroup</a> - The name of the
--   CloudWatch Logs log group.
newCloudWatchLogsDestinationDetails :: CloudWatchLogsDestinationDetails

-- | The name of the CloudWatch Logs log group.
cloudWatchLogsDestinationDetails_logGroup :: Lens' CloudWatchLogsDestinationDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance GHC.Show.Show Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance GHC.Read.Read Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.CloudWatchLogsDestinationDetails.CloudWatchLogsDestinationDetails


module Amazonka.ElastiCache.Types.ConfigureShard

-- | Node group (shard) configuration options when adding or removing
--   replicas. Each node group (shard) configuration has the following
--   members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones.
--   
--   <i>See:</i> <a>newConfigureShard</a> smart constructor.
data ConfigureShard
ConfigureShard' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> ConfigureShard

-- | A list of <tt>PreferredAvailabilityZone</tt> strings that specify
--   which availability zones the replication group's nodes are to be in.
--   The nummber of <tt>PreferredAvailabilityZone</tt> values must equal
--   the value of <tt>NewReplicaCount</tt> plus 1 to account for the
--   primary node. If this member of <tt>ReplicaConfiguration</tt> is
--   omitted, ElastiCache for Redis selects the availability zone for each
--   of the replicas.
[$sel:preferredAvailabilityZones:ConfigureShard'] :: ConfigureShard -> Maybe [Text]

-- | The outpost ARNs in which the cache cluster is created.
[$sel:preferredOutpostArns:ConfigureShard'] :: ConfigureShard -> Maybe [Text]

-- | The 4-digit id for the node group you are configuring. For Redis
--   (cluster mode disabled) replication groups, the node group id is
--   always 0001. To find a Redis (cluster mode enabled)'s node group's
--   (shard's) id, see <a>Finding a Shard's Id</a>.
[$sel:nodeGroupId:ConfigureShard'] :: ConfigureShard -> Text

-- | The number of replicas you want in this node group at the end of this
--   operation. The maximum value for <tt>NewReplicaCount</tt> is 5. The
--   minimum value depends upon the type of Redis replication group you are
--   working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
[$sel:newReplicaCount':ConfigureShard'] :: ConfigureShard -> Int

-- | Create a value of <a>ConfigureShard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ConfigureShard'</a>,
--   <a>configureShard_preferredAvailabilityZones</a> - A list of
--   <tt>PreferredAvailabilityZone</tt> strings that specify which
--   availability zones the replication group's nodes are to be in. The
--   nummber of <tt>PreferredAvailabilityZone</tt> values must equal the
--   value of <tt>NewReplicaCount</tt> plus 1 to account for the primary
--   node. If this member of <tt>ReplicaConfiguration</tt> is omitted,
--   ElastiCache for Redis selects the availability zone for each of the
--   replicas.
--   
--   <a>$sel:preferredOutpostArns:ConfigureShard'</a>,
--   <a>configureShard_preferredOutpostArns</a> - The outpost ARNs in which
--   the cache cluster is created.
--   
--   <a>$sel:nodeGroupId:ConfigureShard'</a>,
--   <a>configureShard_nodeGroupId</a> - The 4-digit id for the node group
--   you are configuring. For Redis (cluster mode disabled) replication
--   groups, the node group id is always 0001. To find a Redis (cluster
--   mode enabled)'s node group's (shard's) id, see <a>Finding a Shard's
--   Id</a>.
--   
--   <a>$sel:newReplicaCount':ConfigureShard'</a>,
--   <a>configureShard_newReplicaCount</a> - The number of replicas you
--   want in this node group at the end of this operation. The maximum
--   value for <tt>NewReplicaCount</tt> is 5. The minimum value depends
--   upon the type of Redis replication group you are working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
newConfigureShard :: Text -> Int -> ConfigureShard

-- | A list of <tt>PreferredAvailabilityZone</tt> strings that specify
--   which availability zones the replication group's nodes are to be in.
--   The nummber of <tt>PreferredAvailabilityZone</tt> values must equal
--   the value of <tt>NewReplicaCount</tt> plus 1 to account for the
--   primary node. If this member of <tt>ReplicaConfiguration</tt> is
--   omitted, ElastiCache for Redis selects the availability zone for each
--   of the replicas.
configureShard_preferredAvailabilityZones :: Lens' ConfigureShard (Maybe [Text])

-- | The outpost ARNs in which the cache cluster is created.
configureShard_preferredOutpostArns :: Lens' ConfigureShard (Maybe [Text])

-- | The 4-digit id for the node group you are configuring. For Redis
--   (cluster mode disabled) replication groups, the node group id is
--   always 0001. To find a Redis (cluster mode enabled)'s node group's
--   (shard's) id, see <a>Finding a Shard's Id</a>.
configureShard_nodeGroupId :: Lens' ConfigureShard Text

-- | The number of replicas you want in this node group at the end of this
--   operation. The maximum value for <tt>NewReplicaCount</tt> is 5. The
--   minimum value depends upon the type of Redis replication group you are
--   working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
configureShard_newReplicaCount :: Lens' ConfigureShard Int
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance GHC.Show.Show Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance GHC.Read.Read Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ConfigureShard.ConfigureShard


module Amazonka.ElastiCache.Types.CustomerNodeEndpoint

-- | The endpoint from which data should be migrated.
--   
--   <i>See:</i> <a>newCustomerNodeEndpoint</a> smart constructor.
data CustomerNodeEndpoint
CustomerNodeEndpoint' :: Maybe Text -> Maybe Int -> CustomerNodeEndpoint

-- | The address of the node endpoint
[$sel:address:CustomerNodeEndpoint'] :: CustomerNodeEndpoint -> Maybe Text

-- | The port of the node endpoint
[$sel:port:CustomerNodeEndpoint'] :: CustomerNodeEndpoint -> Maybe Int

-- | Create a value of <a>CustomerNodeEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_address</a> - The address of the node endpoint
--   
--   <a>$sel:port:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_port</a> - The port of the node endpoint
newCustomerNodeEndpoint :: CustomerNodeEndpoint

-- | The address of the node endpoint
customerNodeEndpoint_address :: Lens' CustomerNodeEndpoint (Maybe Text)

-- | The port of the node endpoint
customerNodeEndpoint_port :: Lens' CustomerNodeEndpoint (Maybe Int)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance GHC.Show.Show Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance GHC.Read.Read Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.CustomerNodeEndpoint.CustomerNodeEndpoint


module Amazonka.ElastiCache.Types.DestinationType
newtype DestinationType
DestinationType' :: Text -> DestinationType
[fromDestinationType] :: DestinationType -> Text
pattern DestinationType_Cloudwatch_logs :: DestinationType
pattern DestinationType_Kinesis_firehose :: DestinationType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance GHC.Read.Read Amazonka.ElastiCache.Types.DestinationType.DestinationType
instance GHC.Show.Show Amazonka.ElastiCache.Types.DestinationType.DestinationType


module Amazonka.ElastiCache.Types.EC2SecurityGroup

-- | Provides ownership and status information for an Amazon EC2 security
--   group.
--   
--   <i>See:</i> <a>newEC2SecurityGroup</a> smart constructor.
data EC2SecurityGroup
EC2SecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> EC2SecurityGroup

-- | The status of the Amazon EC2 security group.
[$sel:status:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | The Amazon account ID of the Amazon EC2 security group owner.
[$sel:eC2SecurityGroupOwnerId:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | The name of the Amazon EC2 security group.
[$sel:eC2SecurityGroupName:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | Create a value of <a>EC2SecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EC2SecurityGroup'</a>, <a>eC2SecurityGroup_status</a> -
--   The status of the Amazon EC2 security group.
--   
--   <a>$sel:eC2SecurityGroupOwnerId:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupOwnerId</a> - The Amazon account
--   ID of the Amazon EC2 security group owner.
--   
--   <a>$sel:eC2SecurityGroupName:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupName</a> - The name of the Amazon
--   EC2 security group.
newEC2SecurityGroup :: EC2SecurityGroup

-- | The status of the Amazon EC2 security group.
eC2SecurityGroup_status :: Lens' EC2SecurityGroup (Maybe Text)

-- | The Amazon account ID of the Amazon EC2 security group owner.
eC2SecurityGroup_eC2SecurityGroupOwnerId :: Lens' EC2SecurityGroup (Maybe Text)

-- | The name of the Amazon EC2 security group.
eC2SecurityGroup_eC2SecurityGroupName :: Lens' EC2SecurityGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.EC2SecurityGroup.EC2SecurityGroup


module Amazonka.ElastiCache.Types.CacheSecurityGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>AuthorizeCacheSecurityGroupIngress</pre></li>
--   <li><pre>CreateCacheSecurityGroup</pre></li>
--   <li><pre>RevokeCacheSecurityGroupIngress</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSecurityGroup</a> smart constructor.
data CacheSecurityGroup
CacheSecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [EC2SecurityGroup] -> Maybe Text -> CacheSecurityGroup

-- | The name of the cache security group.
[$sel:cacheSecurityGroupName:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | The ARN of the cache security group,
[$sel:arn:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | The Amazon account ID of the cache security group owner.
[$sel:ownerId:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | A list of Amazon EC2 security groups that are associated with this
--   cache security group.
[$sel:eC2SecurityGroups:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe [EC2SecurityGroup]

-- | The description of the cache security group.
[$sel:description:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | Create a value of <a>CacheSecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_cacheSecurityGroupName</a> - The name of the
--   cache security group.
--   
--   <a>$sel:arn:CacheSecurityGroup'</a>, <a>cacheSecurityGroup_arn</a> -
--   The ARN of the cache security group,
--   
--   <a>$sel:ownerId:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_ownerId</a> - The Amazon account ID of the cache
--   security group owner.
--   
--   <a>$sel:eC2SecurityGroups:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_eC2SecurityGroups</a> - A list of Amazon EC2
--   security groups that are associated with this cache security group.
--   
--   <a>$sel:description:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_description</a> - The description of the cache
--   security group.
newCacheSecurityGroup :: CacheSecurityGroup

-- | The name of the cache security group.
cacheSecurityGroup_cacheSecurityGroupName :: Lens' CacheSecurityGroup (Maybe Text)

-- | The ARN of the cache security group,
cacheSecurityGroup_arn :: Lens' CacheSecurityGroup (Maybe Text)

-- | The Amazon account ID of the cache security group owner.
cacheSecurityGroup_ownerId :: Lens' CacheSecurityGroup (Maybe Text)

-- | A list of Amazon EC2 security groups that are associated with this
--   cache security group.
cacheSecurityGroup_eC2SecurityGroups :: Lens' CacheSecurityGroup (Maybe [EC2SecurityGroup])

-- | The description of the cache security group.
cacheSecurityGroup_description :: Lens' CacheSecurityGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheSecurityGroup.CacheSecurityGroup


module Amazonka.ElastiCache.Types.Endpoint

-- | Represents the information required for client programs to connect to
--   a cache node.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | The DNS hostname of the cache node.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that the cache engine is listening on.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the cache node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the cache engine is listening on.
newEndpoint :: Endpoint

-- | The DNS hostname of the cache node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the cache engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance GHC.Show.Show Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance GHC.Read.Read Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Endpoint.Endpoint
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Endpoint.Endpoint


module Amazonka.ElastiCache.Types.CacheNode

-- | Represents an individual cache node within a cluster. Each cache node
--   runs its own instance of the cluster's protocol-compliant caching
--   software - either Memcached or Redis.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheNode</a> smart constructor.
data CacheNode
CacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> CacheNode

-- | The ID of the primary node to which this read replica node is
--   synchronized. If this field is empty, this node is not associated with
--   a primary cluster.
[$sel:sourceCacheNodeId:CacheNode'] :: CacheNode -> Maybe Text

-- | The status of the parameter group applied to this cache node.
[$sel:parameterGroupStatus:CacheNode'] :: CacheNode -> Maybe Text

-- | The date and time when the cache node was created.
[$sel:cacheNodeCreateTime:CacheNode'] :: CacheNode -> Maybe ISO8601

-- | The Availability Zone where this node was created and now resides.
[$sel:customerAvailabilityZone:CacheNode'] :: CacheNode -> Maybe Text

-- | The cache node identifier. A node ID is a numeric identifier (0001,
--   0002, etc.). The combination of cluster ID and node ID uniquely
--   identifies every cache node used in a customer's Amazon account.
[$sel:cacheNodeId:CacheNode'] :: CacheNode -> Maybe Text

-- | The customer outpost ARN of the cache node.
[$sel:customerOutpostArn:CacheNode'] :: CacheNode -> Maybe Text

-- | The current state of this cache node, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>rebooting</tt>, or
--   <tt>deleting</tt>.
[$sel:cacheNodeStatus:CacheNode'] :: CacheNode -> Maybe Text

-- | The hostname for connecting to this cache node.
[$sel:endpoint:CacheNode'] :: CacheNode -> Maybe Endpoint

-- | Create a value of <a>CacheNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCacheNodeId:CacheNode'</a>,
--   <a>cacheNode_sourceCacheNodeId</a> - The ID of the primary node to
--   which this read replica node is synchronized. If this field is empty,
--   this node is not associated with a primary cluster.
--   
--   <a>$sel:parameterGroupStatus:CacheNode'</a>,
--   <a>cacheNode_parameterGroupStatus</a> - The status of the parameter
--   group applied to this cache node.
--   
--   <a>$sel:cacheNodeCreateTime:CacheNode'</a>,
--   <a>cacheNode_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created.
--   
--   <a>$sel:customerAvailabilityZone:CacheNode'</a>,
--   <a>cacheNode_customerAvailabilityZone</a> - The Availability Zone
--   where this node was created and now resides.
--   
--   <a>$sel:cacheNodeId:CacheNode'</a>, <a>cacheNode_cacheNodeId</a> - The
--   cache node identifier. A node ID is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster ID and node ID uniquely identifies
--   every cache node used in a customer's Amazon account.
--   
--   <a>$sel:customerOutpostArn:CacheNode'</a>,
--   <a>cacheNode_customerOutpostArn</a> - The customer outpost ARN of the
--   cache node.
--   
--   <a>$sel:cacheNodeStatus:CacheNode'</a>,
--   <a>cacheNode_cacheNodeStatus</a> - The current state of this cache
--   node, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>rebooting</tt>, or <tt>deleting</tt>.
--   
--   <a>$sel:endpoint:CacheNode'</a>, <a>cacheNode_endpoint</a> - The
--   hostname for connecting to this cache node.
newCacheNode :: CacheNode

-- | The ID of the primary node to which this read replica node is
--   synchronized. If this field is empty, this node is not associated with
--   a primary cluster.
cacheNode_sourceCacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The status of the parameter group applied to this cache node.
cacheNode_parameterGroupStatus :: Lens' CacheNode (Maybe Text)

-- | The date and time when the cache node was created.
cacheNode_cacheNodeCreateTime :: Lens' CacheNode (Maybe UTCTime)

-- | The Availability Zone where this node was created and now resides.
cacheNode_customerAvailabilityZone :: Lens' CacheNode (Maybe Text)

-- | The cache node identifier. A node ID is a numeric identifier (0001,
--   0002, etc.). The combination of cluster ID and node ID uniquely
--   identifies every cache node used in a customer's Amazon account.
cacheNode_cacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The customer outpost ARN of the cache node.
cacheNode_customerOutpostArn :: Lens' CacheNode (Maybe Text)

-- | The current state of this cache node, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>rebooting</tt>, or
--   <tt>deleting</tt>.
cacheNode_cacheNodeStatus :: Lens' CacheNode (Maybe Text)

-- | The hostname for connecting to this cache node.
cacheNode_endpoint :: Lens' CacheNode (Maybe Endpoint)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheNode.CacheNode
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheNode.CacheNode


module Amazonka.ElastiCache.Types.Filter

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserId.
[$sel:name:Filter'] :: Filter -> Text

-- | The property values to filter on. For example, "user-123".
[$sel:values:Filter'] :: Filter -> NonEmpty Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserId.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserId.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Filter.Filter
instance GHC.Show.Show Amazonka.ElastiCache.Types.Filter.Filter
instance GHC.Read.Read Amazonka.ElastiCache.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Filter.Filter
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.Filter.Filter


module Amazonka.ElastiCache.Types.GlobalNodeGroup

-- | Indicates the slot configuration and global identifier for a slice
--   group.
--   
--   <i>See:</i> <a>newGlobalNodeGroup</a> smart constructor.
data GlobalNodeGroup
GlobalNodeGroup' :: Maybe Text -> Maybe Text -> GlobalNodeGroup

-- | The keyspace for this node group
[$sel:slots:GlobalNodeGroup'] :: GlobalNodeGroup -> Maybe Text

-- | The name of the global node group
[$sel:globalNodeGroupId:GlobalNodeGroup'] :: GlobalNodeGroup -> Maybe Text

-- | Create a value of <a>GlobalNodeGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:GlobalNodeGroup'</a>, <a>globalNodeGroup_slots</a> - The
--   keyspace for this node group
--   
--   <a>$sel:globalNodeGroupId:GlobalNodeGroup'</a>,
--   <a>globalNodeGroup_globalNodeGroupId</a> - The name of the global node
--   group
newGlobalNodeGroup :: GlobalNodeGroup

-- | The keyspace for this node group
globalNodeGroup_slots :: Lens' GlobalNodeGroup (Maybe Text)

-- | The name of the global node group
globalNodeGroup_globalNodeGroupId :: Lens' GlobalNodeGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.GlobalNodeGroup.GlobalNodeGroup


module Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupInfo</a> smart constructor.
data GlobalReplicationGroupInfo
GlobalReplicationGroupInfo' :: Maybe Text -> Maybe Text -> GlobalReplicationGroupInfo

-- | The role of the replication group in a Global datastore. Can be
--   primary or secondary.
[$sel:globalReplicationGroupMemberRole:GlobalReplicationGroupInfo'] :: GlobalReplicationGroupInfo -> Maybe Text

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:GlobalReplicationGroupInfo'] :: GlobalReplicationGroupInfo -> Maybe Text

-- | Create a value of <a>GlobalReplicationGroupInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupMemberRole:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupMemberRole</a> -
--   The role of the replication group in a Global datastore. Can be
--   primary or secondary.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupId</a> - The name
--   of the Global datastore
newGlobalReplicationGroupInfo :: GlobalReplicationGroupInfo

-- | The role of the replication group in a Global datastore. Can be
--   primary or secondary.
globalReplicationGroupInfo_globalReplicationGroupMemberRole :: Lens' GlobalReplicationGroupInfo (Maybe Text)

-- | The name of the Global datastore
globalReplicationGroupInfo_globalReplicationGroupId :: Lens' GlobalReplicationGroupInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance GHC.Show.Show Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance GHC.Read.Read Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.GlobalReplicationGroupInfo.GlobalReplicationGroupInfo


module Amazonka.ElastiCache.Types.GlobalReplicationGroupMember

-- | A member of a Global datastore. It contains the Replication Group Id,
--   the Amazon region and the role of the replication group.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupMember</a> smart constructor.
data GlobalReplicationGroupMember
GlobalReplicationGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutomaticFailoverStatus -> GlobalReplicationGroupMember

-- | The status of the membership of the replication group.
[$sel:status:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | The Amazon region of the Global datastore member.
[$sel:replicationGroupRegion:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | Indicates the role of the replication group, primary or secondary.
[$sel:role':GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | The replication group id of the Global datastore member.
[$sel:replicationGroupId:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | Indicates whether automatic failover is enabled for the replication
--   group.
[$sel:automaticFailover:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe AutomaticFailoverStatus

-- | Create a value of <a>GlobalReplicationGroupMember</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_status</a> - The status of the
--   membership of the replication group.
--   
--   <a>$sel:replicationGroupRegion:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupRegion</a> - The
--   Amazon region of the Global datastore member.
--   
--   <a>$sel:role':GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_role</a> - Indicates the role of the
--   replication group, primary or secondary.
--   
--   <a>$sel:replicationGroupId:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupId</a> - The
--   replication group id of the Global datastore member.
--   
--   <a>$sel:automaticFailover:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_automaticFailover</a> - Indicates
--   whether automatic failover is enabled for the replication group.
newGlobalReplicationGroupMember :: GlobalReplicationGroupMember

-- | The status of the membership of the replication group.
globalReplicationGroupMember_status :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The Amazon region of the Global datastore member.
globalReplicationGroupMember_replicationGroupRegion :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates the role of the replication group, primary or secondary.
globalReplicationGroupMember_role :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The replication group id of the Global datastore member.
globalReplicationGroupMember_replicationGroupId :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates whether automatic failover is enabled for the replication
--   group.
globalReplicationGroupMember_automaticFailover :: Lens' GlobalReplicationGroupMember (Maybe AutomaticFailoverStatus)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance GHC.Show.Show Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance GHC.Read.Read Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.GlobalReplicationGroupMember.GlobalReplicationGroupMember


module Amazonka.ElastiCache.Types.GlobalReplicationGroup

-- | Consists of a primary cluster that accepts writes and an associated
--   secondary cluster that resides in a different Amazon region. The
--   secondary cluster accepts only reads. The primary cluster
--   automatically replicates updates to the secondary cluster.
--   
--   <ul>
--   <li>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of
--   the Global datastore, which is what you use to associate a secondary
--   cluster.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGlobalReplicationGroup</a> smart constructor.
data GlobalReplicationGroup
GlobalReplicationGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe [GlobalReplicationGroupMember] -> Maybe Text -> Maybe Bool -> Maybe [GlobalNodeGroup] -> Maybe Text -> Maybe Text -> GlobalReplicationGroup

-- | The Elasticache Redis engine version.
[$sel:engineVersion:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The status of the Global datastore
[$sel:status:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The cache node type of the Global datastore
[$sel:cacheNodeType:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that indicates whether the Global datastore is cluster enabled.
[$sel:clusterEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
[$sel:atRestEncryptionEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | The ARN (Amazon Resource Name) of the global replication group.
[$sel:arn:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that enables in-transit encryption when set to true. You cannot
--   modify the value of <tt>TransitEncryptionEnabled</tt> after the
--   cluster is created. To enable in-transit encryption on a cluster you
--   must set <tt>TransitEncryptionEnabled</tt> to true when you create a
--   cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
[$sel:transitEncryptionEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | The replication groups that comprise the Global datastore.
[$sel:members:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe [GlobalReplicationGroupMember]

-- | The Elasticache engine. For Redis only.
[$sel:engine:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | Indicates the slot configuration and global identifier for each slice
--   group.
[$sel:globalNodeGroups:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe [GlobalNodeGroup]

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The optional description of the Global datastore
[$sel:globalReplicationGroupDescription:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | Create a value of <a>GlobalReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engineVersion</a> - The Elasticache Redis
--   engine version.
--   
--   <a>$sel:status:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_status</a> - The status of the Global
--   datastore
--   
--   <a>$sel:cacheNodeType:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_cacheNodeType</a> - The cache node type of
--   the Global datastore
--   
--   <a>$sel:clusterEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_clusterEnabled</a> - A flag that indicates
--   whether the Global datastore is cluster enabled.
--   
--   <a>$sel:atRestEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_atRestEncryptionEnabled</a> - A flag that
--   enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:arn:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_arn</a> - The ARN (Amazon Resource Name) of
--   the global replication group.
--   
--   <a>$sel:transitEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_transitEncryptionEnabled</a> - A flag that
--   enables in-transit encryption when set to true. You cannot modify the
--   value of <tt>TransitEncryptionEnabled</tt> after the cluster is
--   created. To enable in-transit encryption on a cluster you must set
--   <tt>TransitEncryptionEnabled</tt> to true when you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:members:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_members</a> - The replication groups that
--   comprise the Global datastore.
--   
--   <a>$sel:engine:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engine</a> - The Elasticache engine. For
--   Redis only.
--   
--   <a>$sel:authTokenEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_authTokenEnabled</a> - A flag that enables
--   using an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:globalNodeGroups:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalNodeGroups</a> - Indicates the slot
--   configuration and global identifier for each slice group.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupId</a> - The name of
--   the Global datastore
--   
--   <a>$sel:globalReplicationGroupDescription:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupDescription</a> - The
--   optional description of the Global datastore
newGlobalReplicationGroup :: GlobalReplicationGroup

-- | The Elasticache Redis engine version.
globalReplicationGroup_engineVersion :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The status of the Global datastore
globalReplicationGroup_status :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The cache node type of the Global datastore
globalReplicationGroup_cacheNodeType :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that indicates whether the Global datastore is cluster enabled.
globalReplicationGroup_clusterEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_atRestEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the global replication group.
globalReplicationGroup_arn :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to true. You cannot
--   modify the value of <tt>TransitEncryptionEnabled</tt> after the
--   cluster is created. To enable in-transit encryption on a cluster you
--   must set <tt>TransitEncryptionEnabled</tt> to true when you create a
--   cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_transitEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The replication groups that comprise the Global datastore.
globalReplicationGroup_members :: Lens' GlobalReplicationGroup (Maybe [GlobalReplicationGroupMember])

-- | The Elasticache engine. For Redis only.
globalReplicationGroup_engine :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
globalReplicationGroup_authTokenEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | Indicates the slot configuration and global identifier for each slice
--   group.
globalReplicationGroup_globalNodeGroups :: Lens' GlobalReplicationGroup (Maybe [GlobalNodeGroup])

-- | The name of the Global datastore
globalReplicationGroup_globalReplicationGroupId :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The optional description of the Global datastore
globalReplicationGroup_globalReplicationGroupDescription :: Lens' GlobalReplicationGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.GlobalReplicationGroup.GlobalReplicationGroup


module Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails

-- | The configuration details of the Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseDestinationDetails</a> smart
--   constructor.
data KinesisFirehoseDestinationDetails
KinesisFirehoseDestinationDetails' :: Maybe Text -> KinesisFirehoseDestinationDetails

-- | The name of the Kinesis Data Firehose delivery stream.
[$sel:deliveryStream:KinesisFirehoseDestinationDetails'] :: KinesisFirehoseDestinationDetails -> Maybe Text

-- | Create a value of <a>KinesisFirehoseDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:KinesisFirehoseDestinationDetails'</a>,
--   <a>kinesisFirehoseDestinationDetails_deliveryStream</a> - The name of
--   the Kinesis Data Firehose delivery stream.
newKinesisFirehoseDestinationDetails :: KinesisFirehoseDestinationDetails

-- | The name of the Kinesis Data Firehose delivery stream.
kinesisFirehoseDestinationDetails_deliveryStream :: Lens' KinesisFirehoseDestinationDetails (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance GHC.Show.Show Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance GHC.Read.Read Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.KinesisFirehoseDestinationDetails.KinesisFirehoseDestinationDetails


module Amazonka.ElastiCache.Types.DestinationDetails

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newDestinationDetails</a> smart constructor.
data DestinationDetails
DestinationDetails' :: Maybe CloudWatchLogsDestinationDetails -> Maybe KinesisFirehoseDestinationDetails -> DestinationDetails

-- | The configuration details of the CloudWatch Logs destination.
[$sel:cloudWatchLogsDetails:DestinationDetails'] :: DestinationDetails -> Maybe CloudWatchLogsDestinationDetails

-- | The configuration details of the Kinesis Data Firehose destination.
[$sel:kinesisFirehoseDetails:DestinationDetails'] :: DestinationDetails -> Maybe KinesisFirehoseDestinationDetails

-- | Create a value of <a>DestinationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogsDetails:DestinationDetails'</a>,
--   <a>destinationDetails_cloudWatchLogsDetails</a> - The configuration
--   details of the CloudWatch Logs destination.
--   
--   <a>$sel:kinesisFirehoseDetails:DestinationDetails'</a>,
--   <a>destinationDetails_kinesisFirehoseDetails</a> - The configuration
--   details of the Kinesis Data Firehose destination.
newDestinationDetails :: DestinationDetails

-- | The configuration details of the CloudWatch Logs destination.
destinationDetails_cloudWatchLogsDetails :: Lens' DestinationDetails (Maybe CloudWatchLogsDestinationDetails)

-- | The configuration details of the Kinesis Data Firehose destination.
destinationDetails_kinesisFirehoseDetails :: Lens' DestinationDetails (Maybe KinesisFirehoseDestinationDetails)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance GHC.Show.Show Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance GHC.Read.Read Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.DestinationDetails.DestinationDetails


module Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus
newtype LogDeliveryConfigurationStatus
LogDeliveryConfigurationStatus' :: Text -> LogDeliveryConfigurationStatus
[fromLogDeliveryConfigurationStatus] :: LogDeliveryConfigurationStatus -> Text
pattern LogDeliveryConfigurationStatus_Active :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Disabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Enabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Error :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Modifying :: LogDeliveryConfigurationStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.LogDeliveryConfigurationStatus.LogDeliveryConfigurationStatus


module Amazonka.ElastiCache.Types.LogFormat
newtype LogFormat
LogFormat' :: Text -> LogFormat
[fromLogFormat] :: LogFormat -> Text
pattern LogFormat_Json :: LogFormat
pattern LogFormat_Text :: LogFormat
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance GHC.Read.Read Amazonka.ElastiCache.Types.LogFormat.LogFormat
instance GHC.Show.Show Amazonka.ElastiCache.Types.LogFormat.LogFormat


module Amazonka.ElastiCache.Types.LogType
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Slow_log :: LogType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.LogType.LogType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.LogType.LogType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.LogType.LogType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.LogType.LogType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.LogType.LogType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.LogType.LogType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.LogType.LogType
instance GHC.Read.Read Amazonka.ElastiCache.Types.LogType.LogType
instance GHC.Show.Show Amazonka.ElastiCache.Types.LogType.LogType


module Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest

-- | Specifies the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfigurationRequest</a> smart
--   constructor.
data LogDeliveryConfigurationRequest
LogDeliveryConfigurationRequest' :: Maybe LogFormat -> Maybe Bool -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> LogDeliveryConfigurationRequest

-- | Specifies either JSON or TEXT
[$sel:logFormat:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe LogFormat

-- | Specify if log delivery is enabled. Default <tt>true</tt>.
[$sel:enabled:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe Bool

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe LogType

-- | Specify either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt>
--   as the destination type.
[$sel:destinationType:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe DestinationType

-- | Create a value of <a>LogDeliveryConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logFormat</a> - Specifies either
--   JSON or TEXT
--   
--   <a>$sel:enabled:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_enabled</a> - Specify if log
--   delivery is enabled. Default <tt>true</tt>.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationType</a> - Specify
--   either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt> as the
--   destination type.
newLogDeliveryConfigurationRequest :: LogDeliveryConfigurationRequest

-- | Specifies either JSON or TEXT
logDeliveryConfigurationRequest_logFormat :: Lens' LogDeliveryConfigurationRequest (Maybe LogFormat)

-- | Specify if log delivery is enabled. Default <tt>true</tt>.
logDeliveryConfigurationRequest_enabled :: Lens' LogDeliveryConfigurationRequest (Maybe Bool)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfigurationRequest_destinationDetails :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfigurationRequest_logType :: Lens' LogDeliveryConfigurationRequest (Maybe LogType)

-- | Specify either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt>
--   as the destination type.
logDeliveryConfigurationRequest_destinationType :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationType)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance GHC.Show.Show Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance GHC.Read.Read Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.LogDeliveryConfigurationRequest.LogDeliveryConfigurationRequest


module Amazonka.ElastiCache.Types.LogDeliveryConfiguration

-- | Returns the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfiguration</a> smart constructor.
data LogDeliveryConfiguration
LogDeliveryConfiguration' :: Maybe LogDeliveryConfigurationStatus -> Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> Maybe Text -> LogDeliveryConfiguration

-- | Returns the log delivery configuration status. Values are one of
--   <tt>enabling</tt> | <tt>disabling</tt> | <tt>modifying</tt> |
--   <tt>active</tt> | <tt>error</tt>
[$sel:status:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogDeliveryConfigurationStatus

-- | Returns the log format, either JSON or TEXT.
[$sel:logFormat:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogFormat

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogType

-- | Returns the destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
[$sel:destinationType:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe DestinationType

-- | Returns an error message for the log delivery configuration.
[$sel:message:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe Text

-- | Create a value of <a>LogDeliveryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_status</a> - Returns the log delivery
--   configuration status. Values are one of <tt>enabling</tt> |
--   <tt>disabling</tt> | <tt>modifying</tt> | <tt>active</tt> |
--   <tt>error</tt>
--   
--   <a>$sel:logFormat:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logFormat</a> - Returns the log format,
--   either JSON or TEXT.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationDetails</a> - Configuration
--   details of either a CloudWatch Logs destination or Kinesis Data
--   Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logType</a> - Refers to <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
--   
--   <a>$sel:message:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_message</a> - Returns an error message for
--   the log delivery configuration.
newLogDeliveryConfiguration :: LogDeliveryConfiguration

-- | Returns the log delivery configuration status. Values are one of
--   <tt>enabling</tt> | <tt>disabling</tt> | <tt>modifying</tt> |
--   <tt>active</tt> | <tt>error</tt>
logDeliveryConfiguration_status :: Lens' LogDeliveryConfiguration (Maybe LogDeliveryConfigurationStatus)

-- | Returns the log format, either JSON or TEXT.
logDeliveryConfiguration_logFormat :: Lens' LogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfiguration_destinationDetails :: Lens' LogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfiguration_logType :: Lens' LogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
logDeliveryConfiguration_destinationType :: Lens' LogDeliveryConfiguration (Maybe DestinationType)

-- | Returns an error message for the log delivery configuration.
logDeliveryConfiguration_message :: Lens' LogDeliveryConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.LogDeliveryConfiguration.LogDeliveryConfiguration


module Amazonka.ElastiCache.Types.MultiAZStatus
newtype MultiAZStatus
MultiAZStatus' :: Text -> MultiAZStatus
[fromMultiAZStatus] :: MultiAZStatus -> Text
pattern MultiAZStatus_Disabled :: MultiAZStatus
pattern MultiAZStatus_Enabled :: MultiAZStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.MultiAZStatus.MultiAZStatus


module Amazonka.ElastiCache.Types.NodeGroupConfiguration

-- | Node group (shard) configuration options. Each node group (shard)
--   configuration has the following: <tt>Slots</tt>,
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>.
--   
--   <i>See:</i> <a>newNodeGroupConfiguration</a> smart constructor.
data NodeGroupConfiguration
NodeGroupConfiguration' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> NodeGroupConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
[$sel:slots:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | The outpost ARN of the node replicas.
[$sel:replicaOutpostArns:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe [Text]

-- | The number of read replica nodes in this node group (shard).
[$sel:replicaCount:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Int

-- | The Availability Zone where the primary node of this node group
--   (shard) is launched.
[$sel:primaryAvailabilityZone:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | A list of Availability Zones to be used for the read replicas. The
--   number of Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
[$sel:replicaAvailabilityZones:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe [Text]

-- | The outpost ARN of the primary node.
[$sel:primaryOutpostArn:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
[$sel:nodeGroupId:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | Create a value of <a>NodeGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_slots</a> - A string that specifies the
--   keyspace for a particular node group. Keyspaces range from 0 to
--   16,383. The string is in the format <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
--   
--   <a>$sel:replicaOutpostArns:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaOutpostArns</a> - The outpost ARN of
--   the node replicas.
--   
--   <a>$sel:replicaCount:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaCount</a> - The number of read
--   replica nodes in this node group (shard).
--   
--   <a>$sel:primaryAvailabilityZone:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryAvailabilityZone</a> - The
--   Availability Zone where the primary node of this node group (shard) is
--   launched.
--   
--   <a>$sel:replicaAvailabilityZones:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaAvailabilityZones</a> - A list of
--   Availability Zones to be used for the read replicas. The number of
--   Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
--   
--   <a>$sel:primaryOutpostArn:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryOutpostArn</a> - The outpost ARN of
--   the primary node.
--   
--   <a>$sel:nodeGroupId:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_nodeGroupId</a> - Either the ElastiCache for
--   Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newNodeGroupConfiguration :: NodeGroupConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
nodeGroupConfiguration_slots :: Lens' NodeGroupConfiguration (Maybe Text)

-- | The outpost ARN of the node replicas.
nodeGroupConfiguration_replicaOutpostArns :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The number of read replica nodes in this node group (shard).
nodeGroupConfiguration_replicaCount :: Lens' NodeGroupConfiguration (Maybe Int)

-- | The Availability Zone where the primary node of this node group
--   (shard) is launched.
nodeGroupConfiguration_primaryAvailabilityZone :: Lens' NodeGroupConfiguration (Maybe Text)

-- | A list of Availability Zones to be used for the read replicas. The
--   number of Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
nodeGroupConfiguration_replicaAvailabilityZones :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The outpost ARN of the primary node.
nodeGroupConfiguration_primaryOutpostArn :: Lens' NodeGroupConfiguration (Maybe Text)

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
nodeGroupConfiguration_nodeGroupId :: Lens' NodeGroupConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.NodeGroupConfiguration.NodeGroupConfiguration


module Amazonka.ElastiCache.Types.NodeGroupMember

-- | Represents a single node within a node group (shard).
--   
--   <i>See:</i> <a>newNodeGroupMember</a> smart constructor.
data NodeGroupMember
NodeGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> NodeGroupMember

-- | The ID of the cluster to which the node belongs.
[$sel:cacheClusterId:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The ID of the node within its cluster. A node ID is a numeric
--   identifier (0001, 0002, etc.).
[$sel:cacheNodeId:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The name of the Availability Zone in which the node is located.
[$sel:preferredAvailabilityZone:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The role that is currently assigned to the node - <tt>primary</tt> or
--   <tt>replica</tt>. This member is only applicable for Redis (cluster
--   mode disabled) replication groups.
[$sel:currentRole:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The outpost ARN of the node group member.
[$sel:preferredOutpostArn:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The information required for client programs to connect to a node for
--   read operations. The read endpoint is only applicable on Redis
--   (cluster mode disabled) clusters.
[$sel:readEndpoint:NodeGroupMember'] :: NodeGroupMember -> Maybe Endpoint

-- | Create a value of <a>NodeGroupMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheClusterId</a> - The ID of the cluster to which
--   the node belongs.
--   
--   <a>$sel:cacheNodeId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheNodeId</a> - The ID of the node within its
--   cluster. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:preferredAvailabilityZone:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the node is located.
--   
--   <a>$sel:currentRole:NodeGroupMember'</a>,
--   <a>nodeGroupMember_currentRole</a> - The role that is currently
--   assigned to the node - <tt>primary</tt> or <tt>replica</tt>. This
--   member is only applicable for Redis (cluster mode disabled)
--   replication groups.
--   
--   <a>$sel:preferredOutpostArn:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredOutpostArn</a> - The outpost ARN of the
--   node group member.
--   
--   <a>$sel:readEndpoint:NodeGroupMember'</a>,
--   <a>nodeGroupMember_readEndpoint</a> - The information required for
--   client programs to connect to a node for read operations. The read
--   endpoint is only applicable on Redis (cluster mode disabled) clusters.
newNodeGroupMember :: NodeGroupMember

-- | The ID of the cluster to which the node belongs.
nodeGroupMember_cacheClusterId :: Lens' NodeGroupMember (Maybe Text)

-- | The ID of the node within its cluster. A node ID is a numeric
--   identifier (0001, 0002, etc.).
nodeGroupMember_cacheNodeId :: Lens' NodeGroupMember (Maybe Text)

-- | The name of the Availability Zone in which the node is located.
nodeGroupMember_preferredAvailabilityZone :: Lens' NodeGroupMember (Maybe Text)

-- | The role that is currently assigned to the node - <tt>primary</tt> or
--   <tt>replica</tt>. This member is only applicable for Redis (cluster
--   mode disabled) replication groups.
nodeGroupMember_currentRole :: Lens' NodeGroupMember (Maybe Text)

-- | The outpost ARN of the node group member.
nodeGroupMember_preferredOutpostArn :: Lens' NodeGroupMember (Maybe Text)

-- | The information required for client programs to connect to a node for
--   read operations. The read endpoint is only applicable on Redis
--   (cluster mode disabled) clusters.
nodeGroupMember_readEndpoint :: Lens' NodeGroupMember (Maybe Endpoint)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeGroupMember.NodeGroupMember


module Amazonka.ElastiCache.Types.NodeGroup

-- | Represents a collection of cache nodes in a replication group. One
--   node in the node group is the read/write primary node. All the other
--   nodes are read-only Replica nodes.
--   
--   <i>See:</i> <a>newNodeGroup</a> smart constructor.
data NodeGroup
NodeGroup' :: Maybe Text -> Maybe Endpoint -> Maybe Text -> Maybe [NodeGroupMember] -> Maybe Text -> Maybe Endpoint -> NodeGroup

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
[$sel:status:NodeGroup'] :: NodeGroup -> Maybe Text

-- | The endpoint of the primary node in this node group (shard).
[$sel:primaryEndpoint:NodeGroup'] :: NodeGroup -> Maybe Endpoint

-- | The keyspace for this node group (shard).
[$sel:slots:NodeGroup'] :: NodeGroup -> Maybe Text

-- | A list containing information about individual nodes within the node
--   group (shard).
[$sel:nodeGroupMembers:NodeGroup'] :: NodeGroup -> Maybe [NodeGroupMember]

-- | The identifier for the node group (shard). A Redis (cluster mode
--   disabled) replication group contains only 1 node group; therefore, the
--   node group ID is 0001. A Redis (cluster mode enabled) replication
--   group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,
--   the user can provide the id for a node group.
[$sel:nodeGroupId:NodeGroup'] :: NodeGroup -> Maybe Text

-- | The endpoint of the replica nodes in this node group (shard).
[$sel:readerEndpoint:NodeGroup'] :: NodeGroup -> Maybe Endpoint

-- | Create a value of <a>NodeGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeGroup'</a>, <a>nodeGroup_status</a> - The current
--   state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
--   
--   <a>$sel:primaryEndpoint:NodeGroup'</a>,
--   <a>nodeGroup_primaryEndpoint</a> - The endpoint of the primary node in
--   this node group (shard).
--   
--   <a>$sel:slots:NodeGroup'</a>, <a>nodeGroup_slots</a> - The keyspace
--   for this node group (shard).
--   
--   <a>$sel:nodeGroupMembers:NodeGroup'</a>,
--   <a>nodeGroup_nodeGroupMembers</a> - A list containing information
--   about individual nodes within the node group (shard).
--   
--   <a>$sel:nodeGroupId:NodeGroup'</a>, <a>nodeGroup_nodeGroupId</a> - The
--   identifier for the node group (shard). A Redis (cluster mode disabled)
--   replication group contains only 1 node group; therefore, the node
--   group ID is 0001. A Redis (cluster mode enabled) replication group
--   contains 1 to 90 node groups numbered 0001 to 0090. Optionally, the
--   user can provide the id for a node group.
--   
--   <a>$sel:readerEndpoint:NodeGroup'</a>, <a>nodeGroup_readerEndpoint</a>
--   - The endpoint of the replica nodes in this node group (shard).
newNodeGroup :: NodeGroup

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
nodeGroup_status :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the primary node in this node group (shard).
nodeGroup_primaryEndpoint :: Lens' NodeGroup (Maybe Endpoint)

-- | The keyspace for this node group (shard).
nodeGroup_slots :: Lens' NodeGroup (Maybe Text)

-- | A list containing information about individual nodes within the node
--   group (shard).
nodeGroup_nodeGroupMembers :: Lens' NodeGroup (Maybe [NodeGroupMember])

-- | The identifier for the node group (shard). A Redis (cluster mode
--   disabled) replication group contains only 1 node group; therefore, the
--   node group ID is 0001. A Redis (cluster mode enabled) replication
--   group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,
--   the user can provide the id for a node group.
nodeGroup_nodeGroupId :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the replica nodes in this node group (shard).
nodeGroup_readerEndpoint :: Lens' NodeGroup (Maybe Endpoint)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeGroup.NodeGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeGroup.NodeGroup


module Amazonka.ElastiCache.Types.NodeSnapshot

-- | Represents an individual cache node in a snapshot of a cluster.
--   
--   <i>See:</i> <a>newNodeSnapshot</a> smart constructor.
data NodeSnapshot
NodeSnapshot' :: Maybe NodeGroupConfiguration -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> NodeSnapshot

-- | The configuration for the source node group (shard).
[$sel:nodeGroupConfiguration:NodeSnapshot'] :: NodeSnapshot -> Maybe NodeGroupConfiguration

-- | The date and time when the cache node was created in the source
--   cluster.
[$sel:cacheNodeCreateTime:NodeSnapshot'] :: NodeSnapshot -> Maybe ISO8601

-- | A unique identifier for the source cluster.
[$sel:cacheClusterId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | The cache node identifier for the node in the source cluster.
[$sel:cacheNodeId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | A unique identifier for the source node group (shard).
[$sel:nodeGroupId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | The date and time when the source node's metadata and cache data set
--   was obtained for the snapshot.
[$sel:snapshotCreateTime:NodeSnapshot'] :: NodeSnapshot -> Maybe ISO8601

-- | The size of the cache on the source cache node.
[$sel:cacheSize:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | Create a value of <a>NodeSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupConfiguration:NodeSnapshot'</a>,
--   <a>nodeSnapshot_nodeGroupConfiguration</a> - The configuration for the
--   source node group (shard).
--   
--   <a>$sel:cacheNodeCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created in the source cluster.
--   
--   <a>$sel:cacheClusterId:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheClusterId</a> - A unique identifier for the
--   source cluster.
--   
--   <a>$sel:cacheNodeId:NodeSnapshot'</a>, <a>nodeSnapshot_cacheNodeId</a>
--   - The cache node identifier for the node in the source cluster.
--   
--   <a>$sel:nodeGroupId:NodeSnapshot'</a>, <a>nodeSnapshot_nodeGroupId</a>
--   - A unique identifier for the source node group (shard).
--   
--   <a>$sel:snapshotCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_snapshotCreateTime</a> - The date and time when the
--   source node's metadata and cache data set was obtained for the
--   snapshot.
--   
--   <a>$sel:cacheSize:NodeSnapshot'</a>, <a>nodeSnapshot_cacheSize</a> -
--   The size of the cache on the source cache node.
newNodeSnapshot :: NodeSnapshot

-- | The configuration for the source node group (shard).
nodeSnapshot_nodeGroupConfiguration :: Lens' NodeSnapshot (Maybe NodeGroupConfiguration)

-- | The date and time when the cache node was created in the source
--   cluster.
nodeSnapshot_cacheNodeCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | A unique identifier for the source cluster.
nodeSnapshot_cacheClusterId :: Lens' NodeSnapshot (Maybe Text)

-- | The cache node identifier for the node in the source cluster.
nodeSnapshot_cacheNodeId :: Lens' NodeSnapshot (Maybe Text)

-- | A unique identifier for the source node group (shard).
nodeSnapshot_nodeGroupId :: Lens' NodeSnapshot (Maybe Text)

-- | The date and time when the source node's metadata and cache data set
--   was obtained for the snapshot.
nodeSnapshot_snapshotCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | The size of the cache on the source cache node.
nodeSnapshot_cacheSize :: Lens' NodeSnapshot (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeSnapshot.NodeSnapshot


module Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy
newtype NodeUpdateInitiatedBy
NodeUpdateInitiatedBy' :: Text -> NodeUpdateInitiatedBy
[fromNodeUpdateInitiatedBy] :: NodeUpdateInitiatedBy -> Text
pattern NodeUpdateInitiatedBy_Customer :: NodeUpdateInitiatedBy
pattern NodeUpdateInitiatedBy_System :: NodeUpdateInitiatedBy
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeUpdateInitiatedBy.NodeUpdateInitiatedBy


module Amazonka.ElastiCache.Types.NodeUpdateStatus
newtype NodeUpdateStatus
NodeUpdateStatus' :: Text -> NodeUpdateStatus
[fromNodeUpdateStatus] :: NodeUpdateStatus -> Text
pattern NodeUpdateStatus_Complete :: NodeUpdateStatus
pattern NodeUpdateStatus_In_progress :: NodeUpdateStatus
pattern NodeUpdateStatus_Not_applied :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopped :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopping :: NodeUpdateStatus
pattern NodeUpdateStatus_Waiting_to_start :: NodeUpdateStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeUpdateStatus.NodeUpdateStatus


module Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus

-- | The status of the service update on the node group member
--   
--   <i>See:</i> <a>newNodeGroupMemberUpdateStatus</a> smart constructor.
data NodeGroupMemberUpdateStatus
NodeGroupMemberUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> NodeGroupMemberUpdateStatus

-- | The end date of the update for a node
[$sel:nodeUpdateEndDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
[$sel:nodeUpdateInitiatedBy:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe NodeUpdateInitiatedBy

-- | The date when the NodeUpdateStatus was last modified
[$sel:nodeUpdateStatusModifiedDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The cache cluster ID
[$sel:cacheClusterId:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe Text

-- | The node ID of the cache cluster
[$sel:cacheNodeId:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe Text

-- | The date when the update is triggered
[$sel:nodeUpdateInitiatedDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The start date of the update for a node
[$sel:nodeUpdateStartDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The update status of the node
[$sel:nodeUpdateStatus:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe NodeUpdateStatus

-- | The deletion date of the node
[$sel:nodeDeletionDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | Create a value of <a>NodeGroupMemberUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateEndDate</a> - The end date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects
--   whether the update was initiated by the customer or automatically
--   applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate</a> - The
--   date when the NodeUpdateStatus was last modified
--   
--   <a>$sel:cacheClusterId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheClusterId</a> - The cache cluster
--   ID
--   
--   <a>$sel:cacheNodeId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheNodeId</a> - The node ID of the
--   cache cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate</a> - The date
--   when the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStartDate</a> - The start
--   date of the update for a node
--   
--   <a>$sel:nodeUpdateStatus:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatus</a> - The update
--   status of the node
--   
--   <a>$sel:nodeDeletionDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeDeletionDate</a> - The deletion
--   date of the node
newNodeGroupMemberUpdateStatus :: NodeGroupMemberUpdateStatus

-- | The end date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateEndDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified
nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The cache cluster ID
nodeGroupMemberUpdateStatus_cacheClusterId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The node ID of the cache cluster
nodeGroupMemberUpdateStatus_cacheNodeId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The date when the update is triggered
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateStartDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The update status of the node
nodeGroupMemberUpdateStatus_nodeUpdateStatus :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
nodeGroupMemberUpdateStatus_nodeDeletionDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeGroupMemberUpdateStatus.NodeGroupMemberUpdateStatus


module Amazonka.ElastiCache.Types.NodeGroupUpdateStatus

-- | The status of the service update on the node group
--   
--   <i>See:</i> <a>newNodeGroupUpdateStatus</a> smart constructor.
data NodeGroupUpdateStatus
NodeGroupUpdateStatus' :: Maybe [NodeGroupMemberUpdateStatus] -> Maybe Text -> NodeGroupUpdateStatus

-- | The status of the service update on the node group member
[$sel:nodeGroupMemberUpdateStatus:NodeGroupUpdateStatus'] :: NodeGroupUpdateStatus -> Maybe [NodeGroupMemberUpdateStatus]

-- | The ID of the node group
[$sel:nodeGroupId:NodeGroupUpdateStatus'] :: NodeGroupUpdateStatus -> Maybe Text

-- | Create a value of <a>NodeGroupUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupMemberUpdateStatus:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus</a> - The status
--   of the service update on the node group member
--   
--   <a>$sel:nodeGroupId:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupId</a> - The ID of the node group
newNodeGroupUpdateStatus :: NodeGroupUpdateStatus

-- | The status of the service update on the node group member
nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus :: Lens' NodeGroupUpdateStatus (Maybe [NodeGroupMemberUpdateStatus])

-- | The ID of the node group
nodeGroupUpdateStatus_nodeGroupId :: Lens' NodeGroupUpdateStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NodeGroupUpdateStatus.NodeGroupUpdateStatus


module Amazonka.ElastiCache.Types.CacheNodeUpdateStatus

-- | The status of the service update on the cache node
--   
--   <i>See:</i> <a>newCacheNodeUpdateStatus</a> smart constructor.
data CacheNodeUpdateStatus
CacheNodeUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> CacheNodeUpdateStatus

-- | The end date of the update for a node
[$sel:nodeUpdateEndDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
[$sel:nodeUpdateInitiatedBy:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe NodeUpdateInitiatedBy

-- | The date when the NodeUpdateStatus was last modified&gt;
[$sel:nodeUpdateStatusModifiedDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The node ID of the cache cluster
[$sel:cacheNodeId:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe Text

-- | The date when the update is triggered
[$sel:nodeUpdateInitiatedDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The start date of the update for a node
[$sel:nodeUpdateStartDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The update status of the node
[$sel:nodeUpdateStatus:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe NodeUpdateStatus

-- | The deletion date of the node
[$sel:nodeDeletionDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | Create a value of <a>CacheNodeUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateEndDate</a> - The end date of the
--   update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects whether
--   the update was initiated by the customer or automatically applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate</a> - The date
--   when the NodeUpdateStatus was last modified&gt;
--   
--   <a>$sel:cacheNodeId:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_cacheNodeId</a> - The node ID of the cache
--   cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedDate</a> - The date when
--   the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStartDate</a> - The start date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateStatus:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatus</a> - The update status of
--   the node
--   
--   <a>$sel:nodeDeletionDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeDeletionDate</a> - The deletion date of
--   the node
newCacheNodeUpdateStatus :: CacheNodeUpdateStatus

-- | The end date of the update for a node
cacheNodeUpdateStatus_nodeUpdateEndDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
cacheNodeUpdateStatus_nodeUpdateInitiatedBy :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified&gt;
cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The node ID of the cache cluster
cacheNodeUpdateStatus_cacheNodeId :: Lens' CacheNodeUpdateStatus (Maybe Text)

-- | The date when the update is triggered
cacheNodeUpdateStatus_nodeUpdateInitiatedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
cacheNodeUpdateStatus_nodeUpdateStartDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The update status of the node
cacheNodeUpdateStatus_nodeUpdateStatus :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
cacheNodeUpdateStatus_nodeDeletionDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheNodeUpdateStatus.CacheNodeUpdateStatus


module Amazonka.ElastiCache.Types.NotificationConfiguration

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | The current state of the topic.
[$sel:topicStatus:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) that identifies the topic.
[$sel:topicArn:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | The current state of the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.NotificationConfiguration.NotificationConfiguration


module Amazonka.ElastiCache.Types.OutpostMode
newtype OutpostMode
OutpostMode' :: Text -> OutpostMode
[fromOutpostMode] :: OutpostMode -> Text
pattern OutpostMode_Cross_outpost :: OutpostMode
pattern OutpostMode_Single_outpost :: OutpostMode
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance GHC.Read.Read Amazonka.ElastiCache.Types.OutpostMode.OutpostMode
instance GHC.Show.Show Amazonka.ElastiCache.Types.OutpostMode.OutpostMode


module Amazonka.ElastiCache.Types.Parameter

-- | Describes an individual setting that controls some aspect of
--   ElastiCache behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> Parameter

-- | The value of the parameter.
[$sel:parameterValue:Parameter'] :: Parameter -> Maybe Text

-- | The earliest cache engine version to which the parameter can apply.
[$sel:minimumEngineVersion:Parameter'] :: Parameter -> Maybe Text

-- | The source of the parameter.
[$sel:source:Parameter'] :: Parameter -> Maybe Text

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
[$sel:isModifiable:Parameter'] :: Parameter -> Maybe Bool

-- | The valid data type for the parameter.
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter.
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
[$sel:changeType:Parameter'] :: Parameter -> Maybe ChangeType

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value of the parameter.
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest cache engine
--   version to which the parameter can apply.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - The source of
--   the parameter.
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The valid
--   data type for the parameter.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter.
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> -
--   Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
newParameter :: Parameter

-- | The value of the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | The earliest cache engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The source of the parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
parameter_isModifiable :: Lens' Parameter (Maybe Bool)

-- | The valid data type for the parameter.
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter.
parameter_description :: Lens' Parameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Parameter.Parameter
instance GHC.Show.Show Amazonka.ElastiCache.Types.Parameter.Parameter
instance GHC.Read.Read Amazonka.ElastiCache.Types.Parameter.Parameter
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Parameter.Parameter
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Parameter.Parameter
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Parameter.Parameter
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Parameter.Parameter


module Amazonka.ElastiCache.Types.EngineDefaults

-- | Represents the output of a <tt>DescribeEngineDefaultParameters</tt>
--   operation.
--   
--   <i>See:</i> <a>newEngineDefaults</a> smart constructor.
data EngineDefaults
EngineDefaults' :: Maybe Text -> Maybe [CacheNodeTypeSpecificParameter] -> Maybe Text -> Maybe [Parameter] -> EngineDefaults

-- | Specifies the name of the cache parameter group family to which the
--   engine default parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:EngineDefaults'] :: EngineDefaults -> Maybe Text

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
[$sel:cacheNodeTypeSpecificParameters:EngineDefaults'] :: EngineDefaults -> Maybe [CacheNodeTypeSpecificParameter]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:EngineDefaults'] :: EngineDefaults -> Maybe Text

-- | Contains a list of engine default parameters.
[$sel:parameters:EngineDefaults'] :: EngineDefaults -> Maybe [Parameter]

-- | Create a value of <a>EngineDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:EngineDefaults'</a>,
--   <a>engineDefaults_cacheParameterGroupFamily</a> - Specifies the name
--   of the cache parameter group family to which the engine default
--   parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheNodeTypeSpecificParameters:EngineDefaults'</a>,
--   <a>engineDefaults_cacheNodeTypeSpecificParameters</a> - A list of
--   parameters specific to a particular cache node type. Each element in
--   the list contains detailed information about one parameter.
--   
--   <a>$sel:marker:EngineDefaults'</a>, <a>engineDefaults_marker</a> -
--   Provides an identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:EngineDefaults'</a>,
--   <a>engineDefaults_parameters</a> - Contains a list of engine default
--   parameters.
newEngineDefaults :: EngineDefaults

-- | Specifies the name of the cache parameter group family to which the
--   engine default parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
engineDefaults_cacheParameterGroupFamily :: Lens' EngineDefaults (Maybe Text)

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
engineDefaults_cacheNodeTypeSpecificParameters :: Lens' EngineDefaults (Maybe [CacheNodeTypeSpecificParameter])

-- | Provides an identifier to allow retrieval of paginated results.
engineDefaults_marker :: Lens' EngineDefaults (Maybe Text)

-- | Contains a list of engine default parameters.
engineDefaults_parameters :: Lens' EngineDefaults (Maybe [Parameter])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance GHC.Show.Show Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance GHC.Read.Read Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.EngineDefaults.EngineDefaults


module Amazonka.ElastiCache.Types.ParameterNameValue

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter.
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance GHC.Show.Show Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance GHC.Read.Read Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ParameterNameValue.ParameterNameValue


module Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus
newtype PendingAutomaticFailoverStatus
PendingAutomaticFailoverStatus' :: Text -> PendingAutomaticFailoverStatus
[fromPendingAutomaticFailoverStatus] :: PendingAutomaticFailoverStatus -> Text
pattern PendingAutomaticFailoverStatus_Disabled :: PendingAutomaticFailoverStatus
pattern PendingAutomaticFailoverStatus_Enabled :: PendingAutomaticFailoverStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.PendingAutomaticFailoverStatus.PendingAutomaticFailoverStatus


module Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration

-- | The log delivery configurations being modified
--   
--   <i>See:</i> <a>newPendingLogDeliveryConfiguration</a> smart
--   constructor.
data PendingLogDeliveryConfiguration
PendingLogDeliveryConfiguration' :: Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> PendingLogDeliveryConfiguration

-- | Returns the log format, either JSON or TEXT
[$sel:logFormat:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe LogFormat

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe LogType

-- | Returns the destination type, either CloudWatch Logs or Kinesis Data
--   Firehose.
[$sel:destinationType:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe DestinationType

-- | Create a value of <a>PendingLogDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logFormat</a> - Returns the log
--   format, either JSON or TEXT
--   
--   <a>$sel:destinationDetails:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either CloudWatch Logs or Kinesis Data Firehose.
newPendingLogDeliveryConfiguration :: PendingLogDeliveryConfiguration

-- | Returns the log format, either JSON or TEXT
pendingLogDeliveryConfiguration_logFormat :: Lens' PendingLogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
pendingLogDeliveryConfiguration_destinationDetails :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
pendingLogDeliveryConfiguration_logType :: Lens' PendingLogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either CloudWatch Logs or Kinesis Data
--   Firehose.
pendingLogDeliveryConfiguration_destinationType :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationType)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.PendingLogDeliveryConfiguration.PendingLogDeliveryConfiguration


module Amazonka.ElastiCache.Types.PendingModifiedValues

-- | A group of settings that are applied to the cluster in the future, or
--   that are currently being applied.
--   
--   <i>See:</i> <a>newPendingModifiedValues</a> smart constructor.
data PendingModifiedValues
PendingModifiedValues' :: Maybe Text -> Maybe Text -> Maybe AuthTokenUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe [Text] -> Maybe Int -> PendingModifiedValues

-- | The new cache engine version that the cluster runs.
[$sel:engineVersion:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Text

-- | The cache node type that this cluster or replication group is scaled
--   to.
[$sel:cacheNodeType:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Text

-- | The auth token status
[$sel:authTokenStatus:PendingModifiedValues'] :: PendingModifiedValues -> Maybe AuthTokenUpdateStatus

-- | The log delivery configurations being modified
[$sel:logDeliveryConfigurations:PendingModifiedValues'] :: PendingModifiedValues -> Maybe [PendingLogDeliveryConfiguration]

-- | A list of cache node IDs that are being removed (or will be removed)
--   from the cluster. A node ID is a 4-digit numeric identifier (0001,
--   0002, etc.).
[$sel:cacheNodeIdsToRemove:PendingModifiedValues'] :: PendingModifiedValues -> Maybe [Text]

-- | The new number of cache nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Int

-- | Create a value of <a>PendingModifiedValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_engineVersion</a> - The new cache engine
--   version that the cluster runs.
--   
--   <a>$sel:cacheNodeType:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeType</a> - The cache node type that
--   this cluster or replication group is scaled to.
--   
--   <a>$sel:authTokenStatus:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_authTokenStatus</a> - The auth token status
--   
--   <a>$sel:logDeliveryConfigurations:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_logDeliveryConfigurations</a> - The log
--   delivery configurations being modified
--   
--   <a>$sel:cacheNodeIdsToRemove:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeIdsToRemove</a> - A list of cache
--   node IDs that are being removed (or will be removed) from the cluster.
--   A node ID is a 4-digit numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:numCacheNodes:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_numCacheNodes</a> - The new number of cache
--   nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newPendingModifiedValues :: PendingModifiedValues

-- | The new cache engine version that the cluster runs.
pendingModifiedValues_engineVersion :: Lens' PendingModifiedValues (Maybe Text)

-- | The cache node type that this cluster or replication group is scaled
--   to.
pendingModifiedValues_cacheNodeType :: Lens' PendingModifiedValues (Maybe Text)

-- | The auth token status
pendingModifiedValues_authTokenStatus :: Lens' PendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The log delivery configurations being modified
pendingModifiedValues_logDeliveryConfigurations :: Lens' PendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | A list of cache node IDs that are being removed (or will be removed)
--   from the cluster. A node ID is a 4-digit numeric identifier (0001,
--   0002, etc.).
pendingModifiedValues_cacheNodeIdsToRemove :: Lens' PendingModifiedValues (Maybe [Text])

-- | The new number of cache nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
pendingModifiedValues_numCacheNodes :: Lens' PendingModifiedValues (Maybe Int)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance GHC.Show.Show Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance GHC.Read.Read Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.PendingModifiedValues.PendingModifiedValues


module Amazonka.ElastiCache.Types.RecurringCharge

-- | Contains the specific price and frequency of a recurring charges for a
--   reserved cache node, or for a reserved cache node offering.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe Text -> Maybe Double -> RecurringCharge

-- | The frequency of the recurring charge.
[$sel:recurringChargeFrequency:RecurringCharge'] :: RecurringCharge -> Maybe Text

-- | The monetary amount of the recurring charge.
[$sel:recurringChargeAmount:RecurringCharge'] :: RecurringCharge -> Maybe Double

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recurringChargeFrequency:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeFrequency</a> - The frequency of the
--   recurring charge.
--   
--   <a>$sel:recurringChargeAmount:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeAmount</a> - The monetary amount of
--   the recurring charge.
newRecurringCharge :: RecurringCharge

-- | The frequency of the recurring charge.
recurringCharge_recurringChargeFrequency :: Lens' RecurringCharge (Maybe Text)

-- | The monetary amount of the recurring charge.
recurringCharge_recurringChargeAmount :: Lens' RecurringCharge (Maybe Double)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance GHC.Show.Show Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance GHC.Read.Read Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.RecurringCharge.RecurringCharge


module Amazonka.ElastiCache.Types.ReservedCacheNode

-- | Represents the output of a <tt>PurchaseReservedCacheNodesOffering</tt>
--   operation.
--   
--   <i>See:</i> <a>newReservedCacheNode</a> smart constructor.
data ReservedCacheNode
ReservedCacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNode

-- | The cache node type for the reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The state of the reserved cache node.
[$sel:state:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The time the reservation started.
[$sel:startTime:ReservedCacheNode'] :: ReservedCacheNode -> Maybe ISO8601

-- | The description of the reserved cache node.
[$sel:productDescription:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The Amazon Resource Name (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
[$sel:reservationARN:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The number of cache nodes that have been reserved.
[$sel:cacheNodeCount:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Int

-- | The unique identifier for the reservation.
[$sel:reservedCacheNodeId:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The recurring price charged to run this reserved cache node.
[$sel:recurringCharges:ReservedCacheNode'] :: ReservedCacheNode -> Maybe [RecurringCharge]

-- | The offering type of this reserved cache node.
[$sel:offeringType:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The hourly price charged for this reserved cache node.
[$sel:usagePrice:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Double

-- | The fixed price charged for this reserved cache node.
[$sel:fixedPrice:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Double

-- | The duration of the reservation in seconds.
[$sel:duration:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Int

-- | The offering identifier.
[$sel:reservedCacheNodesOfferingId:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | Create a value of <a>ReservedCacheNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeType</a> - The cache node type for the
--   reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:state:ReservedCacheNode'</a>, <a>reservedCacheNode_state</a> -
--   The state of the reserved cache node.
--   
--   <a>$sel:startTime:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_startTime</a> - The time the reservation started.
--   
--   <a>$sel:productDescription:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_productDescription</a> - The description of the
--   reserved cache node.
--   
--   <a>$sel:reservationARN:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservationARN</a> - The Amazon Resource Name
--   (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
--   
--   <a>$sel:cacheNodeCount:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeCount</a> - The number of cache nodes
--   that have been reserved.
--   
--   <a>$sel:reservedCacheNodeId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodeId</a> - The unique identifier
--   for the reservation.
--   
--   <a>$sel:recurringCharges:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_recurringCharges</a> - The recurring price
--   charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_offeringType</a> - The offering type of this
--   reserved cache node.
--   
--   <a>$sel:usagePrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_usagePrice</a> - The hourly price charged for
--   this reserved cache node.
--   
--   <a>$sel:fixedPrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_fixedPrice</a> - The fixed price charged for this
--   reserved cache node.
--   
--   <a>$sel:duration:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_duration</a> - The duration of the reservation in
--   seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodesOfferingId</a> - The offering
--   identifier.
newReservedCacheNode :: ReservedCacheNode

-- | The cache node type for the reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNode_cacheNodeType :: Lens' ReservedCacheNode (Maybe Text)

-- | The state of the reserved cache node.
reservedCacheNode_state :: Lens' ReservedCacheNode (Maybe Text)

-- | The time the reservation started.
reservedCacheNode_startTime :: Lens' ReservedCacheNode (Maybe UTCTime)

-- | The description of the reserved cache node.
reservedCacheNode_productDescription :: Lens' ReservedCacheNode (Maybe Text)

-- | The Amazon Resource Name (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
reservedCacheNode_reservationARN :: Lens' ReservedCacheNode (Maybe Text)

-- | The number of cache nodes that have been reserved.
reservedCacheNode_cacheNodeCount :: Lens' ReservedCacheNode (Maybe Int)

-- | The unique identifier for the reservation.
reservedCacheNode_reservedCacheNodeId :: Lens' ReservedCacheNode (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNode_recurringCharges :: Lens' ReservedCacheNode (Maybe [RecurringCharge])

-- | The offering type of this reserved cache node.
reservedCacheNode_offeringType :: Lens' ReservedCacheNode (Maybe Text)

-- | The hourly price charged for this reserved cache node.
reservedCacheNode_usagePrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The fixed price charged for this reserved cache node.
reservedCacheNode_fixedPrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The duration of the reservation in seconds.
reservedCacheNode_duration :: Lens' ReservedCacheNode (Maybe Int)

-- | The offering identifier.
reservedCacheNode_reservedCacheNodesOfferingId :: Lens' ReservedCacheNode (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReservedCacheNode.ReservedCacheNode


module Amazonka.ElastiCache.Types.ReservedCacheNodesOffering

-- | Describes all of the attributes of a reserved cache node offering.
--   
--   <i>See:</i> <a>newReservedCacheNodesOffering</a> smart constructor.
data ReservedCacheNodesOffering
ReservedCacheNodesOffering' :: Maybe Text -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNodesOffering

-- | The cache node type for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The cache engine used by the offering.
[$sel:productDescription:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The recurring price charged to run this reserved cache node.
[$sel:recurringCharges:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe [RecurringCharge]

-- | The offering type.
[$sel:offeringType:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The hourly price charged for this offering.
[$sel:usagePrice:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Double

-- | The fixed price charged for this offering.
[$sel:fixedPrice:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Double

-- | The duration of the offering. in seconds.
[$sel:duration:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Int

-- | A unique identifier for the reserved cache node offering.
[$sel:reservedCacheNodesOfferingId:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | Create a value of <a>ReservedCacheNodesOffering</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_cacheNodeType</a> - The cache node type
--   for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_productDescription</a> - The cache
--   engine used by the offering.
--   
--   <a>$sel:recurringCharges:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_recurringCharges</a> - The recurring
--   price charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_offeringType</a> - The offering type.
--   
--   <a>$sel:usagePrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_usagePrice</a> - The hourly price
--   charged for this offering.
--   
--   <a>$sel:fixedPrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_fixedPrice</a> - The fixed price charged
--   for this offering.
--   
--   <a>$sel:duration:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_duration</a> - The duration of the
--   offering. in seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_reservedCacheNodesOfferingId</a> - A
--   unique identifier for the reserved cache node offering.
newReservedCacheNodesOffering :: ReservedCacheNodesOffering

-- | The cache node type for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNodesOffering_cacheNodeType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The cache engine used by the offering.
reservedCacheNodesOffering_productDescription :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNodesOffering_recurringCharges :: Lens' ReservedCacheNodesOffering (Maybe [RecurringCharge])

-- | The offering type.
reservedCacheNodesOffering_offeringType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The hourly price charged for this offering.
reservedCacheNodesOffering_usagePrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The fixed price charged for this offering.
reservedCacheNodesOffering_fixedPrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The duration of the offering. in seconds.
reservedCacheNodesOffering_duration :: Lens' ReservedCacheNodesOffering (Maybe Int)

-- | A unique identifier for the reserved cache node offering.
reservedCacheNodesOffering_reservedCacheNodesOfferingId :: Lens' ReservedCacheNodesOffering (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReservedCacheNodesOffering.ReservedCacheNodesOffering


module Amazonka.ElastiCache.Types.ReshardingConfiguration

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
--   
--   <i>See:</i> <a>newReshardingConfiguration</a> smart constructor.
data ReshardingConfiguration
ReshardingConfiguration' :: Maybe [Text] -> Maybe Text -> ReshardingConfiguration

-- | A list of preferred availability zones for the nodes in this cluster.
[$sel:preferredAvailabilityZones:ReshardingConfiguration'] :: ReshardingConfiguration -> Maybe [Text]

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
[$sel:nodeGroupId:ReshardingConfiguration'] :: ReshardingConfiguration -> Maybe Text

-- | Create a value of <a>ReshardingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_preferredAvailabilityZones</a> - A list of
--   preferred availability zones for the nodes in this cluster.
--   
--   <a>$sel:nodeGroupId:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_nodeGroupId</a> - Either the ElastiCache
--   for Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newReshardingConfiguration :: ReshardingConfiguration

-- | A list of preferred availability zones for the nodes in this cluster.
reshardingConfiguration_preferredAvailabilityZones :: Lens' ReshardingConfiguration (Maybe [Text])

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
reshardingConfiguration_nodeGroupId :: Lens' ReshardingConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ReshardingConfiguration.ReshardingConfiguration


module Amazonka.ElastiCache.Types.RegionalConfiguration

-- | A list of the replication groups
--   
--   <i>See:</i> <a>newRegionalConfiguration</a> smart constructor.
data RegionalConfiguration
RegionalConfiguration' :: Text -> Text -> [ReshardingConfiguration] -> RegionalConfiguration

-- | The name of the secondary cluster
[$sel:replicationGroupId:RegionalConfiguration'] :: RegionalConfiguration -> Text

-- | The Amazon region where the cluster is stored
[$sel:replicationGroupRegion:RegionalConfiguration'] :: RegionalConfiguration -> Text

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
[$sel:reshardingConfiguration:RegionalConfiguration'] :: RegionalConfiguration -> [ReshardingConfiguration]

-- | Create a value of <a>RegionalConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupId</a> - The name of the
--   secondary cluster
--   
--   <a>$sel:replicationGroupRegion:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupRegion</a> - The Amazon
--   region where the cluster is stored
--   
--   <a>$sel:reshardingConfiguration:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_reshardingConfiguration</a> - A list of
--   <tt>PreferredAvailabilityZones</tt> objects that specifies the
--   configuration of a node group in the resharded cluster.
newRegionalConfiguration :: Text -> Text -> RegionalConfiguration

-- | The name of the secondary cluster
regionalConfiguration_replicationGroupId :: Lens' RegionalConfiguration Text

-- | The Amazon region where the cluster is stored
regionalConfiguration_replicationGroupRegion :: Lens' RegionalConfiguration Text

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
regionalConfiguration_reshardingConfiguration :: Lens' RegionalConfiguration [ReshardingConfiguration]
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.RegionalConfiguration.RegionalConfiguration


module Amazonka.ElastiCache.Types.SecurityGroupMembership

-- | Represents a single cache security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of the cache security group membership. The status changes
--   whenever a cache security group is modified, or when the cache
--   security groups assigned to a cluster are modified.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The identifier of the cache security group.
[$sel:securityGroupId:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the cache
--   security group membership. The status changes whenever a cache
--   security group is modified, or when the cache security groups assigned
--   to a cluster are modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   cache security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of the cache security group membership. The status changes
--   whenever a cache security group is modified, or when the cache
--   security groups assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the cache security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Show.Show Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Read.Read Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.SecurityGroupMembership.SecurityGroupMembership


module Amazonka.ElastiCache.Types.CacheCluster

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCacheCluster</a> smart constructor.
data CacheCluster
CacheCluster' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [CacheNode] -> Maybe ISO8601 -> Maybe Bool -> Maybe Bool -> Maybe [SecurityGroupMembership] -> Maybe NotificationConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Text -> Maybe [CacheSecurityGroupMembership] -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CacheParameterGroupStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe PendingModifiedValues -> Maybe Int -> CacheCluster

-- | The date the auth token was last modified
[$sel:authTokenLastModifiedDate:CacheCluster'] :: CacheCluster -> Maybe ISO8601

-- | The version of the cache engine that is used in this cluster.
[$sel:engineVersion:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the compute and memory capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A list of cache nodes that are members of the cluster.
[$sel:cacheNodes:CacheCluster'] :: CacheCluster -> Maybe [CacheNode]

-- | The date and time when the cluster was created.
[$sel:cacheClusterCreateTime:CacheCluster'] :: CacheCluster -> Maybe ISO8601

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:atRestEncryptionEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | A list of VPC Security Groups associated with the cluster.
[$sel:securityGroups:CacheCluster'] :: CacheCluster -> Maybe [SecurityGroupMembership]

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
[$sel:notificationConfiguration:CacheCluster'] :: CacheCluster -> Maybe NotificationConfiguration

-- | The ARN (Amazon Resource Name) of the cache cluster.
[$sel:arn:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:transitEncryptionEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
--   
--   Example: <tt>05:00-09:00</tt>
[$sel:snapshotWindow:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The user-supplied identifier of the cluster. This identifier is a
--   unique key that identifies a cluster.
[$sel:cacheClusterId:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Returns the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:CacheCluster'] :: CacheCluster -> Maybe [LogDeliveryConfiguration]

-- | Represents a Memcached cluster endpoint which can be used by an
--   application to connect to any node in the cluster. The configuration
--   endpoint will always have <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
[$sel:configurationEndpoint:CacheCluster'] :: CacheCluster -> Maybe Endpoint

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to
--   be used for this cluster.
[$sel:engine:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A list of cache security group elements, composed of name and status
--   sub-elements.
[$sel:cacheSecurityGroups:CacheCluster'] :: CacheCluster -> Maybe [CacheSecurityGroupMembership]

-- | A boolean value indicating whether log delivery is enabled for the
--   replication group.
[$sel:replicationGroupLogDeliveryEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | The URL of the web page where you can download the latest ElastiCache
--   client library.
[$sel:clientDownloadLandingPage:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the cache subnet group associated with the cluster.
[$sel:cacheSubnetGroupName:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the Availability Zone in which the cluster is located or
--   "Multiple" if the cache nodes are located in different Availability
--   Zones.
[$sel:preferredAvailabilityZone:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Status of the cache parameter group.
[$sel:cacheParameterGroup:CacheCluster'] :: CacheCluster -> Maybe CacheParameterGroupStatus

-- | The current state of this cluster, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>deleted</tt>,
--   <tt>deleting</tt>, <tt>incompatible-network</tt>, <tt>modifying</tt>,
--   <tt>rebooting cluster nodes</tt>, <tt>restore-failed</tt>, or
--   <tt>snapshotting</tt>.
[$sel:cacheClusterStatus:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
[$sel:snapshotRetentionLimit:CacheCluster'] :: CacheCluster -> Maybe Int

-- | The outpost ARN in which the cache cluster is created.
[$sel:preferredOutpostArn:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The replication group to which this cluster belongs. If this field is
--   empty, the cluster is not associated with any replication group.
[$sel:replicationGroupId:CacheCluster'] :: CacheCluster -> Maybe Text
[$sel:pendingModifiedValues:CacheCluster'] :: CacheCluster -> Maybe PendingModifiedValues

-- | The number of cache nodes in the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:CacheCluster'] :: CacheCluster -> Maybe Int

-- | Create a value of <a>CacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:CacheCluster'</a>,
--   <a>cacheCluster_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:engineVersion:CacheCluster'</a>,
--   <a>cacheCluster_engineVersion</a> - The version of the cache engine
--   that is used in this cluster.
--   
--   <a>$sel:cacheNodeType:CacheCluster'</a>,
--   <a>cacheCluster_cacheNodeType</a> - The name of the compute and memory
--   capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheNodes:CacheCluster'</a>, <a>cacheCluster_cacheNodes</a> -
--   A list of cache nodes that are members of the cluster.
--   
--   <a>$sel:cacheClusterCreateTime:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterCreateTime</a> - The date and time when
--   the cluster was created.
--   
--   <a>$sel:atRestEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CacheCluster'</a>,
--   <a>cacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:securityGroups:CacheCluster'</a>,
--   <a>cacheCluster_securityGroups</a> - A list of VPC Security Groups
--   associated with the cluster.
--   
--   <a>$sel:notificationConfiguration:CacheCluster'</a>,
--   <a>cacheCluster_notificationConfiguration</a> - Describes a
--   notification topic and its status. Notification topics are used for
--   publishing ElastiCache events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <a>$sel:arn:CacheCluster'</a>, <a>cacheCluster_arn</a> - The ARN
--   (Amazon Resource Name) of the cache cluster.
--   
--   <a>$sel:transitEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:snapshotWindow:CacheCluster'</a>,
--   <a>cacheCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your
--   cluster.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   <a>$sel:cacheClusterId:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterId</a> - The user-supplied identifier of
--   the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:logDeliveryConfigurations:CacheCluster'</a>,
--   <a>cacheCluster_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:CacheCluster'</a>,
--   <a>cacheCluster_configurationEndpoint</a> - Represents a Memcached
--   cluster endpoint which can be used by an application to connect to any
--   node in the cluster. The configuration endpoint will always have
--   <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
--   
--   <a>$sel:engine:CacheCluster'</a>, <a>cacheCluster_engine</a> - The
--   name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to be
--   used for this cluster.
--   
--   <a>$sel:cacheSecurityGroups:CacheCluster'</a>,
--   <a>cacheCluster_cacheSecurityGroups</a> - A list of cache security
--   group elements, composed of name and status sub-elements.
--   
--   <a>$sel:replicationGroupLogDeliveryEnabled:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupLogDeliveryEnabled</a> - A boolean
--   value indicating whether log delivery is enabled for the replication
--   group.
--   
--   <a>$sel:authTokenEnabled:CacheCluster'</a>,
--   <a>cacheCluster_authTokenEnabled</a> - A flag that enables using an
--   <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:clientDownloadLandingPage:CacheCluster'</a>,
--   <a>cacheCluster_clientDownloadLandingPage</a> - The URL of the web
--   page where you can download the latest ElastiCache client library.
--   
--   <a>$sel:preferredMaintenanceWindow:CacheCluster'</a>,
--   <a>cacheCluster_preferredMaintenanceWindow</a> - Specifies the weekly
--   time range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:cacheSubnetGroupName:CacheCluster'</a>,
--   <a>cacheCluster_cacheSubnetGroupName</a> - The name of the cache
--   subnet group associated with the cluster.
--   
--   <a>$sel:preferredAvailabilityZone:CacheCluster'</a>,
--   <a>cacheCluster_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the cluster is located or "Multiple" if the
--   cache nodes are located in different Availability Zones.
--   
--   <a>$sel:cacheParameterGroup:CacheCluster'</a>,
--   <a>cacheCluster_cacheParameterGroup</a> - Status of the cache
--   parameter group.
--   
--   <a>$sel:cacheClusterStatus:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterStatus</a> - The current state of this
--   cluster, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>deleted</tt>, <tt>deleting</tt>,
--   <tt>incompatible-network</tt>, <tt>modifying</tt>, <tt>rebooting
--   cluster nodes</tt>, <tt>restore-failed</tt>, or <tt>snapshotting</tt>.
--   
--   <a>$sel:snapshotRetentionLimit:CacheCluster'</a>,
--   <a>cacheCluster_snapshotRetentionLimit</a> - The number of days for
--   which ElastiCache retains automatic cluster snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot that was taken today is retained for 5 days before being
--   deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
--   
--   <a>$sel:preferredOutpostArn:CacheCluster'</a>,
--   <a>cacheCluster_preferredOutpostArn</a> - The outpost ARN in which the
--   cache cluster is created.
--   
--   <a>$sel:replicationGroupId:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupId</a> - The replication group to
--   which this cluster belongs. If this field is empty, the cluster is not
--   associated with any replication group.
--   
--   <a>$sel:pendingModifiedValues:CacheCluster'</a>,
--   <a>cacheCluster_pendingModifiedValues</a> - Undocumented member.
--   
--   <a>$sel:numCacheNodes:CacheCluster'</a>,
--   <a>cacheCluster_numCacheNodes</a> - The number of cache nodes in the
--   cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newCacheCluster :: CacheCluster

-- | The date the auth token was last modified
cacheCluster_authTokenLastModifiedDate :: Lens' CacheCluster (Maybe UTCTime)

-- | The version of the cache engine that is used in this cluster.
cacheCluster_engineVersion :: Lens' CacheCluster (Maybe Text)

-- | The name of the compute and memory capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
cacheCluster_cacheNodeType :: Lens' CacheCluster (Maybe Text)

-- | A list of cache nodes that are members of the cluster.
cacheCluster_cacheNodes :: Lens' CacheCluster (Maybe [CacheNode])

-- | The date and time when the cluster was created.
cacheCluster_cacheClusterCreateTime :: Lens' CacheCluster (Maybe UTCTime)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_atRestEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | This parameter is currently disabled.
cacheCluster_autoMinorVersionUpgrade :: Lens' CacheCluster (Maybe Bool)

-- | A list of VPC Security Groups associated with the cluster.
cacheCluster_securityGroups :: Lens' CacheCluster (Maybe [SecurityGroupMembership])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
cacheCluster_notificationConfiguration :: Lens' CacheCluster (Maybe NotificationConfiguration)

-- | The ARN (Amazon Resource Name) of the cache cluster.
cacheCluster_arn :: Lens' CacheCluster (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_transitEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
--   
--   Example: <tt>05:00-09:00</tt>
cacheCluster_snapshotWindow :: Lens' CacheCluster (Maybe Text)

-- | The user-supplied identifier of the cluster. This identifier is a
--   unique key that identifies a cluster.
cacheCluster_cacheClusterId :: Lens' CacheCluster (Maybe Text)

-- | Returns the destination, format and type of the logs.
cacheCluster_logDeliveryConfigurations :: Lens' CacheCluster (Maybe [LogDeliveryConfiguration])

-- | Represents a Memcached cluster endpoint which can be used by an
--   application to connect to any node in the cluster. The configuration
--   endpoint will always have <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
cacheCluster_configurationEndpoint :: Lens' CacheCluster (Maybe Endpoint)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to
--   be used for this cluster.
cacheCluster_engine :: Lens' CacheCluster (Maybe Text)

-- | A list of cache security group elements, composed of name and status
--   sub-elements.
cacheCluster_cacheSecurityGroups :: Lens' CacheCluster (Maybe [CacheSecurityGroupMembership])

-- | A boolean value indicating whether log delivery is enabled for the
--   replication group.
cacheCluster_replicationGroupLogDeliveryEnabled :: Lens' CacheCluster (Maybe Bool)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
cacheCluster_authTokenEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The URL of the web page where you can download the latest ElastiCache
--   client library.
cacheCluster_clientDownloadLandingPage :: Lens' CacheCluster (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
cacheCluster_preferredMaintenanceWindow :: Lens' CacheCluster (Maybe Text)

-- | The name of the cache subnet group associated with the cluster.
cacheCluster_cacheSubnetGroupName :: Lens' CacheCluster (Maybe Text)

-- | The name of the Availability Zone in which the cluster is located or
--   "Multiple" if the cache nodes are located in different Availability
--   Zones.
cacheCluster_preferredAvailabilityZone :: Lens' CacheCluster (Maybe Text)

-- | Status of the cache parameter group.
cacheCluster_cacheParameterGroup :: Lens' CacheCluster (Maybe CacheParameterGroupStatus)

-- | The current state of this cluster, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>deleted</tt>,
--   <tt>deleting</tt>, <tt>incompatible-network</tt>, <tt>modifying</tt>,
--   <tt>rebooting cluster nodes</tt>, <tt>restore-failed</tt>, or
--   <tt>snapshotting</tt>.
cacheCluster_cacheClusterStatus :: Lens' CacheCluster (Maybe Text)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
cacheCluster_snapshotRetentionLimit :: Lens' CacheCluster (Maybe Int)

-- | The outpost ARN in which the cache cluster is created.
cacheCluster_preferredOutpostArn :: Lens' CacheCluster (Maybe Text)

-- | The replication group to which this cluster belongs. If this field is
--   empty, the cluster is not associated with any replication group.
cacheCluster_replicationGroupId :: Lens' CacheCluster (Maybe Text)

-- | Undocumented member.
cacheCluster_pendingModifiedValues :: Lens' CacheCluster (Maybe PendingModifiedValues)

-- | The number of cache nodes in the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
cacheCluster_numCacheNodes :: Lens' CacheCluster (Maybe Int)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheCluster.CacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheCluster.CacheCluster


module Amazonka.ElastiCache.Types.ServiceUpdateSeverity
newtype ServiceUpdateSeverity
ServiceUpdateSeverity' :: Text -> ServiceUpdateSeverity
[fromServiceUpdateSeverity] :: ServiceUpdateSeverity -> Text
pattern ServiceUpdateSeverity_Critical :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Important :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Low :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Medium :: ServiceUpdateSeverity
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance GHC.Read.Read Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity
instance GHC.Show.Show Amazonka.ElastiCache.Types.ServiceUpdateSeverity.ServiceUpdateSeverity


module Amazonka.ElastiCache.Types.ServiceUpdateStatus
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Cancelled :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Expired :: ServiceUpdateStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.ServiceUpdateStatus.ServiceUpdateStatus


module Amazonka.ElastiCache.Types.ServiceUpdateType
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Read.Read Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Show.Show Amazonka.ElastiCache.Types.ServiceUpdateType.ServiceUpdateType


module Amazonka.ElastiCache.Types.ServiceUpdate

-- | An update that you can apply to your Redis clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe ServiceUpdateSeverity -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> ServiceUpdate

-- | The Elasticache engine version to which the update applies. Either
--   Redis or Memcached engine version
[$sel:engineVersion:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Reflects the nature of the service update
[$sel:serviceUpdateType:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateType

-- | The unique ID of the service update
[$sel:serviceUpdateName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
[$sel:engine:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The date when the service update is initially available
[$sel:serviceUpdateReleaseDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | Indicates whether the service update will be automatically applied
--   once the recommended apply-by date has expired.
[$sel:autoUpdateAfterRecommendedApplyByDate:ServiceUpdate'] :: ServiceUpdate -> Maybe Bool

-- | The severity of the service update
[$sel:serviceUpdateSeverity:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateSeverity

-- | The date after which the service update is no longer available
[$sel:serviceUpdateEndDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | Provides details of the service update
[$sel:serviceUpdateDescription:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
[$sel:serviceUpdateRecommendedApplyByDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | The status of the service update
[$sel:serviceUpdateStatus:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateStatus

-- | The estimated length of time the service update will take
[$sel:estimatedUpdateTime:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ServiceUpdate'</a>,
--   <a>serviceUpdate_engineVersion</a> - The Elasticache engine version to
--   which the update applies. Either Redis or Memcached engine version
--   
--   <a>$sel:serviceUpdateType:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:engine:ServiceUpdate'</a>, <a>serviceUpdate_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:serviceUpdateReleaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateReleaseDate</a> - The date when the
--   service update is initially available
--   
--   <a>$sel:autoUpdateAfterRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateAfterRecommendedApplyByDate</a> - Indicates
--   whether the service update will be automatically applied once the
--   recommended apply-by date has expired.
--   
--   <a>$sel:serviceUpdateSeverity:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:serviceUpdateEndDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateEndDate</a> - The date after which the
--   service update is no longer available
--   
--   <a>$sel:serviceUpdateDescription:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateDescription</a> - Provides details of
--   the service update
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateRecommendedApplyByDate</a> - The
--   recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
--   
--   <a>$sel:serviceUpdateStatus:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:ServiceUpdate'</a>,
--   <a>serviceUpdate_estimatedUpdateTime</a> - The estimated length of
--   time the service update will take
newServiceUpdate :: ServiceUpdate

-- | The Elasticache engine version to which the update applies. Either
--   Redis or Memcached engine version
serviceUpdate_engineVersion :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_serviceUpdateType :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
serviceUpdate_engine :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_serviceUpdateReleaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Indicates whether the service update will be automatically applied
--   once the recommended apply-by date has expired.
serviceUpdate_autoUpdateAfterRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe Bool)

-- | The severity of the service update
serviceUpdate_serviceUpdateSeverity :: Lens' ServiceUpdate (Maybe ServiceUpdateSeverity)

-- | The date after which the service update is no longer available
serviceUpdate_serviceUpdateEndDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Provides details of the service update
serviceUpdate_serviceUpdateDescription :: Lens' ServiceUpdate (Maybe Text)

-- | The recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
serviceUpdate_serviceUpdateRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The status of the service update
serviceUpdate_serviceUpdateStatus :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The estimated length of time the service update will take
serviceUpdate_estimatedUpdateTime :: Lens' ServiceUpdate (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance GHC.Show.Show Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance GHC.Read.Read Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ServiceUpdate.ServiceUpdate


module Amazonka.ElastiCache.Types.SlaMet
newtype SlaMet
SlaMet' :: Text -> SlaMet
[fromSlaMet] :: SlaMet -> Text
pattern SlaMet_N_a :: SlaMet
pattern SlaMet_No :: SlaMet
pattern SlaMet_Yes :: SlaMet
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance GHC.Read.Read Amazonka.ElastiCache.Types.SlaMet.SlaMet
instance GHC.Show.Show Amazonka.ElastiCache.Types.SlaMet.SlaMet


module Amazonka.ElastiCache.Types.SlotMigration

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | The percentage of the slot migration that is complete.
[$sel:progressPercentage:SlotMigration'] :: SlotMigration -> Maybe Double

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance GHC.Show.Show Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance GHC.Read.Read Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.SlotMigration.SlotMigration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.SlotMigration.SlotMigration


module Amazonka.ElastiCache.Types.ReshardingStatus

-- | The status of an online resharding operation.
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | Represents the progress of an online resharding operation.
[$sel:slotMigration:ReshardingStatus'] :: ReshardingStatus -> Maybe SlotMigration

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - Represents the progress of an
--   online resharding operation.
newReshardingStatus :: ReshardingStatus

-- | Represents the progress of an online resharding operation.
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReshardingStatus.ReshardingStatus


module Amazonka.ElastiCache.Types.Snapshot

-- | Represents a copy of an entire Redis cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [NodeSnapshot] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe AutomaticFailoverStatus -> Maybe Text -> Snapshot

-- | The version of the cache engine version that is used by the source
--   cluster.
[$sel:engineVersion:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:Snapshot'] :: Snapshot -> Maybe Text

-- | The date and time when the source cluster was created.
[$sel:cacheClusterCreateTime:Snapshot'] :: Snapshot -> Maybe ISO8601

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:Snapshot'] :: Snapshot -> Maybe Bool

-- | The ARN (Amazon Resource Name) of the snapshot.
[$sel:arn:Snapshot'] :: Snapshot -> Maybe Text

-- | The cache parameter group that is associated with the source cluster.
[$sel:cacheParameterGroupName:Snapshot'] :: Snapshot -> Maybe Text

-- | A description of the source replication group.
[$sel:replicationGroupDescription:Snapshot'] :: Snapshot -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group for the source cluster.
[$sel:vpcId:Snapshot'] :: Snapshot -> Maybe Text

-- | The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
[$sel:snapshotStatus:Snapshot'] :: Snapshot -> Maybe Text

-- | The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
[$sel:snapshotWindow:Snapshot'] :: Snapshot -> Maybe Text

-- | The user-supplied identifier of the source cluster.
[$sel:cacheClusterId:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>)
--   used by the source cluster.
[$sel:engine:Snapshot'] :: Snapshot -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:Snapshot'] :: Snapshot -> Maybe Text

-- | The Amazon Resource Name (ARN) for the topic used by the source
--   cluster for publishing notifications.
[$sel:topicArn:Snapshot'] :: Snapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:Snapshot'] :: Snapshot -> Maybe Text

-- | A list of the cache nodes in the source cluster.
[$sel:nodeSnapshots:Snapshot'] :: Snapshot -> Maybe [NodeSnapshot]

-- | The name of the cache subnet group associated with the source cluster.
[$sel:cacheSubnetGroupName:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the Availability Zone in which the source cluster is
--   located.
[$sel:preferredAvailabilityZone:Snapshot'] :: Snapshot -> Maybe Text

-- | The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
[$sel:numNodeGroups:Snapshot'] :: Snapshot -> Maybe Int

-- | For an automatic snapshot, the number of days for which ElastiCache
--   retains the snapshot before deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
[$sel:snapshotRetentionLimit:Snapshot'] :: Snapshot -> Maybe Int

-- | The name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
[$sel:snapshotName:Snapshot'] :: Snapshot -> Maybe Text

-- | The ARN (Amazon Resource Name) of the preferred outpost.
[$sel:preferredOutpostArn:Snapshot'] :: Snapshot -> Maybe Text

-- | The unique identifier of the source replication group.
[$sel:replicationGroupId:Snapshot'] :: Snapshot -> Maybe Text

-- | The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:Snapshot'] :: Snapshot -> Maybe Int

-- | The port number used by each cache nodes in the source cluster.
[$sel:port:Snapshot'] :: Snapshot -> Maybe Int

-- | Indicates the status of automatic failover for the source Redis
--   replication group.
[$sel:automaticFailover:Snapshot'] :: Snapshot -> Maybe AutomaticFailoverStatus

-- | Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
[$sel:snapshotSource:Snapshot'] :: Snapshot -> Maybe Text

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Snapshot'</a>, <a>snapshot_engineVersion</a> -
--   The version of the cache engine version that is used by the source
--   cluster.
--   
--   <a>$sel:cacheNodeType:Snapshot'</a>, <a>snapshot_cacheNodeType</a> -
--   The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheClusterCreateTime:Snapshot'</a>,
--   <a>snapshot_cacheClusterCreateTime</a> - The date and time when the
--   source cluster was created.
--   
--   <a>$sel:autoMinorVersionUpgrade:Snapshot'</a>,
--   <a>snapshot_autoMinorVersionUpgrade</a> - This parameter is currently
--   disabled.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:cacheParameterGroupName:Snapshot'</a>,
--   <a>snapshot_cacheParameterGroupName</a> - The cache parameter group
--   that is associated with the source cluster.
--   
--   <a>$sel:replicationGroupDescription:Snapshot'</a>,
--   <a>snapshot_replicationGroupDescription</a> - A description of the
--   source replication group.
--   
--   <a>$sel:vpcId:Snapshot'</a>, <a>snapshot_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the cache subnet group
--   for the source cluster.
--   
--   <a>$sel:snapshotStatus:Snapshot'</a>, <a>snapshot_snapshotStatus</a> -
--   The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
--   
--   <a>$sel:snapshotWindow:Snapshot'</a>, <a>snapshot_snapshotWindow</a> -
--   The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
--   
--   <a>$sel:cacheClusterId:Snapshot'</a>, <a>snapshot_cacheClusterId</a> -
--   The user-supplied identifier of the source cluster.
--   
--   <a>$sel:engine:Snapshot'</a>, <a>snapshot_engine</a> - The name of the
--   cache engine (<tt>memcached</tt> or <tt>redis</tt>) used by the source
--   cluster.
--   
--   <a>$sel:preferredMaintenanceWindow:Snapshot'</a>,
--   <a>snapshot_preferredMaintenanceWindow</a> - Specifies the weekly time
--   range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:topicArn:Snapshot'</a>, <a>snapshot_topicArn</a> - The Amazon
--   Resource Name (ARN) for the topic used by the source cluster for
--   publishing notifications.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:nodeSnapshots:Snapshot'</a>, <a>snapshot_nodeSnapshots</a> - A
--   list of the cache nodes in the source cluster.
--   
--   <a>$sel:cacheSubnetGroupName:Snapshot'</a>,
--   <a>snapshot_cacheSubnetGroupName</a> - The name of the cache subnet
--   group associated with the source cluster.
--   
--   <a>$sel:preferredAvailabilityZone:Snapshot'</a>,
--   <a>snapshot_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the source cluster is located.
--   
--   <a>$sel:numNodeGroups:Snapshot'</a>, <a>snapshot_numNodeGroups</a> -
--   The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
--   
--   <a>$sel:snapshotRetentionLimit:Snapshot'</a>,
--   <a>snapshot_snapshotRetentionLimit</a> - For an automatic snapshot,
--   the number of days for which ElastiCache retains the snapshot before
--   deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
--   
--   <a>$sel:snapshotName:Snapshot'</a>, <a>snapshot_snapshotName</a> - The
--   name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
--   
--   <a>$sel:preferredOutpostArn:Snapshot'</a>,
--   <a>snapshot_preferredOutpostArn</a> - The ARN (Amazon Resource Name)
--   of the preferred outpost.
--   
--   <a>$sel:replicationGroupId:Snapshot'</a>,
--   <a>snapshot_replicationGroupId</a> - The unique identifier of the
--   source replication group.
--   
--   <a>$sel:numCacheNodes:Snapshot'</a>, <a>snapshot_numCacheNodes</a> -
--   The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   <a>$sel:port:Snapshot'</a>, <a>snapshot_port</a> - The port number
--   used by each cache nodes in the source cluster.
--   
--   <a>$sel:automaticFailover:Snapshot'</a>,
--   <a>snapshot_automaticFailover</a> - Indicates the status of automatic
--   failover for the source Redis replication group.
--   
--   <a>$sel:snapshotSource:Snapshot'</a>, <a>snapshot_snapshotSource</a> -
--   Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
newSnapshot :: Snapshot

-- | The version of the cache engine version that is used by the source
--   cluster.
snapshot_engineVersion :: Lens' Snapshot (Maybe Text)

-- | The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
snapshot_cacheNodeType :: Lens' Snapshot (Maybe Text)

-- | The date and time when the source cluster was created.
snapshot_cacheClusterCreateTime :: Lens' Snapshot (Maybe UTCTime)

-- | This parameter is currently disabled.
snapshot_autoMinorVersionUpgrade :: Lens' Snapshot (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The cache parameter group that is associated with the source cluster.
snapshot_cacheParameterGroupName :: Lens' Snapshot (Maybe Text)

-- | A description of the source replication group.
snapshot_replicationGroupDescription :: Lens' Snapshot (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group for the source cluster.
snapshot_vpcId :: Lens' Snapshot (Maybe Text)

-- | The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
snapshot_snapshotStatus :: Lens' Snapshot (Maybe Text)

-- | The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
snapshot_snapshotWindow :: Lens' Snapshot (Maybe Text)

-- | The user-supplied identifier of the source cluster.
snapshot_cacheClusterId :: Lens' Snapshot (Maybe Text)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>)
--   used by the source cluster.
snapshot_engine :: Lens' Snapshot (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
snapshot_preferredMaintenanceWindow :: Lens' Snapshot (Maybe Text)

-- | The Amazon Resource Name (ARN) for the topic used by the source
--   cluster for publishing notifications.
snapshot_topicArn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | A list of the cache nodes in the source cluster.
snapshot_nodeSnapshots :: Lens' Snapshot (Maybe [NodeSnapshot])

-- | The name of the cache subnet group associated with the source cluster.
snapshot_cacheSubnetGroupName :: Lens' Snapshot (Maybe Text)

-- | The name of the Availability Zone in which the source cluster is
--   located.
snapshot_preferredAvailabilityZone :: Lens' Snapshot (Maybe Text)

-- | The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
snapshot_numNodeGroups :: Lens' Snapshot (Maybe Int)

-- | For an automatic snapshot, the number of days for which ElastiCache
--   retains the snapshot before deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
snapshot_snapshotRetentionLimit :: Lens' Snapshot (Maybe Int)

-- | The name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
snapshot_snapshotName :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the preferred outpost.
snapshot_preferredOutpostArn :: Lens' Snapshot (Maybe Text)

-- | The unique identifier of the source replication group.
snapshot_replicationGroupId :: Lens' Snapshot (Maybe Text)

-- | The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
snapshot_numCacheNodes :: Lens' Snapshot (Maybe Int)

-- | The port number used by each cache nodes in the source cluster.
snapshot_port :: Lens' Snapshot (Maybe Int)

-- | Indicates the status of automatic failover for the source Redis
--   replication group.
snapshot_automaticFailover :: Lens' Snapshot (Maybe AutomaticFailoverStatus)

-- | Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
snapshot_snapshotSource :: Lens' Snapshot (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance GHC.Show.Show Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance GHC.Read.Read Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Snapshot.Snapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Snapshot.Snapshot


module Amazonka.ElastiCache.Types.SourceType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Cache_cluster :: SourceType
pattern SourceType_Cache_parameter_group :: SourceType
pattern SourceType_Cache_security_group :: SourceType
pattern SourceType_Cache_subnet_group :: SourceType
pattern SourceType_Replication_group :: SourceType
pattern SourceType_User :: SourceType
pattern SourceType_User_group :: SourceType
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.SourceType.SourceType
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.SourceType.SourceType
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.SourceType.SourceType
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.SourceType.SourceType
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.SourceType.SourceType
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.SourceType.SourceType
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.SourceType.SourceType
instance GHC.Read.Read Amazonka.ElastiCache.Types.SourceType.SourceType
instance GHC.Show.Show Amazonka.ElastiCache.Types.SourceType.SourceType


module Amazonka.ElastiCache.Types.Event

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster, adding or
--   removing a cache node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe SourceType -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Event

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
[$sel:sourceIdentifier:Event'] :: Event -> Maybe Text

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe ISO8601

-- | The text of the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:sourceIdentifier:Event'</a>, <a>event_sourceIdentifier</a> -
--   The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceIdentifier :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Event.Event
instance GHC.Show.Show Amazonka.ElastiCache.Types.Event.Event
instance GHC.Read.Read Amazonka.ElastiCache.Types.Event.Event
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Event.Event
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Event.Event
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Event.Event
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Event.Event


module Amazonka.ElastiCache.Types.SubnetOutpost

-- | The ID of the outpost subnet.
--   
--   <i>See:</i> <a>newSubnetOutpost</a> smart constructor.
data SubnetOutpost
SubnetOutpost' :: Maybe Text -> SubnetOutpost

-- | The outpost ARN of the subnet.
[$sel:subnetOutpostArn:SubnetOutpost'] :: SubnetOutpost -> Maybe Text

-- | Create a value of <a>SubnetOutpost</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetOutpostArn:SubnetOutpost'</a>,
--   <a>subnetOutpost_subnetOutpostArn</a> - The outpost ARN of the subnet.
newSubnetOutpost :: SubnetOutpost

-- | The outpost ARN of the subnet.
subnetOutpost_subnetOutpostArn :: Lens' SubnetOutpost (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance GHC.Show.Show Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance GHC.Read.Read Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.SubnetOutpost.SubnetOutpost


module Amazonka.ElastiCache.Types.Subnet

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with ElastiCache.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Maybe SubnetOutpost -> Subnet

-- | The unique identifier for the subnet.
[$sel:subnetIdentifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone associated with the subnet.
[$sel:subnetAvailabilityZone:Subnet'] :: Subnet -> Maybe AvailabilityZone

-- | The outpost ARN of the subnet.
[$sel:subnetOutpost:Subnet'] :: Subnet -> Maybe SubnetOutpost

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The unique identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone
--   associated with the subnet.
--   
--   <a>$sel:subnetOutpost:Subnet'</a>, <a>subnet_subnetOutpost</a> - The
--   outpost ARN of the subnet.
newSubnet :: Subnet

-- | The unique identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone associated with the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe AvailabilityZone)

-- | The outpost ARN of the subnet.
subnet_subnetOutpost :: Lens' Subnet (Maybe SubnetOutpost)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Subnet.Subnet
instance GHC.Show.Show Amazonka.ElastiCache.Types.Subnet.Subnet
instance GHC.Read.Read Amazonka.ElastiCache.Types.Subnet.Subnet
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Subnet.Subnet
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Subnet.Subnet
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Subnet.Subnet
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Subnet.Subnet


module Amazonka.ElastiCache.Types.CacheSubnetGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>CreateCacheSubnetGroup</pre></li>
--   <li><pre>ModifyCacheSubnetGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSubnetGroup</a> smart constructor.
data CacheSubnetGroup
CacheSubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> CacheSubnetGroup

-- | The ARN (Amazon Resource Name) of the cache subnet group.
[$sel:arn:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
[$sel:vpcId:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | A list of subnets associated with the cache subnet group.
[$sel:subnets:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe [Subnet]

-- | The name of the cache subnet group.
[$sel:cacheSubnetGroupName:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | The description of the cache subnet group.
[$sel:cacheSubnetGroupDescription:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | Create a value of <a>CacheSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the cache subnet group.
--   
--   <a>$sel:vpcId:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_vpcId</a> -
--   The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
--   
--   <a>$sel:subnets:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_subnets</a>
--   - A list of subnets associated with the cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupName:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupName</a> - The name of the cache
--   subnet group.
--   
--   <a>$sel:cacheSubnetGroupDescription:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupDescription</a> - The description
--   of the cache subnet group.
newCacheSubnetGroup :: CacheSubnetGroup

-- | The ARN (Amazon Resource Name) of the cache subnet group.
cacheSubnetGroup_arn :: Lens' CacheSubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
cacheSubnetGroup_vpcId :: Lens' CacheSubnetGroup (Maybe Text)

-- | A list of subnets associated with the cache subnet group.
cacheSubnetGroup_subnets :: Lens' CacheSubnetGroup (Maybe [Subnet])

-- | The name of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupName :: Lens' CacheSubnetGroup (Maybe Text)

-- | The description of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupDescription :: Lens' CacheSubnetGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.CacheSubnetGroup.CacheSubnetGroup


module Amazonka.ElastiCache.Types.Tag

-- | A tag that can be added to an ElastiCache cluster or replication
--   group. Tags are composed of a Key/Value pair. You can use tags to
--   categorize and track all your ElastiCache resources, with the
--   exception of global replication group. When you add or remove tags on
--   replication groups, those actions will be replicated to all nodes in
--   the replication group. A tag with a null Value is permitted.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value. May be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key for the tag. May not be null.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.Tag.Tag
instance GHC.Show.Show Amazonka.ElastiCache.Types.Tag.Tag
instance GHC.Read.Read Amazonka.ElastiCache.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.Tag.Tag
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.Tag.Tag
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.Tag.Tag


module Amazonka.ElastiCache.Types.TagListMessage

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | A list of tags as key-value pairs.
[$sel:tagList:TagListMessage'] :: TagListMessage -> Maybe [Tag]

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance GHC.Show.Show Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance GHC.Read.Read Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.TagListMessage.TagListMessage
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.TagListMessage.TagListMessage


module Amazonka.ElastiCache.Types.TimeRangeFilter

-- | Filters update actions from the service updates that are in available
--   status during the time range.
--   
--   <i>See:</i> <a>newTimeRangeFilter</a> smart constructor.
data TimeRangeFilter
TimeRangeFilter' :: Maybe ISO8601 -> Maybe ISO8601 -> TimeRangeFilter

-- | The start time of the time range filter
[$sel:startTime:TimeRangeFilter'] :: TimeRangeFilter -> Maybe ISO8601

-- | The end time of the time range filter
[$sel:endTime:TimeRangeFilter'] :: TimeRangeFilter -> Maybe ISO8601

-- | Create a value of <a>TimeRangeFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:TimeRangeFilter'</a>,
--   <a>timeRangeFilter_startTime</a> - The start time of the time range
--   filter
--   
--   <a>$sel:endTime:TimeRangeFilter'</a>, <a>timeRangeFilter_endTime</a> -
--   The end time of the time range filter
newTimeRangeFilter :: TimeRangeFilter

-- | The start time of the time range filter
timeRangeFilter_startTime :: Lens' TimeRangeFilter (Maybe UTCTime)

-- | The end time of the time range filter
timeRangeFilter_endTime :: Lens' TimeRangeFilter (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance GHC.Show.Show Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance GHC.Read.Read Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.TimeRangeFilter.TimeRangeFilter


module Amazonka.ElastiCache.Types.UnprocessedUpdateAction

-- | Update action that has failed to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newUnprocessedUpdateAction</a> smart constructor.
data UnprocessedUpdateAction
UnprocessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedUpdateAction

-- | The ID of the cache cluster
[$sel:cacheClusterId:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The error type for requests that are not processed
[$sel:errorType:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The error message that describes the reason the request was not
--   processed
[$sel:errorMessage:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The replication group ID
[$sel:replicationGroupId:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | Create a value of <a>UnprocessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_serviceUpdateName</a> - The unique ID of
--   the service update
--   
--   <a>$sel:errorType:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorType</a> - The error type for requests
--   that are not processed
--   
--   <a>$sel:errorMessage:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorMessage</a> - The error message that
--   describes the reason the request was not processed
--   
--   <a>$sel:replicationGroupId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_replicationGroupId</a> - The replication
--   group ID
newUnprocessedUpdateAction :: UnprocessedUpdateAction

-- | The ID of the cache cluster
unprocessedUpdateAction_cacheClusterId :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
unprocessedUpdateAction_serviceUpdateName :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error type for requests that are not processed
unprocessedUpdateAction_errorType :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error message that describes the reason the request was not
--   processed
unprocessedUpdateAction_errorMessage :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The replication group ID
unprocessedUpdateAction_replicationGroupId :: Lens' UnprocessedUpdateAction (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance GHC.Show.Show Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance GHC.Read.Read Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UnprocessedUpdateAction.UnprocessedUpdateAction


module Amazonka.ElastiCache.Types.UpdateActionStatus
newtype UpdateActionStatus
UpdateActionStatus' :: Text -> UpdateActionStatus
[fromUpdateActionStatus] :: UpdateActionStatus -> Text
pattern UpdateActionStatus_Complete :: UpdateActionStatus
pattern UpdateActionStatus_In_progress :: UpdateActionStatus
pattern UpdateActionStatus_Not_applicable :: UpdateActionStatus
pattern UpdateActionStatus_Not_applied :: UpdateActionStatus
pattern UpdateActionStatus_Scheduled :: UpdateActionStatus
pattern UpdateActionStatus_Scheduling :: UpdateActionStatus
pattern UpdateActionStatus_Stopped :: UpdateActionStatus
pattern UpdateActionStatus_Stopping :: UpdateActionStatus
pattern UpdateActionStatus_Waiting_to_start :: UpdateActionStatus
instance Amazonka.Data.XML.ToXML Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.Log.ToLog Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.Text.ToText Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Amazonka.Data.Text.FromText Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance GHC.Classes.Ord Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.UpdateActionStatus.UpdateActionStatus


module Amazonka.ElastiCache.Types.UpdateAction

-- | The status of the service update for a specific replication group
--   
--   <i>See:</i> <a>newUpdateAction</a> smart constructor.
data UpdateAction
UpdateAction' :: Maybe ServiceUpdateType -> Maybe SlaMet -> Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe [CacheNodeUpdateStatus] -> Maybe ServiceUpdateSeverity -> Maybe [NodeGroupUpdateStatus] -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> Maybe Text -> UpdateAction

-- | Reflects the nature of the service update
[$sel:serviceUpdateType:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateType

-- | If yes, all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
[$sel:slaMet:UpdateAction'] :: UpdateAction -> Maybe SlaMet

-- | The ID of the cache cluster
[$sel:cacheClusterId:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The status of the update action
[$sel:updateActionStatus:UpdateAction'] :: UpdateAction -> Maybe UpdateActionStatus

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
[$sel:engine:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The progress of the service update on the replication group
[$sel:nodesUpdated:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The date when the UpdateActionStatus was last modified
[$sel:updateActionStatusModifiedDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The date the update is first available
[$sel:serviceUpdateReleaseDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The status of the service update on the cache node
[$sel:cacheNodeUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe [CacheNodeUpdateStatus]

-- | The severity of the service update
[$sel:serviceUpdateSeverity:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateSeverity

-- | The status of the service update on the node group
[$sel:nodeGroupUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe [NodeGroupUpdateStatus]

-- | The recommended date to apply the service update to ensure compliance.
--   For information on compliance, see <a>Self-Service Security Updates
--   for Compliance</a>.
[$sel:serviceUpdateRecommendedApplyByDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The date that the service update is available to a replication group
[$sel:updateActionAvailableDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The status of the service update
[$sel:serviceUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateStatus

-- | The estimated length of time for the update to complete
[$sel:estimatedUpdateTime:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The ID of the replication group
[$sel:replicationGroupId:UpdateAction'] :: UpdateAction -> Maybe Text

-- | Create a value of <a>UpdateAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateType:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:slaMet:UpdateAction'</a>, <a>updateAction_slaMet</a> - If yes,
--   all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
--   
--   <a>$sel:cacheClusterId:UpdateAction'</a>,
--   <a>updateAction_cacheClusterId</a> - The ID of the cache cluster
--   
--   <a>$sel:serviceUpdateName:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:updateActionStatus:UpdateAction'</a>,
--   <a>updateAction_updateActionStatus</a> - The status of the update
--   action
--   
--   <a>$sel:engine:UpdateAction'</a>, <a>updateAction_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:nodesUpdated:UpdateAction'</a>,
--   <a>updateAction_nodesUpdated</a> - The progress of the service update
--   on the replication group
--   
--   <a>$sel:updateActionStatusModifiedDate:UpdateAction'</a>,
--   <a>updateAction_updateActionStatusModifiedDate</a> - The date when the
--   UpdateActionStatus was last modified
--   
--   <a>$sel:serviceUpdateReleaseDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateReleaseDate</a> - The date the update is
--   first available
--   
--   <a>$sel:cacheNodeUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_cacheNodeUpdateStatus</a> - The status of the service
--   update on the cache node
--   
--   <a>$sel:serviceUpdateSeverity:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:nodeGroupUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_nodeGroupUpdateStatus</a> - The status of the service
--   update on the node group
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateRecommendedApplyByDate</a> - The
--   recommended date to apply the service update to ensure compliance. For
--   information on compliance, see <a>Self-Service Security Updates for
--   Compliance</a>.
--   
--   <a>$sel:updateActionAvailableDate:UpdateAction'</a>,
--   <a>updateAction_updateActionAvailableDate</a> - The date that the
--   service update is available to a replication group
--   
--   <a>$sel:serviceUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:UpdateAction'</a>,
--   <a>updateAction_estimatedUpdateTime</a> - The estimated length of time
--   for the update to complete
--   
--   <a>$sel:replicationGroupId:UpdateAction'</a>,
--   <a>updateAction_replicationGroupId</a> - The ID of the replication
--   group
newUpdateAction :: UpdateAction

-- | Reflects the nature of the service update
updateAction_serviceUpdateType :: Lens' UpdateAction (Maybe ServiceUpdateType)

-- | If yes, all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
updateAction_slaMet :: Lens' UpdateAction (Maybe SlaMet)

-- | The ID of the cache cluster
updateAction_cacheClusterId :: Lens' UpdateAction (Maybe Text)

-- | The unique ID of the service update
updateAction_serviceUpdateName :: Lens' UpdateAction (Maybe Text)

-- | The status of the update action
updateAction_updateActionStatus :: Lens' UpdateAction (Maybe UpdateActionStatus)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
updateAction_engine :: Lens' UpdateAction (Maybe Text)

-- | The progress of the service update on the replication group
updateAction_nodesUpdated :: Lens' UpdateAction (Maybe Text)

-- | The date when the UpdateActionStatus was last modified
updateAction_updateActionStatusModifiedDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date the update is first available
updateAction_serviceUpdateReleaseDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update on the cache node
updateAction_cacheNodeUpdateStatus :: Lens' UpdateAction (Maybe [CacheNodeUpdateStatus])

-- | The severity of the service update
updateAction_serviceUpdateSeverity :: Lens' UpdateAction (Maybe ServiceUpdateSeverity)

-- | The status of the service update on the node group
updateAction_nodeGroupUpdateStatus :: Lens' UpdateAction (Maybe [NodeGroupUpdateStatus])

-- | The recommended date to apply the service update to ensure compliance.
--   For information on compliance, see <a>Self-Service Security Updates
--   for Compliance</a>.
updateAction_serviceUpdateRecommendedApplyByDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date that the service update is available to a replication group
updateAction_updateActionAvailableDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update
updateAction_serviceUpdateStatus :: Lens' UpdateAction (Maybe ServiceUpdateStatus)

-- | The estimated length of time for the update to complete
updateAction_estimatedUpdateTime :: Lens' UpdateAction (Maybe Text)

-- | The ID of the replication group
updateAction_replicationGroupId :: Lens' UpdateAction (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance GHC.Show.Show Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance GHC.Read.Read Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UpdateAction.UpdateAction
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UpdateAction.UpdateAction


module Amazonka.ElastiCache.Types.ProcessedUpdateAction

-- | Update action that has been processed for the corresponding apply/stop
--   request
--   
--   <i>See:</i> <a>newProcessedUpdateAction</a> smart constructor.
data ProcessedUpdateAction
ProcessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> ProcessedUpdateAction

-- | The ID of the cache cluster
[$sel:cacheClusterId:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | The status of the update action on the Redis cluster
[$sel:updateActionStatus:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe UpdateActionStatus

-- | The ID of the replication group
[$sel:replicationGroupId:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | Create a value of <a>ProcessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:updateActionStatus:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_updateActionStatus</a> - The status of the
--   update action on the Redis cluster
--   
--   <a>$sel:replicationGroupId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_replicationGroupId</a> - The ID of the
--   replication group
newProcessedUpdateAction :: ProcessedUpdateAction

-- | The ID of the cache cluster
processedUpdateAction_cacheClusterId :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
processedUpdateAction_serviceUpdateName :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The status of the update action on the Redis cluster
processedUpdateAction_updateActionStatus :: Lens' ProcessedUpdateAction (Maybe UpdateActionStatus)

-- | The ID of the replication group
processedUpdateAction_replicationGroupId :: Lens' ProcessedUpdateAction (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance GHC.Show.Show Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance GHC.Read.Read Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ProcessedUpdateAction.ProcessedUpdateAction


module Amazonka.ElastiCache.Types.UpdateActionResultsMessage

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
[$sel:unprocessedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [UnprocessedUpdateAction]

-- | Update actions that have been processed successfully
[$sel:processedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [ProcessedUpdateAction]

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance GHC.Show.Show Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance GHC.Read.Read Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UpdateActionResultsMessage.UpdateActionResultsMessage


module Amazonka.ElastiCache.Types.User

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Returns a list of the user group IDs the user belongs to.
[$sel:userGroupIds:User'] :: User -> Maybe [Text]

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | The current supported value is Redis.
[$sel:engine:User'] :: User -> Maybe Text

-- | The username of the user.
[$sel:userName:User'] :: User -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The ID of the user.
[$sel:userId:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.User.User
instance GHC.Show.Show Amazonka.ElastiCache.Types.User.User
instance GHC.Read.Read Amazonka.ElastiCache.Types.User.User
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.User.User
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.User.User
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.User.User
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.User.User


module Amazonka.ElastiCache.Types.UserGroupPendingChanges

-- | Returns the updates being applied to the user group.
--   
--   <i>See:</i> <a>newUserGroupPendingChanges</a> smart constructor.
data UserGroupPendingChanges
UserGroupPendingChanges' :: Maybe [Text] -> Maybe [Text] -> UserGroupPendingChanges

-- | The list of user IDs to add.
[$sel:userIdsToAdd:UserGroupPendingChanges'] :: UserGroupPendingChanges -> Maybe [Text]

-- | The list of user IDs to remove.
[$sel:userIdsToRemove:UserGroupPendingChanges'] :: UserGroupPendingChanges -> Maybe [Text]

-- | Create a value of <a>UserGroupPendingChanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIdsToAdd:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToAdd</a> - The list of user IDs to
--   add.
--   
--   <a>$sel:userIdsToRemove:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToRemove</a> - The list of user IDs
--   to remove.
newUserGroupPendingChanges :: UserGroupPendingChanges

-- | The list of user IDs to add.
userGroupPendingChanges_userIdsToAdd :: Lens' UserGroupPendingChanges (Maybe [Text])

-- | The list of user IDs to remove.
userGroupPendingChanges_userIdsToRemove :: Lens' UserGroupPendingChanges (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance GHC.Show.Show Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance GHC.Read.Read Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UserGroupPendingChanges.UserGroupPendingChanges


module Amazonka.ElastiCache.Types.UserGroup

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:UserGroup'] :: UserGroup -> Maybe Text

-- | The list of user IDs that belong to the user group.
[$sel:userIds:UserGroup'] :: UserGroup -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the user group.
[$sel:arn:UserGroup'] :: UserGroup -> Maybe Text

-- | The ID of the user group.
[$sel:userGroupId:UserGroup'] :: UserGroup -> Maybe Text

-- | The current supported value is Redis.
[$sel:engine:UserGroup'] :: UserGroup -> Maybe Text

-- | A list of updates being applied to the user group.
[$sel:pendingChanges:UserGroup'] :: UserGroup -> Maybe UserGroupPendingChanges

-- | A list of replication groups that the user group can access.
[$sel:replicationGroups:UserGroup'] :: UserGroup -> Maybe [Text]

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UserGroup.UserGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UserGroup.UserGroup


module Amazonka.ElastiCache.Types.UserGroupsUpdateStatus

-- | The status of the user group update.
--   
--   <i>See:</i> <a>newUserGroupsUpdateStatus</a> smart constructor.
data UserGroupsUpdateStatus
UserGroupsUpdateStatus' :: Maybe [Text] -> Maybe [Text] -> UserGroupsUpdateStatus

-- | The ID of the user group to add.
[$sel:userGroupIdsToAdd:UserGroupsUpdateStatus'] :: UserGroupsUpdateStatus -> Maybe [Text]

-- | The ID of the user group to remove.
[$sel:userGroupIdsToRemove:UserGroupsUpdateStatus'] :: UserGroupsUpdateStatus -> Maybe [Text]

-- | Create a value of <a>UserGroupsUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupIdsToAdd:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToAdd</a> - The ID of the user
--   group to add.
--   
--   <a>$sel:userGroupIdsToRemove:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToRemove</a> - The ID of the
--   user group to remove.
newUserGroupsUpdateStatus :: UserGroupsUpdateStatus

-- | The ID of the user group to add.
userGroupsUpdateStatus_userGroupIdsToAdd :: Lens' UserGroupsUpdateStatus (Maybe [Text])

-- | The ID of the user group to remove.
userGroupsUpdateStatus_userGroupIdsToRemove :: Lens' UserGroupsUpdateStatus (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance GHC.Show.Show Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance GHC.Read.Read Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.UserGroupsUpdateStatus.UserGroupsUpdateStatus


module Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues

-- | The settings to be applied to the Redis replication group, either
--   immediately or during the next maintenance window.
--   
--   <i>See:</i> <a>newReplicationGroupPendingModifiedValues</a> smart
--   constructor.
data ReplicationGroupPendingModifiedValues
ReplicationGroupPendingModifiedValues' :: Maybe AuthTokenUpdateStatus -> Maybe UserGroupsUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe ReshardingStatus -> Maybe Text -> Maybe PendingAutomaticFailoverStatus -> ReplicationGroupPendingModifiedValues

-- | The auth token status
[$sel:authTokenStatus:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe AuthTokenUpdateStatus

-- | The user group being modified.
[$sel:userGroups:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe UserGroupsUpdateStatus

-- | The log delivery configurations being modified
[$sel:logDeliveryConfigurations:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe [PendingLogDeliveryConfiguration]

-- | The status of an online resharding operation.
[$sel:resharding:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe ReshardingStatus

-- | The primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
[$sel:primaryClusterId:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe Text

-- | Indicates the status of automatic failover for this Redis replication
--   group.
[$sel:automaticFailoverStatus:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe PendingAutomaticFailoverStatus

-- | Create a value of <a>ReplicationGroupPendingModifiedValues</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_authTokenStatus</a> - The
--   auth token status
--   
--   <a>$sel:userGroups:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_userGroups</a> - The user
--   group being modified.
--   
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_logDeliveryConfigurations</a>
--   - The log delivery configurations being modified
--   
--   <a>$sel:resharding:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_resharding</a> - The status
--   of an online resharding operation.
--   
--   <a>$sel:primaryClusterId:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_primaryClusterId</a> - The
--   primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
--   
--   
--   <a>$sel:automaticFailoverStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_automaticFailoverStatus</a> -
--   Indicates the status of automatic failover for this Redis replication
--   group.
newReplicationGroupPendingModifiedValues :: ReplicationGroupPendingModifiedValues

-- | The auth token status
replicationGroupPendingModifiedValues_authTokenStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The user group being modified.
replicationGroupPendingModifiedValues_userGroups :: Lens' ReplicationGroupPendingModifiedValues (Maybe UserGroupsUpdateStatus)

-- | The log delivery configurations being modified
replicationGroupPendingModifiedValues_logDeliveryConfigurations :: Lens' ReplicationGroupPendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | The status of an online resharding operation.
replicationGroupPendingModifiedValues_resharding :: Lens' ReplicationGroupPendingModifiedValues (Maybe ReshardingStatus)

-- | The primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
replicationGroupPendingModifiedValues_primaryClusterId :: Lens' ReplicationGroupPendingModifiedValues (Maybe Text)

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroupPendingModifiedValues_automaticFailoverStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe PendingAutomaticFailoverStatus)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReplicationGroupPendingModifiedValues.ReplicationGroupPendingModifiedValues


module Amazonka.ElastiCache.Types.ReplicationGroup

-- | Contains all of the attributes of a specific Redis replication group.
--   
--   <i>See:</i> <a>newReplicationGroup</a> smart constructor.
data ReplicationGroup
ReplicationGroup' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [NodeGroup] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe MultiAZStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ReplicationGroupPendingModifiedValues -> Maybe GlobalReplicationGroupInfo -> Maybe [Text] -> Maybe AutomaticFailoverStatus -> ReplicationGroup

-- | The date the auth token was last modified
[$sel:authTokenLastModifiedDate:ReplicationGroup'] :: ReplicationGroup -> Maybe ISO8601

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
[$sel:status:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | The name of the compute and memory capacity node type for each node in
--   the replication group.
[$sel:cacheNodeType:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A list of node groups in this replication group. For Redis (cluster
--   mode disabled) replication groups, this is a single-element list. For
--   Redis (cluster mode enabled) replication groups, the list contains an
--   entry for each node group (shard).
[$sel:nodeGroups:ReplicationGroup'] :: ReplicationGroup -> Maybe [NodeGroup]

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group.
[$sel:snapshottingClusterId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag indicating whether or not this replication group is cluster
--   enabled; i.e., whether its data can be partitioned across multiple
--   shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
[$sel:clusterEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:atRestEncryptionEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The date and time when the cluster was created.
[$sel:replicationGroupCreateTime:ReplicationGroup'] :: ReplicationGroup -> Maybe ISO8601

-- | The ARN (Amazon Resource Name) of the replication group.
[$sel:arn:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:transitEncryptionEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The ID of the user group associated to the replication group.
[$sel:userGroupIds:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
[$sel:snapshotWindow:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | Returns the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:ReplicationGroup'] :: ReplicationGroup -> Maybe [LogDeliveryConfiguration]

-- | The configuration endpoint for this replication group. Use the
--   configuration endpoint to connect to this replication group.
[$sel:configurationEndpoint:ReplicationGroup'] :: ReplicationGroup -> Maybe Endpoint

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The names of all the cache clusters that are part of this replication
--   group.
[$sel:memberClusters:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | The ID of the KMS key used to encrypt the disk in the cluster.
[$sel:kmsKeyId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
[$sel:multiAZ:ReplicationGroup'] :: ReplicationGroup -> Maybe MultiAZStatus

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
[$sel:snapshotRetentionLimit:ReplicationGroup'] :: ReplicationGroup -> Maybe Int

-- | The user supplied description of the replication group.
[$sel:description:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | The identifier for the replication group.
[$sel:replicationGroupId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A group of settings to be applied to the replication group, either
--   immediately or during the next maintenance window.
[$sel:pendingModifiedValues:ReplicationGroup'] :: ReplicationGroup -> Maybe ReplicationGroupPendingModifiedValues

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
[$sel:globalReplicationGroupInfo:ReplicationGroup'] :: ReplicationGroup -> Maybe GlobalReplicationGroupInfo

-- | The outpost ARNs of the replication group's member clusters.
[$sel:memberClustersOutpostArns:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | Indicates the status of automatic failover for this Redis replication
--   group.
[$sel:automaticFailover:ReplicationGroup'] :: ReplicationGroup -> Maybe AutomaticFailoverStatus

-- | Create a value of <a>ReplicationGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:status:ReplicationGroup'</a>, <a>replicationGroup_status</a> -
--   The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
--   
--   <a>$sel:cacheNodeType:ReplicationGroup'</a>,
--   <a>replicationGroup_cacheNodeType</a> - The name of the compute and
--   memory capacity node type for each node in the replication group.
--   
--   <a>$sel:nodeGroups:ReplicationGroup'</a>,
--   <a>replicationGroup_nodeGroups</a> - A list of node groups in this
--   replication group. For Redis (cluster mode disabled) replication
--   groups, this is a single-element list. For Redis (cluster mode
--   enabled) replication groups, the list contains an entry for each node
--   group (shard).
--   
--   <a>$sel:snapshottingClusterId:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshottingClusterId</a> - The cluster ID that is
--   used as the daily snapshot source for the replication group.
--   
--   <a>$sel:clusterEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_clusterEnabled</a> - A flag indicating whether or
--   not this replication group is cluster enabled; i.e., whether its data
--   can be partitioned across multiple shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:atRestEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:replicationGroupCreateTime:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupCreateTime</a> - The date and time
--   when the cluster was created.
--   
--   <a>$sel:arn:ReplicationGroup'</a>, <a>replicationGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the replication group.
--   
--   <a>$sel:transitEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:userGroupIds:ReplicationGroup'</a>,
--   <a>replicationGroup_userGroupIds</a> - The ID of the user group
--   associated to the replication group.
--   
--   <a>$sel:snapshotWindow:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your node
--   group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroup'</a>,
--   <a>replicationGroup_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:ReplicationGroup'</a>,
--   <a>replicationGroup_configurationEndpoint</a> - The configuration
--   endpoint for this replication group. Use the configuration endpoint to
--   connect to this replication group.
--   
--   <a>$sel:authTokenEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenEnabled</a> - A flag that enables using
--   an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:memberClusters:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClusters</a> - The names of all the cache
--   clusters that are part of this replication group.
--   
--   <a>$sel:kmsKeyId:ReplicationGroup'</a>,
--   <a>replicationGroup_kmsKeyId</a> - The ID of the KMS key used to
--   encrypt the disk in the cluster.
--   
--   <a>$sel:multiAZ:ReplicationGroup'</a>, <a>replicationGroup_multiAZ</a>
--   - A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
--   
--   <a>$sel:snapshotRetentionLimit:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic cluster snapshots before
--   deleting them. For example, if you set <tt>SnapshotRetentionLimit</tt>
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
--   
--   <a>$sel:description:ReplicationGroup'</a>,
--   <a>replicationGroup_description</a> - The user supplied description of
--   the replication group.
--   
--   <a>$sel:replicationGroupId:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupId</a> - The identifier for the
--   replication group.
--   
--   <a>$sel:pendingModifiedValues:ReplicationGroup'</a>,
--   <a>replicationGroup_pendingModifiedValues</a> - A group of settings to
--   be applied to the replication group, either immediately or during the
--   next maintenance window.
--   
--   <a>$sel:globalReplicationGroupInfo:ReplicationGroup'</a>,
--   <a>replicationGroup_globalReplicationGroupInfo</a> - The name of the
--   Global datastore and role of this replication group in the Global
--   datastore.
--   
--   <a>$sel:memberClustersOutpostArns:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClustersOutpostArns</a> - The outpost ARNs
--   of the replication group's member clusters.
--   
--   <a>$sel:automaticFailover:ReplicationGroup'</a>,
--   <a>replicationGroup_automaticFailover</a> - Indicates the status of
--   automatic failover for this Redis replication group.
newReplicationGroup :: ReplicationGroup

-- | The date the auth token was last modified
replicationGroup_authTokenLastModifiedDate :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
replicationGroup_status :: Lens' ReplicationGroup (Maybe Text)

-- | The name of the compute and memory capacity node type for each node in
--   the replication group.
replicationGroup_cacheNodeType :: Lens' ReplicationGroup (Maybe Text)

-- | A list of node groups in this replication group. For Redis (cluster
--   mode disabled) replication groups, this is a single-element list. For
--   Redis (cluster mode enabled) replication groups, the list contains an
--   entry for each node group (shard).
replicationGroup_nodeGroups :: Lens' ReplicationGroup (Maybe [NodeGroup])

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group.
replicationGroup_snapshottingClusterId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating whether or not this replication group is cluster
--   enabled; i.e., whether its data can be partitioned across multiple
--   shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
replicationGroup_clusterEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_atRestEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The date and time when the cluster was created.
replicationGroup_replicationGroupCreateTime :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The ARN (Amazon Resource Name) of the replication group.
replicationGroup_arn :: Lens' ReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_transitEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The ID of the user group associated to the replication group.
replicationGroup_userGroupIds :: Lens' ReplicationGroup (Maybe [Text])

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
replicationGroup_snapshotWindow :: Lens' ReplicationGroup (Maybe Text)

-- | Returns the destination, format and type of the logs.
replicationGroup_logDeliveryConfigurations :: Lens' ReplicationGroup (Maybe [LogDeliveryConfiguration])

-- | The configuration endpoint for this replication group. Use the
--   configuration endpoint to connect to this replication group.
replicationGroup_configurationEndpoint :: Lens' ReplicationGroup (Maybe Endpoint)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
replicationGroup_authTokenEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The names of all the cache clusters that are part of this replication
--   group.
replicationGroup_memberClusters :: Lens' ReplicationGroup (Maybe [Text])

-- | The ID of the KMS key used to encrypt the disk in the cluster.
replicationGroup_kmsKeyId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
replicationGroup_multiAZ :: Lens' ReplicationGroup (Maybe MultiAZStatus)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
replicationGroup_snapshotRetentionLimit :: Lens' ReplicationGroup (Maybe Int)

-- | The user supplied description of the replication group.
replicationGroup_description :: Lens' ReplicationGroup (Maybe Text)

-- | The identifier for the replication group.
replicationGroup_replicationGroupId :: Lens' ReplicationGroup (Maybe Text)

-- | A group of settings to be applied to the replication group, either
--   immediately or during the next maintenance window.
replicationGroup_pendingModifiedValues :: Lens' ReplicationGroup (Maybe ReplicationGroupPendingModifiedValues)

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
replicationGroup_globalReplicationGroupInfo :: Lens' ReplicationGroup (Maybe GlobalReplicationGroupInfo)

-- | The outpost ARNs of the replication group's member clusters.
replicationGroup_memberClustersOutpostArns :: Lens' ReplicationGroup (Maybe [Text])

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroup_automaticFailover :: Lens' ReplicationGroup (Maybe AutomaticFailoverStatus)
instance GHC.Generics.Generic Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance Amazonka.Data.XML.FromXML Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.Types.ReplicationGroup.ReplicationGroup


module Amazonka.ElastiCache.Types

-- | API version <tt>2015-02-02</tt> of the Amazon ElastiCache SDK
--   configuration.
defaultService :: Service

-- | The requested cache subnet group is currently in use.
_CacheSubnetGroupInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a reservation with the given identifier.
_ReservedCacheNodeAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache security group name does not refer to an existing
--   cache security group.
_CacheSecurityGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore is not available or in primary-only state.
_InvalidGlobalReplicationGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache subnet group name is already in use by an existing
--   cache subnet group.
_CacheSubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore name already exists.
_GlobalReplicationGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   allowed number of node groups (shards) in a single replication group.
--   The default maximum is 90
_NodeGroupsPerReplicationGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache subnet groups.
_CacheSubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon EC2 security group is already authorized for the
--   specified cache security group.
_AuthorizationAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the user's
--   cache node quota.
_ReservedCacheNodeQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache node offering does not exist.
_ReservedCacheNodesOfferingNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified replication group does not exist.
_ReplicationGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid subnet identifier was specified.
_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group is not in an active state.
_InvalidUserGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would cause the resource to
--   have more than the allowed number of tags. The maximum number of tags
--   permitted on a resource is 50.
_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | A user with this ID already exists.
_UserAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user is not in active state.
_InvalidUserStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested snapshot name does not refer to an existing snapshot.
_SnapshotNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache node type is not available in the specified
--   Availability Zone. For more information, see
--   <a>InsufficientCacheClusterCapacity</a> in the ElastiCache User Guide.
_InsufficientCacheClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the snapshot does not allow the requested
--   operation to occur.
_InvalidSnapshotStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a snapshot with the given name.
_SnapshotAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You must add default user to a user group.
_DefaultUserRequired :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested tag was not found on this resource.
_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   number of snapshots.
_SnapshotQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache nodes in a single cluster.
_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The customer has exceeded the allowed rate of API calls.
_APICallRateForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The node group specified by the <tt>NodeGroupId</tt> parameter could
--   not be found. Please verify that the node group exists and that you
--   spelled the <tt>NodeGroupId</tt> value correctly.
_NodeGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A cache parameter group with the requested name already exists.
_CacheParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified service linked role (SLR) was not found.
_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The KMS key supplied is not valid.
_InvalidKMSKeyFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore does not exist
_GlobalReplicationGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested reserved cache node was not found.
_ReservedCacheNodeNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache subnet group name does not refer to an existing
--   cache subnet group.
_CacheSubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You attempted one of the following operations:
--   
--   <ul>
--   <li>Creating a snapshot of a Redis cluster running on a
--   <tt>cache.t1.micro</tt> cache node.</li>
--   <li>Creating a snapshot of a cluster that is running Memcached rather
--   than Redis.</li>
--   </ul>
--   
--   Neither of these are supported by ElastiCache.
_SnapshotFeatureNotSupportedFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>TestFailover</tt> action is not available.
_TestFailoverNotAvailableFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one subnet ID does not match the other subnet IDs. This
--   mismatch typically occurs when a user sets one subnet ID to a regional
--   Availability Zone and a different one to an outpost. Or when a user
--   sets the subnet ID to an Outpost when not subscribed on this service.
_SubnetNotAllowedFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested replication group is not in the <tt>available</tt>
--   state.
_InvalidReplicationGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified replication group already exists.
_ReplicationGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC network is in an invalid state.
_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested subnet is being used by another cache subnet group.
_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group was not found or does not exist
_UserGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster ID does not refer to an existing cluster.
_CacheClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of clusters per customer.
_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon EC2 security group is not authorized for the
--   specified cache security group.
_AuthorizationNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group with this ID already exists.
_UserGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster is not in the <tt>available</tt> state.
_InvalidCacheClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache security groups.
_CacheSecurityGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a cluster with the given identifier.
_CacheClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   number of cache security groups.
_CacheParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service update doesn't exist
_ServiceUpdateNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The default user assigned to the user group.
_DefaultUserAssociatedToUserGroupFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user does not exist or could not be found.
_UserNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache nodes per customer.
_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a cache subnet group.
_CacheSubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The designated replication group is not available for data migration.
_ReplicationGroupNotUnderMigrationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The targeted replication group is not available.
_ReplicationGroupAlreadyUnderMigrationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache parameter group name does not refer to an existing
--   cache parameter group.
_CacheParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A user with this username already exists.
_DuplicateUserNameFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The quota of users has been exceeded.
_UserQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Amazon Resource Name (ARN) does not refer to an existing
--   resource.
_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was not performed because no changes were required.
_NoOperationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the cache parameter group does not allow the
--   requested operation to occur.
_InvalidCacheParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more incompatible parameters were specified.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of users exceeds the user group limit.
_UserGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the cache security group does not allow deletion.
_InvalidCacheSecurityGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A cache security group with the specified name already exists.
_CacheSecurityGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError
newtype AZMode
AZMode' :: Text -> AZMode
[fromAZMode] :: AZMode -> Text
pattern AZMode_Cross_az :: AZMode
pattern AZMode_Single_az :: AZMode
newtype AuthTokenUpdateStatus
AuthTokenUpdateStatus' :: Text -> AuthTokenUpdateStatus
[fromAuthTokenUpdateStatus] :: AuthTokenUpdateStatus -> Text
pattern AuthTokenUpdateStatus_ROTATING :: AuthTokenUpdateStatus
pattern AuthTokenUpdateStatus_SETTING :: AuthTokenUpdateStatus
newtype AuthTokenUpdateStrategyType
AuthTokenUpdateStrategyType' :: Text -> AuthTokenUpdateStrategyType
[fromAuthTokenUpdateStrategyType] :: AuthTokenUpdateStrategyType -> Text
pattern AuthTokenUpdateStrategyType_DELETE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_ROTATE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_SET :: AuthTokenUpdateStrategyType
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
newtype AutomaticFailoverStatus
AutomaticFailoverStatus' :: Text -> AutomaticFailoverStatus
[fromAutomaticFailoverStatus] :: AutomaticFailoverStatus -> Text
pattern AutomaticFailoverStatus_Disabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Disabling :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabling :: AutomaticFailoverStatus
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_Immediate :: ChangeType
pattern ChangeType_Requires_reboot :: ChangeType
newtype DestinationType
DestinationType' :: Text -> DestinationType
[fromDestinationType] :: DestinationType -> Text
pattern DestinationType_Cloudwatch_logs :: DestinationType
pattern DestinationType_Kinesis_firehose :: DestinationType
newtype LogDeliveryConfigurationStatus
LogDeliveryConfigurationStatus' :: Text -> LogDeliveryConfigurationStatus
[fromLogDeliveryConfigurationStatus] :: LogDeliveryConfigurationStatus -> Text
pattern LogDeliveryConfigurationStatus_Active :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Disabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Enabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Error :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Modifying :: LogDeliveryConfigurationStatus
newtype LogFormat
LogFormat' :: Text -> LogFormat
[fromLogFormat] :: LogFormat -> Text
pattern LogFormat_Json :: LogFormat
pattern LogFormat_Text :: LogFormat
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Slow_log :: LogType
newtype MultiAZStatus
MultiAZStatus' :: Text -> MultiAZStatus
[fromMultiAZStatus] :: MultiAZStatus -> Text
pattern MultiAZStatus_Disabled :: MultiAZStatus
pattern MultiAZStatus_Enabled :: MultiAZStatus
newtype NodeUpdateInitiatedBy
NodeUpdateInitiatedBy' :: Text -> NodeUpdateInitiatedBy
[fromNodeUpdateInitiatedBy] :: NodeUpdateInitiatedBy -> Text
pattern NodeUpdateInitiatedBy_Customer :: NodeUpdateInitiatedBy
pattern NodeUpdateInitiatedBy_System :: NodeUpdateInitiatedBy
newtype NodeUpdateStatus
NodeUpdateStatus' :: Text -> NodeUpdateStatus
[fromNodeUpdateStatus] :: NodeUpdateStatus -> Text
pattern NodeUpdateStatus_Complete :: NodeUpdateStatus
pattern NodeUpdateStatus_In_progress :: NodeUpdateStatus
pattern NodeUpdateStatus_Not_applied :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopped :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopping :: NodeUpdateStatus
pattern NodeUpdateStatus_Waiting_to_start :: NodeUpdateStatus
newtype OutpostMode
OutpostMode' :: Text -> OutpostMode
[fromOutpostMode] :: OutpostMode -> Text
pattern OutpostMode_Cross_outpost :: OutpostMode
pattern OutpostMode_Single_outpost :: OutpostMode
newtype PendingAutomaticFailoverStatus
PendingAutomaticFailoverStatus' :: Text -> PendingAutomaticFailoverStatus
[fromPendingAutomaticFailoverStatus] :: PendingAutomaticFailoverStatus -> Text
pattern PendingAutomaticFailoverStatus_Disabled :: PendingAutomaticFailoverStatus
pattern PendingAutomaticFailoverStatus_Enabled :: PendingAutomaticFailoverStatus
newtype ServiceUpdateSeverity
ServiceUpdateSeverity' :: Text -> ServiceUpdateSeverity
[fromServiceUpdateSeverity] :: ServiceUpdateSeverity -> Text
pattern ServiceUpdateSeverity_Critical :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Important :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Low :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Medium :: ServiceUpdateSeverity
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Cancelled :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Expired :: ServiceUpdateStatus
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
newtype SlaMet
SlaMet' :: Text -> SlaMet
[fromSlaMet] :: SlaMet -> Text
pattern SlaMet_N_a :: SlaMet
pattern SlaMet_No :: SlaMet
pattern SlaMet_Yes :: SlaMet
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Cache_cluster :: SourceType
pattern SourceType_Cache_parameter_group :: SourceType
pattern SourceType_Cache_security_group :: SourceType
pattern SourceType_Cache_subnet_group :: SourceType
pattern SourceType_Replication_group :: SourceType
pattern SourceType_User :: SourceType
pattern SourceType_User_group :: SourceType
newtype UpdateActionStatus
UpdateActionStatus' :: Text -> UpdateActionStatus
[fromUpdateActionStatus] :: UpdateActionStatus -> Text
pattern UpdateActionStatus_Complete :: UpdateActionStatus
pattern UpdateActionStatus_In_progress :: UpdateActionStatus
pattern UpdateActionStatus_Not_applicable :: UpdateActionStatus
pattern UpdateActionStatus_Not_applied :: UpdateActionStatus
pattern UpdateActionStatus_Scheduled :: UpdateActionStatus
pattern UpdateActionStatus_Scheduling :: UpdateActionStatus
pattern UpdateActionStatus_Stopped :: UpdateActionStatus
pattern UpdateActionStatus_Stopping :: UpdateActionStatus
pattern UpdateActionStatus_Waiting_to_start :: UpdateActionStatus

-- | Indicates whether the user requires a password to authenticate.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | The number of passwords belonging to the user. The maximum is two.
[$sel:passwordCount:Authentication'] :: Authentication -> Maybe Int

-- | Indicates whether the user requires a password to authenticate.
[$sel:type':Authentication'] :: Authentication -> Maybe AuthenticationType

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)

-- | Describes an Availability Zone in which the cluster is launched.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | The name of the Availability Zone.
[$sel:name:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCacheCluster</a> smart constructor.
data CacheCluster
CacheCluster' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [CacheNode] -> Maybe ISO8601 -> Maybe Bool -> Maybe Bool -> Maybe [SecurityGroupMembership] -> Maybe NotificationConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Text -> Maybe [CacheSecurityGroupMembership] -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CacheParameterGroupStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe PendingModifiedValues -> Maybe Int -> CacheCluster

-- | The date the auth token was last modified
[$sel:authTokenLastModifiedDate:CacheCluster'] :: CacheCluster -> Maybe ISO8601

-- | The version of the cache engine that is used in this cluster.
[$sel:engineVersion:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the compute and memory capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A list of cache nodes that are members of the cluster.
[$sel:cacheNodes:CacheCluster'] :: CacheCluster -> Maybe [CacheNode]

-- | The date and time when the cluster was created.
[$sel:cacheClusterCreateTime:CacheCluster'] :: CacheCluster -> Maybe ISO8601

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:atRestEncryptionEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | A list of VPC Security Groups associated with the cluster.
[$sel:securityGroups:CacheCluster'] :: CacheCluster -> Maybe [SecurityGroupMembership]

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
[$sel:notificationConfiguration:CacheCluster'] :: CacheCluster -> Maybe NotificationConfiguration

-- | The ARN (Amazon Resource Name) of the cache cluster.
[$sel:arn:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:transitEncryptionEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
--   
--   Example: <tt>05:00-09:00</tt>
[$sel:snapshotWindow:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The user-supplied identifier of the cluster. This identifier is a
--   unique key that identifies a cluster.
[$sel:cacheClusterId:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Returns the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:CacheCluster'] :: CacheCluster -> Maybe [LogDeliveryConfiguration]

-- | Represents a Memcached cluster endpoint which can be used by an
--   application to connect to any node in the cluster. The configuration
--   endpoint will always have <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
[$sel:configurationEndpoint:CacheCluster'] :: CacheCluster -> Maybe Endpoint

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to
--   be used for this cluster.
[$sel:engine:CacheCluster'] :: CacheCluster -> Maybe Text

-- | A list of cache security group elements, composed of name and status
--   sub-elements.
[$sel:cacheSecurityGroups:CacheCluster'] :: CacheCluster -> Maybe [CacheSecurityGroupMembership]

-- | A boolean value indicating whether log delivery is enabled for the
--   replication group.
[$sel:replicationGroupLogDeliveryEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:CacheCluster'] :: CacheCluster -> Maybe Bool

-- | The URL of the web page where you can download the latest ElastiCache
--   client library.
[$sel:clientDownloadLandingPage:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the cache subnet group associated with the cluster.
[$sel:cacheSubnetGroupName:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The name of the Availability Zone in which the cluster is located or
--   "Multiple" if the cache nodes are located in different Availability
--   Zones.
[$sel:preferredAvailabilityZone:CacheCluster'] :: CacheCluster -> Maybe Text

-- | Status of the cache parameter group.
[$sel:cacheParameterGroup:CacheCluster'] :: CacheCluster -> Maybe CacheParameterGroupStatus

-- | The current state of this cluster, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>deleted</tt>,
--   <tt>deleting</tt>, <tt>incompatible-network</tt>, <tt>modifying</tt>,
--   <tt>rebooting cluster nodes</tt>, <tt>restore-failed</tt>, or
--   <tt>snapshotting</tt>.
[$sel:cacheClusterStatus:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
[$sel:snapshotRetentionLimit:CacheCluster'] :: CacheCluster -> Maybe Int

-- | The outpost ARN in which the cache cluster is created.
[$sel:preferredOutpostArn:CacheCluster'] :: CacheCluster -> Maybe Text

-- | The replication group to which this cluster belongs. If this field is
--   empty, the cluster is not associated with any replication group.
[$sel:replicationGroupId:CacheCluster'] :: CacheCluster -> Maybe Text
[$sel:pendingModifiedValues:CacheCluster'] :: CacheCluster -> Maybe PendingModifiedValues

-- | The number of cache nodes in the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:CacheCluster'] :: CacheCluster -> Maybe Int

-- | Create a value of <a>CacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:CacheCluster'</a>,
--   <a>cacheCluster_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:engineVersion:CacheCluster'</a>,
--   <a>cacheCluster_engineVersion</a> - The version of the cache engine
--   that is used in this cluster.
--   
--   <a>$sel:cacheNodeType:CacheCluster'</a>,
--   <a>cacheCluster_cacheNodeType</a> - The name of the compute and memory
--   capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheNodes:CacheCluster'</a>, <a>cacheCluster_cacheNodes</a> -
--   A list of cache nodes that are members of the cluster.
--   
--   <a>$sel:cacheClusterCreateTime:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterCreateTime</a> - The date and time when
--   the cluster was created.
--   
--   <a>$sel:atRestEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CacheCluster'</a>,
--   <a>cacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:securityGroups:CacheCluster'</a>,
--   <a>cacheCluster_securityGroups</a> - A list of VPC Security Groups
--   associated with the cluster.
--   
--   <a>$sel:notificationConfiguration:CacheCluster'</a>,
--   <a>cacheCluster_notificationConfiguration</a> - Describes a
--   notification topic and its status. Notification topics are used for
--   publishing ElastiCache events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <a>$sel:arn:CacheCluster'</a>, <a>cacheCluster_arn</a> - The ARN
--   (Amazon Resource Name) of the cache cluster.
--   
--   <a>$sel:transitEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:snapshotWindow:CacheCluster'</a>,
--   <a>cacheCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your
--   cluster.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   <a>$sel:cacheClusterId:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterId</a> - The user-supplied identifier of
--   the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:logDeliveryConfigurations:CacheCluster'</a>,
--   <a>cacheCluster_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:CacheCluster'</a>,
--   <a>cacheCluster_configurationEndpoint</a> - Represents a Memcached
--   cluster endpoint which can be used by an application to connect to any
--   node in the cluster. The configuration endpoint will always have
--   <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
--   
--   <a>$sel:engine:CacheCluster'</a>, <a>cacheCluster_engine</a> - The
--   name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to be
--   used for this cluster.
--   
--   <a>$sel:cacheSecurityGroups:CacheCluster'</a>,
--   <a>cacheCluster_cacheSecurityGroups</a> - A list of cache security
--   group elements, composed of name and status sub-elements.
--   
--   <a>$sel:replicationGroupLogDeliveryEnabled:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupLogDeliveryEnabled</a> - A boolean
--   value indicating whether log delivery is enabled for the replication
--   group.
--   
--   <a>$sel:authTokenEnabled:CacheCluster'</a>,
--   <a>cacheCluster_authTokenEnabled</a> - A flag that enables using an
--   <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:clientDownloadLandingPage:CacheCluster'</a>,
--   <a>cacheCluster_clientDownloadLandingPage</a> - The URL of the web
--   page where you can download the latest ElastiCache client library.
--   
--   <a>$sel:preferredMaintenanceWindow:CacheCluster'</a>,
--   <a>cacheCluster_preferredMaintenanceWindow</a> - Specifies the weekly
--   time range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:cacheSubnetGroupName:CacheCluster'</a>,
--   <a>cacheCluster_cacheSubnetGroupName</a> - The name of the cache
--   subnet group associated with the cluster.
--   
--   <a>$sel:preferredAvailabilityZone:CacheCluster'</a>,
--   <a>cacheCluster_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the cluster is located or "Multiple" if the
--   cache nodes are located in different Availability Zones.
--   
--   <a>$sel:cacheParameterGroup:CacheCluster'</a>,
--   <a>cacheCluster_cacheParameterGroup</a> - Status of the cache
--   parameter group.
--   
--   <a>$sel:cacheClusterStatus:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterStatus</a> - The current state of this
--   cluster, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>deleted</tt>, <tt>deleting</tt>,
--   <tt>incompatible-network</tt>, <tt>modifying</tt>, <tt>rebooting
--   cluster nodes</tt>, <tt>restore-failed</tt>, or <tt>snapshotting</tt>.
--   
--   <a>$sel:snapshotRetentionLimit:CacheCluster'</a>,
--   <a>cacheCluster_snapshotRetentionLimit</a> - The number of days for
--   which ElastiCache retains automatic cluster snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot that was taken today is retained for 5 days before being
--   deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
--   
--   <a>$sel:preferredOutpostArn:CacheCluster'</a>,
--   <a>cacheCluster_preferredOutpostArn</a> - The outpost ARN in which the
--   cache cluster is created.
--   
--   <a>$sel:replicationGroupId:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupId</a> - The replication group to
--   which this cluster belongs. If this field is empty, the cluster is not
--   associated with any replication group.
--   
--   <a>$sel:pendingModifiedValues:CacheCluster'</a>,
--   <a>cacheCluster_pendingModifiedValues</a> - Undocumented member.
--   
--   <a>$sel:numCacheNodes:CacheCluster'</a>,
--   <a>cacheCluster_numCacheNodes</a> - The number of cache nodes in the
--   cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newCacheCluster :: CacheCluster

-- | The date the auth token was last modified
cacheCluster_authTokenLastModifiedDate :: Lens' CacheCluster (Maybe UTCTime)

-- | The version of the cache engine that is used in this cluster.
cacheCluster_engineVersion :: Lens' CacheCluster (Maybe Text)

-- | The name of the compute and memory capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
cacheCluster_cacheNodeType :: Lens' CacheCluster (Maybe Text)

-- | A list of cache nodes that are members of the cluster.
cacheCluster_cacheNodes :: Lens' CacheCluster (Maybe [CacheNode])

-- | The date and time when the cluster was created.
cacheCluster_cacheClusterCreateTime :: Lens' CacheCluster (Maybe UTCTime)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_atRestEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | This parameter is currently disabled.
cacheCluster_autoMinorVersionUpgrade :: Lens' CacheCluster (Maybe Bool)

-- | A list of VPC Security Groups associated with the cluster.
cacheCluster_securityGroups :: Lens' CacheCluster (Maybe [SecurityGroupMembership])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
cacheCluster_notificationConfiguration :: Lens' CacheCluster (Maybe NotificationConfiguration)

-- | The ARN (Amazon Resource Name) of the cache cluster.
cacheCluster_arn :: Lens' CacheCluster (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_transitEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
--   
--   Example: <tt>05:00-09:00</tt>
cacheCluster_snapshotWindow :: Lens' CacheCluster (Maybe Text)

-- | The user-supplied identifier of the cluster. This identifier is a
--   unique key that identifies a cluster.
cacheCluster_cacheClusterId :: Lens' CacheCluster (Maybe Text)

-- | Returns the destination, format and type of the logs.
cacheCluster_logDeliveryConfigurations :: Lens' CacheCluster (Maybe [LogDeliveryConfiguration])

-- | Represents a Memcached cluster endpoint which can be used by an
--   application to connect to any node in the cluster. The configuration
--   endpoint will always have <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
cacheCluster_configurationEndpoint :: Lens' CacheCluster (Maybe Endpoint)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to
--   be used for this cluster.
cacheCluster_engine :: Lens' CacheCluster (Maybe Text)

-- | A list of cache security group elements, composed of name and status
--   sub-elements.
cacheCluster_cacheSecurityGroups :: Lens' CacheCluster (Maybe [CacheSecurityGroupMembership])

-- | A boolean value indicating whether log delivery is enabled for the
--   replication group.
cacheCluster_replicationGroupLogDeliveryEnabled :: Lens' CacheCluster (Maybe Bool)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
cacheCluster_authTokenEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The URL of the web page where you can download the latest ElastiCache
--   client library.
cacheCluster_clientDownloadLandingPage :: Lens' CacheCluster (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
cacheCluster_preferredMaintenanceWindow :: Lens' CacheCluster (Maybe Text)

-- | The name of the cache subnet group associated with the cluster.
cacheCluster_cacheSubnetGroupName :: Lens' CacheCluster (Maybe Text)

-- | The name of the Availability Zone in which the cluster is located or
--   "Multiple" if the cache nodes are located in different Availability
--   Zones.
cacheCluster_preferredAvailabilityZone :: Lens' CacheCluster (Maybe Text)

-- | Status of the cache parameter group.
cacheCluster_cacheParameterGroup :: Lens' CacheCluster (Maybe CacheParameterGroupStatus)

-- | The current state of this cluster, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>deleted</tt>,
--   <tt>deleting</tt>, <tt>incompatible-network</tt>, <tt>modifying</tt>,
--   <tt>rebooting cluster nodes</tt>, <tt>restore-failed</tt>, or
--   <tt>snapshotting</tt>.
cacheCluster_cacheClusterStatus :: Lens' CacheCluster (Maybe Text)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
cacheCluster_snapshotRetentionLimit :: Lens' CacheCluster (Maybe Int)

-- | The outpost ARN in which the cache cluster is created.
cacheCluster_preferredOutpostArn :: Lens' CacheCluster (Maybe Text)

-- | The replication group to which this cluster belongs. If this field is
--   empty, the cluster is not associated with any replication group.
cacheCluster_replicationGroupId :: Lens' CacheCluster (Maybe Text)

-- | Undocumented member.
cacheCluster_pendingModifiedValues :: Lens' CacheCluster (Maybe PendingModifiedValues)

-- | The number of cache nodes in the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
cacheCluster_numCacheNodes :: Lens' CacheCluster (Maybe Int)

-- | Provides all of the details about a particular cache engine version.
--   
--   <i>See:</i> <a>newCacheEngineVersion</a> smart constructor.
data CacheEngineVersion
CacheEngineVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> CacheEngineVersion

-- | The version number of the cache engine.
[$sel:engineVersion:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The name of the cache parameter group family associated with this
--   cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The description of the cache engine.
[$sel:cacheEngineDescription:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The name of the cache engine.
[$sel:engine:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | The description of the cache engine version.
[$sel:cacheEngineVersionDescription:CacheEngineVersion'] :: CacheEngineVersion -> Maybe Text

-- | Create a value of <a>CacheEngineVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engineVersion</a> - The version number of the
--   cache engine.
--   
--   <a>$sel:cacheParameterGroupFamily:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family associated with this cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheEngineDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineDescription</a> - The description of
--   the cache engine.
--   
--   <a>$sel:engine:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engine</a> - The name of the cache engine.
--   
--   <a>$sel:cacheEngineVersionDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineVersionDescription</a> - The
--   description of the cache engine version.
newCacheEngineVersion :: CacheEngineVersion

-- | The version number of the cache engine.
cacheEngineVersion_engineVersion :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache parameter group family associated with this
--   cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheEngineVersion_cacheParameterGroupFamily :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine.
cacheEngineVersion_cacheEngineDescription :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache engine.
cacheEngineVersion_engine :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine version.
cacheEngineVersion_cacheEngineVersionDescription :: Lens' CacheEngineVersion (Maybe Text)

-- | Represents an individual cache node within a cluster. Each cache node
--   runs its own instance of the cluster's protocol-compliant caching
--   software - either Memcached or Redis.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheNode</a> smart constructor.
data CacheNode
CacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> CacheNode

-- | The ID of the primary node to which this read replica node is
--   synchronized. If this field is empty, this node is not associated with
--   a primary cluster.
[$sel:sourceCacheNodeId:CacheNode'] :: CacheNode -> Maybe Text

-- | The status of the parameter group applied to this cache node.
[$sel:parameterGroupStatus:CacheNode'] :: CacheNode -> Maybe Text

-- | The date and time when the cache node was created.
[$sel:cacheNodeCreateTime:CacheNode'] :: CacheNode -> Maybe ISO8601

-- | The Availability Zone where this node was created and now resides.
[$sel:customerAvailabilityZone:CacheNode'] :: CacheNode -> Maybe Text

-- | The cache node identifier. A node ID is a numeric identifier (0001,
--   0002, etc.). The combination of cluster ID and node ID uniquely
--   identifies every cache node used in a customer's Amazon account.
[$sel:cacheNodeId:CacheNode'] :: CacheNode -> Maybe Text

-- | The customer outpost ARN of the cache node.
[$sel:customerOutpostArn:CacheNode'] :: CacheNode -> Maybe Text

-- | The current state of this cache node, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>rebooting</tt>, or
--   <tt>deleting</tt>.
[$sel:cacheNodeStatus:CacheNode'] :: CacheNode -> Maybe Text

-- | The hostname for connecting to this cache node.
[$sel:endpoint:CacheNode'] :: CacheNode -> Maybe Endpoint

-- | Create a value of <a>CacheNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCacheNodeId:CacheNode'</a>,
--   <a>cacheNode_sourceCacheNodeId</a> - The ID of the primary node to
--   which this read replica node is synchronized. If this field is empty,
--   this node is not associated with a primary cluster.
--   
--   <a>$sel:parameterGroupStatus:CacheNode'</a>,
--   <a>cacheNode_parameterGroupStatus</a> - The status of the parameter
--   group applied to this cache node.
--   
--   <a>$sel:cacheNodeCreateTime:CacheNode'</a>,
--   <a>cacheNode_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created.
--   
--   <a>$sel:customerAvailabilityZone:CacheNode'</a>,
--   <a>cacheNode_customerAvailabilityZone</a> - The Availability Zone
--   where this node was created and now resides.
--   
--   <a>$sel:cacheNodeId:CacheNode'</a>, <a>cacheNode_cacheNodeId</a> - The
--   cache node identifier. A node ID is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster ID and node ID uniquely identifies
--   every cache node used in a customer's Amazon account.
--   
--   <a>$sel:customerOutpostArn:CacheNode'</a>,
--   <a>cacheNode_customerOutpostArn</a> - The customer outpost ARN of the
--   cache node.
--   
--   <a>$sel:cacheNodeStatus:CacheNode'</a>,
--   <a>cacheNode_cacheNodeStatus</a> - The current state of this cache
--   node, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>rebooting</tt>, or <tt>deleting</tt>.
--   
--   <a>$sel:endpoint:CacheNode'</a>, <a>cacheNode_endpoint</a> - The
--   hostname for connecting to this cache node.
newCacheNode :: CacheNode

-- | The ID of the primary node to which this read replica node is
--   synchronized. If this field is empty, this node is not associated with
--   a primary cluster.
cacheNode_sourceCacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The status of the parameter group applied to this cache node.
cacheNode_parameterGroupStatus :: Lens' CacheNode (Maybe Text)

-- | The date and time when the cache node was created.
cacheNode_cacheNodeCreateTime :: Lens' CacheNode (Maybe UTCTime)

-- | The Availability Zone where this node was created and now resides.
cacheNode_customerAvailabilityZone :: Lens' CacheNode (Maybe Text)

-- | The cache node identifier. A node ID is a numeric identifier (0001,
--   0002, etc.). The combination of cluster ID and node ID uniquely
--   identifies every cache node used in a customer's Amazon account.
cacheNode_cacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The customer outpost ARN of the cache node.
cacheNode_customerOutpostArn :: Lens' CacheNode (Maybe Text)

-- | The current state of this cache node, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>rebooting</tt>, or
--   <tt>deleting</tt>.
cacheNode_cacheNodeStatus :: Lens' CacheNode (Maybe Text)

-- | The hostname for connecting to this cache node.
cacheNode_endpoint :: Lens' CacheNode (Maybe Endpoint)

-- | A parameter that has a different value for each cache node type it is
--   applied to. For example, in a Redis cluster, a <tt>cache.m1.large</tt>
--   cache node type would have a larger <tt>maxmemory</tt> value than a
--   <tt>cache.m1.small</tt> type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificParameter</a> smart
--   constructor.
data CacheNodeTypeSpecificParameter
CacheNodeTypeSpecificParameter' :: Maybe [CacheNodeTypeSpecificValue] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> CacheNodeTypeSpecificParameter

-- | A list of cache node types and their corresponding values for this
--   parameter.
[$sel:cacheNodeTypeSpecificValues:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe [CacheNodeTypeSpecificValue]

-- | The earliest cache engine version to which the parameter can apply.
[$sel:minimumEngineVersion:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The source of the parameter value.
[$sel:source:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
[$sel:isModifiable:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Bool

-- | The valid data type for the parameter.
[$sel:dataType:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | A description of the parameter.
[$sel:description:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe Text

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
[$sel:changeType:CacheNodeTypeSpecificParameter'] :: CacheNodeTypeSpecificParameter -> Maybe ChangeType

-- | Create a value of <a>CacheNodeTypeSpecificParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheNodeTypeSpecificValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues</a> - A
--   list of cache node types and their corresponding values for this
--   parameter.
--   
--   <a>$sel:minimumEngineVersion:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_minimumEngineVersion</a> - The
--   earliest cache engine version to which the parameter can apply.
--   
--   <a>$sel:source:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_source</a> - The source of the
--   parameter value.
--   
--   <a>$sel:isModifiable:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_isModifiable</a> - Indicates whether
--   (<tt>true</tt>) or not (<tt>false</tt>) the parameter can be modified.
--   Some parameters have security or operational implications that prevent
--   them from being changed.
--   
--   <a>$sel:dataType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_dataType</a> - The valid data type
--   for the parameter.
--   
--   <a>$sel:allowedValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_allowedValues</a> - The valid range
--   of values for the parameter.
--   
--   <a>$sel:parameterName:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_parameterName</a> - The name of the
--   parameter.
--   
--   <a>$sel:description:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_description</a> - A description of
--   the parameter.
--   
--   <a>$sel:changeType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_changeType</a> - Indicates whether a
--   change to the parameter is applied immediately or requires a reboot
--   for the change to be applied. You can force a reboot or wait until the
--   next maintenance window's reboot. For more information, see
--   <a>Rebooting a Cluster</a>.
newCacheNodeTypeSpecificParameter :: CacheNodeTypeSpecificParameter

-- | A list of cache node types and their corresponding values for this
--   parameter.
cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues :: Lens' CacheNodeTypeSpecificParameter (Maybe [CacheNodeTypeSpecificValue])

-- | The earliest cache engine version to which the parameter can apply.
cacheNodeTypeSpecificParameter_minimumEngineVersion :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The source of the parameter value.
cacheNodeTypeSpecificParameter_source :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
cacheNodeTypeSpecificParameter_isModifiable :: Lens' CacheNodeTypeSpecificParameter (Maybe Bool)

-- | The valid data type for the parameter.
cacheNodeTypeSpecificParameter_dataType :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The valid range of values for the parameter.
cacheNodeTypeSpecificParameter_allowedValues :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The name of the parameter.
cacheNodeTypeSpecificParameter_parameterName :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | A description of the parameter.
cacheNodeTypeSpecificParameter_description :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
cacheNodeTypeSpecificParameter_changeType :: Lens' CacheNodeTypeSpecificParameter (Maybe ChangeType)

-- | A value that applies only to a certain cache node type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificValue</a> smart constructor.
data CacheNodeTypeSpecificValue
CacheNodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> CacheNodeTypeSpecificValue

-- | The cache node type for which this value applies.
[$sel:cacheNodeType:CacheNodeTypeSpecificValue'] :: CacheNodeTypeSpecificValue -> Maybe Text

-- | The value for the cache node type.
[$sel:value:CacheNodeTypeSpecificValue'] :: CacheNodeTypeSpecificValue -> Maybe Text

-- | Create a value of <a>CacheNodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_cacheNodeType</a> - The cache node type
--   for which this value applies.
--   
--   <a>$sel:value:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_value</a> - The value for the cache node
--   type.
newCacheNodeTypeSpecificValue :: CacheNodeTypeSpecificValue

-- | The cache node type for which this value applies.
cacheNodeTypeSpecificValue_cacheNodeType :: Lens' CacheNodeTypeSpecificValue (Maybe Text)

-- | The value for the cache node type.
cacheNodeTypeSpecificValue_value :: Lens' CacheNodeTypeSpecificValue (Maybe Text)

-- | The status of the service update on the cache node
--   
--   <i>See:</i> <a>newCacheNodeUpdateStatus</a> smart constructor.
data CacheNodeUpdateStatus
CacheNodeUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> CacheNodeUpdateStatus

-- | The end date of the update for a node
[$sel:nodeUpdateEndDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
[$sel:nodeUpdateInitiatedBy:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe NodeUpdateInitiatedBy

-- | The date when the NodeUpdateStatus was last modified&gt;
[$sel:nodeUpdateStatusModifiedDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The node ID of the cache cluster
[$sel:cacheNodeId:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe Text

-- | The date when the update is triggered
[$sel:nodeUpdateInitiatedDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The start date of the update for a node
[$sel:nodeUpdateStartDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | The update status of the node
[$sel:nodeUpdateStatus:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe NodeUpdateStatus

-- | The deletion date of the node
[$sel:nodeDeletionDate:CacheNodeUpdateStatus'] :: CacheNodeUpdateStatus -> Maybe ISO8601

-- | Create a value of <a>CacheNodeUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateEndDate</a> - The end date of the
--   update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects whether
--   the update was initiated by the customer or automatically applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate</a> - The date
--   when the NodeUpdateStatus was last modified&gt;
--   
--   <a>$sel:cacheNodeId:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_cacheNodeId</a> - The node ID of the cache
--   cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedDate</a> - The date when
--   the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStartDate</a> - The start date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateStatus:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatus</a> - The update status of
--   the node
--   
--   <a>$sel:nodeDeletionDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeDeletionDate</a> - The deletion date of
--   the node
newCacheNodeUpdateStatus :: CacheNodeUpdateStatus

-- | The end date of the update for a node
cacheNodeUpdateStatus_nodeUpdateEndDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
cacheNodeUpdateStatus_nodeUpdateInitiatedBy :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified&gt;
cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The node ID of the cache cluster
cacheNodeUpdateStatus_cacheNodeId :: Lens' CacheNodeUpdateStatus (Maybe Text)

-- | The date when the update is triggered
cacheNodeUpdateStatus_nodeUpdateInitiatedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
cacheNodeUpdateStatus_nodeUpdateStartDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The update status of the node
cacheNodeUpdateStatus_nodeUpdateStatus :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
cacheNodeUpdateStatus_nodeDeletionDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | Represents the output of a <tt>CreateCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newCacheParameterGroup</a> smart constructor.
data CacheParameterGroup
CacheParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> CacheParameterGroup

-- | The name of the cache parameter group family that this cache parameter
--   group is compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | The ARN (Amazon Resource Name) of the cache parameter group.
[$sel:arn:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | Indicates whether the parameter group is associated with a Global
--   datastore
[$sel:isGlobal:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Bool

-- | The description for this cache parameter group.
[$sel:description:CacheParameterGroup'] :: CacheParameterGroup -> Maybe Text

-- | Create a value of <a>CacheParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family that this cache parameter group is
--   compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:arn:CacheParameterGroup'</a>, <a>cacheParameterGroup_arn</a> -
--   The ARN (Amazon Resource Name) of the cache parameter group.
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupName</a> - The name of the
--   cache parameter group.
--   
--   <a>$sel:isGlobal:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_isGlobal</a> - Indicates whether the parameter
--   group is associated with a Global datastore
--   
--   <a>$sel:description:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_description</a> - The description for this
--   cache parameter group.
newCacheParameterGroup :: CacheParameterGroup

-- | The name of the cache parameter group family that this cache parameter
--   group is compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheParameterGroup_cacheParameterGroupFamily :: Lens' CacheParameterGroup (Maybe Text)

-- | The ARN (Amazon Resource Name) of the cache parameter group.
cacheParameterGroup_arn :: Lens' CacheParameterGroup (Maybe Text)

-- | The name of the cache parameter group.
cacheParameterGroup_cacheParameterGroupName :: Lens' CacheParameterGroup (Maybe Text)

-- | Indicates whether the parameter group is associated with a Global
--   datastore
cacheParameterGroup_isGlobal :: Lens' CacheParameterGroup (Maybe Bool)

-- | The description for this cache parameter group.
cacheParameterGroup_description :: Lens' CacheParameterGroup (Maybe Text)

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'] :: CacheParameterGroupNameMessage -> Maybe Text

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)

-- | Status of the cache parameter group.
--   
--   <i>See:</i> <a>newCacheParameterGroupStatus</a> smart constructor.
data CacheParameterGroupStatus
CacheParameterGroupStatus' :: Maybe Text -> Maybe [Text] -> Maybe Text -> CacheParameterGroupStatus

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe Text

-- | A list of the cache node IDs which need to be rebooted for parameter
--   changes to be applied. A node ID is a numeric identifier (0001, 0002,
--   etc.).
[$sel:cacheNodeIdsToReboot:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe [Text]

-- | The status of parameter updates.
[$sel:parameterApplyStatus:CacheParameterGroupStatus'] :: CacheParameterGroupStatus -> Maybe Text

-- | Create a value of <a>CacheParameterGroupStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheParameterGroupName</a> - The name of
--   the cache parameter group.
--   
--   <a>$sel:cacheNodeIdsToReboot:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheNodeIdsToReboot</a> - A list of the
--   cache node IDs which need to be rebooted for parameter changes to be
--   applied. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:parameterApplyStatus:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newCacheParameterGroupStatus :: CacheParameterGroupStatus

-- | The name of the cache parameter group.
cacheParameterGroupStatus_cacheParameterGroupName :: Lens' CacheParameterGroupStatus (Maybe Text)

-- | A list of the cache node IDs which need to be rebooted for parameter
--   changes to be applied. A node ID is a numeric identifier (0001, 0002,
--   etc.).
cacheParameterGroupStatus_cacheNodeIdsToReboot :: Lens' CacheParameterGroupStatus (Maybe [Text])

-- | The status of parameter updates.
cacheParameterGroupStatus_parameterApplyStatus :: Lens' CacheParameterGroupStatus (Maybe Text)

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>AuthorizeCacheSecurityGroupIngress</pre></li>
--   <li><pre>CreateCacheSecurityGroup</pre></li>
--   <li><pre>RevokeCacheSecurityGroupIngress</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSecurityGroup</a> smart constructor.
data CacheSecurityGroup
CacheSecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [EC2SecurityGroup] -> Maybe Text -> CacheSecurityGroup

-- | The name of the cache security group.
[$sel:cacheSecurityGroupName:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | The ARN of the cache security group,
[$sel:arn:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | The Amazon account ID of the cache security group owner.
[$sel:ownerId:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | A list of Amazon EC2 security groups that are associated with this
--   cache security group.
[$sel:eC2SecurityGroups:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe [EC2SecurityGroup]

-- | The description of the cache security group.
[$sel:description:CacheSecurityGroup'] :: CacheSecurityGroup -> Maybe Text

-- | Create a value of <a>CacheSecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_cacheSecurityGroupName</a> - The name of the
--   cache security group.
--   
--   <a>$sel:arn:CacheSecurityGroup'</a>, <a>cacheSecurityGroup_arn</a> -
--   The ARN of the cache security group,
--   
--   <a>$sel:ownerId:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_ownerId</a> - The Amazon account ID of the cache
--   security group owner.
--   
--   <a>$sel:eC2SecurityGroups:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_eC2SecurityGroups</a> - A list of Amazon EC2
--   security groups that are associated with this cache security group.
--   
--   <a>$sel:description:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_description</a> - The description of the cache
--   security group.
newCacheSecurityGroup :: CacheSecurityGroup

-- | The name of the cache security group.
cacheSecurityGroup_cacheSecurityGroupName :: Lens' CacheSecurityGroup (Maybe Text)

-- | The ARN of the cache security group,
cacheSecurityGroup_arn :: Lens' CacheSecurityGroup (Maybe Text)

-- | The Amazon account ID of the cache security group owner.
cacheSecurityGroup_ownerId :: Lens' CacheSecurityGroup (Maybe Text)

-- | A list of Amazon EC2 security groups that are associated with this
--   cache security group.
cacheSecurityGroup_eC2SecurityGroups :: Lens' CacheSecurityGroup (Maybe [EC2SecurityGroup])

-- | The description of the cache security group.
cacheSecurityGroup_description :: Lens' CacheSecurityGroup (Maybe Text)

-- | Represents a cluster's status within a particular cache security
--   group.
--   
--   <i>See:</i> <a>newCacheSecurityGroupMembership</a> smart constructor.
data CacheSecurityGroupMembership
CacheSecurityGroupMembership' :: Maybe Text -> Maybe Text -> CacheSecurityGroupMembership

-- | The membership status in the cache security group. The status changes
--   when a cache security group is modified, or when the cache security
--   groups assigned to a cluster are modified.
[$sel:status:CacheSecurityGroupMembership'] :: CacheSecurityGroupMembership -> Maybe Text

-- | The name of the cache security group.
[$sel:cacheSecurityGroupName:CacheSecurityGroupMembership'] :: CacheSecurityGroupMembership -> Maybe Text

-- | Create a value of <a>CacheSecurityGroupMembership</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_status</a> - The membership status in
--   the cache security group. The status changes when a cache security
--   group is modified, or when the cache security groups assigned to a
--   cluster are modified.
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_cacheSecurityGroupName</a> - The name
--   of the cache security group.
newCacheSecurityGroupMembership :: CacheSecurityGroupMembership

-- | The membership status in the cache security group. The status changes
--   when a cache security group is modified, or when the cache security
--   groups assigned to a cluster are modified.
cacheSecurityGroupMembership_status :: Lens' CacheSecurityGroupMembership (Maybe Text)

-- | The name of the cache security group.
cacheSecurityGroupMembership_cacheSecurityGroupName :: Lens' CacheSecurityGroupMembership (Maybe Text)

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>CreateCacheSubnetGroup</pre></li>
--   <li><pre>ModifyCacheSubnetGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSubnetGroup</a> smart constructor.
data CacheSubnetGroup
CacheSubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> CacheSubnetGroup

-- | The ARN (Amazon Resource Name) of the cache subnet group.
[$sel:arn:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
[$sel:vpcId:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | A list of subnets associated with the cache subnet group.
[$sel:subnets:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe [Subnet]

-- | The name of the cache subnet group.
[$sel:cacheSubnetGroupName:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | The description of the cache subnet group.
[$sel:cacheSubnetGroupDescription:CacheSubnetGroup'] :: CacheSubnetGroup -> Maybe Text

-- | Create a value of <a>CacheSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the cache subnet group.
--   
--   <a>$sel:vpcId:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_vpcId</a> -
--   The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
--   
--   <a>$sel:subnets:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_subnets</a>
--   - A list of subnets associated with the cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupName:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupName</a> - The name of the cache
--   subnet group.
--   
--   <a>$sel:cacheSubnetGroupDescription:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupDescription</a> - The description
--   of the cache subnet group.
newCacheSubnetGroup :: CacheSubnetGroup

-- | The ARN (Amazon Resource Name) of the cache subnet group.
cacheSubnetGroup_arn :: Lens' CacheSubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
cacheSubnetGroup_vpcId :: Lens' CacheSubnetGroup (Maybe Text)

-- | A list of subnets associated with the cache subnet group.
cacheSubnetGroup_subnets :: Lens' CacheSubnetGroup (Maybe [Subnet])

-- | The name of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupName :: Lens' CacheSubnetGroup (Maybe Text)

-- | The description of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupDescription :: Lens' CacheSubnetGroup (Maybe Text)

-- | The configuration details of the CloudWatch Logs destination.
--   
--   <i>See:</i> <a>newCloudWatchLogsDestinationDetails</a> smart
--   constructor.
data CloudWatchLogsDestinationDetails
CloudWatchLogsDestinationDetails' :: Maybe Text -> CloudWatchLogsDestinationDetails

-- | The name of the CloudWatch Logs log group.
[$sel:logGroup:CloudWatchLogsDestinationDetails'] :: CloudWatchLogsDestinationDetails -> Maybe Text

-- | Create a value of <a>CloudWatchLogsDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogsDestinationDetails'</a>,
--   <a>cloudWatchLogsDestinationDetails_logGroup</a> - The name of the
--   CloudWatch Logs log group.
newCloudWatchLogsDestinationDetails :: CloudWatchLogsDestinationDetails

-- | The name of the CloudWatch Logs log group.
cloudWatchLogsDestinationDetails_logGroup :: Lens' CloudWatchLogsDestinationDetails (Maybe Text)

-- | Node group (shard) configuration options when adding or removing
--   replicas. Each node group (shard) configuration has the following
--   members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones.
--   
--   <i>See:</i> <a>newConfigureShard</a> smart constructor.
data ConfigureShard
ConfigureShard' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> ConfigureShard

-- | A list of <tt>PreferredAvailabilityZone</tt> strings that specify
--   which availability zones the replication group's nodes are to be in.
--   The nummber of <tt>PreferredAvailabilityZone</tt> values must equal
--   the value of <tt>NewReplicaCount</tt> plus 1 to account for the
--   primary node. If this member of <tt>ReplicaConfiguration</tt> is
--   omitted, ElastiCache for Redis selects the availability zone for each
--   of the replicas.
[$sel:preferredAvailabilityZones:ConfigureShard'] :: ConfigureShard -> Maybe [Text]

-- | The outpost ARNs in which the cache cluster is created.
[$sel:preferredOutpostArns:ConfigureShard'] :: ConfigureShard -> Maybe [Text]

-- | The 4-digit id for the node group you are configuring. For Redis
--   (cluster mode disabled) replication groups, the node group id is
--   always 0001. To find a Redis (cluster mode enabled)'s node group's
--   (shard's) id, see <a>Finding a Shard's Id</a>.
[$sel:nodeGroupId:ConfigureShard'] :: ConfigureShard -> Text

-- | The number of replicas you want in this node group at the end of this
--   operation. The maximum value for <tt>NewReplicaCount</tt> is 5. The
--   minimum value depends upon the type of Redis replication group you are
--   working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
[$sel:newReplicaCount':ConfigureShard'] :: ConfigureShard -> Int

-- | Create a value of <a>ConfigureShard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ConfigureShard'</a>,
--   <a>configureShard_preferredAvailabilityZones</a> - A list of
--   <tt>PreferredAvailabilityZone</tt> strings that specify which
--   availability zones the replication group's nodes are to be in. The
--   nummber of <tt>PreferredAvailabilityZone</tt> values must equal the
--   value of <tt>NewReplicaCount</tt> plus 1 to account for the primary
--   node. If this member of <tt>ReplicaConfiguration</tt> is omitted,
--   ElastiCache for Redis selects the availability zone for each of the
--   replicas.
--   
--   <a>$sel:preferredOutpostArns:ConfigureShard'</a>,
--   <a>configureShard_preferredOutpostArns</a> - The outpost ARNs in which
--   the cache cluster is created.
--   
--   <a>$sel:nodeGroupId:ConfigureShard'</a>,
--   <a>configureShard_nodeGroupId</a> - The 4-digit id for the node group
--   you are configuring. For Redis (cluster mode disabled) replication
--   groups, the node group id is always 0001. To find a Redis (cluster
--   mode enabled)'s node group's (shard's) id, see <a>Finding a Shard's
--   Id</a>.
--   
--   <a>$sel:newReplicaCount':ConfigureShard'</a>,
--   <a>configureShard_newReplicaCount</a> - The number of replicas you
--   want in this node group at the end of this operation. The maximum
--   value for <tt>NewReplicaCount</tt> is 5. The minimum value depends
--   upon the type of Redis replication group you are working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
newConfigureShard :: Text -> Int -> ConfigureShard

-- | A list of <tt>PreferredAvailabilityZone</tt> strings that specify
--   which availability zones the replication group's nodes are to be in.
--   The nummber of <tt>PreferredAvailabilityZone</tt> values must equal
--   the value of <tt>NewReplicaCount</tt> plus 1 to account for the
--   primary node. If this member of <tt>ReplicaConfiguration</tt> is
--   omitted, ElastiCache for Redis selects the availability zone for each
--   of the replicas.
configureShard_preferredAvailabilityZones :: Lens' ConfigureShard (Maybe [Text])

-- | The outpost ARNs in which the cache cluster is created.
configureShard_preferredOutpostArns :: Lens' ConfigureShard (Maybe [Text])

-- | The 4-digit id for the node group you are configuring. For Redis
--   (cluster mode disabled) replication groups, the node group id is
--   always 0001. To find a Redis (cluster mode enabled)'s node group's
--   (shard's) id, see <a>Finding a Shard's Id</a>.
configureShard_nodeGroupId :: Lens' ConfigureShard Text

-- | The number of replicas you want in this node group at the end of this
--   operation. The maximum value for <tt>NewReplicaCount</tt> is 5. The
--   minimum value depends upon the type of Redis replication group you are
--   working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
configureShard_newReplicaCount :: Lens' ConfigureShard Int

-- | The endpoint from which data should be migrated.
--   
--   <i>See:</i> <a>newCustomerNodeEndpoint</a> smart constructor.
data CustomerNodeEndpoint
CustomerNodeEndpoint' :: Maybe Text -> Maybe Int -> CustomerNodeEndpoint

-- | The address of the node endpoint
[$sel:address:CustomerNodeEndpoint'] :: CustomerNodeEndpoint -> Maybe Text

-- | The port of the node endpoint
[$sel:port:CustomerNodeEndpoint'] :: CustomerNodeEndpoint -> Maybe Int

-- | Create a value of <a>CustomerNodeEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_address</a> - The address of the node endpoint
--   
--   <a>$sel:port:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_port</a> - The port of the node endpoint
newCustomerNodeEndpoint :: CustomerNodeEndpoint

-- | The address of the node endpoint
customerNodeEndpoint_address :: Lens' CustomerNodeEndpoint (Maybe Text)

-- | The port of the node endpoint
customerNodeEndpoint_port :: Lens' CustomerNodeEndpoint (Maybe Int)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newDestinationDetails</a> smart constructor.
data DestinationDetails
DestinationDetails' :: Maybe CloudWatchLogsDestinationDetails -> Maybe KinesisFirehoseDestinationDetails -> DestinationDetails

-- | The configuration details of the CloudWatch Logs destination.
[$sel:cloudWatchLogsDetails:DestinationDetails'] :: DestinationDetails -> Maybe CloudWatchLogsDestinationDetails

-- | The configuration details of the Kinesis Data Firehose destination.
[$sel:kinesisFirehoseDetails:DestinationDetails'] :: DestinationDetails -> Maybe KinesisFirehoseDestinationDetails

-- | Create a value of <a>DestinationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogsDetails:DestinationDetails'</a>,
--   <a>destinationDetails_cloudWatchLogsDetails</a> - The configuration
--   details of the CloudWatch Logs destination.
--   
--   <a>$sel:kinesisFirehoseDetails:DestinationDetails'</a>,
--   <a>destinationDetails_kinesisFirehoseDetails</a> - The configuration
--   details of the Kinesis Data Firehose destination.
newDestinationDetails :: DestinationDetails

-- | The configuration details of the CloudWatch Logs destination.
destinationDetails_cloudWatchLogsDetails :: Lens' DestinationDetails (Maybe CloudWatchLogsDestinationDetails)

-- | The configuration details of the Kinesis Data Firehose destination.
destinationDetails_kinesisFirehoseDetails :: Lens' DestinationDetails (Maybe KinesisFirehoseDestinationDetails)

-- | Provides ownership and status information for an Amazon EC2 security
--   group.
--   
--   <i>See:</i> <a>newEC2SecurityGroup</a> smart constructor.
data EC2SecurityGroup
EC2SecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> EC2SecurityGroup

-- | The status of the Amazon EC2 security group.
[$sel:status:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | The Amazon account ID of the Amazon EC2 security group owner.
[$sel:eC2SecurityGroupOwnerId:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | The name of the Amazon EC2 security group.
[$sel:eC2SecurityGroupName:EC2SecurityGroup'] :: EC2SecurityGroup -> Maybe Text

-- | Create a value of <a>EC2SecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EC2SecurityGroup'</a>, <a>eC2SecurityGroup_status</a> -
--   The status of the Amazon EC2 security group.
--   
--   <a>$sel:eC2SecurityGroupOwnerId:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupOwnerId</a> - The Amazon account
--   ID of the Amazon EC2 security group owner.
--   
--   <a>$sel:eC2SecurityGroupName:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupName</a> - The name of the Amazon
--   EC2 security group.
newEC2SecurityGroup :: EC2SecurityGroup

-- | The status of the Amazon EC2 security group.
eC2SecurityGroup_status :: Lens' EC2SecurityGroup (Maybe Text)

-- | The Amazon account ID of the Amazon EC2 security group owner.
eC2SecurityGroup_eC2SecurityGroupOwnerId :: Lens' EC2SecurityGroup (Maybe Text)

-- | The name of the Amazon EC2 security group.
eC2SecurityGroup_eC2SecurityGroupName :: Lens' EC2SecurityGroup (Maybe Text)

-- | Represents the information required for client programs to connect to
--   a cache node.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | The DNS hostname of the cache node.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that the cache engine is listening on.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the cache node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the cache engine is listening on.
newEndpoint :: Endpoint

-- | The DNS hostname of the cache node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the cache engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | Represents the output of a <tt>DescribeEngineDefaultParameters</tt>
--   operation.
--   
--   <i>See:</i> <a>newEngineDefaults</a> smart constructor.
data EngineDefaults
EngineDefaults' :: Maybe Text -> Maybe [CacheNodeTypeSpecificParameter] -> Maybe Text -> Maybe [Parameter] -> EngineDefaults

-- | Specifies the name of the cache parameter group family to which the
--   engine default parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:EngineDefaults'] :: EngineDefaults -> Maybe Text

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
[$sel:cacheNodeTypeSpecificParameters:EngineDefaults'] :: EngineDefaults -> Maybe [CacheNodeTypeSpecificParameter]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:EngineDefaults'] :: EngineDefaults -> Maybe Text

-- | Contains a list of engine default parameters.
[$sel:parameters:EngineDefaults'] :: EngineDefaults -> Maybe [Parameter]

-- | Create a value of <a>EngineDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:EngineDefaults'</a>,
--   <a>engineDefaults_cacheParameterGroupFamily</a> - Specifies the name
--   of the cache parameter group family to which the engine default
--   parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheNodeTypeSpecificParameters:EngineDefaults'</a>,
--   <a>engineDefaults_cacheNodeTypeSpecificParameters</a> - A list of
--   parameters specific to a particular cache node type. Each element in
--   the list contains detailed information about one parameter.
--   
--   <a>$sel:marker:EngineDefaults'</a>, <a>engineDefaults_marker</a> -
--   Provides an identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:EngineDefaults'</a>,
--   <a>engineDefaults_parameters</a> - Contains a list of engine default
--   parameters.
newEngineDefaults :: EngineDefaults

-- | Specifies the name of the cache parameter group family to which the
--   engine default parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
engineDefaults_cacheParameterGroupFamily :: Lens' EngineDefaults (Maybe Text)

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
engineDefaults_cacheNodeTypeSpecificParameters :: Lens' EngineDefaults (Maybe [CacheNodeTypeSpecificParameter])

-- | Provides an identifier to allow retrieval of paginated results.
engineDefaults_marker :: Lens' EngineDefaults (Maybe Text)

-- | Contains a list of engine default parameters.
engineDefaults_parameters :: Lens' EngineDefaults (Maybe [Parameter])

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster, adding or
--   removing a cache node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe SourceType -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Event

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
[$sel:sourceIdentifier:Event'] :: Event -> Maybe Text

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe ISO8601

-- | The text of the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:sourceIdentifier:Event'</a>, <a>event_sourceIdentifier</a> -
--   The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceIdentifier :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserId.
[$sel:name:Filter'] :: Filter -> Text

-- | The property values to filter on. For example, "user-123".
[$sel:values:Filter'] :: Filter -> NonEmpty Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserId.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserId.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)

-- | Indicates the slot configuration and global identifier for a slice
--   group.
--   
--   <i>See:</i> <a>newGlobalNodeGroup</a> smart constructor.
data GlobalNodeGroup
GlobalNodeGroup' :: Maybe Text -> Maybe Text -> GlobalNodeGroup

-- | The keyspace for this node group
[$sel:slots:GlobalNodeGroup'] :: GlobalNodeGroup -> Maybe Text

-- | The name of the global node group
[$sel:globalNodeGroupId:GlobalNodeGroup'] :: GlobalNodeGroup -> Maybe Text

-- | Create a value of <a>GlobalNodeGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:GlobalNodeGroup'</a>, <a>globalNodeGroup_slots</a> - The
--   keyspace for this node group
--   
--   <a>$sel:globalNodeGroupId:GlobalNodeGroup'</a>,
--   <a>globalNodeGroup_globalNodeGroupId</a> - The name of the global node
--   group
newGlobalNodeGroup :: GlobalNodeGroup

-- | The keyspace for this node group
globalNodeGroup_slots :: Lens' GlobalNodeGroup (Maybe Text)

-- | The name of the global node group
globalNodeGroup_globalNodeGroupId :: Lens' GlobalNodeGroup (Maybe Text)

-- | Consists of a primary cluster that accepts writes and an associated
--   secondary cluster that resides in a different Amazon region. The
--   secondary cluster accepts only reads. The primary cluster
--   automatically replicates updates to the secondary cluster.
--   
--   <ul>
--   <li>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of
--   the Global datastore, which is what you use to associate a secondary
--   cluster.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGlobalReplicationGroup</a> smart constructor.
data GlobalReplicationGroup
GlobalReplicationGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe [GlobalReplicationGroupMember] -> Maybe Text -> Maybe Bool -> Maybe [GlobalNodeGroup] -> Maybe Text -> Maybe Text -> GlobalReplicationGroup

-- | The Elasticache Redis engine version.
[$sel:engineVersion:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The status of the Global datastore
[$sel:status:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The cache node type of the Global datastore
[$sel:cacheNodeType:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that indicates whether the Global datastore is cluster enabled.
[$sel:clusterEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
[$sel:atRestEncryptionEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | The ARN (Amazon Resource Name) of the global replication group.
[$sel:arn:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that enables in-transit encryption when set to true. You cannot
--   modify the value of <tt>TransitEncryptionEnabled</tt> after the
--   cluster is created. To enable in-transit encryption on a cluster you
--   must set <tt>TransitEncryptionEnabled</tt> to true when you create a
--   cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
[$sel:transitEncryptionEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | The replication groups that comprise the Global datastore.
[$sel:members:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe [GlobalReplicationGroupMember]

-- | The Elasticache engine. For Redis only.
[$sel:engine:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Bool

-- | Indicates the slot configuration and global identifier for each slice
--   group.
[$sel:globalNodeGroups:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe [GlobalNodeGroup]

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | The optional description of the Global datastore
[$sel:globalReplicationGroupDescription:GlobalReplicationGroup'] :: GlobalReplicationGroup -> Maybe Text

-- | Create a value of <a>GlobalReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engineVersion</a> - The Elasticache Redis
--   engine version.
--   
--   <a>$sel:status:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_status</a> - The status of the Global
--   datastore
--   
--   <a>$sel:cacheNodeType:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_cacheNodeType</a> - The cache node type of
--   the Global datastore
--   
--   <a>$sel:clusterEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_clusterEnabled</a> - A flag that indicates
--   whether the Global datastore is cluster enabled.
--   
--   <a>$sel:atRestEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_atRestEncryptionEnabled</a> - A flag that
--   enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:arn:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_arn</a> - The ARN (Amazon Resource Name) of
--   the global replication group.
--   
--   <a>$sel:transitEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_transitEncryptionEnabled</a> - A flag that
--   enables in-transit encryption when set to true. You cannot modify the
--   value of <tt>TransitEncryptionEnabled</tt> after the cluster is
--   created. To enable in-transit encryption on a cluster you must set
--   <tt>TransitEncryptionEnabled</tt> to true when you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:members:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_members</a> - The replication groups that
--   comprise the Global datastore.
--   
--   <a>$sel:engine:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engine</a> - The Elasticache engine. For
--   Redis only.
--   
--   <a>$sel:authTokenEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_authTokenEnabled</a> - A flag that enables
--   using an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:globalNodeGroups:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalNodeGroups</a> - Indicates the slot
--   configuration and global identifier for each slice group.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupId</a> - The name of
--   the Global datastore
--   
--   <a>$sel:globalReplicationGroupDescription:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupDescription</a> - The
--   optional description of the Global datastore
newGlobalReplicationGroup :: GlobalReplicationGroup

-- | The Elasticache Redis engine version.
globalReplicationGroup_engineVersion :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The status of the Global datastore
globalReplicationGroup_status :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The cache node type of the Global datastore
globalReplicationGroup_cacheNodeType :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that indicates whether the Global datastore is cluster enabled.
globalReplicationGroup_clusterEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_atRestEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the global replication group.
globalReplicationGroup_arn :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to true. You cannot
--   modify the value of <tt>TransitEncryptionEnabled</tt> after the
--   cluster is created. To enable in-transit encryption on a cluster you
--   must set <tt>TransitEncryptionEnabled</tt> to true when you create a
--   cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_transitEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The replication groups that comprise the Global datastore.
globalReplicationGroup_members :: Lens' GlobalReplicationGroup (Maybe [GlobalReplicationGroupMember])

-- | The Elasticache engine. For Redis only.
globalReplicationGroup_engine :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
globalReplicationGroup_authTokenEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | Indicates the slot configuration and global identifier for each slice
--   group.
globalReplicationGroup_globalNodeGroups :: Lens' GlobalReplicationGroup (Maybe [GlobalNodeGroup])

-- | The name of the Global datastore
globalReplicationGroup_globalReplicationGroupId :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The optional description of the Global datastore
globalReplicationGroup_globalReplicationGroupDescription :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupInfo</a> smart constructor.
data GlobalReplicationGroupInfo
GlobalReplicationGroupInfo' :: Maybe Text -> Maybe Text -> GlobalReplicationGroupInfo

-- | The role of the replication group in a Global datastore. Can be
--   primary or secondary.
[$sel:globalReplicationGroupMemberRole:GlobalReplicationGroupInfo'] :: GlobalReplicationGroupInfo -> Maybe Text

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:GlobalReplicationGroupInfo'] :: GlobalReplicationGroupInfo -> Maybe Text

-- | Create a value of <a>GlobalReplicationGroupInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupMemberRole:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupMemberRole</a> -
--   The role of the replication group in a Global datastore. Can be
--   primary or secondary.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupId</a> - The name
--   of the Global datastore
newGlobalReplicationGroupInfo :: GlobalReplicationGroupInfo

-- | The role of the replication group in a Global datastore. Can be
--   primary or secondary.
globalReplicationGroupInfo_globalReplicationGroupMemberRole :: Lens' GlobalReplicationGroupInfo (Maybe Text)

-- | The name of the Global datastore
globalReplicationGroupInfo_globalReplicationGroupId :: Lens' GlobalReplicationGroupInfo (Maybe Text)

-- | A member of a Global datastore. It contains the Replication Group Id,
--   the Amazon region and the role of the replication group.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupMember</a> smart constructor.
data GlobalReplicationGroupMember
GlobalReplicationGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutomaticFailoverStatus -> GlobalReplicationGroupMember

-- | The status of the membership of the replication group.
[$sel:status:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | The Amazon region of the Global datastore member.
[$sel:replicationGroupRegion:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | Indicates the role of the replication group, primary or secondary.
[$sel:role':GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | The replication group id of the Global datastore member.
[$sel:replicationGroupId:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe Text

-- | Indicates whether automatic failover is enabled for the replication
--   group.
[$sel:automaticFailover:GlobalReplicationGroupMember'] :: GlobalReplicationGroupMember -> Maybe AutomaticFailoverStatus

-- | Create a value of <a>GlobalReplicationGroupMember</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_status</a> - The status of the
--   membership of the replication group.
--   
--   <a>$sel:replicationGroupRegion:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupRegion</a> - The
--   Amazon region of the Global datastore member.
--   
--   <a>$sel:role':GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_role</a> - Indicates the role of the
--   replication group, primary or secondary.
--   
--   <a>$sel:replicationGroupId:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupId</a> - The
--   replication group id of the Global datastore member.
--   
--   <a>$sel:automaticFailover:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_automaticFailover</a> - Indicates
--   whether automatic failover is enabled for the replication group.
newGlobalReplicationGroupMember :: GlobalReplicationGroupMember

-- | The status of the membership of the replication group.
globalReplicationGroupMember_status :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The Amazon region of the Global datastore member.
globalReplicationGroupMember_replicationGroupRegion :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates the role of the replication group, primary or secondary.
globalReplicationGroupMember_role :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The replication group id of the Global datastore member.
globalReplicationGroupMember_replicationGroupId :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates whether automatic failover is enabled for the replication
--   group.
globalReplicationGroupMember_automaticFailover :: Lens' GlobalReplicationGroupMember (Maybe AutomaticFailoverStatus)

-- | The configuration details of the Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseDestinationDetails</a> smart
--   constructor.
data KinesisFirehoseDestinationDetails
KinesisFirehoseDestinationDetails' :: Maybe Text -> KinesisFirehoseDestinationDetails

-- | The name of the Kinesis Data Firehose delivery stream.
[$sel:deliveryStream:KinesisFirehoseDestinationDetails'] :: KinesisFirehoseDestinationDetails -> Maybe Text

-- | Create a value of <a>KinesisFirehoseDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:KinesisFirehoseDestinationDetails'</a>,
--   <a>kinesisFirehoseDestinationDetails_deliveryStream</a> - The name of
--   the Kinesis Data Firehose delivery stream.
newKinesisFirehoseDestinationDetails :: KinesisFirehoseDestinationDetails

-- | The name of the Kinesis Data Firehose delivery stream.
kinesisFirehoseDestinationDetails_deliveryStream :: Lens' KinesisFirehoseDestinationDetails (Maybe Text)

-- | Returns the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfiguration</a> smart constructor.
data LogDeliveryConfiguration
LogDeliveryConfiguration' :: Maybe LogDeliveryConfigurationStatus -> Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> Maybe Text -> LogDeliveryConfiguration

-- | Returns the log delivery configuration status. Values are one of
--   <tt>enabling</tt> | <tt>disabling</tt> | <tt>modifying</tt> |
--   <tt>active</tt> | <tt>error</tt>
[$sel:status:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogDeliveryConfigurationStatus

-- | Returns the log format, either JSON or TEXT.
[$sel:logFormat:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogFormat

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe LogType

-- | Returns the destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
[$sel:destinationType:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe DestinationType

-- | Returns an error message for the log delivery configuration.
[$sel:message:LogDeliveryConfiguration'] :: LogDeliveryConfiguration -> Maybe Text

-- | Create a value of <a>LogDeliveryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_status</a> - Returns the log delivery
--   configuration status. Values are one of <tt>enabling</tt> |
--   <tt>disabling</tt> | <tt>modifying</tt> | <tt>active</tt> |
--   <tt>error</tt>
--   
--   <a>$sel:logFormat:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logFormat</a> - Returns the log format,
--   either JSON or TEXT.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationDetails</a> - Configuration
--   details of either a CloudWatch Logs destination or Kinesis Data
--   Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logType</a> - Refers to <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
--   
--   <a>$sel:message:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_message</a> - Returns an error message for
--   the log delivery configuration.
newLogDeliveryConfiguration :: LogDeliveryConfiguration

-- | Returns the log delivery configuration status. Values are one of
--   <tt>enabling</tt> | <tt>disabling</tt> | <tt>modifying</tt> |
--   <tt>active</tt> | <tt>error</tt>
logDeliveryConfiguration_status :: Lens' LogDeliveryConfiguration (Maybe LogDeliveryConfigurationStatus)

-- | Returns the log format, either JSON or TEXT.
logDeliveryConfiguration_logFormat :: Lens' LogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfiguration_destinationDetails :: Lens' LogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfiguration_logType :: Lens' LogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
logDeliveryConfiguration_destinationType :: Lens' LogDeliveryConfiguration (Maybe DestinationType)

-- | Returns an error message for the log delivery configuration.
logDeliveryConfiguration_message :: Lens' LogDeliveryConfiguration (Maybe Text)

-- | Specifies the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfigurationRequest</a> smart
--   constructor.
data LogDeliveryConfigurationRequest
LogDeliveryConfigurationRequest' :: Maybe LogFormat -> Maybe Bool -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> LogDeliveryConfigurationRequest

-- | Specifies either JSON or TEXT
[$sel:logFormat:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe LogFormat

-- | Specify if log delivery is enabled. Default <tt>true</tt>.
[$sel:enabled:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe Bool

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe LogType

-- | Specify either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt>
--   as the destination type.
[$sel:destinationType:LogDeliveryConfigurationRequest'] :: LogDeliveryConfigurationRequest -> Maybe DestinationType

-- | Create a value of <a>LogDeliveryConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logFormat</a> - Specifies either
--   JSON or TEXT
--   
--   <a>$sel:enabled:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_enabled</a> - Specify if log
--   delivery is enabled. Default <tt>true</tt>.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationType</a> - Specify
--   either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt> as the
--   destination type.
newLogDeliveryConfigurationRequest :: LogDeliveryConfigurationRequest

-- | Specifies either JSON or TEXT
logDeliveryConfigurationRequest_logFormat :: Lens' LogDeliveryConfigurationRequest (Maybe LogFormat)

-- | Specify if log delivery is enabled. Default <tt>true</tt>.
logDeliveryConfigurationRequest_enabled :: Lens' LogDeliveryConfigurationRequest (Maybe Bool)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfigurationRequest_destinationDetails :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfigurationRequest_logType :: Lens' LogDeliveryConfigurationRequest (Maybe LogType)

-- | Specify either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt>
--   as the destination type.
logDeliveryConfigurationRequest_destinationType :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationType)

-- | Represents a collection of cache nodes in a replication group. One
--   node in the node group is the read/write primary node. All the other
--   nodes are read-only Replica nodes.
--   
--   <i>See:</i> <a>newNodeGroup</a> smart constructor.
data NodeGroup
NodeGroup' :: Maybe Text -> Maybe Endpoint -> Maybe Text -> Maybe [NodeGroupMember] -> Maybe Text -> Maybe Endpoint -> NodeGroup

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
[$sel:status:NodeGroup'] :: NodeGroup -> Maybe Text

-- | The endpoint of the primary node in this node group (shard).
[$sel:primaryEndpoint:NodeGroup'] :: NodeGroup -> Maybe Endpoint

-- | The keyspace for this node group (shard).
[$sel:slots:NodeGroup'] :: NodeGroup -> Maybe Text

-- | A list containing information about individual nodes within the node
--   group (shard).
[$sel:nodeGroupMembers:NodeGroup'] :: NodeGroup -> Maybe [NodeGroupMember]

-- | The identifier for the node group (shard). A Redis (cluster mode
--   disabled) replication group contains only 1 node group; therefore, the
--   node group ID is 0001. A Redis (cluster mode enabled) replication
--   group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,
--   the user can provide the id for a node group.
[$sel:nodeGroupId:NodeGroup'] :: NodeGroup -> Maybe Text

-- | The endpoint of the replica nodes in this node group (shard).
[$sel:readerEndpoint:NodeGroup'] :: NodeGroup -> Maybe Endpoint

-- | Create a value of <a>NodeGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeGroup'</a>, <a>nodeGroup_status</a> - The current
--   state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
--   
--   <a>$sel:primaryEndpoint:NodeGroup'</a>,
--   <a>nodeGroup_primaryEndpoint</a> - The endpoint of the primary node in
--   this node group (shard).
--   
--   <a>$sel:slots:NodeGroup'</a>, <a>nodeGroup_slots</a> - The keyspace
--   for this node group (shard).
--   
--   <a>$sel:nodeGroupMembers:NodeGroup'</a>,
--   <a>nodeGroup_nodeGroupMembers</a> - A list containing information
--   about individual nodes within the node group (shard).
--   
--   <a>$sel:nodeGroupId:NodeGroup'</a>, <a>nodeGroup_nodeGroupId</a> - The
--   identifier for the node group (shard). A Redis (cluster mode disabled)
--   replication group contains only 1 node group; therefore, the node
--   group ID is 0001. A Redis (cluster mode enabled) replication group
--   contains 1 to 90 node groups numbered 0001 to 0090. Optionally, the
--   user can provide the id for a node group.
--   
--   <a>$sel:readerEndpoint:NodeGroup'</a>, <a>nodeGroup_readerEndpoint</a>
--   - The endpoint of the replica nodes in this node group (shard).
newNodeGroup :: NodeGroup

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
nodeGroup_status :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the primary node in this node group (shard).
nodeGroup_primaryEndpoint :: Lens' NodeGroup (Maybe Endpoint)

-- | The keyspace for this node group (shard).
nodeGroup_slots :: Lens' NodeGroup (Maybe Text)

-- | A list containing information about individual nodes within the node
--   group (shard).
nodeGroup_nodeGroupMembers :: Lens' NodeGroup (Maybe [NodeGroupMember])

-- | The identifier for the node group (shard). A Redis (cluster mode
--   disabled) replication group contains only 1 node group; therefore, the
--   node group ID is 0001. A Redis (cluster mode enabled) replication
--   group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,
--   the user can provide the id for a node group.
nodeGroup_nodeGroupId :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the replica nodes in this node group (shard).
nodeGroup_readerEndpoint :: Lens' NodeGroup (Maybe Endpoint)

-- | Node group (shard) configuration options. Each node group (shard)
--   configuration has the following: <tt>Slots</tt>,
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>.
--   
--   <i>See:</i> <a>newNodeGroupConfiguration</a> smart constructor.
data NodeGroupConfiguration
NodeGroupConfiguration' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> NodeGroupConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
[$sel:slots:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | The outpost ARN of the node replicas.
[$sel:replicaOutpostArns:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe [Text]

-- | The number of read replica nodes in this node group (shard).
[$sel:replicaCount:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Int

-- | The Availability Zone where the primary node of this node group
--   (shard) is launched.
[$sel:primaryAvailabilityZone:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | A list of Availability Zones to be used for the read replicas. The
--   number of Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
[$sel:replicaAvailabilityZones:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe [Text]

-- | The outpost ARN of the primary node.
[$sel:primaryOutpostArn:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
[$sel:nodeGroupId:NodeGroupConfiguration'] :: NodeGroupConfiguration -> Maybe Text

-- | Create a value of <a>NodeGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_slots</a> - A string that specifies the
--   keyspace for a particular node group. Keyspaces range from 0 to
--   16,383. The string is in the format <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
--   
--   <a>$sel:replicaOutpostArns:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaOutpostArns</a> - The outpost ARN of
--   the node replicas.
--   
--   <a>$sel:replicaCount:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaCount</a> - The number of read
--   replica nodes in this node group (shard).
--   
--   <a>$sel:primaryAvailabilityZone:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryAvailabilityZone</a> - The
--   Availability Zone where the primary node of this node group (shard) is
--   launched.
--   
--   <a>$sel:replicaAvailabilityZones:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaAvailabilityZones</a> - A list of
--   Availability Zones to be used for the read replicas. The number of
--   Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
--   
--   <a>$sel:primaryOutpostArn:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryOutpostArn</a> - The outpost ARN of
--   the primary node.
--   
--   <a>$sel:nodeGroupId:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_nodeGroupId</a> - Either the ElastiCache for
--   Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newNodeGroupConfiguration :: NodeGroupConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
nodeGroupConfiguration_slots :: Lens' NodeGroupConfiguration (Maybe Text)

-- | The outpost ARN of the node replicas.
nodeGroupConfiguration_replicaOutpostArns :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The number of read replica nodes in this node group (shard).
nodeGroupConfiguration_replicaCount :: Lens' NodeGroupConfiguration (Maybe Int)

-- | The Availability Zone where the primary node of this node group
--   (shard) is launched.
nodeGroupConfiguration_primaryAvailabilityZone :: Lens' NodeGroupConfiguration (Maybe Text)

-- | A list of Availability Zones to be used for the read replicas. The
--   number of Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
nodeGroupConfiguration_replicaAvailabilityZones :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The outpost ARN of the primary node.
nodeGroupConfiguration_primaryOutpostArn :: Lens' NodeGroupConfiguration (Maybe Text)

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
nodeGroupConfiguration_nodeGroupId :: Lens' NodeGroupConfiguration (Maybe Text)

-- | Represents a single node within a node group (shard).
--   
--   <i>See:</i> <a>newNodeGroupMember</a> smart constructor.
data NodeGroupMember
NodeGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> NodeGroupMember

-- | The ID of the cluster to which the node belongs.
[$sel:cacheClusterId:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The ID of the node within its cluster. A node ID is a numeric
--   identifier (0001, 0002, etc.).
[$sel:cacheNodeId:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The name of the Availability Zone in which the node is located.
[$sel:preferredAvailabilityZone:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The role that is currently assigned to the node - <tt>primary</tt> or
--   <tt>replica</tt>. This member is only applicable for Redis (cluster
--   mode disabled) replication groups.
[$sel:currentRole:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The outpost ARN of the node group member.
[$sel:preferredOutpostArn:NodeGroupMember'] :: NodeGroupMember -> Maybe Text

-- | The information required for client programs to connect to a node for
--   read operations. The read endpoint is only applicable on Redis
--   (cluster mode disabled) clusters.
[$sel:readEndpoint:NodeGroupMember'] :: NodeGroupMember -> Maybe Endpoint

-- | Create a value of <a>NodeGroupMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheClusterId</a> - The ID of the cluster to which
--   the node belongs.
--   
--   <a>$sel:cacheNodeId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheNodeId</a> - The ID of the node within its
--   cluster. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:preferredAvailabilityZone:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the node is located.
--   
--   <a>$sel:currentRole:NodeGroupMember'</a>,
--   <a>nodeGroupMember_currentRole</a> - The role that is currently
--   assigned to the node - <tt>primary</tt> or <tt>replica</tt>. This
--   member is only applicable for Redis (cluster mode disabled)
--   replication groups.
--   
--   <a>$sel:preferredOutpostArn:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredOutpostArn</a> - The outpost ARN of the
--   node group member.
--   
--   <a>$sel:readEndpoint:NodeGroupMember'</a>,
--   <a>nodeGroupMember_readEndpoint</a> - The information required for
--   client programs to connect to a node for read operations. The read
--   endpoint is only applicable on Redis (cluster mode disabled) clusters.
newNodeGroupMember :: NodeGroupMember

-- | The ID of the cluster to which the node belongs.
nodeGroupMember_cacheClusterId :: Lens' NodeGroupMember (Maybe Text)

-- | The ID of the node within its cluster. A node ID is a numeric
--   identifier (0001, 0002, etc.).
nodeGroupMember_cacheNodeId :: Lens' NodeGroupMember (Maybe Text)

-- | The name of the Availability Zone in which the node is located.
nodeGroupMember_preferredAvailabilityZone :: Lens' NodeGroupMember (Maybe Text)

-- | The role that is currently assigned to the node - <tt>primary</tt> or
--   <tt>replica</tt>. This member is only applicable for Redis (cluster
--   mode disabled) replication groups.
nodeGroupMember_currentRole :: Lens' NodeGroupMember (Maybe Text)

-- | The outpost ARN of the node group member.
nodeGroupMember_preferredOutpostArn :: Lens' NodeGroupMember (Maybe Text)

-- | The information required for client programs to connect to a node for
--   read operations. The read endpoint is only applicable on Redis
--   (cluster mode disabled) clusters.
nodeGroupMember_readEndpoint :: Lens' NodeGroupMember (Maybe Endpoint)

-- | The status of the service update on the node group member
--   
--   <i>See:</i> <a>newNodeGroupMemberUpdateStatus</a> smart constructor.
data NodeGroupMemberUpdateStatus
NodeGroupMemberUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> NodeGroupMemberUpdateStatus

-- | The end date of the update for a node
[$sel:nodeUpdateEndDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
[$sel:nodeUpdateInitiatedBy:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe NodeUpdateInitiatedBy

-- | The date when the NodeUpdateStatus was last modified
[$sel:nodeUpdateStatusModifiedDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The cache cluster ID
[$sel:cacheClusterId:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe Text

-- | The node ID of the cache cluster
[$sel:cacheNodeId:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe Text

-- | The date when the update is triggered
[$sel:nodeUpdateInitiatedDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The start date of the update for a node
[$sel:nodeUpdateStartDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | The update status of the node
[$sel:nodeUpdateStatus:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe NodeUpdateStatus

-- | The deletion date of the node
[$sel:nodeDeletionDate:NodeGroupMemberUpdateStatus'] :: NodeGroupMemberUpdateStatus -> Maybe ISO8601

-- | Create a value of <a>NodeGroupMemberUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateEndDate</a> - The end date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects
--   whether the update was initiated by the customer or automatically
--   applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate</a> - The
--   date when the NodeUpdateStatus was last modified
--   
--   <a>$sel:cacheClusterId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheClusterId</a> - The cache cluster
--   ID
--   
--   <a>$sel:cacheNodeId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheNodeId</a> - The node ID of the
--   cache cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate</a> - The date
--   when the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStartDate</a> - The start
--   date of the update for a node
--   
--   <a>$sel:nodeUpdateStatus:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatus</a> - The update
--   status of the node
--   
--   <a>$sel:nodeDeletionDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeDeletionDate</a> - The deletion
--   date of the node
newNodeGroupMemberUpdateStatus :: NodeGroupMemberUpdateStatus

-- | The end date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateEndDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified
nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The cache cluster ID
nodeGroupMemberUpdateStatus_cacheClusterId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The node ID of the cache cluster
nodeGroupMemberUpdateStatus_cacheNodeId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The date when the update is triggered
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateStartDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The update status of the node
nodeGroupMemberUpdateStatus_nodeUpdateStatus :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
nodeGroupMemberUpdateStatus_nodeDeletionDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The status of the service update on the node group
--   
--   <i>See:</i> <a>newNodeGroupUpdateStatus</a> smart constructor.
data NodeGroupUpdateStatus
NodeGroupUpdateStatus' :: Maybe [NodeGroupMemberUpdateStatus] -> Maybe Text -> NodeGroupUpdateStatus

-- | The status of the service update on the node group member
[$sel:nodeGroupMemberUpdateStatus:NodeGroupUpdateStatus'] :: NodeGroupUpdateStatus -> Maybe [NodeGroupMemberUpdateStatus]

-- | The ID of the node group
[$sel:nodeGroupId:NodeGroupUpdateStatus'] :: NodeGroupUpdateStatus -> Maybe Text

-- | Create a value of <a>NodeGroupUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupMemberUpdateStatus:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus</a> - The status
--   of the service update on the node group member
--   
--   <a>$sel:nodeGroupId:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupId</a> - The ID of the node group
newNodeGroupUpdateStatus :: NodeGroupUpdateStatus

-- | The status of the service update on the node group member
nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus :: Lens' NodeGroupUpdateStatus (Maybe [NodeGroupMemberUpdateStatus])

-- | The ID of the node group
nodeGroupUpdateStatus_nodeGroupId :: Lens' NodeGroupUpdateStatus (Maybe Text)

-- | Represents an individual cache node in a snapshot of a cluster.
--   
--   <i>See:</i> <a>newNodeSnapshot</a> smart constructor.
data NodeSnapshot
NodeSnapshot' :: Maybe NodeGroupConfiguration -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> NodeSnapshot

-- | The configuration for the source node group (shard).
[$sel:nodeGroupConfiguration:NodeSnapshot'] :: NodeSnapshot -> Maybe NodeGroupConfiguration

-- | The date and time when the cache node was created in the source
--   cluster.
[$sel:cacheNodeCreateTime:NodeSnapshot'] :: NodeSnapshot -> Maybe ISO8601

-- | A unique identifier for the source cluster.
[$sel:cacheClusterId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | The cache node identifier for the node in the source cluster.
[$sel:cacheNodeId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | A unique identifier for the source node group (shard).
[$sel:nodeGroupId:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | The date and time when the source node's metadata and cache data set
--   was obtained for the snapshot.
[$sel:snapshotCreateTime:NodeSnapshot'] :: NodeSnapshot -> Maybe ISO8601

-- | The size of the cache on the source cache node.
[$sel:cacheSize:NodeSnapshot'] :: NodeSnapshot -> Maybe Text

-- | Create a value of <a>NodeSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupConfiguration:NodeSnapshot'</a>,
--   <a>nodeSnapshot_nodeGroupConfiguration</a> - The configuration for the
--   source node group (shard).
--   
--   <a>$sel:cacheNodeCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created in the source cluster.
--   
--   <a>$sel:cacheClusterId:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheClusterId</a> - A unique identifier for the
--   source cluster.
--   
--   <a>$sel:cacheNodeId:NodeSnapshot'</a>, <a>nodeSnapshot_cacheNodeId</a>
--   - The cache node identifier for the node in the source cluster.
--   
--   <a>$sel:nodeGroupId:NodeSnapshot'</a>, <a>nodeSnapshot_nodeGroupId</a>
--   - A unique identifier for the source node group (shard).
--   
--   <a>$sel:snapshotCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_snapshotCreateTime</a> - The date and time when the
--   source node's metadata and cache data set was obtained for the
--   snapshot.
--   
--   <a>$sel:cacheSize:NodeSnapshot'</a>, <a>nodeSnapshot_cacheSize</a> -
--   The size of the cache on the source cache node.
newNodeSnapshot :: NodeSnapshot

-- | The configuration for the source node group (shard).
nodeSnapshot_nodeGroupConfiguration :: Lens' NodeSnapshot (Maybe NodeGroupConfiguration)

-- | The date and time when the cache node was created in the source
--   cluster.
nodeSnapshot_cacheNodeCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | A unique identifier for the source cluster.
nodeSnapshot_cacheClusterId :: Lens' NodeSnapshot (Maybe Text)

-- | The cache node identifier for the node in the source cluster.
nodeSnapshot_cacheNodeId :: Lens' NodeSnapshot (Maybe Text)

-- | A unique identifier for the source node group (shard).
nodeSnapshot_nodeGroupId :: Lens' NodeSnapshot (Maybe Text)

-- | The date and time when the source node's metadata and cache data set
--   was obtained for the snapshot.
nodeSnapshot_snapshotCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | The size of the cache on the source cache node.
nodeSnapshot_cacheSize :: Lens' NodeSnapshot (Maybe Text)

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | The current state of the topic.
[$sel:topicStatus:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) that identifies the topic.
[$sel:topicArn:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | The current state of the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)

-- | Describes an individual setting that controls some aspect of
--   ElastiCache behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> Parameter

-- | The value of the parameter.
[$sel:parameterValue:Parameter'] :: Parameter -> Maybe Text

-- | The earliest cache engine version to which the parameter can apply.
[$sel:minimumEngineVersion:Parameter'] :: Parameter -> Maybe Text

-- | The source of the parameter.
[$sel:source:Parameter'] :: Parameter -> Maybe Text

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
[$sel:isModifiable:Parameter'] :: Parameter -> Maybe Bool

-- | The valid data type for the parameter.
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter.
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
[$sel:changeType:Parameter'] :: Parameter -> Maybe ChangeType

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value of the parameter.
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest cache engine
--   version to which the parameter can apply.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - The source of
--   the parameter.
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The valid
--   data type for the parameter.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter.
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> -
--   Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
newParameter :: Parameter

-- | The value of the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | The earliest cache engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The source of the parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
parameter_isModifiable :: Lens' Parameter (Maybe Bool)

-- | The valid data type for the parameter.
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter.
parameter_description :: Lens' Parameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter.
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | The log delivery configurations being modified
--   
--   <i>See:</i> <a>newPendingLogDeliveryConfiguration</a> smart
--   constructor.
data PendingLogDeliveryConfiguration
PendingLogDeliveryConfiguration' :: Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> PendingLogDeliveryConfiguration

-- | Returns the log format, either JSON or TEXT
[$sel:logFormat:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe LogFormat

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
[$sel:destinationDetails:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe DestinationDetails

-- | Refers to <a>slow-log</a>.
[$sel:logType:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe LogType

-- | Returns the destination type, either CloudWatch Logs or Kinesis Data
--   Firehose.
[$sel:destinationType:PendingLogDeliveryConfiguration'] :: PendingLogDeliveryConfiguration -> Maybe DestinationType

-- | Create a value of <a>PendingLogDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logFormat</a> - Returns the log
--   format, either JSON or TEXT
--   
--   <a>$sel:destinationDetails:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either CloudWatch Logs or Kinesis Data Firehose.
newPendingLogDeliveryConfiguration :: PendingLogDeliveryConfiguration

-- | Returns the log format, either JSON or TEXT
pendingLogDeliveryConfiguration_logFormat :: Lens' PendingLogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
pendingLogDeliveryConfiguration_destinationDetails :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
pendingLogDeliveryConfiguration_logType :: Lens' PendingLogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either CloudWatch Logs or Kinesis Data
--   Firehose.
pendingLogDeliveryConfiguration_destinationType :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationType)

-- | A group of settings that are applied to the cluster in the future, or
--   that are currently being applied.
--   
--   <i>See:</i> <a>newPendingModifiedValues</a> smart constructor.
data PendingModifiedValues
PendingModifiedValues' :: Maybe Text -> Maybe Text -> Maybe AuthTokenUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe [Text] -> Maybe Int -> PendingModifiedValues

-- | The new cache engine version that the cluster runs.
[$sel:engineVersion:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Text

-- | The cache node type that this cluster or replication group is scaled
--   to.
[$sel:cacheNodeType:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Text

-- | The auth token status
[$sel:authTokenStatus:PendingModifiedValues'] :: PendingModifiedValues -> Maybe AuthTokenUpdateStatus

-- | The log delivery configurations being modified
[$sel:logDeliveryConfigurations:PendingModifiedValues'] :: PendingModifiedValues -> Maybe [PendingLogDeliveryConfiguration]

-- | A list of cache node IDs that are being removed (or will be removed)
--   from the cluster. A node ID is a 4-digit numeric identifier (0001,
--   0002, etc.).
[$sel:cacheNodeIdsToRemove:PendingModifiedValues'] :: PendingModifiedValues -> Maybe [Text]

-- | The new number of cache nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:PendingModifiedValues'] :: PendingModifiedValues -> Maybe Int

-- | Create a value of <a>PendingModifiedValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_engineVersion</a> - The new cache engine
--   version that the cluster runs.
--   
--   <a>$sel:cacheNodeType:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeType</a> - The cache node type that
--   this cluster or replication group is scaled to.
--   
--   <a>$sel:authTokenStatus:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_authTokenStatus</a> - The auth token status
--   
--   <a>$sel:logDeliveryConfigurations:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_logDeliveryConfigurations</a> - The log
--   delivery configurations being modified
--   
--   <a>$sel:cacheNodeIdsToRemove:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeIdsToRemove</a> - A list of cache
--   node IDs that are being removed (or will be removed) from the cluster.
--   A node ID is a 4-digit numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:numCacheNodes:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_numCacheNodes</a> - The new number of cache
--   nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newPendingModifiedValues :: PendingModifiedValues

-- | The new cache engine version that the cluster runs.
pendingModifiedValues_engineVersion :: Lens' PendingModifiedValues (Maybe Text)

-- | The cache node type that this cluster or replication group is scaled
--   to.
pendingModifiedValues_cacheNodeType :: Lens' PendingModifiedValues (Maybe Text)

-- | The auth token status
pendingModifiedValues_authTokenStatus :: Lens' PendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The log delivery configurations being modified
pendingModifiedValues_logDeliveryConfigurations :: Lens' PendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | A list of cache node IDs that are being removed (or will be removed)
--   from the cluster. A node ID is a 4-digit numeric identifier (0001,
--   0002, etc.).
pendingModifiedValues_cacheNodeIdsToRemove :: Lens' PendingModifiedValues (Maybe [Text])

-- | The new number of cache nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
pendingModifiedValues_numCacheNodes :: Lens' PendingModifiedValues (Maybe Int)

-- | Update action that has been processed for the corresponding apply/stop
--   request
--   
--   <i>See:</i> <a>newProcessedUpdateAction</a> smart constructor.
data ProcessedUpdateAction
ProcessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> ProcessedUpdateAction

-- | The ID of the cache cluster
[$sel:cacheClusterId:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | The status of the update action on the Redis cluster
[$sel:updateActionStatus:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe UpdateActionStatus

-- | The ID of the replication group
[$sel:replicationGroupId:ProcessedUpdateAction'] :: ProcessedUpdateAction -> Maybe Text

-- | Create a value of <a>ProcessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:updateActionStatus:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_updateActionStatus</a> - The status of the
--   update action on the Redis cluster
--   
--   <a>$sel:replicationGroupId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_replicationGroupId</a> - The ID of the
--   replication group
newProcessedUpdateAction :: ProcessedUpdateAction

-- | The ID of the cache cluster
processedUpdateAction_cacheClusterId :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
processedUpdateAction_serviceUpdateName :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The status of the update action on the Redis cluster
processedUpdateAction_updateActionStatus :: Lens' ProcessedUpdateAction (Maybe UpdateActionStatus)

-- | The ID of the replication group
processedUpdateAction_replicationGroupId :: Lens' ProcessedUpdateAction (Maybe Text)

-- | Contains the specific price and frequency of a recurring charges for a
--   reserved cache node, or for a reserved cache node offering.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe Text -> Maybe Double -> RecurringCharge

-- | The frequency of the recurring charge.
[$sel:recurringChargeFrequency:RecurringCharge'] :: RecurringCharge -> Maybe Text

-- | The monetary amount of the recurring charge.
[$sel:recurringChargeAmount:RecurringCharge'] :: RecurringCharge -> Maybe Double

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recurringChargeFrequency:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeFrequency</a> - The frequency of the
--   recurring charge.
--   
--   <a>$sel:recurringChargeAmount:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeAmount</a> - The monetary amount of
--   the recurring charge.
newRecurringCharge :: RecurringCharge

-- | The frequency of the recurring charge.
recurringCharge_recurringChargeFrequency :: Lens' RecurringCharge (Maybe Text)

-- | The monetary amount of the recurring charge.
recurringCharge_recurringChargeAmount :: Lens' RecurringCharge (Maybe Double)

-- | A list of the replication groups
--   
--   <i>See:</i> <a>newRegionalConfiguration</a> smart constructor.
data RegionalConfiguration
RegionalConfiguration' :: Text -> Text -> [ReshardingConfiguration] -> RegionalConfiguration

-- | The name of the secondary cluster
[$sel:replicationGroupId:RegionalConfiguration'] :: RegionalConfiguration -> Text

-- | The Amazon region where the cluster is stored
[$sel:replicationGroupRegion:RegionalConfiguration'] :: RegionalConfiguration -> Text

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
[$sel:reshardingConfiguration:RegionalConfiguration'] :: RegionalConfiguration -> [ReshardingConfiguration]

-- | Create a value of <a>RegionalConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupId</a> - The name of the
--   secondary cluster
--   
--   <a>$sel:replicationGroupRegion:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupRegion</a> - The Amazon
--   region where the cluster is stored
--   
--   <a>$sel:reshardingConfiguration:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_reshardingConfiguration</a> - A list of
--   <tt>PreferredAvailabilityZones</tt> objects that specifies the
--   configuration of a node group in the resharded cluster.
newRegionalConfiguration :: Text -> Text -> RegionalConfiguration

-- | The name of the secondary cluster
regionalConfiguration_replicationGroupId :: Lens' RegionalConfiguration Text

-- | The Amazon region where the cluster is stored
regionalConfiguration_replicationGroupRegion :: Lens' RegionalConfiguration Text

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
regionalConfiguration_reshardingConfiguration :: Lens' RegionalConfiguration [ReshardingConfiguration]

-- | Contains all of the attributes of a specific Redis replication group.
--   
--   <i>See:</i> <a>newReplicationGroup</a> smart constructor.
data ReplicationGroup
ReplicationGroup' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [NodeGroup] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe MultiAZStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ReplicationGroupPendingModifiedValues -> Maybe GlobalReplicationGroupInfo -> Maybe [Text] -> Maybe AutomaticFailoverStatus -> ReplicationGroup

-- | The date the auth token was last modified
[$sel:authTokenLastModifiedDate:ReplicationGroup'] :: ReplicationGroup -> Maybe ISO8601

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
[$sel:status:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | The name of the compute and memory capacity node type for each node in
--   the replication group.
[$sel:cacheNodeType:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A list of node groups in this replication group. For Redis (cluster
--   mode disabled) replication groups, this is a single-element list. For
--   Redis (cluster mode enabled) replication groups, the list contains an
--   entry for each node group (shard).
[$sel:nodeGroups:ReplicationGroup'] :: ReplicationGroup -> Maybe [NodeGroup]

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group.
[$sel:snapshottingClusterId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag indicating whether or not this replication group is cluster
--   enabled; i.e., whether its data can be partitioned across multiple
--   shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
[$sel:clusterEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:atRestEncryptionEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The date and time when the cluster was created.
[$sel:replicationGroupCreateTime:ReplicationGroup'] :: ReplicationGroup -> Maybe ISO8601

-- | The ARN (Amazon Resource Name) of the replication group.
[$sel:arn:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:transitEncryptionEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The ID of the user group associated to the replication group.
[$sel:userGroupIds:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
[$sel:snapshotWindow:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | Returns the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:ReplicationGroup'] :: ReplicationGroup -> Maybe [LogDeliveryConfiguration]

-- | The configuration endpoint for this replication group. Use the
--   configuration endpoint to connect to this replication group.
[$sel:configurationEndpoint:ReplicationGroup'] :: ReplicationGroup -> Maybe Endpoint

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
[$sel:authTokenEnabled:ReplicationGroup'] :: ReplicationGroup -> Maybe Bool

-- | The names of all the cache clusters that are part of this replication
--   group.
[$sel:memberClusters:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | The ID of the KMS key used to encrypt the disk in the cluster.
[$sel:kmsKeyId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
[$sel:multiAZ:ReplicationGroup'] :: ReplicationGroup -> Maybe MultiAZStatus

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
[$sel:snapshotRetentionLimit:ReplicationGroup'] :: ReplicationGroup -> Maybe Int

-- | The user supplied description of the replication group.
[$sel:description:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | The identifier for the replication group.
[$sel:replicationGroupId:ReplicationGroup'] :: ReplicationGroup -> Maybe Text

-- | A group of settings to be applied to the replication group, either
--   immediately or during the next maintenance window.
[$sel:pendingModifiedValues:ReplicationGroup'] :: ReplicationGroup -> Maybe ReplicationGroupPendingModifiedValues

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
[$sel:globalReplicationGroupInfo:ReplicationGroup'] :: ReplicationGroup -> Maybe GlobalReplicationGroupInfo

-- | The outpost ARNs of the replication group's member clusters.
[$sel:memberClustersOutpostArns:ReplicationGroup'] :: ReplicationGroup -> Maybe [Text]

-- | Indicates the status of automatic failover for this Redis replication
--   group.
[$sel:automaticFailover:ReplicationGroup'] :: ReplicationGroup -> Maybe AutomaticFailoverStatus

-- | Create a value of <a>ReplicationGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:status:ReplicationGroup'</a>, <a>replicationGroup_status</a> -
--   The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
--   
--   <a>$sel:cacheNodeType:ReplicationGroup'</a>,
--   <a>replicationGroup_cacheNodeType</a> - The name of the compute and
--   memory capacity node type for each node in the replication group.
--   
--   <a>$sel:nodeGroups:ReplicationGroup'</a>,
--   <a>replicationGroup_nodeGroups</a> - A list of node groups in this
--   replication group. For Redis (cluster mode disabled) replication
--   groups, this is a single-element list. For Redis (cluster mode
--   enabled) replication groups, the list contains an entry for each node
--   group (shard).
--   
--   <a>$sel:snapshottingClusterId:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshottingClusterId</a> - The cluster ID that is
--   used as the daily snapshot source for the replication group.
--   
--   <a>$sel:clusterEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_clusterEnabled</a> - A flag indicating whether or
--   not this replication group is cluster enabled; i.e., whether its data
--   can be partitioned across multiple shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:atRestEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:replicationGroupCreateTime:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupCreateTime</a> - The date and time
--   when the cluster was created.
--   
--   <a>$sel:arn:ReplicationGroup'</a>, <a>replicationGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the replication group.
--   
--   <a>$sel:transitEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:userGroupIds:ReplicationGroup'</a>,
--   <a>replicationGroup_userGroupIds</a> - The ID of the user group
--   associated to the replication group.
--   
--   <a>$sel:snapshotWindow:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your node
--   group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroup'</a>,
--   <a>replicationGroup_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:ReplicationGroup'</a>,
--   <a>replicationGroup_configurationEndpoint</a> - The configuration
--   endpoint for this replication group. Use the configuration endpoint to
--   connect to this replication group.
--   
--   <a>$sel:authTokenEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenEnabled</a> - A flag that enables using
--   an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:memberClusters:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClusters</a> - The names of all the cache
--   clusters that are part of this replication group.
--   
--   <a>$sel:kmsKeyId:ReplicationGroup'</a>,
--   <a>replicationGroup_kmsKeyId</a> - The ID of the KMS key used to
--   encrypt the disk in the cluster.
--   
--   <a>$sel:multiAZ:ReplicationGroup'</a>, <a>replicationGroup_multiAZ</a>
--   - A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
--   
--   <a>$sel:snapshotRetentionLimit:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic cluster snapshots before
--   deleting them. For example, if you set <tt>SnapshotRetentionLimit</tt>
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
--   
--   <a>$sel:description:ReplicationGroup'</a>,
--   <a>replicationGroup_description</a> - The user supplied description of
--   the replication group.
--   
--   <a>$sel:replicationGroupId:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupId</a> - The identifier for the
--   replication group.
--   
--   <a>$sel:pendingModifiedValues:ReplicationGroup'</a>,
--   <a>replicationGroup_pendingModifiedValues</a> - A group of settings to
--   be applied to the replication group, either immediately or during the
--   next maintenance window.
--   
--   <a>$sel:globalReplicationGroupInfo:ReplicationGroup'</a>,
--   <a>replicationGroup_globalReplicationGroupInfo</a> - The name of the
--   Global datastore and role of this replication group in the Global
--   datastore.
--   
--   <a>$sel:memberClustersOutpostArns:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClustersOutpostArns</a> - The outpost ARNs
--   of the replication group's member clusters.
--   
--   <a>$sel:automaticFailover:ReplicationGroup'</a>,
--   <a>replicationGroup_automaticFailover</a> - Indicates the status of
--   automatic failover for this Redis replication group.
newReplicationGroup :: ReplicationGroup

-- | The date the auth token was last modified
replicationGroup_authTokenLastModifiedDate :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
replicationGroup_status :: Lens' ReplicationGroup (Maybe Text)

-- | The name of the compute and memory capacity node type for each node in
--   the replication group.
replicationGroup_cacheNodeType :: Lens' ReplicationGroup (Maybe Text)

-- | A list of node groups in this replication group. For Redis (cluster
--   mode disabled) replication groups, this is a single-element list. For
--   Redis (cluster mode enabled) replication groups, the list contains an
--   entry for each node group (shard).
replicationGroup_nodeGroups :: Lens' ReplicationGroup (Maybe [NodeGroup])

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group.
replicationGroup_snapshottingClusterId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating whether or not this replication group is cluster
--   enabled; i.e., whether its data can be partitioned across multiple
--   shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
replicationGroup_clusterEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_atRestEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The date and time when the cluster was created.
replicationGroup_replicationGroupCreateTime :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The ARN (Amazon Resource Name) of the replication group.
replicationGroup_arn :: Lens' ReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_transitEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The ID of the user group associated to the replication group.
replicationGroup_userGroupIds :: Lens' ReplicationGroup (Maybe [Text])

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
replicationGroup_snapshotWindow :: Lens' ReplicationGroup (Maybe Text)

-- | Returns the destination, format and type of the logs.
replicationGroup_logDeliveryConfigurations :: Lens' ReplicationGroup (Maybe [LogDeliveryConfiguration])

-- | The configuration endpoint for this replication group. Use the
--   configuration endpoint to connect to this replication group.
replicationGroup_configurationEndpoint :: Lens' ReplicationGroup (Maybe Endpoint)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
replicationGroup_authTokenEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The names of all the cache clusters that are part of this replication
--   group.
replicationGroup_memberClusters :: Lens' ReplicationGroup (Maybe [Text])

-- | The ID of the KMS key used to encrypt the disk in the cluster.
replicationGroup_kmsKeyId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
replicationGroup_multiAZ :: Lens' ReplicationGroup (Maybe MultiAZStatus)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
replicationGroup_snapshotRetentionLimit :: Lens' ReplicationGroup (Maybe Int)

-- | The user supplied description of the replication group.
replicationGroup_description :: Lens' ReplicationGroup (Maybe Text)

-- | The identifier for the replication group.
replicationGroup_replicationGroupId :: Lens' ReplicationGroup (Maybe Text)

-- | A group of settings to be applied to the replication group, either
--   immediately or during the next maintenance window.
replicationGroup_pendingModifiedValues :: Lens' ReplicationGroup (Maybe ReplicationGroupPendingModifiedValues)

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
replicationGroup_globalReplicationGroupInfo :: Lens' ReplicationGroup (Maybe GlobalReplicationGroupInfo)

-- | The outpost ARNs of the replication group's member clusters.
replicationGroup_memberClustersOutpostArns :: Lens' ReplicationGroup (Maybe [Text])

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroup_automaticFailover :: Lens' ReplicationGroup (Maybe AutomaticFailoverStatus)

-- | The settings to be applied to the Redis replication group, either
--   immediately or during the next maintenance window.
--   
--   <i>See:</i> <a>newReplicationGroupPendingModifiedValues</a> smart
--   constructor.
data ReplicationGroupPendingModifiedValues
ReplicationGroupPendingModifiedValues' :: Maybe AuthTokenUpdateStatus -> Maybe UserGroupsUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe ReshardingStatus -> Maybe Text -> Maybe PendingAutomaticFailoverStatus -> ReplicationGroupPendingModifiedValues

-- | The auth token status
[$sel:authTokenStatus:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe AuthTokenUpdateStatus

-- | The user group being modified.
[$sel:userGroups:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe UserGroupsUpdateStatus

-- | The log delivery configurations being modified
[$sel:logDeliveryConfigurations:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe [PendingLogDeliveryConfiguration]

-- | The status of an online resharding operation.
[$sel:resharding:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe ReshardingStatus

-- | The primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
[$sel:primaryClusterId:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe Text

-- | Indicates the status of automatic failover for this Redis replication
--   group.
[$sel:automaticFailoverStatus:ReplicationGroupPendingModifiedValues'] :: ReplicationGroupPendingModifiedValues -> Maybe PendingAutomaticFailoverStatus

-- | Create a value of <a>ReplicationGroupPendingModifiedValues</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_authTokenStatus</a> - The
--   auth token status
--   
--   <a>$sel:userGroups:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_userGroups</a> - The user
--   group being modified.
--   
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_logDeliveryConfigurations</a>
--   - The log delivery configurations being modified
--   
--   <a>$sel:resharding:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_resharding</a> - The status
--   of an online resharding operation.
--   
--   <a>$sel:primaryClusterId:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_primaryClusterId</a> - The
--   primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
--   
--   
--   <a>$sel:automaticFailoverStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_automaticFailoverStatus</a> -
--   Indicates the status of automatic failover for this Redis replication
--   group.
newReplicationGroupPendingModifiedValues :: ReplicationGroupPendingModifiedValues

-- | The auth token status
replicationGroupPendingModifiedValues_authTokenStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The user group being modified.
replicationGroupPendingModifiedValues_userGroups :: Lens' ReplicationGroupPendingModifiedValues (Maybe UserGroupsUpdateStatus)

-- | The log delivery configurations being modified
replicationGroupPendingModifiedValues_logDeliveryConfigurations :: Lens' ReplicationGroupPendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | The status of an online resharding operation.
replicationGroupPendingModifiedValues_resharding :: Lens' ReplicationGroupPendingModifiedValues (Maybe ReshardingStatus)

-- | The primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
replicationGroupPendingModifiedValues_primaryClusterId :: Lens' ReplicationGroupPendingModifiedValues (Maybe Text)

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroupPendingModifiedValues_automaticFailoverStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe PendingAutomaticFailoverStatus)

-- | Represents the output of a <tt>PurchaseReservedCacheNodesOffering</tt>
--   operation.
--   
--   <i>See:</i> <a>newReservedCacheNode</a> smart constructor.
data ReservedCacheNode
ReservedCacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNode

-- | The cache node type for the reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The state of the reserved cache node.
[$sel:state:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The time the reservation started.
[$sel:startTime:ReservedCacheNode'] :: ReservedCacheNode -> Maybe ISO8601

-- | The description of the reserved cache node.
[$sel:productDescription:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The Amazon Resource Name (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
[$sel:reservationARN:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The number of cache nodes that have been reserved.
[$sel:cacheNodeCount:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Int

-- | The unique identifier for the reservation.
[$sel:reservedCacheNodeId:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The recurring price charged to run this reserved cache node.
[$sel:recurringCharges:ReservedCacheNode'] :: ReservedCacheNode -> Maybe [RecurringCharge]

-- | The offering type of this reserved cache node.
[$sel:offeringType:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | The hourly price charged for this reserved cache node.
[$sel:usagePrice:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Double

-- | The fixed price charged for this reserved cache node.
[$sel:fixedPrice:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Double

-- | The duration of the reservation in seconds.
[$sel:duration:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Int

-- | The offering identifier.
[$sel:reservedCacheNodesOfferingId:ReservedCacheNode'] :: ReservedCacheNode -> Maybe Text

-- | Create a value of <a>ReservedCacheNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeType</a> - The cache node type for the
--   reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:state:ReservedCacheNode'</a>, <a>reservedCacheNode_state</a> -
--   The state of the reserved cache node.
--   
--   <a>$sel:startTime:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_startTime</a> - The time the reservation started.
--   
--   <a>$sel:productDescription:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_productDescription</a> - The description of the
--   reserved cache node.
--   
--   <a>$sel:reservationARN:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservationARN</a> - The Amazon Resource Name
--   (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
--   
--   <a>$sel:cacheNodeCount:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeCount</a> - The number of cache nodes
--   that have been reserved.
--   
--   <a>$sel:reservedCacheNodeId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodeId</a> - The unique identifier
--   for the reservation.
--   
--   <a>$sel:recurringCharges:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_recurringCharges</a> - The recurring price
--   charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_offeringType</a> - The offering type of this
--   reserved cache node.
--   
--   <a>$sel:usagePrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_usagePrice</a> - The hourly price charged for
--   this reserved cache node.
--   
--   <a>$sel:fixedPrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_fixedPrice</a> - The fixed price charged for this
--   reserved cache node.
--   
--   <a>$sel:duration:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_duration</a> - The duration of the reservation in
--   seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodesOfferingId</a> - The offering
--   identifier.
newReservedCacheNode :: ReservedCacheNode

-- | The cache node type for the reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNode_cacheNodeType :: Lens' ReservedCacheNode (Maybe Text)

-- | The state of the reserved cache node.
reservedCacheNode_state :: Lens' ReservedCacheNode (Maybe Text)

-- | The time the reservation started.
reservedCacheNode_startTime :: Lens' ReservedCacheNode (Maybe UTCTime)

-- | The description of the reserved cache node.
reservedCacheNode_productDescription :: Lens' ReservedCacheNode (Maybe Text)

-- | The Amazon Resource Name (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
reservedCacheNode_reservationARN :: Lens' ReservedCacheNode (Maybe Text)

-- | The number of cache nodes that have been reserved.
reservedCacheNode_cacheNodeCount :: Lens' ReservedCacheNode (Maybe Int)

-- | The unique identifier for the reservation.
reservedCacheNode_reservedCacheNodeId :: Lens' ReservedCacheNode (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNode_recurringCharges :: Lens' ReservedCacheNode (Maybe [RecurringCharge])

-- | The offering type of this reserved cache node.
reservedCacheNode_offeringType :: Lens' ReservedCacheNode (Maybe Text)

-- | The hourly price charged for this reserved cache node.
reservedCacheNode_usagePrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The fixed price charged for this reserved cache node.
reservedCacheNode_fixedPrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The duration of the reservation in seconds.
reservedCacheNode_duration :: Lens' ReservedCacheNode (Maybe Int)

-- | The offering identifier.
reservedCacheNode_reservedCacheNodesOfferingId :: Lens' ReservedCacheNode (Maybe Text)

-- | Describes all of the attributes of a reserved cache node offering.
--   
--   <i>See:</i> <a>newReservedCacheNodesOffering</a> smart constructor.
data ReservedCacheNodesOffering
ReservedCacheNodesOffering' :: Maybe Text -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNodesOffering

-- | The cache node type for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The cache engine used by the offering.
[$sel:productDescription:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The recurring price charged to run this reserved cache node.
[$sel:recurringCharges:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe [RecurringCharge]

-- | The offering type.
[$sel:offeringType:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | The hourly price charged for this offering.
[$sel:usagePrice:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Double

-- | The fixed price charged for this offering.
[$sel:fixedPrice:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Double

-- | The duration of the offering. in seconds.
[$sel:duration:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Int

-- | A unique identifier for the reserved cache node offering.
[$sel:reservedCacheNodesOfferingId:ReservedCacheNodesOffering'] :: ReservedCacheNodesOffering -> Maybe Text

-- | Create a value of <a>ReservedCacheNodesOffering</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_cacheNodeType</a> - The cache node type
--   for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_productDescription</a> - The cache
--   engine used by the offering.
--   
--   <a>$sel:recurringCharges:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_recurringCharges</a> - The recurring
--   price charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_offeringType</a> - The offering type.
--   
--   <a>$sel:usagePrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_usagePrice</a> - The hourly price
--   charged for this offering.
--   
--   <a>$sel:fixedPrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_fixedPrice</a> - The fixed price charged
--   for this offering.
--   
--   <a>$sel:duration:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_duration</a> - The duration of the
--   offering. in seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_reservedCacheNodesOfferingId</a> - A
--   unique identifier for the reserved cache node offering.
newReservedCacheNodesOffering :: ReservedCacheNodesOffering

-- | The cache node type for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNodesOffering_cacheNodeType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The cache engine used by the offering.
reservedCacheNodesOffering_productDescription :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNodesOffering_recurringCharges :: Lens' ReservedCacheNodesOffering (Maybe [RecurringCharge])

-- | The offering type.
reservedCacheNodesOffering_offeringType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The hourly price charged for this offering.
reservedCacheNodesOffering_usagePrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The fixed price charged for this offering.
reservedCacheNodesOffering_fixedPrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The duration of the offering. in seconds.
reservedCacheNodesOffering_duration :: Lens' ReservedCacheNodesOffering (Maybe Int)

-- | A unique identifier for the reserved cache node offering.
reservedCacheNodesOffering_reservedCacheNodesOfferingId :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
--   
--   <i>See:</i> <a>newReshardingConfiguration</a> smart constructor.
data ReshardingConfiguration
ReshardingConfiguration' :: Maybe [Text] -> Maybe Text -> ReshardingConfiguration

-- | A list of preferred availability zones for the nodes in this cluster.
[$sel:preferredAvailabilityZones:ReshardingConfiguration'] :: ReshardingConfiguration -> Maybe [Text]

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
[$sel:nodeGroupId:ReshardingConfiguration'] :: ReshardingConfiguration -> Maybe Text

-- | Create a value of <a>ReshardingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_preferredAvailabilityZones</a> - A list of
--   preferred availability zones for the nodes in this cluster.
--   
--   <a>$sel:nodeGroupId:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_nodeGroupId</a> - Either the ElastiCache
--   for Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newReshardingConfiguration :: ReshardingConfiguration

-- | A list of preferred availability zones for the nodes in this cluster.
reshardingConfiguration_preferredAvailabilityZones :: Lens' ReshardingConfiguration (Maybe [Text])

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
reshardingConfiguration_nodeGroupId :: Lens' ReshardingConfiguration (Maybe Text)

-- | The status of an online resharding operation.
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | Represents the progress of an online resharding operation.
[$sel:slotMigration:ReshardingStatus'] :: ReshardingStatus -> Maybe SlotMigration

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - Represents the progress of an
--   online resharding operation.
newReshardingStatus :: ReshardingStatus

-- | Represents the progress of an online resharding operation.
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)

-- | Represents a single cache security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of the cache security group membership. The status changes
--   whenever a cache security group is modified, or when the cache
--   security groups assigned to a cluster are modified.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The identifier of the cache security group.
[$sel:securityGroupId:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the cache
--   security group membership. The status changes whenever a cache
--   security group is modified, or when the cache security groups assigned
--   to a cluster are modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   cache security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of the cache security group membership. The status changes
--   whenever a cache security group is modified, or when the cache
--   security groups assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the cache security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)

-- | An update that you can apply to your Redis clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe ServiceUpdateSeverity -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> ServiceUpdate

-- | The Elasticache engine version to which the update applies. Either
--   Redis or Memcached engine version
[$sel:engineVersion:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Reflects the nature of the service update
[$sel:serviceUpdateType:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateType

-- | The unique ID of the service update
[$sel:serviceUpdateName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
[$sel:engine:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The date when the service update is initially available
[$sel:serviceUpdateReleaseDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | Indicates whether the service update will be automatically applied
--   once the recommended apply-by date has expired.
[$sel:autoUpdateAfterRecommendedApplyByDate:ServiceUpdate'] :: ServiceUpdate -> Maybe Bool

-- | The severity of the service update
[$sel:serviceUpdateSeverity:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateSeverity

-- | The date after which the service update is no longer available
[$sel:serviceUpdateEndDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | Provides details of the service update
[$sel:serviceUpdateDescription:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
[$sel:serviceUpdateRecommendedApplyByDate:ServiceUpdate'] :: ServiceUpdate -> Maybe ISO8601

-- | The status of the service update
[$sel:serviceUpdateStatus:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateStatus

-- | The estimated length of time the service update will take
[$sel:estimatedUpdateTime:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ServiceUpdate'</a>,
--   <a>serviceUpdate_engineVersion</a> - The Elasticache engine version to
--   which the update applies. Either Redis or Memcached engine version
--   
--   <a>$sel:serviceUpdateType:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:engine:ServiceUpdate'</a>, <a>serviceUpdate_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:serviceUpdateReleaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateReleaseDate</a> - The date when the
--   service update is initially available
--   
--   <a>$sel:autoUpdateAfterRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateAfterRecommendedApplyByDate</a> - Indicates
--   whether the service update will be automatically applied once the
--   recommended apply-by date has expired.
--   
--   <a>$sel:serviceUpdateSeverity:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:serviceUpdateEndDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateEndDate</a> - The date after which the
--   service update is no longer available
--   
--   <a>$sel:serviceUpdateDescription:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateDescription</a> - Provides details of
--   the service update
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateRecommendedApplyByDate</a> - The
--   recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
--   
--   <a>$sel:serviceUpdateStatus:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:ServiceUpdate'</a>,
--   <a>serviceUpdate_estimatedUpdateTime</a> - The estimated length of
--   time the service update will take
newServiceUpdate :: ServiceUpdate

-- | The Elasticache engine version to which the update applies. Either
--   Redis or Memcached engine version
serviceUpdate_engineVersion :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_serviceUpdateType :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
serviceUpdate_engine :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_serviceUpdateReleaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Indicates whether the service update will be automatically applied
--   once the recommended apply-by date has expired.
serviceUpdate_autoUpdateAfterRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe Bool)

-- | The severity of the service update
serviceUpdate_serviceUpdateSeverity :: Lens' ServiceUpdate (Maybe ServiceUpdateSeverity)

-- | The date after which the service update is no longer available
serviceUpdate_serviceUpdateEndDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Provides details of the service update
serviceUpdate_serviceUpdateDescription :: Lens' ServiceUpdate (Maybe Text)

-- | The recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
serviceUpdate_serviceUpdateRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The status of the service update
serviceUpdate_serviceUpdateStatus :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The estimated length of time the service update will take
serviceUpdate_estimatedUpdateTime :: Lens' ServiceUpdate (Maybe Text)

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | The percentage of the slot migration that is complete.
[$sel:progressPercentage:SlotMigration'] :: SlotMigration -> Maybe Double

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)

-- | Represents a copy of an entire Redis cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [NodeSnapshot] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe AutomaticFailoverStatus -> Maybe Text -> Snapshot

-- | The version of the cache engine version that is used by the source
--   cluster.
[$sel:engineVersion:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:Snapshot'] :: Snapshot -> Maybe Text

-- | The date and time when the source cluster was created.
[$sel:cacheClusterCreateTime:Snapshot'] :: Snapshot -> Maybe ISO8601

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:Snapshot'] :: Snapshot -> Maybe Bool

-- | The ARN (Amazon Resource Name) of the snapshot.
[$sel:arn:Snapshot'] :: Snapshot -> Maybe Text

-- | The cache parameter group that is associated with the source cluster.
[$sel:cacheParameterGroupName:Snapshot'] :: Snapshot -> Maybe Text

-- | A description of the source replication group.
[$sel:replicationGroupDescription:Snapshot'] :: Snapshot -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group for the source cluster.
[$sel:vpcId:Snapshot'] :: Snapshot -> Maybe Text

-- | The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
[$sel:snapshotStatus:Snapshot'] :: Snapshot -> Maybe Text

-- | The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
[$sel:snapshotWindow:Snapshot'] :: Snapshot -> Maybe Text

-- | The user-supplied identifier of the source cluster.
[$sel:cacheClusterId:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>)
--   used by the source cluster.
[$sel:engine:Snapshot'] :: Snapshot -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:Snapshot'] :: Snapshot -> Maybe Text

-- | The Amazon Resource Name (ARN) for the topic used by the source
--   cluster for publishing notifications.
[$sel:topicArn:Snapshot'] :: Snapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:Snapshot'] :: Snapshot -> Maybe Text

-- | A list of the cache nodes in the source cluster.
[$sel:nodeSnapshots:Snapshot'] :: Snapshot -> Maybe [NodeSnapshot]

-- | The name of the cache subnet group associated with the source cluster.
[$sel:cacheSubnetGroupName:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the Availability Zone in which the source cluster is
--   located.
[$sel:preferredAvailabilityZone:Snapshot'] :: Snapshot -> Maybe Text

-- | The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
[$sel:numNodeGroups:Snapshot'] :: Snapshot -> Maybe Int

-- | For an automatic snapshot, the number of days for which ElastiCache
--   retains the snapshot before deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
[$sel:snapshotRetentionLimit:Snapshot'] :: Snapshot -> Maybe Int

-- | The name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
[$sel:snapshotName:Snapshot'] :: Snapshot -> Maybe Text

-- | The ARN (Amazon Resource Name) of the preferred outpost.
[$sel:preferredOutpostArn:Snapshot'] :: Snapshot -> Maybe Text

-- | The unique identifier of the source replication group.
[$sel:replicationGroupId:Snapshot'] :: Snapshot -> Maybe Text

-- | The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
[$sel:numCacheNodes:Snapshot'] :: Snapshot -> Maybe Int

-- | The port number used by each cache nodes in the source cluster.
[$sel:port:Snapshot'] :: Snapshot -> Maybe Int

-- | Indicates the status of automatic failover for the source Redis
--   replication group.
[$sel:automaticFailover:Snapshot'] :: Snapshot -> Maybe AutomaticFailoverStatus

-- | Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
[$sel:snapshotSource:Snapshot'] :: Snapshot -> Maybe Text

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Snapshot'</a>, <a>snapshot_engineVersion</a> -
--   The version of the cache engine version that is used by the source
--   cluster.
--   
--   <a>$sel:cacheNodeType:Snapshot'</a>, <a>snapshot_cacheNodeType</a> -
--   The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheClusterCreateTime:Snapshot'</a>,
--   <a>snapshot_cacheClusterCreateTime</a> - The date and time when the
--   source cluster was created.
--   
--   <a>$sel:autoMinorVersionUpgrade:Snapshot'</a>,
--   <a>snapshot_autoMinorVersionUpgrade</a> - This parameter is currently
--   disabled.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:cacheParameterGroupName:Snapshot'</a>,
--   <a>snapshot_cacheParameterGroupName</a> - The cache parameter group
--   that is associated with the source cluster.
--   
--   <a>$sel:replicationGroupDescription:Snapshot'</a>,
--   <a>snapshot_replicationGroupDescription</a> - A description of the
--   source replication group.
--   
--   <a>$sel:vpcId:Snapshot'</a>, <a>snapshot_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the cache subnet group
--   for the source cluster.
--   
--   <a>$sel:snapshotStatus:Snapshot'</a>, <a>snapshot_snapshotStatus</a> -
--   The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
--   
--   <a>$sel:snapshotWindow:Snapshot'</a>, <a>snapshot_snapshotWindow</a> -
--   The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
--   
--   <a>$sel:cacheClusterId:Snapshot'</a>, <a>snapshot_cacheClusterId</a> -
--   The user-supplied identifier of the source cluster.
--   
--   <a>$sel:engine:Snapshot'</a>, <a>snapshot_engine</a> - The name of the
--   cache engine (<tt>memcached</tt> or <tt>redis</tt>) used by the source
--   cluster.
--   
--   <a>$sel:preferredMaintenanceWindow:Snapshot'</a>,
--   <a>snapshot_preferredMaintenanceWindow</a> - Specifies the weekly time
--   range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:topicArn:Snapshot'</a>, <a>snapshot_topicArn</a> - The Amazon
--   Resource Name (ARN) for the topic used by the source cluster for
--   publishing notifications.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:nodeSnapshots:Snapshot'</a>, <a>snapshot_nodeSnapshots</a> - A
--   list of the cache nodes in the source cluster.
--   
--   <a>$sel:cacheSubnetGroupName:Snapshot'</a>,
--   <a>snapshot_cacheSubnetGroupName</a> - The name of the cache subnet
--   group associated with the source cluster.
--   
--   <a>$sel:preferredAvailabilityZone:Snapshot'</a>,
--   <a>snapshot_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the source cluster is located.
--   
--   <a>$sel:numNodeGroups:Snapshot'</a>, <a>snapshot_numNodeGroups</a> -
--   The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
--   
--   <a>$sel:snapshotRetentionLimit:Snapshot'</a>,
--   <a>snapshot_snapshotRetentionLimit</a> - For an automatic snapshot,
--   the number of days for which ElastiCache retains the snapshot before
--   deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
--   
--   <a>$sel:snapshotName:Snapshot'</a>, <a>snapshot_snapshotName</a> - The
--   name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
--   
--   <a>$sel:preferredOutpostArn:Snapshot'</a>,
--   <a>snapshot_preferredOutpostArn</a> - The ARN (Amazon Resource Name)
--   of the preferred outpost.
--   
--   <a>$sel:replicationGroupId:Snapshot'</a>,
--   <a>snapshot_replicationGroupId</a> - The unique identifier of the
--   source replication group.
--   
--   <a>$sel:numCacheNodes:Snapshot'</a>, <a>snapshot_numCacheNodes</a> -
--   The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   <a>$sel:port:Snapshot'</a>, <a>snapshot_port</a> - The port number
--   used by each cache nodes in the source cluster.
--   
--   <a>$sel:automaticFailover:Snapshot'</a>,
--   <a>snapshot_automaticFailover</a> - Indicates the status of automatic
--   failover for the source Redis replication group.
--   
--   <a>$sel:snapshotSource:Snapshot'</a>, <a>snapshot_snapshotSource</a> -
--   Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
newSnapshot :: Snapshot

-- | The version of the cache engine version that is used by the source
--   cluster.
snapshot_engineVersion :: Lens' Snapshot (Maybe Text)

-- | The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
snapshot_cacheNodeType :: Lens' Snapshot (Maybe Text)

-- | The date and time when the source cluster was created.
snapshot_cacheClusterCreateTime :: Lens' Snapshot (Maybe UTCTime)

-- | This parameter is currently disabled.
snapshot_autoMinorVersionUpgrade :: Lens' Snapshot (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The cache parameter group that is associated with the source cluster.
snapshot_cacheParameterGroupName :: Lens' Snapshot (Maybe Text)

-- | A description of the source replication group.
snapshot_replicationGroupDescription :: Lens' Snapshot (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group for the source cluster.
snapshot_vpcId :: Lens' Snapshot (Maybe Text)

-- | The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
snapshot_snapshotStatus :: Lens' Snapshot (Maybe Text)

-- | The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
snapshot_snapshotWindow :: Lens' Snapshot (Maybe Text)

-- | The user-supplied identifier of the source cluster.
snapshot_cacheClusterId :: Lens' Snapshot (Maybe Text)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>)
--   used by the source cluster.
snapshot_engine :: Lens' Snapshot (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
snapshot_preferredMaintenanceWindow :: Lens' Snapshot (Maybe Text)

-- | The Amazon Resource Name (ARN) for the topic used by the source
--   cluster for publishing notifications.
snapshot_topicArn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | A list of the cache nodes in the source cluster.
snapshot_nodeSnapshots :: Lens' Snapshot (Maybe [NodeSnapshot])

-- | The name of the cache subnet group associated with the source cluster.
snapshot_cacheSubnetGroupName :: Lens' Snapshot (Maybe Text)

-- | The name of the Availability Zone in which the source cluster is
--   located.
snapshot_preferredAvailabilityZone :: Lens' Snapshot (Maybe Text)

-- | The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
snapshot_numNodeGroups :: Lens' Snapshot (Maybe Int)

-- | For an automatic snapshot, the number of days for which ElastiCache
--   retains the snapshot before deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
snapshot_snapshotRetentionLimit :: Lens' Snapshot (Maybe Int)

-- | The name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
snapshot_snapshotName :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the preferred outpost.
snapshot_preferredOutpostArn :: Lens' Snapshot (Maybe Text)

-- | The unique identifier of the source replication group.
snapshot_replicationGroupId :: Lens' Snapshot (Maybe Text)

-- | The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
snapshot_numCacheNodes :: Lens' Snapshot (Maybe Int)

-- | The port number used by each cache nodes in the source cluster.
snapshot_port :: Lens' Snapshot (Maybe Int)

-- | Indicates the status of automatic failover for the source Redis
--   replication group.
snapshot_automaticFailover :: Lens' Snapshot (Maybe AutomaticFailoverStatus)

-- | Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
snapshot_snapshotSource :: Lens' Snapshot (Maybe Text)

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with ElastiCache.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Maybe SubnetOutpost -> Subnet

-- | The unique identifier for the subnet.
[$sel:subnetIdentifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone associated with the subnet.
[$sel:subnetAvailabilityZone:Subnet'] :: Subnet -> Maybe AvailabilityZone

-- | The outpost ARN of the subnet.
[$sel:subnetOutpost:Subnet'] :: Subnet -> Maybe SubnetOutpost

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The unique identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone
--   associated with the subnet.
--   
--   <a>$sel:subnetOutpost:Subnet'</a>, <a>subnet_subnetOutpost</a> - The
--   outpost ARN of the subnet.
newSubnet :: Subnet

-- | The unique identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone associated with the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe AvailabilityZone)

-- | The outpost ARN of the subnet.
subnet_subnetOutpost :: Lens' Subnet (Maybe SubnetOutpost)

-- | The ID of the outpost subnet.
--   
--   <i>See:</i> <a>newSubnetOutpost</a> smart constructor.
data SubnetOutpost
SubnetOutpost' :: Maybe Text -> SubnetOutpost

-- | The outpost ARN of the subnet.
[$sel:subnetOutpostArn:SubnetOutpost'] :: SubnetOutpost -> Maybe Text

-- | Create a value of <a>SubnetOutpost</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetOutpostArn:SubnetOutpost'</a>,
--   <a>subnetOutpost_subnetOutpostArn</a> - The outpost ARN of the subnet.
newSubnetOutpost :: SubnetOutpost

-- | The outpost ARN of the subnet.
subnetOutpost_subnetOutpostArn :: Lens' SubnetOutpost (Maybe Text)

-- | A tag that can be added to an ElastiCache cluster or replication
--   group. Tags are composed of a Key/Value pair. You can use tags to
--   categorize and track all your ElastiCache resources, with the
--   exception of global replication group. When you add or remove tags on
--   replication groups, those actions will be replicated to all nodes in
--   the replication group. A tag with a null Value is permitted.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value. May be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key for the tag. May not be null.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | A list of tags as key-value pairs.
[$sel:tagList:TagListMessage'] :: TagListMessage -> Maybe [Tag]

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])

-- | Filters update actions from the service updates that are in available
--   status during the time range.
--   
--   <i>See:</i> <a>newTimeRangeFilter</a> smart constructor.
data TimeRangeFilter
TimeRangeFilter' :: Maybe ISO8601 -> Maybe ISO8601 -> TimeRangeFilter

-- | The start time of the time range filter
[$sel:startTime:TimeRangeFilter'] :: TimeRangeFilter -> Maybe ISO8601

-- | The end time of the time range filter
[$sel:endTime:TimeRangeFilter'] :: TimeRangeFilter -> Maybe ISO8601

-- | Create a value of <a>TimeRangeFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:TimeRangeFilter'</a>,
--   <a>timeRangeFilter_startTime</a> - The start time of the time range
--   filter
--   
--   <a>$sel:endTime:TimeRangeFilter'</a>, <a>timeRangeFilter_endTime</a> -
--   The end time of the time range filter
newTimeRangeFilter :: TimeRangeFilter

-- | The start time of the time range filter
timeRangeFilter_startTime :: Lens' TimeRangeFilter (Maybe UTCTime)

-- | The end time of the time range filter
timeRangeFilter_endTime :: Lens' TimeRangeFilter (Maybe UTCTime)

-- | Update action that has failed to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newUnprocessedUpdateAction</a> smart constructor.
data UnprocessedUpdateAction
UnprocessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedUpdateAction

-- | The ID of the cache cluster
[$sel:cacheClusterId:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The error type for requests that are not processed
[$sel:errorType:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The error message that describes the reason the request was not
--   processed
[$sel:errorMessage:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | The replication group ID
[$sel:replicationGroupId:UnprocessedUpdateAction'] :: UnprocessedUpdateAction -> Maybe Text

-- | Create a value of <a>UnprocessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_serviceUpdateName</a> - The unique ID of
--   the service update
--   
--   <a>$sel:errorType:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorType</a> - The error type for requests
--   that are not processed
--   
--   <a>$sel:errorMessage:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorMessage</a> - The error message that
--   describes the reason the request was not processed
--   
--   <a>$sel:replicationGroupId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_replicationGroupId</a> - The replication
--   group ID
newUnprocessedUpdateAction :: UnprocessedUpdateAction

-- | The ID of the cache cluster
unprocessedUpdateAction_cacheClusterId :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
unprocessedUpdateAction_serviceUpdateName :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error type for requests that are not processed
unprocessedUpdateAction_errorType :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error message that describes the reason the request was not
--   processed
unprocessedUpdateAction_errorMessage :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The replication group ID
unprocessedUpdateAction_replicationGroupId :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The status of the service update for a specific replication group
--   
--   <i>See:</i> <a>newUpdateAction</a> smart constructor.
data UpdateAction
UpdateAction' :: Maybe ServiceUpdateType -> Maybe SlaMet -> Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe [CacheNodeUpdateStatus] -> Maybe ServiceUpdateSeverity -> Maybe [NodeGroupUpdateStatus] -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> Maybe Text -> UpdateAction

-- | Reflects the nature of the service update
[$sel:serviceUpdateType:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateType

-- | If yes, all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
[$sel:slaMet:UpdateAction'] :: UpdateAction -> Maybe SlaMet

-- | The ID of the cache cluster
[$sel:cacheClusterId:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The unique ID of the service update
[$sel:serviceUpdateName:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The status of the update action
[$sel:updateActionStatus:UpdateAction'] :: UpdateAction -> Maybe UpdateActionStatus

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
[$sel:engine:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The progress of the service update on the replication group
[$sel:nodesUpdated:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The date when the UpdateActionStatus was last modified
[$sel:updateActionStatusModifiedDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The date the update is first available
[$sel:serviceUpdateReleaseDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The status of the service update on the cache node
[$sel:cacheNodeUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe [CacheNodeUpdateStatus]

-- | The severity of the service update
[$sel:serviceUpdateSeverity:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateSeverity

-- | The status of the service update on the node group
[$sel:nodeGroupUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe [NodeGroupUpdateStatus]

-- | The recommended date to apply the service update to ensure compliance.
--   For information on compliance, see <a>Self-Service Security Updates
--   for Compliance</a>.
[$sel:serviceUpdateRecommendedApplyByDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The date that the service update is available to a replication group
[$sel:updateActionAvailableDate:UpdateAction'] :: UpdateAction -> Maybe ISO8601

-- | The status of the service update
[$sel:serviceUpdateStatus:UpdateAction'] :: UpdateAction -> Maybe ServiceUpdateStatus

-- | The estimated length of time for the update to complete
[$sel:estimatedUpdateTime:UpdateAction'] :: UpdateAction -> Maybe Text

-- | The ID of the replication group
[$sel:replicationGroupId:UpdateAction'] :: UpdateAction -> Maybe Text

-- | Create a value of <a>UpdateAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateType:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:slaMet:UpdateAction'</a>, <a>updateAction_slaMet</a> - If yes,
--   all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
--   
--   <a>$sel:cacheClusterId:UpdateAction'</a>,
--   <a>updateAction_cacheClusterId</a> - The ID of the cache cluster
--   
--   <a>$sel:serviceUpdateName:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:updateActionStatus:UpdateAction'</a>,
--   <a>updateAction_updateActionStatus</a> - The status of the update
--   action
--   
--   <a>$sel:engine:UpdateAction'</a>, <a>updateAction_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:nodesUpdated:UpdateAction'</a>,
--   <a>updateAction_nodesUpdated</a> - The progress of the service update
--   on the replication group
--   
--   <a>$sel:updateActionStatusModifiedDate:UpdateAction'</a>,
--   <a>updateAction_updateActionStatusModifiedDate</a> - The date when the
--   UpdateActionStatus was last modified
--   
--   <a>$sel:serviceUpdateReleaseDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateReleaseDate</a> - The date the update is
--   first available
--   
--   <a>$sel:cacheNodeUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_cacheNodeUpdateStatus</a> - The status of the service
--   update on the cache node
--   
--   <a>$sel:serviceUpdateSeverity:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:nodeGroupUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_nodeGroupUpdateStatus</a> - The status of the service
--   update on the node group
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateRecommendedApplyByDate</a> - The
--   recommended date to apply the service update to ensure compliance. For
--   information on compliance, see <a>Self-Service Security Updates for
--   Compliance</a>.
--   
--   <a>$sel:updateActionAvailableDate:UpdateAction'</a>,
--   <a>updateAction_updateActionAvailableDate</a> - The date that the
--   service update is available to a replication group
--   
--   <a>$sel:serviceUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:UpdateAction'</a>,
--   <a>updateAction_estimatedUpdateTime</a> - The estimated length of time
--   for the update to complete
--   
--   <a>$sel:replicationGroupId:UpdateAction'</a>,
--   <a>updateAction_replicationGroupId</a> - The ID of the replication
--   group
newUpdateAction :: UpdateAction

-- | Reflects the nature of the service update
updateAction_serviceUpdateType :: Lens' UpdateAction (Maybe ServiceUpdateType)

-- | If yes, all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
updateAction_slaMet :: Lens' UpdateAction (Maybe SlaMet)

-- | The ID of the cache cluster
updateAction_cacheClusterId :: Lens' UpdateAction (Maybe Text)

-- | The unique ID of the service update
updateAction_serviceUpdateName :: Lens' UpdateAction (Maybe Text)

-- | The status of the update action
updateAction_updateActionStatus :: Lens' UpdateAction (Maybe UpdateActionStatus)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
updateAction_engine :: Lens' UpdateAction (Maybe Text)

-- | The progress of the service update on the replication group
updateAction_nodesUpdated :: Lens' UpdateAction (Maybe Text)

-- | The date when the UpdateActionStatus was last modified
updateAction_updateActionStatusModifiedDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date the update is first available
updateAction_serviceUpdateReleaseDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update on the cache node
updateAction_cacheNodeUpdateStatus :: Lens' UpdateAction (Maybe [CacheNodeUpdateStatus])

-- | The severity of the service update
updateAction_serviceUpdateSeverity :: Lens' UpdateAction (Maybe ServiceUpdateSeverity)

-- | The status of the service update on the node group
updateAction_nodeGroupUpdateStatus :: Lens' UpdateAction (Maybe [NodeGroupUpdateStatus])

-- | The recommended date to apply the service update to ensure compliance.
--   For information on compliance, see <a>Self-Service Security Updates
--   for Compliance</a>.
updateAction_serviceUpdateRecommendedApplyByDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date that the service update is available to a replication group
updateAction_updateActionAvailableDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update
updateAction_serviceUpdateStatus :: Lens' UpdateAction (Maybe ServiceUpdateStatus)

-- | The estimated length of time for the update to complete
updateAction_estimatedUpdateTime :: Lens' UpdateAction (Maybe Text)

-- | The ID of the replication group
updateAction_replicationGroupId :: Lens' UpdateAction (Maybe Text)

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
[$sel:unprocessedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [UnprocessedUpdateAction]

-- | Update actions that have been processed successfully
[$sel:processedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [ProcessedUpdateAction]

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Returns a list of the user group IDs the user belongs to.
[$sel:userGroupIds:User'] :: User -> Maybe [Text]

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | The current supported value is Redis.
[$sel:engine:User'] :: User -> Maybe Text

-- | The username of the user.
[$sel:userName:User'] :: User -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The ID of the user.
[$sel:userId:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:UserGroup'] :: UserGroup -> Maybe Text

-- | The list of user IDs that belong to the user group.
[$sel:userIds:UserGroup'] :: UserGroup -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the user group.
[$sel:arn:UserGroup'] :: UserGroup -> Maybe Text

-- | The ID of the user group.
[$sel:userGroupId:UserGroup'] :: UserGroup -> Maybe Text

-- | The current supported value is Redis.
[$sel:engine:UserGroup'] :: UserGroup -> Maybe Text

-- | A list of updates being applied to the user group.
[$sel:pendingChanges:UserGroup'] :: UserGroup -> Maybe UserGroupPendingChanges

-- | A list of replication groups that the user group can access.
[$sel:replicationGroups:UserGroup'] :: UserGroup -> Maybe [Text]

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])

-- | Returns the updates being applied to the user group.
--   
--   <i>See:</i> <a>newUserGroupPendingChanges</a> smart constructor.
data UserGroupPendingChanges
UserGroupPendingChanges' :: Maybe [Text] -> Maybe [Text] -> UserGroupPendingChanges

-- | The list of user IDs to add.
[$sel:userIdsToAdd:UserGroupPendingChanges'] :: UserGroupPendingChanges -> Maybe [Text]

-- | The list of user IDs to remove.
[$sel:userIdsToRemove:UserGroupPendingChanges'] :: UserGroupPendingChanges -> Maybe [Text]

-- | Create a value of <a>UserGroupPendingChanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIdsToAdd:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToAdd</a> - The list of user IDs to
--   add.
--   
--   <a>$sel:userIdsToRemove:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToRemove</a> - The list of user IDs
--   to remove.
newUserGroupPendingChanges :: UserGroupPendingChanges

-- | The list of user IDs to add.
userGroupPendingChanges_userIdsToAdd :: Lens' UserGroupPendingChanges (Maybe [Text])

-- | The list of user IDs to remove.
userGroupPendingChanges_userIdsToRemove :: Lens' UserGroupPendingChanges (Maybe [Text])

-- | The status of the user group update.
--   
--   <i>See:</i> <a>newUserGroupsUpdateStatus</a> smart constructor.
data UserGroupsUpdateStatus
UserGroupsUpdateStatus' :: Maybe [Text] -> Maybe [Text] -> UserGroupsUpdateStatus

-- | The ID of the user group to add.
[$sel:userGroupIdsToAdd:UserGroupsUpdateStatus'] :: UserGroupsUpdateStatus -> Maybe [Text]

-- | The ID of the user group to remove.
[$sel:userGroupIdsToRemove:UserGroupsUpdateStatus'] :: UserGroupsUpdateStatus -> Maybe [Text]

-- | Create a value of <a>UserGroupsUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupIdsToAdd:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToAdd</a> - The ID of the user
--   group to add.
--   
--   <a>$sel:userGroupIdsToRemove:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToRemove</a> - The ID of the
--   user group to remove.
newUserGroupsUpdateStatus :: UserGroupsUpdateStatus

-- | The ID of the user group to add.
userGroupsUpdateStatus_userGroupIdsToAdd :: Lens' UserGroupsUpdateStatus (Maybe [Text])

-- | The ID of the user group to remove.
userGroupsUpdateStatus_userGroupIdsToRemove :: Lens' UserGroupsUpdateStatus (Maybe [Text])


-- | Represents the input of a <tt>TestFailover</tt> operation which test
--   automatic failover on a specified node group (called shard in the
--   console) in a replication group (called cluster in the console).
--   
--   <b>Note the following</b>
--   
--   <ul>
--   <li>A customer can use this operation to test automatic failover on up
--   to 5 shards (called node groups in the ElastiCache API and Amazon CLI)
--   in any rolling 24-hour period.</li>
--   <li>If calling this operation on shards in different clusters (called
--   replication groups in the API and CLI), the calls can be made
--   concurrently.</li>
--   <li>If calling this operation multiple times on different shards in
--   the same Redis (cluster mode enabled) replication group, the first
--   node replacement must complete before a subsequent call can be
--   made.</li>
--   <li>To determine whether the node replacement is complete you can
--   check Events using the Amazon ElastiCache console, the Amazon CLI, or
--   the ElastiCache API. Look for the following automatic failover related
--   events, listed here in order of occurrance:<ol><li>Replication group
--   message: <tt>Test Failover API called for node group
--   &lt;node-group-id&gt;</tt></li><li>Cache cluster message: <tt>Failover
--   from primary node &lt;primary-node-id&gt; to replica node
--   &lt;node-id&gt; completed</tt></li><li>Replication group message:
--   <tt>Failover from primary node &lt;primary-node-id&gt; to replica node
--   &lt;node-id&gt; completed</tt></li><li>Cache cluster message:
--   <tt>Recovering cache nodes &lt;node-id&gt;</tt></li><li>Cache cluster
--   message: <tt>Finished recovery for cache nodes
--   &lt;node-id&gt;</tt></li></ol>For more information
--   see:<ul><li><a>Viewing ElastiCache Events</a> in the <i>ElastiCache
--   User Guide</i></li><li><a>DescribeEvents</a> in the ElastiCache API
--   Reference</li></ul></li>
--   </ul>
--   
--   Also see, <a>Testing Multi-AZ</a> in the <i>ElastiCache User
--   Guide</i>.
module Amazonka.ElastiCache.TestFailover

-- | <i>See:</i> <a>newTestFailover</a> smart constructor.
data TestFailover
TestFailover' :: Text -> Text -> TestFailover

-- | The name of the replication group (console: cluster) whose automatic
--   failover is being tested by this operation.
[$sel:replicationGroupId:TestFailover'] :: TestFailover -> Text

-- | The name of the node group (called shard in the console) in this
--   replication group on which automatic failover is to be tested. You may
--   test automatic failover on up to 5 node groups in any rolling 24-hour
--   period.
[$sel:nodeGroupId:TestFailover'] :: TestFailover -> Text

-- | Create a value of <a>TestFailover</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:TestFailover'</a>,
--   <a>testFailover_replicationGroupId</a> - The name of the replication
--   group (console: cluster) whose automatic failover is being tested by
--   this operation.
--   
--   <a>$sel:nodeGroupId:TestFailover'</a>, <a>testFailover_nodeGroupId</a>
--   - The name of the node group (called shard in the console) in this
--   replication group on which automatic failover is to be tested. You may
--   test automatic failover on up to 5 node groups in any rolling 24-hour
--   period.
newTestFailover :: Text -> Text -> TestFailover

-- | The name of the replication group (console: cluster) whose automatic
--   failover is being tested by this operation.
testFailover_replicationGroupId :: Lens' TestFailover Text

-- | The name of the node group (called shard in the console) in this
--   replication group on which automatic failover is to be tested. You may
--   test automatic failover on up to 5 node groups in any rolling 24-hour
--   period.
testFailover_nodeGroupId :: Lens' TestFailover Text

-- | <i>See:</i> <a>newTestFailoverResponse</a> smart constructor.
data TestFailoverResponse
TestFailoverResponse' :: Maybe ReplicationGroup -> Int -> TestFailoverResponse
[$sel:replicationGroup:TestFailoverResponse'] :: TestFailoverResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:TestFailoverResponse'] :: TestFailoverResponse -> Int

-- | Create a value of <a>TestFailoverResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:TestFailoverResponse'</a>,
--   <a>testFailoverResponse_replicationGroup</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:TestFailoverResponse'</a>,
--   <a>testFailoverResponse_httpStatus</a> - The response's http status
--   code.
newTestFailoverResponse :: Int -> TestFailoverResponse

-- | Undocumented member.
testFailoverResponse_replicationGroup :: Lens' TestFailoverResponse (Maybe ReplicationGroup)

-- | The response's http status code.
testFailoverResponse_httpStatus :: Lens' TestFailoverResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.TestFailover.TestFailover
instance GHC.Show.Show Amazonka.ElastiCache.TestFailover.TestFailover
instance GHC.Read.Read Amazonka.ElastiCache.TestFailover.TestFailover
instance GHC.Classes.Eq Amazonka.ElastiCache.TestFailover.TestFailover
instance GHC.Generics.Generic Amazonka.ElastiCache.TestFailover.TestFailoverResponse
instance GHC.Show.Show Amazonka.ElastiCache.TestFailover.TestFailoverResponse
instance GHC.Read.Read Amazonka.ElastiCache.TestFailover.TestFailoverResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.TestFailover.TestFailoverResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.TestFailover.TestFailover
instance Control.DeepSeq.NFData Amazonka.ElastiCache.TestFailover.TestFailoverResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.TestFailover.TestFailover
instance Control.DeepSeq.NFData Amazonka.ElastiCache.TestFailover.TestFailover
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.TestFailover.TestFailover
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.TestFailover.TestFailover
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.TestFailover.TestFailover


-- | Start the migration of data.
module Amazonka.ElastiCache.StartMigration

-- | <i>See:</i> <a>newStartMigration</a> smart constructor.
data StartMigration
StartMigration' :: Text -> [CustomerNodeEndpoint] -> StartMigration

-- | The ID of the replication group to which data should be migrated.
[$sel:replicationGroupId:StartMigration'] :: StartMigration -> Text

-- | List of endpoints from which data should be migrated. For Redis
--   (cluster mode disabled), list should have only one element.
[$sel:customerNodeEndpointList:StartMigration'] :: StartMigration -> [CustomerNodeEndpoint]

-- | Create a value of <a>StartMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:StartMigration'</a>,
--   <a>startMigration_replicationGroupId</a> - The ID of the replication
--   group to which data should be migrated.
--   
--   <a>$sel:customerNodeEndpointList:StartMigration'</a>,
--   <a>startMigration_customerNodeEndpointList</a> - List of endpoints
--   from which data should be migrated. For Redis (cluster mode disabled),
--   list should have only one element.
newStartMigration :: Text -> StartMigration

-- | The ID of the replication group to which data should be migrated.
startMigration_replicationGroupId :: Lens' StartMigration Text

-- | List of endpoints from which data should be migrated. For Redis
--   (cluster mode disabled), list should have only one element.
startMigration_customerNodeEndpointList :: Lens' StartMigration [CustomerNodeEndpoint]

-- | <i>See:</i> <a>newStartMigrationResponse</a> smart constructor.
data StartMigrationResponse
StartMigrationResponse' :: Maybe ReplicationGroup -> Int -> StartMigrationResponse
[$sel:replicationGroup:StartMigrationResponse'] :: StartMigrationResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:StartMigrationResponse'] :: StartMigrationResponse -> Int

-- | Create a value of <a>StartMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_replicationGroup</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_httpStatus</a> - The response's http status
--   code.
newStartMigrationResponse :: Int -> StartMigrationResponse

-- | Undocumented member.
startMigrationResponse_replicationGroup :: Lens' StartMigrationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
startMigrationResponse_httpStatus :: Lens' StartMigrationResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.StartMigration.StartMigration
instance GHC.Show.Show Amazonka.ElastiCache.StartMigration.StartMigration
instance GHC.Read.Read Amazonka.ElastiCache.StartMigration.StartMigration
instance GHC.Classes.Eq Amazonka.ElastiCache.StartMigration.StartMigration
instance GHC.Generics.Generic Amazonka.ElastiCache.StartMigration.StartMigrationResponse
instance GHC.Show.Show Amazonka.ElastiCache.StartMigration.StartMigrationResponse
instance GHC.Read.Read Amazonka.ElastiCache.StartMigration.StartMigrationResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.StartMigration.StartMigrationResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.StartMigration.StartMigration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.StartMigration.StartMigrationResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.StartMigration.StartMigration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.StartMigration.StartMigration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.StartMigration.StartMigration
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.StartMigration.StartMigration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.StartMigration.StartMigration


-- | Revokes ingress from a cache security group. Use this operation to
--   disallow access from an Amazon EC2 security group that had been
--   previously authorized.
module Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress

-- | Represents the input of a <tt>RevokeCacheSecurityGroupIngress</tt>
--   operation.
--   
--   <i>See:</i> <a>newRevokeCacheSecurityGroupIngress</a> smart
--   constructor.
data RevokeCacheSecurityGroupIngress
RevokeCacheSecurityGroupIngress' :: Text -> Text -> Text -> RevokeCacheSecurityGroupIngress

-- | The name of the cache security group to revoke ingress from.
[$sel:cacheSecurityGroupName:RevokeCacheSecurityGroupIngress'] :: RevokeCacheSecurityGroupIngress -> Text

-- | The name of the Amazon EC2 security group to revoke access from.
[$sel:eC2SecurityGroupName:RevokeCacheSecurityGroupIngress'] :: RevokeCacheSecurityGroupIngress -> Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
[$sel:eC2SecurityGroupOwnerId:RevokeCacheSecurityGroupIngress'] :: RevokeCacheSecurityGroupIngress -> Text

-- | Create a value of <a>RevokeCacheSecurityGroupIngress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_cacheSecurityGroupName</a> - The
--   name of the cache security group to revoke ingress from.
--   
--   <a>$sel:eC2SecurityGroupName:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_eC2SecurityGroupName</a> - The name
--   of the Amazon EC2 security group to revoke access from.
--   
--   <a>$sel:eC2SecurityGroupOwnerId:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId</a> - The
--   Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
newRevokeCacheSecurityGroupIngress :: Text -> Text -> Text -> RevokeCacheSecurityGroupIngress

-- | The name of the cache security group to revoke ingress from.
revokeCacheSecurityGroupIngress_cacheSecurityGroupName :: Lens' RevokeCacheSecurityGroupIngress Text

-- | The name of the Amazon EC2 security group to revoke access from.
revokeCacheSecurityGroupIngress_eC2SecurityGroupName :: Lens' RevokeCacheSecurityGroupIngress Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
revokeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId :: Lens' RevokeCacheSecurityGroupIngress Text

-- | <i>See:</i> <a>newRevokeCacheSecurityGroupIngressResponse</a> smart
--   constructor.
data RevokeCacheSecurityGroupIngressResponse
RevokeCacheSecurityGroupIngressResponse' :: Maybe CacheSecurityGroup -> Int -> RevokeCacheSecurityGroupIngressResponse
[$sel:cacheSecurityGroup:RevokeCacheSecurityGroupIngressResponse'] :: RevokeCacheSecurityGroupIngressResponse -> Maybe CacheSecurityGroup

-- | The response's http status code.
[$sel:httpStatus:RevokeCacheSecurityGroupIngressResponse'] :: RevokeCacheSecurityGroupIngressResponse -> Int

-- | Create a value of <a>RevokeCacheSecurityGroupIngressResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroup:RevokeCacheSecurityGroupIngressResponse'</a>,
--   <a>revokeCacheSecurityGroupIngressResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:RevokeCacheSecurityGroupIngressResponse'</a>,
--   <a>revokeCacheSecurityGroupIngressResponse_httpStatus</a> - The
--   response's http status code.
newRevokeCacheSecurityGroupIngressResponse :: Int -> RevokeCacheSecurityGroupIngressResponse

-- | Undocumented member.
revokeCacheSecurityGroupIngressResponse_cacheSecurityGroup :: Lens' RevokeCacheSecurityGroupIngressResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
revokeCacheSecurityGroupIngressResponse_httpStatus :: Lens' RevokeCacheSecurityGroupIngressResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance GHC.Show.Show Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance GHC.Read.Read Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance GHC.Classes.Eq Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance GHC.Generics.Generic Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngressResponse
instance GHC.Show.Show Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngressResponse
instance GHC.Read.Read Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngressResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngressResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngressResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.RevokeCacheSecurityGroupIngress.RevokeCacheSecurityGroupIngress


-- | Modifies the parameters of a cache parameter group to the engine or
--   system default value. You can reset specific parameters by submitting
--   a list of parameter names. To reset the entire cache parameter group,
--   specify the <tt>ResetAllParameters</tt> and
--   <tt>CacheParameterGroupName</tt> parameters.
module Amazonka.ElastiCache.ResetCacheParameterGroup

-- | Represents the input of a <tt>ResetCacheParameterGroup</tt> operation.
--   
--   <i>See:</i> <a>newResetCacheParameterGroup</a> smart constructor.
data ResetCacheParameterGroup
ResetCacheParameterGroup' :: Maybe Bool -> Maybe [ParameterNameValue] -> Text -> ResetCacheParameterGroup

-- | If <tt>true</tt>, all parameters in the cache parameter group are
--   reset to their default values. If <tt>false</tt>, only the parameters
--   listed by <tt>ParameterNameValues</tt> are reset to their default
--   values.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
[$sel:resetAllParameters:ResetCacheParameterGroup'] :: ResetCacheParameterGroup -> Maybe Bool

-- | An array of parameter names to reset to their default values. If
--   <tt>ResetAllParameters</tt> is <tt>true</tt>, do not use
--   <tt>ParameterNameValues</tt>. If <tt>ResetAllParameters</tt> is
--   <tt>false</tt>, you must specify the name of at least one parameter to
--   reset.
[$sel:parameterNameValues:ResetCacheParameterGroup'] :: ResetCacheParameterGroup -> Maybe [ParameterNameValue]

-- | The name of the cache parameter group to reset.
[$sel:cacheParameterGroupName:ResetCacheParameterGroup'] :: ResetCacheParameterGroup -> Text

-- | Create a value of <a>ResetCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetAllParameters:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_resetAllParameters</a> - If <tt>true</tt>,
--   all parameters in the cache parameter group are reset to their default
--   values. If <tt>false</tt>, only the parameters listed by
--   <tt>ParameterNameValues</tt> are reset to their default values.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:parameterNameValues:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_parameterNameValues</a> - An array of
--   parameter names to reset to their default values. If
--   <tt>ResetAllParameters</tt> is <tt>true</tt>, do not use
--   <tt>ParameterNameValues</tt>. If <tt>ResetAllParameters</tt> is
--   <tt>false</tt>, you must specify the name of at least one parameter to
--   reset.
--   
--   <a>$sel:cacheParameterGroupName:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to reset.
newResetCacheParameterGroup :: Text -> ResetCacheParameterGroup

-- | If <tt>true</tt>, all parameters in the cache parameter group are
--   reset to their default values. If <tt>false</tt>, only the parameters
--   listed by <tt>ParameterNameValues</tt> are reset to their default
--   values.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
resetCacheParameterGroup_resetAllParameters :: Lens' ResetCacheParameterGroup (Maybe Bool)

-- | An array of parameter names to reset to their default values. If
--   <tt>ResetAllParameters</tt> is <tt>true</tt>, do not use
--   <tt>ParameterNameValues</tt>. If <tt>ResetAllParameters</tt> is
--   <tt>false</tt>, you must specify the name of at least one parameter to
--   reset.
resetCacheParameterGroup_parameterNameValues :: Lens' ResetCacheParameterGroup (Maybe [ParameterNameValue])

-- | The name of the cache parameter group to reset.
resetCacheParameterGroup_cacheParameterGroupName :: Lens' ResetCacheParameterGroup Text

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'] :: CacheParameterGroupNameMessage -> Maybe Text

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance GHC.Show.Show Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance GHC.Read.Read Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ResetCacheParameterGroup.ResetCacheParameterGroup


-- | Removes the tags identified by the <tt>TagKeys</tt> list from the
--   named resource. A tag is a key-value pair where the key and value are
--   case-sensitive. You can use tags to categorize and track all your
--   ElastiCache resources, with the exception of global replication group.
--   When you add or remove tags on replication groups, those actions will
--   be replicated to all nodes in the replication group. For more
--   information, see <a>Resource-level permissions</a>.
module Amazonka.ElastiCache.RemoveTagsFromResource

-- | Represents the input of a <tt>RemoveTagsFromResource</tt> operation.
--   
--   <i>See:</i> <a>newRemoveTagsFromResource</a> smart constructor.
data RemoveTagsFromResource
RemoveTagsFromResource' :: Text -> [Text] -> RemoveTagsFromResource

-- | The Amazon Resource Name (ARN) of the resource from which you want the
--   tags removed, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
[$sel:resourceName:RemoveTagsFromResource'] :: RemoveTagsFromResource -> Text

-- | A list of <tt>TagKeys</tt> identifying the tags you want removed from
--   the named resource.
[$sel:tagKeys:RemoveTagsFromResource'] :: RemoveTagsFromResource -> [Text]

-- | Create a value of <a>RemoveTagsFromResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:RemoveTagsFromResource'</a>,
--   <a>removeTagsFromResource_resourceName</a> - The Amazon Resource Name
--   (ARN) of the resource from which you want the tags removed, for
--   example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
--   
--   <a>$sel:tagKeys:RemoveTagsFromResource'</a>,
--   <a>removeTagsFromResource_tagKeys</a> - A list of <tt>TagKeys</tt>
--   identifying the tags you want removed from the named resource.
newRemoveTagsFromResource :: Text -> RemoveTagsFromResource

-- | The Amazon Resource Name (ARN) of the resource from which you want the
--   tags removed, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
removeTagsFromResource_resourceName :: Lens' RemoveTagsFromResource Text

-- | A list of <tt>TagKeys</tt> identifying the tags you want removed from
--   the named resource.
removeTagsFromResource_tagKeys :: Lens' RemoveTagsFromResource [Text]

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | A list of tags as key-value pairs.
[$sel:tagList:TagListMessage'] :: TagListMessage -> Maybe [Tag]

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance GHC.Show.Show Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance GHC.Read.Read Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance GHC.Classes.Eq Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.RemoveTagsFromResource.RemoveTagsFromResource


-- | Reboots some, or all, of the cache nodes within a provisioned cluster.
--   This operation applies any modified cache parameter groups to the
--   cluster. The reboot operation takes place as soon as possible, and
--   results in a momentary outage to the cluster. During the reboot, the
--   cluster status is set to REBOOTING.
--   
--   The reboot causes the contents of the cache (for each cache node being
--   rebooted) to be lost.
--   
--   When the reboot is complete, a cluster event is created.
--   
--   Rebooting a cluster is currently supported on Memcached and Redis
--   (cluster mode disabled) clusters. Rebooting is not supported on Redis
--   (cluster mode enabled) clusters.
--   
--   If you make changes to parameters that require a Redis (cluster mode
--   enabled) cluster reboot for the changes to be applied, see
--   <a>Rebooting a Cluster</a> for an alternate process.
module Amazonka.ElastiCache.RebootCacheCluster

-- | Represents the input of a <tt>RebootCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newRebootCacheCluster</a> smart constructor.
data RebootCacheCluster
RebootCacheCluster' :: Text -> [Text] -> RebootCacheCluster

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
[$sel:cacheClusterId:RebootCacheCluster'] :: RebootCacheCluster -> Text

-- | A list of cache node IDs to reboot. A node ID is a numeric identifier
--   (0001, 0002, etc.). To reboot an entire cluster, specify all of the
--   cache node IDs.
[$sel:cacheNodeIdsToReboot:RebootCacheCluster'] :: RebootCacheCluster -> [Text]

-- | Create a value of <a>RebootCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:RebootCacheCluster'</a>,
--   <a>rebootCacheCluster_cacheClusterId</a> - The cluster identifier.
--   This parameter is stored as a lowercase string.
--   
--   <a>$sel:cacheNodeIdsToReboot:RebootCacheCluster'</a>,
--   <a>rebootCacheCluster_cacheNodeIdsToReboot</a> - A list of cache node
--   IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.).
--   To reboot an entire cluster, specify all of the cache node IDs.
newRebootCacheCluster :: Text -> RebootCacheCluster

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
rebootCacheCluster_cacheClusterId :: Lens' RebootCacheCluster Text

-- | A list of cache node IDs to reboot. A node ID is a numeric identifier
--   (0001, 0002, etc.). To reboot an entire cluster, specify all of the
--   cache node IDs.
rebootCacheCluster_cacheNodeIdsToReboot :: Lens' RebootCacheCluster [Text]

-- | <i>See:</i> <a>newRebootCacheClusterResponse</a> smart constructor.
data RebootCacheClusterResponse
RebootCacheClusterResponse' :: Maybe CacheCluster -> Int -> RebootCacheClusterResponse
[$sel:cacheCluster:RebootCacheClusterResponse'] :: RebootCacheClusterResponse -> Maybe CacheCluster

-- | The response's http status code.
[$sel:httpStatus:RebootCacheClusterResponse'] :: RebootCacheClusterResponse -> Int

-- | Create a value of <a>RebootCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:RebootCacheClusterResponse'</a>,
--   <a>rebootCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RebootCacheClusterResponse'</a>,
--   <a>rebootCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newRebootCacheClusterResponse :: Int -> RebootCacheClusterResponse

-- | Undocumented member.
rebootCacheClusterResponse_cacheCluster :: Lens' RebootCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
rebootCacheClusterResponse_httpStatus :: Lens' RebootCacheClusterResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance GHC.Show.Show Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance GHC.Read.Read Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance GHC.Classes.Eq Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance GHC.Generics.Generic Amazonka.ElastiCache.RebootCacheCluster.RebootCacheClusterResponse
instance GHC.Show.Show Amazonka.ElastiCache.RebootCacheCluster.RebootCacheClusterResponse
instance GHC.Read.Read Amazonka.ElastiCache.RebootCacheCluster.RebootCacheClusterResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.RebootCacheCluster.RebootCacheClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RebootCacheCluster.RebootCacheClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.RebootCacheCluster.RebootCacheCluster


-- | Redistribute slots to ensure uniform distribution across existing
--   shards in the cluster.
module Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup

-- | <i>See:</i> <a>newRebalanceSlotsInGlobalReplicationGroup</a> smart
--   constructor.
data RebalanceSlotsInGlobalReplicationGroup
RebalanceSlotsInGlobalReplicationGroup' :: Text -> Bool -> RebalanceSlotsInGlobalReplicationGroup

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:RebalanceSlotsInGlobalReplicationGroup'] :: RebalanceSlotsInGlobalReplicationGroup -> Text

-- | If <tt>True</tt>, redistribution is applied immediately.
[$sel:applyImmediately:RebalanceSlotsInGlobalReplicationGroup'] :: RebalanceSlotsInGlobalReplicationGroup -> Bool

-- | Create a value of <a>RebalanceSlotsInGlobalReplicationGroup</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupId:RebalanceSlotsInGlobalReplicationGroup'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   <a>$sel:applyImmediately:RebalanceSlotsInGlobalReplicationGroup'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroup_applyImmediately</a> - If
--   <tt>True</tt>, redistribution is applied immediately.
newRebalanceSlotsInGlobalReplicationGroup :: Text -> Bool -> RebalanceSlotsInGlobalReplicationGroup

-- | The name of the Global datastore
rebalanceSlotsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' RebalanceSlotsInGlobalReplicationGroup Text

-- | If <tt>True</tt>, redistribution is applied immediately.
rebalanceSlotsInGlobalReplicationGroup_applyImmediately :: Lens' RebalanceSlotsInGlobalReplicationGroup Bool

-- | <i>See:</i> <a>newRebalanceSlotsInGlobalReplicationGroupResponse</a>
--   smart constructor.
data RebalanceSlotsInGlobalReplicationGroupResponse
RebalanceSlotsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> RebalanceSlotsInGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:RebalanceSlotsInGlobalReplicationGroupResponse'] :: RebalanceSlotsInGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:RebalanceSlotsInGlobalReplicationGroupResponse'] :: RebalanceSlotsInGlobalReplicationGroupResponse -> Int

-- | Create a value of
--   <a>RebalanceSlotsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:RebalanceSlotsInGlobalReplicationGroupResponse'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:RebalanceSlotsInGlobalReplicationGroupResponse'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newRebalanceSlotsInGlobalReplicationGroupResponse :: Int -> RebalanceSlotsInGlobalReplicationGroupResponse

-- | Undocumented member.
rebalanceSlotsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' RebalanceSlotsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
rebalanceSlotsInGlobalReplicationGroupResponse_httpStatus :: Lens' RebalanceSlotsInGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.RebalanceSlotsInGlobalReplicationGroup.RebalanceSlotsInGlobalReplicationGroup


-- | Allows you to purchase a reserved cache node offering. Reserved nodes
--   are not eligible for cancellation and are non-refundable. For more
--   information, see <a>Managing Costs with Reserved Nodes</a> for Redis
--   or <a>Managing Costs with Reserved Nodes</a> for Memcached.
module Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering

-- | Represents the input of a <tt>PurchaseReservedCacheNodesOffering</tt>
--   operation.
--   
--   <i>See:</i> <a>newPurchaseReservedCacheNodesOffering</a> smart
--   constructor.
data PurchaseReservedCacheNodesOffering
PurchaseReservedCacheNodesOffering' :: Maybe Int -> Maybe Text -> Maybe [Tag] -> Text -> PurchaseReservedCacheNodesOffering

-- | The number of cache node instances to reserve.
--   
--   Default: <tt>1</tt>
[$sel:cacheNodeCount:PurchaseReservedCacheNodesOffering'] :: PurchaseReservedCacheNodesOffering -> Maybe Int

-- | A customer-specified identifier to track this reservation.
--   
--   The Reserved Cache Node ID is an unique customer-specified identifier
--   to track this reservation. If this parameter is not specified,
--   ElastiCache automatically generates an identifier for the reservation.
--   
--   Example: myreservationID
[$sel:reservedCacheNodeId:PurchaseReservedCacheNodesOffering'] :: PurchaseReservedCacheNodesOffering -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:PurchaseReservedCacheNodesOffering'] :: PurchaseReservedCacheNodesOffering -> Maybe [Tag]

-- | The ID of the reserved cache node offering to purchase.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
[$sel:reservedCacheNodesOfferingId:PurchaseReservedCacheNodesOffering'] :: PurchaseReservedCacheNodesOffering -> Text

-- | Create a value of <a>PurchaseReservedCacheNodesOffering</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeCount:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_cacheNodeCount</a> - The number
--   of cache node instances to reserve.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:reservedCacheNodeId:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_reservedCacheNodeId</a> - A
--   customer-specified identifier to track this reservation.
--   
--   The Reserved Cache Node ID is an unique customer-specified identifier
--   to track this reservation. If this parameter is not specified,
--   ElastiCache automatically generates an identifier for the reservation.
--   
--   Example: myreservationID
--   
--   <a>$sel:tags:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_tags</a> - A list of tags to be
--   added to this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   
--   <a>$sel:reservedCacheNodesOfferingId:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_reservedCacheNodesOfferingId</a>
--   - The ID of the reserved cache node offering to purchase.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
newPurchaseReservedCacheNodesOffering :: Text -> PurchaseReservedCacheNodesOffering

-- | The number of cache node instances to reserve.
--   
--   Default: <tt>1</tt>
purchaseReservedCacheNodesOffering_cacheNodeCount :: Lens' PurchaseReservedCacheNodesOffering (Maybe Int)

-- | A customer-specified identifier to track this reservation.
--   
--   The Reserved Cache Node ID is an unique customer-specified identifier
--   to track this reservation. If this parameter is not specified,
--   ElastiCache automatically generates an identifier for the reservation.
--   
--   Example: myreservationID
purchaseReservedCacheNodesOffering_reservedCacheNodeId :: Lens' PurchaseReservedCacheNodesOffering (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
purchaseReservedCacheNodesOffering_tags :: Lens' PurchaseReservedCacheNodesOffering (Maybe [Tag])

-- | The ID of the reserved cache node offering to purchase.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
purchaseReservedCacheNodesOffering_reservedCacheNodesOfferingId :: Lens' PurchaseReservedCacheNodesOffering Text

-- | <i>See:</i> <a>newPurchaseReservedCacheNodesOfferingResponse</a> smart
--   constructor.
data PurchaseReservedCacheNodesOfferingResponse
PurchaseReservedCacheNodesOfferingResponse' :: Maybe ReservedCacheNode -> Int -> PurchaseReservedCacheNodesOfferingResponse
[$sel:reservedCacheNode:PurchaseReservedCacheNodesOfferingResponse'] :: PurchaseReservedCacheNodesOfferingResponse -> Maybe ReservedCacheNode

-- | The response's http status code.
[$sel:httpStatus:PurchaseReservedCacheNodesOfferingResponse'] :: PurchaseReservedCacheNodesOfferingResponse -> Int

-- | Create a value of <a>PurchaseReservedCacheNodesOfferingResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:reservedCacheNode:PurchaseReservedCacheNodesOfferingResponse'</a>,
--   <a>purchaseReservedCacheNodesOfferingResponse_reservedCacheNode</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:PurchaseReservedCacheNodesOfferingResponse'</a>,
--   <a>purchaseReservedCacheNodesOfferingResponse_httpStatus</a> - The
--   response's http status code.
newPurchaseReservedCacheNodesOfferingResponse :: Int -> PurchaseReservedCacheNodesOfferingResponse

-- | Undocumented member.
purchaseReservedCacheNodesOfferingResponse_reservedCacheNode :: Lens' PurchaseReservedCacheNodesOfferingResponse (Maybe ReservedCacheNode)

-- | The response's http status code.
purchaseReservedCacheNodesOfferingResponse_httpStatus :: Lens' PurchaseReservedCacheNodesOfferingResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance GHC.Show.Show Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance GHC.Read.Read Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance GHC.Classes.Eq Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance GHC.Generics.Generic Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOfferingResponse
instance GHC.Show.Show Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOfferingResponse
instance GHC.Read.Read Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOfferingResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOfferingResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance Control.DeepSeq.NFData Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOfferingResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance Control.DeepSeq.NFData Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.PurchaseReservedCacheNodesOffering.PurchaseReservedCacheNodesOffering


-- | Changes the list of users that belong to the user group.
module Amazonka.ElastiCache.ModifyUserGroup

-- | <i>See:</i> <a>newModifyUserGroup</a> smart constructor.
data ModifyUserGroup
ModifyUserGroup' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> ModifyUserGroup

-- | The list of user IDs to add to the user group.
[$sel:userIdsToAdd:ModifyUserGroup'] :: ModifyUserGroup -> Maybe (NonEmpty Text)

-- | The list of user IDs to remove from the user group.
[$sel:userIdsToRemove:ModifyUserGroup'] :: ModifyUserGroup -> Maybe (NonEmpty Text)

-- | The ID of the user group.
[$sel:userGroupId:ModifyUserGroup'] :: ModifyUserGroup -> Text

-- | Create a value of <a>ModifyUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIdsToAdd:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userIdsToAdd</a> - The list of user IDs to add to
--   the user group.
--   
--   <a>$sel:userIdsToRemove:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userIdsToRemove</a> - The list of user IDs to
--   remove from the user group.
--   
--   <a>$sel:userGroupId:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userGroupId</a> - The ID of the user group.
newModifyUserGroup :: Text -> ModifyUserGroup

-- | The list of user IDs to add to the user group.
modifyUserGroup_userIdsToAdd :: Lens' ModifyUserGroup (Maybe (NonEmpty Text))

-- | The list of user IDs to remove from the user group.
modifyUserGroup_userIdsToRemove :: Lens' ModifyUserGroup (Maybe (NonEmpty Text))

-- | The ID of the user group.
modifyUserGroup_userGroupId :: Lens' ModifyUserGroup Text

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:UserGroup'] :: UserGroup -> Maybe Text

-- | The list of user IDs that belong to the user group.
[$sel:userIds:UserGroup'] :: UserGroup -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the user group.
[$sel:arn:UserGroup'] :: UserGroup -> Maybe Text

-- | The ID of the user group.
[$sel:userGroupId:UserGroup'] :: UserGroup -> Maybe Text

-- | The current supported value is Redis.
[$sel:engine:UserGroup'] :: UserGroup -> Maybe Text

-- | A list of updates being applied to the user group.
[$sel:pendingChanges:UserGroup'] :: UserGroup -> Maybe UserGroupPendingChanges

-- | A list of replication groups that the user group can access.
[$sel:replicationGroups:UserGroup'] :: UserGroup -> Maybe [Text]

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance GHC.Show.Show Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance GHC.Read.Read Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyUserGroup.ModifyUserGroup


-- | Changes user password(s) and/or access string.
module Amazonka.ElastiCache.ModifyUser

-- | <i>See:</i> <a>newModifyUser</a> smart constructor.
data ModifyUser
ModifyUser' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> Text -> ModifyUser

-- | Adds additional user permissions to the access string.
[$sel:appendAccessString:ModifyUser'] :: ModifyUser -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:ModifyUser'] :: ModifyUser -> Maybe Text

-- | The passwords belonging to the user. You are allowed up to two.
[$sel:passwords:ModifyUser'] :: ModifyUser -> Maybe (NonEmpty Text)

-- | Indicates no password is required for the user.
[$sel:noPasswordRequired:ModifyUser'] :: ModifyUser -> Maybe Bool

-- | The ID of the user.
[$sel:userId:ModifyUser'] :: ModifyUser -> Text

-- | Create a value of <a>ModifyUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appendAccessString:ModifyUser'</a>,
--   <a>modifyUser_appendAccessString</a> - Adds additional user
--   permissions to the access string.
--   
--   <a>$sel:accessString:ModifyUser'</a>, <a>modifyUser_accessString</a> -
--   Access permissions string used for this user.
--   
--   <a>$sel:passwords:ModifyUser'</a>, <a>modifyUser_passwords</a> - The
--   passwords belonging to the user. You are allowed up to two.
--   
--   <a>$sel:noPasswordRequired:ModifyUser'</a>,
--   <a>modifyUser_noPasswordRequired</a> - Indicates no password is
--   required for the user.
--   
--   <a>$sel:userId:ModifyUser'</a>, <a>modifyUser_userId</a> - The ID of
--   the user.
newModifyUser :: Text -> ModifyUser

-- | Adds additional user permissions to the access string.
modifyUser_appendAccessString :: Lens' ModifyUser (Maybe Text)

-- | Access permissions string used for this user.
modifyUser_accessString :: Lens' ModifyUser (Maybe Text)

-- | The passwords belonging to the user. You are allowed up to two.
modifyUser_passwords :: Lens' ModifyUser (Maybe (NonEmpty Text))

-- | Indicates no password is required for the user.
modifyUser_noPasswordRequired :: Lens' ModifyUser (Maybe Bool)

-- | The ID of the user.
modifyUser_userId :: Lens' ModifyUser Text

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Returns a list of the user group IDs the user belongs to.
[$sel:userGroupIds:User'] :: User -> Maybe [Text]

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | The current supported value is Redis.
[$sel:engine:User'] :: User -> Maybe Text

-- | The username of the user.
[$sel:userName:User'] :: User -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The ID of the user.
[$sel:userId:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyUser.ModifyUser
instance GHC.Show.Show Amazonka.ElastiCache.ModifyUser.ModifyUser
instance GHC.Read.Read Amazonka.ElastiCache.ModifyUser.ModifyUser
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyUser.ModifyUser
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyUser.ModifyUser


-- | Modifies a replication group's shards (node groups) by allowing you to
--   add shards, remove shards, or rebalance the keyspaces among existing
--   shards.
module Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration

-- | Represents the input for a
--   <tt>ModifyReplicationGroupShardConfiguration</tt> operation.
--   
--   <i>See:</i> <a>newModifyReplicationGroupShardConfiguration</a> smart
--   constructor.
data ModifyReplicationGroupShardConfiguration
ModifyReplicationGroupShardConfiguration' :: Maybe [Text] -> Maybe [ReshardingConfiguration] -> Maybe [Text] -> Text -> Int -> Bool -> ModifyReplicationGroupShardConfiguration

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRetain</tt> is a list of
--   <tt>NodeGroupId</tt>s to retain in the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups except
--   those listed by <tt>NodeGroupsToRetain</tt> from the cluster.
[$sel:nodeGroupsToRetain:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Maybe [Text]

-- | Specifies the preferred availability zones for each node group in the
--   cluster. If the value of <tt>NodeGroupCount</tt> is greater than the
--   current number of node groups (shards), you can use this parameter to
--   specify the preferred availability zones of the cluster's shards. If
--   you omit this parameter ElastiCache selects availability zones for
--   you.
--   
--   You can specify this parameter only if the value of
--   <tt>NodeGroupCount</tt> is greater than the current number of node
--   groups (shards).
[$sel:reshardingConfiguration:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Maybe [ReshardingConfiguration]

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRemove</tt> is a list of
--   <tt>NodeGroupId</tt>s to remove from the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups listed by
--   <tt>NodeGroupsToRemove</tt> from the cluster.
[$sel:nodeGroupsToRemove:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Maybe [Text]

-- | The name of the Redis (cluster mode enabled) cluster (replication
--   group) on which the shards are to be configured.
[$sel:replicationGroupId:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration.
[$sel:nodeGroupCount:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is
--   <tt>true</tt>.
--   
--   Value: true
[$sel:applyImmediately:ModifyReplicationGroupShardConfiguration'] :: ModifyReplicationGroupShardConfiguration -> Bool

-- | Create a value of <a>ModifyReplicationGroupShardConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nodeGroupsToRetain:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupsToRetain</a> -
--   If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRetain</tt> is a list of
--   <tt>NodeGroupId</tt>s to retain in the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups except
--   those listed by <tt>NodeGroupsToRetain</tt> from the cluster.
--   
--   
--   <a>$sel:reshardingConfiguration:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_reshardingConfiguration</a>
--   - Specifies the preferred availability zones for each node group in
--   the cluster. If the value of <tt>NodeGroupCount</tt> is greater than
--   the current number of node groups (shards), you can use this parameter
--   to specify the preferred availability zones of the cluster's shards.
--   If you omit this parameter ElastiCache selects availability zones for
--   you.
--   
--   You can specify this parameter only if the value of
--   <tt>NodeGroupCount</tt> is greater than the current number of node
--   groups (shards).
--   
--   
--   <a>$sel:nodeGroupsToRemove:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupsToRemove</a> -
--   If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRemove</tt> is a list of
--   <tt>NodeGroupId</tt>s to remove from the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups listed by
--   <tt>NodeGroupsToRemove</tt> from the cluster.
--   
--   
--   <a>$sel:replicationGroupId:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_replicationGroupId</a> -
--   The name of the Redis (cluster mode enabled) cluster (replication
--   group) on which the shards are to be configured.
--   
--   <a>$sel:nodeGroupCount:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupCount</a> - The
--   number of node groups (shards) that results from the modification of
--   the shard configuration.
--   
--   
--   <a>$sel:applyImmediately:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_applyImmediately</a> -
--   Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is
--   <tt>true</tt>.
--   
--   Value: true
newModifyReplicationGroupShardConfiguration :: Text -> Int -> Bool -> ModifyReplicationGroupShardConfiguration

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRetain</tt> is a list of
--   <tt>NodeGroupId</tt>s to retain in the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups except
--   those listed by <tt>NodeGroupsToRetain</tt> from the cluster.
modifyReplicationGroupShardConfiguration_nodeGroupsToRetain :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [Text])

-- | Specifies the preferred availability zones for each node group in the
--   cluster. If the value of <tt>NodeGroupCount</tt> is greater than the
--   current number of node groups (shards), you can use this parameter to
--   specify the preferred availability zones of the cluster's shards. If
--   you omit this parameter ElastiCache selects availability zones for
--   you.
--   
--   You can specify this parameter only if the value of
--   <tt>NodeGroupCount</tt> is greater than the current number of node
--   groups (shards).
modifyReplicationGroupShardConfiguration_reshardingConfiguration :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [ReshardingConfiguration])

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRemove</tt> is a list of
--   <tt>NodeGroupId</tt>s to remove from the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups listed by
--   <tt>NodeGroupsToRemove</tt> from the cluster.
modifyReplicationGroupShardConfiguration_nodeGroupsToRemove :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [Text])

-- | The name of the Redis (cluster mode enabled) cluster (replication
--   group) on which the shards are to be configured.
modifyReplicationGroupShardConfiguration_replicationGroupId :: Lens' ModifyReplicationGroupShardConfiguration Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration.
modifyReplicationGroupShardConfiguration_nodeGroupCount :: Lens' ModifyReplicationGroupShardConfiguration Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is
--   <tt>true</tt>.
--   
--   Value: true
modifyReplicationGroupShardConfiguration_applyImmediately :: Lens' ModifyReplicationGroupShardConfiguration Bool

-- | <i>See:</i> <a>newModifyReplicationGroupShardConfigurationResponse</a>
--   smart constructor.
data ModifyReplicationGroupShardConfigurationResponse
ModifyReplicationGroupShardConfigurationResponse' :: Maybe ReplicationGroup -> Int -> ModifyReplicationGroupShardConfigurationResponse
[$sel:replicationGroup:ModifyReplicationGroupShardConfigurationResponse'] :: ModifyReplicationGroupShardConfigurationResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:ModifyReplicationGroupShardConfigurationResponse'] :: ModifyReplicationGroupShardConfigurationResponse -> Int

-- | Create a value of
--   <a>ModifyReplicationGroupShardConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:replicationGroup:ModifyReplicationGroupShardConfigurationResponse'</a>,
--   <a>modifyReplicationGroupShardConfigurationResponse_replicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:ModifyReplicationGroupShardConfigurationResponse'</a>,
--   <a>modifyReplicationGroupShardConfigurationResponse_httpStatus</a> -
--   The response's http status code.
newModifyReplicationGroupShardConfigurationResponse :: Int -> ModifyReplicationGroupShardConfigurationResponse

-- | Undocumented member.
modifyReplicationGroupShardConfigurationResponse_replicationGroup :: Lens' ModifyReplicationGroupShardConfigurationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
modifyReplicationGroupShardConfigurationResponse_httpStatus :: Lens' ModifyReplicationGroupShardConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance GHC.Show.Show Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance GHC.Read.Read Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfigurationResponse
instance GHC.Show.Show Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfigurationResponse
instance GHC.Read.Read Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfigurationResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyReplicationGroupShardConfiguration.ModifyReplicationGroupShardConfiguration


-- | Modifies the settings for a replication group.
--   
--   <ul>
--   <li><a>Scaling for Amazon ElastiCache for Redis (cluster mode
--   enabled)</a> in the ElastiCache User Guide</li>
--   <li><a>ModifyReplicationGroupShardConfiguration</a> in the ElastiCache
--   API Reference</li>
--   </ul>
--   
--   This operation is valid for Redis only.
module Amazonka.ElastiCache.ModifyReplicationGroup

-- | Represents the input of a <tt>ModifyReplicationGroups</tt> operation.
--   
--   <i>See:</i> <a>newModifyReplicationGroup</a> smart constructor.
data ModifyReplicationGroup
ModifyReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe AuthTokenUpdateStrategyType -> Maybe Text -> Maybe [Text] -> Text -> ModifyReplicationGroup

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
[$sel:automaticFailoverEnabled:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Bool

-- | The upgraded version of the cache engine to be run on the clusters in
--   the replication group.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing replication group and create it
--   anew with the earlier engine version.
[$sel:engineVersion:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | A valid cache node type that you want to scale this replication group
--   to.
[$sel:cacheNodeType:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group. This parameter cannot be set for Redis (cluster
--   mode enabled) replication groups.
[$sel:snapshottingClusterId:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | Specifies the VPC Security Groups associated with the clusters in the
--   replication group.
--   
--   This parameter can be used only with replication group containing
--   clusters running in an Amazon Virtual Private Cloud (Amazon VPC).
[$sel:securityGroupIds:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe [Text]

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Bool

-- | The name of the cache parameter group to apply to all of the clusters
--   in this replication group. This change is asynchronously applied as
--   soon as possible for parameters when the <tt>ApplyImmediately</tt>
--   parameter is specified as <tt>true</tt> for this request.
[$sel:cacheParameterGroupName:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | A description for the replication group. Maximum length is 255
--   characters.
[$sel:replicationGroupDescription:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of the node group (shard) specified by
--   <tt>SnapshottingClusterId</tt>.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
[$sel:snapshotWindow:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | Specifies the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe [LogDeliveryConfigurationRequest]

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update-strategy </tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
[$sel:authToken:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | For replication groups with a single primary, if this parameter is
--   specified, ElastiCache promotes the specified cluster in the specified
--   replication group to the primary role. The nodes of all other clusters
--   in the replication group are read replicas.
[$sel:primaryClusterId:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | A flag to indicate MultiAZ is enabled.
[$sel:multiAZEnabled:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Bool

-- | The ID of the user group you are associating with the replication
--   group.
[$sel:userGroupIdsToAdd:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe [Text]

-- | Deprecated. This parameter is not used.
[$sel:nodeGroupId:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | The number of days for which ElastiCache retains automatic node group
--   (shard) snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
[$sel:snapshotRetentionLimit:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Int

-- | The ID of the user group to disassociate from the replication group,
--   meaning the users in the group no longer can access the replication
--   group.
[$sel:userGroupIdsToRemove:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe [Text]

-- | The status of the Amazon SNS notification topic for the replication
--   group. Notifications are sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
[$sel:notificationTopicStatus:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the replication group.
--   
--   If <tt>false</tt>, changes to the nodes in the replication group are
--   applied on the next maintenance reboot, or the next failure reboot,
--   whichever occurs first.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
[$sel:applyImmediately:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Bool

-- | Removes the user group associated with this replication group.
[$sel:removeUserGroups:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Bool

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
[$sel:authTokenUpdateStrategy:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe AuthTokenUpdateStrategyType

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the replication group
--   owner.
[$sel:notificationTopicArn:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe Text

-- | A list of cache security group names to authorize for the clusters in
--   this replication group. This change is asynchronously applied as soon
--   as possible.
--   
--   This parameter can be used only with replication group containing
--   clusters running outside of an Amazon Virtual Private Cloud (Amazon
--   VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be <tt>Default</tt>.
[$sel:cacheSecurityGroupNames:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Maybe [Text]

-- | The identifier of the replication group to modify.
[$sel:replicationGroupId:ModifyReplicationGroup'] :: ModifyReplicationGroup -> Text

-- | Create a value of <a>ModifyReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_automaticFailoverEnabled</a> - Determines
--   whether a read replica is automatically promoted to read/write primary
--   if the existing primary encounters a failure.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:engineVersion:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_engineVersion</a> - The upgraded version of
--   the cache engine to be run on the clusters in the replication group.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing replication group and create it
--   anew with the earlier engine version.
--   
--   <a>$sel:cacheNodeType:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheNodeType</a> - A valid cache node type
--   that you want to scale this replication group to.
--   
--   <a>$sel:snapshottingClusterId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshottingClusterId</a> - The cluster ID
--   that is used as the daily snapshot source for the replication group.
--   This parameter cannot be set for Redis (cluster mode enabled)
--   replication groups.
--   
--   <a>$sel:securityGroupIds:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_securityGroupIds</a> - Specifies the VPC
--   Security Groups associated with the clusters in the replication group.
--   
--   This parameter can be used only with replication group containing
--   clusters running in an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:autoMinorVersionUpgrade:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_autoMinorVersionUpgrade</a> - This parameter
--   is currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to apply to all of the clusters in this
--   replication group. This change is asynchronously applied as soon as
--   possible for parameters when the <tt>ApplyImmediately</tt> parameter
--   is specified as <tt>true</tt> for this request.
--   
--   <a>$sel:replicationGroupDescription:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_replicationGroupDescription</a> - A
--   description for the replication group. Maximum length is 255
--   characters.
--   
--   <a>$sel:snapshotWindow:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshotWindow</a> - The daily time range
--   (in UTC) during which ElastiCache begins taking a daily snapshot of
--   the node group (shard) specified by <tt>SnapshottingClusterId</tt>.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   <a>$sel:logDeliveryConfigurations:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_logDeliveryConfigurations</a> - Specifies
--   the destination, format and type of the logs.
--   
--   <a>$sel:authToken:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_authToken</a> - Reserved parameter. The
--   password used to access a password protected server. This parameter
--   must be specified with the <tt>auth-token-update-strategy </tt>
--   parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
--   
--   <a>$sel:primaryClusterId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_primaryClusterId</a> - For replication
--   groups with a single primary, if this parameter is specified,
--   ElastiCache promotes the specified cluster in the specified
--   replication group to the primary role. The nodes of all other clusters
--   in the replication group are read replicas.
--   
--   <a>$sel:preferredMaintenanceWindow:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_preferredMaintenanceWindow</a> - Specifies
--   the weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:multiAZEnabled:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_multiAZEnabled</a> - A flag to indicate
--   MultiAZ is enabled.
--   
--   <a>$sel:userGroupIdsToAdd:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_userGroupIdsToAdd</a> - The ID of the user
--   group you are associating with the replication group.
--   
--   <a>$sel:nodeGroupId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_nodeGroupId</a> - Deprecated. This parameter
--   is not used.
--   
--   <a>$sel:snapshotRetentionLimit:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshotRetentionLimit</a> - The number of
--   days for which ElastiCache retains automatic node group (shard)
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
--   
--   <a>$sel:userGroupIdsToRemove:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_userGroupIdsToRemove</a> - The ID of the
--   user group to disassociate from the replication group, meaning the
--   users in the group no longer can access the replication group.
--   
--   <a>$sel:notificationTopicStatus:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_notificationTopicStatus</a> - The status of
--   the Amazon SNS notification topic for the replication group.
--   Notifications are sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
--   
--   <a>$sel:applyImmediately:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_applyImmediately</a> - If <tt>true</tt>,
--   this parameter causes the modifications in this request and any
--   pending modifications to be applied, asynchronously and as soon as
--   possible, regardless of the <tt>PreferredMaintenanceWindow</tt>
--   setting for the replication group.
--   
--   If <tt>false</tt>, changes to the nodes in the replication group are
--   applied on the next maintenance reboot, or the next failure reboot,
--   whichever occurs first.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:removeUserGroups:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_removeUserGroups</a> - Removes the user
--   group associated with this replication group.
--   
--   <a>$sel:authTokenUpdateStrategy:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_authTokenUpdateStrategy</a> - Specifies the
--   strategy to use to update the AUTH token. This parameter must be
--   specified with the <tt>auth-token</tt> parameter. Possible values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
--   
--   <a>$sel:notificationTopicArn:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_notificationTopicArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon SNS topic to which notifications are
--   sent.
--   
--   The Amazon SNS topic owner must be same as the replication group
--   owner.
--   
--   <a>$sel:cacheSecurityGroupNames:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheSecurityGroupNames</a> - A list of
--   cache security group names to authorize for the clusters in this
--   replication group. This change is asynchronously applied as soon as
--   possible.
--   
--   This parameter can be used only with replication group containing
--   clusters running outside of an Amazon Virtual Private Cloud (Amazon
--   VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be <tt>Default</tt>.
--   
--   <a>$sel:replicationGroupId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_replicationGroupId</a> - The identifier of
--   the replication group to modify.
newModifyReplicationGroup :: Text -> ModifyReplicationGroup

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
modifyReplicationGroup_automaticFailoverEnabled :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The upgraded version of the cache engine to be run on the clusters in
--   the replication group.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing replication group and create it
--   anew with the earlier engine version.
modifyReplicationGroup_engineVersion :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A valid cache node type that you want to scale this replication group
--   to.
modifyReplicationGroup_cacheNodeType :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group. This parameter cannot be set for Redis (cluster
--   mode enabled) replication groups.
modifyReplicationGroup_snapshottingClusterId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the VPC Security Groups associated with the clusters in the
--   replication group.
--   
--   This parameter can be used only with replication group containing
--   clusters running in an Amazon Virtual Private Cloud (Amazon VPC).
modifyReplicationGroup_securityGroupIds :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | This parameter is currently disabled.
modifyReplicationGroup_autoMinorVersionUpgrade :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The name of the cache parameter group to apply to all of the clusters
--   in this replication group. This change is asynchronously applied as
--   soon as possible for parameters when the <tt>ApplyImmediately</tt>
--   parameter is specified as <tt>true</tt> for this request.
modifyReplicationGroup_cacheParameterGroupName :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A description for the replication group. Maximum length is 255
--   characters.
modifyReplicationGroup_replicationGroupDescription :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of the node group (shard) specified by
--   <tt>SnapshottingClusterId</tt>.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
modifyReplicationGroup_snapshotWindow :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the destination, format and type of the logs.
modifyReplicationGroup_logDeliveryConfigurations :: Lens' ModifyReplicationGroup (Maybe [LogDeliveryConfigurationRequest])

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update-strategy </tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
modifyReplicationGroup_authToken :: Lens' ModifyReplicationGroup (Maybe Text)

-- | For replication groups with a single primary, if this parameter is
--   specified, ElastiCache promotes the specified cluster in the specified
--   replication group to the primary role. The nodes of all other clusters
--   in the replication group are read replicas.
modifyReplicationGroup_primaryClusterId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
modifyReplicationGroup_preferredMaintenanceWindow :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A flag to indicate MultiAZ is enabled.
modifyReplicationGroup_multiAZEnabled :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The ID of the user group you are associating with the replication
--   group.
modifyReplicationGroup_userGroupIdsToAdd :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | Deprecated. This parameter is not used.
modifyReplicationGroup_nodeGroupId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The number of days for which ElastiCache retains automatic node group
--   (shard) snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
modifyReplicationGroup_snapshotRetentionLimit :: Lens' ModifyReplicationGroup (Maybe Int)

-- | The ID of the user group to disassociate from the replication group,
--   meaning the users in the group no longer can access the replication
--   group.
modifyReplicationGroup_userGroupIdsToRemove :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | The status of the Amazon SNS notification topic for the replication
--   group. Notifications are sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
modifyReplicationGroup_notificationTopicStatus :: Lens' ModifyReplicationGroup (Maybe Text)

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the replication group.
--   
--   If <tt>false</tt>, changes to the nodes in the replication group are
--   applied on the next maintenance reboot, or the next failure reboot,
--   whichever occurs first.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
modifyReplicationGroup_applyImmediately :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | Removes the user group associated with this replication group.
modifyReplicationGroup_removeUserGroups :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
modifyReplicationGroup_authTokenUpdateStrategy :: Lens' ModifyReplicationGroup (Maybe AuthTokenUpdateStrategyType)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the replication group
--   owner.
modifyReplicationGroup_notificationTopicArn :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A list of cache security group names to authorize for the clusters in
--   this replication group. This change is asynchronously applied as soon
--   as possible.
--   
--   This parameter can be used only with replication group containing
--   clusters running outside of an Amazon Virtual Private Cloud (Amazon
--   VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be <tt>Default</tt>.
modifyReplicationGroup_cacheSecurityGroupNames :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | The identifier of the replication group to modify.
modifyReplicationGroup_replicationGroupId :: Lens' ModifyReplicationGroup Text

-- | <i>See:</i> <a>newModifyReplicationGroupResponse</a> smart
--   constructor.
data ModifyReplicationGroupResponse
ModifyReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> ModifyReplicationGroupResponse
[$sel:replicationGroup:ModifyReplicationGroupResponse'] :: ModifyReplicationGroupResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:ModifyReplicationGroupResponse'] :: ModifyReplicationGroupResponse -> Int

-- | Create a value of <a>ModifyReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:ModifyReplicationGroupResponse'</a>,
--   <a>modifyReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:ModifyReplicationGroupResponse'</a>,
--   <a>modifyReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyReplicationGroupResponse :: Int -> ModifyReplicationGroupResponse

-- | Undocumented member.
modifyReplicationGroupResponse_replicationGroup :: Lens' ModifyReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
modifyReplicationGroupResponse_httpStatus :: Lens' ModifyReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyReplicationGroup.ModifyReplicationGroup


-- | Modifies the settings for a Global datastore.
module Amazonka.ElastiCache.ModifyGlobalReplicationGroup

-- | <i>See:</i> <a>newModifyGlobalReplicationGroup</a> smart constructor.
data ModifyGlobalReplicationGroup
ModifyGlobalReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Bool -> ModifyGlobalReplicationGroup

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
[$sel:automaticFailoverEnabled:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Maybe Bool

-- | The upgraded version of the cache engine to be run on the clusters in
--   the Global datastore.
[$sel:engineVersion:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Maybe Text

-- | A valid cache node type that you want to scale this Global datastore
--   to.
[$sel:cacheNodeType:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Maybe Text

-- | The name of the cache parameter group to use with the Global
--   datastore. It must be compatible with the major engine version used by
--   the Global datastore.
[$sel:cacheParameterGroupName:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Maybe Text

-- | A description of the Global datastore
[$sel:globalReplicationGroupDescription:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Maybe Text

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Text

-- | This parameter causes the modifications in this request and any
--   pending modifications to be applied, asynchronously and as soon as
--   possible. Modifications to Global Replication Groups cannot be
--   requested to be applied in PreferredMaintenceWindow.
[$sel:applyImmediately:ModifyGlobalReplicationGroup'] :: ModifyGlobalReplicationGroup -> Bool

-- | Create a value of <a>ModifyGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_automaticFailoverEnabled</a> -
--   Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
--   
--   <a>$sel:engineVersion:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_engineVersion</a> - The upgraded
--   version of the cache engine to be run on the clusters in the Global
--   datastore.
--   
--   <a>$sel:cacheNodeType:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_cacheNodeType</a> - A valid cache node
--   type that you want to scale this Global datastore to.
--   
--   <a>$sel:cacheParameterGroupName:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_cacheParameterGroupName</a> - The name
--   of the cache parameter group to use with the Global datastore. It must
--   be compatible with the major engine version used by the Global
--   datastore.
--   
--   
--   <a>$sel:globalReplicationGroupDescription:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_globalReplicationGroupDescription</a>
--   - A description of the Global datastore
--   
--   <a>$sel:globalReplicationGroupId:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   <a>$sel:applyImmediately:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_applyImmediately</a> - This parameter
--   causes the modifications in this request and any pending modifications
--   to be applied, asynchronously and as soon as possible. Modifications
--   to Global Replication Groups cannot be requested to be applied in
--   PreferredMaintenceWindow.
newModifyGlobalReplicationGroup :: Text -> Bool -> ModifyGlobalReplicationGroup

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
modifyGlobalReplicationGroup_automaticFailoverEnabled :: Lens' ModifyGlobalReplicationGroup (Maybe Bool)

-- | The upgraded version of the cache engine to be run on the clusters in
--   the Global datastore.
modifyGlobalReplicationGroup_engineVersion :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | A valid cache node type that you want to scale this Global datastore
--   to.
modifyGlobalReplicationGroup_cacheNodeType :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | The name of the cache parameter group to use with the Global
--   datastore. It must be compatible with the major engine version used by
--   the Global datastore.
modifyGlobalReplicationGroup_cacheParameterGroupName :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | A description of the Global datastore
modifyGlobalReplicationGroup_globalReplicationGroupDescription :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | The name of the Global datastore
modifyGlobalReplicationGroup_globalReplicationGroupId :: Lens' ModifyGlobalReplicationGroup Text

-- | This parameter causes the modifications in this request and any
--   pending modifications to be applied, asynchronously and as soon as
--   possible. Modifications to Global Replication Groups cannot be
--   requested to be applied in PreferredMaintenceWindow.
modifyGlobalReplicationGroup_applyImmediately :: Lens' ModifyGlobalReplicationGroup Bool

-- | <i>See:</i> <a>newModifyGlobalReplicationGroupResponse</a> smart
--   constructor.
data ModifyGlobalReplicationGroupResponse
ModifyGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> ModifyGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:ModifyGlobalReplicationGroupResponse'] :: ModifyGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:ModifyGlobalReplicationGroupResponse'] :: ModifyGlobalReplicationGroupResponse -> Int

-- | Create a value of <a>ModifyGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:ModifyGlobalReplicationGroupResponse'</a>,
--   <a>modifyGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:ModifyGlobalReplicationGroupResponse'</a>,
--   <a>modifyGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newModifyGlobalReplicationGroupResponse :: Int -> ModifyGlobalReplicationGroupResponse

-- | Undocumented member.
modifyGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' ModifyGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
modifyGlobalReplicationGroupResponse_httpStatus :: Lens' ModifyGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyGlobalReplicationGroup.ModifyGlobalReplicationGroup


-- | Modifies an existing cache subnet group.
module Amazonka.ElastiCache.ModifyCacheSubnetGroup

-- | Represents the input of a <tt>ModifyCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newModifyCacheSubnetGroup</a> smart constructor.
data ModifyCacheSubnetGroup
ModifyCacheSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> ModifyCacheSubnetGroup

-- | The EC2 subnet IDs for the cache subnet group.
[$sel:subnetIds:ModifyCacheSubnetGroup'] :: ModifyCacheSubnetGroup -> Maybe [Text]

-- | A description of the cache subnet group.
[$sel:cacheSubnetGroupDescription:ModifyCacheSubnetGroup'] :: ModifyCacheSubnetGroup -> Maybe Text

-- | The name for the cache subnet group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
[$sel:cacheSubnetGroupName:ModifyCacheSubnetGroup'] :: ModifyCacheSubnetGroup -> Text

-- | Create a value of <a>ModifyCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_subnetIds</a> - The EC2 subnet IDs for the
--   cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupDescription:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_cacheSubnetGroupDescription</a> - A
--   description of the cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupName:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_cacheSubnetGroupName</a> - The name for the
--   cache subnet group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
newModifyCacheSubnetGroup :: Text -> ModifyCacheSubnetGroup

-- | The EC2 subnet IDs for the cache subnet group.
modifyCacheSubnetGroup_subnetIds :: Lens' ModifyCacheSubnetGroup (Maybe [Text])

-- | A description of the cache subnet group.
modifyCacheSubnetGroup_cacheSubnetGroupDescription :: Lens' ModifyCacheSubnetGroup (Maybe Text)

-- | The name for the cache subnet group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
modifyCacheSubnetGroup_cacheSubnetGroupName :: Lens' ModifyCacheSubnetGroup Text

-- | <i>See:</i> <a>newModifyCacheSubnetGroupResponse</a> smart
--   constructor.
data ModifyCacheSubnetGroupResponse
ModifyCacheSubnetGroupResponse' :: Maybe CacheSubnetGroup -> Int -> ModifyCacheSubnetGroupResponse
[$sel:cacheSubnetGroup:ModifyCacheSubnetGroupResponse'] :: ModifyCacheSubnetGroupResponse -> Maybe CacheSubnetGroup

-- | The response's http status code.
[$sel:httpStatus:ModifyCacheSubnetGroupResponse'] :: ModifyCacheSubnetGroupResponse -> Int

-- | Create a value of <a>ModifyCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroup:ModifyCacheSubnetGroupResponse'</a>,
--   <a>modifyCacheSubnetGroupResponse_cacheSubnetGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:ModifyCacheSubnetGroupResponse'</a>,
--   <a>modifyCacheSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyCacheSubnetGroupResponse :: Int -> ModifyCacheSubnetGroupResponse

-- | Undocumented member.
modifyCacheSubnetGroupResponse_cacheSubnetGroup :: Lens' ModifyCacheSubnetGroupResponse (Maybe CacheSubnetGroup)

-- | The response's http status code.
modifyCacheSubnetGroupResponse_httpStatus :: Lens' ModifyCacheSubnetGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance GHC.Show.Show Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance GHC.Read.Read Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyCacheSubnetGroup.ModifyCacheSubnetGroup


-- | Modifies the parameters of a cache parameter group. You can modify up
--   to 20 parameters in a single request by submitting a list parameter
--   name and value pairs.
module Amazonka.ElastiCache.ModifyCacheParameterGroup

-- | Represents the input of a <tt>ModifyCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newModifyCacheParameterGroup</a> smart constructor.
data ModifyCacheParameterGroup
ModifyCacheParameterGroup' :: Text -> [ParameterNameValue] -> ModifyCacheParameterGroup

-- | The name of the cache parameter group to modify.
[$sel:cacheParameterGroupName:ModifyCacheParameterGroup'] :: ModifyCacheParameterGroup -> Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be modified per
--   request.
[$sel:parameterNameValues:ModifyCacheParameterGroup'] :: ModifyCacheParameterGroup -> [ParameterNameValue]

-- | Create a value of <a>ModifyCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:ModifyCacheParameterGroup'</a>,
--   <a>modifyCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to modify.
--   
--   <a>$sel:parameterNameValues:ModifyCacheParameterGroup'</a>,
--   <a>modifyCacheParameterGroup_parameterNameValues</a> - An array of
--   parameter names and values for the parameter update. You must supply
--   at least one parameter name and value; subsequent arguments are
--   optional. A maximum of 20 parameters may be modified per request.
newModifyCacheParameterGroup :: Text -> ModifyCacheParameterGroup

-- | The name of the cache parameter group to modify.
modifyCacheParameterGroup_cacheParameterGroupName :: Lens' ModifyCacheParameterGroup Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be modified per
--   request.
modifyCacheParameterGroup_parameterNameValues :: Lens' ModifyCacheParameterGroup [ParameterNameValue]

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
[$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'] :: CacheParameterGroupNameMessage -> Maybe Text

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance GHC.Show.Show Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance GHC.Read.Read Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyCacheParameterGroup.ModifyCacheParameterGroup


-- | Modifies the settings for a cluster. You can use this operation to
--   change one or more cluster configuration parameters by specifying the
--   parameters and the new values.
module Amazonka.ElastiCache.ModifyCacheCluster

-- | Represents the input of a <tt>ModifyCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newModifyCacheCluster</a> smart constructor.
data ModifyCacheCluster
ModifyCacheCluster' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe AZMode -> Maybe Bool -> Maybe AuthTokenUpdateStrategyType -> Maybe Text -> Maybe Int -> Maybe [Text] -> Text -> ModifyCacheCluster

-- | The upgraded version of the cache engine to be run on the cache nodes.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster and create it anew with
--   the earlier engine version.
[$sel:engineVersion:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | A valid cache node type that you want to scale this cluster up to.
[$sel:cacheNodeType:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | Specifies the VPC Security Groups associated with the cluster.
--   
--   This parameter can be used only with clusters that are created in an
--   Amazon Virtual Private Cloud (Amazon VPC).
[$sel:securityGroupIds:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe [Text]

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Bool

-- | The name of the cache parameter group to apply to this cluster. This
--   change is asynchronously applied as soon as possible for parameters
--   when the <tt>ApplyImmediately</tt> parameter is specified as
--   <tt>true</tt> for this request.
[$sel:cacheParameterGroupName:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
[$sel:snapshotWindow:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | This option is only supported on Memcached clusters.
--   
--   The list of Availability Zones where the new Memcached cache nodes are
--   created.
--   
--   This parameter is only valid when <tt>NumCacheNodes</tt> in the
--   request is greater than the sum of the number of active cache nodes
--   and the number of cache nodes pending creation (which may be zero).
--   The number of Availability Zones supplied in this list must match the
--   cache nodes being added in this request.
--   
--   Scenarios:
--   
--   <ul>
--   <li><b>Scenario 1:</b> You have 3 active nodes and wish to add 2
--   nodes. Specify <tt>NumCacheNodes=5</tt> (3 + 2) and optionally specify
--   two Availability Zones for the two new nodes.</li>
--   <li><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
--   creation (from the scenario 1 call) and want to add 1 more node.
--   Specify <tt>NumCacheNodes=6</tt> ((3 + 2) + 1) and optionally specify
--   an Availability Zone for the new node.</li>
--   <li><b>Scenario 3:</b> You want to cancel all pending operations.
--   Specify <tt>NumCacheNodes=3</tt> to cancel all pending
--   operations.</li>
--   </ul>
--   
--   The Availability Zone placement of nodes pending creation cannot be
--   modified. If you wish to cancel any nodes pending creation, add 0
--   nodes by setting <tt>NumCacheNodes</tt> to the number of current
--   nodes.
--   
--   If <tt>cross-az</tt> is specified, existing Memcached nodes remain in
--   their current Availability Zone. Only newly created nodes can be
--   located in different Availability Zones. For guidance on how to move
--   existing Memcached nodes to different Availability Zones, see the
--   __Availability Zone Considerations__ section of <a>Cache Node
--   Considerations for Memcached</a>.
--   
--   <b>Impact of new add/remove requests upon pending requests</b>
--   
--   <ul>
--   <li>Scenario-1<ul><li>Pending Action: Delete</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-2<ul><li>Pending Action: Delete</li><li>New Request:
--   Create</li><li>Result: The new create, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-3<ul><li>Pending Action: Create</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending create.</li></ul></li>
--   <li>Scenario-4<ul><li>Pending Action: Create</li><li>New Request:
--   Create</li><li>Result: The new create is added to the pending
--   create.<b>Important:</b> If the new create request is __Apply
--   Immediately - Yes__, all creates are performed immediately. If the new
--   create request is <b>Apply Immediately - No</b>, all creates are
--   pending.</li></ul></li>
--   </ul>
[$sel:newAvailabilityZones':ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe [Text]

-- | Specifies the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe [LogDeliveryConfigurationRequest]

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update</tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
[$sel:authToken:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | A list of cache node IDs to be removed. A node ID is a numeric
--   identifier (0001, 0002, etc.). This parameter is only valid when
--   <tt>NumCacheNodes</tt> is less than the existing number of cache
--   nodes. The number of cache node IDs supplied in this parameter must
--   match the difference between the existing number of cache nodes in the
--   cluster or pending cache nodes, whichever is greater, and the value of
--   <tt>NumCacheNodes</tt> in the request.
--   
--   For example: If you have 3 active cache nodes, 7 pending cache nodes,
--   and the number of cache nodes in this <tt>ModifyCacheCluster</tt> call
--   is 5, you must list 2 (7 - 5) cache node IDs to remove.
[$sel:cacheNodeIdsToRemove:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe [Text]

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
[$sel:snapshotRetentionLimit:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Int

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
[$sel:notificationTopicStatus:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | Specifies whether the new nodes in this Memcached cluster are all
--   created in a single Availability Zone or created across multiple
--   Availability Zones.
--   
--   Valid values: <tt>single-az</tt> | <tt>cross-az</tt>.
--   
--   This option is only supported for Memcached clusters.
--   
--   You cannot specify <tt>single-az</tt> if the Memcached cluster already
--   has cache nodes in different Availability Zones. If <tt>cross-az</tt>
--   is specified, existing Memcached nodes remain in their current
--   Availability Zone.
--   
--   Only newly created nodes are located in different Availability Zones.
[$sel:aZMode:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe AZMode

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the cluster.
--   
--   If <tt>false</tt>, changes to the cluster are applied on the next
--   maintenance reboot, or the next failure reboot, whichever occurs
--   first.
--   
--   If you perform a <tt>ModifyCacheCluster</tt> before a pending
--   modification is applied, the pending modification is replaced by the
--   newer modification.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
[$sel:applyImmediately:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Bool

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
[$sel:authTokenUpdateStrategy:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe AuthTokenUpdateStrategyType

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the cluster owner.
[$sel:notificationTopicArn:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Text

-- | The number of cache nodes that the cluster should have. If the value
--   for <tt>NumCacheNodes</tt> is greater than the sum of the number of
--   current cache nodes and the number of cache nodes pending creation
--   (which may be zero), more nodes are added. If the value is less than
--   the number of existing cache nodes, nodes are removed. If the value is
--   equal to the number of current cache nodes, any pending add or remove
--   requests are canceled.
--   
--   If you are removing cache nodes, you must use the
--   <tt>CacheNodeIdsToRemove</tt> parameter to provide the IDs of the
--   specific cache nodes to remove.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   Adding or removing Memcached cache nodes can be applied immediately or
--   as a pending operation (see <tt>ApplyImmediately</tt>).
--   
--   A pending operation to modify the number of cache nodes in a cluster
--   during its maintenance window, whether by adding or removing nodes in
--   accordance with the scale out architecture, is not queued. The
--   customer's latest request to add or remove nodes to the cluster
--   overrides any previous pending operations to modify the number of
--   cache nodes in the cluster. For example, a request to remove 2 nodes
--   would override a previous pending operation to remove 3 nodes.
--   Similarly, a request to add 2 nodes would override a previous pending
--   operation to remove 3 nodes and vice versa. As Memcached cache nodes
--   may now be provisioned in different Availability Zones with flexible
--   cache node placement, a request to add nodes does not automatically
--   override a previous pending operation to add nodes. The customer can
--   modify the previous pending operation to add more nodes or explicitly
--   cancel the pending request and retry the new request. To cancel
--   pending operations to modify the number of cache nodes in a cluster,
--   use the <tt>ModifyCacheCluster</tt> request and set
--   <tt>NumCacheNodes</tt> equal to the number of cache nodes currently in
--   the cluster.
[$sel:numCacheNodes:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe Int

-- | A list of cache security group names to authorize on this cluster.
--   This change is asynchronously applied as soon as possible.
--   
--   You can use this parameter only with clusters that are created outside
--   of an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be "Default".
[$sel:cacheSecurityGroupNames:ModifyCacheCluster'] :: ModifyCacheCluster -> Maybe [Text]

-- | The cluster identifier. This value is stored as a lowercase string.
[$sel:cacheClusterId:ModifyCacheCluster'] :: ModifyCacheCluster -> Text

-- | Create a value of <a>ModifyCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_engineVersion</a> - The upgraded version of the
--   cache engine to be run on the cache nodes.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster and create it anew with
--   the earlier engine version.
--   
--   <a>$sel:cacheNodeType:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheNodeType</a> - A valid cache node type that
--   you want to scale this cluster up to.
--   
--   <a>$sel:securityGroupIds:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_securityGroupIds</a> - Specifies the VPC
--   Security Groups associated with the cluster.
--   
--   This parameter can be used only with clusters that are created in an
--   Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:autoMinorVersionUpgrade:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheParameterGroupName</a> - The name of the
--   cache parameter group to apply to this cluster. This change is
--   asynchronously applied as soon as possible for parameters when the
--   <tt>ApplyImmediately</tt> parameter is specified as <tt>true</tt> for
--   this request.
--   
--   <a>$sel:snapshotWindow:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_snapshotWindow</a> - The daily time range (in
--   UTC) during which ElastiCache begins taking a daily snapshot of your
--   cluster.
--   
--   <a>$sel:newAvailabilityZones':ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_newAvailabilityZones</a> - This option is only
--   supported on Memcached clusters.
--   
--   The list of Availability Zones where the new Memcached cache nodes are
--   created.
--   
--   This parameter is only valid when <tt>NumCacheNodes</tt> in the
--   request is greater than the sum of the number of active cache nodes
--   and the number of cache nodes pending creation (which may be zero).
--   The number of Availability Zones supplied in this list must match the
--   cache nodes being added in this request.
--   
--   Scenarios:
--   
--   <ul>
--   <li><b>Scenario 1:</b> You have 3 active nodes and wish to add 2
--   nodes. Specify <tt>NumCacheNodes=5</tt> (3 + 2) and optionally specify
--   two Availability Zones for the two new nodes.</li>
--   <li><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
--   creation (from the scenario 1 call) and want to add 1 more node.
--   Specify <tt>NumCacheNodes=6</tt> ((3 + 2) + 1) and optionally specify
--   an Availability Zone for the new node.</li>
--   <li><b>Scenario 3:</b> You want to cancel all pending operations.
--   Specify <tt>NumCacheNodes=3</tt> to cancel all pending
--   operations.</li>
--   </ul>
--   
--   The Availability Zone placement of nodes pending creation cannot be
--   modified. If you wish to cancel any nodes pending creation, add 0
--   nodes by setting <tt>NumCacheNodes</tt> to the number of current
--   nodes.
--   
--   If <tt>cross-az</tt> is specified, existing Memcached nodes remain in
--   their current Availability Zone. Only newly created nodes can be
--   located in different Availability Zones. For guidance on how to move
--   existing Memcached nodes to different Availability Zones, see the
--   __Availability Zone Considerations__ section of <a>Cache Node
--   Considerations for Memcached</a>.
--   
--   <b>Impact of new add/remove requests upon pending requests</b>
--   
--   <ul>
--   <li>Scenario-1<ul><li>Pending Action: Delete</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-2<ul><li>Pending Action: Delete</li><li>New Request:
--   Create</li><li>Result: The new create, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-3<ul><li>Pending Action: Create</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending create.</li></ul></li>
--   <li>Scenario-4<ul><li>Pending Action: Create</li><li>New Request:
--   Create</li><li>Result: The new create is added to the pending
--   create.<b>Important:</b> If the new create request is __Apply
--   Immediately - Yes__, all creates are performed immediately. If the new
--   create request is <b>Apply Immediately - No</b>, all creates are
--   pending.</li></ul></li>
--   </ul>
--   
--   <a>$sel:logDeliveryConfigurations:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_logDeliveryConfigurations</a> - Specifies the
--   destination, format and type of the logs.
--   
--   <a>$sel:authToken:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_authToken</a> - Reserved parameter. The password
--   used to access a password protected server. This parameter must be
--   specified with the <tt>auth-token-update</tt> parameter. Password
--   constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
--   
--   <a>$sel:preferredMaintenanceWindow:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_preferredMaintenanceWindow</a> - Specifies the
--   weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:cacheNodeIdsToRemove:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheNodeIdsToRemove</a> - A list of cache node
--   IDs to be removed. A node ID is a numeric identifier (0001, 0002,
--   etc.). This parameter is only valid when <tt>NumCacheNodes</tt> is
--   less than the existing number of cache nodes. The number of cache node
--   IDs supplied in this parameter must match the difference between the
--   existing number of cache nodes in the cluster or pending cache nodes,
--   whichever is greater, and the value of <tt>NumCacheNodes</tt> in the
--   request.
--   
--   For example: If you have 3 active cache nodes, 7 pending cache nodes,
--   and the number of cache nodes in this <tt>ModifyCacheCluster</tt> call
--   is 5, you must list 2 (7 - 5) cache node IDs to remove.
--   
--   <a>$sel:snapshotRetentionLimit:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic cluster snapshots before
--   deleting them. For example, if you set <tt>SnapshotRetentionLimit</tt>
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
--   
--   <a>$sel:notificationTopicStatus:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_notificationTopicStatus</a> - The status of the
--   Amazon SNS notification topic. Notifications are sent only if the
--   status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
--   
--   <a>$sel:aZMode:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_aZMode</a> - Specifies whether the new nodes in
--   this Memcached cluster are all created in a single Availability Zone
--   or created across multiple Availability Zones.
--   
--   Valid values: <tt>single-az</tt> | <tt>cross-az</tt>.
--   
--   This option is only supported for Memcached clusters.
--   
--   You cannot specify <tt>single-az</tt> if the Memcached cluster already
--   has cache nodes in different Availability Zones. If <tt>cross-az</tt>
--   is specified, existing Memcached nodes remain in their current
--   Availability Zone.
--   
--   Only newly created nodes are located in different Availability Zones.
--   
--   <a>$sel:applyImmediately:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_applyImmediately</a> - If <tt>true</tt>, this
--   parameter causes the modifications in this request and any pending
--   modifications to be applied, asynchronously and as soon as possible,
--   regardless of the <tt>PreferredMaintenanceWindow</tt> setting for the
--   cluster.
--   
--   If <tt>false</tt>, changes to the cluster are applied on the next
--   maintenance reboot, or the next failure reboot, whichever occurs
--   first.
--   
--   If you perform a <tt>ModifyCacheCluster</tt> before a pending
--   modification is applied, the pending modification is replaced by the
--   newer modification.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:authTokenUpdateStrategy:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_authTokenUpdateStrategy</a> - Specifies the
--   strategy to use to update the AUTH token. This parameter must be
--   specified with the <tt>auth-token</tt> parameter. Possible values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
--   
--   <a>$sel:notificationTopicArn:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_notificationTopicArn</a> - The Amazon Resource
--   Name (ARN) of the Amazon SNS topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the cluster owner.
--   
--   <a>$sel:numCacheNodes:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_numCacheNodes</a> - The number of cache nodes
--   that the cluster should have. If the value for <tt>NumCacheNodes</tt>
--   is greater than the sum of the number of current cache nodes and the
--   number of cache nodes pending creation (which may be zero), more nodes
--   are added. If the value is less than the number of existing cache
--   nodes, nodes are removed. If the value is equal to the number of
--   current cache nodes, any pending add or remove requests are canceled.
--   
--   If you are removing cache nodes, you must use the
--   <tt>CacheNodeIdsToRemove</tt> parameter to provide the IDs of the
--   specific cache nodes to remove.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   Adding or removing Memcached cache nodes can be applied immediately or
--   as a pending operation (see <tt>ApplyImmediately</tt>).
--   
--   A pending operation to modify the number of cache nodes in a cluster
--   during its maintenance window, whether by adding or removing nodes in
--   accordance with the scale out architecture, is not queued. The
--   customer's latest request to add or remove nodes to the cluster
--   overrides any previous pending operations to modify the number of
--   cache nodes in the cluster. For example, a request to remove 2 nodes
--   would override a previous pending operation to remove 3 nodes.
--   Similarly, a request to add 2 nodes would override a previous pending
--   operation to remove 3 nodes and vice versa. As Memcached cache nodes
--   may now be provisioned in different Availability Zones with flexible
--   cache node placement, a request to add nodes does not automatically
--   override a previous pending operation to add nodes. The customer can
--   modify the previous pending operation to add more nodes or explicitly
--   cancel the pending request and retry the new request. To cancel
--   pending operations to modify the number of cache nodes in a cluster,
--   use the <tt>ModifyCacheCluster</tt> request and set
--   <tt>NumCacheNodes</tt> equal to the number of cache nodes currently in
--   the cluster.
--   
--   <a>$sel:cacheSecurityGroupNames:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheSecurityGroupNames</a> - A list of cache
--   security group names to authorize on this cluster. This change is
--   asynchronously applied as soon as possible.
--   
--   You can use this parameter only with clusters that are created outside
--   of an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be "Default".
--   
--   <a>$sel:cacheClusterId:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheClusterId</a> - The cluster identifier.
--   This value is stored as a lowercase string.
newModifyCacheCluster :: Text -> ModifyCacheCluster

-- | The upgraded version of the cache engine to be run on the cache nodes.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster and create it anew with
--   the earlier engine version.
modifyCacheCluster_engineVersion :: Lens' ModifyCacheCluster (Maybe Text)

-- | A valid cache node type that you want to scale this cluster up to.
modifyCacheCluster_cacheNodeType :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies the VPC Security Groups associated with the cluster.
--   
--   This parameter can be used only with clusters that are created in an
--   Amazon Virtual Private Cloud (Amazon VPC).
modifyCacheCluster_securityGroupIds :: Lens' ModifyCacheCluster (Maybe [Text])

-- | This parameter is currently disabled.
modifyCacheCluster_autoMinorVersionUpgrade :: Lens' ModifyCacheCluster (Maybe Bool)

-- | The name of the cache parameter group to apply to this cluster. This
--   change is asynchronously applied as soon as possible for parameters
--   when the <tt>ApplyImmediately</tt> parameter is specified as
--   <tt>true</tt> for this request.
modifyCacheCluster_cacheParameterGroupName :: Lens' ModifyCacheCluster (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
modifyCacheCluster_snapshotWindow :: Lens' ModifyCacheCluster (Maybe Text)

-- | This option is only supported on Memcached clusters.
--   
--   The list of Availability Zones where the new Memcached cache nodes are
--   created.
--   
--   This parameter is only valid when <tt>NumCacheNodes</tt> in the
--   request is greater than the sum of the number of active cache nodes
--   and the number of cache nodes pending creation (which may be zero).
--   The number of Availability Zones supplied in this list must match the
--   cache nodes being added in this request.
--   
--   Scenarios:
--   
--   <ul>
--   <li><b>Scenario 1:</b> You have 3 active nodes and wish to add 2
--   nodes. Specify <tt>NumCacheNodes=5</tt> (3 + 2) and optionally specify
--   two Availability Zones for the two new nodes.</li>
--   <li><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
--   creation (from the scenario 1 call) and want to add 1 more node.
--   Specify <tt>NumCacheNodes=6</tt> ((3 + 2) + 1) and optionally specify
--   an Availability Zone for the new node.</li>
--   <li><b>Scenario 3:</b> You want to cancel all pending operations.
--   Specify <tt>NumCacheNodes=3</tt> to cancel all pending
--   operations.</li>
--   </ul>
--   
--   The Availability Zone placement of nodes pending creation cannot be
--   modified. If you wish to cancel any nodes pending creation, add 0
--   nodes by setting <tt>NumCacheNodes</tt> to the number of current
--   nodes.
--   
--   If <tt>cross-az</tt> is specified, existing Memcached nodes remain in
--   their current Availability Zone. Only newly created nodes can be
--   located in different Availability Zones. For guidance on how to move
--   existing Memcached nodes to different Availability Zones, see the
--   __Availability Zone Considerations__ section of <a>Cache Node
--   Considerations for Memcached</a>.
--   
--   <b>Impact of new add/remove requests upon pending requests</b>
--   
--   <ul>
--   <li>Scenario-1<ul><li>Pending Action: Delete</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-2<ul><li>Pending Action: Delete</li><li>New Request:
--   Create</li><li>Result: The new create, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-3<ul><li>Pending Action: Create</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending create.</li></ul></li>
--   <li>Scenario-4<ul><li>Pending Action: Create</li><li>New Request:
--   Create</li><li>Result: The new create is added to the pending
--   create.<b>Important:</b> If the new create request is __Apply
--   Immediately - Yes__, all creates are performed immediately. If the new
--   create request is <b>Apply Immediately - No</b>, all creates are
--   pending.</li></ul></li>
--   </ul>
modifyCacheCluster_newAvailabilityZones :: Lens' ModifyCacheCluster (Maybe [Text])

-- | Specifies the destination, format and type of the logs.
modifyCacheCluster_logDeliveryConfigurations :: Lens' ModifyCacheCluster (Maybe [LogDeliveryConfigurationRequest])

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update</tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
modifyCacheCluster_authToken :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
modifyCacheCluster_preferredMaintenanceWindow :: Lens' ModifyCacheCluster (Maybe Text)

-- | A list of cache node IDs to be removed. A node ID is a numeric
--   identifier (0001, 0002, etc.). This parameter is only valid when
--   <tt>NumCacheNodes</tt> is less than the existing number of cache
--   nodes. The number of cache node IDs supplied in this parameter must
--   match the difference between the existing number of cache nodes in the
--   cluster or pending cache nodes, whichever is greater, and the value of
--   <tt>NumCacheNodes</tt> in the request.
--   
--   For example: If you have 3 active cache nodes, 7 pending cache nodes,
--   and the number of cache nodes in this <tt>ModifyCacheCluster</tt> call
--   is 5, you must list 2 (7 - 5) cache node IDs to remove.
modifyCacheCluster_cacheNodeIdsToRemove :: Lens' ModifyCacheCluster (Maybe [Text])

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
modifyCacheCluster_snapshotRetentionLimit :: Lens' ModifyCacheCluster (Maybe Int)

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
modifyCacheCluster_notificationTopicStatus :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies whether the new nodes in this Memcached cluster are all
--   created in a single Availability Zone or created across multiple
--   Availability Zones.
--   
--   Valid values: <tt>single-az</tt> | <tt>cross-az</tt>.
--   
--   This option is only supported for Memcached clusters.
--   
--   You cannot specify <tt>single-az</tt> if the Memcached cluster already
--   has cache nodes in different Availability Zones. If <tt>cross-az</tt>
--   is specified, existing Memcached nodes remain in their current
--   Availability Zone.
--   
--   Only newly created nodes are located in different Availability Zones.
modifyCacheCluster_aZMode :: Lens' ModifyCacheCluster (Maybe AZMode)

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the cluster.
--   
--   If <tt>false</tt>, changes to the cluster are applied on the next
--   maintenance reboot, or the next failure reboot, whichever occurs
--   first.
--   
--   If you perform a <tt>ModifyCacheCluster</tt> before a pending
--   modification is applied, the pending modification is replaced by the
--   newer modification.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
modifyCacheCluster_applyImmediately :: Lens' ModifyCacheCluster (Maybe Bool)

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
modifyCacheCluster_authTokenUpdateStrategy :: Lens' ModifyCacheCluster (Maybe AuthTokenUpdateStrategyType)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the cluster owner.
modifyCacheCluster_notificationTopicArn :: Lens' ModifyCacheCluster (Maybe Text)

-- | The number of cache nodes that the cluster should have. If the value
--   for <tt>NumCacheNodes</tt> is greater than the sum of the number of
--   current cache nodes and the number of cache nodes pending creation
--   (which may be zero), more nodes are added. If the value is less than
--   the number of existing cache nodes, nodes are removed. If the value is
--   equal to the number of current cache nodes, any pending add or remove
--   requests are canceled.
--   
--   If you are removing cache nodes, you must use the
--   <tt>CacheNodeIdsToRemove</tt> parameter to provide the IDs of the
--   specific cache nodes to remove.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   Adding or removing Memcached cache nodes can be applied immediately or
--   as a pending operation (see <tt>ApplyImmediately</tt>).
--   
--   A pending operation to modify the number of cache nodes in a cluster
--   during its maintenance window, whether by adding or removing nodes in
--   accordance with the scale out architecture, is not queued. The
--   customer's latest request to add or remove nodes to the cluster
--   overrides any previous pending operations to modify the number of
--   cache nodes in the cluster. For example, a request to remove 2 nodes
--   would override a previous pending operation to remove 3 nodes.
--   Similarly, a request to add 2 nodes would override a previous pending
--   operation to remove 3 nodes and vice versa. As Memcached cache nodes
--   may now be provisioned in different Availability Zones with flexible
--   cache node placement, a request to add nodes does not automatically
--   override a previous pending operation to add nodes. The customer can
--   modify the previous pending operation to add more nodes or explicitly
--   cancel the pending request and retry the new request. To cancel
--   pending operations to modify the number of cache nodes in a cluster,
--   use the <tt>ModifyCacheCluster</tt> request and set
--   <tt>NumCacheNodes</tt> equal to the number of cache nodes currently in
--   the cluster.
modifyCacheCluster_numCacheNodes :: Lens' ModifyCacheCluster (Maybe Int)

-- | A list of cache security group names to authorize on this cluster.
--   This change is asynchronously applied as soon as possible.
--   
--   You can use this parameter only with clusters that are created outside
--   of an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be "Default".
modifyCacheCluster_cacheSecurityGroupNames :: Lens' ModifyCacheCluster (Maybe [Text])

-- | The cluster identifier. This value is stored as a lowercase string.
modifyCacheCluster_cacheClusterId :: Lens' ModifyCacheCluster Text

-- | <i>See:</i> <a>newModifyCacheClusterResponse</a> smart constructor.
data ModifyCacheClusterResponse
ModifyCacheClusterResponse' :: Maybe CacheCluster -> Int -> ModifyCacheClusterResponse
[$sel:cacheCluster:ModifyCacheClusterResponse'] :: ModifyCacheClusterResponse -> Maybe CacheCluster

-- | The response's http status code.
[$sel:httpStatus:ModifyCacheClusterResponse'] :: ModifyCacheClusterResponse -> Int

-- | Create a value of <a>ModifyCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:ModifyCacheClusterResponse'</a>,
--   <a>modifyCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ModifyCacheClusterResponse'</a>,
--   <a>modifyCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newModifyCacheClusterResponse :: Int -> ModifyCacheClusterResponse

-- | Undocumented member.
modifyCacheClusterResponse_cacheCluster :: Lens' ModifyCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
modifyCacheClusterResponse_httpStatus :: Lens' ModifyCacheClusterResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance GHC.Show.Show Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance GHC.Read.Read Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance GHC.Generics.Generic Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheClusterResponse
instance GHC.Show.Show Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheClusterResponse
instance GHC.Read.Read Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheClusterResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ModifyCacheCluster.ModifyCacheCluster


-- | Lists all tags currently on a named resource.
--   
--   A tag is a key-value pair where the key and value are case-sensitive.
--   You can use tags to categorize and track all your ElastiCache
--   resources, with the exception of global replication group. When you
--   add or remove tags on replication groups, those actions will be
--   replicated to all nodes in the replication group. For more
--   information, see <a>Resource-level permissions</a>.
--   
--   If the cluster is not in the <i>available</i> state,
--   <tt>ListTagsForResource</tt> returns an error.
module Amazonka.ElastiCache.ListTagsForResource

-- | The input parameters for the <tt>ListTagsForResource</tt> operation.
--   
--   <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Web Services Service Namespaces</a>.
[$sel:resourceName:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceName</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want the list of tags, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Web Services Service Namespaces</a>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Web Services Service Namespaces</a>.
listTagsForResource_resourceName :: Lens' ListTagsForResource Text

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | A list of tags as key-value pairs.
[$sel:tagList:TagListMessage'] :: TagListMessage -> Maybe [Tag]

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ListTagsForResource.ListTagsForResource


-- | Lists all available node types that you can scale your Redis cluster's
--   or replication group's current node type.
--   
--   When you use the <tt>ModifyCacheCluster</tt> or
--   <tt>ModifyReplicationGroup</tt> operations to scale your cluster or
--   replication group, the value of the <tt>CacheNodeType</tt> parameter
--   must be one of the node types returned by this operation.
module Amazonka.ElastiCache.ListAllowedNodeTypeModifications

-- | The input parameters for the <tt>ListAllowedNodeTypeModifications</tt>
--   operation.
--   
--   <i>See:</i> <a>newListAllowedNodeTypeModifications</a> smart
--   constructor.
data ListAllowedNodeTypeModifications
ListAllowedNodeTypeModifications' :: Maybe Text -> Maybe Text -> ListAllowedNodeTypeModifications

-- | The name of the cluster you want to scale up to a larger node
--   instanced type. ElastiCache uses the cluster id to identify the
--   current node type of this cluster and from that to create a list of
--   node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
[$sel:cacheClusterId:ListAllowedNodeTypeModifications'] :: ListAllowedNodeTypeModifications -> Maybe Text

-- | The name of the replication group want to scale up to a larger node
--   type. ElastiCache uses the replication group id to identify the
--   current node type being used by this replication group, and from that
--   to create a list of node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
[$sel:replicationGroupId:ListAllowedNodeTypeModifications'] :: ListAllowedNodeTypeModifications -> Maybe Text

-- | Create a value of <a>ListAllowedNodeTypeModifications</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:ListAllowedNodeTypeModifications'</a>,
--   <a>listAllowedNodeTypeModifications_cacheClusterId</a> - The name of
--   the cluster you want to scale up to a larger node instanced type.
--   ElastiCache uses the cluster id to identify the current node type of
--   this cluster and from that to create a list of node types you can
--   scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
--   
--   <a>$sel:replicationGroupId:ListAllowedNodeTypeModifications'</a>,
--   <a>listAllowedNodeTypeModifications_replicationGroupId</a> - The name
--   of the replication group want to scale up to a larger node type.
--   ElastiCache uses the replication group id to identify the current node
--   type being used by this replication group, and from that to create a
--   list of node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
newListAllowedNodeTypeModifications :: ListAllowedNodeTypeModifications

-- | The name of the cluster you want to scale up to a larger node
--   instanced type. ElastiCache uses the cluster id to identify the
--   current node type of this cluster and from that to create a list of
--   node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
listAllowedNodeTypeModifications_cacheClusterId :: Lens' ListAllowedNodeTypeModifications (Maybe Text)

-- | The name of the replication group want to scale up to a larger node
--   type. ElastiCache uses the replication group id to identify the
--   current node type being used by this replication group, and from that
--   to create a list of node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
listAllowedNodeTypeModifications_replicationGroupId :: Lens' ListAllowedNodeTypeModifications (Maybe Text)

-- | Represents the allowed node types you can use to modify your cluster
--   or replication group.
--   
--   <i>See:</i> <a>newListAllowedNodeTypeModificationsResponse</a> smart
--   constructor.
data ListAllowedNodeTypeModificationsResponse
ListAllowedNodeTypeModificationsResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ListAllowedNodeTypeModificationsResponse

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group.
--   
--   When scaling up a Redis cluster or replication group using
--   <tt>ModifyCacheCluster</tt> or <tt>ModifyReplicationGroup</tt>, use a
--   value from this list for the <tt>CacheNodeType</tt> parameter.
[$sel:scaleUpModifications:ListAllowedNodeTypeModificationsResponse'] :: ListAllowedNodeTypeModificationsResponse -> Maybe [Text]

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group. When scaling
--   down a Redis cluster or replication group using ModifyCacheCluster or
--   ModifyReplicationGroup, use a value from this list for the
--   CacheNodeType parameter.
[$sel:scaleDownModifications:ListAllowedNodeTypeModificationsResponse'] :: ListAllowedNodeTypeModificationsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListAllowedNodeTypeModificationsResponse'] :: ListAllowedNodeTypeModificationsResponse -> Int

-- | Create a value of <a>ListAllowedNodeTypeModificationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:scaleUpModifications:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_scaleUpModifications</a> -
--   A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group.
--   
--   When scaling up a Redis cluster or replication group using
--   <tt>ModifyCacheCluster</tt> or <tt>ModifyReplicationGroup</tt>, use a
--   value from this list for the <tt>CacheNodeType</tt> parameter.
--   
--   
--   <a>$sel:scaleDownModifications:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_scaleDownModifications</a>
--   - A string list, each element of which specifies a cache node type
--   which you can use to scale your cluster or replication group. When
--   scaling down a Redis cluster or replication group using
--   ModifyCacheCluster or ModifyReplicationGroup, use a value from this
--   list for the CacheNodeType parameter.
--   
--   <a>$sel:httpStatus:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_httpStatus</a> - The
--   response's http status code.
newListAllowedNodeTypeModificationsResponse :: Int -> ListAllowedNodeTypeModificationsResponse

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group.
--   
--   When scaling up a Redis cluster or replication group using
--   <tt>ModifyCacheCluster</tt> or <tt>ModifyReplicationGroup</tt>, use a
--   value from this list for the <tt>CacheNodeType</tt> parameter.
listAllowedNodeTypeModificationsResponse_scaleUpModifications :: Lens' ListAllowedNodeTypeModificationsResponse (Maybe [Text])

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group. When scaling
--   down a Redis cluster or replication group using ModifyCacheCluster or
--   ModifyReplicationGroup, use a value from this list for the
--   CacheNodeType parameter.
listAllowedNodeTypeModificationsResponse_scaleDownModifications :: Lens' ListAllowedNodeTypeModificationsResponse (Maybe [Text])

-- | The response's http status code.
listAllowedNodeTypeModificationsResponse_httpStatus :: Lens' ListAllowedNodeTypeModificationsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance GHC.Show.Show Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance GHC.Read.Read Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance GHC.Classes.Eq Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance GHC.Generics.Generic Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModificationsResponse
instance GHC.Show.Show Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModificationsResponse
instance GHC.Read.Read Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModificationsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModificationsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModificationsResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance Control.DeepSeq.NFData Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.ListAllowedNodeTypeModifications.ListAllowedNodeTypeModifications


-- | Dynamically increases the number of replicas in a Redis (cluster mode
--   disabled) replication group or the number of replica nodes in one or
--   more node groups (shards) of a Redis (cluster mode enabled)
--   replication group. This operation is performed with no cluster down
--   time.
module Amazonka.ElastiCache.IncreaseReplicaCount

-- | <i>See:</i> <a>newIncreaseReplicaCount</a> smart constructor.
data IncreaseReplicaCount
IncreaseReplicaCount' :: Maybe Int -> Maybe [ConfigureShard] -> Text -> Bool -> IncreaseReplicaCount

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
[$sel:newReplicaCount':IncreaseReplicaCount'] :: IncreaseReplicaCount -> Maybe Int

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
[$sel:replicaConfiguration:IncreaseReplicaCount'] :: IncreaseReplicaCount -> Maybe [ConfigureShard]

-- | The id of the replication group to which you want to add replica
--   nodes.
[$sel:replicationGroupId:IncreaseReplicaCount'] :: IncreaseReplicaCount -> Text

-- | If <tt>True</tt>, the number of replica nodes is increased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
[$sel:applyImmediately:IncreaseReplicaCount'] :: IncreaseReplicaCount -> Bool

-- | Create a value of <a>IncreaseReplicaCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newReplicaCount':IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_newReplicaCount</a> - The number of read
--   replica nodes you want at the completion of this operation. For Redis
--   (cluster mode disabled) replication groups, this is the number of
--   replica nodes in the replication group. For Redis (cluster mode
--   enabled) replication groups, this is the number of replica nodes in
--   each of the replication group's node groups.
--   
--   <a>$sel:replicaConfiguration:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_replicaConfiguration</a> - A list of
--   <tt>ConfigureShard</tt> objects that can be used to configure each
--   shard in a Redis (cluster mode enabled) replication group. The
--   <tt>ConfigureShard</tt> has three members: <tt>NewReplicaCount</tt>,
--   <tt>NodeGroupId</tt>, and <tt>PreferredAvailabilityZones</tt>.
--   
--   <a>$sel:replicationGroupId:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_replicationGroupId</a> - The id of the
--   replication group to which you want to add replica nodes.
--   
--   <a>$sel:applyImmediately:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_applyImmediately</a> - If <tt>True</tt>, the
--   number of replica nodes is increased immediately.
--   <tt>ApplyImmediately=False</tt> is not currently supported.
newIncreaseReplicaCount :: Text -> Bool -> IncreaseReplicaCount

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
increaseReplicaCount_newReplicaCount :: Lens' IncreaseReplicaCount (Maybe Int)

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
increaseReplicaCount_replicaConfiguration :: Lens' IncreaseReplicaCount (Maybe [ConfigureShard])

-- | The id of the replication group to which you want to add replica
--   nodes.
increaseReplicaCount_replicationGroupId :: Lens' IncreaseReplicaCount Text

-- | If <tt>True</tt>, the number of replica nodes is increased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
increaseReplicaCount_applyImmediately :: Lens' IncreaseReplicaCount Bool

-- | <i>See:</i> <a>newIncreaseReplicaCountResponse</a> smart constructor.
data IncreaseReplicaCountResponse
IncreaseReplicaCountResponse' :: Maybe ReplicationGroup -> Int -> IncreaseReplicaCountResponse
[$sel:replicationGroup:IncreaseReplicaCountResponse'] :: IncreaseReplicaCountResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:IncreaseReplicaCountResponse'] :: IncreaseReplicaCountResponse -> Int

-- | Create a value of <a>IncreaseReplicaCountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:IncreaseReplicaCountResponse'</a>,
--   <a>increaseReplicaCountResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:IncreaseReplicaCountResponse'</a>,
--   <a>increaseReplicaCountResponse_httpStatus</a> - The response's http
--   status code.
newIncreaseReplicaCountResponse :: Int -> IncreaseReplicaCountResponse

-- | Undocumented member.
increaseReplicaCountResponse_replicationGroup :: Lens' IncreaseReplicaCountResponse (Maybe ReplicationGroup)

-- | The response's http status code.
increaseReplicaCountResponse_httpStatus :: Lens' IncreaseReplicaCountResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance GHC.Show.Show Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance GHC.Read.Read Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance GHC.Classes.Eq Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance GHC.Generics.Generic Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCountResponse
instance GHC.Show.Show Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCountResponse
instance GHC.Read.Read Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCountResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCountResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance Control.DeepSeq.NFData Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCountResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance Control.DeepSeq.NFData Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.IncreaseReplicaCount.IncreaseReplicaCount


-- | Increase the number of node groups in the Global datastore
module Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup

-- | <i>See:</i> <a>newIncreaseNodeGroupsInGlobalReplicationGroup</a> smart
--   constructor.
data IncreaseNodeGroupsInGlobalReplicationGroup
IncreaseNodeGroupsInGlobalReplicationGroup' :: Maybe [RegionalConfiguration] -> Text -> Int -> Bool -> IncreaseNodeGroupsInGlobalReplicationGroup

-- | Describes the replication group IDs, the Amazon regions where they are
--   stored and the shard configuration for each that comprise the Global
--   datastore
[$sel:regionalConfigurations:IncreaseNodeGroupsInGlobalReplicationGroup'] :: IncreaseNodeGroupsInGlobalReplicationGroup -> Maybe [RegionalConfiguration]

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:IncreaseNodeGroupsInGlobalReplicationGroup'] :: IncreaseNodeGroupsInGlobalReplicationGroup -> Text

-- | The number of node groups you wish to add
[$sel:nodeGroupCount:IncreaseNodeGroupsInGlobalReplicationGroup'] :: IncreaseNodeGroupsInGlobalReplicationGroup -> Int

-- | Indicates that the process begins immediately. At present, the only
--   permitted value for this parameter is true.
[$sel:applyImmediately:IncreaseNodeGroupsInGlobalReplicationGroup'] :: IncreaseNodeGroupsInGlobalReplicationGroup -> Bool

-- | Create a value of <a>IncreaseNodeGroupsInGlobalReplicationGroup</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:regionalConfigurations:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_regionalConfigurations</a>
--   - Describes the replication group IDs, the Amazon regions where they
--   are stored and the shard configuration for each that comprise the
--   Global datastore
--   
--   
--   <a>$sel:globalReplicationGroupId:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   
--   <a>$sel:nodeGroupCount:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount</a> - The
--   number of node groups you wish to add
--   
--   
--   <a>$sel:applyImmediately:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_applyImmediately</a> -
--   Indicates that the process begins immediately. At present, the only
--   permitted value for this parameter is true.
newIncreaseNodeGroupsInGlobalReplicationGroup :: Text -> Int -> Bool -> IncreaseNodeGroupsInGlobalReplicationGroup

-- | Describes the replication group IDs, the Amazon regions where they are
--   stored and the shard configuration for each that comprise the Global
--   datastore
increaseNodeGroupsInGlobalReplicationGroup_regionalConfigurations :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup (Maybe [RegionalConfiguration])

-- | The name of the Global datastore
increaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Text

-- | The number of node groups you wish to add
increaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Int

-- | Indicates that the process begins immediately. At present, the only
--   permitted value for this parameter is true.
increaseNodeGroupsInGlobalReplicationGroup_applyImmediately :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Bool

-- | <i>See:</i>
--   <a>newIncreaseNodeGroupsInGlobalReplicationGroupResponse</a> smart
--   constructor.
data IncreaseNodeGroupsInGlobalReplicationGroupResponse
IncreaseNodeGroupsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> IncreaseNodeGroupsInGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:IncreaseNodeGroupsInGlobalReplicationGroupResponse'] :: IncreaseNodeGroupsInGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:IncreaseNodeGroupsInGlobalReplicationGroupResponse'] :: IncreaseNodeGroupsInGlobalReplicationGroupResponse -> Int

-- | Create a value of
--   <a>IncreaseNodeGroupsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:IncreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:IncreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus</a> -
--   The response's http status code.
newIncreaseNodeGroupsInGlobalReplicationGroupResponse :: Int -> IncreaseNodeGroupsInGlobalReplicationGroupResponse

-- | Undocumented member.
increaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' IncreaseNodeGroupsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
increaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus :: Lens' IncreaseNodeGroupsInGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.IncreaseNodeGroupsInGlobalReplicationGroup.IncreaseNodeGroupsInGlobalReplicationGroup


-- | Used to failover the primary region to a selected secondary region.
--   The selected secondary region will become primary, and all other
--   clusters will become secondary.
module Amazonka.ElastiCache.FailoverGlobalReplicationGroup

-- | <i>See:</i> <a>newFailoverGlobalReplicationGroup</a> smart
--   constructor.
data FailoverGlobalReplicationGroup
FailoverGlobalReplicationGroup' :: Text -> Text -> Text -> FailoverGlobalReplicationGroup

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:FailoverGlobalReplicationGroup'] :: FailoverGlobalReplicationGroup -> Text

-- | The Amazon region of the primary cluster of the Global datastore
[$sel:primaryRegion:FailoverGlobalReplicationGroup'] :: FailoverGlobalReplicationGroup -> Text

-- | The name of the primary replication group
[$sel:primaryReplicationGroupId:FailoverGlobalReplicationGroup'] :: FailoverGlobalReplicationGroup -> Text

-- | Create a value of <a>FailoverGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:globalReplicationGroupId:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   <a>$sel:primaryRegion:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_primaryRegion</a> - The Amazon
--   region of the primary cluster of the Global datastore
--   
--   <a>$sel:primaryReplicationGroupId:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_primaryReplicationGroupId</a> - The
--   name of the primary replication group
newFailoverGlobalReplicationGroup :: Text -> Text -> Text -> FailoverGlobalReplicationGroup

-- | The name of the Global datastore
failoverGlobalReplicationGroup_globalReplicationGroupId :: Lens' FailoverGlobalReplicationGroup Text

-- | The Amazon region of the primary cluster of the Global datastore
failoverGlobalReplicationGroup_primaryRegion :: Lens' FailoverGlobalReplicationGroup Text

-- | The name of the primary replication group
failoverGlobalReplicationGroup_primaryReplicationGroupId :: Lens' FailoverGlobalReplicationGroup Text

-- | <i>See:</i> <a>newFailoverGlobalReplicationGroupResponse</a> smart
--   constructor.
data FailoverGlobalReplicationGroupResponse
FailoverGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> FailoverGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:FailoverGlobalReplicationGroupResponse'] :: FailoverGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:FailoverGlobalReplicationGroupResponse'] :: FailoverGlobalReplicationGroupResponse -> Int

-- | Create a value of <a>FailoverGlobalReplicationGroupResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:FailoverGlobalReplicationGroupResponse'</a>,
--   <a>failoverGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:FailoverGlobalReplicationGroupResponse'</a>,
--   <a>failoverGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newFailoverGlobalReplicationGroupResponse :: Int -> FailoverGlobalReplicationGroupResponse

-- | Undocumented member.
failoverGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' FailoverGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
failoverGlobalReplicationGroupResponse_httpStatus :: Lens' FailoverGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.FailoverGlobalReplicationGroup.FailoverGlobalReplicationGroup


-- | Remove a secondary cluster from the Global datastore using the Global
--   datastore name. The secondary cluster will no longer receive updates
--   from the primary cluster, but will remain as a standalone cluster in
--   that Amazon region.
module Amazonka.ElastiCache.DisassociateGlobalReplicationGroup

-- | <i>See:</i> <a>newDisassociateGlobalReplicationGroup</a> smart
--   constructor.
data DisassociateGlobalReplicationGroup
DisassociateGlobalReplicationGroup' :: Text -> Text -> Text -> DisassociateGlobalReplicationGroup

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:DisassociateGlobalReplicationGroup'] :: DisassociateGlobalReplicationGroup -> Text

-- | The name of the secondary cluster you wish to remove from the Global
--   datastore
[$sel:replicationGroupId:DisassociateGlobalReplicationGroup'] :: DisassociateGlobalReplicationGroup -> Text

-- | The Amazon region of secondary cluster you wish to remove from the
--   Global datastore
[$sel:replicationGroupRegion:DisassociateGlobalReplicationGroup'] :: DisassociateGlobalReplicationGroup -> Text

-- | Create a value of <a>DisassociateGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupId:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_globalReplicationGroupId</a> -
--   The name of the Global datastore
--   
--   <a>$sel:replicationGroupId:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_replicationGroupId</a> - The
--   name of the secondary cluster you wish to remove from the Global
--   datastore
--   
--   
--   <a>$sel:replicationGroupRegion:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_replicationGroupRegion</a> - The
--   Amazon region of secondary cluster you wish to remove from the Global
--   datastore
newDisassociateGlobalReplicationGroup :: Text -> Text -> Text -> DisassociateGlobalReplicationGroup

-- | The name of the Global datastore
disassociateGlobalReplicationGroup_globalReplicationGroupId :: Lens' DisassociateGlobalReplicationGroup Text

-- | The name of the secondary cluster you wish to remove from the Global
--   datastore
disassociateGlobalReplicationGroup_replicationGroupId :: Lens' DisassociateGlobalReplicationGroup Text

-- | The Amazon region of secondary cluster you wish to remove from the
--   Global datastore
disassociateGlobalReplicationGroup_replicationGroupRegion :: Lens' DisassociateGlobalReplicationGroup Text

-- | <i>See:</i> <a>newDisassociateGlobalReplicationGroupResponse</a> smart
--   constructor.
data DisassociateGlobalReplicationGroupResponse
DisassociateGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DisassociateGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:DisassociateGlobalReplicationGroupResponse'] :: DisassociateGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:DisassociateGlobalReplicationGroupResponse'] :: DisassociateGlobalReplicationGroupResponse -> Int

-- | Create a value of <a>DisassociateGlobalReplicationGroupResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DisassociateGlobalReplicationGroupResponse'</a>,
--   <a>disassociateGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:DisassociateGlobalReplicationGroupResponse'</a>,
--   <a>disassociateGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateGlobalReplicationGroupResponse :: Int -> DisassociateGlobalReplicationGroupResponse

-- | Undocumented member.
disassociateGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DisassociateGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
disassociateGlobalReplicationGroupResponse_httpStatus :: Lens' DisassociateGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DisassociateGlobalReplicationGroup.DisassociateGlobalReplicationGroup


-- | Returns a list of users.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeUsers

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeUsers

-- | Filter to determine the list of User IDs to return.
[$sel:filters:DescribeUsers'] :: DescribeUsers -> Maybe [Filter]

-- | The Redis engine.
[$sel:engine:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | The ID of the user.
[$sel:userId:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
[$sel:marker:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
[$sel:maxRecords:DescribeUsers'] :: DescribeUsers -> Maybe Int

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeUsers'</a>, <a>describeUsers_filters</a> -
--   Filter to determine the list of User IDs to return.
--   
--   <a>$sel:engine:DescribeUsers'</a>, <a>describeUsers_engine</a> - The
--   Redis engine.
--   
--   <a>$sel:userId:DescribeUsers'</a>, <a>describeUsers_userId</a> - The
--   ID of the user.
--   
--   <a>$sel:marker:DescribeUsers'</a>, <a>describeUsers_marker</a> - An
--   optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
--   
--   <a>$sel:maxRecords:DescribeUsers'</a>, <a>describeUsers_maxRecords</a>
--   - The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
newDescribeUsers :: DescribeUsers

-- | Filter to determine the list of User IDs to return.
describeUsers_filters :: Lens' DescribeUsers (Maybe [Filter])

-- | The Redis engine.
describeUsers_engine :: Lens' DescribeUsers (Maybe Text)

-- | The ID of the user.
describeUsers_userId :: Lens' DescribeUsers (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUsers_marker :: Lens' DescribeUsers (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeUsers_maxRecords :: Lens' DescribeUsers (Maybe Int)

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe [User] -> Maybe Text -> Int -> DescribeUsersResponse

-- | A list of users.
[$sel:users:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe [User]

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
[$sel:marker:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeUsersResponse'] :: DescribeUsersResponse -> Int

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - A list of users.
--   
--   <a>$sel:marker:DescribeUsers'</a>, <a>describeUsersResponse_marker</a>
--   - An optional marker returned from a prior request. Use this marker
--   for pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | A list of users.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUsersResponse_marker :: Lens' DescribeUsersResponse (Maybe Text)

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUsers.DescribeUsersResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUsers.DescribeUsersResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUsers.DescribeUsersResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUsers.DescribeUsersResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUsers.DescribeUsersResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeUsers.DescribeUsers
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeUsers.DescribeUsers


-- | Returns a list of user groups.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeUserGroups

-- | <i>See:</i> <a>newDescribeUserGroups</a> smart constructor.
data DescribeUserGroups
DescribeUserGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeUserGroups

-- | The ID of the user group.
[$sel:userGroupId:DescribeUserGroups'] :: DescribeUserGroups -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
[$sel:marker:DescribeUserGroups'] :: DescribeUserGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
[$sel:maxRecords:DescribeUserGroups'] :: DescribeUserGroups -> Maybe Int

-- | Create a value of <a>DescribeUserGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupId:DescribeUserGroups'</a>,
--   <a>describeUserGroups_userGroupId</a> - The ID of the user group.
--   
--   <a>$sel:marker:DescribeUserGroups'</a>,
--   <a>describeUserGroups_marker</a> - An optional marker returned from a
--   prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by MaxRecords.
--   &gt;
--   
--   <a>$sel:maxRecords:DescribeUserGroups'</a>,
--   <a>describeUserGroups_maxRecords</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxRecords value, a marker is included in the response so that the
--   remaining results can be retrieved.
newDescribeUserGroups :: DescribeUserGroups

-- | The ID of the user group.
describeUserGroups_userGroupId :: Lens' DescribeUserGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUserGroups_marker :: Lens' DescribeUserGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeUserGroups_maxRecords :: Lens' DescribeUserGroups (Maybe Int)

-- | <i>See:</i> <a>newDescribeUserGroupsResponse</a> smart constructor.
data DescribeUserGroupsResponse
DescribeUserGroupsResponse' :: Maybe [UserGroup] -> Maybe Text -> Int -> DescribeUserGroupsResponse

-- | Returns a list of user groups.
[$sel:userGroups:DescribeUserGroupsResponse'] :: DescribeUserGroupsResponse -> Maybe [UserGroup]

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
[$sel:marker:DescribeUserGroupsResponse'] :: DescribeUserGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeUserGroupsResponse'] :: DescribeUserGroupsResponse -> Int

-- | Create a value of <a>DescribeUserGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroups:DescribeUserGroupsResponse'</a>,
--   <a>describeUserGroupsResponse_userGroups</a> - Returns a list of user
--   groups.
--   
--   <a>$sel:marker:DescribeUserGroups'</a>,
--   <a>describeUserGroupsResponse_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   MaxRecords. &gt;
--   
--   <a>$sel:httpStatus:DescribeUserGroupsResponse'</a>,
--   <a>describeUserGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserGroupsResponse :: Int -> DescribeUserGroupsResponse

-- | Returns a list of user groups.
describeUserGroupsResponse_userGroups :: Lens' DescribeUserGroupsResponse (Maybe [UserGroup])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUserGroupsResponse_marker :: Lens' DescribeUserGroupsResponse (Maybe Text)

-- | The response's http status code.
describeUserGroupsResponse_httpStatus :: Lens' DescribeUserGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeUserGroups.DescribeUserGroups


-- | Returns details of the update actions
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeUpdateActions

-- | <i>See:</i> <a>newDescribeUpdateActions</a> smart constructor.
data DescribeUpdateActions
DescribeUpdateActions' :: Maybe [Text] -> Maybe Text -> Maybe [UpdateActionStatus] -> Maybe Text -> Maybe TimeRangeFilter -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe Bool -> Maybe [ServiceUpdateStatus] -> DescribeUpdateActions

-- | The cache cluster IDs
[$sel:cacheClusterIds:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe [Text]

-- | The unique ID of the service update
[$sel:serviceUpdateName:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe Text

-- | The status of the update action.
[$sel:updateActionStatus:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe [UpdateActionStatus]

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
[$sel:engine:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe Text

-- | The range of time specified to search for service updates that are in
--   available status
[$sel:serviceUpdateTimeRange:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe TimeRangeFilter

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe Text

-- | The maximum number of records to include in the response
[$sel:maxRecords:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe Int

-- | The replication group IDs
[$sel:replicationGroupIds:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe [Text]

-- | Dictates whether to include node level update status in the response
[$sel:showNodeLevelUpdateStatus:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe Bool

-- | The status of the service update
[$sel:serviceUpdateStatus:DescribeUpdateActions'] :: DescribeUpdateActions -> Maybe [ServiceUpdateStatus]

-- | Create a value of <a>DescribeUpdateActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:serviceUpdateName:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:updateActionStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_updateActionStatus</a> - The status of the
--   update action.
--   
--   <a>$sel:engine:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_engine</a> - The Elasticache engine to which
--   the update applies. Either Redis or Memcached
--   
--   <a>$sel:serviceUpdateTimeRange:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateTimeRange</a> - The range of
--   time specified to search for service updates that are in available
--   status
--   
--   <a>$sel:marker:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_marker</a> - An optional marker returned from
--   a prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_maxRecords</a> - The maximum number of
--   records to include in the response
--   
--   <a>$sel:replicationGroupIds:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:showNodeLevelUpdateStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_showNodeLevelUpdateStatus</a> - Dictates
--   whether to include node level update status in the response
--   
--   <a>$sel:serviceUpdateStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateStatus</a> - The status of the
--   service update
newDescribeUpdateActions :: DescribeUpdateActions

-- | The cache cluster IDs
describeUpdateActions_cacheClusterIds :: Lens' DescribeUpdateActions (Maybe [Text])

-- | The unique ID of the service update
describeUpdateActions_serviceUpdateName :: Lens' DescribeUpdateActions (Maybe Text)

-- | The status of the update action.
describeUpdateActions_updateActionStatus :: Lens' DescribeUpdateActions (Maybe [UpdateActionStatus])

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
describeUpdateActions_engine :: Lens' DescribeUpdateActions (Maybe Text)

-- | The range of time specified to search for service updates that are in
--   available status
describeUpdateActions_serviceUpdateTimeRange :: Lens' DescribeUpdateActions (Maybe TimeRangeFilter)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeUpdateActions_marker :: Lens' DescribeUpdateActions (Maybe Text)

-- | The maximum number of records to include in the response
describeUpdateActions_maxRecords :: Lens' DescribeUpdateActions (Maybe Int)

-- | The replication group IDs
describeUpdateActions_replicationGroupIds :: Lens' DescribeUpdateActions (Maybe [Text])

-- | Dictates whether to include node level update status in the response
describeUpdateActions_showNodeLevelUpdateStatus :: Lens' DescribeUpdateActions (Maybe Bool)

-- | The status of the service update
describeUpdateActions_serviceUpdateStatus :: Lens' DescribeUpdateActions (Maybe [ServiceUpdateStatus])

-- | <i>See:</i> <a>newDescribeUpdateActionsResponse</a> smart constructor.
data DescribeUpdateActionsResponse
DescribeUpdateActionsResponse' :: Maybe [UpdateAction] -> Maybe Text -> Int -> DescribeUpdateActionsResponse

-- | Returns a list of update actions
[$sel:updateActions:DescribeUpdateActionsResponse'] :: DescribeUpdateActionsResponse -> Maybe [UpdateAction]

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeUpdateActionsResponse'] :: DescribeUpdateActionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeUpdateActionsResponse'] :: DescribeUpdateActionsResponse -> Int

-- | Create a value of <a>DescribeUpdateActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateActions:DescribeUpdateActionsResponse'</a>,
--   <a>describeUpdateActionsResponse_updateActions</a> - Returns a list of
--   update actions
--   
--   <a>$sel:marker:DescribeUpdateActions'</a>,
--   <a>describeUpdateActionsResponse_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeUpdateActionsResponse'</a>,
--   <a>describeUpdateActionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUpdateActionsResponse :: Int -> DescribeUpdateActionsResponse

-- | Returns a list of update actions
describeUpdateActionsResponse_updateActions :: Lens' DescribeUpdateActionsResponse (Maybe [UpdateAction])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeUpdateActionsResponse_marker :: Lens' DescribeUpdateActionsResponse (Maybe Text)

-- | The response's http status code.
describeUpdateActionsResponse_httpStatus :: Lens' DescribeUpdateActionsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActionsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActionsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActionsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActionsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActionsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeUpdateActions.DescribeUpdateActions


-- | Returns information about cluster or replication group snapshots. By
--   default, <tt>DescribeSnapshots</tt> lists all of your snapshots; it
--   can optionally describe a single snapshot, or just the snapshots
--   associated with a particular cache cluster.
--   
--   This operation is valid for Redis only.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeSnapshots

-- | Represents the input of a <tt>DescribeSnapshotsMessage</tt> operation.
--   
--   <i>See:</i> <a>newDescribeSnapshots</a> smart constructor.
data DescribeSnapshots
DescribeSnapshots' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> DescribeSnapshots

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
[$sel:cacheClusterId:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 50
--   
--   Constraints: minimum 20; maximum 50.
[$sel:maxRecords:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Int

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this snapshot are described.
[$sel:snapshotName:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | A Boolean value which if true, the node group (shard) configuration is
--   included in the snapshot description.
[$sel:showNodeGroupConfig:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Bool

-- | A user-supplied replication group identifier. If this parameter is
--   specified, only snapshots associated with that specific replication
--   group are described.
[$sel:replicationGroupId:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | If set to <tt>system</tt>, the output shows snapshots that were
--   automatically created by ElastiCache. If set to <tt>user</tt> the
--   output shows snapshots that were manually created. If omitted, the
--   output shows both automatically and manually created snapshots.
[$sel:snapshotSource:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | Create a value of <a>DescribeSnapshots</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:DescribeSnapshots'</a>,
--   <a>describeSnapshots_cacheClusterId</a> - A user-supplied cluster
--   identifier. If this parameter is specified, only snapshots associated
--   with that specific cluster are described.
--   
--   <a>$sel:marker:DescribeSnapshots'</a>, <a>describeSnapshots_marker</a>
--   - An optional marker returned from a prior request. Use this marker
--   for pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeSnapshots'</a>,
--   <a>describeSnapshots_maxRecords</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   <tt>MaxRecords</tt> value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   Default: 50
--   
--   Constraints: minimum 20; maximum 50.
--   
--   <a>$sel:snapshotName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotName</a> - A user-supplied name of the
--   snapshot. If this parameter is specified, only this snapshot are
--   described.
--   
--   <a>$sel:showNodeGroupConfig:DescribeSnapshots'</a>,
--   <a>describeSnapshots_showNodeGroupConfig</a> - A Boolean value which
--   if true, the node group (shard) configuration is included in the
--   snapshot description.
--   
--   <a>$sel:replicationGroupId:DescribeSnapshots'</a>,
--   <a>describeSnapshots_replicationGroupId</a> - A user-supplied
--   replication group identifier. If this parameter is specified, only
--   snapshots associated with that specific replication group are
--   described.
--   
--   <a>$sel:snapshotSource:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotSource</a> - If set to <tt>system</tt>,
--   the output shows snapshots that were automatically created by
--   ElastiCache. If set to <tt>user</tt> the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
newDescribeSnapshots :: DescribeSnapshots

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
describeSnapshots_cacheClusterId :: Lens' DescribeSnapshots (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeSnapshots_marker :: Lens' DescribeSnapshots (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 50
--   
--   Constraints: minimum 20; maximum 50.
describeSnapshots_maxRecords :: Lens' DescribeSnapshots (Maybe Int)

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this snapshot are described.
describeSnapshots_snapshotName :: Lens' DescribeSnapshots (Maybe Text)

-- | A Boolean value which if true, the node group (shard) configuration is
--   included in the snapshot description.
describeSnapshots_showNodeGroupConfig :: Lens' DescribeSnapshots (Maybe Bool)

-- | A user-supplied replication group identifier. If this parameter is
--   specified, only snapshots associated with that specific replication
--   group are described.
describeSnapshots_replicationGroupId :: Lens' DescribeSnapshots (Maybe Text)

-- | If set to <tt>system</tt>, the output shows snapshots that were
--   automatically created by ElastiCache. If set to <tt>user</tt> the
--   output shows snapshots that were manually created. If omitted, the
--   output shows both automatically and manually created snapshots.
describeSnapshots_snapshotSource :: Lens' DescribeSnapshots (Maybe Text)

-- | Represents the output of a <tt>DescribeSnapshots</tt> operation.
--   
--   <i>See:</i> <a>newDescribeSnapshotsResponse</a> smart constructor.
data DescribeSnapshotsResponse
DescribeSnapshotsResponse' :: Maybe [Snapshot] -> Maybe Text -> Int -> DescribeSnapshotsResponse

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
[$sel:snapshots:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Maybe [Snapshot]

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Int

-- | Create a value of <a>DescribeSnapshotsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshots:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_snapshots</a> - A list of snapshots. Each
--   item in the list contains detailed information about one snapshot.
--   
--   <a>$sel:marker:DescribeSnapshots'</a>,
--   <a>describeSnapshotsResponse_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSnapshotsResponse :: Int -> DescribeSnapshotsResponse

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
describeSnapshotsResponse_snapshots :: Lens' DescribeSnapshotsResponse (Maybe [Snapshot])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeSnapshotsResponse_marker :: Lens' DescribeSnapshotsResponse (Maybe Text)

-- | The response's http status code.
describeSnapshotsResponse_httpStatus :: Lens' DescribeSnapshotsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance GHC.Show.Show Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance GHC.Read.Read Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshotsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshotsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeSnapshots.DescribeSnapshots


-- | Returns details of the service updates
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeServiceUpdates

-- | <i>See:</i> <a>newDescribeServiceUpdates</a> smart constructor.
data DescribeServiceUpdates
DescribeServiceUpdates' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe [ServiceUpdateStatus] -> DescribeServiceUpdates

-- | The unique ID of the service update
[$sel:serviceUpdateName:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Text

-- | The maximum number of records to include in the response
[$sel:maxRecords:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Int

-- | The status of the service update
[$sel:serviceUpdateStatus:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe [ServiceUpdateStatus]

-- | Create a value of <a>DescribeServiceUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateName:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:marker:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_maxRecords</a> - The maximum number of
--   records to include in the response
--   
--   <a>$sel:serviceUpdateStatus:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateStatus</a> - The status of the
--   service update
newDescribeServiceUpdates :: DescribeServiceUpdates

-- | The unique ID of the service update
describeServiceUpdates_serviceUpdateName :: Lens' DescribeServiceUpdates (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeServiceUpdates_marker :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The maximum number of records to include in the response
describeServiceUpdates_maxRecords :: Lens' DescribeServiceUpdates (Maybe Int)

-- | The status of the service update
describeServiceUpdates_serviceUpdateStatus :: Lens' DescribeServiceUpdates (Maybe [ServiceUpdateStatus])

-- | <i>See:</i> <a>newDescribeServiceUpdatesResponse</a> smart
--   constructor.
data DescribeServiceUpdatesResponse
DescribeServiceUpdatesResponse' :: Maybe [ServiceUpdate] -> Maybe Text -> Int -> DescribeServiceUpdatesResponse

-- | A list of service updates
[$sel:serviceUpdates:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Maybe [ServiceUpdate]

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Int

-- | Create a value of <a>DescribeServiceUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_serviceUpdates</a> - A list of
--   service updates
--   
--   <a>$sel:marker:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdatesResponse_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServiceUpdatesResponse :: Int -> DescribeServiceUpdatesResponse

-- | A list of service updates
describeServiceUpdatesResponse_serviceUpdates :: Lens' DescribeServiceUpdatesResponse (Maybe [ServiceUpdate])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeServiceUpdatesResponse_marker :: Lens' DescribeServiceUpdatesResponse (Maybe Text)

-- | The response's http status code.
describeServiceUpdatesResponse_httpStatus :: Lens' DescribeServiceUpdatesResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Show.Show Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Read.Read Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeServiceUpdates.DescribeServiceUpdates


-- | Lists available reserved cache node offerings.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings

-- | Represents the input of a <tt>DescribeReservedCacheNodesOfferings</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesOfferings</a> smart
--   constructor.
data DescribeReservedCacheNodesOfferings
DescribeReservedCacheNodesOfferings' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeReservedCacheNodesOfferings

-- | The cache node type filter value. Use this parameter to show only the
--   available offerings matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | The product description filter value. Use this parameter to show only
--   the available offerings matching the specified product description.
[$sel:productDescription:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Int

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid Values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
[$sel:offeringType:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | Duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for a given duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
[$sel:duration:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | The offering identifier filter value. Use this parameter to show only
--   the available offering that matches the specified reservation
--   identifier.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
[$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodesOfferings'] :: DescribeReservedCacheNodesOfferings -> Maybe Text

-- | Create a value of <a>DescribeReservedCacheNodesOfferings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_cacheNodeType</a> - The cache
--   node type filter value. Use this parameter to show only the available
--   offerings matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_productDescription</a> - The
--   product description filter value. Use this parameter to show only the
--   available offerings matching the specified product description.
--   
--   <a>$sel:marker:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_maxRecords</a> - The maximum
--   number of records to include in the response. If more records exist
--   than the specified <tt>MaxRecords</tt> value, a marker is included in
--   the response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:offeringType:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_offeringType</a> - The offering
--   type filter value. Use this parameter to show only the available
--   offerings matching the specified offering type.
--   
--   Valid Values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
--   
--   <a>$sel:duration:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_duration</a> - Duration filter
--   value, specified in years or seconds. Use this parameter to show only
--   reservations for a given duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
--   
--   
--   <a>$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_reservedCacheNodesOfferingId</a>
--   - The offering identifier filter value. Use this parameter to show
--   only the available offering that matches the specified reservation
--   identifier.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
newDescribeReservedCacheNodesOfferings :: DescribeReservedCacheNodesOfferings

-- | The cache node type filter value. Use this parameter to show only the
--   available offerings matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
describeReservedCacheNodesOfferings_cacheNodeType :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The product description filter value. Use this parameter to show only
--   the available offerings matching the specified product description.
describeReservedCacheNodesOfferings_productDescription :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReservedCacheNodesOfferings_marker :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReservedCacheNodesOfferings_maxRecords :: Lens' DescribeReservedCacheNodesOfferings (Maybe Int)

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid Values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
describeReservedCacheNodesOfferings_offeringType :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | Duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for a given duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
describeReservedCacheNodesOfferings_duration :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The offering identifier filter value. Use this parameter to show only
--   the available offering that matches the specified reservation
--   identifier.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
describeReservedCacheNodesOfferings_reservedCacheNodesOfferingId :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | Represents the output of a
--   <tt>DescribeReservedCacheNodesOfferings</tt> operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesOfferingsResponse</a>
--   smart constructor.
data DescribeReservedCacheNodesOfferingsResponse
DescribeReservedCacheNodesOfferingsResponse' :: Maybe Text -> Maybe [ReservedCacheNodesOffering] -> Int -> DescribeReservedCacheNodesOfferingsResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeReservedCacheNodesOfferingsResponse'] :: DescribeReservedCacheNodesOfferingsResponse -> Maybe Text

-- | A list of reserved cache node offerings. Each element in the list
--   contains detailed information about one offering.
[$sel:reservedCacheNodesOfferings:DescribeReservedCacheNodesOfferingsResponse'] :: DescribeReservedCacheNodesOfferingsResponse -> Maybe [ReservedCacheNodesOffering]

-- | The response's http status code.
[$sel:httpStatus:DescribeReservedCacheNodesOfferingsResponse'] :: DescribeReservedCacheNodesOfferingsResponse -> Int

-- | Create a value of <a>DescribeReservedCacheNodesOfferingsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_marker</a> - Provides
--   an identifier to allow retrieval of paginated results.
--   
--   
--   <a>$sel:reservedCacheNodesOfferings:DescribeReservedCacheNodesOfferingsResponse'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_reservedCacheNodesOfferings</a>
--   - A list of reserved cache node offerings. Each element in the list
--   contains detailed information about one offering.
--   
--   <a>$sel:httpStatus:DescribeReservedCacheNodesOfferingsResponse'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeReservedCacheNodesOfferingsResponse :: Int -> DescribeReservedCacheNodesOfferingsResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeReservedCacheNodesOfferingsResponse_marker :: Lens' DescribeReservedCacheNodesOfferingsResponse (Maybe Text)

-- | A list of reserved cache node offerings. Each element in the list
--   contains detailed information about one offering.
describeReservedCacheNodesOfferingsResponse_reservedCacheNodesOfferings :: Lens' DescribeReservedCacheNodesOfferingsResponse (Maybe [ReservedCacheNodesOffering])

-- | The response's http status code.
describeReservedCacheNodesOfferingsResponse_httpStatus :: Lens' DescribeReservedCacheNodesOfferingsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferingsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferingsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferingsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferingsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferingsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeReservedCacheNodesOfferings.DescribeReservedCacheNodesOfferings


-- | Returns information about reserved cache nodes for this account, or
--   about a specified reserved cache node.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeReservedCacheNodes

-- | Represents the input of a <tt>DescribeReservedCacheNodes</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodes</a> smart constructor.
data DescribeReservedCacheNodes
DescribeReservedCacheNodes' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeReservedCacheNodes

-- | The cache node type filter value. Use this parameter to show only
--   those reservations matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | The product description filter value. Use this parameter to show only
--   those reservations matching the specified product description.
[$sel:productDescription:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Int

-- | The reserved cache node identifier filter value. Use this parameter to
--   show only the reservation that matches the specified reservation ID.
[$sel:reservedCacheNodeId:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
[$sel:offeringType:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | The duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for this duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
[$sel:duration:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | The offering identifier filter value. Use this parameter to show only
--   purchased reservations matching the specified offering identifier.
[$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodes'] :: DescribeReservedCacheNodes -> Maybe Text

-- | Create a value of <a>DescribeReservedCacheNodes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_cacheNodeType</a> - The cache node type
--   filter value. Use this parameter to show only those reservations
--   matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_productDescription</a> - The product
--   description filter value. Use this parameter to show only those
--   reservations matching the specified product description.
--   
--   <a>$sel:marker:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:reservedCacheNodeId:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_reservedCacheNodeId</a> - The reserved
--   cache node identifier filter value. Use this parameter to show only
--   the reservation that matches the specified reservation ID.
--   
--   <a>$sel:offeringType:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_offeringType</a> - The offering type
--   filter value. Use this parameter to show only the available offerings
--   matching the specified offering type.
--   
--   Valid values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
--   
--   <a>$sel:duration:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_duration</a> - The duration filter
--   value, specified in years or seconds. Use this parameter to show only
--   reservations for this duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
--   
--   <a>$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_reservedCacheNodesOfferingId</a> - The
--   offering identifier filter value. Use this parameter to show only
--   purchased reservations matching the specified offering identifier.
newDescribeReservedCacheNodes :: DescribeReservedCacheNodes

-- | The cache node type filter value. Use this parameter to show only
--   those reservations matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
describeReservedCacheNodes_cacheNodeType :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The product description filter value. Use this parameter to show only
--   those reservations matching the specified product description.
describeReservedCacheNodes_productDescription :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReservedCacheNodes_marker :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReservedCacheNodes_maxRecords :: Lens' DescribeReservedCacheNodes (Maybe Int)

-- | The reserved cache node identifier filter value. Use this parameter to
--   show only the reservation that matches the specified reservation ID.
describeReservedCacheNodes_reservedCacheNodeId :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
describeReservedCacheNodes_offeringType :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for this duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
describeReservedCacheNodes_duration :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The offering identifier filter value. Use this parameter to show only
--   purchased reservations matching the specified offering identifier.
describeReservedCacheNodes_reservedCacheNodesOfferingId :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | Represents the output of a <tt>DescribeReservedCacheNodes</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesResponse</a> smart
--   constructor.
data DescribeReservedCacheNodesResponse
DescribeReservedCacheNodesResponse' :: Maybe Text -> Maybe [ReservedCacheNode] -> Int -> DescribeReservedCacheNodesResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeReservedCacheNodesResponse'] :: DescribeReservedCacheNodesResponse -> Maybe Text

-- | A list of reserved cache nodes. Each element in the list contains
--   detailed information about one node.
[$sel:reservedCacheNodes:DescribeReservedCacheNodesResponse'] :: DescribeReservedCacheNodesResponse -> Maybe [ReservedCacheNode]

-- | The response's http status code.
[$sel:httpStatus:DescribeReservedCacheNodesResponse'] :: DescribeReservedCacheNodesResponse -> Int

-- | Create a value of <a>DescribeReservedCacheNodesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodesResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:reservedCacheNodes:DescribeReservedCacheNodesResponse'</a>,
--   <a>describeReservedCacheNodesResponse_reservedCacheNodes</a> - A list
--   of reserved cache nodes. Each element in the list contains detailed
--   information about one node.
--   
--   <a>$sel:httpStatus:DescribeReservedCacheNodesResponse'</a>,
--   <a>describeReservedCacheNodesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReservedCacheNodesResponse :: Int -> DescribeReservedCacheNodesResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeReservedCacheNodesResponse_marker :: Lens' DescribeReservedCacheNodesResponse (Maybe Text)

-- | A list of reserved cache nodes. Each element in the list contains
--   detailed information about one node.
describeReservedCacheNodesResponse_reservedCacheNodes :: Lens' DescribeReservedCacheNodesResponse (Maybe [ReservedCacheNode])

-- | The response's http status code.
describeReservedCacheNodesResponse_httpStatus :: Lens' DescribeReservedCacheNodesResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodesResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodesResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodesResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodesResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodesResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeReservedCacheNodes.DescribeReservedCacheNodes


-- | Returns information about a particular replication group. If no
--   identifier is specified, <tt>DescribeReplicationGroups</tt> returns
--   information about all replication groups.
--   
--   This operation is valid for Redis only.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeReplicationGroups

-- | Represents the input of a <tt>DescribeReplicationGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReplicationGroups</a> smart constructor.
data DescribeReplicationGroups
DescribeReplicationGroups' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeReplicationGroups

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeReplicationGroups'] :: DescribeReplicationGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeReplicationGroups'] :: DescribeReplicationGroups -> Maybe Int

-- | The identifier for the replication group to be described. This
--   parameter is not case sensitive.
--   
--   If you do not specify this parameter, information about all
--   replication groups is returned.
[$sel:replicationGroupId:DescribeReplicationGroups'] :: DescribeReplicationGroups -> Maybe Text

-- | Create a value of <a>DescribeReplicationGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:replicationGroupId:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_replicationGroupId</a> - The identifier
--   for the replication group to be described. This parameter is not case
--   sensitive.
--   
--   If you do not specify this parameter, information about all
--   replication groups is returned.
newDescribeReplicationGroups :: DescribeReplicationGroups

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReplicationGroups_marker :: Lens' DescribeReplicationGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReplicationGroups_maxRecords :: Lens' DescribeReplicationGroups (Maybe Int)

-- | The identifier for the replication group to be described. This
--   parameter is not case sensitive.
--   
--   If you do not specify this parameter, information about all
--   replication groups is returned.
describeReplicationGroups_replicationGroupId :: Lens' DescribeReplicationGroups (Maybe Text)

-- | Represents the output of a <tt>DescribeReplicationGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReplicationGroupsResponse</a> smart
--   constructor.
data DescribeReplicationGroupsResponse
DescribeReplicationGroupsResponse' :: Maybe Text -> Maybe [ReplicationGroup] -> Int -> DescribeReplicationGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeReplicationGroupsResponse'] :: DescribeReplicationGroupsResponse -> Maybe Text

-- | A list of replication groups. Each item in the list contains detailed
--   information about one replication group.
[$sel:replicationGroups:DescribeReplicationGroupsResponse'] :: DescribeReplicationGroupsResponse -> Maybe [ReplicationGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeReplicationGroupsResponse'] :: DescribeReplicationGroupsResponse -> Int

-- | Create a value of <a>DescribeReplicationGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:replicationGroups:DescribeReplicationGroupsResponse'</a>,
--   <a>describeReplicationGroupsResponse_replicationGroups</a> - A list of
--   replication groups. Each item in the list contains detailed
--   information about one replication group.
--   
--   <a>$sel:httpStatus:DescribeReplicationGroupsResponse'</a>,
--   <a>describeReplicationGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReplicationGroupsResponse :: Int -> DescribeReplicationGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeReplicationGroupsResponse_marker :: Lens' DescribeReplicationGroupsResponse (Maybe Text)

-- | A list of replication groups. Each item in the list contains detailed
--   information about one replication group.
describeReplicationGroupsResponse_replicationGroups :: Lens' DescribeReplicationGroupsResponse (Maybe [ReplicationGroup])

-- | The response's http status code.
describeReplicationGroupsResponse_httpStatus :: Lens' DescribeReplicationGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeReplicationGroups.DescribeReplicationGroups


-- | Returns information about a particular global replication group. If no
--   identifier is specified, returns information about all Global
--   datastores.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeGlobalReplicationGroups

-- | <i>See:</i> <a>newDescribeGlobalReplicationGroups</a> smart
--   constructor.
data DescribeGlobalReplicationGroups
DescribeGlobalReplicationGroups' :: Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Text -> DescribeGlobalReplicationGroups

-- | Returns the list of members that comprise the Global datastore.
[$sel:showMemberInfo:DescribeGlobalReplicationGroups'] :: DescribeGlobalReplicationGroups -> Maybe Bool

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeGlobalReplicationGroups'] :: DescribeGlobalReplicationGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
[$sel:maxRecords:DescribeGlobalReplicationGroups'] :: DescribeGlobalReplicationGroups -> Maybe Int

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:DescribeGlobalReplicationGroups'] :: DescribeGlobalReplicationGroups -> Maybe Text

-- | Create a value of <a>DescribeGlobalReplicationGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showMemberInfo:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_showMemberInfo</a> - Returns the
--   list of members that comprise the Global datastore.
--   
--   <a>$sel:marker:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_maxRecords</a> - The maximum number
--   of records to include in the response. If more records exist than the
--   specified MaxRecords value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   <a>$sel:globalReplicationGroupId:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_globalReplicationGroupId</a> - The
--   name of the Global datastore
newDescribeGlobalReplicationGroups :: DescribeGlobalReplicationGroups

-- | Returns the list of members that comprise the Global datastore.
describeGlobalReplicationGroups_showMemberInfo :: Lens' DescribeGlobalReplicationGroups (Maybe Bool)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeGlobalReplicationGroups_marker :: Lens' DescribeGlobalReplicationGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeGlobalReplicationGroups_maxRecords :: Lens' DescribeGlobalReplicationGroups (Maybe Int)

-- | The name of the Global datastore
describeGlobalReplicationGroups_globalReplicationGroupId :: Lens' DescribeGlobalReplicationGroups (Maybe Text)

-- | <i>See:</i> <a>newDescribeGlobalReplicationGroupsResponse</a> smart
--   constructor.
data DescribeGlobalReplicationGroupsResponse
DescribeGlobalReplicationGroupsResponse' :: Maybe Text -> Maybe [GlobalReplicationGroup] -> Int -> DescribeGlobalReplicationGroupsResponse

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
[$sel:marker:DescribeGlobalReplicationGroupsResponse'] :: DescribeGlobalReplicationGroupsResponse -> Maybe Text

-- | Indicates the slot configuration and global identifier for each slice
--   group.
[$sel:globalReplicationGroups:DescribeGlobalReplicationGroupsResponse'] :: DescribeGlobalReplicationGroupsResponse -> Maybe [GlobalReplicationGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeGlobalReplicationGroupsResponse'] :: DescribeGlobalReplicationGroupsResponse -> Int

-- | Create a value of <a>DescribeGlobalReplicationGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroupsResponse_marker</a> - An optional
--   marker returned from a prior request. Use this marker for pagination
--   of results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by MaxRecords. &gt;
--   
--   
--   <a>$sel:globalReplicationGroups:DescribeGlobalReplicationGroupsResponse'</a>,
--   <a>describeGlobalReplicationGroupsResponse_globalReplicationGroups</a>
--   - Indicates the slot configuration and global identifier for each
--   slice group.
--   
--   <a>$sel:httpStatus:DescribeGlobalReplicationGroupsResponse'</a>,
--   <a>describeGlobalReplicationGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeGlobalReplicationGroupsResponse :: Int -> DescribeGlobalReplicationGroupsResponse

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeGlobalReplicationGroupsResponse_marker :: Lens' DescribeGlobalReplicationGroupsResponse (Maybe Text)

-- | Indicates the slot configuration and global identifier for each slice
--   group.
describeGlobalReplicationGroupsResponse_globalReplicationGroups :: Lens' DescribeGlobalReplicationGroupsResponse (Maybe [GlobalReplicationGroup])

-- | The response's http status code.
describeGlobalReplicationGroupsResponse_httpStatus :: Lens' DescribeGlobalReplicationGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeGlobalReplicationGroups.DescribeGlobalReplicationGroups


-- | Returns events related to clusters, cache security groups, and cache
--   parameter groups. You can obtain events specific to a particular
--   cluster, cache security group, or cache parameter group by providing
--   the name as a parameter.
--   
--   By default, only the events occurring within the last hour are
--   returned; however, you can retrieve up to 14 days' worth of events if
--   necessary.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeEvents

-- | Represents the input of a <tt>DescribeEvents</tt> operation.
--   
--   <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe ISO8601 -> Maybe SourceType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ISO8601 -> Maybe Int -> DescribeEvents

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
[$sel:startTime:DescribeEvents'] :: DescribeEvents -> Maybe ISO8601

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
[$sel:sourceType:DescribeEvents'] :: DescribeEvents -> Maybe SourceType

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
[$sel:sourceIdentifier:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
[$sel:endTime:DescribeEvents'] :: DescribeEvents -> Maybe ISO8601

-- | The number of minutes worth of events to retrieve.
[$sel:duration:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
--   
--   <a>$sel:sourceIdentifier:DescribeEvents'</a>,
--   <a>describeEvents_sourceIdentifier</a> - The identifier of the event
--   source for which events are returned. If not specified, all sources
--   are included in the response.
--   
--   <a>$sel:marker:DescribeEvents'</a>, <a>describeEvents_marker</a> - An
--   optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeEvents'</a>,
--   <a>describeEvents_maxRecords</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   <tt>MaxRecords</tt> value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes worth of events to retrieve.
newDescribeEvents :: DescribeEvents

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
describeEvents_sourceIdentifier :: Lens' DescribeEvents (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeEvents_marker :: Lens' DescribeEvents (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeEvents_maxRecords :: Lens' DescribeEvents (Maybe Int)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The number of minutes worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | Represents the output of a <tt>DescribeEvents</tt> operation.
--   
--   <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe [Event] -> Maybe Text -> Int -> DescribeEventsResponse

-- | A list of events. Each element in the list contains detailed
--   information about one event.
[$sel:events:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe [Event]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeEventsResponse'] :: DescribeEventsResponse -> Int

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - A list of events. Each element
--   in the list contains detailed information about one event.
--   
--   <a>$sel:marker:DescribeEvents'</a>,
--   <a>describeEventsResponse_marker</a> - Provides an identifier to allow
--   retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | A list of events. Each element in the list contains detailed
--   information about one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | Provides an identifier to allow retrieval of paginated results.
describeEventsResponse_marker :: Lens' DescribeEventsResponse (Maybe Text)

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance GHC.Show.Show Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance GHC.Read.Read Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeEvents.DescribeEventsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeEvents.DescribeEventsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeEvents.DescribeEventsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeEvents.DescribeEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeEvents.DescribeEventsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeEvents.DescribeEvents
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeEvents.DescribeEvents


-- | Returns the default engine and system parameter information for the
--   specified cache engine.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeEngineDefaultParameters

-- | Represents the input of a <tt>DescribeEngineDefaultParameters</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeEngineDefaultParameters</a> smart
--   constructor.
data DescribeEngineDefaultParameters
DescribeEngineDefaultParameters' :: Maybe Text -> Maybe Int -> Text -> DescribeEngineDefaultParameters

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeEngineDefaultParameters'] :: DescribeEngineDefaultParameters -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeEngineDefaultParameters'] :: DescribeEngineDefaultParameters -> Maybe Int

-- | The name of the cache parameter group family.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:DescribeEngineDefaultParameters'] :: DescribeEngineDefaultParameters -> Text

-- | Create a value of <a>DescribeEngineDefaultParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_maxRecords</a> - The maximum number
--   of records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   
--   <a>$sel:cacheParameterGroupFamily:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_cacheParameterGroupFamily</a> - The
--   name of the cache parameter group family.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
newDescribeEngineDefaultParameters :: Text -> DescribeEngineDefaultParameters

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeEngineDefaultParameters_marker :: Lens' DescribeEngineDefaultParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeEngineDefaultParameters_maxRecords :: Lens' DescribeEngineDefaultParameters (Maybe Int)

-- | The name of the cache parameter group family.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
describeEngineDefaultParameters_cacheParameterGroupFamily :: Lens' DescribeEngineDefaultParameters Text

-- | <i>See:</i> <a>newDescribeEngineDefaultParametersResponse</a> smart
--   constructor.
data DescribeEngineDefaultParametersResponse
DescribeEngineDefaultParametersResponse' :: Int -> EngineDefaults -> DescribeEngineDefaultParametersResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeEngineDefaultParametersResponse'] :: DescribeEngineDefaultParametersResponse -> Int
[$sel:engineDefaults:DescribeEngineDefaultParametersResponse'] :: DescribeEngineDefaultParametersResponse -> EngineDefaults

-- | Create a value of <a>DescribeEngineDefaultParametersResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeEngineDefaultParametersResponse'</a>,
--   <a>describeEngineDefaultParametersResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:engineDefaults:DescribeEngineDefaultParametersResponse'</a>,
--   <a>describeEngineDefaultParametersResponse_engineDefaults</a> -
--   Undocumented member.
newDescribeEngineDefaultParametersResponse :: Int -> EngineDefaults -> DescribeEngineDefaultParametersResponse

-- | The response's http status code.
describeEngineDefaultParametersResponse_httpStatus :: Lens' DescribeEngineDefaultParametersResponse Int

-- | Undocumented member.
describeEngineDefaultParametersResponse_engineDefaults :: Lens' DescribeEngineDefaultParametersResponse EngineDefaults
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance GHC.Show.Show Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance GHC.Read.Read Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParametersResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParametersResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParametersResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParametersResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParametersResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeEngineDefaultParameters.DescribeEngineDefaultParameters


-- | Returns a list of cache subnet group descriptions. If a subnet group
--   name is specified, the list contains only the description of that
--   group. This is applicable only when you have ElastiCache in VPC setup.
--   All ElastiCache clusters now launch in VPC by default.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheSubnetGroups

-- | Represents the input of a <tt>DescribeCacheSubnetGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSubnetGroups</a> smart constructor.
data DescribeCacheSubnetGroups
DescribeCacheSubnetGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheSubnetGroups

-- | The name of the cache subnet group to return details for.
[$sel:cacheSubnetGroupName:DescribeCacheSubnetGroups'] :: DescribeCacheSubnetGroups -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheSubnetGroups'] :: DescribeCacheSubnetGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheSubnetGroups'] :: DescribeCacheSubnetGroups -> Maybe Int

-- | Create a value of <a>DescribeCacheSubnetGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroupName:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_cacheSubnetGroupName</a> - The name of
--   the cache subnet group to return details for.
--   
--   <a>$sel:marker:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheSubnetGroups :: DescribeCacheSubnetGroups

-- | The name of the cache subnet group to return details for.
describeCacheSubnetGroups_cacheSubnetGroupName :: Lens' DescribeCacheSubnetGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheSubnetGroups_marker :: Lens' DescribeCacheSubnetGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheSubnetGroups_maxRecords :: Lens' DescribeCacheSubnetGroups (Maybe Int)

-- | Represents the output of a <tt>DescribeCacheSubnetGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSubnetGroupsResponse</a> smart
--   constructor.
data DescribeCacheSubnetGroupsResponse
DescribeCacheSubnetGroupsResponse' :: Maybe Text -> Maybe [CacheSubnetGroup] -> Int -> DescribeCacheSubnetGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheSubnetGroupsResponse'] :: DescribeCacheSubnetGroupsResponse -> Maybe Text

-- | A list of cache subnet groups. Each element in the list contains
--   detailed information about one group.
[$sel:cacheSubnetGroups:DescribeCacheSubnetGroupsResponse'] :: DescribeCacheSubnetGroupsResponse -> Maybe [CacheSubnetGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheSubnetGroupsResponse'] :: DescribeCacheSubnetGroupsResponse -> Int

-- | Create a value of <a>DescribeCacheSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:cacheSubnetGroups:DescribeCacheSubnetGroupsResponse'</a>,
--   <a>describeCacheSubnetGroupsResponse_cacheSubnetGroups</a> - A list of
--   cache subnet groups. Each element in the list contains detailed
--   information about one group.
--   
--   <a>$sel:httpStatus:DescribeCacheSubnetGroupsResponse'</a>,
--   <a>describeCacheSubnetGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheSubnetGroupsResponse :: Int -> DescribeCacheSubnetGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheSubnetGroupsResponse_marker :: Lens' DescribeCacheSubnetGroupsResponse (Maybe Text)

-- | A list of cache subnet groups. Each element in the list contains
--   detailed information about one group.
describeCacheSubnetGroupsResponse_cacheSubnetGroups :: Lens' DescribeCacheSubnetGroupsResponse (Maybe [CacheSubnetGroup])

-- | The response's http status code.
describeCacheSubnetGroupsResponse_httpStatus :: Lens' DescribeCacheSubnetGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheSubnetGroups.DescribeCacheSubnetGroups


-- | Returns a list of cache security group descriptions. If a cache
--   security group name is specified, the list contains only the
--   description of that group. This applicable only when you have
--   ElastiCache in Classic setup
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheSecurityGroups

-- | Represents the input of a <tt>DescribeCacheSecurityGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSecurityGroups</a> smart constructor.
data DescribeCacheSecurityGroups
DescribeCacheSecurityGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheSecurityGroups

-- | The name of the cache security group to return details for.
[$sel:cacheSecurityGroupName:DescribeCacheSecurityGroups'] :: DescribeCacheSecurityGroups -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheSecurityGroups'] :: DescribeCacheSecurityGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheSecurityGroups'] :: DescribeCacheSecurityGroups -> Maybe Int

-- | Create a value of <a>DescribeCacheSecurityGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_cacheSecurityGroupName</a> - The name
--   of the cache security group to return details for.
--   
--   <a>$sel:marker:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheSecurityGroups :: DescribeCacheSecurityGroups

-- | The name of the cache security group to return details for.
describeCacheSecurityGroups_cacheSecurityGroupName :: Lens' DescribeCacheSecurityGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheSecurityGroups_marker :: Lens' DescribeCacheSecurityGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheSecurityGroups_maxRecords :: Lens' DescribeCacheSecurityGroups (Maybe Int)

-- | Represents the output of a <tt>DescribeCacheSecurityGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSecurityGroupsResponse</a> smart
--   constructor.
data DescribeCacheSecurityGroupsResponse
DescribeCacheSecurityGroupsResponse' :: Maybe [CacheSecurityGroup] -> Maybe Text -> Int -> DescribeCacheSecurityGroupsResponse

-- | A list of cache security groups. Each element in the list contains
--   detailed information about one group.
[$sel:cacheSecurityGroups:DescribeCacheSecurityGroupsResponse'] :: DescribeCacheSecurityGroupsResponse -> Maybe [CacheSecurityGroup]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheSecurityGroupsResponse'] :: DescribeCacheSecurityGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheSecurityGroupsResponse'] :: DescribeCacheSecurityGroupsResponse -> Int

-- | Create a value of <a>DescribeCacheSecurityGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroups:DescribeCacheSecurityGroupsResponse'</a>,
--   <a>describeCacheSecurityGroupsResponse_cacheSecurityGroups</a> - A
--   list of cache security groups. Each element in the list contains
--   detailed information about one group.
--   
--   <a>$sel:marker:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheSecurityGroupsResponse'</a>,
--   <a>describeCacheSecurityGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheSecurityGroupsResponse :: Int -> DescribeCacheSecurityGroupsResponse

-- | A list of cache security groups. Each element in the list contains
--   detailed information about one group.
describeCacheSecurityGroupsResponse_cacheSecurityGroups :: Lens' DescribeCacheSecurityGroupsResponse (Maybe [CacheSecurityGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheSecurityGroupsResponse_marker :: Lens' DescribeCacheSecurityGroupsResponse (Maybe Text)

-- | The response's http status code.
describeCacheSecurityGroupsResponse_httpStatus :: Lens' DescribeCacheSecurityGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheSecurityGroups.DescribeCacheSecurityGroups


-- | Returns the detailed parameter list for a particular cache parameter
--   group.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheParameters

-- | Represents the input of a <tt>DescribeCacheParameters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameters</a> smart constructor.
data DescribeCacheParameters
DescribeCacheParameters' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> DescribeCacheParameters

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheParameters'] :: DescribeCacheParameters -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheParameters'] :: DescribeCacheParameters -> Maybe Int

-- | The parameter types to return.
--   
--   Valid values: <tt>user</tt> | <tt>system</tt> |
--   <tt>engine-default</tt>
[$sel:source:DescribeCacheParameters'] :: DescribeCacheParameters -> Maybe Text

-- | The name of a specific cache parameter group to return details for.
[$sel:cacheParameterGroupName:DescribeCacheParameters'] :: DescribeCacheParameters -> Text

-- | Create a value of <a>DescribeCacheParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:source:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_source</a> - The parameter types to return.
--   
--   Valid values: <tt>user</tt> | <tt>system</tt> |
--   <tt>engine-default</tt>
--   
--   <a>$sel:cacheParameterGroupName:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_cacheParameterGroupName</a> - The name of a
--   specific cache parameter group to return details for.
newDescribeCacheParameters :: Text -> DescribeCacheParameters

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheParameters_marker :: Lens' DescribeCacheParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheParameters_maxRecords :: Lens' DescribeCacheParameters (Maybe Int)

-- | The parameter types to return.
--   
--   Valid values: <tt>user</tt> | <tt>system</tt> |
--   <tt>engine-default</tt>
describeCacheParameters_source :: Lens' DescribeCacheParameters (Maybe Text)

-- | The name of a specific cache parameter group to return details for.
describeCacheParameters_cacheParameterGroupName :: Lens' DescribeCacheParameters Text

-- | Represents the output of a <tt>DescribeCacheParameters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheParametersResponse</a> smart
--   constructor.
data DescribeCacheParametersResponse
DescribeCacheParametersResponse' :: Maybe [CacheNodeTypeSpecificParameter] -> Maybe Text -> Maybe [Parameter] -> Int -> DescribeCacheParametersResponse

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
[$sel:cacheNodeTypeSpecificParameters:DescribeCacheParametersResponse'] :: DescribeCacheParametersResponse -> Maybe [CacheNodeTypeSpecificParameter]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheParametersResponse'] :: DescribeCacheParametersResponse -> Maybe Text

-- | A list of Parameter instances.
[$sel:parameters:DescribeCacheParametersResponse'] :: DescribeCacheParametersResponse -> Maybe [Parameter]

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheParametersResponse'] :: DescribeCacheParametersResponse -> Int

-- | Create a value of <a>DescribeCacheParametersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheNodeTypeSpecificParameters:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_cacheNodeTypeSpecificParameters</a>
--   - A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
--   
--   <a>$sel:marker:DescribeCacheParameters'</a>,
--   <a>describeCacheParametersResponse_marker</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_parameters</a> - A list of
--   Parameter instances.
--   
--   <a>$sel:httpStatus:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheParametersResponse :: Int -> DescribeCacheParametersResponse

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
describeCacheParametersResponse_cacheNodeTypeSpecificParameters :: Lens' DescribeCacheParametersResponse (Maybe [CacheNodeTypeSpecificParameter])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheParametersResponse_marker :: Lens' DescribeCacheParametersResponse (Maybe Text)

-- | A list of Parameter instances.
describeCacheParametersResponse_parameters :: Lens' DescribeCacheParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeCacheParametersResponse_httpStatus :: Lens' DescribeCacheParametersResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParametersResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParametersResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParametersResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParametersResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParametersResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheParameters.DescribeCacheParameters


-- | Returns a list of cache parameter group descriptions. If a cache
--   parameter group name is specified, the list contains only the
--   descriptions for that group.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheParameterGroups

-- | Represents the input of a <tt>DescribeCacheParameterGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameterGroups</a> smart constructor.
data DescribeCacheParameterGroups
DescribeCacheParameterGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheParameterGroups

-- | The name of a specific cache parameter group to return details for.
[$sel:cacheParameterGroupName:DescribeCacheParameterGroups'] :: DescribeCacheParameterGroups -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheParameterGroups'] :: DescribeCacheParameterGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheParameterGroups'] :: DescribeCacheParameterGroups -> Maybe Int

-- | Create a value of <a>DescribeCacheParameterGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_cacheParameterGroupName</a> - The name
--   of a specific cache parameter group to return details for.
--   
--   <a>$sel:marker:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheParameterGroups :: DescribeCacheParameterGroups

-- | The name of a specific cache parameter group to return details for.
describeCacheParameterGroups_cacheParameterGroupName :: Lens' DescribeCacheParameterGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheParameterGroups_marker :: Lens' DescribeCacheParameterGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheParameterGroups_maxRecords :: Lens' DescribeCacheParameterGroups (Maybe Int)

-- | Represents the output of a <tt>DescribeCacheParameterGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameterGroupsResponse</a> smart
--   constructor.
data DescribeCacheParameterGroupsResponse
DescribeCacheParameterGroupsResponse' :: Maybe [CacheParameterGroup] -> Maybe Text -> Int -> DescribeCacheParameterGroupsResponse

-- | A list of cache parameter groups. Each element in the list contains
--   detailed information about one cache parameter group.
[$sel:cacheParameterGroups:DescribeCacheParameterGroupsResponse'] :: DescribeCacheParameterGroupsResponse -> Maybe [CacheParameterGroup]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheParameterGroupsResponse'] :: DescribeCacheParameterGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheParameterGroupsResponse'] :: DescribeCacheParameterGroupsResponse -> Int

-- | Create a value of <a>DescribeCacheParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheParameterGroups:DescribeCacheParameterGroupsResponse'</a>,
--   <a>describeCacheParameterGroupsResponse_cacheParameterGroups</a> - A
--   list of cache parameter groups. Each element in the list contains
--   detailed information about one cache parameter group.
--   
--   <a>$sel:marker:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheParameterGroupsResponse'</a>,
--   <a>describeCacheParameterGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeCacheParameterGroupsResponse :: Int -> DescribeCacheParameterGroupsResponse

-- | A list of cache parameter groups. Each element in the list contains
--   detailed information about one cache parameter group.
describeCacheParameterGroupsResponse_cacheParameterGroups :: Lens' DescribeCacheParameterGroupsResponse (Maybe [CacheParameterGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheParameterGroupsResponse_marker :: Lens' DescribeCacheParameterGroupsResponse (Maybe Text)

-- | The response's http status code.
describeCacheParameterGroupsResponse_httpStatus :: Lens' DescribeCacheParameterGroupsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroupsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroupsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroupsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheParameterGroups.DescribeCacheParameterGroups


-- | Returns a list of the available cache engines and their versions.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheEngineVersions

-- | Represents the input of a <tt>DescribeCacheEngineVersions</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheEngineVersions</a> smart constructor.
data DescribeCacheEngineVersions
DescribeCacheEngineVersions' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheEngineVersions

-- | The cache engine version to return.
--   
--   Example: <tt>1.4.14</tt>
[$sel:engineVersion:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Text

-- | The name of a specific cache parameter group family to return details
--   for.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   Constraints:
--   
--   <ul>
--   <li>Must be 1 to 255 alphanumeric characters</li>
--   <li>First character must be a letter</li>
--   <li>Cannot end with a hyphen or contain two consecutive hyphens</li>
--   </ul>
[$sel:cacheParameterGroupFamily:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Text

-- | If <tt>true</tt>, specifies that only the default version of the
--   specified engine or engine and major version combination is to be
--   returned.
[$sel:defaultOnly:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Bool

-- | The cache engine to return. Valid values: <tt>memcached</tt> |
--   <tt>redis</tt>
[$sel:engine:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheEngineVersions'] :: DescribeCacheEngineVersions -> Maybe Int

-- | Create a value of <a>DescribeCacheEngineVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_engineVersion</a> - The cache engine
--   version to return.
--   
--   Example: <tt>1.4.14</tt>
--   
--   <a>$sel:cacheParameterGroupFamily:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_cacheParameterGroupFamily</a> - The
--   name of a specific cache parameter group family to return details for.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   Constraints:
--   
--   <ul>
--   <li>Must be 1 to 255 alphanumeric characters</li>
--   <li>First character must be a letter</li>
--   <li>Cannot end with a hyphen or contain two consecutive hyphens</li>
--   </ul>
--   
--   <a>$sel:defaultOnly:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_defaultOnly</a> - If <tt>true</tt>,
--   specifies that only the default version of the specified engine or
--   engine and major version combination is to be returned.
--   
--   <a>$sel:engine:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_engine</a> - The cache engine to
--   return. Valid values: <tt>memcached</tt> | <tt>redis</tt>
--   
--   <a>$sel:marker:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheEngineVersions :: DescribeCacheEngineVersions

-- | The cache engine version to return.
--   
--   Example: <tt>1.4.14</tt>
describeCacheEngineVersions_engineVersion :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | The name of a specific cache parameter group family to return details
--   for.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   Constraints:
--   
--   <ul>
--   <li>Must be 1 to 255 alphanumeric characters</li>
--   <li>First character must be a letter</li>
--   <li>Cannot end with a hyphen or contain two consecutive hyphens</li>
--   </ul>
describeCacheEngineVersions_cacheParameterGroupFamily :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | If <tt>true</tt>, specifies that only the default version of the
--   specified engine or engine and major version combination is to be
--   returned.
describeCacheEngineVersions_defaultOnly :: Lens' DescribeCacheEngineVersions (Maybe Bool)

-- | The cache engine to return. Valid values: <tt>memcached</tt> |
--   <tt>redis</tt>
describeCacheEngineVersions_engine :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheEngineVersions_marker :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheEngineVersions_maxRecords :: Lens' DescribeCacheEngineVersions (Maybe Int)

-- | Represents the output of a DescribeCacheEngineVersions operation.
--   
--   <i>See:</i> <a>newDescribeCacheEngineVersionsResponse</a> smart
--   constructor.
data DescribeCacheEngineVersionsResponse
DescribeCacheEngineVersionsResponse' :: Maybe [CacheEngineVersion] -> Maybe Text -> Int -> DescribeCacheEngineVersionsResponse

-- | A list of cache engine version details. Each element in the list
--   contains detailed information about one cache engine version.
[$sel:cacheEngineVersions:DescribeCacheEngineVersionsResponse'] :: DescribeCacheEngineVersionsResponse -> Maybe [CacheEngineVersion]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheEngineVersionsResponse'] :: DescribeCacheEngineVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheEngineVersionsResponse'] :: DescribeCacheEngineVersionsResponse -> Int

-- | Create a value of <a>DescribeCacheEngineVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheEngineVersions:DescribeCacheEngineVersionsResponse'</a>,
--   <a>describeCacheEngineVersionsResponse_cacheEngineVersions</a> - A
--   list of cache engine version details. Each element in the list
--   contains detailed information about one cache engine version.
--   
--   <a>$sel:marker:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersionsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheEngineVersionsResponse'</a>,
--   <a>describeCacheEngineVersionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheEngineVersionsResponse :: Int -> DescribeCacheEngineVersionsResponse

-- | A list of cache engine version details. Each element in the list
--   contains detailed information about one cache engine version.
describeCacheEngineVersionsResponse_cacheEngineVersions :: Lens' DescribeCacheEngineVersionsResponse (Maybe [CacheEngineVersion])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheEngineVersionsResponse_marker :: Lens' DescribeCacheEngineVersionsResponse (Maybe Text)

-- | The response's http status code.
describeCacheEngineVersionsResponse_httpStatus :: Lens' DescribeCacheEngineVersionsResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersionsResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersionsResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersionsResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheEngineVersions.DescribeCacheEngineVersions


-- | Returns information about all provisioned clusters if no cluster
--   identifier is specified, or about a specific cache cluster if a
--   cluster identifier is supplied.
--   
--   By default, abbreviated information about the clusters is returned.
--   You can use the optional <i>ShowCacheNodeInfo</i> flag to retrieve
--   detailed information about the cache nodes associated with the
--   clusters. These details include the DNS address and port for the cache
--   node endpoint.
--   
--   If the cluster is in the <i>creating</i> state, only cluster-level
--   information is displayed until all of the nodes are successfully
--   provisioned.
--   
--   If the cluster is in the <i>deleting</i> state, only cluster-level
--   information is displayed.
--   
--   If cache nodes are currently being added to the cluster, node endpoint
--   information and creation time for the additional nodes are not
--   displayed until they are completely provisioned. When the cluster
--   state is <i>available</i>, the cluster is ready for use.
--   
--   If cache nodes are currently being removed from the cluster, no
--   endpoint information for the removed nodes is displayed.
--   
--   This operation returns paginated results.
module Amazonka.ElastiCache.DescribeCacheClusters

-- | Represents the input of a <tt>DescribeCacheClusters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheClusters</a> smart constructor.
data DescribeCacheClusters
DescribeCacheClusters' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> DescribeCacheClusters

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to show only nodes (API/CLI:
--   clusters) that are not members of a replication group. In practice,
--   this mean Memcached and single node Redis clusters.
[$sel:showCacheClustersNotInReplicationGroups:DescribeCacheClusters'] :: DescribeCacheClusters -> Maybe Bool

-- | The user-supplied cluster identifier. If this parameter is specified,
--   only information about that specific cluster is returned. This
--   parameter isn't case sensitive.
[$sel:cacheClusterId:DescribeCacheClusters'] :: DescribeCacheClusters -> Maybe Text

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
[$sel:marker:DescribeCacheClusters'] :: DescribeCacheClusters -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
[$sel:maxRecords:DescribeCacheClusters'] :: DescribeCacheClusters -> Maybe Int

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to retrieve information about
--   the individual cache nodes.
[$sel:showCacheNodeInfo:DescribeCacheClusters'] :: DescribeCacheClusters -> Maybe Bool

-- | Create a value of <a>DescribeCacheClusters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:showCacheClustersNotInReplicationGroups:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_showCacheClustersNotInReplicationGroups</a> -
--   An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to show only nodes (API/CLI:
--   clusters) that are not members of a replication group. In practice,
--   this mean Memcached and single node Redis clusters.
--   
--   <a>$sel:cacheClusterId:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_cacheClusterId</a> - The user-supplied
--   cluster identifier. If this parameter is specified, only information
--   about that specific cluster is returned. This parameter isn't case
--   sensitive.
--   
--   <a>$sel:marker:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_marker</a> - An optional marker returned from
--   a prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:showCacheNodeInfo:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_showCacheNodeInfo</a> - An optional flag that
--   can be included in the <tt>DescribeCacheCluster</tt> request to
--   retrieve information about the individual cache nodes.
newDescribeCacheClusters :: DescribeCacheClusters

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to show only nodes (API/CLI:
--   clusters) that are not members of a replication group. In practice,
--   this mean Memcached and single node Redis clusters.
describeCacheClusters_showCacheClustersNotInReplicationGroups :: Lens' DescribeCacheClusters (Maybe Bool)

-- | The user-supplied cluster identifier. If this parameter is specified,
--   only information about that specific cluster is returned. This
--   parameter isn't case sensitive.
describeCacheClusters_cacheClusterId :: Lens' DescribeCacheClusters (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheClusters_marker :: Lens' DescribeCacheClusters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheClusters_maxRecords :: Lens' DescribeCacheClusters (Maybe Int)

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to retrieve information about
--   the individual cache nodes.
describeCacheClusters_showCacheNodeInfo :: Lens' DescribeCacheClusters (Maybe Bool)

-- | Represents the output of a <tt>DescribeCacheClusters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheClustersResponse</a> smart constructor.
data DescribeCacheClustersResponse
DescribeCacheClustersResponse' :: Maybe [CacheCluster] -> Maybe Text -> Int -> DescribeCacheClustersResponse

-- | A list of clusters. Each item in the list contains detailed
--   information about one cluster.
[$sel:cacheClusters:DescribeCacheClustersResponse'] :: DescribeCacheClustersResponse -> Maybe [CacheCluster]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:marker:DescribeCacheClustersResponse'] :: DescribeCacheClustersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCacheClustersResponse'] :: DescribeCacheClustersResponse -> Int

-- | Create a value of <a>DescribeCacheClustersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusters:DescribeCacheClustersResponse'</a>,
--   <a>describeCacheClustersResponse_cacheClusters</a> - A list of
--   clusters. Each item in the list contains detailed information about
--   one cluster.
--   
--   <a>$sel:marker:DescribeCacheClusters'</a>,
--   <a>describeCacheClustersResponse_marker</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheClustersResponse'</a>,
--   <a>describeCacheClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCacheClustersResponse :: Int -> DescribeCacheClustersResponse

-- | A list of clusters. Each item in the list contains detailed
--   information about one cluster.
describeCacheClustersResponse_cacheClusters :: Lens' DescribeCacheClustersResponse (Maybe [CacheCluster])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheClustersResponse_marker :: Lens' DescribeCacheClustersResponse (Maybe Text)

-- | The response's http status code.
describeCacheClustersResponse_httpStatus :: Lens' DescribeCacheClustersResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance GHC.Generics.Generic Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClustersResponse
instance GHC.Show.Show Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClustersResponse
instance GHC.Read.Read Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClustersResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClustersResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClustersResponse
instance Amazonka.Pager.AWSPager Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DescribeCacheClusters.DescribeCacheClusters


-- | For Redis engine version 6.x onwards: Deletes a user group. The user
--   group must first be disassociated from the replication group before it
--   can be deleted. For more information, see <a>Using Role Based Access
--   Control (RBAC)</a>.
module Amazonka.ElastiCache.DeleteUserGroup

-- | <i>See:</i> <a>newDeleteUserGroup</a> smart constructor.
data DeleteUserGroup
DeleteUserGroup' :: Text -> DeleteUserGroup

-- | The ID of the user group.
[$sel:userGroupId:DeleteUserGroup'] :: DeleteUserGroup -> Text

-- | Create a value of <a>DeleteUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupId:DeleteUserGroup'</a>,
--   <a>deleteUserGroup_userGroupId</a> - The ID of the user group.
newDeleteUserGroup :: Text -> DeleteUserGroup

-- | The ID of the user group.
deleteUserGroup_userGroupId :: Lens' DeleteUserGroup Text

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:UserGroup'] :: UserGroup -> Maybe Text

-- | The list of user IDs that belong to the user group.
[$sel:userIds:UserGroup'] :: UserGroup -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the user group.
[$sel:arn:UserGroup'] :: UserGroup -> Maybe Text

-- | The ID of the user group.
[$sel:userGroupId:UserGroup'] :: UserGroup -> Maybe Text

-- | The current supported value is Redis.
[$sel:engine:UserGroup'] :: UserGroup -> Maybe Text

-- | A list of updates being applied to the user group.
[$sel:pendingChanges:UserGroup'] :: UserGroup -> Maybe UserGroupPendingChanges

-- | A list of replication groups that the user group can access.
[$sel:replicationGroups:UserGroup'] :: UserGroup -> Maybe [Text]

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteUserGroup.DeleteUserGroup


-- | For Redis engine version 6.x onwards: Deletes a user. The user will be
--   removed from all user groups and in turn removed from all replication
--   groups. For more information, see <a>Using Role Based Access Control
--   (RBAC)</a>.
module Amazonka.ElastiCache.DeleteUser

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> DeleteUser

-- | The ID of the user.
[$sel:userId:DeleteUser'] :: DeleteUser -> Text

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:DeleteUser'</a>, <a>deleteUser_userId</a> - The ID of
--   the user.
newDeleteUser :: Text -> DeleteUser

-- | The ID of the user.
deleteUser_userId :: Lens' DeleteUser Text

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Returns a list of the user group IDs the user belongs to.
[$sel:userGroupIds:User'] :: User -> Maybe [Text]

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | The current supported value is Redis.
[$sel:engine:User'] :: User -> Maybe Text

-- | The username of the user.
[$sel:userName:User'] :: User -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The ID of the user.
[$sel:userId:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteUser.DeleteUser
instance GHC.Show.Show Amazonka.ElastiCache.DeleteUser.DeleteUser
instance GHC.Read.Read Amazonka.ElastiCache.DeleteUser.DeleteUser
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteUser.DeleteUser
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteUser.DeleteUser


-- | Deletes an existing snapshot. When you receive a successful response
--   from this operation, ElastiCache immediately begins deleting the
--   snapshot; you cannot cancel or revert this operation.
--   
--   This operation is valid for Redis only.
module Amazonka.ElastiCache.DeleteSnapshot

-- | Represents the input of a <tt>DeleteSnapshot</tt> operation.
--   
--   <i>See:</i> <a>newDeleteSnapshot</a> smart constructor.
data DeleteSnapshot
DeleteSnapshot' :: Text -> DeleteSnapshot

-- | The name of the snapshot to be deleted.
[$sel:snapshotName:DeleteSnapshot'] :: DeleteSnapshot -> Text

-- | Create a value of <a>DeleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotName:DeleteSnapshot'</a>,
--   <a>deleteSnapshot_snapshotName</a> - The name of the snapshot to be
--   deleted.
newDeleteSnapshot :: Text -> DeleteSnapshot

-- | The name of the snapshot to be deleted.
deleteSnapshot_snapshotName :: Lens' DeleteSnapshot Text

-- | <i>See:</i> <a>newDeleteSnapshotResponse</a> smart constructor.
data DeleteSnapshotResponse
DeleteSnapshotResponse' :: Maybe Snapshot -> Int -> DeleteSnapshotResponse
[$sel:snapshot:DeleteSnapshotResponse'] :: DeleteSnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:DeleteSnapshotResponse'] :: DeleteSnapshotResponse -> Int

-- | Create a value of <a>DeleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSnapshotResponse :: Int -> DeleteSnapshotResponse

-- | Undocumented member.
deleteSnapshotResponse_snapshot :: Lens' DeleteSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
deleteSnapshotResponse_httpStatus :: Lens' DeleteSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance GHC.Show.Show Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance GHC.Read.Read Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteSnapshot.DeleteSnapshot


-- | Deletes an existing replication group. By default, this operation
--   deletes the entire replication group, including the primary/primaries
--   and all of the read replicas. If the replication group has only one
--   primary, you can optionally delete only the read replicas, while
--   retaining the primary by setting <tt>RetainPrimaryCluster=true</tt>.
--   
--   When you receive a successful response from this operation, Amazon
--   ElastiCache immediately begins deleting the selected resources; you
--   cannot cancel or revert this operation.
--   
--   This operation is valid for Redis only.
module Amazonka.ElastiCache.DeleteReplicationGroup

-- | Represents the input of a <tt>DeleteReplicationGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteReplicationGroup</a> smart constructor.
data DeleteReplicationGroup
DeleteReplicationGroup' :: Maybe Text -> Maybe Bool -> Text -> DeleteReplicationGroup

-- | The name of a final node group (shard) snapshot. ElastiCache creates
--   the snapshot from the primary node in the cluster, rather than one of
--   the replicas; this is to ensure that it captures the freshest data.
--   After the final snapshot is taken, the replication group is
--   immediately deleted.
[$sel:finalSnapshotIdentifier:DeleteReplicationGroup'] :: DeleteReplicationGroup -> Maybe Text

-- | If set to <tt>true</tt>, all of the read replicas are deleted, but the
--   primary node is retained.
[$sel:retainPrimaryCluster:DeleteReplicationGroup'] :: DeleteReplicationGroup -> Maybe Bool

-- | The identifier for the cluster to be deleted. This parameter is not
--   case sensitive.
[$sel:replicationGroupId:DeleteReplicationGroup'] :: DeleteReplicationGroup -> Text

-- | Create a value of <a>DeleteReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotIdentifier:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_finalSnapshotIdentifier</a> - The name of a
--   final node group (shard) snapshot. ElastiCache creates the snapshot
--   from the primary node in the cluster, rather than one of the replicas;
--   this is to ensure that it captures the freshest data. After the final
--   snapshot is taken, the replication group is immediately deleted.
--   
--   <a>$sel:retainPrimaryCluster:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_retainPrimaryCluster</a> - If set to
--   <tt>true</tt>, all of the read replicas are deleted, but the primary
--   node is retained.
--   
--   <a>$sel:replicationGroupId:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_replicationGroupId</a> - The identifier for
--   the cluster to be deleted. This parameter is not case sensitive.
newDeleteReplicationGroup :: Text -> DeleteReplicationGroup

-- | The name of a final node group (shard) snapshot. ElastiCache creates
--   the snapshot from the primary node in the cluster, rather than one of
--   the replicas; this is to ensure that it captures the freshest data.
--   After the final snapshot is taken, the replication group is
--   immediately deleted.
deleteReplicationGroup_finalSnapshotIdentifier :: Lens' DeleteReplicationGroup (Maybe Text)

-- | If set to <tt>true</tt>, all of the read replicas are deleted, but the
--   primary node is retained.
deleteReplicationGroup_retainPrimaryCluster :: Lens' DeleteReplicationGroup (Maybe Bool)

-- | The identifier for the cluster to be deleted. This parameter is not
--   case sensitive.
deleteReplicationGroup_replicationGroupId :: Lens' DeleteReplicationGroup Text

-- | <i>See:</i> <a>newDeleteReplicationGroupResponse</a> smart
--   constructor.
data DeleteReplicationGroupResponse
DeleteReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> DeleteReplicationGroupResponse
[$sel:replicationGroup:DeleteReplicationGroupResponse'] :: DeleteReplicationGroupResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteReplicationGroupResponse'] :: DeleteReplicationGroupResponse -> Int

-- | Create a value of <a>DeleteReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:DeleteReplicationGroupResponse'</a>,
--   <a>deleteReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DeleteReplicationGroupResponse'</a>,
--   <a>deleteReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteReplicationGroupResponse :: Int -> DeleteReplicationGroupResponse

-- | Undocumented member.
deleteReplicationGroupResponse_replicationGroup :: Lens' DeleteReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
deleteReplicationGroupResponse_httpStatus :: Lens' DeleteReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteReplicationGroup.DeleteReplicationGroup


-- | Deleting a Global datastore is a two-step process:
--   
--   <ul>
--   <li>First, you must DisassociateGlobalReplicationGroup to remove the
--   secondary clusters in the Global datastore.</li>
--   <li>Once the Global datastore contains only the primary cluster, you
--   can use the <tt>DeleteGlobalReplicationGroup</tt> API to delete the
--   Global datastore while retainining the primary cluster using
--   <tt>RetainPrimaryReplicationGroup=true</tt>.</li>
--   </ul>
--   
--   Since the Global Datastore has only a primary cluster, you can delete
--   the Global Datastore while retaining the primary by setting
--   <tt>RetainPrimaryReplicationGroup=true</tt>. The primary cluster is
--   never deleted when deleting a Global Datastore. It can only be deleted
--   when it no longer is associated with any Global Datastore.
--   
--   When you receive a successful response from this operation, Amazon
--   ElastiCache immediately begins deleting the selected resources; you
--   cannot cancel or revert this operation.
module Amazonka.ElastiCache.DeleteGlobalReplicationGroup

-- | <i>See:</i> <a>newDeleteGlobalReplicationGroup</a> smart constructor.
data DeleteGlobalReplicationGroup
DeleteGlobalReplicationGroup' :: Text -> Bool -> DeleteGlobalReplicationGroup

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:DeleteGlobalReplicationGroup'] :: DeleteGlobalReplicationGroup -> Text

-- | The primary replication group is retained as a standalone replication
--   group.
[$sel:retainPrimaryReplicationGroup:DeleteGlobalReplicationGroup'] :: DeleteGlobalReplicationGroup -> Bool

-- | Create a value of <a>DeleteGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:globalReplicationGroupId:DeleteGlobalReplicationGroup'</a>,
--   <a>deleteGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   
--   <a>$sel:retainPrimaryReplicationGroup:DeleteGlobalReplicationGroup'</a>,
--   <a>deleteGlobalReplicationGroup_retainPrimaryReplicationGroup</a> -
--   The primary replication group is retained as a standalone replication
--   group.
newDeleteGlobalReplicationGroup :: Text -> Bool -> DeleteGlobalReplicationGroup

-- | The name of the Global datastore
deleteGlobalReplicationGroup_globalReplicationGroupId :: Lens' DeleteGlobalReplicationGroup Text

-- | The primary replication group is retained as a standalone replication
--   group.
deleteGlobalReplicationGroup_retainPrimaryReplicationGroup :: Lens' DeleteGlobalReplicationGroup Bool

-- | <i>See:</i> <a>newDeleteGlobalReplicationGroupResponse</a> smart
--   constructor.
data DeleteGlobalReplicationGroupResponse
DeleteGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DeleteGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:DeleteGlobalReplicationGroupResponse'] :: DeleteGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteGlobalReplicationGroupResponse'] :: DeleteGlobalReplicationGroupResponse -> Int

-- | Create a value of <a>DeleteGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DeleteGlobalReplicationGroupResponse'</a>,
--   <a>deleteGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteGlobalReplicationGroupResponse'</a>,
--   <a>deleteGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newDeleteGlobalReplicationGroupResponse :: Int -> DeleteGlobalReplicationGroupResponse

-- | Undocumented member.
deleteGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DeleteGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
deleteGlobalReplicationGroupResponse_httpStatus :: Lens' DeleteGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteGlobalReplicationGroup.DeleteGlobalReplicationGroup


-- | Deletes a cache subnet group.
--   
--   You cannot delete a default cache subnet group or one that is
--   associated with any clusters.
module Amazonka.ElastiCache.DeleteCacheSubnetGroup

-- | Represents the input of a <tt>DeleteCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheSubnetGroup</a> smart constructor.
data DeleteCacheSubnetGroup
DeleteCacheSubnetGroup' :: Text -> DeleteCacheSubnetGroup

-- | The name of the cache subnet group to delete.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
[$sel:cacheSubnetGroupName:DeleteCacheSubnetGroup'] :: DeleteCacheSubnetGroup -> Text

-- | Create a value of <a>DeleteCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroupName:DeleteCacheSubnetGroup'</a>,
--   <a>deleteCacheSubnetGroup_cacheSubnetGroupName</a> - The name of the
--   cache subnet group to delete.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
newDeleteCacheSubnetGroup :: Text -> DeleteCacheSubnetGroup

-- | The name of the cache subnet group to delete.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
deleteCacheSubnetGroup_cacheSubnetGroupName :: Lens' DeleteCacheSubnetGroup Text

-- | <i>See:</i> <a>newDeleteCacheSubnetGroupResponse</a> smart
--   constructor.
data DeleteCacheSubnetGroupResponse
DeleteCacheSubnetGroupResponse' :: DeleteCacheSubnetGroupResponse

-- | Create a value of <a>DeleteCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheSubnetGroupResponse :: DeleteCacheSubnetGroupResponse
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteCacheSubnetGroup.DeleteCacheSubnetGroup


-- | Deletes a cache security group.
--   
--   You cannot delete a cache security group if it is associated with any
--   clusters.
module Amazonka.ElastiCache.DeleteCacheSecurityGroup

-- | Represents the input of a <tt>DeleteCacheSecurityGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheSecurityGroup</a> smart constructor.
data DeleteCacheSecurityGroup
DeleteCacheSecurityGroup' :: Text -> DeleteCacheSecurityGroup

-- | The name of the cache security group to delete.
--   
--   You cannot delete the default security group.
[$sel:cacheSecurityGroupName:DeleteCacheSecurityGroup'] :: DeleteCacheSecurityGroup -> Text

-- | Create a value of <a>DeleteCacheSecurityGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:DeleteCacheSecurityGroup'</a>,
--   <a>deleteCacheSecurityGroup_cacheSecurityGroupName</a> - The name of
--   the cache security group to delete.
--   
--   You cannot delete the default security group.
newDeleteCacheSecurityGroup :: Text -> DeleteCacheSecurityGroup

-- | The name of the cache security group to delete.
--   
--   You cannot delete the default security group.
deleteCacheSecurityGroup_cacheSecurityGroupName :: Lens' DeleteCacheSecurityGroup Text

-- | <i>See:</i> <a>newDeleteCacheSecurityGroupResponse</a> smart
--   constructor.
data DeleteCacheSecurityGroupResponse
DeleteCacheSecurityGroupResponse' :: DeleteCacheSecurityGroupResponse

-- | Create a value of <a>DeleteCacheSecurityGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheSecurityGroupResponse :: DeleteCacheSecurityGroupResponse
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteCacheSecurityGroup.DeleteCacheSecurityGroup


-- | Deletes the specified cache parameter group. You cannot delete a cache
--   parameter group if it is associated with any cache clusters. You
--   cannot delete the default cache parameter groups in your account.
module Amazonka.ElastiCache.DeleteCacheParameterGroup

-- | Represents the input of a <tt>DeleteCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteCacheParameterGroup</a> smart constructor.
data DeleteCacheParameterGroup
DeleteCacheParameterGroup' :: Text -> DeleteCacheParameterGroup

-- | The name of the cache parameter group to delete.
--   
--   The specified cache security group must not be associated with any
--   clusters.
[$sel:cacheParameterGroupName:DeleteCacheParameterGroup'] :: DeleteCacheParameterGroup -> Text

-- | Create a value of <a>DeleteCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:DeleteCacheParameterGroup'</a>,
--   <a>deleteCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to delete.
--   
--   The specified cache security group must not be associated with any
--   clusters.
newDeleteCacheParameterGroup :: Text -> DeleteCacheParameterGroup

-- | The name of the cache parameter group to delete.
--   
--   The specified cache security group must not be associated with any
--   clusters.
deleteCacheParameterGroup_cacheParameterGroupName :: Lens' DeleteCacheParameterGroup Text

-- | <i>See:</i> <a>newDeleteCacheParameterGroupResponse</a> smart
--   constructor.
data DeleteCacheParameterGroupResponse
DeleteCacheParameterGroupResponse' :: DeleteCacheParameterGroupResponse

-- | Create a value of <a>DeleteCacheParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheParameterGroupResponse :: DeleteCacheParameterGroupResponse
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteCacheParameterGroup.DeleteCacheParameterGroup


-- | Deletes a previously provisioned cluster. <tt>DeleteCacheCluster</tt>
--   deletes all associated cache nodes, node endpoints and the cluster
--   itself. When you receive a successful response from this operation,
--   Amazon ElastiCache immediately begins deleting the cluster; you cannot
--   cancel or revert this operation.
--   
--   This operation is not valid for:
--   
--   <ul>
--   <li>Redis (cluster mode enabled) clusters</li>
--   <li>Redis (cluster mode disabled) clusters</li>
--   <li>A cluster that is the last read replica of a replication
--   group</li>
--   <li>A cluster that is the primary node of a replication group</li>
--   <li>A node group (shard) that has Multi-AZ mode enabled</li>
--   <li>A cluster from a Redis (cluster mode enabled) replication
--   group</li>
--   <li>A cluster that is not in the <tt>available</tt> state</li>
--   </ul>
module Amazonka.ElastiCache.DeleteCacheCluster

-- | Represents the input of a <tt>DeleteCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheCluster</a> smart constructor.
data DeleteCacheCluster
DeleteCacheCluster' :: Maybe Text -> Text -> DeleteCacheCluster

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. ElastiCache creates the snapshot,
--   and then deletes the cluster immediately afterward.
[$sel:finalSnapshotIdentifier:DeleteCacheCluster'] :: DeleteCacheCluster -> Maybe Text

-- | The cluster identifier for the cluster to be deleted. This parameter
--   is not case sensitive.
[$sel:cacheClusterId:DeleteCacheCluster'] :: DeleteCacheCluster -> Text

-- | Create a value of <a>DeleteCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotIdentifier:DeleteCacheCluster'</a>,
--   <a>deleteCacheCluster_finalSnapshotIdentifier</a> - The user-supplied
--   name of a final cluster snapshot. This is the unique name that
--   identifies the snapshot. ElastiCache creates the snapshot, and then
--   deletes the cluster immediately afterward.
--   
--   <a>$sel:cacheClusterId:DeleteCacheCluster'</a>,
--   <a>deleteCacheCluster_cacheClusterId</a> - The cluster identifier for
--   the cluster to be deleted. This parameter is not case sensitive.
newDeleteCacheCluster :: Text -> DeleteCacheCluster

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. ElastiCache creates the snapshot,
--   and then deletes the cluster immediately afterward.
deleteCacheCluster_finalSnapshotIdentifier :: Lens' DeleteCacheCluster (Maybe Text)

-- | The cluster identifier for the cluster to be deleted. This parameter
--   is not case sensitive.
deleteCacheCluster_cacheClusterId :: Lens' DeleteCacheCluster Text

-- | <i>See:</i> <a>newDeleteCacheClusterResponse</a> smart constructor.
data DeleteCacheClusterResponse
DeleteCacheClusterResponse' :: Maybe CacheCluster -> Int -> DeleteCacheClusterResponse
[$sel:cacheCluster:DeleteCacheClusterResponse'] :: DeleteCacheClusterResponse -> Maybe CacheCluster

-- | The response's http status code.
[$sel:httpStatus:DeleteCacheClusterResponse'] :: DeleteCacheClusterResponse -> Int

-- | Create a value of <a>DeleteCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:DeleteCacheClusterResponse'</a>,
--   <a>deleteCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteCacheClusterResponse'</a>,
--   <a>deleteCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCacheClusterResponse :: Int -> DeleteCacheClusterResponse

-- | Undocumented member.
deleteCacheClusterResponse_cacheCluster :: Lens' DeleteCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
deleteCacheClusterResponse_httpStatus :: Lens' DeleteCacheClusterResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance GHC.Generics.Generic Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheClusterResponse
instance GHC.Show.Show Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheClusterResponse
instance GHC.Read.Read Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheClusterResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DeleteCacheCluster.DeleteCacheCluster


-- | Dynamically decreases the number of replicas in a Redis (cluster mode
--   disabled) replication group or the number of replica nodes in one or
--   more node groups (shards) of a Redis (cluster mode enabled)
--   replication group. This operation is performed with no cluster down
--   time.
module Amazonka.ElastiCache.DecreaseReplicaCount

-- | <i>See:</i> <a>newDecreaseReplicaCount</a> smart constructor.
data DecreaseReplicaCount
DecreaseReplicaCount' :: Maybe Int -> Maybe [ConfigureShard] -> Maybe [Text] -> Text -> Bool -> DecreaseReplicaCount

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ is enabled:
--   1</li><li>If Multi-AZ is not enabled: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
[$sel:newReplicaCount':DecreaseReplicaCount'] :: DecreaseReplicaCount -> Maybe Int

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
[$sel:replicaConfiguration:DecreaseReplicaCount'] :: DecreaseReplicaCount -> Maybe [ConfigureShard]

-- | A list of the node ids to remove from the replication group or node
--   group (shard).
[$sel:replicasToRemove:DecreaseReplicaCount'] :: DecreaseReplicaCount -> Maybe [Text]

-- | The id of the replication group from which you want to remove replica
--   nodes.
[$sel:replicationGroupId:DecreaseReplicaCount'] :: DecreaseReplicaCount -> Text

-- | If <tt>True</tt>, the number of replica nodes is decreased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
[$sel:applyImmediately:DecreaseReplicaCount'] :: DecreaseReplicaCount -> Bool

-- | Create a value of <a>DecreaseReplicaCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newReplicaCount':DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_newReplicaCount</a> - The number of read
--   replica nodes you want at the completion of this operation. For Redis
--   (cluster mode disabled) replication groups, this is the number of
--   replica nodes in the replication group. For Redis (cluster mode
--   enabled) replication groups, this is the number of replica nodes in
--   each of the replication group's node groups.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ is enabled:
--   1</li><li>If Multi-AZ is not enabled: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
--   
--   <a>$sel:replicaConfiguration:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicaConfiguration</a> - A list of
--   <tt>ConfigureShard</tt> objects that can be used to configure each
--   shard in a Redis (cluster mode enabled) replication group. The
--   <tt>ConfigureShard</tt> has three members: <tt>NewReplicaCount</tt>,
--   <tt>NodeGroupId</tt>, and <tt>PreferredAvailabilityZones</tt>.
--   
--   <a>$sel:replicasToRemove:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicasToRemove</a> - A list of the node ids
--   to remove from the replication group or node group (shard).
--   
--   <a>$sel:replicationGroupId:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicationGroupId</a> - The id of the
--   replication group from which you want to remove replica nodes.
--   
--   <a>$sel:applyImmediately:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_applyImmediately</a> - If <tt>True</tt>, the
--   number of replica nodes is decreased immediately.
--   <tt>ApplyImmediately=False</tt> is not currently supported.
newDecreaseReplicaCount :: Text -> Bool -> DecreaseReplicaCount

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ is enabled:
--   1</li><li>If Multi-AZ is not enabled: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
decreaseReplicaCount_newReplicaCount :: Lens' DecreaseReplicaCount (Maybe Int)

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
decreaseReplicaCount_replicaConfiguration :: Lens' DecreaseReplicaCount (Maybe [ConfigureShard])

-- | A list of the node ids to remove from the replication group or node
--   group (shard).
decreaseReplicaCount_replicasToRemove :: Lens' DecreaseReplicaCount (Maybe [Text])

-- | The id of the replication group from which you want to remove replica
--   nodes.
decreaseReplicaCount_replicationGroupId :: Lens' DecreaseReplicaCount Text

-- | If <tt>True</tt>, the number of replica nodes is decreased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
decreaseReplicaCount_applyImmediately :: Lens' DecreaseReplicaCount Bool

-- | <i>See:</i> <a>newDecreaseReplicaCountResponse</a> smart constructor.
data DecreaseReplicaCountResponse
DecreaseReplicaCountResponse' :: Maybe ReplicationGroup -> Int -> DecreaseReplicaCountResponse
[$sel:replicationGroup:DecreaseReplicaCountResponse'] :: DecreaseReplicaCountResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:DecreaseReplicaCountResponse'] :: DecreaseReplicaCountResponse -> Int

-- | Create a value of <a>DecreaseReplicaCountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:DecreaseReplicaCountResponse'</a>,
--   <a>decreaseReplicaCountResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DecreaseReplicaCountResponse'</a>,
--   <a>decreaseReplicaCountResponse_httpStatus</a> - The response's http
--   status code.
newDecreaseReplicaCountResponse :: Int -> DecreaseReplicaCountResponse

-- | Undocumented member.
decreaseReplicaCountResponse_replicationGroup :: Lens' DecreaseReplicaCountResponse (Maybe ReplicationGroup)

-- | The response's http status code.
decreaseReplicaCountResponse_httpStatus :: Lens' DecreaseReplicaCountResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance GHC.Show.Show Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance GHC.Read.Read Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance GHC.Classes.Eq Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance GHC.Generics.Generic Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCountResponse
instance GHC.Show.Show Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCountResponse
instance GHC.Read.Read Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCountResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCountResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCountResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DecreaseReplicaCount.DecreaseReplicaCount


-- | Decreases the number of node groups in a Global datastore
module Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup

-- | <i>See:</i> <a>newDecreaseNodeGroupsInGlobalReplicationGroup</a> smart
--   constructor.
data DecreaseNodeGroupsInGlobalReplicationGroup
DecreaseNodeGroupsInGlobalReplicationGroup' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> Bool -> DecreaseNodeGroupsInGlobalReplicationGroup

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to
--   remove from the cluster. ElastiCache for Redis will attempt to remove
--   all node groups listed by GlobalNodeGroupsToRemove from the cluster.
[$sel:globalNodeGroupsToRemove:DecreaseNodeGroupsInGlobalReplicationGroup'] :: DecreaseNodeGroupsInGlobalReplicationGroup -> Maybe [Text]

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to
--   retain from the cluster. ElastiCache for Redis will attempt to retain
--   all node groups listed by GlobalNodeGroupsToRetain from the cluster.
[$sel:globalNodeGroupsToRetain:DecreaseNodeGroupsInGlobalReplicationGroup'] :: DecreaseNodeGroupsInGlobalReplicationGroup -> Maybe [Text]

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:DecreaseNodeGroupsInGlobalReplicationGroup'] :: DecreaseNodeGroupsInGlobalReplicationGroup -> Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration
[$sel:nodeGroupCount:DecreaseNodeGroupsInGlobalReplicationGroup'] :: DecreaseNodeGroupsInGlobalReplicationGroup -> Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is true.
[$sel:applyImmediately:DecreaseNodeGroupsInGlobalReplicationGroup'] :: DecreaseNodeGroupsInGlobalReplicationGroup -> Bool

-- | Create a value of <a>DecreaseNodeGroupsInGlobalReplicationGroup</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalNodeGroupsToRemove:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRemove</a>
--   - If the value of NodeGroupCount is less than the current number of
--   node groups (shards), then either NodeGroupsToRemove or
--   NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of
--   NodeGroupIds to remove from the cluster. ElastiCache for Redis will
--   attempt to remove all node groups listed by GlobalNodeGroupsToRemove
--   from the cluster.
--   
--   
--   <a>$sel:globalNodeGroupsToRetain:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRetain</a>
--   - If the value of NodeGroupCount is less than the current number of
--   node groups (shards), then either NodeGroupsToRemove or
--   NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of
--   NodeGroupIds to retain from the cluster. ElastiCache for Redis will
--   attempt to retain all node groups listed by GlobalNodeGroupsToRetain
--   from the cluster.
--   
--   
--   <a>$sel:globalReplicationGroupId:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   
--   <a>$sel:nodeGroupCount:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount</a> - The
--   number of node groups (shards) that results from the modification of
--   the shard configuration
--   
--   
--   <a>$sel:applyImmediately:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_applyImmediately</a> -
--   Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is true.
newDecreaseNodeGroupsInGlobalReplicationGroup :: Text -> Int -> Bool -> DecreaseNodeGroupsInGlobalReplicationGroup

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to
--   remove from the cluster. ElastiCache for Redis will attempt to remove
--   all node groups listed by GlobalNodeGroupsToRemove from the cluster.
decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRemove :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup (Maybe [Text])

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to
--   retain from the cluster. ElastiCache for Redis will attempt to retain
--   all node groups listed by GlobalNodeGroupsToRetain from the cluster.
decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRetain :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup (Maybe [Text])

-- | The name of the Global datastore
decreaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration
decreaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is true.
decreaseNodeGroupsInGlobalReplicationGroup_applyImmediately :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Bool

-- | <i>See:</i>
--   <a>newDecreaseNodeGroupsInGlobalReplicationGroupResponse</a> smart
--   constructor.
data DecreaseNodeGroupsInGlobalReplicationGroupResponse
DecreaseNodeGroupsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DecreaseNodeGroupsInGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:DecreaseNodeGroupsInGlobalReplicationGroupResponse'] :: DecreaseNodeGroupsInGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:DecreaseNodeGroupsInGlobalReplicationGroupResponse'] :: DecreaseNodeGroupsInGlobalReplicationGroupResponse -> Int

-- | Create a value of
--   <a>DecreaseNodeGroupsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DecreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:DecreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus</a> -
--   The response's http status code.
newDecreaseNodeGroupsInGlobalReplicationGroupResponse :: Int -> DecreaseNodeGroupsInGlobalReplicationGroupResponse

-- | Undocumented member.
decreaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DecreaseNodeGroupsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
decreaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus :: Lens' DecreaseNodeGroupsInGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.DecreaseNodeGroupsInGlobalReplicationGroup.DecreaseNodeGroupsInGlobalReplicationGroup


-- | For Redis engine version 6.x onwards: Creates a Redis user group. For
--   more information, see <a>Using Role Based Access Control (RBAC)</a>
module Amazonka.ElastiCache.CreateUserGroup

-- | <i>See:</i> <a>newCreateUserGroup</a> smart constructor.
data CreateUserGroup
CreateUserGroup' :: Maybe (NonEmpty Text) -> Maybe [Tag] -> Text -> Text -> CreateUserGroup

-- | The list of user IDs that belong to the user group.
[$sel:userIds:CreateUserGroup'] :: CreateUserGroup -> Maybe (NonEmpty Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateUserGroup'] :: CreateUserGroup -> Maybe [Tag]

-- | The ID of the user group.
[$sel:userGroupId:CreateUserGroup'] :: CreateUserGroup -> Text

-- | The current supported value is Redis.
[$sel:engine:CreateUserGroup'] :: CreateUserGroup -> Text

-- | Create a value of <a>CreateUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:CreateUserGroup'</a>, <a>createUserGroup_userIds</a> -
--   The list of user IDs that belong to the user group.
--   
--   <a>$sel:tags:CreateUserGroup'</a>, <a>createUserGroup_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
--   
--   <a>$sel:userGroupId:CreateUserGroup'</a>,
--   <a>createUserGroup_userGroupId</a> - The ID of the user group.
--   
--   <a>$sel:engine:CreateUserGroup'</a>, <a>createUserGroup_engine</a> -
--   The current supported value is Redis.
newCreateUserGroup :: Text -> Text -> CreateUserGroup

-- | The list of user IDs that belong to the user group.
createUserGroup_userIds :: Lens' CreateUserGroup (Maybe (NonEmpty Text))

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUserGroup_tags :: Lens' CreateUserGroup (Maybe [Tag])

-- | The ID of the user group.
createUserGroup_userGroupId :: Lens' CreateUserGroup Text

-- | The current supported value is Redis.
createUserGroup_engine :: Lens' CreateUserGroup Text

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:UserGroup'] :: UserGroup -> Maybe Text

-- | The list of user IDs that belong to the user group.
[$sel:userIds:UserGroup'] :: UserGroup -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the user group.
[$sel:arn:UserGroup'] :: UserGroup -> Maybe Text

-- | The ID of the user group.
[$sel:userGroupId:UserGroup'] :: UserGroup -> Maybe Text

-- | The current supported value is Redis.
[$sel:engine:UserGroup'] :: UserGroup -> Maybe Text

-- | A list of updates being applied to the user group.
[$sel:pendingChanges:UserGroup'] :: UserGroup -> Maybe UserGroupPendingChanges

-- | A list of replication groups that the user group can access.
[$sel:replicationGroups:UserGroup'] :: UserGroup -> Maybe [Text]

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateUserGroup.CreateUserGroup


-- | For Redis engine version 6.x onwards: Creates a Redis user. For more
--   information, see <a>Using Role Based Access Control (RBAC)</a>.
module Amazonka.ElastiCache.CreateUser

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe (NonEmpty Text) -> Maybe Bool -> Maybe [Tag] -> Text -> Text -> Text -> Text -> CreateUser

-- | Passwords used for this user. You can create up to two passwords for
--   each user.
[$sel:passwords:CreateUser'] :: CreateUser -> Maybe (NonEmpty Text)

-- | Indicates a password is not required for this user.
[$sel:noPasswordRequired:CreateUser'] :: CreateUser -> Maybe Bool

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateUser'] :: CreateUser -> Maybe [Tag]

-- | The ID of the user.
[$sel:userId:CreateUser'] :: CreateUser -> Text

-- | The username of the user.
[$sel:userName:CreateUser'] :: CreateUser -> Text

-- | The current supported value is Redis.
[$sel:engine:CreateUser'] :: CreateUser -> Text

-- | Access permissions string used for this user.
[$sel:accessString:CreateUser'] :: CreateUser -> Text

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwords:CreateUser'</a>, <a>createUser_passwords</a> -
--   Passwords used for this user. You can create up to two passwords for
--   each user.
--   
--   <a>$sel:noPasswordRequired:CreateUser'</a>,
--   <a>createUser_noPasswordRequired</a> - Indicates a password is not
--   required for this user.
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - A list of tags
--   to be added to this resource. A tag is a key-value pair. A tag key
--   must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:userId:CreateUser'</a>, <a>createUser_userId</a> - The ID of
--   the user.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   username of the user.
--   
--   <a>$sel:engine:CreateUser'</a>, <a>createUser_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:accessString:CreateUser'</a>, <a>createUser_accessString</a> -
--   Access permissions string used for this user.
newCreateUser :: Text -> Text -> Text -> Text -> CreateUser

-- | Passwords used for this user. You can create up to two passwords for
--   each user.
createUser_passwords :: Lens' CreateUser (Maybe (NonEmpty Text))

-- | Indicates a password is not required for this user.
createUser_noPasswordRequired :: Lens' CreateUser (Maybe Bool)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUser_tags :: Lens' CreateUser (Maybe [Tag])

-- | The ID of the user.
createUser_userId :: Lens' CreateUser Text

-- | The username of the user.
createUser_userName :: Lens' CreateUser Text

-- | The current supported value is Redis.
createUser_engine :: Lens' CreateUser Text

-- | Access permissions string used for this user.
createUser_accessString :: Lens' CreateUser Text

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Returns a list of the user group IDs the user belongs to.
[$sel:userGroupIds:User'] :: User -> Maybe [Text]

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | The current supported value is Redis.
[$sel:engine:User'] :: User -> Maybe Text

-- | The username of the user.
[$sel:userName:User'] :: User -> Maybe Text

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The ID of the user.
[$sel:userId:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateUser.CreateUser
instance GHC.Show.Show Amazonka.ElastiCache.CreateUser.CreateUser
instance GHC.Read.Read Amazonka.ElastiCache.CreateUser.CreateUser
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateUser.CreateUser
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateUser.CreateUser
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateUser.CreateUser
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateUser.CreateUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateUser.CreateUser
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateUser.CreateUser
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateUser.CreateUser


-- | Creates a copy of an entire cluster or replication group at a specific
--   moment in time.
--   
--   This operation is valid for Redis only.
module Amazonka.ElastiCache.CreateSnapshot

-- | Represents the input of a <tt>CreateSnapshot</tt> operation.
--   
--   <i>See:</i> <a>newCreateSnapshot</a> smart constructor.
data CreateSnapshot
CreateSnapshot' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> CreateSnapshot

-- | The identifier of an existing cluster. The snapshot is created from
--   this cluster.
[$sel:cacheClusterId:CreateSnapshot'] :: CreateSnapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:CreateSnapshot'] :: CreateSnapshot -> Maybe Text

-- | The identifier of an existing replication group. The snapshot is
--   created from this replication group.
[$sel:replicationGroupId:CreateSnapshot'] :: CreateSnapshot -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateSnapshot'] :: CreateSnapshot -> Maybe [Tag]

-- | A name for the snapshot being created.
[$sel:snapshotName:CreateSnapshot'] :: CreateSnapshot -> Text

-- | Create a value of <a>CreateSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:CreateSnapshot'</a>,
--   <a>createSnapshot_cacheClusterId</a> - The identifier of an existing
--   cluster. The snapshot is created from this cluster.
--   
--   <a>$sel:kmsKeyId:CreateSnapshot'</a>, <a>createSnapshot_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:replicationGroupId:CreateSnapshot'</a>,
--   <a>createSnapshot_replicationGroupId</a> - The identifier of an
--   existing replication group. The snapshot is created from this
--   replication group.
--   
--   <a>$sel:tags:CreateSnapshot'</a>, <a>createSnapshot_tags</a> - A list
--   of tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:snapshotName:CreateSnapshot'</a>,
--   <a>createSnapshot_snapshotName</a> - A name for the snapshot being
--   created.
newCreateSnapshot :: Text -> CreateSnapshot

-- | The identifier of an existing cluster. The snapshot is created from
--   this cluster.
createSnapshot_cacheClusterId :: Lens' CreateSnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
createSnapshot_kmsKeyId :: Lens' CreateSnapshot (Maybe Text)

-- | The identifier of an existing replication group. The snapshot is
--   created from this replication group.
createSnapshot_replicationGroupId :: Lens' CreateSnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSnapshot_tags :: Lens' CreateSnapshot (Maybe [Tag])

-- | A name for the snapshot being created.
createSnapshot_snapshotName :: Lens' CreateSnapshot Text

-- | <i>See:</i> <a>newCreateSnapshotResponse</a> smart constructor.
data CreateSnapshotResponse
CreateSnapshotResponse' :: Maybe Snapshot -> Int -> CreateSnapshotResponse
[$sel:snapshot:CreateSnapshotResponse'] :: CreateSnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:CreateSnapshotResponse'] :: CreateSnapshotResponse -> Int

-- | Create a value of <a>CreateSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCreateSnapshotResponse :: Int -> CreateSnapshotResponse

-- | Undocumented member.
createSnapshotResponse_snapshot :: Lens' CreateSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
createSnapshotResponse_httpStatus :: Lens' CreateSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance GHC.Show.Show Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance GHC.Read.Read Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateSnapshot.CreateSnapshotResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateSnapshot.CreateSnapshotResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateSnapshot.CreateSnapshotResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateSnapshot.CreateSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateSnapshot.CreateSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateSnapshot.CreateSnapshot


-- | Creates a Redis (cluster mode disabled) or a Redis (cluster mode
--   enabled) replication group.
--   
--   This API can be used to create a standalone regional replication group
--   or a secondary replication group associated with a Global datastore.
--   
--   A Redis (cluster mode disabled) replication group is a collection of
--   clusters, where one of the clusters is a read/write primary and the
--   others are read-only replicas. Writes to the primary are
--   asynchronously propagated to the replicas.
--   
--   A Redis cluster-mode enabled cluster is comprised of from 1 to 90
--   shards (API/CLI: node groups). Each shard has a primary node and up to
--   5 read-only replica nodes. The configuration can range from 90 shards
--   and 0 replicas to 15 shards and 5 replicas, which is the maximum
--   number or replicas allowed.
--   
--   The node or shard limit can be increased to a maximum of 500 per
--   cluster if the Redis engine version is 5.0.6 or higher. For example,
--   you can choose to configure a 500 node cluster that ranges between 83
--   shards (one primary and 5 replicas per shard) and 500 shards (single
--   primary and no replicas). Make sure there are enough available IP
--   addresses to accommodate the increase. Common pitfalls include the
--   subnets in the subnet group have too small a CIDR range or the subnets
--   are shared and heavily used by other clusters. For more information,
--   see <a>Creating a Subnet Group</a>. For versions below 5.0.6, the
--   limit is 250 per cluster.
--   
--   To request a limit increase, see <a>Amazon Service Limits</a> and
--   choose the limit type <b>Nodes per cluster per instance type</b>.
--   
--   When a Redis (cluster mode disabled) replication group has been
--   successfully created, you can add one or more read replicas to it, up
--   to a total of 5 read replicas. If you need to increase or decrease the
--   number of node groups (console: shards), you can avail yourself of
--   ElastiCache for Redis' scaling. For more information, see <a>Scaling
--   ElastiCache for Redis Clusters</a> in the <i>ElastiCache User
--   Guide</i>.
--   
--   This operation is valid for Redis only.
module Amazonka.ElastiCache.CreateReplicationGroup

-- | Represents the input of a <tt>CreateReplicationGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateReplicationGroup</a> smart constructor.
data CreateReplicationGroup
CreateReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [NodeGroupConfiguration] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Int -> Maybe [Text] -> Text -> Text -> CreateReplicationGroup

-- | Specifies whether a read-only replica is automatically promoted to
--   read/write primary if the existing primary fails.
--   
--   <tt>AutomaticFailoverEnabled</tt> must be enabled for Redis (cluster
--   mode enabled) replication groups.
--   
--   Default: false
[$sel:automaticFailoverEnabled:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Bool

-- | The version number of the cache engine to be used for the clusters in
--   this replication group. To view the supported cache engine versions,
--   use the <tt>DescribeCacheEngineVersions</tt> operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>) in the <i>ElastiCache
--   User Guide</i>, but you cannot downgrade to an earlier engine version.
--   If you want to use an earlier engine version, you must delete the
--   existing cluster or replication group and create it anew with the
--   earlier engine version.
[$sel:engineVersion:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | A list of node group (shard) configuration options. Each node group
--   (shard) configuration has the following members:
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>, and <tt>Slots</tt>.
--   
--   If you're creating a Redis (cluster mode disabled) or a Redis (cluster
--   mode enabled) replication group, you can use this parameter to
--   individually configure each node group (shard), or you can omit this
--   parameter. However, it is required when seeding a Redis (cluster mode
--   enabled) cluster from a S3 rdb file. You must configure each node
--   group (shard) using this parameter because you must specify the slots
--   for each node group.
[$sel:nodeGroupConfiguration:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [NodeGroupConfiguration]

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
[$sel:atRestEncryptionEnabled:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Bool

-- | One or more Amazon VPC security groups associated with this
--   replication group.
--   
--   Use this parameter only when you are creating a replication group in
--   an Amazon Virtual Private Cloud (Amazon VPC).
[$sel:securityGroupIds:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [Text]

-- | A list of Amazon Resource Names (ARN) that uniquely identify the Redis
--   RDB snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new replication group. The Amazon S3 object name in the
--   ARN cannot contain any commas. The new replication group will have the
--   number of node groups (console: shards) specified by the parameter
--   <i>NumNodeGroups</i> or the number of node groups configured by
--   <i>NodeGroupConfiguration</i> regardless of the number of ARNs
--   specified here.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
[$sel:snapshotArns:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [Text]

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Bool

-- | The name of the parameter group to associate with this replication
--   group. If this argument is omitted, the default cache parameter group
--   for the specified engine is used.
--   
--   If you are running Redis version 3.2.4 or later, only one node group
--   (shard), and want to use a default parameter group, we recommend that
--   you specify the parameter group by name.
--   
--   <ul>
--   <li>To create a Redis (cluster mode disabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2</tt>.</li>
--   <li>To create a Redis (cluster mode enabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2.cluster.on</tt>.</li>
--   </ul>
[$sel:cacheParameterGroupName:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   This parameter is valid only if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>, the <tt>EngineVersion</tt> parameter is
--   <tt>3.2.6</tt>, <tt>4.x</tt> or later, and the cluster is being
--   created in an Amazon VPC.
--   
--   If you enable in-transit encryption, you must also specify a value for
--   <tt>CacheSubnetGroup</tt>.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
[$sel:transitEncryptionEnabled:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Bool

-- | The user group to associate with the replication group.
[$sel:userGroupIds:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe (NonEmpty Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
[$sel:snapshotWindow:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | Specifies the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [LogDeliveryConfigurationRequest]

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   <tt>AuthToken</tt> can be specified only on replication groups where
--   <tt>TransitEncryptionEnabled</tt> is <tt>true</tt>.
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
[$sel:authToken:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | The identifier of the cluster that serves as the primary for this
--   replication group. This cluster must already exist and have a status
--   of <tt>available</tt>.
--   
--   This parameter is not required if <tt>NumCacheClusters</tt>,
--   <tt>NumNodeGroups</tt>, or <tt>ReplicasPerNodeGroup</tt> is specified.
[$sel:primaryClusterId:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | The name of the cache engine to be used for the clusters in this
--   replication group. Must be Redis.
[$sel:engine:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
[$sel:preferredMaintenanceWindow:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | The ID of the KMS key used to encrypt the disk in the cluster.
[$sel:kmsKeyId:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>.
[$sel:multiAZEnabled:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Bool

-- | The name of the cache subnet group to be used for the replication
--   group.
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
[$sel:cacheSubnetGroupName:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | An optional parameter that specifies the number of node groups
--   (shards) for this Redis (cluster mode enabled) replication group. For
--   Redis (cluster mode disabled) either omit this parameter or set it to
--   1.
--   
--   Default: 1
[$sel:numNodeGroups:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Int

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cluster).
[$sel:snapshotRetentionLimit:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Int

-- | The name of the Global datastore
[$sel:globalReplicationGroupId:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | An optional parameter that specifies the number of replica nodes in
--   each node group (shard). Valid values are 0 to 5.
[$sel:replicasPerNodeGroup:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Int

-- | The number of clusters this replication group initially has.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>ReplicasPerNodeGroup</tt> instead.
--   
--   If <tt>AutomaticFailoverEnabled</tt> is <tt>true</tt>, the value of
--   this parameter must be at least 2. If
--   <tt>AutomaticFailoverEnabled</tt> is <tt>false</tt> you can omit this
--   parameter (it will default to 1), or you can explicitly set it to a
--   value between 2 and 6.
--   
--   The maximum permitted value for <tt>NumCacheClusters</tt> is 6 (1
--   primary plus 5 replicas).
[$sel:numCacheClusters:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Int

-- | A list of EC2 Availability Zones in which the replication group's
--   clusters are created. The order of the Availability Zones in the list
--   is the order in which clusters are allocated. The primary cluster is
--   created in the first AZ in the list.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>NodeGroupConfiguration</tt> instead.
--   
--   If you are creating your replication group in an Amazon VPC
--   (recommended), you can only locate clusters in Availability Zones
--   associated with the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheClusters</tt>.
--   
--   Default: system chosen Availability Zones.
[$sel:preferredCacheClusterAZs:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [Text]

-- | The name of a snapshot from which to restore data into the new
--   replication group. The snapshot status changes to <tt>restoring</tt>
--   while the new replication group is being created.
[$sel:snapshotName:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
[$sel:notificationTopicArn:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Text

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=<tt>myKey</tt>, Value=<tt>myKeyValue</tt>.
--   You can include multiple tags as shown following: Key=<tt>myKey</tt>,
--   Value=<tt>myKeyValue</tt> Key=<tt>mySecondKey</tt>,
--   Value=<tt>mySecondKeyValue</tt>. Tags on replication groups will be
--   replicated to all nodes.
[$sel:tags:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [Tag]

-- | The port number on which each member of the replication group accepts
--   connections.
[$sel:port:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe Int

-- | A list of cache security group names to associate with this
--   replication group.
[$sel:cacheSecurityGroupNames:CreateReplicationGroup'] :: CreateReplicationGroup -> Maybe [Text]

-- | The replication group identifier. This parameter is stored as a
--   lowercase string.
--   
--   Constraints:
--   
--   <ul>
--   <li>A name must contain from 1 to 40 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
[$sel:replicationGroupId:CreateReplicationGroup'] :: CreateReplicationGroup -> Text

-- | A user-created description for the replication group.
[$sel:replicationGroupDescription:CreateReplicationGroup'] :: CreateReplicationGroup -> Text

-- | Create a value of <a>CreateReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_automaticFailoverEnabled</a> - Specifies
--   whether a read-only replica is automatically promoted to read/write
--   primary if the existing primary fails.
--   
--   <tt>AutomaticFailoverEnabled</tt> must be enabled for Redis (cluster
--   mode enabled) replication groups.
--   
--   Default: false
--   
--   <a>$sel:engineVersion:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_engineVersion</a> - The version number of
--   the cache engine to be used for the clusters in this replication
--   group. To view the supported cache engine versions, use the
--   <tt>DescribeCacheEngineVersions</tt> operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>) in the <i>ElastiCache
--   User Guide</i>, but you cannot downgrade to an earlier engine version.
--   If you want to use an earlier engine version, you must delete the
--   existing cluster or replication group and create it anew with the
--   earlier engine version.
--   
--   <a>$sel:cacheNodeType:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheNodeType</a> - The compute and memory
--   capacity of the nodes in the node group (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:nodeGroupConfiguration:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_nodeGroupConfiguration</a> - A list of node
--   group (shard) configuration options. Each node group (shard)
--   configuration has the following members:
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>, and <tt>Slots</tt>.
--   
--   If you're creating a Redis (cluster mode disabled) or a Redis (cluster
--   mode enabled) replication group, you can use this parameter to
--   individually configure each node group (shard), or you can omit this
--   parameter. However, it is required when seeding a Redis (cluster mode
--   enabled) cluster from a S3 rdb file. You must configure each node
--   group (shard) using this parameter because you must specify the slots
--   for each node group.
--   
--   <a>$sel:atRestEncryptionEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_atRestEncryptionEnabled</a> - A flag that
--   enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:securityGroupIds:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_securityGroupIds</a> - One or more Amazon
--   VPC security groups associated with this replication group.
--   
--   Use this parameter only when you are creating a replication group in
--   an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:snapshotArns:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotArns</a> - A list of Amazon Resource
--   Names (ARN) that uniquely identify the Redis RDB snapshot files stored
--   in Amazon S3. The snapshot files are used to populate the new
--   replication group. The Amazon S3 object name in the ARN cannot contain
--   any commas. The new replication group will have the number of node
--   groups (console: shards) specified by the parameter
--   <i>NumNodeGroups</i> or the number of node groups configured by
--   <i>NodeGroupConfiguration</i> regardless of the number of ARNs
--   specified here.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_autoMinorVersionUpgrade</a> - This parameter
--   is currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheParameterGroupName</a> - The name of
--   the parameter group to associate with this replication group. If this
--   argument is omitted, the default cache parameter group for the
--   specified engine is used.
--   
--   If you are running Redis version 3.2.4 or later, only one node group
--   (shard), and want to use a default parameter group, we recommend that
--   you specify the parameter group by name.
--   
--   <ul>
--   <li>To create a Redis (cluster mode disabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2</tt>.</li>
--   <li>To create a Redis (cluster mode enabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2.cluster.on</tt>.</li>
--   </ul>
--   
--   <a>$sel:transitEncryptionEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_transitEncryptionEnabled</a> - A flag that
--   enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   This parameter is valid only if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>, the <tt>EngineVersion</tt> parameter is
--   <tt>3.2.6</tt>, <tt>4.x</tt> or later, and the cluster is being
--   created in an Amazon VPC.
--   
--   If you enable in-transit encryption, you must also specify a value for
--   <tt>CacheSubnetGroup</tt>.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   <a>$sel:userGroupIds:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_userGroupIds</a> - The user group to
--   associate with the replication group.
--   
--   <a>$sel:snapshotWindow:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotWindow</a> - The daily time range
--   (in UTC) during which ElastiCache begins taking a daily snapshot of
--   your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   <a>$sel:logDeliveryConfigurations:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_logDeliveryConfigurations</a> - Specifies
--   the destination, format and type of the logs.
--   
--   <a>$sel:authToken:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_authToken</a> - <b>Reserved parameter.</b>
--   The password used to access a password protected server.
--   
--   <tt>AuthToken</tt> can be specified only on replication groups where
--   <tt>TransitEncryptionEnabled</tt> is <tt>true</tt>.
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
--   
--   <a>$sel:primaryClusterId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_primaryClusterId</a> - The identifier of the
--   cluster that serves as the primary for this replication group. This
--   cluster must already exist and have a status of <tt>available</tt>.
--   
--   This parameter is not required if <tt>NumCacheClusters</tt>,
--   <tt>NumNodeGroups</tt>, or <tt>ReplicasPerNodeGroup</tt> is specified.
--   
--   <a>$sel:engine:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_engine</a> - The name of the cache engine to
--   be used for the clusters in this replication group. Must be Redis.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_preferredMaintenanceWindow</a> - Specifies
--   the weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:kmsKeyId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_kmsKeyId</a> - The ID of the KMS key used to
--   encrypt the disk in the cluster.
--   
--   <a>$sel:multiAZEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_multiAZEnabled</a> - A flag indicating if
--   you have Multi-AZ enabled to enhance fault tolerance. For more
--   information, see <a>Minimizing Downtime: Multi-AZ</a>.
--   
--   <a>$sel:cacheSubnetGroupName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheSubnetGroupName</a> - The name of the
--   cache subnet group to be used for the replication group.
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
--   
--   <a>$sel:numNodeGroups:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_numNodeGroups</a> - An optional parameter
--   that specifies the number of node groups (shards) for this Redis
--   (cluster mode enabled) replication group. For Redis (cluster mode
--   disabled) either omit this parameter or set it to 1.
--   
--   Default: 1
--   
--   <a>$sel:snapshotRetentionLimit:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotRetentionLimit</a> - The number of
--   days for which ElastiCache retains automatic snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot that was taken today is retained for 5 days before being
--   deleted.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cluster).
--   
--   <a>$sel:globalReplicationGroupId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_globalReplicationGroupId</a> - The name of
--   the Global datastore
--   
--   <a>$sel:replicasPerNodeGroup:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicasPerNodeGroup</a> - An optional
--   parameter that specifies the number of replica nodes in each node
--   group (shard). Valid values are 0 to 5.
--   
--   <a>$sel:numCacheClusters:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_numCacheClusters</a> - The number of
--   clusters this replication group initially has.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>ReplicasPerNodeGroup</tt> instead.
--   
--   If <tt>AutomaticFailoverEnabled</tt> is <tt>true</tt>, the value of
--   this parameter must be at least 2. If
--   <tt>AutomaticFailoverEnabled</tt> is <tt>false</tt> you can omit this
--   parameter (it will default to 1), or you can explicitly set it to a
--   value between 2 and 6.
--   
--   The maximum permitted value for <tt>NumCacheClusters</tt> is 6 (1
--   primary plus 5 replicas).
--   
--   <a>$sel:preferredCacheClusterAZs:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_preferredCacheClusterAZs</a> - A list of EC2
--   Availability Zones in which the replication group's clusters are
--   created. The order of the Availability Zones in the list is the order
--   in which clusters are allocated. The primary cluster is created in the
--   first AZ in the list.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>NodeGroupConfiguration</tt> instead.
--   
--   If you are creating your replication group in an Amazon VPC
--   (recommended), you can only locate clusters in Availability Zones
--   associated with the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheClusters</tt>.
--   
--   Default: system chosen Availability Zones.
--   
--   <a>$sel:snapshotName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotName</a> - The name of a snapshot
--   from which to restore data into the new replication group. The
--   snapshot status changes to <tt>restoring</tt> while the new
--   replication group is being created.
--   
--   <a>$sel:notificationTopicArn:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_notificationTopicArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon Simple Notification Service (SNS)
--   topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
--   
--   <a>$sel:tags:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_tags</a> - A list of tags to be added to
--   this resource. Tags are comma-separated key,value pairs (e.g.
--   Key=<tt>myKey</tt>, Value=<tt>myKeyValue</tt>. You can include
--   multiple tags as shown following: Key=<tt>myKey</tt>,
--   Value=<tt>myKeyValue</tt> Key=<tt>mySecondKey</tt>,
--   Value=<tt>mySecondKeyValue</tt>. Tags on replication groups will be
--   replicated to all nodes.
--   
--   <a>$sel:port:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_port</a> - The port number on which each
--   member of the replication group accepts connections.
--   
--   <a>$sel:cacheSecurityGroupNames:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheSecurityGroupNames</a> - A list of
--   cache security group names to associate with this replication group.
--   
--   <a>$sel:replicationGroupId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicationGroupId</a> - The replication
--   group identifier. This parameter is stored as a lowercase string.
--   
--   Constraints:
--   
--   <ul>
--   <li>A name must contain from 1 to 40 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
--   
--   <a>$sel:replicationGroupDescription:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicationGroupDescription</a> - A
--   user-created description for the replication group.
newCreateReplicationGroup :: Text -> Text -> CreateReplicationGroup

-- | Specifies whether a read-only replica is automatically promoted to
--   read/write primary if the existing primary fails.
--   
--   <tt>AutomaticFailoverEnabled</tt> must be enabled for Redis (cluster
--   mode enabled) replication groups.
--   
--   Default: false
createReplicationGroup_automaticFailoverEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The version number of the cache engine to be used for the clusters in
--   this replication group. To view the supported cache engine versions,
--   use the <tt>DescribeCacheEngineVersions</tt> operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>) in the <i>ElastiCache
--   User Guide</i>, but you cannot downgrade to an earlier engine version.
--   If you want to use an earlier engine version, you must delete the
--   existing cluster or replication group and create it anew with the
--   earlier engine version.
createReplicationGroup_engineVersion :: Lens' CreateReplicationGroup (Maybe Text)

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
createReplicationGroup_cacheNodeType :: Lens' CreateReplicationGroup (Maybe Text)

-- | A list of node group (shard) configuration options. Each node group
--   (shard) configuration has the following members:
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>, and <tt>Slots</tt>.
--   
--   If you're creating a Redis (cluster mode disabled) or a Redis (cluster
--   mode enabled) replication group, you can use this parameter to
--   individually configure each node group (shard), or you can omit this
--   parameter. However, it is required when seeding a Redis (cluster mode
--   enabled) cluster from a S3 rdb file. You must configure each node
--   group (shard) using this parameter because you must specify the slots
--   for each node group.
createReplicationGroup_nodeGroupConfiguration :: Lens' CreateReplicationGroup (Maybe [NodeGroupConfiguration])

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
createReplicationGroup_atRestEncryptionEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | One or more Amazon VPC security groups associated with this
--   replication group.
--   
--   Use this parameter only when you are creating a replication group in
--   an Amazon Virtual Private Cloud (Amazon VPC).
createReplicationGroup_securityGroupIds :: Lens' CreateReplicationGroup (Maybe [Text])

-- | A list of Amazon Resource Names (ARN) that uniquely identify the Redis
--   RDB snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new replication group. The Amazon S3 object name in the
--   ARN cannot contain any commas. The new replication group will have the
--   number of node groups (console: shards) specified by the parameter
--   <i>NumNodeGroups</i> or the number of node groups configured by
--   <i>NodeGroupConfiguration</i> regardless of the number of ARNs
--   specified here.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
createReplicationGroup_snapshotArns :: Lens' CreateReplicationGroup (Maybe [Text])

-- | This parameter is currently disabled.
createReplicationGroup_autoMinorVersionUpgrade :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The name of the parameter group to associate with this replication
--   group. If this argument is omitted, the default cache parameter group
--   for the specified engine is used.
--   
--   If you are running Redis version 3.2.4 or later, only one node group
--   (shard), and want to use a default parameter group, we recommend that
--   you specify the parameter group by name.
--   
--   <ul>
--   <li>To create a Redis (cluster mode disabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2</tt>.</li>
--   <li>To create a Redis (cluster mode enabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2.cluster.on</tt>.</li>
--   </ul>
createReplicationGroup_cacheParameterGroupName :: Lens' CreateReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   This parameter is valid only if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>, the <tt>EngineVersion</tt> parameter is
--   <tt>3.2.6</tt>, <tt>4.x</tt> or later, and the cluster is being
--   created in an Amazon VPC.
--   
--   If you enable in-transit encryption, you must also specify a value for
--   <tt>CacheSubnetGroup</tt>.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
createReplicationGroup_transitEncryptionEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The user group to associate with the replication group.
createReplicationGroup_userGroupIds :: Lens' CreateReplicationGroup (Maybe (NonEmpty Text))

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
createReplicationGroup_snapshotWindow :: Lens' CreateReplicationGroup (Maybe Text)

-- | Specifies the destination, format and type of the logs.
createReplicationGroup_logDeliveryConfigurations :: Lens' CreateReplicationGroup (Maybe [LogDeliveryConfigurationRequest])

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   <tt>AuthToken</tt> can be specified only on replication groups where
--   <tt>TransitEncryptionEnabled</tt> is <tt>true</tt>.
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
createReplicationGroup_authToken :: Lens' CreateReplicationGroup (Maybe Text)

-- | The identifier of the cluster that serves as the primary for this
--   replication group. This cluster must already exist and have a status
--   of <tt>available</tt>.
--   
--   This parameter is not required if <tt>NumCacheClusters</tt>,
--   <tt>NumNodeGroups</tt>, or <tt>ReplicasPerNodeGroup</tt> is specified.
createReplicationGroup_primaryClusterId :: Lens' CreateReplicationGroup (Maybe Text)

-- | The name of the cache engine to be used for the clusters in this
--   replication group. Must be Redis.
createReplicationGroup_engine :: Lens' CreateReplicationGroup (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
createReplicationGroup_preferredMaintenanceWindow :: Lens' CreateReplicationGroup (Maybe Text)

-- | The ID of the KMS key used to encrypt the disk in the cluster.
createReplicationGroup_kmsKeyId :: Lens' CreateReplicationGroup (Maybe Text)

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>.
createReplicationGroup_multiAZEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The name of the cache subnet group to be used for the replication
--   group.
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
createReplicationGroup_cacheSubnetGroupName :: Lens' CreateReplicationGroup (Maybe Text)

-- | An optional parameter that specifies the number of node groups
--   (shards) for this Redis (cluster mode enabled) replication group. For
--   Redis (cluster mode disabled) either omit this parameter or set it to
--   1.
--   
--   Default: 1
createReplicationGroup_numNodeGroups :: Lens' CreateReplicationGroup (Maybe Int)

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cluster).
createReplicationGroup_snapshotRetentionLimit :: Lens' CreateReplicationGroup (Maybe Int)

-- | The name of the Global datastore
createReplicationGroup_globalReplicationGroupId :: Lens' CreateReplicationGroup (Maybe Text)

-- | An optional parameter that specifies the number of replica nodes in
--   each node group (shard). Valid values are 0 to 5.
createReplicationGroup_replicasPerNodeGroup :: Lens' CreateReplicationGroup (Maybe Int)

-- | The number of clusters this replication group initially has.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>ReplicasPerNodeGroup</tt> instead.
--   
--   If <tt>AutomaticFailoverEnabled</tt> is <tt>true</tt>, the value of
--   this parameter must be at least 2. If
--   <tt>AutomaticFailoverEnabled</tt> is <tt>false</tt> you can omit this
--   parameter (it will default to 1), or you can explicitly set it to a
--   value between 2 and 6.
--   
--   The maximum permitted value for <tt>NumCacheClusters</tt> is 6 (1
--   primary plus 5 replicas).
createReplicationGroup_numCacheClusters :: Lens' CreateReplicationGroup (Maybe Int)

-- | A list of EC2 Availability Zones in which the replication group's
--   clusters are created. The order of the Availability Zones in the list
--   is the order in which clusters are allocated. The primary cluster is
--   created in the first AZ in the list.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>NodeGroupConfiguration</tt> instead.
--   
--   If you are creating your replication group in an Amazon VPC
--   (recommended), you can only locate clusters in Availability Zones
--   associated with the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheClusters</tt>.
--   
--   Default: system chosen Availability Zones.
createReplicationGroup_preferredCacheClusterAZs :: Lens' CreateReplicationGroup (Maybe [Text])

-- | The name of a snapshot from which to restore data into the new
--   replication group. The snapshot status changes to <tt>restoring</tt>
--   while the new replication group is being created.
createReplicationGroup_snapshotName :: Lens' CreateReplicationGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
createReplicationGroup_notificationTopicArn :: Lens' CreateReplicationGroup (Maybe Text)

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=<tt>myKey</tt>, Value=<tt>myKeyValue</tt>.
--   You can include multiple tags as shown following: Key=<tt>myKey</tt>,
--   Value=<tt>myKeyValue</tt> Key=<tt>mySecondKey</tt>,
--   Value=<tt>mySecondKeyValue</tt>. Tags on replication groups will be
--   replicated to all nodes.
createReplicationGroup_tags :: Lens' CreateReplicationGroup (Maybe [Tag])

-- | The port number on which each member of the replication group accepts
--   connections.
createReplicationGroup_port :: Lens' CreateReplicationGroup (Maybe Int)

-- | A list of cache security group names to associate with this
--   replication group.
createReplicationGroup_cacheSecurityGroupNames :: Lens' CreateReplicationGroup (Maybe [Text])

-- | The replication group identifier. This parameter is stored as a
--   lowercase string.
--   
--   Constraints:
--   
--   <ul>
--   <li>A name must contain from 1 to 40 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createReplicationGroup_replicationGroupId :: Lens' CreateReplicationGroup Text

-- | A user-created description for the replication group.
createReplicationGroup_replicationGroupDescription :: Lens' CreateReplicationGroup Text

-- | <i>See:</i> <a>newCreateReplicationGroupResponse</a> smart
--   constructor.
data CreateReplicationGroupResponse
CreateReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> CreateReplicationGroupResponse
[$sel:replicationGroup:CreateReplicationGroupResponse'] :: CreateReplicationGroupResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:CreateReplicationGroupResponse'] :: CreateReplicationGroupResponse -> Int

-- | Create a value of <a>CreateReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:CreateReplicationGroupResponse'</a>,
--   <a>createReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CreateReplicationGroupResponse'</a>,
--   <a>createReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateReplicationGroupResponse :: Int -> CreateReplicationGroupResponse

-- | Undocumented member.
createReplicationGroupResponse_replicationGroup :: Lens' CreateReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
createReplicationGroupResponse_httpStatus :: Lens' CreateReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateReplicationGroup.CreateReplicationGroup


-- | Global Datastore for Redis offers fully managed, fast, reliable and
--   secure cross-region replication. Using Global Datastore for Redis, you
--   can create cross-region read replica clusters for ElastiCache for
--   Redis to enable low-latency reads and disaster recovery across
--   regions. For more information, see <a>Replication Across Regions Using
--   Global Datastore</a>.
--   
--   <ul>
--   <li>The <b>GlobalReplicationGroupIdSuffix</b> is the name of the
--   Global datastore.</li>
--   <li>The <b>PrimaryReplicationGroupId</b> represents the name of the
--   primary cluster that accepts writes and will replicate updates to the
--   secondary cluster.</li>
--   </ul>
module Amazonka.ElastiCache.CreateGlobalReplicationGroup

-- | <i>See:</i> <a>newCreateGlobalReplicationGroup</a> smart constructor.
data CreateGlobalReplicationGroup
CreateGlobalReplicationGroup' :: Maybe Text -> Text -> Text -> CreateGlobalReplicationGroup

-- | Provides details of the Global datastore
[$sel:globalReplicationGroupDescription:CreateGlobalReplicationGroup'] :: CreateGlobalReplicationGroup -> Maybe Text

-- | The suffix name of a Global datastore. Amazon ElastiCache
--   automatically applies a prefix to the Global datastore ID when it is
--   created. Each Amazon Region has its own prefix. For instance, a Global
--   datastore ID created in the US-West-1 region will begin with "dsdfu"
--   along with the suffix name you provide. The suffix, combined with the
--   auto-generated prefix, guarantees uniqueness of the Global datastore
--   name across multiple regions.
--   
--   For a full list of Amazon Regions and their respective Global
--   datastore iD prefixes, see <a>Using the Amazon CLI with Global
--   datastores</a> .
[$sel:globalReplicationGroupIdSuffix:CreateGlobalReplicationGroup'] :: CreateGlobalReplicationGroup -> Text

-- | The name of the primary cluster that accepts writes and will replicate
--   updates to the secondary cluster.
[$sel:primaryReplicationGroupId:CreateGlobalReplicationGroup'] :: CreateGlobalReplicationGroup -> Text

-- | Create a value of <a>CreateGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupDescription:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_globalReplicationGroupDescription</a>
--   - Provides details of the Global datastore
--   
--   
--   <a>$sel:globalReplicationGroupIdSuffix:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_globalReplicationGroupIdSuffix</a> -
--   The suffix name of a Global datastore. Amazon ElastiCache
--   automatically applies a prefix to the Global datastore ID when it is
--   created. Each Amazon Region has its own prefix. For instance, a Global
--   datastore ID created in the US-West-1 region will begin with "dsdfu"
--   along with the suffix name you provide. The suffix, combined with the
--   auto-generated prefix, guarantees uniqueness of the Global datastore
--   name across multiple regions.
--   
--   For a full list of Amazon Regions and their respective Global
--   datastore iD prefixes, see <a>Using the Amazon CLI with Global
--   datastores</a> .
--   
--   <a>$sel:primaryReplicationGroupId:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_primaryReplicationGroupId</a> - The
--   name of the primary cluster that accepts writes and will replicate
--   updates to the secondary cluster.
newCreateGlobalReplicationGroup :: Text -> Text -> CreateGlobalReplicationGroup

-- | Provides details of the Global datastore
createGlobalReplicationGroup_globalReplicationGroupDescription :: Lens' CreateGlobalReplicationGroup (Maybe Text)

-- | The suffix name of a Global datastore. Amazon ElastiCache
--   automatically applies a prefix to the Global datastore ID when it is
--   created. Each Amazon Region has its own prefix. For instance, a Global
--   datastore ID created in the US-West-1 region will begin with "dsdfu"
--   along with the suffix name you provide. The suffix, combined with the
--   auto-generated prefix, guarantees uniqueness of the Global datastore
--   name across multiple regions.
--   
--   For a full list of Amazon Regions and their respective Global
--   datastore iD prefixes, see <a>Using the Amazon CLI with Global
--   datastores</a> .
createGlobalReplicationGroup_globalReplicationGroupIdSuffix :: Lens' CreateGlobalReplicationGroup Text

-- | The name of the primary cluster that accepts writes and will replicate
--   updates to the secondary cluster.
createGlobalReplicationGroup_primaryReplicationGroupId :: Lens' CreateGlobalReplicationGroup Text

-- | <i>See:</i> <a>newCreateGlobalReplicationGroupResponse</a> smart
--   constructor.
data CreateGlobalReplicationGroupResponse
CreateGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> CreateGlobalReplicationGroupResponse
[$sel:globalReplicationGroup:CreateGlobalReplicationGroupResponse'] :: CreateGlobalReplicationGroupResponse -> Maybe GlobalReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:CreateGlobalReplicationGroupResponse'] :: CreateGlobalReplicationGroupResponse -> Int

-- | Create a value of <a>CreateGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:CreateGlobalReplicationGroupResponse'</a>,
--   <a>createGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateGlobalReplicationGroupResponse'</a>,
--   <a>createGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newCreateGlobalReplicationGroupResponse :: Int -> CreateGlobalReplicationGroupResponse

-- | Undocumented member.
createGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' CreateGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
createGlobalReplicationGroupResponse_httpStatus :: Lens' CreateGlobalReplicationGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateGlobalReplicationGroup.CreateGlobalReplicationGroup


-- | Creates a new cache subnet group.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
module Amazonka.ElastiCache.CreateCacheSubnetGroup

-- | Represents the input of a <tt>CreateCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateCacheSubnetGroup</a> smart constructor.
data CreateCacheSubnetGroup
CreateCacheSubnetGroup' :: Maybe [Tag] -> Text -> Text -> [Text] -> CreateCacheSubnetGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateCacheSubnetGroup'] :: CreateCacheSubnetGroup -> Maybe [Tag]

-- | A name for the cache subnet group. This value is stored as a lowercase
--   string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
[$sel:cacheSubnetGroupName:CreateCacheSubnetGroup'] :: CreateCacheSubnetGroup -> Text

-- | A description for the cache subnet group.
[$sel:cacheSubnetGroupDescription:CreateCacheSubnetGroup'] :: CreateCacheSubnetGroup -> Text

-- | A list of VPC subnet IDs for the cache subnet group.
[$sel:subnetIds:CreateCacheSubnetGroup'] :: CreateCacheSubnetGroup -> [Text]

-- | Create a value of <a>CreateCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheSubnetGroupName:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_cacheSubnetGroupName</a> - A name for the
--   cache subnet group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
--   
--   <a>$sel:cacheSubnetGroupDescription:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_cacheSubnetGroupDescription</a> - A
--   description for the cache subnet group.
--   
--   <a>$sel:subnetIds:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for
--   the cache subnet group.
newCreateCacheSubnetGroup :: Text -> Text -> CreateCacheSubnetGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheSubnetGroup_tags :: Lens' CreateCacheSubnetGroup (Maybe [Tag])

-- | A name for the cache subnet group. This value is stored as a lowercase
--   string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
createCacheSubnetGroup_cacheSubnetGroupName :: Lens' CreateCacheSubnetGroup Text

-- | A description for the cache subnet group.
createCacheSubnetGroup_cacheSubnetGroupDescription :: Lens' CreateCacheSubnetGroup Text

-- | A list of VPC subnet IDs for the cache subnet group.
createCacheSubnetGroup_subnetIds :: Lens' CreateCacheSubnetGroup [Text]

-- | <i>See:</i> <a>newCreateCacheSubnetGroupResponse</a> smart
--   constructor.
data CreateCacheSubnetGroupResponse
CreateCacheSubnetGroupResponse' :: Maybe CacheSubnetGroup -> Int -> CreateCacheSubnetGroupResponse
[$sel:cacheSubnetGroup:CreateCacheSubnetGroupResponse'] :: CreateCacheSubnetGroupResponse -> Maybe CacheSubnetGroup

-- | The response's http status code.
[$sel:httpStatus:CreateCacheSubnetGroupResponse'] :: CreateCacheSubnetGroupResponse -> Int

-- | Create a value of <a>CreateCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroup:CreateCacheSubnetGroupResponse'</a>,
--   <a>createCacheSubnetGroupResponse_cacheSubnetGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CreateCacheSubnetGroupResponse'</a>,
--   <a>createCacheSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateCacheSubnetGroupResponse :: Int -> CreateCacheSubnetGroupResponse

-- | Undocumented member.
createCacheSubnetGroupResponse_cacheSubnetGroup :: Lens' CreateCacheSubnetGroupResponse (Maybe CacheSubnetGroup)

-- | The response's http status code.
createCacheSubnetGroupResponse_httpStatus :: Lens' CreateCacheSubnetGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateCacheSubnetGroup.CreateCacheSubnetGroup


-- | Creates a new cache security group. Use a cache security group to
--   control access to one or more clusters.
--   
--   Cache security groups are only used when you are creating a cluster
--   outside of an Amazon Virtual Private Cloud (Amazon VPC). If you are
--   creating a cluster inside of a VPC, use a cache subnet group instead.
--   For more information, see <a>CreateCacheSubnetGroup</a>.
module Amazonka.ElastiCache.CreateCacheSecurityGroup

-- | Represents the input of a <tt>CreateCacheSecurityGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateCacheSecurityGroup</a> smart constructor.
data CreateCacheSecurityGroup
CreateCacheSecurityGroup' :: Maybe [Tag] -> Text -> Text -> CreateCacheSecurityGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateCacheSecurityGroup'] :: CreateCacheSecurityGroup -> Maybe [Tag]

-- | A name for the cache security group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Cannot be the word "Default".
--   
--   Example: <tt>mysecuritygroup</tt>
[$sel:cacheSecurityGroupName:CreateCacheSecurityGroup'] :: CreateCacheSecurityGroup -> Text

-- | A description for the cache security group.
[$sel:description:CreateCacheSecurityGroup'] :: CreateCacheSecurityGroup -> Text

-- | Create a value of <a>CreateCacheSecurityGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheSecurityGroupName:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_cacheSecurityGroupName</a> - A name for
--   the cache security group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Cannot be the word "Default".
--   
--   Example: <tt>mysecuritygroup</tt>
--   
--   <a>$sel:description:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_description</a> - A description for the
--   cache security group.
newCreateCacheSecurityGroup :: Text -> Text -> CreateCacheSecurityGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheSecurityGroup_tags :: Lens' CreateCacheSecurityGroup (Maybe [Tag])

-- | A name for the cache security group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Cannot be the word "Default".
--   
--   Example: <tt>mysecuritygroup</tt>
createCacheSecurityGroup_cacheSecurityGroupName :: Lens' CreateCacheSecurityGroup Text

-- | A description for the cache security group.
createCacheSecurityGroup_description :: Lens' CreateCacheSecurityGroup Text

-- | <i>See:</i> <a>newCreateCacheSecurityGroupResponse</a> smart
--   constructor.
data CreateCacheSecurityGroupResponse
CreateCacheSecurityGroupResponse' :: Maybe CacheSecurityGroup -> Int -> CreateCacheSecurityGroupResponse
[$sel:cacheSecurityGroup:CreateCacheSecurityGroupResponse'] :: CreateCacheSecurityGroupResponse -> Maybe CacheSecurityGroup

-- | The response's http status code.
[$sel:httpStatus:CreateCacheSecurityGroupResponse'] :: CreateCacheSecurityGroupResponse -> Int

-- | Create a value of <a>CreateCacheSecurityGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroup:CreateCacheSecurityGroupResponse'</a>,
--   <a>createCacheSecurityGroupResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheSecurityGroupResponse'</a>,
--   <a>createCacheSecurityGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateCacheSecurityGroupResponse :: Int -> CreateCacheSecurityGroupResponse

-- | Undocumented member.
createCacheSecurityGroupResponse_cacheSecurityGroup :: Lens' CreateCacheSecurityGroupResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
createCacheSecurityGroupResponse_httpStatus :: Lens' CreateCacheSecurityGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateCacheSecurityGroup.CreateCacheSecurityGroup


-- | Creates a new Amazon ElastiCache cache parameter group. An ElastiCache
--   cache parameter group is a collection of parameters and their values
--   that are applied to all of the nodes in any cluster or replication
--   group using the CacheParameterGroup.
--   
--   A newly created CacheParameterGroup is an exact duplicate of the
--   default parameter group for the CacheParameterGroupFamily. To
--   customize the newly created CacheParameterGroup you can change the
--   values of specific parameters. For more information, see:
--   
--   <ul>
--   <li><a>ModifyCacheParameterGroup</a> in the ElastiCache API
--   Reference.</li>
--   <li><a>Parameters and Parameter Groups</a> in the ElastiCache User
--   Guide.</li>
--   </ul>
module Amazonka.ElastiCache.CreateCacheParameterGroup

-- | Represents the input of a <tt>CreateCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newCreateCacheParameterGroup</a> smart constructor.
data CreateCacheParameterGroup
CreateCacheParameterGroup' :: Maybe [Tag] -> Text -> Text -> Text -> CreateCacheParameterGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateCacheParameterGroup'] :: CreateCacheParameterGroup -> Maybe [Tag]

-- | A user-specified name for the cache parameter group.
[$sel:cacheParameterGroupName:CreateCacheParameterGroup'] :: CreateCacheParameterGroup -> Text

-- | The name of the cache parameter group family that the cache parameter
--   group can be used with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
[$sel:cacheParameterGroupFamily:CreateCacheParameterGroup'] :: CreateCacheParameterGroup -> Text

-- | A user-specified description for the cache parameter group.
[$sel:description:CreateCacheParameterGroup'] :: CreateCacheParameterGroup -> Text

-- | Create a value of <a>CreateCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheParameterGroupName:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_cacheParameterGroupName</a> - A
--   user-specified name for the cache parameter group.
--   
--   <a>$sel:cacheParameterGroupFamily:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_cacheParameterGroupFamily</a> - The name
--   of the cache parameter group family that the cache parameter group can
--   be used with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:description:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_description</a> - A user-specified
--   description for the cache parameter group.
newCreateCacheParameterGroup :: Text -> Text -> Text -> CreateCacheParameterGroup

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheParameterGroup_tags :: Lens' CreateCacheParameterGroup (Maybe [Tag])

-- | A user-specified name for the cache parameter group.
createCacheParameterGroup_cacheParameterGroupName :: Lens' CreateCacheParameterGroup Text

-- | The name of the cache parameter group family that the cache parameter
--   group can be used with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
createCacheParameterGroup_cacheParameterGroupFamily :: Lens' CreateCacheParameterGroup Text

-- | A user-specified description for the cache parameter group.
createCacheParameterGroup_description :: Lens' CreateCacheParameterGroup Text

-- | <i>See:</i> <a>newCreateCacheParameterGroupResponse</a> smart
--   constructor.
data CreateCacheParameterGroupResponse
CreateCacheParameterGroupResponse' :: Maybe CacheParameterGroup -> Int -> CreateCacheParameterGroupResponse
[$sel:cacheParameterGroup:CreateCacheParameterGroupResponse'] :: CreateCacheParameterGroupResponse -> Maybe CacheParameterGroup

-- | The response's http status code.
[$sel:httpStatus:CreateCacheParameterGroupResponse'] :: CreateCacheParameterGroupResponse -> Int

-- | Create a value of <a>CreateCacheParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroup:CreateCacheParameterGroupResponse'</a>,
--   <a>createCacheParameterGroupResponse_cacheParameterGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheParameterGroupResponse'</a>,
--   <a>createCacheParameterGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateCacheParameterGroupResponse :: Int -> CreateCacheParameterGroupResponse

-- | Undocumented member.
createCacheParameterGroupResponse_cacheParameterGroup :: Lens' CreateCacheParameterGroupResponse (Maybe CacheParameterGroup)

-- | The response's http status code.
createCacheParameterGroupResponse_httpStatus :: Lens' CreateCacheParameterGroupResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroupResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroupResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroupResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateCacheParameterGroup.CreateCacheParameterGroup


-- | Creates a cluster. All nodes in the cluster run the same
--   protocol-compliant cache engine software, either Memcached or Redis.
--   
--   This operation is not supported for Redis (cluster mode enabled)
--   clusters.
module Amazonka.ElastiCache.CreateCacheCluster

-- | Represents the input of a CreateCacheCluster operation.
--   
--   <i>See:</i> <a>newCreateCacheCluster</a> smart constructor.
data CreateCacheCluster
CreateCacheCluster' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe OutpostMode -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe AZMode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Tag] -> Maybe Int -> Maybe [Text] -> Text -> CreateCacheCluster

-- | The version number of the cache engine to be used for this cluster. To
--   view the supported cache engine versions, use the
--   DescribeCacheEngineVersions operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster or replication group and
--   create it anew with the earlier engine version.
[$sel:engineVersion:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
[$sel:cacheNodeType:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | One or more VPC security groups associated with the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
[$sel:securityGroupIds:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Text]

-- | A single-element string list containing an Amazon Resource Name (ARN)
--   that uniquely identifies a Redis RDB snapshot file stored in Amazon
--   S3. The snapshot file is used to populate the node group (shard). The
--   Amazon S3 object name in the ARN cannot contain any commas.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
[$sel:snapshotArns:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Text]

-- | This parameter is currently disabled.
[$sel:autoMinorVersionUpgrade:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Bool

-- | Specifies whether the nodes in the cluster are created in a single
--   outpost or across multiple outposts.
[$sel:outpostMode:CreateCacheCluster'] :: CreateCacheCluster -> Maybe OutpostMode

-- | The name of the parameter group to associate with this cluster. If
--   this argument is omitted, the default parameter group for the
--   specified engine is used. You cannot use any parameter group which has
--   <tt>cluster-enabled='yes'</tt> when creating a cluster.
[$sel:cacheParameterGroupName:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
[$sel:snapshotWindow:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | Specifies the destination, format and type of the logs.
[$sel:logDeliveryConfigurations:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [LogDeliveryConfigurationRequest]

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
[$sel:authToken:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The name of the cache engine to be used for this cluster.
--   
--   Valid values for this parameter are: <tt>memcached</tt> |
--   <tt>redis</tt>
[$sel:engine:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | A list of the Availability Zones in which cache nodes are created. The
--   order of the zones in the list is not important.
--   
--   This option is only supported on Memcached.
--   
--   If you are creating your cluster in an Amazon VPC (recommended) you
--   can only locate nodes in Availability Zones that are associated with
--   the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheNodes</tt>.
--   
--   If you want all the nodes in the same Availability Zone, use
--   <tt>PreferredAvailabilityZone</tt> instead, or repeat the Availability
--   Zone multiple times in the list.
--   
--   Default: System chosen Availability Zones.
[$sel:preferredAvailabilityZones:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Text]

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
[$sel:preferredMaintenanceWindow:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The name of the subnet group to be used for the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
[$sel:cacheSubnetGroupName:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The EC2 Availability Zone in which the cluster is created.
--   
--   All nodes belonging to this cluster are placed in the preferred
--   Availability Zone. If you want to create your nodes across multiple
--   Availability Zones, use <tt>PreferredAvailabilityZones</tt>.
--   
--   Default: System chosen Availability Zone.
[$sel:preferredAvailabilityZone:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot taken today is
--   retained for 5 days before being deleted.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cache
--   cluster).
[$sel:snapshotRetentionLimit:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Int

-- | The outpost ARNs in which the cache cluster is created.
[$sel:preferredOutpostArns:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Text]

-- | Specifies whether the nodes in this Memcached cluster are created in a
--   single Availability Zone or created across multiple Availability Zones
--   in the cluster's region.
--   
--   This parameter is only supported for Memcached clusters.
--   
--   If the <tt>AZMode</tt> and <tt>PreferredAvailabilityZones</tt> are not
--   specified, ElastiCache assumes <tt>single-az</tt> mode.
[$sel:aZMode:CreateCacheCluster'] :: CreateCacheCluster -> Maybe AZMode

-- | The name of a Redis snapshot from which to restore data into the new
--   node group (shard). The snapshot status changes to <tt>restoring</tt>
--   while the new node group (shard) is being created.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
[$sel:snapshotName:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The outpost ARN in which the cache cluster is created.
[$sel:preferredOutpostArn:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The ID of the replication group to which this cluster should belong.
--   If this parameter is specified, the cluster is added to the specified
--   replication group as a read replica; otherwise, the cluster is a
--   standalone primary that is not part of any replication group.
--   
--   If the specified replication group is Multi-AZ enabled and the
--   Availability Zone is not specified, the cluster is created in
--   Availability Zones that provide the best spread of read replicas
--   across Availability Zones.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
[$sel:replicationGroupId:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
[$sel:notificationTopicArn:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Text

-- | The initial number of cache nodes that the cluster has.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   If you need more than 40 nodes for your Memcached cluster, please fill
--   out the ElastiCache Limit Increase Request form at
--   <a>http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.
[$sel:numCacheNodes:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Int

-- | A list of tags to be added to this resource.
[$sel:tags:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Tag]

-- | The port number on which each of the cache nodes accepts connections.
[$sel:port:CreateCacheCluster'] :: CreateCacheCluster -> Maybe Int

-- | A list of security group names to associate with this cluster.
--   
--   Use this parameter only when you are creating a cluster outside of an
--   Amazon Virtual Private Cloud (Amazon VPC).
[$sel:cacheSecurityGroupNames:CreateCacheCluster'] :: CreateCacheCluster -> Maybe [Text]

-- | The node group (shard) identifier. This parameter is stored as a
--   lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 50 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
[$sel:cacheClusterId:CreateCacheCluster'] :: CreateCacheCluster -> Text

-- | Create a value of <a>CreateCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateCacheCluster'</a>,
--   <a>createCacheCluster_engineVersion</a> - The version number of the
--   cache engine to be used for this cluster. To view the supported cache
--   engine versions, use the DescribeCacheEngineVersions operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster or replication group and
--   create it anew with the earlier engine version.
--   
--   <a>$sel:cacheNodeType:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheNodeType</a> - The compute and memory
--   capacity of the nodes in the node group (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:securityGroupIds:CreateCacheCluster'</a>,
--   <a>createCacheCluster_securityGroupIds</a> - One or more VPC security
--   groups associated with the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:snapshotArns:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotArns</a> - A single-element string list
--   containing an Amazon Resource Name (ARN) that uniquely identifies a
--   Redis RDB snapshot file stored in Amazon S3. The snapshot file is used
--   to populate the node group (shard). The Amazon S3 object name in the
--   ARN cannot contain any commas.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateCacheCluster'</a>,
--   <a>createCacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:outpostMode:CreateCacheCluster'</a>,
--   <a>createCacheCluster_outpostMode</a> - Specifies whether the nodes in
--   the cluster are created in a single outpost or across multiple
--   outposts.
--   
--   <a>$sel:cacheParameterGroupName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheParameterGroupName</a> - The name of the
--   parameter group to associate with this cluster. If this argument is
--   omitted, the default parameter group for the specified engine is used.
--   You cannot use any parameter group which has
--   <tt>cluster-enabled='yes'</tt> when creating a cluster.
--   
--   <a>$sel:snapshotWindow:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotWindow</a> - The daily time range (in
--   UTC) during which ElastiCache begins taking a daily snapshot of your
--   node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:logDeliveryConfigurations:CreateCacheCluster'</a>,
--   <a>createCacheCluster_logDeliveryConfigurations</a> - Specifies the
--   destination, format and type of the logs.
--   
--   <a>$sel:authToken:CreateCacheCluster'</a>,
--   <a>createCacheCluster_authToken</a> - <b>Reserved parameter.</b> The
--   password used to access a password protected server.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
--   
--   <a>$sel:engine:CreateCacheCluster'</a>,
--   <a>createCacheCluster_engine</a> - The name of the cache engine to be
--   used for this cluster.
--   
--   Valid values for this parameter are: <tt>memcached</tt> |
--   <tt>redis</tt>
--   
--   <a>$sel:preferredAvailabilityZones:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredAvailabilityZones</a> - A list of the
--   Availability Zones in which cache nodes are created. The order of the
--   zones in the list is not important.
--   
--   This option is only supported on Memcached.
--   
--   If you are creating your cluster in an Amazon VPC (recommended) you
--   can only locate nodes in Availability Zones that are associated with
--   the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheNodes</tt>.
--   
--   If you want all the nodes in the same Availability Zone, use
--   <tt>PreferredAvailabilityZone</tt> instead, or repeat the Availability
--   Zone multiple times in the list.
--   
--   Default: System chosen Availability Zones.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredMaintenanceWindow</a> - Specifies the
--   weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   <a>$sel:cacheSubnetGroupName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheSubnetGroupName</a> - The name of the
--   subnet group to be used for the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
--   
--   <a>$sel:preferredAvailabilityZone:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredAvailabilityZone</a> - The EC2
--   Availability Zone in which the cluster is created.
--   
--   All nodes belonging to this cluster are placed in the preferred
--   Availability Zone. If you want to create your nodes across multiple
--   Availability Zones, use <tt>PreferredAvailabilityZones</tt>.
--   
--   Default: System chosen Availability Zone.
--   
--   <a>$sel:snapshotRetentionLimit:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot taken today is retained for 5 days before being deleted.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cache
--   cluster).
--   
--   <a>$sel:preferredOutpostArns:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredOutpostArns</a> - The outpost ARNs in
--   which the cache cluster is created.
--   
--   <a>$sel:aZMode:CreateCacheCluster'</a>,
--   <a>createCacheCluster_aZMode</a> - Specifies whether the nodes in this
--   Memcached cluster are created in a single Availability Zone or created
--   across multiple Availability Zones in the cluster's region.
--   
--   This parameter is only supported for Memcached clusters.
--   
--   If the <tt>AZMode</tt> and <tt>PreferredAvailabilityZones</tt> are not
--   specified, ElastiCache assumes <tt>single-az</tt> mode.
--   
--   <a>$sel:snapshotName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotName</a> - The name of a Redis snapshot
--   from which to restore data into the new node group (shard). The
--   snapshot status changes to <tt>restoring</tt> while the new node group
--   (shard) is being created.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:preferredOutpostArn:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredOutpostArn</a> - The outpost ARN in
--   which the cache cluster is created.
--   
--   <a>$sel:replicationGroupId:CreateCacheCluster'</a>,
--   <a>createCacheCluster_replicationGroupId</a> - The ID of the
--   replication group to which this cluster should belong. If this
--   parameter is specified, the cluster is added to the specified
--   replication group as a read replica; otherwise, the cluster is a
--   standalone primary that is not part of any replication group.
--   
--   If the specified replication group is Multi-AZ enabled and the
--   Availability Zone is not specified, the cluster is created in
--   Availability Zones that provide the best spread of read replicas
--   across Availability Zones.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:notificationTopicArn:CreateCacheCluster'</a>,
--   <a>createCacheCluster_notificationTopicArn</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (SNS) topic to
--   which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
--   
--   <a>$sel:numCacheNodes:CreateCacheCluster'</a>,
--   <a>createCacheCluster_numCacheNodes</a> - The initial number of cache
--   nodes that the cluster has.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   If you need more than 40 nodes for your Memcached cluster, please fill
--   out the ElastiCache Limit Increase Request form at
--   <a>http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.
--   
--   <a>$sel:tags:CreateCacheCluster'</a>, <a>createCacheCluster_tags</a> -
--   A list of tags to be added to this resource.
--   
--   <a>$sel:port:CreateCacheCluster'</a>, <a>createCacheCluster_port</a> -
--   The port number on which each of the cache nodes accepts connections.
--   
--   <a>$sel:cacheSecurityGroupNames:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheSecurityGroupNames</a> - A list of security
--   group names to associate with this cluster.
--   
--   Use this parameter only when you are creating a cluster outside of an
--   Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:cacheClusterId:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheClusterId</a> - The node group (shard)
--   identifier. This parameter is stored as a lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 50 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
newCreateCacheCluster :: Text -> CreateCacheCluster

-- | The version number of the cache engine to be used for this cluster. To
--   view the supported cache engine versions, use the
--   DescribeCacheEngineVersions operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster or replication group and
--   create it anew with the earlier engine version.
createCacheCluster_engineVersion :: Lens' CreateCacheCluster (Maybe Text)

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
createCacheCluster_cacheNodeType :: Lens' CreateCacheCluster (Maybe Text)

-- | One or more VPC security groups associated with the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
createCacheCluster_securityGroupIds :: Lens' CreateCacheCluster (Maybe [Text])

-- | A single-element string list containing an Amazon Resource Name (ARN)
--   that uniquely identifies a Redis RDB snapshot file stored in Amazon
--   S3. The snapshot file is used to populate the node group (shard). The
--   Amazon S3 object name in the ARN cannot contain any commas.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
createCacheCluster_snapshotArns :: Lens' CreateCacheCluster (Maybe [Text])

-- | This parameter is currently disabled.
createCacheCluster_autoMinorVersionUpgrade :: Lens' CreateCacheCluster (Maybe Bool)

-- | Specifies whether the nodes in the cluster are created in a single
--   outpost or across multiple outposts.
createCacheCluster_outpostMode :: Lens' CreateCacheCluster (Maybe OutpostMode)

-- | The name of the parameter group to associate with this cluster. If
--   this argument is omitted, the default parameter group for the
--   specified engine is used. You cannot use any parameter group which has
--   <tt>cluster-enabled='yes'</tt> when creating a cluster.
createCacheCluster_cacheParameterGroupName :: Lens' CreateCacheCluster (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_snapshotWindow :: Lens' CreateCacheCluster (Maybe Text)

-- | Specifies the destination, format and type of the logs.
createCacheCluster_logDeliveryConfigurations :: Lens' CreateCacheCluster (Maybe [LogDeliveryConfigurationRequest])

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
createCacheCluster_authToken :: Lens' CreateCacheCluster (Maybe Text)

-- | The name of the cache engine to be used for this cluster.
--   
--   Valid values for this parameter are: <tt>memcached</tt> |
--   <tt>redis</tt>
createCacheCluster_engine :: Lens' CreateCacheCluster (Maybe Text)

-- | A list of the Availability Zones in which cache nodes are created. The
--   order of the zones in the list is not important.
--   
--   This option is only supported on Memcached.
--   
--   If you are creating your cluster in an Amazon VPC (recommended) you
--   can only locate nodes in Availability Zones that are associated with
--   the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheNodes</tt>.
--   
--   If you want all the nodes in the same Availability Zone, use
--   <tt>PreferredAvailabilityZone</tt> instead, or repeat the Availability
--   Zone multiple times in the list.
--   
--   Default: System chosen Availability Zones.
createCacheCluster_preferredAvailabilityZones :: Lens' CreateCacheCluster (Maybe [Text])

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
createCacheCluster_preferredMaintenanceWindow :: Lens' CreateCacheCluster (Maybe Text)

-- | The name of the subnet group to be used for the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
createCacheCluster_cacheSubnetGroupName :: Lens' CreateCacheCluster (Maybe Text)

-- | The EC2 Availability Zone in which the cluster is created.
--   
--   All nodes belonging to this cluster are placed in the preferred
--   Availability Zone. If you want to create your nodes across multiple
--   Availability Zones, use <tt>PreferredAvailabilityZones</tt>.
--   
--   Default: System chosen Availability Zone.
createCacheCluster_preferredAvailabilityZone :: Lens' CreateCacheCluster (Maybe Text)

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot taken today is
--   retained for 5 days before being deleted.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cache
--   cluster).
createCacheCluster_snapshotRetentionLimit :: Lens' CreateCacheCluster (Maybe Int)

-- | The outpost ARNs in which the cache cluster is created.
createCacheCluster_preferredOutpostArns :: Lens' CreateCacheCluster (Maybe [Text])

-- | Specifies whether the nodes in this Memcached cluster are created in a
--   single Availability Zone or created across multiple Availability Zones
--   in the cluster's region.
--   
--   This parameter is only supported for Memcached clusters.
--   
--   If the <tt>AZMode</tt> and <tt>PreferredAvailabilityZones</tt> are not
--   specified, ElastiCache assumes <tt>single-az</tt> mode.
createCacheCluster_aZMode :: Lens' CreateCacheCluster (Maybe AZMode)

-- | The name of a Redis snapshot from which to restore data into the new
--   node group (shard). The snapshot status changes to <tt>restoring</tt>
--   while the new node group (shard) is being created.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_snapshotName :: Lens' CreateCacheCluster (Maybe Text)

-- | The outpost ARN in which the cache cluster is created.
createCacheCluster_preferredOutpostArn :: Lens' CreateCacheCluster (Maybe Text)

-- | The ID of the replication group to which this cluster should belong.
--   If this parameter is specified, the cluster is added to the specified
--   replication group as a read replica; otherwise, the cluster is a
--   standalone primary that is not part of any replication group.
--   
--   If the specified replication group is Multi-AZ enabled and the
--   Availability Zone is not specified, the cluster is created in
--   Availability Zones that provide the best spread of read replicas
--   across Availability Zones.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_replicationGroupId :: Lens' CreateCacheCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
createCacheCluster_notificationTopicArn :: Lens' CreateCacheCluster (Maybe Text)

-- | The initial number of cache nodes that the cluster has.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   If you need more than 40 nodes for your Memcached cluster, please fill
--   out the ElastiCache Limit Increase Request form at
--   <a>http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.
createCacheCluster_numCacheNodes :: Lens' CreateCacheCluster (Maybe Int)

-- | A list of tags to be added to this resource.
createCacheCluster_tags :: Lens' CreateCacheCluster (Maybe [Tag])

-- | The port number on which each of the cache nodes accepts connections.
createCacheCluster_port :: Lens' CreateCacheCluster (Maybe Int)

-- | A list of security group names to associate with this cluster.
--   
--   Use this parameter only when you are creating a cluster outside of an
--   Amazon Virtual Private Cloud (Amazon VPC).
createCacheCluster_cacheSecurityGroupNames :: Lens' CreateCacheCluster (Maybe [Text])

-- | The node group (shard) identifier. This parameter is stored as a
--   lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 50 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createCacheCluster_cacheClusterId :: Lens' CreateCacheCluster Text

-- | <i>See:</i> <a>newCreateCacheClusterResponse</a> smart constructor.
data CreateCacheClusterResponse
CreateCacheClusterResponse' :: Maybe CacheCluster -> Int -> CreateCacheClusterResponse
[$sel:cacheCluster:CreateCacheClusterResponse'] :: CreateCacheClusterResponse -> Maybe CacheCluster

-- | The response's http status code.
[$sel:httpStatus:CreateCacheClusterResponse'] :: CreateCacheClusterResponse -> Int

-- | Create a value of <a>CreateCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:CreateCacheClusterResponse'</a>,
--   <a>createCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheClusterResponse'</a>,
--   <a>createCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newCreateCacheClusterResponse :: Int -> CreateCacheClusterResponse

-- | Undocumented member.
createCacheClusterResponse_cacheCluster :: Lens' CreateCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
createCacheClusterResponse_httpStatus :: Lens' CreateCacheClusterResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance GHC.Generics.Generic Amazonka.ElastiCache.CreateCacheCluster.CreateCacheClusterResponse
instance GHC.Show.Show Amazonka.ElastiCache.CreateCacheCluster.CreateCacheClusterResponse
instance GHC.Read.Read Amazonka.ElastiCache.CreateCacheCluster.CreateCacheClusterResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CreateCacheCluster.CreateCacheClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheCluster.CreateCacheClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CreateCacheCluster.CreateCacheCluster


-- | Makes a copy of an existing snapshot.
--   
--   This operation is valid for Redis only.
--   
--   Users or groups that have permissions to use the <tt>CopySnapshot</tt>
--   operation can create their own Amazon S3 buckets and copy snapshots to
--   it. To control access to your snapshots, use an IAM policy to control
--   who has the ability to use the <tt>CopySnapshot</tt> operation. For
--   more information about using IAM to control the use of ElastiCache
--   operations, see <a>Exporting Snapshots</a> and <a>Authentication &amp;
--   Access Control</a>.
--   
--   You could receive the following error messages.
--   
--   <b>Error Messages</b>
--   
--   <ul>
--   <li><b>Error Message:</b> The S3 bucket %s is outside of the
--   region.<b>Solution:</b> Create an Amazon S3 bucket in the same region
--   as your snapshot. For more information, see <a>Step 1: Create an
--   Amazon S3 Bucket</a> in the ElastiCache User Guide.</li>
--   <li><b>Error Message:</b> The S3 bucket %s does not
--   exist.<b>Solution:</b> Create an Amazon S3 bucket in the same region
--   as your snapshot. For more information, see <a>Step 1: Create an
--   Amazon S3 Bucket</a> in the ElastiCache User Guide.</li>
--   <li><b>Error Message:</b> The S3 bucket %s is not owned by the
--   authenticated user.<b>Solution:</b> Create an Amazon S3 bucket in the
--   same region as your snapshot. For more information, see <a>Step 1:
--   Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</li>
--   <li><b>Error Message:</b> The authenticated user does not have
--   sufficient permissions to perform the desired
--   activity.<b>Solution:</b> Contact your system administrator to get the
--   needed permissions.</li>
--   <li><b>Error Message:</b> The S3 bucket %s already contains an object
--   with key %s.<b>Solution:</b> Give the <tt>TargetSnapshotName</tt> a
--   new and unique value. If exporting a snapshot, you could alternatively
--   create a new Amazon S3 bucket and use this same value for
--   <tt>TargetSnapshotName</tt>.</li>
--   <li><b>Error Message:</b> ElastiCache has not been granted READ
--   permissions %s on the S3 Bucket.<b>Solution:</b> Add List and Read
--   permissions on the bucket. For more information, see <a>Step 2: Grant
--   ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache
--   User Guide.</li>
--   <li><b>Error Message:</b> ElastiCache has not been granted WRITE
--   permissions %s on the S3 Bucket.<b>Solution:</b> Add Upload/Delete
--   permissions on the bucket. For more information, see <a>Step 2: Grant
--   ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache
--   User Guide.</li>
--   <li><b>Error Message:</b> ElastiCache has not been granted READ_ACP
--   permissions %s on the S3 Bucket.<b>Solution:</b> Add View Permissions
--   on the bucket. For more information, see <a>Step 2: Grant ElastiCache
--   Access to Your Amazon S3 Bucket</a> in the ElastiCache User
--   Guide.</li>
--   </ul>
module Amazonka.ElastiCache.CopySnapshot

-- | Represents the input of a <tt>CopySnapshotMessage</tt> operation.
--   
--   <i>See:</i> <a>newCopySnapshot</a> smart constructor.
data CopySnapshot
CopySnapshot' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CopySnapshot

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access.
--   
--   When using this parameter to export a snapshot, be sure Amazon
--   ElastiCache has the needed permissions to this S3 bucket. For more
--   information, see <a>Step 2: Grant ElastiCache Access to Your Amazon S3
--   Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.
--   
--   For more information, see <a>Exporting a Snapshot</a> in the <i>Amazon
--   ElastiCache User Guide</i>.
[$sel:targetBucket:CopySnapshot'] :: CopySnapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the target snapshot.
[$sel:kmsKeyId:CopySnapshot'] :: CopySnapshot -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CopySnapshot'] :: CopySnapshot -> Maybe [Tag]

-- | The name of an existing snapshot from which to make a copy.
[$sel:sourceSnapshotName:CopySnapshot'] :: CopySnapshot -> Text

-- | A name for the snapshot copy. ElastiCache does not permit overwriting
--   a snapshot, therefore this name must be unique within its context -
--   ElastiCache or an Amazon S3 bucket if exporting.
[$sel:targetSnapshotName:CopySnapshot'] :: CopySnapshot -> Text

-- | Create a value of <a>CopySnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBucket:CopySnapshot'</a>,
--   <a>copySnapshot_targetBucket</a> - The Amazon S3 bucket to which the
--   snapshot is exported. This parameter is used only when exporting a
--   snapshot for external access.
--   
--   When using this parameter to export a snapshot, be sure Amazon
--   ElastiCache has the needed permissions to this S3 bucket. For more
--   information, see <a>Step 2: Grant ElastiCache Access to Your Amazon S3
--   Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.
--   
--   For more information, see <a>Exporting a Snapshot</a> in the <i>Amazon
--   ElastiCache User Guide</i>.
--   
--   <a>$sel:kmsKeyId:CopySnapshot'</a>, <a>copySnapshot_kmsKeyId</a> - The
--   ID of the KMS key used to encrypt the target snapshot.
--   
--   <a>$sel:tags:CopySnapshot'</a>, <a>copySnapshot_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:sourceSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_sourceSnapshotName</a> - The name of an existing
--   snapshot from which to make a copy.
--   
--   <a>$sel:targetSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_targetSnapshotName</a> - A name for the snapshot copy.
--   ElastiCache does not permit overwriting a snapshot, therefore this
--   name must be unique within its context - ElastiCache or an Amazon S3
--   bucket if exporting.
newCopySnapshot :: Text -> Text -> CopySnapshot

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access.
--   
--   When using this parameter to export a snapshot, be sure Amazon
--   ElastiCache has the needed permissions to this S3 bucket. For more
--   information, see <a>Step 2: Grant ElastiCache Access to Your Amazon S3
--   Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.
--   
--   For more information, see <a>Exporting a Snapshot</a> in the <i>Amazon
--   ElastiCache User Guide</i>.
copySnapshot_targetBucket :: Lens' CopySnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the target snapshot.
copySnapshot_kmsKeyId :: Lens' CopySnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
copySnapshot_tags :: Lens' CopySnapshot (Maybe [Tag])

-- | The name of an existing snapshot from which to make a copy.
copySnapshot_sourceSnapshotName :: Lens' CopySnapshot Text

-- | A name for the snapshot copy. ElastiCache does not permit overwriting
--   a snapshot, therefore this name must be unique within its context -
--   ElastiCache or an Amazon S3 bucket if exporting.
copySnapshot_targetSnapshotName :: Lens' CopySnapshot Text

-- | <i>See:</i> <a>newCopySnapshotResponse</a> smart constructor.
data CopySnapshotResponse
CopySnapshotResponse' :: Maybe Snapshot -> Int -> CopySnapshotResponse
[$sel:snapshot:CopySnapshotResponse'] :: CopySnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:CopySnapshotResponse'] :: CopySnapshotResponse -> Int

-- | Create a value of <a>CopySnapshotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCopySnapshotResponse :: Int -> CopySnapshotResponse

-- | Undocumented member.
copySnapshotResponse_snapshot :: Lens' CopySnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
copySnapshotResponse_httpStatus :: Lens' CopySnapshotResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance GHC.Show.Show Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance GHC.Read.Read Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance GHC.Classes.Eq Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance GHC.Generics.Generic Amazonka.ElastiCache.CopySnapshot.CopySnapshotResponse
instance GHC.Show.Show Amazonka.ElastiCache.CopySnapshot.CopySnapshotResponse
instance GHC.Read.Read Amazonka.ElastiCache.CopySnapshot.CopySnapshotResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CopySnapshot.CopySnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CopySnapshot.CopySnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CopySnapshot.CopySnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CopySnapshot.CopySnapshot


-- | Complete the migration of data.
module Amazonka.ElastiCache.CompleteMigration

-- | <i>See:</i> <a>newCompleteMigration</a> smart constructor.
data CompleteMigration
CompleteMigration' :: Maybe Bool -> Text -> CompleteMigration

-- | Forces the migration to stop without ensuring that data is in sync. It
--   is recommended to use this option only to abort the migration and not
--   recommended when application wants to continue migration to
--   ElastiCache.
[$sel:force:CompleteMigration'] :: CompleteMigration -> Maybe Bool

-- | The ID of the replication group to which data is being migrated.
[$sel:replicationGroupId:CompleteMigration'] :: CompleteMigration -> Text

-- | Create a value of <a>CompleteMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:CompleteMigration'</a>, <a>completeMigration_force</a> -
--   Forces the migration to stop without ensuring that data is in sync. It
--   is recommended to use this option only to abort the migration and not
--   recommended when application wants to continue migration to
--   ElastiCache.
--   
--   <a>$sel:replicationGroupId:CompleteMigration'</a>,
--   <a>completeMigration_replicationGroupId</a> - The ID of the
--   replication group to which data is being migrated.
newCompleteMigration :: Text -> CompleteMigration

-- | Forces the migration to stop without ensuring that data is in sync. It
--   is recommended to use this option only to abort the migration and not
--   recommended when application wants to continue migration to
--   ElastiCache.
completeMigration_force :: Lens' CompleteMigration (Maybe Bool)

-- | The ID of the replication group to which data is being migrated.
completeMigration_replicationGroupId :: Lens' CompleteMigration Text

-- | <i>See:</i> <a>newCompleteMigrationResponse</a> smart constructor.
data CompleteMigrationResponse
CompleteMigrationResponse' :: Maybe ReplicationGroup -> Int -> CompleteMigrationResponse
[$sel:replicationGroup:CompleteMigrationResponse'] :: CompleteMigrationResponse -> Maybe ReplicationGroup

-- | The response's http status code.
[$sel:httpStatus:CompleteMigrationResponse'] :: CompleteMigrationResponse -> Int

-- | Create a value of <a>CompleteMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:CompleteMigrationResponse'</a>,
--   <a>completeMigrationResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CompleteMigrationResponse'</a>,
--   <a>completeMigrationResponse_httpStatus</a> - The response's http
--   status code.
newCompleteMigrationResponse :: Int -> CompleteMigrationResponse

-- | Undocumented member.
completeMigrationResponse_replicationGroup :: Lens' CompleteMigrationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
completeMigrationResponse_httpStatus :: Lens' CompleteMigrationResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance GHC.Show.Show Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance GHC.Read.Read Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance GHC.Classes.Eq Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance GHC.Generics.Generic Amazonka.ElastiCache.CompleteMigration.CompleteMigrationResponse
instance GHC.Show.Show Amazonka.ElastiCache.CompleteMigration.CompleteMigrationResponse
instance GHC.Read.Read Amazonka.ElastiCache.CompleteMigration.CompleteMigrationResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.CompleteMigration.CompleteMigrationResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CompleteMigration.CompleteMigrationResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance Control.DeepSeq.NFData Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.CompleteMigration.CompleteMigration
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.CompleteMigration.CompleteMigration


-- | Stop the service update. For more information on service updates and
--   stopping them, see <a>Stopping Service Updates</a>.
module Amazonka.ElastiCache.BatchStopUpdateAction

-- | <i>See:</i> <a>newBatchStopUpdateAction</a> smart constructor.
data BatchStopUpdateAction
BatchStopUpdateAction' :: Maybe [Text] -> Maybe [Text] -> Text -> BatchStopUpdateAction

-- | The cache cluster IDs
[$sel:cacheClusterIds:BatchStopUpdateAction'] :: BatchStopUpdateAction -> Maybe [Text]

-- | The replication group IDs
[$sel:replicationGroupIds:BatchStopUpdateAction'] :: BatchStopUpdateAction -> Maybe [Text]

-- | The unique ID of the service update
[$sel:serviceUpdateName:BatchStopUpdateAction'] :: BatchStopUpdateAction -> Text

-- | Create a value of <a>BatchStopUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:replicationGroupIds:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:serviceUpdateName:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
newBatchStopUpdateAction :: Text -> BatchStopUpdateAction

-- | The cache cluster IDs
batchStopUpdateAction_cacheClusterIds :: Lens' BatchStopUpdateAction (Maybe [Text])

-- | The replication group IDs
batchStopUpdateAction_replicationGroupIds :: Lens' BatchStopUpdateAction (Maybe [Text])

-- | The unique ID of the service update
batchStopUpdateAction_serviceUpdateName :: Lens' BatchStopUpdateAction Text

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
[$sel:unprocessedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [UnprocessedUpdateAction]

-- | Update actions that have been processed successfully
[$sel:processedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [ProcessedUpdateAction]

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])
instance GHC.Generics.Generic Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance GHC.Show.Show Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance GHC.Read.Read Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance GHC.Classes.Eq Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Control.DeepSeq.NFData Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.BatchStopUpdateAction.BatchStopUpdateAction


-- | Apply the service update. For more information on service updates and
--   applying them, see <a>Applying Service Updates</a>.
module Amazonka.ElastiCache.BatchApplyUpdateAction

-- | <i>See:</i> <a>newBatchApplyUpdateAction</a> smart constructor.
data BatchApplyUpdateAction
BatchApplyUpdateAction' :: Maybe [Text] -> Maybe [Text] -> Text -> BatchApplyUpdateAction

-- | The cache cluster IDs
[$sel:cacheClusterIds:BatchApplyUpdateAction'] :: BatchApplyUpdateAction -> Maybe [Text]

-- | The replication group IDs
[$sel:replicationGroupIds:BatchApplyUpdateAction'] :: BatchApplyUpdateAction -> Maybe [Text]

-- | The unique ID of the service update
[$sel:serviceUpdateName:BatchApplyUpdateAction'] :: BatchApplyUpdateAction -> Text

-- | Create a value of <a>BatchApplyUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:replicationGroupIds:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:serviceUpdateName:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
newBatchApplyUpdateAction :: Text -> BatchApplyUpdateAction

-- | The cache cluster IDs
batchApplyUpdateAction_cacheClusterIds :: Lens' BatchApplyUpdateAction (Maybe [Text])

-- | The replication group IDs
batchApplyUpdateAction_replicationGroupIds :: Lens' BatchApplyUpdateAction (Maybe [Text])

-- | The unique ID of the service update
batchApplyUpdateAction_serviceUpdateName :: Lens' BatchApplyUpdateAction Text

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
[$sel:unprocessedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [UnprocessedUpdateAction]

-- | Update actions that have been processed successfully
[$sel:processedUpdateActions:UpdateActionResultsMessage'] :: UpdateActionResultsMessage -> Maybe [ProcessedUpdateAction]

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])
instance GHC.Generics.Generic Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance GHC.Show.Show Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance GHC.Read.Read Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance GHC.Classes.Eq Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Control.DeepSeq.NFData Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.BatchApplyUpdateAction.BatchApplyUpdateAction


-- | Allows network ingress to a cache security group. Applications using
--   ElastiCache must be running on Amazon EC2, and Amazon EC2 security
--   groups are used as the authorization mechanism.
--   
--   You cannot authorize ingress from an Amazon EC2 security group in one
--   region to an ElastiCache cluster in another region.
module Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress

-- | Represents the input of an AuthorizeCacheSecurityGroupIngress
--   operation.
--   
--   <i>See:</i> <a>newAuthorizeCacheSecurityGroupIngress</a> smart
--   constructor.
data AuthorizeCacheSecurityGroupIngress
AuthorizeCacheSecurityGroupIngress' :: Text -> Text -> Text -> AuthorizeCacheSecurityGroupIngress

-- | The cache security group that allows network ingress.
[$sel:cacheSecurityGroupName:AuthorizeCacheSecurityGroupIngress'] :: AuthorizeCacheSecurityGroupIngress -> Text

-- | The Amazon EC2 security group to be authorized for ingress to the
--   cache security group.
[$sel:eC2SecurityGroupName:AuthorizeCacheSecurityGroupIngress'] :: AuthorizeCacheSecurityGroupIngress -> Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
[$sel:eC2SecurityGroupOwnerId:AuthorizeCacheSecurityGroupIngress'] :: AuthorizeCacheSecurityGroupIngress -> Text

-- | Create a value of <a>AuthorizeCacheSecurityGroupIngress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroupName:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_cacheSecurityGroupName</a> - The
--   cache security group that allows network ingress.
--   
--   <a>$sel:eC2SecurityGroupName:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_eC2SecurityGroupName</a> - The
--   Amazon EC2 security group to be authorized for ingress to the cache
--   security group.
--   
--   
--   <a>$sel:eC2SecurityGroupOwnerId:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId</a> -
--   The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
newAuthorizeCacheSecurityGroupIngress :: Text -> Text -> Text -> AuthorizeCacheSecurityGroupIngress

-- | The cache security group that allows network ingress.
authorizeCacheSecurityGroupIngress_cacheSecurityGroupName :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | The Amazon EC2 security group to be authorized for ingress to the
--   cache security group.
authorizeCacheSecurityGroupIngress_eC2SecurityGroupName :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
authorizeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | <i>See:</i> <a>newAuthorizeCacheSecurityGroupIngressResponse</a> smart
--   constructor.
data AuthorizeCacheSecurityGroupIngressResponse
AuthorizeCacheSecurityGroupIngressResponse' :: Maybe CacheSecurityGroup -> Int -> AuthorizeCacheSecurityGroupIngressResponse
[$sel:cacheSecurityGroup:AuthorizeCacheSecurityGroupIngressResponse'] :: AuthorizeCacheSecurityGroupIngressResponse -> Maybe CacheSecurityGroup

-- | The response's http status code.
[$sel:httpStatus:AuthorizeCacheSecurityGroupIngressResponse'] :: AuthorizeCacheSecurityGroupIngressResponse -> Int

-- | Create a value of <a>AuthorizeCacheSecurityGroupIngressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroup:AuthorizeCacheSecurityGroupIngressResponse'</a>,
--   <a>authorizeCacheSecurityGroupIngressResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:AuthorizeCacheSecurityGroupIngressResponse'</a>,
--   <a>authorizeCacheSecurityGroupIngressResponse_httpStatus</a> - The
--   response's http status code.
newAuthorizeCacheSecurityGroupIngressResponse :: Int -> AuthorizeCacheSecurityGroupIngressResponse

-- | Undocumented member.
authorizeCacheSecurityGroupIngressResponse_cacheSecurityGroup :: Lens' AuthorizeCacheSecurityGroupIngressResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
authorizeCacheSecurityGroupIngressResponse_httpStatus :: Lens' AuthorizeCacheSecurityGroupIngressResponse Int
instance GHC.Generics.Generic Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance GHC.Show.Show Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance GHC.Read.Read Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance GHC.Classes.Eq Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance GHC.Generics.Generic Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngressResponse
instance GHC.Show.Show Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngressResponse
instance GHC.Read.Read Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngressResponse
instance GHC.Classes.Eq Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngressResponse
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance Control.DeepSeq.NFData Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngressResponse
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance Control.DeepSeq.NFData Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.AuthorizeCacheSecurityGroupIngress.AuthorizeCacheSecurityGroupIngress


-- | A tag is a key-value pair where the key and value are case-sensitive.
--   You can use tags to categorize and track all your ElastiCache
--   resources, with the exception of global replication group. When you
--   add or remove tags on replication groups, those actions will be
--   replicated to all nodes in the replication group. For more
--   information, see <a>Resource-level permissions</a>.
--   
--   For example, you can use cost-allocation tags to your ElastiCache
--   resources, Amazon generates a cost allocation report as a
--   comma-separated value (CSV) file with your usage and costs aggregated
--   by your tags. You can apply tags that represent business categories
--   (such as cost centers, application names, or owners) to organize your
--   costs across multiple services.
--   
--   For more information, see <a>Using Cost Allocation Tags in Amazon
--   ElastiCache</a> in the <i>ElastiCache User Guide</i>.
module Amazonka.ElastiCache.AddTagsToResource

-- | Represents the input of an AddTagsToResource operation.
--   
--   <i>See:</i> <a>newAddTagsToResource</a> smart constructor.
data AddTagsToResource
AddTagsToResource' :: Text -> [Tag] -> AddTagsToResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
[$sel:resourceName:AddTagsToResource'] :: AddTagsToResource -> Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:AddTagsToResource'] :: AddTagsToResource -> [Tag]

-- | Create a value of <a>AddTagsToResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:AddTagsToResource'</a>,
--   <a>addTagsToResource_resourceName</a> - The Amazon Resource Name (ARN)
--   of the resource to which the tags are to be added, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
--   
--   <a>$sel:tags:AddTagsToResource'</a>, <a>addTagsToResource_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
newAddTagsToResource :: Text -> AddTagsToResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
addTagsToResource_resourceName :: Lens' AddTagsToResource Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
addTagsToResource_tags :: Lens' AddTagsToResource [Tag]

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | A list of tags as key-value pairs.
[$sel:tagList:TagListMessage'] :: TagListMessage -> Maybe [Tag]

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance GHC.Show.Show Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance GHC.Read.Read Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance GHC.Classes.Eq Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Amazonka.Types.AWSRequest Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Data.Hashable.Class.Hashable Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Control.DeepSeq.NFData Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Amazonka.Data.Path.ToPath Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource
instance Amazonka.Data.Query.ToQuery Amazonka.ElastiCache.AddTagsToResource.AddTagsToResource


module Amazonka.ElastiCache.Lens

-- | The ID of the replication group to which data should be migrated.
startMigration_replicationGroupId :: Lens' StartMigration Text

-- | List of endpoints from which data should be migrated. For Redis
--   (cluster mode disabled), list should have only one element.
startMigration_customerNodeEndpointList :: Lens' StartMigration [CustomerNodeEndpoint]

-- | Undocumented member.
startMigrationResponse_replicationGroup :: Lens' StartMigrationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
startMigrationResponse_httpStatus :: Lens' StartMigrationResponse Int

-- | The name of the cache security group to delete.
--   
--   You cannot delete the default security group.
deleteCacheSecurityGroup_cacheSecurityGroupName :: Lens' DeleteCacheSecurityGroup Text

-- | Specifies whether a read-only replica is automatically promoted to
--   read/write primary if the existing primary fails.
--   
--   <tt>AutomaticFailoverEnabled</tt> must be enabled for Redis (cluster
--   mode enabled) replication groups.
--   
--   Default: false
createReplicationGroup_automaticFailoverEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The version number of the cache engine to be used for the clusters in
--   this replication group. To view the supported cache engine versions,
--   use the <tt>DescribeCacheEngineVersions</tt> operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>) in the <i>ElastiCache
--   User Guide</i>, but you cannot downgrade to an earlier engine version.
--   If you want to use an earlier engine version, you must delete the
--   existing cluster or replication group and create it anew with the
--   earlier engine version.
createReplicationGroup_engineVersion :: Lens' CreateReplicationGroup (Maybe Text)

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
createReplicationGroup_cacheNodeType :: Lens' CreateReplicationGroup (Maybe Text)

-- | A list of node group (shard) configuration options. Each node group
--   (shard) configuration has the following members:
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>, and <tt>Slots</tt>.
--   
--   If you're creating a Redis (cluster mode disabled) or a Redis (cluster
--   mode enabled) replication group, you can use this parameter to
--   individually configure each node group (shard), or you can omit this
--   parameter. However, it is required when seeding a Redis (cluster mode
--   enabled) cluster from a S3 rdb file. You must configure each node
--   group (shard) using this parameter because you must specify the slots
--   for each node group.
createReplicationGroup_nodeGroupConfiguration :: Lens' CreateReplicationGroup (Maybe [NodeGroupConfiguration])

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
createReplicationGroup_atRestEncryptionEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | One or more Amazon VPC security groups associated with this
--   replication group.
--   
--   Use this parameter only when you are creating a replication group in
--   an Amazon Virtual Private Cloud (Amazon VPC).
createReplicationGroup_securityGroupIds :: Lens' CreateReplicationGroup (Maybe [Text])

-- | A list of Amazon Resource Names (ARN) that uniquely identify the Redis
--   RDB snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new replication group. The Amazon S3 object name in the
--   ARN cannot contain any commas. The new replication group will have the
--   number of node groups (console: shards) specified by the parameter
--   <i>NumNodeGroups</i> or the number of node groups configured by
--   <i>NodeGroupConfiguration</i> regardless of the number of ARNs
--   specified here.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
createReplicationGroup_snapshotArns :: Lens' CreateReplicationGroup (Maybe [Text])

-- | This parameter is currently disabled.
createReplicationGroup_autoMinorVersionUpgrade :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The name of the parameter group to associate with this replication
--   group. If this argument is omitted, the default cache parameter group
--   for the specified engine is used.
--   
--   If you are running Redis version 3.2.4 or later, only one node group
--   (shard), and want to use a default parameter group, we recommend that
--   you specify the parameter group by name.
--   
--   <ul>
--   <li>To create a Redis (cluster mode disabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2</tt>.</li>
--   <li>To create a Redis (cluster mode enabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2.cluster.on</tt>.</li>
--   </ul>
createReplicationGroup_cacheParameterGroupName :: Lens' CreateReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   This parameter is valid only if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>, the <tt>EngineVersion</tt> parameter is
--   <tt>3.2.6</tt>, <tt>4.x</tt> or later, and the cluster is being
--   created in an Amazon VPC.
--   
--   If you enable in-transit encryption, you must also specify a value for
--   <tt>CacheSubnetGroup</tt>.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
createReplicationGroup_transitEncryptionEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The user group to associate with the replication group.
createReplicationGroup_userGroupIds :: Lens' CreateReplicationGroup (Maybe (NonEmpty Text))

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
createReplicationGroup_snapshotWindow :: Lens' CreateReplicationGroup (Maybe Text)

-- | Specifies the destination, format and type of the logs.
createReplicationGroup_logDeliveryConfigurations :: Lens' CreateReplicationGroup (Maybe [LogDeliveryConfigurationRequest])

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   <tt>AuthToken</tt> can be specified only on replication groups where
--   <tt>TransitEncryptionEnabled</tt> is <tt>true</tt>.
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
createReplicationGroup_authToken :: Lens' CreateReplicationGroup (Maybe Text)

-- | The identifier of the cluster that serves as the primary for this
--   replication group. This cluster must already exist and have a status
--   of <tt>available</tt>.
--   
--   This parameter is not required if <tt>NumCacheClusters</tt>,
--   <tt>NumNodeGroups</tt>, or <tt>ReplicasPerNodeGroup</tt> is specified.
createReplicationGroup_primaryClusterId :: Lens' CreateReplicationGroup (Maybe Text)

-- | The name of the cache engine to be used for the clusters in this
--   replication group. Must be Redis.
createReplicationGroup_engine :: Lens' CreateReplicationGroup (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
createReplicationGroup_preferredMaintenanceWindow :: Lens' CreateReplicationGroup (Maybe Text)

-- | The ID of the KMS key used to encrypt the disk in the cluster.
createReplicationGroup_kmsKeyId :: Lens' CreateReplicationGroup (Maybe Text)

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>.
createReplicationGroup_multiAZEnabled :: Lens' CreateReplicationGroup (Maybe Bool)

-- | The name of the cache subnet group to be used for the replication
--   group.
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
createReplicationGroup_cacheSubnetGroupName :: Lens' CreateReplicationGroup (Maybe Text)

-- | An optional parameter that specifies the number of node groups
--   (shards) for this Redis (cluster mode enabled) replication group. For
--   Redis (cluster mode disabled) either omit this parameter or set it to
--   1.
--   
--   Default: 1
createReplicationGroup_numNodeGroups :: Lens' CreateReplicationGroup (Maybe Int)

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cluster).
createReplicationGroup_snapshotRetentionLimit :: Lens' CreateReplicationGroup (Maybe Int)

-- | The name of the Global datastore
createReplicationGroup_globalReplicationGroupId :: Lens' CreateReplicationGroup (Maybe Text)

-- | An optional parameter that specifies the number of replica nodes in
--   each node group (shard). Valid values are 0 to 5.
createReplicationGroup_replicasPerNodeGroup :: Lens' CreateReplicationGroup (Maybe Int)

-- | The number of clusters this replication group initially has.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>ReplicasPerNodeGroup</tt> instead.
--   
--   If <tt>AutomaticFailoverEnabled</tt> is <tt>true</tt>, the value of
--   this parameter must be at least 2. If
--   <tt>AutomaticFailoverEnabled</tt> is <tt>false</tt> you can omit this
--   parameter (it will default to 1), or you can explicitly set it to a
--   value between 2 and 6.
--   
--   The maximum permitted value for <tt>NumCacheClusters</tt> is 6 (1
--   primary plus 5 replicas).
createReplicationGroup_numCacheClusters :: Lens' CreateReplicationGroup (Maybe Int)

-- | A list of EC2 Availability Zones in which the replication group's
--   clusters are created. The order of the Availability Zones in the list
--   is the order in which clusters are allocated. The primary cluster is
--   created in the first AZ in the list.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>NodeGroupConfiguration</tt> instead.
--   
--   If you are creating your replication group in an Amazon VPC
--   (recommended), you can only locate clusters in Availability Zones
--   associated with the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheClusters</tt>.
--   
--   Default: system chosen Availability Zones.
createReplicationGroup_preferredCacheClusterAZs :: Lens' CreateReplicationGroup (Maybe [Text])

-- | The name of a snapshot from which to restore data into the new
--   replication group. The snapshot status changes to <tt>restoring</tt>
--   while the new replication group is being created.
createReplicationGroup_snapshotName :: Lens' CreateReplicationGroup (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
createReplicationGroup_notificationTopicArn :: Lens' CreateReplicationGroup (Maybe Text)

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=<tt>myKey</tt>, Value=<tt>myKeyValue</tt>.
--   You can include multiple tags as shown following: Key=<tt>myKey</tt>,
--   Value=<tt>myKeyValue</tt> Key=<tt>mySecondKey</tt>,
--   Value=<tt>mySecondKeyValue</tt>. Tags on replication groups will be
--   replicated to all nodes.
createReplicationGroup_tags :: Lens' CreateReplicationGroup (Maybe [Tag])

-- | The port number on which each member of the replication group accepts
--   connections.
createReplicationGroup_port :: Lens' CreateReplicationGroup (Maybe Int)

-- | A list of cache security group names to associate with this
--   replication group.
createReplicationGroup_cacheSecurityGroupNames :: Lens' CreateReplicationGroup (Maybe [Text])

-- | The replication group identifier. This parameter is stored as a
--   lowercase string.
--   
--   Constraints:
--   
--   <ul>
--   <li>A name must contain from 1 to 40 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createReplicationGroup_replicationGroupId :: Lens' CreateReplicationGroup Text

-- | A user-created description for the replication group.
createReplicationGroup_replicationGroupDescription :: Lens' CreateReplicationGroup Text

-- | Undocumented member.
createReplicationGroupResponse_replicationGroup :: Lens' CreateReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
createReplicationGroupResponse_httpStatus :: Lens' CreateReplicationGroupResponse Int

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. ElastiCache creates the snapshot,
--   and then deletes the cluster immediately afterward.
deleteCacheCluster_finalSnapshotIdentifier :: Lens' DeleteCacheCluster (Maybe Text)

-- | The cluster identifier for the cluster to be deleted. This parameter
--   is not case sensitive.
deleteCacheCluster_cacheClusterId :: Lens' DeleteCacheCluster Text

-- | Undocumented member.
deleteCacheClusterResponse_cacheCluster :: Lens' DeleteCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
deleteCacheClusterResponse_httpStatus :: Lens' DeleteCacheClusterResponse Int

-- | Describes the replication group IDs, the Amazon regions where they are
--   stored and the shard configuration for each that comprise the Global
--   datastore
increaseNodeGroupsInGlobalReplicationGroup_regionalConfigurations :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup (Maybe [RegionalConfiguration])

-- | The name of the Global datastore
increaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Text

-- | The number of node groups you wish to add
increaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Int

-- | Indicates that the process begins immediately. At present, the only
--   permitted value for this parameter is true.
increaseNodeGroupsInGlobalReplicationGroup_applyImmediately :: Lens' IncreaseNodeGroupsInGlobalReplicationGroup Bool

-- | Undocumented member.
increaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' IncreaseNodeGroupsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
increaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus :: Lens' IncreaseNodeGroupsInGlobalReplicationGroupResponse Int

-- | Filter to determine the list of User IDs to return.
describeUsers_filters :: Lens' DescribeUsers (Maybe [Filter])

-- | The Redis engine.
describeUsers_engine :: Lens' DescribeUsers (Maybe Text)

-- | The ID of the user.
describeUsers_userId :: Lens' DescribeUsers (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUsers_marker :: Lens' DescribeUsers (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeUsers_maxRecords :: Lens' DescribeUsers (Maybe Int)

-- | A list of users.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUsersResponse_marker :: Lens' DescribeUsersResponse (Maybe Text)

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
rebootCacheCluster_cacheClusterId :: Lens' RebootCacheCluster Text

-- | A list of cache node IDs to reboot. A node ID is a numeric identifier
--   (0001, 0002, etc.). To reboot an entire cluster, specify all of the
--   cache node IDs.
rebootCacheCluster_cacheNodeIdsToReboot :: Lens' RebootCacheCluster [Text]

-- | Undocumented member.
rebootCacheClusterResponse_cacheCluster :: Lens' RebootCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
rebootCacheClusterResponse_httpStatus :: Lens' RebootCacheClusterResponse Int

-- | The list of user IDs that belong to the user group.
createUserGroup_userIds :: Lens' CreateUserGroup (Maybe (NonEmpty Text))

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUserGroup_tags :: Lens' CreateUserGroup (Maybe [Tag])

-- | The ID of the user group.
createUserGroup_userGroupId :: Lens' CreateUserGroup Text

-- | The current supported value is Redis.
createUserGroup_engine :: Lens' CreateUserGroup Text

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])

-- | The name of the cache security group to revoke ingress from.
revokeCacheSecurityGroupIngress_cacheSecurityGroupName :: Lens' RevokeCacheSecurityGroupIngress Text

-- | The name of the Amazon EC2 security group to revoke access from.
revokeCacheSecurityGroupIngress_eC2SecurityGroupName :: Lens' RevokeCacheSecurityGroupIngress Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
revokeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId :: Lens' RevokeCacheSecurityGroupIngress Text

-- | Undocumented member.
revokeCacheSecurityGroupIngressResponse_cacheSecurityGroup :: Lens' RevokeCacheSecurityGroupIngressResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
revokeCacheSecurityGroupIngressResponse_httpStatus :: Lens' RevokeCacheSecurityGroupIngressResponse Int

-- | The version number of the cache engine to be used for this cluster. To
--   view the supported cache engine versions, use the
--   DescribeCacheEngineVersions operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster or replication group and
--   create it anew with the earlier engine version.
createCacheCluster_engineVersion :: Lens' CreateCacheCluster (Maybe Text)

-- | The compute and memory capacity of the nodes in the node group
--   (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
createCacheCluster_cacheNodeType :: Lens' CreateCacheCluster (Maybe Text)

-- | One or more VPC security groups associated with the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
createCacheCluster_securityGroupIds :: Lens' CreateCacheCluster (Maybe [Text])

-- | A single-element string list containing an Amazon Resource Name (ARN)
--   that uniquely identifies a Redis RDB snapshot file stored in Amazon
--   S3. The snapshot file is used to populate the node group (shard). The
--   Amazon S3 object name in the ARN cannot contain any commas.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
createCacheCluster_snapshotArns :: Lens' CreateCacheCluster (Maybe [Text])

-- | This parameter is currently disabled.
createCacheCluster_autoMinorVersionUpgrade :: Lens' CreateCacheCluster (Maybe Bool)

-- | Specifies whether the nodes in the cluster are created in a single
--   outpost or across multiple outposts.
createCacheCluster_outpostMode :: Lens' CreateCacheCluster (Maybe OutpostMode)

-- | The name of the parameter group to associate with this cluster. If
--   this argument is omitted, the default parameter group for the
--   specified engine is used. You cannot use any parameter group which has
--   <tt>cluster-enabled='yes'</tt> when creating a cluster.
createCacheCluster_cacheParameterGroupName :: Lens' CreateCacheCluster (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_snapshotWindow :: Lens' CreateCacheCluster (Maybe Text)

-- | Specifies the destination, format and type of the logs.
createCacheCluster_logDeliveryConfigurations :: Lens' CreateCacheCluster (Maybe [LogDeliveryConfigurationRequest])

-- | <b>Reserved parameter.</b> The password used to access a password
--   protected server.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
createCacheCluster_authToken :: Lens' CreateCacheCluster (Maybe Text)

-- | The name of the cache engine to be used for this cluster.
--   
--   Valid values for this parameter are: <tt>memcached</tt> |
--   <tt>redis</tt>
createCacheCluster_engine :: Lens' CreateCacheCluster (Maybe Text)

-- | A list of the Availability Zones in which cache nodes are created. The
--   order of the zones in the list is not important.
--   
--   This option is only supported on Memcached.
--   
--   If you are creating your cluster in an Amazon VPC (recommended) you
--   can only locate nodes in Availability Zones that are associated with
--   the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheNodes</tt>.
--   
--   If you want all the nodes in the same Availability Zone, use
--   <tt>PreferredAvailabilityZone</tt> instead, or repeat the Availability
--   Zone multiple times in the list.
--   
--   Default: System chosen Availability Zones.
createCacheCluster_preferredAvailabilityZones :: Lens' CreateCacheCluster (Maybe [Text])

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
createCacheCluster_preferredMaintenanceWindow :: Lens' CreateCacheCluster (Maybe Text)

-- | The name of the subnet group to be used for the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
createCacheCluster_cacheSubnetGroupName :: Lens' CreateCacheCluster (Maybe Text)

-- | The EC2 Availability Zone in which the cluster is created.
--   
--   All nodes belonging to this cluster are placed in the preferred
--   Availability Zone. If you want to create your nodes across multiple
--   Availability Zones, use <tt>PreferredAvailabilityZones</tt>.
--   
--   Default: System chosen Availability Zone.
createCacheCluster_preferredAvailabilityZone :: Lens' CreateCacheCluster (Maybe Text)

-- | The number of days for which ElastiCache retains automatic snapshots
--   before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot taken today is
--   retained for 5 days before being deleted.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cache
--   cluster).
createCacheCluster_snapshotRetentionLimit :: Lens' CreateCacheCluster (Maybe Int)

-- | The outpost ARNs in which the cache cluster is created.
createCacheCluster_preferredOutpostArns :: Lens' CreateCacheCluster (Maybe [Text])

-- | Specifies whether the nodes in this Memcached cluster are created in a
--   single Availability Zone or created across multiple Availability Zones
--   in the cluster's region.
--   
--   This parameter is only supported for Memcached clusters.
--   
--   If the <tt>AZMode</tt> and <tt>PreferredAvailabilityZones</tt> are not
--   specified, ElastiCache assumes <tt>single-az</tt> mode.
createCacheCluster_aZMode :: Lens' CreateCacheCluster (Maybe AZMode)

-- | The name of a Redis snapshot from which to restore data into the new
--   node group (shard). The snapshot status changes to <tt>restoring</tt>
--   while the new node group (shard) is being created.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_snapshotName :: Lens' CreateCacheCluster (Maybe Text)

-- | The outpost ARN in which the cache cluster is created.
createCacheCluster_preferredOutpostArn :: Lens' CreateCacheCluster (Maybe Text)

-- | The ID of the replication group to which this cluster should belong.
--   If this parameter is specified, the cluster is added to the specified
--   replication group as a read replica; otherwise, the cluster is a
--   standalone primary that is not part of any replication group.
--   
--   If the specified replication group is Multi-AZ enabled and the
--   Availability Zone is not specified, the cluster is created in
--   Availability Zones that provide the best spread of read replicas
--   across Availability Zones.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
createCacheCluster_replicationGroupId :: Lens' CreateCacheCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
createCacheCluster_notificationTopicArn :: Lens' CreateCacheCluster (Maybe Text)

-- | The initial number of cache nodes that the cluster has.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   If you need more than 40 nodes for your Memcached cluster, please fill
--   out the ElastiCache Limit Increase Request form at
--   <a>http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.
createCacheCluster_numCacheNodes :: Lens' CreateCacheCluster (Maybe Int)

-- | A list of tags to be added to this resource.
createCacheCluster_tags :: Lens' CreateCacheCluster (Maybe [Tag])

-- | The port number on which each of the cache nodes accepts connections.
createCacheCluster_port :: Lens' CreateCacheCluster (Maybe Int)

-- | A list of security group names to associate with this cluster.
--   
--   Use this parameter only when you are creating a cluster outside of an
--   Amazon Virtual Private Cloud (Amazon VPC).
createCacheCluster_cacheSecurityGroupNames :: Lens' CreateCacheCluster (Maybe [Text])

-- | The node group (shard) identifier. This parameter is stored as a
--   lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 50 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createCacheCluster_cacheClusterId :: Lens' CreateCacheCluster Text

-- | Undocumented member.
createCacheClusterResponse_cacheCluster :: Lens' CreateCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
createCacheClusterResponse_httpStatus :: Lens' CreateCacheClusterResponse Int

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
describeEvents_sourceIdentifier :: Lens' DescribeEvents (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeEvents_marker :: Lens' DescribeEvents (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeEvents_maxRecords :: Lens' DescribeEvents (Maybe Int)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The number of minutes worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | A list of events. Each element in the list contains detailed
--   information about one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | Provides an identifier to allow retrieval of paginated results.
describeEventsResponse_marker :: Lens' DescribeEventsResponse (Maybe Text)

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeEngineDefaultParameters_marker :: Lens' DescribeEngineDefaultParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeEngineDefaultParameters_maxRecords :: Lens' DescribeEngineDefaultParameters (Maybe Int)

-- | The name of the cache parameter group family.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
describeEngineDefaultParameters_cacheParameterGroupFamily :: Lens' DescribeEngineDefaultParameters Text

-- | The response's http status code.
describeEngineDefaultParametersResponse_httpStatus :: Lens' DescribeEngineDefaultParametersResponse Int

-- | Undocumented member.
describeEngineDefaultParametersResponse_engineDefaults :: Lens' DescribeEngineDefaultParametersResponse EngineDefaults

-- | The name of the Global datastore
disassociateGlobalReplicationGroup_globalReplicationGroupId :: Lens' DisassociateGlobalReplicationGroup Text

-- | The name of the secondary cluster you wish to remove from the Global
--   datastore
disassociateGlobalReplicationGroup_replicationGroupId :: Lens' DisassociateGlobalReplicationGroup Text

-- | The Amazon region of secondary cluster you wish to remove from the
--   Global datastore
disassociateGlobalReplicationGroup_replicationGroupRegion :: Lens' DisassociateGlobalReplicationGroup Text

-- | Undocumented member.
disassociateGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DisassociateGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
disassociateGlobalReplicationGroupResponse_httpStatus :: Lens' DisassociateGlobalReplicationGroupResponse Int

-- | The name of the cache parameter group to modify.
modifyCacheParameterGroup_cacheParameterGroupName :: Lens' ModifyCacheParameterGroup Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be modified per
--   request.
modifyCacheParameterGroup_parameterNameValues :: Lens' ModifyCacheParameterGroup [ParameterNameValue]

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)

-- | The name of the replication group (console: cluster) whose automatic
--   failover is being tested by this operation.
testFailover_replicationGroupId :: Lens' TestFailover Text

-- | The name of the node group (called shard in the console) in this
--   replication group on which automatic failover is to be tested. You may
--   test automatic failover on up to 5 node groups in any rolling 24-hour
--   period.
testFailover_nodeGroupId :: Lens' TestFailover Text

-- | Undocumented member.
testFailoverResponse_replicationGroup :: Lens' TestFailoverResponse (Maybe ReplicationGroup)

-- | The response's http status code.
testFailoverResponse_httpStatus :: Lens' TestFailoverResponse Int

-- | The name of a final node group (shard) snapshot. ElastiCache creates
--   the snapshot from the primary node in the cluster, rather than one of
--   the replicas; this is to ensure that it captures the freshest data.
--   After the final snapshot is taken, the replication group is
--   immediately deleted.
deleteReplicationGroup_finalSnapshotIdentifier :: Lens' DeleteReplicationGroup (Maybe Text)

-- | If set to <tt>true</tt>, all of the read replicas are deleted, but the
--   primary node is retained.
deleteReplicationGroup_retainPrimaryCluster :: Lens' DeleteReplicationGroup (Maybe Bool)

-- | The identifier for the cluster to be deleted. This parameter is not
--   case sensitive.
deleteReplicationGroup_replicationGroupId :: Lens' DeleteReplicationGroup Text

-- | Undocumented member.
deleteReplicationGroupResponse_replicationGroup :: Lens' DeleteReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
deleteReplicationGroupResponse_httpStatus :: Lens' DeleteReplicationGroupResponse Int

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Web Services Service Namespaces</a>.
listTagsForResource_resourceName :: Lens' ListTagsForResource Text

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])

-- | Forces the migration to stop without ensuring that data is in sync. It
--   is recommended to use this option only to abort the migration and not
--   recommended when application wants to continue migration to
--   ElastiCache.
completeMigration_force :: Lens' CompleteMigration (Maybe Bool)

-- | The ID of the replication group to which data is being migrated.
completeMigration_replicationGroupId :: Lens' CompleteMigration Text

-- | Undocumented member.
completeMigrationResponse_replicationGroup :: Lens' CompleteMigrationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
completeMigrationResponse_httpStatus :: Lens' CompleteMigrationResponse Int

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to show only nodes (API/CLI:
--   clusters) that are not members of a replication group. In practice,
--   this mean Memcached and single node Redis clusters.
describeCacheClusters_showCacheClustersNotInReplicationGroups :: Lens' DescribeCacheClusters (Maybe Bool)

-- | The user-supplied cluster identifier. If this parameter is specified,
--   only information about that specific cluster is returned. This
--   parameter isn't case sensitive.
describeCacheClusters_cacheClusterId :: Lens' DescribeCacheClusters (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheClusters_marker :: Lens' DescribeCacheClusters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheClusters_maxRecords :: Lens' DescribeCacheClusters (Maybe Int)

-- | An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to retrieve information about
--   the individual cache nodes.
describeCacheClusters_showCacheNodeInfo :: Lens' DescribeCacheClusters (Maybe Bool)

-- | A list of clusters. Each item in the list contains detailed
--   information about one cluster.
describeCacheClustersResponse_cacheClusters :: Lens' DescribeCacheClustersResponse (Maybe [CacheCluster])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheClustersResponse_marker :: Lens' DescribeCacheClustersResponse (Maybe Text)

-- | The response's http status code.
describeCacheClustersResponse_httpStatus :: Lens' DescribeCacheClustersResponse Int

-- | The number of cache node instances to reserve.
--   
--   Default: <tt>1</tt>
purchaseReservedCacheNodesOffering_cacheNodeCount :: Lens' PurchaseReservedCacheNodesOffering (Maybe Int)

-- | A customer-specified identifier to track this reservation.
--   
--   The Reserved Cache Node ID is an unique customer-specified identifier
--   to track this reservation. If this parameter is not specified,
--   ElastiCache automatically generates an identifier for the reservation.
--   
--   Example: myreservationID
purchaseReservedCacheNodesOffering_reservedCacheNodeId :: Lens' PurchaseReservedCacheNodesOffering (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
purchaseReservedCacheNodesOffering_tags :: Lens' PurchaseReservedCacheNodesOffering (Maybe [Tag])

-- | The ID of the reserved cache node offering to purchase.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
purchaseReservedCacheNodesOffering_reservedCacheNodesOfferingId :: Lens' PurchaseReservedCacheNodesOffering Text

-- | Undocumented member.
purchaseReservedCacheNodesOfferingResponse_reservedCacheNode :: Lens' PurchaseReservedCacheNodesOfferingResponse (Maybe ReservedCacheNode)

-- | The response's http status code.
purchaseReservedCacheNodesOfferingResponse_httpStatus :: Lens' PurchaseReservedCacheNodesOfferingResponse Int

-- | The Amazon Resource Name (ARN) of the resource from which you want the
--   tags removed, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
removeTagsFromResource_resourceName :: Lens' RemoveTagsFromResource Text

-- | A list of <tt>TagKeys</tt> identifying the tags you want removed from
--   the named resource.
removeTagsFromResource_tagKeys :: Lens' RemoveTagsFromResource [Text]

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
modifyReplicationGroup_automaticFailoverEnabled :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The upgraded version of the cache engine to be run on the clusters in
--   the replication group.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing replication group and create it
--   anew with the earlier engine version.
modifyReplicationGroup_engineVersion :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A valid cache node type that you want to scale this replication group
--   to.
modifyReplicationGroup_cacheNodeType :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group. This parameter cannot be set for Redis (cluster
--   mode enabled) replication groups.
modifyReplicationGroup_snapshottingClusterId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the VPC Security Groups associated with the clusters in the
--   replication group.
--   
--   This parameter can be used only with replication group containing
--   clusters running in an Amazon Virtual Private Cloud (Amazon VPC).
modifyReplicationGroup_securityGroupIds :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | This parameter is currently disabled.
modifyReplicationGroup_autoMinorVersionUpgrade :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The name of the cache parameter group to apply to all of the clusters
--   in this replication group. This change is asynchronously applied as
--   soon as possible for parameters when the <tt>ApplyImmediately</tt>
--   parameter is specified as <tt>true</tt> for this request.
modifyReplicationGroup_cacheParameterGroupName :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A description for the replication group. Maximum length is 255
--   characters.
modifyReplicationGroup_replicationGroupDescription :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of the node group (shard) specified by
--   <tt>SnapshottingClusterId</tt>.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
modifyReplicationGroup_snapshotWindow :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the destination, format and type of the logs.
modifyReplicationGroup_logDeliveryConfigurations :: Lens' ModifyReplicationGroup (Maybe [LogDeliveryConfigurationRequest])

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update-strategy </tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
modifyReplicationGroup_authToken :: Lens' ModifyReplicationGroup (Maybe Text)

-- | For replication groups with a single primary, if this parameter is
--   specified, ElastiCache promotes the specified cluster in the specified
--   replication group to the primary role. The nodes of all other clusters
--   in the replication group are read replicas.
modifyReplicationGroup_primaryClusterId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
modifyReplicationGroup_preferredMaintenanceWindow :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A flag to indicate MultiAZ is enabled.
modifyReplicationGroup_multiAZEnabled :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | The ID of the user group you are associating with the replication
--   group.
modifyReplicationGroup_userGroupIdsToAdd :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | Deprecated. This parameter is not used.
modifyReplicationGroup_nodeGroupId :: Lens' ModifyReplicationGroup (Maybe Text)

-- | The number of days for which ElastiCache retains automatic node group
--   (shard) snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
modifyReplicationGroup_snapshotRetentionLimit :: Lens' ModifyReplicationGroup (Maybe Int)

-- | The ID of the user group to disassociate from the replication group,
--   meaning the users in the group no longer can access the replication
--   group.
modifyReplicationGroup_userGroupIdsToRemove :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | The status of the Amazon SNS notification topic for the replication
--   group. Notifications are sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
modifyReplicationGroup_notificationTopicStatus :: Lens' ModifyReplicationGroup (Maybe Text)

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the replication group.
--   
--   If <tt>false</tt>, changes to the nodes in the replication group are
--   applied on the next maintenance reboot, or the next failure reboot,
--   whichever occurs first.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
modifyReplicationGroup_applyImmediately :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | Removes the user group associated with this replication group.
modifyReplicationGroup_removeUserGroups :: Lens' ModifyReplicationGroup (Maybe Bool)

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
modifyReplicationGroup_authTokenUpdateStrategy :: Lens' ModifyReplicationGroup (Maybe AuthTokenUpdateStrategyType)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the replication group
--   owner.
modifyReplicationGroup_notificationTopicArn :: Lens' ModifyReplicationGroup (Maybe Text)

-- | A list of cache security group names to authorize for the clusters in
--   this replication group. This change is asynchronously applied as soon
--   as possible.
--   
--   This parameter can be used only with replication group containing
--   clusters running outside of an Amazon Virtual Private Cloud (Amazon
--   VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be <tt>Default</tt>.
modifyReplicationGroup_cacheSecurityGroupNames :: Lens' ModifyReplicationGroup (Maybe [Text])

-- | The identifier of the replication group to modify.
modifyReplicationGroup_replicationGroupId :: Lens' ModifyReplicationGroup Text

-- | Undocumented member.
modifyReplicationGroupResponse_replicationGroup :: Lens' ModifyReplicationGroupResponse (Maybe ReplicationGroup)

-- | The response's http status code.
modifyReplicationGroupResponse_httpStatus :: Lens' ModifyReplicationGroupResponse Int

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheParameters_marker :: Lens' DescribeCacheParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheParameters_maxRecords :: Lens' DescribeCacheParameters (Maybe Int)

-- | The parameter types to return.
--   
--   Valid values: <tt>user</tt> | <tt>system</tt> |
--   <tt>engine-default</tt>
describeCacheParameters_source :: Lens' DescribeCacheParameters (Maybe Text)

-- | The name of a specific cache parameter group to return details for.
describeCacheParameters_cacheParameterGroupName :: Lens' DescribeCacheParameters Text

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
describeCacheParametersResponse_cacheNodeTypeSpecificParameters :: Lens' DescribeCacheParametersResponse (Maybe [CacheNodeTypeSpecificParameter])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheParametersResponse_marker :: Lens' DescribeCacheParametersResponse (Maybe Text)

-- | A list of Parameter instances.
describeCacheParametersResponse_parameters :: Lens' DescribeCacheParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeCacheParametersResponse_httpStatus :: Lens' DescribeCacheParametersResponse Int

-- | Returns the list of members that comprise the Global datastore.
describeGlobalReplicationGroups_showMemberInfo :: Lens' DescribeGlobalReplicationGroups (Maybe Bool)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeGlobalReplicationGroups_marker :: Lens' DescribeGlobalReplicationGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeGlobalReplicationGroups_maxRecords :: Lens' DescribeGlobalReplicationGroups (Maybe Int)

-- | The name of the Global datastore
describeGlobalReplicationGroups_globalReplicationGroupId :: Lens' DescribeGlobalReplicationGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeGlobalReplicationGroupsResponse_marker :: Lens' DescribeGlobalReplicationGroupsResponse (Maybe Text)

-- | Indicates the slot configuration and global identifier for each slice
--   group.
describeGlobalReplicationGroupsResponse_globalReplicationGroups :: Lens' DescribeGlobalReplicationGroupsResponse (Maybe [GlobalReplicationGroup])

-- | The response's http status code.
describeGlobalReplicationGroupsResponse_httpStatus :: Lens' DescribeGlobalReplicationGroupsResponse Int

-- | The name of the cache subnet group to return details for.
describeCacheSubnetGroups_cacheSubnetGroupName :: Lens' DescribeCacheSubnetGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheSubnetGroups_marker :: Lens' DescribeCacheSubnetGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheSubnetGroups_maxRecords :: Lens' DescribeCacheSubnetGroups (Maybe Int)

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheSubnetGroupsResponse_marker :: Lens' DescribeCacheSubnetGroupsResponse (Maybe Text)

-- | A list of cache subnet groups. Each element in the list contains
--   detailed information about one group.
describeCacheSubnetGroupsResponse_cacheSubnetGroups :: Lens' DescribeCacheSubnetGroupsResponse (Maybe [CacheSubnetGroup])

-- | The response's http status code.
describeCacheSubnetGroupsResponse_httpStatus :: Lens' DescribeCacheSubnetGroupsResponse Int

-- | The cache cluster IDs
describeUpdateActions_cacheClusterIds :: Lens' DescribeUpdateActions (Maybe [Text])

-- | The unique ID of the service update
describeUpdateActions_serviceUpdateName :: Lens' DescribeUpdateActions (Maybe Text)

-- | The status of the update action.
describeUpdateActions_updateActionStatus :: Lens' DescribeUpdateActions (Maybe [UpdateActionStatus])

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
describeUpdateActions_engine :: Lens' DescribeUpdateActions (Maybe Text)

-- | The range of time specified to search for service updates that are in
--   available status
describeUpdateActions_serviceUpdateTimeRange :: Lens' DescribeUpdateActions (Maybe TimeRangeFilter)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeUpdateActions_marker :: Lens' DescribeUpdateActions (Maybe Text)

-- | The maximum number of records to include in the response
describeUpdateActions_maxRecords :: Lens' DescribeUpdateActions (Maybe Int)

-- | The replication group IDs
describeUpdateActions_replicationGroupIds :: Lens' DescribeUpdateActions (Maybe [Text])

-- | Dictates whether to include node level update status in the response
describeUpdateActions_showNodeLevelUpdateStatus :: Lens' DescribeUpdateActions (Maybe Bool)

-- | The status of the service update
describeUpdateActions_serviceUpdateStatus :: Lens' DescribeUpdateActions (Maybe [ServiceUpdateStatus])

-- | Returns a list of update actions
describeUpdateActionsResponse_updateActions :: Lens' DescribeUpdateActionsResponse (Maybe [UpdateAction])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeUpdateActionsResponse_marker :: Lens' DescribeUpdateActionsResponse (Maybe Text)

-- | The response's http status code.
describeUpdateActionsResponse_httpStatus :: Lens' DescribeUpdateActionsResponse Int

-- | The name of the Global datastore
rebalanceSlotsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' RebalanceSlotsInGlobalReplicationGroup Text

-- | If <tt>True</tt>, redistribution is applied immediately.
rebalanceSlotsInGlobalReplicationGroup_applyImmediately :: Lens' RebalanceSlotsInGlobalReplicationGroup Bool

-- | Undocumented member.
rebalanceSlotsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' RebalanceSlotsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
rebalanceSlotsInGlobalReplicationGroupResponse_httpStatus :: Lens' RebalanceSlotsInGlobalReplicationGroupResponse Int

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheSecurityGroup_tags :: Lens' CreateCacheSecurityGroup (Maybe [Tag])

-- | A name for the cache security group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Cannot be the word "Default".
--   
--   Example: <tt>mysecuritygroup</tt>
createCacheSecurityGroup_cacheSecurityGroupName :: Lens' CreateCacheSecurityGroup Text

-- | A description for the cache security group.
createCacheSecurityGroup_description :: Lens' CreateCacheSecurityGroup Text

-- | Undocumented member.
createCacheSecurityGroupResponse_cacheSecurityGroup :: Lens' CreateCacheSecurityGroupResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
createCacheSecurityGroupResponse_httpStatus :: Lens' CreateCacheSecurityGroupResponse Int

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ is enabled:
--   1</li><li>If Multi-AZ is not enabled: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
decreaseReplicaCount_newReplicaCount :: Lens' DecreaseReplicaCount (Maybe Int)

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
decreaseReplicaCount_replicaConfiguration :: Lens' DecreaseReplicaCount (Maybe [ConfigureShard])

-- | A list of the node ids to remove from the replication group or node
--   group (shard).
decreaseReplicaCount_replicasToRemove :: Lens' DecreaseReplicaCount (Maybe [Text])

-- | The id of the replication group from which you want to remove replica
--   nodes.
decreaseReplicaCount_replicationGroupId :: Lens' DecreaseReplicaCount Text

-- | If <tt>True</tt>, the number of replica nodes is decreased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
decreaseReplicaCount_applyImmediately :: Lens' DecreaseReplicaCount Bool

-- | Undocumented member.
decreaseReplicaCountResponse_replicationGroup :: Lens' DecreaseReplicaCountResponse (Maybe ReplicationGroup)

-- | The response's http status code.
decreaseReplicaCountResponse_httpStatus :: Lens' DecreaseReplicaCountResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
addTagsToResource_resourceName :: Lens' AddTagsToResource Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
addTagsToResource_tags :: Lens' AddTagsToResource [Tag]

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])

-- | The cache security group that allows network ingress.
authorizeCacheSecurityGroupIngress_cacheSecurityGroupName :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | The Amazon EC2 security group to be authorized for ingress to the
--   cache security group.
authorizeCacheSecurityGroupIngress_eC2SecurityGroupName :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
authorizeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId :: Lens' AuthorizeCacheSecurityGroupIngress Text

-- | Undocumented member.
authorizeCacheSecurityGroupIngressResponse_cacheSecurityGroup :: Lens' AuthorizeCacheSecurityGroupIngressResponse (Maybe CacheSecurityGroup)

-- | The response's http status code.
authorizeCacheSecurityGroupIngressResponse_httpStatus :: Lens' AuthorizeCacheSecurityGroupIngressResponse Int

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access.
--   
--   When using this parameter to export a snapshot, be sure Amazon
--   ElastiCache has the needed permissions to this S3 bucket. For more
--   information, see <a>Step 2: Grant ElastiCache Access to Your Amazon S3
--   Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.
--   
--   For more information, see <a>Exporting a Snapshot</a> in the <i>Amazon
--   ElastiCache User Guide</i>.
copySnapshot_targetBucket :: Lens' CopySnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the target snapshot.
copySnapshot_kmsKeyId :: Lens' CopySnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
copySnapshot_tags :: Lens' CopySnapshot (Maybe [Tag])

-- | The name of an existing snapshot from which to make a copy.
copySnapshot_sourceSnapshotName :: Lens' CopySnapshot Text

-- | A name for the snapshot copy. ElastiCache does not permit overwriting
--   a snapshot, therefore this name must be unique within its context -
--   ElastiCache or an Amazon S3 bucket if exporting.
copySnapshot_targetSnapshotName :: Lens' CopySnapshot Text

-- | Undocumented member.
copySnapshotResponse_snapshot :: Lens' CopySnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
copySnapshotResponse_httpStatus :: Lens' CopySnapshotResponse Int

-- | The name of the Global datastore
failoverGlobalReplicationGroup_globalReplicationGroupId :: Lens' FailoverGlobalReplicationGroup Text

-- | The Amazon region of the primary cluster of the Global datastore
failoverGlobalReplicationGroup_primaryRegion :: Lens' FailoverGlobalReplicationGroup Text

-- | The name of the primary replication group
failoverGlobalReplicationGroup_primaryReplicationGroupId :: Lens' FailoverGlobalReplicationGroup Text

-- | Undocumented member.
failoverGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' FailoverGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
failoverGlobalReplicationGroupResponse_httpStatus :: Lens' FailoverGlobalReplicationGroupResponse Int

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheSubnetGroup_tags :: Lens' CreateCacheSubnetGroup (Maybe [Tag])

-- | A name for the cache subnet group. This value is stored as a lowercase
--   string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
createCacheSubnetGroup_cacheSubnetGroupName :: Lens' CreateCacheSubnetGroup Text

-- | A description for the cache subnet group.
createCacheSubnetGroup_cacheSubnetGroupDescription :: Lens' CreateCacheSubnetGroup Text

-- | A list of VPC subnet IDs for the cache subnet group.
createCacheSubnetGroup_subnetIds :: Lens' CreateCacheSubnetGroup [Text]

-- | Undocumented member.
createCacheSubnetGroupResponse_cacheSubnetGroup :: Lens' CreateCacheSubnetGroupResponse (Maybe CacheSubnetGroup)

-- | The response's http status code.
createCacheSubnetGroupResponse_httpStatus :: Lens' CreateCacheSubnetGroupResponse Int

-- | Provides details of the Global datastore
createGlobalReplicationGroup_globalReplicationGroupDescription :: Lens' CreateGlobalReplicationGroup (Maybe Text)

-- | The suffix name of a Global datastore. Amazon ElastiCache
--   automatically applies a prefix to the Global datastore ID when it is
--   created. Each Amazon Region has its own prefix. For instance, a Global
--   datastore ID created in the US-West-1 region will begin with "dsdfu"
--   along with the suffix name you provide. The suffix, combined with the
--   auto-generated prefix, guarantees uniqueness of the Global datastore
--   name across multiple regions.
--   
--   For a full list of Amazon Regions and their respective Global
--   datastore iD prefixes, see <a>Using the Amazon CLI with Global
--   datastores</a> .
createGlobalReplicationGroup_globalReplicationGroupIdSuffix :: Lens' CreateGlobalReplicationGroup Text

-- | The name of the primary cluster that accepts writes and will replicate
--   updates to the secondary cluster.
createGlobalReplicationGroup_primaryReplicationGroupId :: Lens' CreateGlobalReplicationGroup Text

-- | Undocumented member.
createGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' CreateGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
createGlobalReplicationGroupResponse_httpStatus :: Lens' CreateGlobalReplicationGroupResponse Int

-- | The name of a specific cache parameter group to return details for.
describeCacheParameterGroups_cacheParameterGroupName :: Lens' DescribeCacheParameterGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheParameterGroups_marker :: Lens' DescribeCacheParameterGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheParameterGroups_maxRecords :: Lens' DescribeCacheParameterGroups (Maybe Int)

-- | A list of cache parameter groups. Each element in the list contains
--   detailed information about one cache parameter group.
describeCacheParameterGroupsResponse_cacheParameterGroups :: Lens' DescribeCacheParameterGroupsResponse (Maybe [CacheParameterGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheParameterGroupsResponse_marker :: Lens' DescribeCacheParameterGroupsResponse (Maybe Text)

-- | The response's http status code.
describeCacheParameterGroupsResponse_httpStatus :: Lens' DescribeCacheParameterGroupsResponse Int

-- | If <tt>true</tt>, all parameters in the cache parameter group are
--   reset to their default values. If <tt>false</tt>, only the parameters
--   listed by <tt>ParameterNameValues</tt> are reset to their default
--   values.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
resetCacheParameterGroup_resetAllParameters :: Lens' ResetCacheParameterGroup (Maybe Bool)

-- | An array of parameter names to reset to their default values. If
--   <tt>ResetAllParameters</tt> is <tt>true</tt>, do not use
--   <tt>ParameterNameValues</tt>. If <tt>ResetAllParameters</tt> is
--   <tt>false</tt>, you must specify the name of at least one parameter to
--   reset.
resetCacheParameterGroup_parameterNameValues :: Lens' ResetCacheParameterGroup (Maybe [ParameterNameValue])

-- | The name of the cache parameter group to reset.
resetCacheParameterGroup_cacheParameterGroupName :: Lens' ResetCacheParameterGroup Text

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)

-- | The name of the cluster you want to scale up to a larger node
--   instanced type. ElastiCache uses the cluster id to identify the
--   current node type of this cluster and from that to create a list of
--   node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
listAllowedNodeTypeModifications_cacheClusterId :: Lens' ListAllowedNodeTypeModifications (Maybe Text)

-- | The name of the replication group want to scale up to a larger node
--   type. ElastiCache uses the replication group id to identify the
--   current node type being used by this replication group, and from that
--   to create a list of node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
listAllowedNodeTypeModifications_replicationGroupId :: Lens' ListAllowedNodeTypeModifications (Maybe Text)

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group.
--   
--   When scaling up a Redis cluster or replication group using
--   <tt>ModifyCacheCluster</tt> or <tt>ModifyReplicationGroup</tt>, use a
--   value from this list for the <tt>CacheNodeType</tt> parameter.
listAllowedNodeTypeModificationsResponse_scaleUpModifications :: Lens' ListAllowedNodeTypeModificationsResponse (Maybe [Text])

-- | A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group. When scaling
--   down a Redis cluster or replication group using ModifyCacheCluster or
--   ModifyReplicationGroup, use a value from this list for the
--   CacheNodeType parameter.
listAllowedNodeTypeModificationsResponse_scaleDownModifications :: Lens' ListAllowedNodeTypeModificationsResponse (Maybe [Text])

-- | The response's http status code.
listAllowedNodeTypeModificationsResponse_httpStatus :: Lens' ListAllowedNodeTypeModificationsResponse Int

-- | The number of read replica nodes you want at the completion of this
--   operation. For Redis (cluster mode disabled) replication groups, this
--   is the number of replica nodes in the replication group. For Redis
--   (cluster mode enabled) replication groups, this is the number of
--   replica nodes in each of the replication group's node groups.
increaseReplicaCount_newReplicaCount :: Lens' IncreaseReplicaCount (Maybe Int)

-- | A list of <tt>ConfigureShard</tt> objects that can be used to
--   configure each shard in a Redis (cluster mode enabled) replication
--   group. The <tt>ConfigureShard</tt> has three members:
--   <tt>NewReplicaCount</tt>, <tt>NodeGroupId</tt>, and
--   <tt>PreferredAvailabilityZones</tt>.
increaseReplicaCount_replicaConfiguration :: Lens' IncreaseReplicaCount (Maybe [ConfigureShard])

-- | The id of the replication group to which you want to add replica
--   nodes.
increaseReplicaCount_replicationGroupId :: Lens' IncreaseReplicaCount Text

-- | If <tt>True</tt>, the number of replica nodes is increased
--   immediately. <tt>ApplyImmediately=False</tt> is not currently
--   supported.
increaseReplicaCount_applyImmediately :: Lens' IncreaseReplicaCount Bool

-- | Undocumented member.
increaseReplicaCountResponse_replicationGroup :: Lens' IncreaseReplicaCountResponse (Maybe ReplicationGroup)

-- | The response's http status code.
increaseReplicaCountResponse_httpStatus :: Lens' IncreaseReplicaCountResponse Int

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRetain</tt> is a list of
--   <tt>NodeGroupId</tt>s to retain in the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups except
--   those listed by <tt>NodeGroupsToRetain</tt> from the cluster.
modifyReplicationGroupShardConfiguration_nodeGroupsToRetain :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [Text])

-- | Specifies the preferred availability zones for each node group in the
--   cluster. If the value of <tt>NodeGroupCount</tt> is greater than the
--   current number of node groups (shards), you can use this parameter to
--   specify the preferred availability zones of the cluster's shards. If
--   you omit this parameter ElastiCache selects availability zones for
--   you.
--   
--   You can specify this parameter only if the value of
--   <tt>NodeGroupCount</tt> is greater than the current number of node
--   groups (shards).
modifyReplicationGroupShardConfiguration_reshardingConfiguration :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [ReshardingConfiguration])

-- | If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRemove</tt> is a list of
--   <tt>NodeGroupId</tt>s to remove from the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups listed by
--   <tt>NodeGroupsToRemove</tt> from the cluster.
modifyReplicationGroupShardConfiguration_nodeGroupsToRemove :: Lens' ModifyReplicationGroupShardConfiguration (Maybe [Text])

-- | The name of the Redis (cluster mode enabled) cluster (replication
--   group) on which the shards are to be configured.
modifyReplicationGroupShardConfiguration_replicationGroupId :: Lens' ModifyReplicationGroupShardConfiguration Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration.
modifyReplicationGroupShardConfiguration_nodeGroupCount :: Lens' ModifyReplicationGroupShardConfiguration Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is
--   <tt>true</tt>.
--   
--   Value: true
modifyReplicationGroupShardConfiguration_applyImmediately :: Lens' ModifyReplicationGroupShardConfiguration Bool

-- | Undocumented member.
modifyReplicationGroupShardConfigurationResponse_replicationGroup :: Lens' ModifyReplicationGroupShardConfigurationResponse (Maybe ReplicationGroup)

-- | The response's http status code.
modifyReplicationGroupShardConfigurationResponse_httpStatus :: Lens' ModifyReplicationGroupShardConfigurationResponse Int

-- | The cache cluster IDs
batchApplyUpdateAction_cacheClusterIds :: Lens' BatchApplyUpdateAction (Maybe [Text])

-- | The replication group IDs
batchApplyUpdateAction_replicationGroupIds :: Lens' BatchApplyUpdateAction (Maybe [Text])

-- | The unique ID of the service update
batchApplyUpdateAction_serviceUpdateName :: Lens' BatchApplyUpdateAction Text

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])

-- | The ID of the user group.
deleteUserGroup_userGroupId :: Lens' DeleteUserGroup Text

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])

-- | The unique ID of the service update
describeServiceUpdates_serviceUpdateName :: Lens' DescribeServiceUpdates (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeServiceUpdates_marker :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The maximum number of records to include in the response
describeServiceUpdates_maxRecords :: Lens' DescribeServiceUpdates (Maybe Int)

-- | The status of the service update
describeServiceUpdates_serviceUpdateStatus :: Lens' DescribeServiceUpdates (Maybe [ServiceUpdateStatus])

-- | A list of service updates
describeServiceUpdatesResponse_serviceUpdates :: Lens' DescribeServiceUpdatesResponse (Maybe [ServiceUpdate])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeServiceUpdatesResponse_marker :: Lens' DescribeServiceUpdatesResponse (Maybe Text)

-- | The response's http status code.
describeServiceUpdatesResponse_httpStatus :: Lens' DescribeServiceUpdatesResponse Int

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
describeSnapshots_cacheClusterId :: Lens' DescribeSnapshots (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeSnapshots_marker :: Lens' DescribeSnapshots (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 50
--   
--   Constraints: minimum 20; maximum 50.
describeSnapshots_maxRecords :: Lens' DescribeSnapshots (Maybe Int)

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this snapshot are described.
describeSnapshots_snapshotName :: Lens' DescribeSnapshots (Maybe Text)

-- | A Boolean value which if true, the node group (shard) configuration is
--   included in the snapshot description.
describeSnapshots_showNodeGroupConfig :: Lens' DescribeSnapshots (Maybe Bool)

-- | A user-supplied replication group identifier. If this parameter is
--   specified, only snapshots associated with that specific replication
--   group are described.
describeSnapshots_replicationGroupId :: Lens' DescribeSnapshots (Maybe Text)

-- | If set to <tt>system</tt>, the output shows snapshots that were
--   automatically created by ElastiCache. If set to <tt>user</tt> the
--   output shows snapshots that were manually created. If omitted, the
--   output shows both automatically and manually created snapshots.
describeSnapshots_snapshotSource :: Lens' DescribeSnapshots (Maybe Text)

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
describeSnapshotsResponse_snapshots :: Lens' DescribeSnapshotsResponse (Maybe [Snapshot])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeSnapshotsResponse_marker :: Lens' DescribeSnapshotsResponse (Maybe Text)

-- | The response's http status code.
describeSnapshotsResponse_httpStatus :: Lens' DescribeSnapshotsResponse Int

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReplicationGroups_marker :: Lens' DescribeReplicationGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReplicationGroups_maxRecords :: Lens' DescribeReplicationGroups (Maybe Int)

-- | The identifier for the replication group to be described. This
--   parameter is not case sensitive.
--   
--   If you do not specify this parameter, information about all
--   replication groups is returned.
describeReplicationGroups_replicationGroupId :: Lens' DescribeReplicationGroups (Maybe Text)

-- | Provides an identifier to allow retrieval of paginated results.
describeReplicationGroupsResponse_marker :: Lens' DescribeReplicationGroupsResponse (Maybe Text)

-- | A list of replication groups. Each item in the list contains detailed
--   information about one replication group.
describeReplicationGroupsResponse_replicationGroups :: Lens' DescribeReplicationGroupsResponse (Maybe [ReplicationGroup])

-- | The response's http status code.
describeReplicationGroupsResponse_httpStatus :: Lens' DescribeReplicationGroupsResponse Int

-- | Passwords used for this user. You can create up to two passwords for
--   each user.
createUser_passwords :: Lens' CreateUser (Maybe (NonEmpty Text))

-- | Indicates a password is not required for this user.
createUser_noPasswordRequired :: Lens' CreateUser (Maybe Bool)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUser_tags :: Lens' CreateUser (Maybe [Tag])

-- | The ID of the user.
createUser_userId :: Lens' CreateUser Text

-- | The username of the user.
createUser_userName :: Lens' CreateUser Text

-- | The current supported value is Redis.
createUser_engine :: Lens' CreateUser Text

-- | Access permissions string used for this user.
createUser_accessString :: Lens' CreateUser Text

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)

-- | The name of the snapshot to be deleted.
deleteSnapshot_snapshotName :: Lens' DeleteSnapshot Text

-- | Undocumented member.
deleteSnapshotResponse_snapshot :: Lens' DeleteSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
deleteSnapshotResponse_httpStatus :: Lens' DeleteSnapshotResponse Int

-- | The cache node type filter value. Use this parameter to show only the
--   available offerings matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
describeReservedCacheNodesOfferings_cacheNodeType :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The product description filter value. Use this parameter to show only
--   the available offerings matching the specified product description.
describeReservedCacheNodesOfferings_productDescription :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReservedCacheNodesOfferings_marker :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReservedCacheNodesOfferings_maxRecords :: Lens' DescribeReservedCacheNodesOfferings (Maybe Int)

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid Values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
describeReservedCacheNodesOfferings_offeringType :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | Duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for a given duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
describeReservedCacheNodesOfferings_duration :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | The offering identifier filter value. Use this parameter to show only
--   the available offering that matches the specified reservation
--   identifier.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
describeReservedCacheNodesOfferings_reservedCacheNodesOfferingId :: Lens' DescribeReservedCacheNodesOfferings (Maybe Text)

-- | Provides an identifier to allow retrieval of paginated results.
describeReservedCacheNodesOfferingsResponse_marker :: Lens' DescribeReservedCacheNodesOfferingsResponse (Maybe Text)

-- | A list of reserved cache node offerings. Each element in the list
--   contains detailed information about one offering.
describeReservedCacheNodesOfferingsResponse_reservedCacheNodesOfferings :: Lens' DescribeReservedCacheNodesOfferingsResponse (Maybe [ReservedCacheNodesOffering])

-- | The response's http status code.
describeReservedCacheNodesOfferingsResponse_httpStatus :: Lens' DescribeReservedCacheNodesOfferingsResponse Int

-- | The EC2 subnet IDs for the cache subnet group.
modifyCacheSubnetGroup_subnetIds :: Lens' ModifyCacheSubnetGroup (Maybe [Text])

-- | A description of the cache subnet group.
modifyCacheSubnetGroup_cacheSubnetGroupDescription :: Lens' ModifyCacheSubnetGroup (Maybe Text)

-- | The name for the cache subnet group. This value is stored as a
--   lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
modifyCacheSubnetGroup_cacheSubnetGroupName :: Lens' ModifyCacheSubnetGroup Text

-- | Undocumented member.
modifyCacheSubnetGroupResponse_cacheSubnetGroup :: Lens' ModifyCacheSubnetGroupResponse (Maybe CacheSubnetGroup)

-- | The response's http status code.
modifyCacheSubnetGroupResponse_httpStatus :: Lens' ModifyCacheSubnetGroupResponse Int

-- | The ID of the user.
deleteUser_userId :: Lens' DeleteUser Text

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)

-- | The identifier of an existing cluster. The snapshot is created from
--   this cluster.
createSnapshot_cacheClusterId :: Lens' CreateSnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
createSnapshot_kmsKeyId :: Lens' CreateSnapshot (Maybe Text)

-- | The identifier of an existing replication group. The snapshot is
--   created from this replication group.
createSnapshot_replicationGroupId :: Lens' CreateSnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSnapshot_tags :: Lens' CreateSnapshot (Maybe [Tag])

-- | A name for the snapshot being created.
createSnapshot_snapshotName :: Lens' CreateSnapshot Text

-- | Undocumented member.
createSnapshotResponse_snapshot :: Lens' CreateSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
createSnapshotResponse_httpStatus :: Lens' CreateSnapshotResponse Int

-- | Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
modifyGlobalReplicationGroup_automaticFailoverEnabled :: Lens' ModifyGlobalReplicationGroup (Maybe Bool)

-- | The upgraded version of the cache engine to be run on the clusters in
--   the Global datastore.
modifyGlobalReplicationGroup_engineVersion :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | A valid cache node type that you want to scale this Global datastore
--   to.
modifyGlobalReplicationGroup_cacheNodeType :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | The name of the cache parameter group to use with the Global
--   datastore. It must be compatible with the major engine version used by
--   the Global datastore.
modifyGlobalReplicationGroup_cacheParameterGroupName :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | A description of the Global datastore
modifyGlobalReplicationGroup_globalReplicationGroupDescription :: Lens' ModifyGlobalReplicationGroup (Maybe Text)

-- | The name of the Global datastore
modifyGlobalReplicationGroup_globalReplicationGroupId :: Lens' ModifyGlobalReplicationGroup Text

-- | This parameter causes the modifications in this request and any
--   pending modifications to be applied, asynchronously and as soon as
--   possible. Modifications to Global Replication Groups cannot be
--   requested to be applied in PreferredMaintenceWindow.
modifyGlobalReplicationGroup_applyImmediately :: Lens' ModifyGlobalReplicationGroup Bool

-- | Undocumented member.
modifyGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' ModifyGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
modifyGlobalReplicationGroupResponse_httpStatus :: Lens' ModifyGlobalReplicationGroupResponse Int

-- | The ID of the user group.
describeUserGroups_userGroupId :: Lens' DescribeUserGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUserGroups_marker :: Lens' DescribeUserGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
describeUserGroups_maxRecords :: Lens' DescribeUserGroups (Maybe Int)

-- | Returns a list of user groups.
describeUserGroupsResponse_userGroups :: Lens' DescribeUserGroupsResponse (Maybe [UserGroup])

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
describeUserGroupsResponse_marker :: Lens' DescribeUserGroupsResponse (Maybe Text)

-- | The response's http status code.
describeUserGroupsResponse_httpStatus :: Lens' DescribeUserGroupsResponse Int

-- | The name of the cache parameter group to delete.
--   
--   The specified cache security group must not be associated with any
--   clusters.
deleteCacheParameterGroup_cacheParameterGroupName :: Lens' DeleteCacheParameterGroup Text

-- | The name of the cache security group to return details for.
describeCacheSecurityGroups_cacheSecurityGroupName :: Lens' DescribeCacheSecurityGroups (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheSecurityGroups_marker :: Lens' DescribeCacheSecurityGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheSecurityGroups_maxRecords :: Lens' DescribeCacheSecurityGroups (Maybe Int)

-- | A list of cache security groups. Each element in the list contains
--   detailed information about one group.
describeCacheSecurityGroupsResponse_cacheSecurityGroups :: Lens' DescribeCacheSecurityGroupsResponse (Maybe [CacheSecurityGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheSecurityGroupsResponse_marker :: Lens' DescribeCacheSecurityGroupsResponse (Maybe Text)

-- | The response's http status code.
describeCacheSecurityGroupsResponse_httpStatus :: Lens' DescribeCacheSecurityGroupsResponse Int

-- | The cache cluster IDs
batchStopUpdateAction_cacheClusterIds :: Lens' BatchStopUpdateAction (Maybe [Text])

-- | The replication group IDs
batchStopUpdateAction_replicationGroupIds :: Lens' BatchStopUpdateAction (Maybe [Text])

-- | The unique ID of the service update
batchStopUpdateAction_serviceUpdateName :: Lens' BatchStopUpdateAction Text

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])

-- | The upgraded version of the cache engine to be run on the cache nodes.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster and create it anew with
--   the earlier engine version.
modifyCacheCluster_engineVersion :: Lens' ModifyCacheCluster (Maybe Text)

-- | A valid cache node type that you want to scale this cluster up to.
modifyCacheCluster_cacheNodeType :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies the VPC Security Groups associated with the cluster.
--   
--   This parameter can be used only with clusters that are created in an
--   Amazon Virtual Private Cloud (Amazon VPC).
modifyCacheCluster_securityGroupIds :: Lens' ModifyCacheCluster (Maybe [Text])

-- | This parameter is currently disabled.
modifyCacheCluster_autoMinorVersionUpgrade :: Lens' ModifyCacheCluster (Maybe Bool)

-- | The name of the cache parameter group to apply to this cluster. This
--   change is asynchronously applied as soon as possible for parameters
--   when the <tt>ApplyImmediately</tt> parameter is specified as
--   <tt>true</tt> for this request.
modifyCacheCluster_cacheParameterGroupName :: Lens' ModifyCacheCluster (Maybe Text)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
modifyCacheCluster_snapshotWindow :: Lens' ModifyCacheCluster (Maybe Text)

-- | This option is only supported on Memcached clusters.
--   
--   The list of Availability Zones where the new Memcached cache nodes are
--   created.
--   
--   This parameter is only valid when <tt>NumCacheNodes</tt> in the
--   request is greater than the sum of the number of active cache nodes
--   and the number of cache nodes pending creation (which may be zero).
--   The number of Availability Zones supplied in this list must match the
--   cache nodes being added in this request.
--   
--   Scenarios:
--   
--   <ul>
--   <li><b>Scenario 1:</b> You have 3 active nodes and wish to add 2
--   nodes. Specify <tt>NumCacheNodes=5</tt> (3 + 2) and optionally specify
--   two Availability Zones for the two new nodes.</li>
--   <li><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
--   creation (from the scenario 1 call) and want to add 1 more node.
--   Specify <tt>NumCacheNodes=6</tt> ((3 + 2) + 1) and optionally specify
--   an Availability Zone for the new node.</li>
--   <li><b>Scenario 3:</b> You want to cancel all pending operations.
--   Specify <tt>NumCacheNodes=3</tt> to cancel all pending
--   operations.</li>
--   </ul>
--   
--   The Availability Zone placement of nodes pending creation cannot be
--   modified. If you wish to cancel any nodes pending creation, add 0
--   nodes by setting <tt>NumCacheNodes</tt> to the number of current
--   nodes.
--   
--   If <tt>cross-az</tt> is specified, existing Memcached nodes remain in
--   their current Availability Zone. Only newly created nodes can be
--   located in different Availability Zones. For guidance on how to move
--   existing Memcached nodes to different Availability Zones, see the
--   __Availability Zone Considerations__ section of <a>Cache Node
--   Considerations for Memcached</a>.
--   
--   <b>Impact of new add/remove requests upon pending requests</b>
--   
--   <ul>
--   <li>Scenario-1<ul><li>Pending Action: Delete</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-2<ul><li>Pending Action: Delete</li><li>New Request:
--   Create</li><li>Result: The new create, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-3<ul><li>Pending Action: Create</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending create.</li></ul></li>
--   <li>Scenario-4<ul><li>Pending Action: Create</li><li>New Request:
--   Create</li><li>Result: The new create is added to the pending
--   create.<b>Important:</b> If the new create request is __Apply
--   Immediately - Yes__, all creates are performed immediately. If the new
--   create request is <b>Apply Immediately - No</b>, all creates are
--   pending.</li></ul></li>
--   </ul>
modifyCacheCluster_newAvailabilityZones :: Lens' ModifyCacheCluster (Maybe [Text])

-- | Specifies the destination, format and type of the logs.
modifyCacheCluster_logDeliveryConfigurations :: Lens' ModifyCacheCluster (Maybe [LogDeliveryConfigurationRequest])

-- | Reserved parameter. The password used to access a password protected
--   server. This parameter must be specified with the
--   <tt>auth-token-update</tt> parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
modifyCacheCluster_authToken :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
modifyCacheCluster_preferredMaintenanceWindow :: Lens' ModifyCacheCluster (Maybe Text)

-- | A list of cache node IDs to be removed. A node ID is a numeric
--   identifier (0001, 0002, etc.). This parameter is only valid when
--   <tt>NumCacheNodes</tt> is less than the existing number of cache
--   nodes. The number of cache node IDs supplied in this parameter must
--   match the difference between the existing number of cache nodes in the
--   cluster or pending cache nodes, whichever is greater, and the value of
--   <tt>NumCacheNodes</tt> in the request.
--   
--   For example: If you have 3 active cache nodes, 7 pending cache nodes,
--   and the number of cache nodes in this <tt>ModifyCacheCluster</tt> call
--   is 5, you must list 2 (7 - 5) cache node IDs to remove.
modifyCacheCluster_cacheNodeIdsToRemove :: Lens' ModifyCacheCluster (Maybe [Text])

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
modifyCacheCluster_snapshotRetentionLimit :: Lens' ModifyCacheCluster (Maybe Int)

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
modifyCacheCluster_notificationTopicStatus :: Lens' ModifyCacheCluster (Maybe Text)

-- | Specifies whether the new nodes in this Memcached cluster are all
--   created in a single Availability Zone or created across multiple
--   Availability Zones.
--   
--   Valid values: <tt>single-az</tt> | <tt>cross-az</tt>.
--   
--   This option is only supported for Memcached clusters.
--   
--   You cannot specify <tt>single-az</tt> if the Memcached cluster already
--   has cache nodes in different Availability Zones. If <tt>cross-az</tt>
--   is specified, existing Memcached nodes remain in their current
--   Availability Zone.
--   
--   Only newly created nodes are located in different Availability Zones.
modifyCacheCluster_aZMode :: Lens' ModifyCacheCluster (Maybe AZMode)

-- | If <tt>true</tt>, this parameter causes the modifications in this
--   request and any pending modifications to be applied, asynchronously
--   and as soon as possible, regardless of the
--   <tt>PreferredMaintenanceWindow</tt> setting for the cluster.
--   
--   If <tt>false</tt>, changes to the cluster are applied on the next
--   maintenance reboot, or the next failure reboot, whichever occurs
--   first.
--   
--   If you perform a <tt>ModifyCacheCluster</tt> before a pending
--   modification is applied, the pending modification is replaced by the
--   newer modification.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
modifyCacheCluster_applyImmediately :: Lens' ModifyCacheCluster (Maybe Bool)

-- | Specifies the strategy to use to update the AUTH token. This parameter
--   must be specified with the <tt>auth-token</tt> parameter. Possible
--   values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
modifyCacheCluster_authTokenUpdateStrategy :: Lens' ModifyCacheCluster (Maybe AuthTokenUpdateStrategyType)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the cluster owner.
modifyCacheCluster_notificationTopicArn :: Lens' ModifyCacheCluster (Maybe Text)

-- | The number of cache nodes that the cluster should have. If the value
--   for <tt>NumCacheNodes</tt> is greater than the sum of the number of
--   current cache nodes and the number of cache nodes pending creation
--   (which may be zero), more nodes are added. If the value is less than
--   the number of existing cache nodes, nodes are removed. If the value is
--   equal to the number of current cache nodes, any pending add or remove
--   requests are canceled.
--   
--   If you are removing cache nodes, you must use the
--   <tt>CacheNodeIdsToRemove</tt> parameter to provide the IDs of the
--   specific cache nodes to remove.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   Adding or removing Memcached cache nodes can be applied immediately or
--   as a pending operation (see <tt>ApplyImmediately</tt>).
--   
--   A pending operation to modify the number of cache nodes in a cluster
--   during its maintenance window, whether by adding or removing nodes in
--   accordance with the scale out architecture, is not queued. The
--   customer's latest request to add or remove nodes to the cluster
--   overrides any previous pending operations to modify the number of
--   cache nodes in the cluster. For example, a request to remove 2 nodes
--   would override a previous pending operation to remove 3 nodes.
--   Similarly, a request to add 2 nodes would override a previous pending
--   operation to remove 3 nodes and vice versa. As Memcached cache nodes
--   may now be provisioned in different Availability Zones with flexible
--   cache node placement, a request to add nodes does not automatically
--   override a previous pending operation to add nodes. The customer can
--   modify the previous pending operation to add more nodes or explicitly
--   cancel the pending request and retry the new request. To cancel
--   pending operations to modify the number of cache nodes in a cluster,
--   use the <tt>ModifyCacheCluster</tt> request and set
--   <tt>NumCacheNodes</tt> equal to the number of cache nodes currently in
--   the cluster.
modifyCacheCluster_numCacheNodes :: Lens' ModifyCacheCluster (Maybe Int)

-- | A list of cache security group names to authorize on this cluster.
--   This change is asynchronously applied as soon as possible.
--   
--   You can use this parameter only with clusters that are created outside
--   of an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be "Default".
modifyCacheCluster_cacheSecurityGroupNames :: Lens' ModifyCacheCluster (Maybe [Text])

-- | The cluster identifier. This value is stored as a lowercase string.
modifyCacheCluster_cacheClusterId :: Lens' ModifyCacheCluster Text

-- | Undocumented member.
modifyCacheClusterResponse_cacheCluster :: Lens' ModifyCacheClusterResponse (Maybe CacheCluster)

-- | The response's http status code.
modifyCacheClusterResponse_httpStatus :: Lens' ModifyCacheClusterResponse Int

-- | The cache engine version to return.
--   
--   Example: <tt>1.4.14</tt>
describeCacheEngineVersions_engineVersion :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | The name of a specific cache parameter group family to return details
--   for.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   Constraints:
--   
--   <ul>
--   <li>Must be 1 to 255 alphanumeric characters</li>
--   <li>First character must be a letter</li>
--   <li>Cannot end with a hyphen or contain two consecutive hyphens</li>
--   </ul>
describeCacheEngineVersions_cacheParameterGroupFamily :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | If <tt>true</tt>, specifies that only the default version of the
--   specified engine or engine and major version combination is to be
--   returned.
describeCacheEngineVersions_defaultOnly :: Lens' DescribeCacheEngineVersions (Maybe Bool)

-- | The cache engine to return. Valid values: <tt>memcached</tt> |
--   <tt>redis</tt>
describeCacheEngineVersions_engine :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeCacheEngineVersions_marker :: Lens' DescribeCacheEngineVersions (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeCacheEngineVersions_maxRecords :: Lens' DescribeCacheEngineVersions (Maybe Int)

-- | A list of cache engine version details. Each element in the list
--   contains detailed information about one cache engine version.
describeCacheEngineVersionsResponse_cacheEngineVersions :: Lens' DescribeCacheEngineVersionsResponse (Maybe [CacheEngineVersion])

-- | Provides an identifier to allow retrieval of paginated results.
describeCacheEngineVersionsResponse_marker :: Lens' DescribeCacheEngineVersionsResponse (Maybe Text)

-- | The response's http status code.
describeCacheEngineVersionsResponse_httpStatus :: Lens' DescribeCacheEngineVersionsResponse Int

-- | The list of user IDs to add to the user group.
modifyUserGroup_userIdsToAdd :: Lens' ModifyUserGroup (Maybe (NonEmpty Text))

-- | The list of user IDs to remove from the user group.
modifyUserGroup_userIdsToRemove :: Lens' ModifyUserGroup (Maybe (NonEmpty Text))

-- | The ID of the user group.
modifyUserGroup_userGroupId :: Lens' ModifyUserGroup Text

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createCacheParameterGroup_tags :: Lens' CreateCacheParameterGroup (Maybe [Tag])

-- | A user-specified name for the cache parameter group.
createCacheParameterGroup_cacheParameterGroupName :: Lens' CreateCacheParameterGroup Text

-- | The name of the cache parameter group family that the cache parameter
--   group can be used with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
createCacheParameterGroup_cacheParameterGroupFamily :: Lens' CreateCacheParameterGroup Text

-- | A user-specified description for the cache parameter group.
createCacheParameterGroup_description :: Lens' CreateCacheParameterGroup Text

-- | Undocumented member.
createCacheParameterGroupResponse_cacheParameterGroup :: Lens' CreateCacheParameterGroupResponse (Maybe CacheParameterGroup)

-- | The response's http status code.
createCacheParameterGroupResponse_httpStatus :: Lens' CreateCacheParameterGroupResponse Int

-- | The cache node type filter value. Use this parameter to show only
--   those reservations matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
describeReservedCacheNodes_cacheNodeType :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The product description filter value. Use this parameter to show only
--   those reservations matching the specified product description.
describeReservedCacheNodes_productDescription :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | An optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
describeReservedCacheNodes_marker :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified <tt>MaxRecords</tt> value, a marker
--   is included in the response so that the remaining results can be
--   retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
describeReservedCacheNodes_maxRecords :: Lens' DescribeReservedCacheNodes (Maybe Int)

-- | The reserved cache node identifier filter value. Use this parameter to
--   show only the reservation that matches the specified reservation ID.
describeReservedCacheNodes_reservedCacheNodeId :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The offering type filter value. Use this parameter to show only the
--   available offerings matching the specified offering type.
--   
--   Valid values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
describeReservedCacheNodes_offeringType :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The duration filter value, specified in years or seconds. Use this
--   parameter to show only reservations for this duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
describeReservedCacheNodes_duration :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | The offering identifier filter value. Use this parameter to show only
--   purchased reservations matching the specified offering identifier.
describeReservedCacheNodes_reservedCacheNodesOfferingId :: Lens' DescribeReservedCacheNodes (Maybe Text)

-- | Provides an identifier to allow retrieval of paginated results.
describeReservedCacheNodesResponse_marker :: Lens' DescribeReservedCacheNodesResponse (Maybe Text)

-- | A list of reserved cache nodes. Each element in the list contains
--   detailed information about one node.
describeReservedCacheNodesResponse_reservedCacheNodes :: Lens' DescribeReservedCacheNodesResponse (Maybe [ReservedCacheNode])

-- | The response's http status code.
describeReservedCacheNodesResponse_httpStatus :: Lens' DescribeReservedCacheNodesResponse Int

-- | The name of the Global datastore
deleteGlobalReplicationGroup_globalReplicationGroupId :: Lens' DeleteGlobalReplicationGroup Text

-- | The primary replication group is retained as a standalone replication
--   group.
deleteGlobalReplicationGroup_retainPrimaryReplicationGroup :: Lens' DeleteGlobalReplicationGroup Bool

-- | Undocumented member.
deleteGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DeleteGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
deleteGlobalReplicationGroupResponse_httpStatus :: Lens' DeleteGlobalReplicationGroupResponse Int

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to
--   remove from the cluster. ElastiCache for Redis will attempt to remove
--   all node groups listed by GlobalNodeGroupsToRemove from the cluster.
decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRemove :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup (Maybe [Text])

-- | If the value of NodeGroupCount is less than the current number of node
--   groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain
--   is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to
--   retain from the cluster. ElastiCache for Redis will attempt to retain
--   all node groups listed by GlobalNodeGroupsToRetain from the cluster.
decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRetain :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup (Maybe [Text])

-- | The name of the Global datastore
decreaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Text

-- | The number of node groups (shards) that results from the modification
--   of the shard configuration
decreaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Int

-- | Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is true.
decreaseNodeGroupsInGlobalReplicationGroup_applyImmediately :: Lens' DecreaseNodeGroupsInGlobalReplicationGroup Bool

-- | Undocumented member.
decreaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup :: Lens' DecreaseNodeGroupsInGlobalReplicationGroupResponse (Maybe GlobalReplicationGroup)

-- | The response's http status code.
decreaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus :: Lens' DecreaseNodeGroupsInGlobalReplicationGroupResponse Int

-- | Adds additional user permissions to the access string.
modifyUser_appendAccessString :: Lens' ModifyUser (Maybe Text)

-- | Access permissions string used for this user.
modifyUser_accessString :: Lens' ModifyUser (Maybe Text)

-- | The passwords belonging to the user. You are allowed up to two.
modifyUser_passwords :: Lens' ModifyUser (Maybe (NonEmpty Text))

-- | Indicates no password is required for the user.
modifyUser_noPasswordRequired :: Lens' ModifyUser (Maybe Bool)

-- | The ID of the user.
modifyUser_userId :: Lens' ModifyUser Text

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)

-- | The name of the cache subnet group to delete.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
deleteCacheSubnetGroup_cacheSubnetGroupName :: Lens' DeleteCacheSubnetGroup Text

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)

-- | The date the auth token was last modified
cacheCluster_authTokenLastModifiedDate :: Lens' CacheCluster (Maybe UTCTime)

-- | The version of the cache engine that is used in this cluster.
cacheCluster_engineVersion :: Lens' CacheCluster (Maybe Text)

-- | The name of the compute and memory capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
cacheCluster_cacheNodeType :: Lens' CacheCluster (Maybe Text)

-- | A list of cache nodes that are members of the cluster.
cacheCluster_cacheNodes :: Lens' CacheCluster (Maybe [CacheNode])

-- | The date and time when the cluster was created.
cacheCluster_cacheClusterCreateTime :: Lens' CacheCluster (Maybe UTCTime)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_atRestEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | This parameter is currently disabled.
cacheCluster_autoMinorVersionUpgrade :: Lens' CacheCluster (Maybe Bool)

-- | A list of VPC Security Groups associated with the cluster.
cacheCluster_securityGroups :: Lens' CacheCluster (Maybe [SecurityGroupMembership])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
cacheCluster_notificationConfiguration :: Lens' CacheCluster (Maybe NotificationConfiguration)

-- | The ARN (Amazon Resource Name) of the cache cluster.
cacheCluster_arn :: Lens' CacheCluster (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
cacheCluster_transitEncryptionEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your cluster.
--   
--   Example: <tt>05:00-09:00</tt>
cacheCluster_snapshotWindow :: Lens' CacheCluster (Maybe Text)

-- | The user-supplied identifier of the cluster. This identifier is a
--   unique key that identifies a cluster.
cacheCluster_cacheClusterId :: Lens' CacheCluster (Maybe Text)

-- | Returns the destination, format and type of the logs.
cacheCluster_logDeliveryConfigurations :: Lens' CacheCluster (Maybe [LogDeliveryConfiguration])

-- | Represents a Memcached cluster endpoint which can be used by an
--   application to connect to any node in the cluster. The configuration
--   endpoint will always have <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
cacheCluster_configurationEndpoint :: Lens' CacheCluster (Maybe Endpoint)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to
--   be used for this cluster.
cacheCluster_engine :: Lens' CacheCluster (Maybe Text)

-- | A list of cache security group elements, composed of name and status
--   sub-elements.
cacheCluster_cacheSecurityGroups :: Lens' CacheCluster (Maybe [CacheSecurityGroupMembership])

-- | A boolean value indicating whether log delivery is enabled for the
--   replication group.
cacheCluster_replicationGroupLogDeliveryEnabled :: Lens' CacheCluster (Maybe Bool)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
cacheCluster_authTokenEnabled :: Lens' CacheCluster (Maybe Bool)

-- | The URL of the web page where you can download the latest ElastiCache
--   client library.
cacheCluster_clientDownloadLandingPage :: Lens' CacheCluster (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
cacheCluster_preferredMaintenanceWindow :: Lens' CacheCluster (Maybe Text)

-- | The name of the cache subnet group associated with the cluster.
cacheCluster_cacheSubnetGroupName :: Lens' CacheCluster (Maybe Text)

-- | The name of the Availability Zone in which the cluster is located or
--   "Multiple" if the cache nodes are located in different Availability
--   Zones.
cacheCluster_preferredAvailabilityZone :: Lens' CacheCluster (Maybe Text)

-- | Status of the cache parameter group.
cacheCluster_cacheParameterGroup :: Lens' CacheCluster (Maybe CacheParameterGroupStatus)

-- | The current state of this cluster, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>deleted</tt>,
--   <tt>deleting</tt>, <tt>incompatible-network</tt>, <tt>modifying</tt>,
--   <tt>rebooting cluster nodes</tt>, <tt>restore-failed</tt>, or
--   <tt>snapshotting</tt>.
cacheCluster_cacheClusterStatus :: Lens' CacheCluster (Maybe Text)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
cacheCluster_snapshotRetentionLimit :: Lens' CacheCluster (Maybe Int)

-- | The outpost ARN in which the cache cluster is created.
cacheCluster_preferredOutpostArn :: Lens' CacheCluster (Maybe Text)

-- | The replication group to which this cluster belongs. If this field is
--   empty, the cluster is not associated with any replication group.
cacheCluster_replicationGroupId :: Lens' CacheCluster (Maybe Text)

-- | Undocumented member.
cacheCluster_pendingModifiedValues :: Lens' CacheCluster (Maybe PendingModifiedValues)

-- | The number of cache nodes in the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
cacheCluster_numCacheNodes :: Lens' CacheCluster (Maybe Int)

-- | The version number of the cache engine.
cacheEngineVersion_engineVersion :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache parameter group family associated with this
--   cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheEngineVersion_cacheParameterGroupFamily :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine.
cacheEngineVersion_cacheEngineDescription :: Lens' CacheEngineVersion (Maybe Text)

-- | The name of the cache engine.
cacheEngineVersion_engine :: Lens' CacheEngineVersion (Maybe Text)

-- | The description of the cache engine version.
cacheEngineVersion_cacheEngineVersionDescription :: Lens' CacheEngineVersion (Maybe Text)

-- | The ID of the primary node to which this read replica node is
--   synchronized. If this field is empty, this node is not associated with
--   a primary cluster.
cacheNode_sourceCacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The status of the parameter group applied to this cache node.
cacheNode_parameterGroupStatus :: Lens' CacheNode (Maybe Text)

-- | The date and time when the cache node was created.
cacheNode_cacheNodeCreateTime :: Lens' CacheNode (Maybe UTCTime)

-- | The Availability Zone where this node was created and now resides.
cacheNode_customerAvailabilityZone :: Lens' CacheNode (Maybe Text)

-- | The cache node identifier. A node ID is a numeric identifier (0001,
--   0002, etc.). The combination of cluster ID and node ID uniquely
--   identifies every cache node used in a customer's Amazon account.
cacheNode_cacheNodeId :: Lens' CacheNode (Maybe Text)

-- | The customer outpost ARN of the cache node.
cacheNode_customerOutpostArn :: Lens' CacheNode (Maybe Text)

-- | The current state of this cache node, one of the following values:
--   <tt>available</tt>, <tt>creating</tt>, <tt>rebooting</tt>, or
--   <tt>deleting</tt>.
cacheNode_cacheNodeStatus :: Lens' CacheNode (Maybe Text)

-- | The hostname for connecting to this cache node.
cacheNode_endpoint :: Lens' CacheNode (Maybe Endpoint)

-- | A list of cache node types and their corresponding values for this
--   parameter.
cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues :: Lens' CacheNodeTypeSpecificParameter (Maybe [CacheNodeTypeSpecificValue])

-- | The earliest cache engine version to which the parameter can apply.
cacheNodeTypeSpecificParameter_minimumEngineVersion :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The source of the parameter value.
cacheNodeTypeSpecificParameter_source :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
cacheNodeTypeSpecificParameter_isModifiable :: Lens' CacheNodeTypeSpecificParameter (Maybe Bool)

-- | The valid data type for the parameter.
cacheNodeTypeSpecificParameter_dataType :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The valid range of values for the parameter.
cacheNodeTypeSpecificParameter_allowedValues :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | The name of the parameter.
cacheNodeTypeSpecificParameter_parameterName :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | A description of the parameter.
cacheNodeTypeSpecificParameter_description :: Lens' CacheNodeTypeSpecificParameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
cacheNodeTypeSpecificParameter_changeType :: Lens' CacheNodeTypeSpecificParameter (Maybe ChangeType)

-- | The cache node type for which this value applies.
cacheNodeTypeSpecificValue_cacheNodeType :: Lens' CacheNodeTypeSpecificValue (Maybe Text)

-- | The value for the cache node type.
cacheNodeTypeSpecificValue_value :: Lens' CacheNodeTypeSpecificValue (Maybe Text)

-- | The end date of the update for a node
cacheNodeUpdateStatus_nodeUpdateEndDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
cacheNodeUpdateStatus_nodeUpdateInitiatedBy :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified&gt;
cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The node ID of the cache cluster
cacheNodeUpdateStatus_cacheNodeId :: Lens' CacheNodeUpdateStatus (Maybe Text)

-- | The date when the update is triggered
cacheNodeUpdateStatus_nodeUpdateInitiatedDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
cacheNodeUpdateStatus_nodeUpdateStartDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The update status of the node
cacheNodeUpdateStatus_nodeUpdateStatus :: Lens' CacheNodeUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
cacheNodeUpdateStatus_nodeDeletionDate :: Lens' CacheNodeUpdateStatus (Maybe UTCTime)

-- | The name of the cache parameter group family that this cache parameter
--   group is compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
cacheParameterGroup_cacheParameterGroupFamily :: Lens' CacheParameterGroup (Maybe Text)

-- | The ARN (Amazon Resource Name) of the cache parameter group.
cacheParameterGroup_arn :: Lens' CacheParameterGroup (Maybe Text)

-- | The name of the cache parameter group.
cacheParameterGroup_cacheParameterGroupName :: Lens' CacheParameterGroup (Maybe Text)

-- | Indicates whether the parameter group is associated with a Global
--   datastore
cacheParameterGroup_isGlobal :: Lens' CacheParameterGroup (Maybe Bool)

-- | The description for this cache parameter group.
cacheParameterGroup_description :: Lens' CacheParameterGroup (Maybe Text)

-- | The name of the cache parameter group.
cacheParameterGroupNameMessage_cacheParameterGroupName :: Lens' CacheParameterGroupNameMessage (Maybe Text)

-- | The name of the cache parameter group.
cacheParameterGroupStatus_cacheParameterGroupName :: Lens' CacheParameterGroupStatus (Maybe Text)

-- | A list of the cache node IDs which need to be rebooted for parameter
--   changes to be applied. A node ID is a numeric identifier (0001, 0002,
--   etc.).
cacheParameterGroupStatus_cacheNodeIdsToReboot :: Lens' CacheParameterGroupStatus (Maybe [Text])

-- | The status of parameter updates.
cacheParameterGroupStatus_parameterApplyStatus :: Lens' CacheParameterGroupStatus (Maybe Text)

-- | The name of the cache security group.
cacheSecurityGroup_cacheSecurityGroupName :: Lens' CacheSecurityGroup (Maybe Text)

-- | The ARN of the cache security group,
cacheSecurityGroup_arn :: Lens' CacheSecurityGroup (Maybe Text)

-- | The Amazon account ID of the cache security group owner.
cacheSecurityGroup_ownerId :: Lens' CacheSecurityGroup (Maybe Text)

-- | A list of Amazon EC2 security groups that are associated with this
--   cache security group.
cacheSecurityGroup_eC2SecurityGroups :: Lens' CacheSecurityGroup (Maybe [EC2SecurityGroup])

-- | The description of the cache security group.
cacheSecurityGroup_description :: Lens' CacheSecurityGroup (Maybe Text)

-- | The membership status in the cache security group. The status changes
--   when a cache security group is modified, or when the cache security
--   groups assigned to a cluster are modified.
cacheSecurityGroupMembership_status :: Lens' CacheSecurityGroupMembership (Maybe Text)

-- | The name of the cache security group.
cacheSecurityGroupMembership_cacheSecurityGroupName :: Lens' CacheSecurityGroupMembership (Maybe Text)

-- | The ARN (Amazon Resource Name) of the cache subnet group.
cacheSubnetGroup_arn :: Lens' CacheSubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
cacheSubnetGroup_vpcId :: Lens' CacheSubnetGroup (Maybe Text)

-- | A list of subnets associated with the cache subnet group.
cacheSubnetGroup_subnets :: Lens' CacheSubnetGroup (Maybe [Subnet])

-- | The name of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupName :: Lens' CacheSubnetGroup (Maybe Text)

-- | The description of the cache subnet group.
cacheSubnetGroup_cacheSubnetGroupDescription :: Lens' CacheSubnetGroup (Maybe Text)

-- | The name of the CloudWatch Logs log group.
cloudWatchLogsDestinationDetails_logGroup :: Lens' CloudWatchLogsDestinationDetails (Maybe Text)

-- | A list of <tt>PreferredAvailabilityZone</tt> strings that specify
--   which availability zones the replication group's nodes are to be in.
--   The nummber of <tt>PreferredAvailabilityZone</tt> values must equal
--   the value of <tt>NewReplicaCount</tt> plus 1 to account for the
--   primary node. If this member of <tt>ReplicaConfiguration</tt> is
--   omitted, ElastiCache for Redis selects the availability zone for each
--   of the replicas.
configureShard_preferredAvailabilityZones :: Lens' ConfigureShard (Maybe [Text])

-- | The outpost ARNs in which the cache cluster is created.
configureShard_preferredOutpostArns :: Lens' ConfigureShard (Maybe [Text])

-- | The 4-digit id for the node group you are configuring. For Redis
--   (cluster mode disabled) replication groups, the node group id is
--   always 0001. To find a Redis (cluster mode enabled)'s node group's
--   (shard's) id, see <a>Finding a Shard's Id</a>.
configureShard_nodeGroupId :: Lens' ConfigureShard Text

-- | The number of replicas you want in this node group at the end of this
--   operation. The maximum value for <tt>NewReplicaCount</tt> is 5. The
--   minimum value depends upon the type of Redis replication group you are
--   working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
configureShard_newReplicaCount :: Lens' ConfigureShard Int

-- | The address of the node endpoint
customerNodeEndpoint_address :: Lens' CustomerNodeEndpoint (Maybe Text)

-- | The port of the node endpoint
customerNodeEndpoint_port :: Lens' CustomerNodeEndpoint (Maybe Int)

-- | The configuration details of the CloudWatch Logs destination.
destinationDetails_cloudWatchLogsDetails :: Lens' DestinationDetails (Maybe CloudWatchLogsDestinationDetails)

-- | The configuration details of the Kinesis Data Firehose destination.
destinationDetails_kinesisFirehoseDetails :: Lens' DestinationDetails (Maybe KinesisFirehoseDestinationDetails)

-- | The status of the Amazon EC2 security group.
eC2SecurityGroup_status :: Lens' EC2SecurityGroup (Maybe Text)

-- | The Amazon account ID of the Amazon EC2 security group owner.
eC2SecurityGroup_eC2SecurityGroupOwnerId :: Lens' EC2SecurityGroup (Maybe Text)

-- | The name of the Amazon EC2 security group.
eC2SecurityGroup_eC2SecurityGroupName :: Lens' EC2SecurityGroup (Maybe Text)

-- | The DNS hostname of the cache node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the cache engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | Specifies the name of the cache parameter group family to which the
--   engine default parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
engineDefaults_cacheParameterGroupFamily :: Lens' EngineDefaults (Maybe Text)

-- | A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
engineDefaults_cacheNodeTypeSpecificParameters :: Lens' EngineDefaults (Maybe [CacheNodeTypeSpecificParameter])

-- | Provides an identifier to allow retrieval of paginated results.
engineDefaults_marker :: Lens' EngineDefaults (Maybe Text)

-- | Contains a list of engine default parameters.
engineDefaults_parameters :: Lens' EngineDefaults (Maybe [Parameter])

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceIdentifier :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)

-- | The property being filtered. For example, UserId.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)

-- | The keyspace for this node group
globalNodeGroup_slots :: Lens' GlobalNodeGroup (Maybe Text)

-- | The name of the global node group
globalNodeGroup_globalNodeGroupId :: Lens' GlobalNodeGroup (Maybe Text)

-- | The Elasticache Redis engine version.
globalReplicationGroup_engineVersion :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The status of the Global datastore
globalReplicationGroup_status :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The cache node type of the Global datastore
globalReplicationGroup_cacheNodeType :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that indicates whether the Global datastore is cluster enabled.
globalReplicationGroup_clusterEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_atRestEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the global replication group.
globalReplicationGroup_arn :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to true. You cannot
--   modify the value of <tt>TransitEncryptionEnabled</tt> after the
--   cluster is created. To enable in-transit encryption on a cluster you
--   must set <tt>TransitEncryptionEnabled</tt> to true when you create a
--   cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
globalReplicationGroup_transitEncryptionEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | The replication groups that comprise the Global datastore.
globalReplicationGroup_members :: Lens' GlobalReplicationGroup (Maybe [GlobalReplicationGroupMember])

-- | The Elasticache engine. For Redis only.
globalReplicationGroup_engine :: Lens' GlobalReplicationGroup (Maybe Text)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
globalReplicationGroup_authTokenEnabled :: Lens' GlobalReplicationGroup (Maybe Bool)

-- | Indicates the slot configuration and global identifier for each slice
--   group.
globalReplicationGroup_globalNodeGroups :: Lens' GlobalReplicationGroup (Maybe [GlobalNodeGroup])

-- | The name of the Global datastore
globalReplicationGroup_globalReplicationGroupId :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The optional description of the Global datastore
globalReplicationGroup_globalReplicationGroupDescription :: Lens' GlobalReplicationGroup (Maybe Text)

-- | The role of the replication group in a Global datastore. Can be
--   primary or secondary.
globalReplicationGroupInfo_globalReplicationGroupMemberRole :: Lens' GlobalReplicationGroupInfo (Maybe Text)

-- | The name of the Global datastore
globalReplicationGroupInfo_globalReplicationGroupId :: Lens' GlobalReplicationGroupInfo (Maybe Text)

-- | The status of the membership of the replication group.
globalReplicationGroupMember_status :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The Amazon region of the Global datastore member.
globalReplicationGroupMember_replicationGroupRegion :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates the role of the replication group, primary or secondary.
globalReplicationGroupMember_role :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | The replication group id of the Global datastore member.
globalReplicationGroupMember_replicationGroupId :: Lens' GlobalReplicationGroupMember (Maybe Text)

-- | Indicates whether automatic failover is enabled for the replication
--   group.
globalReplicationGroupMember_automaticFailover :: Lens' GlobalReplicationGroupMember (Maybe AutomaticFailoverStatus)

-- | The name of the Kinesis Data Firehose delivery stream.
kinesisFirehoseDestinationDetails_deliveryStream :: Lens' KinesisFirehoseDestinationDetails (Maybe Text)

-- | Returns the log delivery configuration status. Values are one of
--   <tt>enabling</tt> | <tt>disabling</tt> | <tt>modifying</tt> |
--   <tt>active</tt> | <tt>error</tt>
logDeliveryConfiguration_status :: Lens' LogDeliveryConfiguration (Maybe LogDeliveryConfigurationStatus)

-- | Returns the log format, either JSON or TEXT.
logDeliveryConfiguration_logFormat :: Lens' LogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfiguration_destinationDetails :: Lens' LogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfiguration_logType :: Lens' LogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
logDeliveryConfiguration_destinationType :: Lens' LogDeliveryConfiguration (Maybe DestinationType)

-- | Returns an error message for the log delivery configuration.
logDeliveryConfiguration_message :: Lens' LogDeliveryConfiguration (Maybe Text)

-- | Specifies either JSON or TEXT
logDeliveryConfigurationRequest_logFormat :: Lens' LogDeliveryConfigurationRequest (Maybe LogFormat)

-- | Specify if log delivery is enabled. Default <tt>true</tt>.
logDeliveryConfigurationRequest_enabled :: Lens' LogDeliveryConfigurationRequest (Maybe Bool)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
logDeliveryConfigurationRequest_destinationDetails :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
logDeliveryConfigurationRequest_logType :: Lens' LogDeliveryConfigurationRequest (Maybe LogType)

-- | Specify either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt>
--   as the destination type.
logDeliveryConfigurationRequest_destinationType :: Lens' LogDeliveryConfigurationRequest (Maybe DestinationType)

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
nodeGroup_status :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the primary node in this node group (shard).
nodeGroup_primaryEndpoint :: Lens' NodeGroup (Maybe Endpoint)

-- | The keyspace for this node group (shard).
nodeGroup_slots :: Lens' NodeGroup (Maybe Text)

-- | A list containing information about individual nodes within the node
--   group (shard).
nodeGroup_nodeGroupMembers :: Lens' NodeGroup (Maybe [NodeGroupMember])

-- | The identifier for the node group (shard). A Redis (cluster mode
--   disabled) replication group contains only 1 node group; therefore, the
--   node group ID is 0001. A Redis (cluster mode enabled) replication
--   group contains 1 to 90 node groups numbered 0001 to 0090. Optionally,
--   the user can provide the id for a node group.
nodeGroup_nodeGroupId :: Lens' NodeGroup (Maybe Text)

-- | The endpoint of the replica nodes in this node group (shard).
nodeGroup_readerEndpoint :: Lens' NodeGroup (Maybe Endpoint)

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
nodeGroupConfiguration_slots :: Lens' NodeGroupConfiguration (Maybe Text)

-- | The outpost ARN of the node replicas.
nodeGroupConfiguration_replicaOutpostArns :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The number of read replica nodes in this node group (shard).
nodeGroupConfiguration_replicaCount :: Lens' NodeGroupConfiguration (Maybe Int)

-- | The Availability Zone where the primary node of this node group
--   (shard) is launched.
nodeGroupConfiguration_primaryAvailabilityZone :: Lens' NodeGroupConfiguration (Maybe Text)

-- | A list of Availability Zones to be used for the read replicas. The
--   number of Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
nodeGroupConfiguration_replicaAvailabilityZones :: Lens' NodeGroupConfiguration (Maybe [Text])

-- | The outpost ARN of the primary node.
nodeGroupConfiguration_primaryOutpostArn :: Lens' NodeGroupConfiguration (Maybe Text)

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
nodeGroupConfiguration_nodeGroupId :: Lens' NodeGroupConfiguration (Maybe Text)

-- | The ID of the cluster to which the node belongs.
nodeGroupMember_cacheClusterId :: Lens' NodeGroupMember (Maybe Text)

-- | The ID of the node within its cluster. A node ID is a numeric
--   identifier (0001, 0002, etc.).
nodeGroupMember_cacheNodeId :: Lens' NodeGroupMember (Maybe Text)

-- | The name of the Availability Zone in which the node is located.
nodeGroupMember_preferredAvailabilityZone :: Lens' NodeGroupMember (Maybe Text)

-- | The role that is currently assigned to the node - <tt>primary</tt> or
--   <tt>replica</tt>. This member is only applicable for Redis (cluster
--   mode disabled) replication groups.
nodeGroupMember_currentRole :: Lens' NodeGroupMember (Maybe Text)

-- | The outpost ARN of the node group member.
nodeGroupMember_preferredOutpostArn :: Lens' NodeGroupMember (Maybe Text)

-- | The information required for client programs to connect to a node for
--   read operations. The read endpoint is only applicable on Redis
--   (cluster mode disabled) clusters.
nodeGroupMember_readEndpoint :: Lens' NodeGroupMember (Maybe Endpoint)

-- | The end date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateEndDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | Reflects whether the update was initiated by the customer or
--   automatically applied
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateInitiatedBy)

-- | The date when the NodeUpdateStatus was last modified
nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The cache cluster ID
nodeGroupMemberUpdateStatus_cacheClusterId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The node ID of the cache cluster
nodeGroupMemberUpdateStatus_cacheNodeId :: Lens' NodeGroupMemberUpdateStatus (Maybe Text)

-- | The date when the update is triggered
nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The start date of the update for a node
nodeGroupMemberUpdateStatus_nodeUpdateStartDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The update status of the node
nodeGroupMemberUpdateStatus_nodeUpdateStatus :: Lens' NodeGroupMemberUpdateStatus (Maybe NodeUpdateStatus)

-- | The deletion date of the node
nodeGroupMemberUpdateStatus_nodeDeletionDate :: Lens' NodeGroupMemberUpdateStatus (Maybe UTCTime)

-- | The status of the service update on the node group member
nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus :: Lens' NodeGroupUpdateStatus (Maybe [NodeGroupMemberUpdateStatus])

-- | The ID of the node group
nodeGroupUpdateStatus_nodeGroupId :: Lens' NodeGroupUpdateStatus (Maybe Text)

-- | The configuration for the source node group (shard).
nodeSnapshot_nodeGroupConfiguration :: Lens' NodeSnapshot (Maybe NodeGroupConfiguration)

-- | The date and time when the cache node was created in the source
--   cluster.
nodeSnapshot_cacheNodeCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | A unique identifier for the source cluster.
nodeSnapshot_cacheClusterId :: Lens' NodeSnapshot (Maybe Text)

-- | The cache node identifier for the node in the source cluster.
nodeSnapshot_cacheNodeId :: Lens' NodeSnapshot (Maybe Text)

-- | A unique identifier for the source node group (shard).
nodeSnapshot_nodeGroupId :: Lens' NodeSnapshot (Maybe Text)

-- | The date and time when the source node's metadata and cache data set
--   was obtained for the snapshot.
nodeSnapshot_snapshotCreateTime :: Lens' NodeSnapshot (Maybe UTCTime)

-- | The size of the cache on the source cache node.
nodeSnapshot_cacheSize :: Lens' NodeSnapshot (Maybe Text)

-- | The current state of the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)

-- | The value of the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | The earliest cache engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The source of the parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
parameter_isModifiable :: Lens' Parameter (Maybe Bool)

-- | The valid data type for the parameter.
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter.
parameter_description :: Lens' Parameter (Maybe Text)

-- | Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | Returns the log format, either JSON or TEXT
pendingLogDeliveryConfiguration_logFormat :: Lens' PendingLogDeliveryConfiguration (Maybe LogFormat)

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
pendingLogDeliveryConfiguration_destinationDetails :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationDetails)

-- | Refers to <a>slow-log</a>.
pendingLogDeliveryConfiguration_logType :: Lens' PendingLogDeliveryConfiguration (Maybe LogType)

-- | Returns the destination type, either CloudWatch Logs or Kinesis Data
--   Firehose.
pendingLogDeliveryConfiguration_destinationType :: Lens' PendingLogDeliveryConfiguration (Maybe DestinationType)

-- | The new cache engine version that the cluster runs.
pendingModifiedValues_engineVersion :: Lens' PendingModifiedValues (Maybe Text)

-- | The cache node type that this cluster or replication group is scaled
--   to.
pendingModifiedValues_cacheNodeType :: Lens' PendingModifiedValues (Maybe Text)

-- | The auth token status
pendingModifiedValues_authTokenStatus :: Lens' PendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The log delivery configurations being modified
pendingModifiedValues_logDeliveryConfigurations :: Lens' PendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | A list of cache node IDs that are being removed (or will be removed)
--   from the cluster. A node ID is a 4-digit numeric identifier (0001,
--   0002, etc.).
pendingModifiedValues_cacheNodeIdsToRemove :: Lens' PendingModifiedValues (Maybe [Text])

-- | The new number of cache nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
pendingModifiedValues_numCacheNodes :: Lens' PendingModifiedValues (Maybe Int)

-- | The ID of the cache cluster
processedUpdateAction_cacheClusterId :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
processedUpdateAction_serviceUpdateName :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The status of the update action on the Redis cluster
processedUpdateAction_updateActionStatus :: Lens' ProcessedUpdateAction (Maybe UpdateActionStatus)

-- | The ID of the replication group
processedUpdateAction_replicationGroupId :: Lens' ProcessedUpdateAction (Maybe Text)

-- | The frequency of the recurring charge.
recurringCharge_recurringChargeFrequency :: Lens' RecurringCharge (Maybe Text)

-- | The monetary amount of the recurring charge.
recurringCharge_recurringChargeAmount :: Lens' RecurringCharge (Maybe Double)

-- | The name of the secondary cluster
regionalConfiguration_replicationGroupId :: Lens' RegionalConfiguration Text

-- | The Amazon region where the cluster is stored
regionalConfiguration_replicationGroupRegion :: Lens' RegionalConfiguration Text

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
regionalConfiguration_reshardingConfiguration :: Lens' RegionalConfiguration [ReshardingConfiguration]

-- | The date the auth token was last modified
replicationGroup_authTokenLastModifiedDate :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
replicationGroup_status :: Lens' ReplicationGroup (Maybe Text)

-- | The name of the compute and memory capacity node type for each node in
--   the replication group.
replicationGroup_cacheNodeType :: Lens' ReplicationGroup (Maybe Text)

-- | A list of node groups in this replication group. For Redis (cluster
--   mode disabled) replication groups, this is a single-element list. For
--   Redis (cluster mode enabled) replication groups, the list contains an
--   entry for each node group (shard).
replicationGroup_nodeGroups :: Lens' ReplicationGroup (Maybe [NodeGroup])

-- | The cluster ID that is used as the daily snapshot source for the
--   replication group.
replicationGroup_snapshottingClusterId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating whether or not this replication group is cluster
--   enabled; i.e., whether its data can be partitioned across multiple
--   shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
replicationGroup_clusterEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | A flag that enables encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_atRestEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The date and time when the cluster was created.
replicationGroup_replicationGroupCreateTime :: Lens' ReplicationGroup (Maybe UTCTime)

-- | The ARN (Amazon Resource Name) of the replication group.
replicationGroup_arn :: Lens' ReplicationGroup (Maybe Text)

-- | A flag that enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
replicationGroup_transitEncryptionEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The ID of the user group associated to the replication group.
replicationGroup_userGroupIds :: Lens' ReplicationGroup (Maybe [Text])

-- | The daily time range (in UTC) during which ElastiCache begins taking a
--   daily snapshot of your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
replicationGroup_snapshotWindow :: Lens' ReplicationGroup (Maybe Text)

-- | Returns the destination, format and type of the logs.
replicationGroup_logDeliveryConfigurations :: Lens' ReplicationGroup (Maybe [LogDeliveryConfiguration])

-- | The configuration endpoint for this replication group. Use the
--   configuration endpoint to connect to this replication group.
replicationGroup_configurationEndpoint :: Lens' ReplicationGroup (Maybe Endpoint)

-- | A flag that enables using an <tt>AuthToken</tt> (password) when
--   issuing Redis commands.
--   
--   Default: <tt>false</tt>
replicationGroup_authTokenEnabled :: Lens' ReplicationGroup (Maybe Bool)

-- | The names of all the cache clusters that are part of this replication
--   group.
replicationGroup_memberClusters :: Lens' ReplicationGroup (Maybe [Text])

-- | The ID of the KMS key used to encrypt the disk in the cluster.
replicationGroup_kmsKeyId :: Lens' ReplicationGroup (Maybe Text)

-- | A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
replicationGroup_multiAZ :: Lens' ReplicationGroup (Maybe MultiAZStatus)

-- | The number of days for which ElastiCache retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
replicationGroup_snapshotRetentionLimit :: Lens' ReplicationGroup (Maybe Int)

-- | The user supplied description of the replication group.
replicationGroup_description :: Lens' ReplicationGroup (Maybe Text)

-- | The identifier for the replication group.
replicationGroup_replicationGroupId :: Lens' ReplicationGroup (Maybe Text)

-- | A group of settings to be applied to the replication group, either
--   immediately or during the next maintenance window.
replicationGroup_pendingModifiedValues :: Lens' ReplicationGroup (Maybe ReplicationGroupPendingModifiedValues)

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
replicationGroup_globalReplicationGroupInfo :: Lens' ReplicationGroup (Maybe GlobalReplicationGroupInfo)

-- | The outpost ARNs of the replication group's member clusters.
replicationGroup_memberClustersOutpostArns :: Lens' ReplicationGroup (Maybe [Text])

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroup_automaticFailover :: Lens' ReplicationGroup (Maybe AutomaticFailoverStatus)

-- | The auth token status
replicationGroupPendingModifiedValues_authTokenStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe AuthTokenUpdateStatus)

-- | The user group being modified.
replicationGroupPendingModifiedValues_userGroups :: Lens' ReplicationGroupPendingModifiedValues (Maybe UserGroupsUpdateStatus)

-- | The log delivery configurations being modified
replicationGroupPendingModifiedValues_logDeliveryConfigurations :: Lens' ReplicationGroupPendingModifiedValues (Maybe [PendingLogDeliveryConfiguration])

-- | The status of an online resharding operation.
replicationGroupPendingModifiedValues_resharding :: Lens' ReplicationGroupPendingModifiedValues (Maybe ReshardingStatus)

-- | The primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
replicationGroupPendingModifiedValues_primaryClusterId :: Lens' ReplicationGroupPendingModifiedValues (Maybe Text)

-- | Indicates the status of automatic failover for this Redis replication
--   group.
replicationGroupPendingModifiedValues_automaticFailoverStatus :: Lens' ReplicationGroupPendingModifiedValues (Maybe PendingAutomaticFailoverStatus)

-- | The cache node type for the reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNode_cacheNodeType :: Lens' ReservedCacheNode (Maybe Text)

-- | The state of the reserved cache node.
reservedCacheNode_state :: Lens' ReservedCacheNode (Maybe Text)

-- | The time the reservation started.
reservedCacheNode_startTime :: Lens' ReservedCacheNode (Maybe UTCTime)

-- | The description of the reserved cache node.
reservedCacheNode_productDescription :: Lens' ReservedCacheNode (Maybe Text)

-- | The Amazon Resource Name (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
reservedCacheNode_reservationARN :: Lens' ReservedCacheNode (Maybe Text)

-- | The number of cache nodes that have been reserved.
reservedCacheNode_cacheNodeCount :: Lens' ReservedCacheNode (Maybe Int)

-- | The unique identifier for the reservation.
reservedCacheNode_reservedCacheNodeId :: Lens' ReservedCacheNode (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNode_recurringCharges :: Lens' ReservedCacheNode (Maybe [RecurringCharge])

-- | The offering type of this reserved cache node.
reservedCacheNode_offeringType :: Lens' ReservedCacheNode (Maybe Text)

-- | The hourly price charged for this reserved cache node.
reservedCacheNode_usagePrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The fixed price charged for this reserved cache node.
reservedCacheNode_fixedPrice :: Lens' ReservedCacheNode (Maybe Double)

-- | The duration of the reservation in seconds.
reservedCacheNode_duration :: Lens' ReservedCacheNode (Maybe Int)

-- | The offering identifier.
reservedCacheNode_reservedCacheNodesOfferingId :: Lens' ReservedCacheNode (Maybe Text)

-- | The cache node type for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
reservedCacheNodesOffering_cacheNodeType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The cache engine used by the offering.
reservedCacheNodesOffering_productDescription :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The recurring price charged to run this reserved cache node.
reservedCacheNodesOffering_recurringCharges :: Lens' ReservedCacheNodesOffering (Maybe [RecurringCharge])

-- | The offering type.
reservedCacheNodesOffering_offeringType :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | The hourly price charged for this offering.
reservedCacheNodesOffering_usagePrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The fixed price charged for this offering.
reservedCacheNodesOffering_fixedPrice :: Lens' ReservedCacheNodesOffering (Maybe Double)

-- | The duration of the offering. in seconds.
reservedCacheNodesOffering_duration :: Lens' ReservedCacheNodesOffering (Maybe Int)

-- | A unique identifier for the reserved cache node offering.
reservedCacheNodesOffering_reservedCacheNodesOfferingId :: Lens' ReservedCacheNodesOffering (Maybe Text)

-- | A list of preferred availability zones for the nodes in this cluster.
reshardingConfiguration_preferredAvailabilityZones :: Lens' ReshardingConfiguration (Maybe [Text])

-- | Either the ElastiCache for Redis supplied 4-digit id or a user
--   supplied id for the node group these configuration values apply to.
reshardingConfiguration_nodeGroupId :: Lens' ReshardingConfiguration (Maybe Text)

-- | Represents the progress of an online resharding operation.
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)

-- | The status of the cache security group membership. The status changes
--   whenever a cache security group is modified, or when the cache
--   security groups assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the cache security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)

-- | The Elasticache engine version to which the update applies. Either
--   Redis or Memcached engine version
serviceUpdate_engineVersion :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_serviceUpdateType :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
serviceUpdate_engine :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_serviceUpdateReleaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Indicates whether the service update will be automatically applied
--   once the recommended apply-by date has expired.
serviceUpdate_autoUpdateAfterRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe Bool)

-- | The severity of the service update
serviceUpdate_serviceUpdateSeverity :: Lens' ServiceUpdate (Maybe ServiceUpdateSeverity)

-- | The date after which the service update is no longer available
serviceUpdate_serviceUpdateEndDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | Provides details of the service update
serviceUpdate_serviceUpdateDescription :: Lens' ServiceUpdate (Maybe Text)

-- | The recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
serviceUpdate_serviceUpdateRecommendedApplyByDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The status of the service update
serviceUpdate_serviceUpdateStatus :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The estimated length of time the service update will take
serviceUpdate_estimatedUpdateTime :: Lens' ServiceUpdate (Maybe Text)

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)

-- | The version of the cache engine version that is used by the source
--   cluster.
snapshot_engineVersion :: Lens' Snapshot (Maybe Text)

-- | The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
snapshot_cacheNodeType :: Lens' Snapshot (Maybe Text)

-- | The date and time when the source cluster was created.
snapshot_cacheClusterCreateTime :: Lens' Snapshot (Maybe UTCTime)

-- | This parameter is currently disabled.
snapshot_autoMinorVersionUpgrade :: Lens' Snapshot (Maybe Bool)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The cache parameter group that is associated with the source cluster.
snapshot_cacheParameterGroupName :: Lens' Snapshot (Maybe Text)

-- | A description of the source replication group.
snapshot_replicationGroupDescription :: Lens' Snapshot (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group for the source cluster.
snapshot_vpcId :: Lens' Snapshot (Maybe Text)

-- | The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
snapshot_snapshotStatus :: Lens' Snapshot (Maybe Text)

-- | The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
snapshot_snapshotWindow :: Lens' Snapshot (Maybe Text)

-- | The user-supplied identifier of the source cluster.
snapshot_cacheClusterId :: Lens' Snapshot (Maybe Text)

-- | The name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>)
--   used by the source cluster.
snapshot_engine :: Lens' Snapshot (Maybe Text)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
snapshot_preferredMaintenanceWindow :: Lens' Snapshot (Maybe Text)

-- | The Amazon Resource Name (ARN) for the topic used by the source
--   cluster for publishing notifications.
snapshot_topicArn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | A list of the cache nodes in the source cluster.
snapshot_nodeSnapshots :: Lens' Snapshot (Maybe [NodeSnapshot])

-- | The name of the cache subnet group associated with the source cluster.
snapshot_cacheSubnetGroupName :: Lens' Snapshot (Maybe Text)

-- | The name of the Availability Zone in which the source cluster is
--   located.
snapshot_preferredAvailabilityZone :: Lens' Snapshot (Maybe Text)

-- | The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
snapshot_numNodeGroups :: Lens' Snapshot (Maybe Int)

-- | For an automatic snapshot, the number of days for which ElastiCache
--   retains the snapshot before deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
snapshot_snapshotRetentionLimit :: Lens' Snapshot (Maybe Int)

-- | The name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
snapshot_snapshotName :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the preferred outpost.
snapshot_preferredOutpostArn :: Lens' Snapshot (Maybe Text)

-- | The unique identifier of the source replication group.
snapshot_replicationGroupId :: Lens' Snapshot (Maybe Text)

-- | The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
snapshot_numCacheNodes :: Lens' Snapshot (Maybe Int)

-- | The port number used by each cache nodes in the source cluster.
snapshot_port :: Lens' Snapshot (Maybe Int)

-- | Indicates the status of automatic failover for the source Redis
--   replication group.
snapshot_automaticFailover :: Lens' Snapshot (Maybe AutomaticFailoverStatus)

-- | Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
snapshot_snapshotSource :: Lens' Snapshot (Maybe Text)

-- | The unique identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone associated with the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe AvailabilityZone)

-- | The outpost ARN of the subnet.
subnet_subnetOutpost :: Lens' Subnet (Maybe SubnetOutpost)

-- | The outpost ARN of the subnet.
subnetOutpost_subnetOutpostArn :: Lens' SubnetOutpost (Maybe Text)

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)

-- | A list of tags as key-value pairs.
tagListMessage_tagList :: Lens' TagListMessage (Maybe [Tag])

-- | The start time of the time range filter
timeRangeFilter_startTime :: Lens' TimeRangeFilter (Maybe UTCTime)

-- | The end time of the time range filter
timeRangeFilter_endTime :: Lens' TimeRangeFilter (Maybe UTCTime)

-- | The ID of the cache cluster
unprocessedUpdateAction_cacheClusterId :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The unique ID of the service update
unprocessedUpdateAction_serviceUpdateName :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error type for requests that are not processed
unprocessedUpdateAction_errorType :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The error message that describes the reason the request was not
--   processed
unprocessedUpdateAction_errorMessage :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | The replication group ID
unprocessedUpdateAction_replicationGroupId :: Lens' UnprocessedUpdateAction (Maybe Text)

-- | Reflects the nature of the service update
updateAction_serviceUpdateType :: Lens' UpdateAction (Maybe ServiceUpdateType)

-- | If yes, all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
updateAction_slaMet :: Lens' UpdateAction (Maybe SlaMet)

-- | The ID of the cache cluster
updateAction_cacheClusterId :: Lens' UpdateAction (Maybe Text)

-- | The unique ID of the service update
updateAction_serviceUpdateName :: Lens' UpdateAction (Maybe Text)

-- | The status of the update action
updateAction_updateActionStatus :: Lens' UpdateAction (Maybe UpdateActionStatus)

-- | The Elasticache engine to which the update applies. Either Redis or
--   Memcached
updateAction_engine :: Lens' UpdateAction (Maybe Text)

-- | The progress of the service update on the replication group
updateAction_nodesUpdated :: Lens' UpdateAction (Maybe Text)

-- | The date when the UpdateActionStatus was last modified
updateAction_updateActionStatusModifiedDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date the update is first available
updateAction_serviceUpdateReleaseDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update on the cache node
updateAction_cacheNodeUpdateStatus :: Lens' UpdateAction (Maybe [CacheNodeUpdateStatus])

-- | The severity of the service update
updateAction_serviceUpdateSeverity :: Lens' UpdateAction (Maybe ServiceUpdateSeverity)

-- | The status of the service update on the node group
updateAction_nodeGroupUpdateStatus :: Lens' UpdateAction (Maybe [NodeGroupUpdateStatus])

-- | The recommended date to apply the service update to ensure compliance.
--   For information on compliance, see <a>Self-Service Security Updates
--   for Compliance</a>.
updateAction_serviceUpdateRecommendedApplyByDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The date that the service update is available to a replication group
updateAction_updateActionAvailableDate :: Lens' UpdateAction (Maybe UTCTime)

-- | The status of the service update
updateAction_serviceUpdateStatus :: Lens' UpdateAction (Maybe ServiceUpdateStatus)

-- | The estimated length of time for the update to complete
updateAction_estimatedUpdateTime :: Lens' UpdateAction (Maybe Text)

-- | The ID of the replication group
updateAction_replicationGroupId :: Lens' UpdateAction (Maybe Text)

-- | Update actions that haven't been processed successfully
updateActionResultsMessage_unprocessedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [UnprocessedUpdateAction])

-- | Update actions that have been processed successfully
updateActionResultsMessage_processedUpdateActions :: Lens' UpdateActionResultsMessage (Maybe [ProcessedUpdateAction])

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Returns a list of the user group IDs the user belongs to.
user_userGroupIds :: Lens' User (Maybe [Text])

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | The current supported value is Redis.
user_engine :: Lens' User (Maybe Text)

-- | The username of the user.
user_userName :: Lens' User (Maybe Text)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The ID of the user.
user_userId :: Lens' User (Maybe Text)

-- | Indicates user group status. Can be "creating", "active", "modifying",
--   "deleting".
userGroup_status :: Lens' UserGroup (Maybe Text)

-- | The list of user IDs that belong to the user group.
userGroup_userIds :: Lens' UserGroup (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the user group.
userGroup_arn :: Lens' UserGroup (Maybe Text)

-- | The ID of the user group.
userGroup_userGroupId :: Lens' UserGroup (Maybe Text)

-- | The current supported value is Redis.
userGroup_engine :: Lens' UserGroup (Maybe Text)

-- | A list of updates being applied to the user group.
userGroup_pendingChanges :: Lens' UserGroup (Maybe UserGroupPendingChanges)

-- | A list of replication groups that the user group can access.
userGroup_replicationGroups :: Lens' UserGroup (Maybe [Text])

-- | The list of user IDs to add.
userGroupPendingChanges_userIdsToAdd :: Lens' UserGroupPendingChanges (Maybe [Text])

-- | The list of user IDs to remove.
userGroupPendingChanges_userIdsToRemove :: Lens' UserGroupPendingChanges (Maybe [Text])

-- | The ID of the user group to add.
userGroupsUpdateStatus_userGroupIdsToAdd :: Lens' UserGroupsUpdateStatus (Maybe [Text])

-- | The ID of the user group to remove.
userGroupsUpdateStatus_userGroupIdsToRemove :: Lens' UserGroupsUpdateStatus (Maybe [Text])


module Amazonka.ElastiCache.Waiters

-- | Polls <a>DescribeCacheClusters</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newCacheClusterAvailable :: Wait DescribeCacheClusters

-- | Polls <a>DescribeCacheClusters</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newCacheClusterDeleted :: Wait DescribeCacheClusters

-- | Polls <a>DescribeReplicationGroups</a> every 15 seconds until a
--   successful state is reached. An error is returned after 40 failed
--   checks.
newReplicationGroupDeleted :: Wait DescribeReplicationGroups

-- | Polls <a>DescribeReplicationGroups</a> every 15 seconds until a
--   successful state is reached. An error is returned after 40 failed
--   checks.
newReplicationGroupAvailable :: Wait DescribeReplicationGroups


-- | Derived from API version <tt>2015-02-02</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon ElastiCache
--   
--   Amazon ElastiCache is a web service that makes it easier to set up,
--   operate, and scale a distributed cache in the cloud.
--   
--   With ElastiCache, customers get all of the benefits of a
--   high-performance, in-memory cache with less of the administrative
--   burden involved in launching and managing a distributed cache. The
--   service makes setup, scaling, and cluster failure handling much
--   simpler than in a self-managed cache deployment.
--   
--   In addition, through integration with Amazon CloudWatch, customers get
--   enhanced visibility into the key performance statistics associated
--   with their cache and can receive alarms if a part of their cache runs
--   hot.
module Amazonka.ElastiCache

-- | API version <tt>2015-02-02</tt> of the Amazon ElastiCache SDK
--   configuration.
defaultService :: Service

-- | The requested cache subnet group is currently in use.
_CacheSubnetGroupInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a reservation with the given identifier.
_ReservedCacheNodeAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache security group name does not refer to an existing
--   cache security group.
_CacheSecurityGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore is not available or in primary-only state.
_InvalidGlobalReplicationGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache subnet group name is already in use by an existing
--   cache subnet group.
_CacheSubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore name already exists.
_GlobalReplicationGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   allowed number of node groups (shards) in a single replication group.
--   The default maximum is 90
_NodeGroupsPerReplicationGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache subnet groups.
_CacheSubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon EC2 security group is already authorized for the
--   specified cache security group.
_AuthorizationAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the user's
--   cache node quota.
_ReservedCacheNodeQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache node offering does not exist.
_ReservedCacheNodesOfferingNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified replication group does not exist.
_ReplicationGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid subnet identifier was specified.
_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group is not in an active state.
_InvalidUserGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would cause the resource to
--   have more than the allowed number of tags. The maximum number of tags
--   permitted on a resource is 50.
_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | A user with this ID already exists.
_UserAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user is not in active state.
_InvalidUserStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested snapshot name does not refer to an existing snapshot.
_SnapshotNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache node type is not available in the specified
--   Availability Zone. For more information, see
--   <a>InsufficientCacheClusterCapacity</a> in the ElastiCache User Guide.
_InsufficientCacheClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the snapshot does not allow the requested
--   operation to occur.
_InvalidSnapshotStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a snapshot with the given name.
_SnapshotAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You must add default user to a user group.
_DefaultUserRequired :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested tag was not found on this resource.
_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   number of snapshots.
_SnapshotQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache nodes in a single cluster.
_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The customer has exceeded the allowed rate of API calls.
_APICallRateForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The node group specified by the <tt>NodeGroupId</tt> parameter could
--   not be found. Please verify that the node group exists and that you
--   spelled the <tt>NodeGroupId</tt> value correctly.
_NodeGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A cache parameter group with the requested name already exists.
_CacheParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified service linked role (SLR) was not found.
_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The KMS key supplied is not valid.
_InvalidKMSKeyFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Global datastore does not exist
_GlobalReplicationGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested reserved cache node was not found.
_ReservedCacheNodeNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache subnet group name does not refer to an existing
--   cache subnet group.
_CacheSubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You attempted one of the following operations:
--   
--   <ul>
--   <li>Creating a snapshot of a Redis cluster running on a
--   <tt>cache.t1.micro</tt> cache node.</li>
--   <li>Creating a snapshot of a cluster that is running Memcached rather
--   than Redis.</li>
--   </ul>
--   
--   Neither of these are supported by ElastiCache.
_SnapshotFeatureNotSupportedFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>TestFailover</tt> action is not available.
_TestFailoverNotAvailableFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one subnet ID does not match the other subnet IDs. This
--   mismatch typically occurs when a user sets one subnet ID to a regional
--   Availability Zone and a different one to an outpost. Or when a user
--   sets the subnet ID to an Outpost when not subscribed on this service.
_SubnetNotAllowedFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested replication group is not in the <tt>available</tt>
--   state.
_InvalidReplicationGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified replication group already exists.
_ReplicationGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC network is in an invalid state.
_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested subnet is being used by another cache subnet group.
_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group was not found or does not exist
_UserGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster ID does not refer to an existing cluster.
_CacheClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of clusters per customer.
_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon EC2 security group is not authorized for the
--   specified cache security group.
_AuthorizationNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user group with this ID already exists.
_UserGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster is not in the <tt>available</tt> state.
_InvalidCacheClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache security groups.
_CacheSecurityGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a cluster with the given identifier.
_CacheClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the maximum
--   number of cache security groups.
_CacheParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service update doesn't exist
_ServiceUpdateNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The default user assigned to the user group.
_DefaultUserAssociatedToUserGroupFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user does not exist or could not be found.
_UserNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of cache nodes per customer.
_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a cache subnet group.
_CacheSubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The designated replication group is not available for data migration.
_ReplicationGroupNotUnderMigrationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The targeted replication group is not available.
_ReplicationGroupAlreadyUnderMigrationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cache parameter group name does not refer to an existing
--   cache parameter group.
_CacheParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A user with this username already exists.
_DuplicateUserNameFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The quota of users has been exceeded.
_UserQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Amazon Resource Name (ARN) does not refer to an existing
--   resource.
_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was not performed because no changes were required.
_NoOperationFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the cache parameter group does not allow the
--   requested operation to occur.
_InvalidCacheParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more incompatible parameters were specified.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of users exceeds the user group limit.
_UserGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current state of the cache security group does not allow deletion.
_InvalidCacheSecurityGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | A cache security group with the specified name already exists.
_CacheSecurityGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeCacheClusters</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newCacheClusterAvailable :: Wait DescribeCacheClusters

-- | Polls <a>DescribeCacheClusters</a> every 15 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newCacheClusterDeleted :: Wait DescribeCacheClusters

-- | Polls <a>DescribeReplicationGroups</a> every 15 seconds until a
--   successful state is reached. An error is returned after 40 failed
--   checks.
newReplicationGroupDeleted :: Wait DescribeReplicationGroups

-- | Polls <a>DescribeReplicationGroups</a> every 15 seconds until a
--   successful state is reached. An error is returned after 40 failed
--   checks.
newReplicationGroupAvailable :: Wait DescribeReplicationGroups

-- | <i>See:</i> <a>newStartMigration</a> smart constructor.
data StartMigration
StartMigration' :: Text -> [CustomerNodeEndpoint] -> StartMigration

-- | Create a value of <a>StartMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:StartMigration'</a>,
--   <a>startMigration_replicationGroupId</a> - The ID of the replication
--   group to which data should be migrated.
--   
--   <a>$sel:customerNodeEndpointList:StartMigration'</a>,
--   <a>startMigration_customerNodeEndpointList</a> - List of endpoints
--   from which data should be migrated. For Redis (cluster mode disabled),
--   list should have only one element.
newStartMigration :: Text -> StartMigration

-- | <i>See:</i> <a>newStartMigrationResponse</a> smart constructor.
data StartMigrationResponse
StartMigrationResponse' :: Maybe ReplicationGroup -> Int -> StartMigrationResponse

-- | Create a value of <a>StartMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_replicationGroup</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_httpStatus</a> - The response's http status
--   code.
newStartMigrationResponse :: Int -> StartMigrationResponse

-- | Represents the input of a <tt>DeleteCacheSecurityGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheSecurityGroup</a> smart constructor.
data DeleteCacheSecurityGroup
DeleteCacheSecurityGroup' :: Text -> DeleteCacheSecurityGroup

-- | Create a value of <a>DeleteCacheSecurityGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:DeleteCacheSecurityGroup'</a>,
--   <a>deleteCacheSecurityGroup_cacheSecurityGroupName</a> - The name of
--   the cache security group to delete.
--   
--   You cannot delete the default security group.
newDeleteCacheSecurityGroup :: Text -> DeleteCacheSecurityGroup

-- | <i>See:</i> <a>newDeleteCacheSecurityGroupResponse</a> smart
--   constructor.
data DeleteCacheSecurityGroupResponse
DeleteCacheSecurityGroupResponse' :: DeleteCacheSecurityGroupResponse

-- | Create a value of <a>DeleteCacheSecurityGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheSecurityGroupResponse :: DeleteCacheSecurityGroupResponse

-- | Represents the input of a <tt>CreateReplicationGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateReplicationGroup</a> smart constructor.
data CreateReplicationGroup
CreateReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [NodeGroupConfiguration] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Int -> Maybe [Text] -> Text -> Text -> CreateReplicationGroup

-- | Create a value of <a>CreateReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_automaticFailoverEnabled</a> - Specifies
--   whether a read-only replica is automatically promoted to read/write
--   primary if the existing primary fails.
--   
--   <tt>AutomaticFailoverEnabled</tt> must be enabled for Redis (cluster
--   mode enabled) replication groups.
--   
--   Default: false
--   
--   <a>$sel:engineVersion:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_engineVersion</a> - The version number of
--   the cache engine to be used for the clusters in this replication
--   group. To view the supported cache engine versions, use the
--   <tt>DescribeCacheEngineVersions</tt> operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>) in the <i>ElastiCache
--   User Guide</i>, but you cannot downgrade to an earlier engine version.
--   If you want to use an earlier engine version, you must delete the
--   existing cluster or replication group and create it anew with the
--   earlier engine version.
--   
--   <a>$sel:cacheNodeType:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheNodeType</a> - The compute and memory
--   capacity of the nodes in the node group (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:nodeGroupConfiguration:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_nodeGroupConfiguration</a> - A list of node
--   group (shard) configuration options. Each node group (shard)
--   configuration has the following members:
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>, and <tt>Slots</tt>.
--   
--   If you're creating a Redis (cluster mode disabled) or a Redis (cluster
--   mode enabled) replication group, you can use this parameter to
--   individually configure each node group (shard), or you can omit this
--   parameter. However, it is required when seeding a Redis (cluster mode
--   enabled) cluster from a S3 rdb file. You must configure each node
--   group (shard) using this parameter because you must specify the slots
--   for each node group.
--   
--   <a>$sel:atRestEncryptionEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_atRestEncryptionEnabled</a> - A flag that
--   enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:securityGroupIds:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_securityGroupIds</a> - One or more Amazon
--   VPC security groups associated with this replication group.
--   
--   Use this parameter only when you are creating a replication group in
--   an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:snapshotArns:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotArns</a> - A list of Amazon Resource
--   Names (ARN) that uniquely identify the Redis RDB snapshot files stored
--   in Amazon S3. The snapshot files are used to populate the new
--   replication group. The Amazon S3 object name in the ARN cannot contain
--   any commas. The new replication group will have the number of node
--   groups (console: shards) specified by the parameter
--   <i>NumNodeGroups</i> or the number of node groups configured by
--   <i>NodeGroupConfiguration</i> regardless of the number of ARNs
--   specified here.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_autoMinorVersionUpgrade</a> - This parameter
--   is currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheParameterGroupName</a> - The name of
--   the parameter group to associate with this replication group. If this
--   argument is omitted, the default cache parameter group for the
--   specified engine is used.
--   
--   If you are running Redis version 3.2.4 or later, only one node group
--   (shard), and want to use a default parameter group, we recommend that
--   you specify the parameter group by name.
--   
--   <ul>
--   <li>To create a Redis (cluster mode disabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2</tt>.</li>
--   <li>To create a Redis (cluster mode enabled) replication group, use
--   <tt>CacheParameterGroupName=default.redis3.2.cluster.on</tt>.</li>
--   </ul>
--   
--   <a>$sel:transitEncryptionEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_transitEncryptionEnabled</a> - A flag that
--   enables in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   This parameter is valid only if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>, the <tt>EngineVersion</tt> parameter is
--   <tt>3.2.6</tt>, <tt>4.x</tt> or later, and the cluster is being
--   created in an Amazon VPC.
--   
--   If you enable in-transit encryption, you must also specify a value for
--   <tt>CacheSubnetGroup</tt>.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   <a>$sel:userGroupIds:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_userGroupIds</a> - The user group to
--   associate with the replication group.
--   
--   <a>$sel:snapshotWindow:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotWindow</a> - The daily time range
--   (in UTC) during which ElastiCache begins taking a daily snapshot of
--   your node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   <a>$sel:logDeliveryConfigurations:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_logDeliveryConfigurations</a> - Specifies
--   the destination, format and type of the logs.
--   
--   <a>$sel:authToken:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_authToken</a> - <b>Reserved parameter.</b>
--   The password used to access a password protected server.
--   
--   <tt>AuthToken</tt> can be specified only on replication groups where
--   <tt>TransitEncryptionEnabled</tt> is <tt>true</tt>.
--   
--   For HIPAA compliance, you must specify
--   <tt>TransitEncryptionEnabled</tt> as <tt>true</tt>, an
--   <tt>AuthToken</tt>, and a <tt>CacheSubnetGroup</tt>.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
--   
--   <a>$sel:primaryClusterId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_primaryClusterId</a> - The identifier of the
--   cluster that serves as the primary for this replication group. This
--   cluster must already exist and have a status of <tt>available</tt>.
--   
--   This parameter is not required if <tt>NumCacheClusters</tt>,
--   <tt>NumNodeGroups</tt>, or <tt>ReplicasPerNodeGroup</tt> is specified.
--   
--   <a>$sel:engine:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_engine</a> - The name of the cache engine to
--   be used for the clusters in this replication group. Must be Redis.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_preferredMaintenanceWindow</a> - Specifies
--   the weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:kmsKeyId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_kmsKeyId</a> - The ID of the KMS key used to
--   encrypt the disk in the cluster.
--   
--   <a>$sel:multiAZEnabled:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_multiAZEnabled</a> - A flag indicating if
--   you have Multi-AZ enabled to enhance fault tolerance. For more
--   information, see <a>Minimizing Downtime: Multi-AZ</a>.
--   
--   <a>$sel:cacheSubnetGroupName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheSubnetGroupName</a> - The name of the
--   cache subnet group to be used for the replication group.
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
--   
--   <a>$sel:numNodeGroups:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_numNodeGroups</a> - An optional parameter
--   that specifies the number of node groups (shards) for this Redis
--   (cluster mode enabled) replication group. For Redis (cluster mode
--   disabled) either omit this parameter or set it to 1.
--   
--   Default: 1
--   
--   <a>$sel:snapshotRetentionLimit:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotRetentionLimit</a> - The number of
--   days for which ElastiCache retains automatic snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot that was taken today is retained for 5 days before being
--   deleted.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cluster).
--   
--   <a>$sel:globalReplicationGroupId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_globalReplicationGroupId</a> - The name of
--   the Global datastore
--   
--   <a>$sel:replicasPerNodeGroup:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicasPerNodeGroup</a> - An optional
--   parameter that specifies the number of replica nodes in each node
--   group (shard). Valid values are 0 to 5.
--   
--   <a>$sel:numCacheClusters:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_numCacheClusters</a> - The number of
--   clusters this replication group initially has.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>ReplicasPerNodeGroup</tt> instead.
--   
--   If <tt>AutomaticFailoverEnabled</tt> is <tt>true</tt>, the value of
--   this parameter must be at least 2. If
--   <tt>AutomaticFailoverEnabled</tt> is <tt>false</tt> you can omit this
--   parameter (it will default to 1), or you can explicitly set it to a
--   value between 2 and 6.
--   
--   The maximum permitted value for <tt>NumCacheClusters</tt> is 6 (1
--   primary plus 5 replicas).
--   
--   <a>$sel:preferredCacheClusterAZs:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_preferredCacheClusterAZs</a> - A list of EC2
--   Availability Zones in which the replication group's clusters are
--   created. The order of the Availability Zones in the list is the order
--   in which clusters are allocated. The primary cluster is created in the
--   first AZ in the list.
--   
--   This parameter is not used if there is more than one node group
--   (shard). You should use <tt>NodeGroupConfiguration</tt> instead.
--   
--   If you are creating your replication group in an Amazon VPC
--   (recommended), you can only locate clusters in Availability Zones
--   associated with the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheClusters</tt>.
--   
--   Default: system chosen Availability Zones.
--   
--   <a>$sel:snapshotName:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_snapshotName</a> - The name of a snapshot
--   from which to restore data into the new replication group. The
--   snapshot status changes to <tt>restoring</tt> while the new
--   replication group is being created.
--   
--   <a>$sel:notificationTopicArn:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_notificationTopicArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon Simple Notification Service (SNS)
--   topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
--   
--   <a>$sel:tags:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_tags</a> - A list of tags to be added to
--   this resource. Tags are comma-separated key,value pairs (e.g.
--   Key=<tt>myKey</tt>, Value=<tt>myKeyValue</tt>. You can include
--   multiple tags as shown following: Key=<tt>myKey</tt>,
--   Value=<tt>myKeyValue</tt> Key=<tt>mySecondKey</tt>,
--   Value=<tt>mySecondKeyValue</tt>. Tags on replication groups will be
--   replicated to all nodes.
--   
--   <a>$sel:port:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_port</a> - The port number on which each
--   member of the replication group accepts connections.
--   
--   <a>$sel:cacheSecurityGroupNames:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_cacheSecurityGroupNames</a> - A list of
--   cache security group names to associate with this replication group.
--   
--   <a>$sel:replicationGroupId:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicationGroupId</a> - The replication
--   group identifier. This parameter is stored as a lowercase string.
--   
--   Constraints:
--   
--   <ul>
--   <li>A name must contain from 1 to 40 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
--   
--   <a>$sel:replicationGroupDescription:CreateReplicationGroup'</a>,
--   <a>createReplicationGroup_replicationGroupDescription</a> - A
--   user-created description for the replication group.
newCreateReplicationGroup :: Text -> Text -> CreateReplicationGroup

-- | <i>See:</i> <a>newCreateReplicationGroupResponse</a> smart
--   constructor.
data CreateReplicationGroupResponse
CreateReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> CreateReplicationGroupResponse

-- | Create a value of <a>CreateReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:CreateReplicationGroupResponse'</a>,
--   <a>createReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CreateReplicationGroupResponse'</a>,
--   <a>createReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateReplicationGroupResponse :: Int -> CreateReplicationGroupResponse

-- | Represents the input of a <tt>DeleteCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheCluster</a> smart constructor.
data DeleteCacheCluster
DeleteCacheCluster' :: Maybe Text -> Text -> DeleteCacheCluster

-- | Create a value of <a>DeleteCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotIdentifier:DeleteCacheCluster'</a>,
--   <a>deleteCacheCluster_finalSnapshotIdentifier</a> - The user-supplied
--   name of a final cluster snapshot. This is the unique name that
--   identifies the snapshot. ElastiCache creates the snapshot, and then
--   deletes the cluster immediately afterward.
--   
--   <a>$sel:cacheClusterId:DeleteCacheCluster'</a>,
--   <a>deleteCacheCluster_cacheClusterId</a> - The cluster identifier for
--   the cluster to be deleted. This parameter is not case sensitive.
newDeleteCacheCluster :: Text -> DeleteCacheCluster

-- | <i>See:</i> <a>newDeleteCacheClusterResponse</a> smart constructor.
data DeleteCacheClusterResponse
DeleteCacheClusterResponse' :: Maybe CacheCluster -> Int -> DeleteCacheClusterResponse

-- | Create a value of <a>DeleteCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:DeleteCacheClusterResponse'</a>,
--   <a>deleteCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteCacheClusterResponse'</a>,
--   <a>deleteCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCacheClusterResponse :: Int -> DeleteCacheClusterResponse

-- | <i>See:</i> <a>newIncreaseNodeGroupsInGlobalReplicationGroup</a> smart
--   constructor.
data IncreaseNodeGroupsInGlobalReplicationGroup
IncreaseNodeGroupsInGlobalReplicationGroup' :: Maybe [RegionalConfiguration] -> Text -> Int -> Bool -> IncreaseNodeGroupsInGlobalReplicationGroup

-- | Create a value of <a>IncreaseNodeGroupsInGlobalReplicationGroup</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:regionalConfigurations:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_regionalConfigurations</a>
--   - Describes the replication group IDs, the Amazon regions where they
--   are stored and the shard configuration for each that comprise the
--   Global datastore
--   
--   
--   <a>$sel:globalReplicationGroupId:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   
--   <a>$sel:nodeGroupCount:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount</a> - The
--   number of node groups you wish to add
--   
--   
--   <a>$sel:applyImmediately:IncreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroup_applyImmediately</a> -
--   Indicates that the process begins immediately. At present, the only
--   permitted value for this parameter is true.
newIncreaseNodeGroupsInGlobalReplicationGroup :: Text -> Int -> Bool -> IncreaseNodeGroupsInGlobalReplicationGroup

-- | <i>See:</i>
--   <a>newIncreaseNodeGroupsInGlobalReplicationGroupResponse</a> smart
--   constructor.
data IncreaseNodeGroupsInGlobalReplicationGroupResponse
IncreaseNodeGroupsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> IncreaseNodeGroupsInGlobalReplicationGroupResponse

-- | Create a value of
--   <a>IncreaseNodeGroupsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:IncreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:IncreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>increaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus</a> -
--   The response's http status code.
newIncreaseNodeGroupsInGlobalReplicationGroupResponse :: Int -> IncreaseNodeGroupsInGlobalReplicationGroupResponse

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeUsers

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeUsers'</a>, <a>describeUsers_filters</a> -
--   Filter to determine the list of User IDs to return.
--   
--   <a>$sel:engine:DescribeUsers'</a>, <a>describeUsers_engine</a> - The
--   Redis engine.
--   
--   <a>$sel:userId:DescribeUsers'</a>, <a>describeUsers_userId</a> - The
--   ID of the user.
--   
--   <a>$sel:marker:DescribeUsers'</a>, <a>describeUsers_marker</a> - An
--   optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
--   
--   <a>$sel:maxRecords:DescribeUsers'</a>, <a>describeUsers_maxRecords</a>
--   - The maximum number of records to include in the response. If more
--   records exist than the specified MaxRecords value, a marker is
--   included in the response so that the remaining results can be
--   retrieved.
newDescribeUsers :: DescribeUsers

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe [User] -> Maybe Text -> Int -> DescribeUsersResponse

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - A list of users.
--   
--   <a>$sel:marker:DescribeUsers'</a>, <a>describeUsersResponse_marker</a>
--   - An optional marker returned from a prior request. Use this marker
--   for pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by MaxRecords. &gt;
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | Represents the input of a <tt>RebootCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newRebootCacheCluster</a> smart constructor.
data RebootCacheCluster
RebootCacheCluster' :: Text -> [Text] -> RebootCacheCluster

-- | Create a value of <a>RebootCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:RebootCacheCluster'</a>,
--   <a>rebootCacheCluster_cacheClusterId</a> - The cluster identifier.
--   This parameter is stored as a lowercase string.
--   
--   <a>$sel:cacheNodeIdsToReboot:RebootCacheCluster'</a>,
--   <a>rebootCacheCluster_cacheNodeIdsToReboot</a> - A list of cache node
--   IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.).
--   To reboot an entire cluster, specify all of the cache node IDs.
newRebootCacheCluster :: Text -> RebootCacheCluster

-- | <i>See:</i> <a>newRebootCacheClusterResponse</a> smart constructor.
data RebootCacheClusterResponse
RebootCacheClusterResponse' :: Maybe CacheCluster -> Int -> RebootCacheClusterResponse

-- | Create a value of <a>RebootCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:RebootCacheClusterResponse'</a>,
--   <a>rebootCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RebootCacheClusterResponse'</a>,
--   <a>rebootCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newRebootCacheClusterResponse :: Int -> RebootCacheClusterResponse

-- | <i>See:</i> <a>newCreateUserGroup</a> smart constructor.
data CreateUserGroup
CreateUserGroup' :: Maybe (NonEmpty Text) -> Maybe [Tag] -> Text -> Text -> CreateUserGroup

-- | Create a value of <a>CreateUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:CreateUserGroup'</a>, <a>createUserGroup_userIds</a> -
--   The list of user IDs that belong to the user group.
--   
--   <a>$sel:tags:CreateUserGroup'</a>, <a>createUserGroup_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
--   
--   <a>$sel:userGroupId:CreateUserGroup'</a>,
--   <a>createUserGroup_userGroupId</a> - The ID of the user group.
--   
--   <a>$sel:engine:CreateUserGroup'</a>, <a>createUserGroup_engine</a> -
--   The current supported value is Redis.
newCreateUserGroup :: Text -> Text -> CreateUserGroup

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Represents the input of a <tt>RevokeCacheSecurityGroupIngress</tt>
--   operation.
--   
--   <i>See:</i> <a>newRevokeCacheSecurityGroupIngress</a> smart
--   constructor.
data RevokeCacheSecurityGroupIngress
RevokeCacheSecurityGroupIngress' :: Text -> Text -> Text -> RevokeCacheSecurityGroupIngress

-- | Create a value of <a>RevokeCacheSecurityGroupIngress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_cacheSecurityGroupName</a> - The
--   name of the cache security group to revoke ingress from.
--   
--   <a>$sel:eC2SecurityGroupName:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_eC2SecurityGroupName</a> - The name
--   of the Amazon EC2 security group to revoke access from.
--   
--   <a>$sel:eC2SecurityGroupOwnerId:RevokeCacheSecurityGroupIngress'</a>,
--   <a>revokeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId</a> - The
--   Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
newRevokeCacheSecurityGroupIngress :: Text -> Text -> Text -> RevokeCacheSecurityGroupIngress

-- | <i>See:</i> <a>newRevokeCacheSecurityGroupIngressResponse</a> smart
--   constructor.
data RevokeCacheSecurityGroupIngressResponse
RevokeCacheSecurityGroupIngressResponse' :: Maybe CacheSecurityGroup -> Int -> RevokeCacheSecurityGroupIngressResponse

-- | Create a value of <a>RevokeCacheSecurityGroupIngressResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroup:RevokeCacheSecurityGroupIngressResponse'</a>,
--   <a>revokeCacheSecurityGroupIngressResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:RevokeCacheSecurityGroupIngressResponse'</a>,
--   <a>revokeCacheSecurityGroupIngressResponse_httpStatus</a> - The
--   response's http status code.
newRevokeCacheSecurityGroupIngressResponse :: Int -> RevokeCacheSecurityGroupIngressResponse

-- | Represents the input of a CreateCacheCluster operation.
--   
--   <i>See:</i> <a>newCreateCacheCluster</a> smart constructor.
data CreateCacheCluster
CreateCacheCluster' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe OutpostMode -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe AZMode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Tag] -> Maybe Int -> Maybe [Text] -> Text -> CreateCacheCluster

-- | Create a value of <a>CreateCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateCacheCluster'</a>,
--   <a>createCacheCluster_engineVersion</a> - The version number of the
--   cache engine to be used for this cluster. To view the supported cache
--   engine versions, use the DescribeCacheEngineVersions operation.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster or replication group and
--   create it anew with the earlier engine version.
--   
--   <a>$sel:cacheNodeType:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheNodeType</a> - The compute and memory
--   capacity of the nodes in the node group (shard).
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:securityGroupIds:CreateCacheCluster'</a>,
--   <a>createCacheCluster_securityGroupIds</a> - One or more VPC security
--   groups associated with the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:snapshotArns:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotArns</a> - A single-element string list
--   containing an Amazon Resource Name (ARN) that uniquely identifies a
--   Redis RDB snapshot file stored in Amazon S3. The snapshot file is used
--   to populate the node group (shard). The Amazon S3 object name in the
--   ARN cannot contain any commas.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Example of an Amazon S3 ARN:
--   <tt>arn:aws:s3:::my_bucket/snapshot1.rdb</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateCacheCluster'</a>,
--   <a>createCacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:outpostMode:CreateCacheCluster'</a>,
--   <a>createCacheCluster_outpostMode</a> - Specifies whether the nodes in
--   the cluster are created in a single outpost or across multiple
--   outposts.
--   
--   <a>$sel:cacheParameterGroupName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheParameterGroupName</a> - The name of the
--   parameter group to associate with this cluster. If this argument is
--   omitted, the default parameter group for the specified engine is used.
--   You cannot use any parameter group which has
--   <tt>cluster-enabled='yes'</tt> when creating a cluster.
--   
--   <a>$sel:snapshotWindow:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotWindow</a> - The daily time range (in
--   UTC) during which ElastiCache begins taking a daily snapshot of your
--   node group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:logDeliveryConfigurations:CreateCacheCluster'</a>,
--   <a>createCacheCluster_logDeliveryConfigurations</a> - Specifies the
--   destination, format and type of the logs.
--   
--   <a>$sel:authToken:CreateCacheCluster'</a>,
--   <a>createCacheCluster_authToken</a> - <b>Reserved parameter.</b> The
--   password used to access a password protected server.
--   
--   Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters.</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length.</li>
--   <li>The only permitted printable special characters are !, &amp;, #,
--   $, ^, &lt;, &gt;, and -. Other printable special characters cannot be
--   used in the AUTH token.</li>
--   </ul>
--   
--   For more information, see <a>AUTH password</a> at
--   http://redis.io/commands/AUTH.
--   
--   <a>$sel:engine:CreateCacheCluster'</a>,
--   <a>createCacheCluster_engine</a> - The name of the cache engine to be
--   used for this cluster.
--   
--   Valid values for this parameter are: <tt>memcached</tt> |
--   <tt>redis</tt>
--   
--   <a>$sel:preferredAvailabilityZones:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredAvailabilityZones</a> - A list of the
--   Availability Zones in which cache nodes are created. The order of the
--   zones in the list is not important.
--   
--   This option is only supported on Memcached.
--   
--   If you are creating your cluster in an Amazon VPC (recommended) you
--   can only locate nodes in Availability Zones that are associated with
--   the subnets in the selected subnet group.
--   
--   The number of Availability Zones listed must equal the value of
--   <tt>NumCacheNodes</tt>.
--   
--   If you want all the nodes in the same Availability Zone, use
--   <tt>PreferredAvailabilityZone</tt> instead, or repeat the Availability
--   Zone multiple times in the list.
--   
--   Default: System chosen Availability Zones.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredMaintenanceWindow</a> - Specifies the
--   weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   <a>$sel:cacheSubnetGroupName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheSubnetGroupName</a> - The name of the
--   subnet group to be used for the cluster.
--   
--   Use this parameter only when you are creating a cluster in an Amazon
--   Virtual Private Cloud (Amazon VPC).
--   
--   If you're going to launch your cluster in an Amazon VPC, you need to
--   create a subnet group before you start creating a cluster. For more
--   information, see <a>Subnets and Subnet Groups</a>.
--   
--   <a>$sel:preferredAvailabilityZone:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredAvailabilityZone</a> - The EC2
--   Availability Zone in which the cluster is created.
--   
--   All nodes belonging to this cluster are placed in the preferred
--   Availability Zone. If you want to create your nodes across multiple
--   Availability Zones, use <tt>PreferredAvailabilityZones</tt>.
--   
--   Default: System chosen Availability Zone.
--   
--   <a>$sel:snapshotRetentionLimit:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot taken today is retained for 5 days before being deleted.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   Default: 0 (i.e., automatic backups are disabled for this cache
--   cluster).
--   
--   <a>$sel:preferredOutpostArns:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredOutpostArns</a> - The outpost ARNs in
--   which the cache cluster is created.
--   
--   <a>$sel:aZMode:CreateCacheCluster'</a>,
--   <a>createCacheCluster_aZMode</a> - Specifies whether the nodes in this
--   Memcached cluster are created in a single Availability Zone or created
--   across multiple Availability Zones in the cluster's region.
--   
--   This parameter is only supported for Memcached clusters.
--   
--   If the <tt>AZMode</tt> and <tt>PreferredAvailabilityZones</tt> are not
--   specified, ElastiCache assumes <tt>single-az</tt> mode.
--   
--   <a>$sel:snapshotName:CreateCacheCluster'</a>,
--   <a>createCacheCluster_snapshotName</a> - The name of a Redis snapshot
--   from which to restore data into the new node group (shard). The
--   snapshot status changes to <tt>restoring</tt> while the new node group
--   (shard) is being created.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:preferredOutpostArn:CreateCacheCluster'</a>,
--   <a>createCacheCluster_preferredOutpostArn</a> - The outpost ARN in
--   which the cache cluster is created.
--   
--   <a>$sel:replicationGroupId:CreateCacheCluster'</a>,
--   <a>createCacheCluster_replicationGroupId</a> - The ID of the
--   replication group to which this cluster should belong. If this
--   parameter is specified, the cluster is added to the specified
--   replication group as a read replica; otherwise, the cluster is a
--   standalone primary that is not part of any replication group.
--   
--   If the specified replication group is Multi-AZ enabled and the
--   Availability Zone is not specified, the cluster is created in
--   Availability Zones that provide the best spread of read replicas
--   across Availability Zones.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:notificationTopicArn:CreateCacheCluster'</a>,
--   <a>createCacheCluster_notificationTopicArn</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (SNS) topic to
--   which notifications are sent.
--   
--   The Amazon SNS topic owner must be the same as the cluster owner.
--   
--   <a>$sel:numCacheNodes:CreateCacheCluster'</a>,
--   <a>createCacheCluster_numCacheNodes</a> - The initial number of cache
--   nodes that the cluster has.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   If you need more than 40 nodes for your Memcached cluster, please fill
--   out the ElastiCache Limit Increase Request form at
--   <a>http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.
--   
--   <a>$sel:tags:CreateCacheCluster'</a>, <a>createCacheCluster_tags</a> -
--   A list of tags to be added to this resource.
--   
--   <a>$sel:port:CreateCacheCluster'</a>, <a>createCacheCluster_port</a> -
--   The port number on which each of the cache nodes accepts connections.
--   
--   <a>$sel:cacheSecurityGroupNames:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheSecurityGroupNames</a> - A list of security
--   group names to associate with this cluster.
--   
--   Use this parameter only when you are creating a cluster outside of an
--   Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:cacheClusterId:CreateCacheCluster'</a>,
--   <a>createCacheCluster_cacheClusterId</a> - The node group (shard)
--   identifier. This parameter is stored as a lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 50 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
newCreateCacheCluster :: Text -> CreateCacheCluster

-- | <i>See:</i> <a>newCreateCacheClusterResponse</a> smart constructor.
data CreateCacheClusterResponse
CreateCacheClusterResponse' :: Maybe CacheCluster -> Int -> CreateCacheClusterResponse

-- | Create a value of <a>CreateCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:CreateCacheClusterResponse'</a>,
--   <a>createCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheClusterResponse'</a>,
--   <a>createCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newCreateCacheClusterResponse :: Int -> CreateCacheClusterResponse

-- | Represents the input of a <tt>DescribeEvents</tt> operation.
--   
--   <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe ISO8601 -> Maybe SourceType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ISO8601 -> Maybe Int -> DescribeEvents

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
--   
--   <a>$sel:sourceIdentifier:DescribeEvents'</a>,
--   <a>describeEvents_sourceIdentifier</a> - The identifier of the event
--   source for which events are returned. If not specified, all sources
--   are included in the response.
--   
--   <a>$sel:marker:DescribeEvents'</a>, <a>describeEvents_marker</a> - An
--   optional marker returned from a prior request. Use this marker for
--   pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeEvents'</a>,
--   <a>describeEvents_maxRecords</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   <tt>MaxRecords</tt> value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <b>Example:</b> 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes worth of events to retrieve.
newDescribeEvents :: DescribeEvents

-- | Represents the output of a <tt>DescribeEvents</tt> operation.
--   
--   <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe [Event] -> Maybe Text -> Int -> DescribeEventsResponse

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - A list of events. Each element
--   in the list contains detailed information about one event.
--   
--   <a>$sel:marker:DescribeEvents'</a>,
--   <a>describeEventsResponse_marker</a> - Provides an identifier to allow
--   retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | Represents the input of a <tt>DescribeEngineDefaultParameters</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeEngineDefaultParameters</a> smart
--   constructor.
data DescribeEngineDefaultParameters
DescribeEngineDefaultParameters' :: Maybe Text -> Maybe Int -> Text -> DescribeEngineDefaultParameters

-- | Create a value of <a>DescribeEngineDefaultParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_maxRecords</a> - The maximum number
--   of records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   
--   <a>$sel:cacheParameterGroupFamily:DescribeEngineDefaultParameters'</a>,
--   <a>describeEngineDefaultParameters_cacheParameterGroupFamily</a> - The
--   name of the cache parameter group family.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
newDescribeEngineDefaultParameters :: Text -> DescribeEngineDefaultParameters

-- | <i>See:</i> <a>newDescribeEngineDefaultParametersResponse</a> smart
--   constructor.
data DescribeEngineDefaultParametersResponse
DescribeEngineDefaultParametersResponse' :: Int -> EngineDefaults -> DescribeEngineDefaultParametersResponse

-- | Create a value of <a>DescribeEngineDefaultParametersResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeEngineDefaultParametersResponse'</a>,
--   <a>describeEngineDefaultParametersResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:engineDefaults:DescribeEngineDefaultParametersResponse'</a>,
--   <a>describeEngineDefaultParametersResponse_engineDefaults</a> -
--   Undocumented member.
newDescribeEngineDefaultParametersResponse :: Int -> EngineDefaults -> DescribeEngineDefaultParametersResponse

-- | <i>See:</i> <a>newDisassociateGlobalReplicationGroup</a> smart
--   constructor.
data DisassociateGlobalReplicationGroup
DisassociateGlobalReplicationGroup' :: Text -> Text -> Text -> DisassociateGlobalReplicationGroup

-- | Create a value of <a>DisassociateGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupId:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_globalReplicationGroupId</a> -
--   The name of the Global datastore
--   
--   <a>$sel:replicationGroupId:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_replicationGroupId</a> - The
--   name of the secondary cluster you wish to remove from the Global
--   datastore
--   
--   
--   <a>$sel:replicationGroupRegion:DisassociateGlobalReplicationGroup'</a>,
--   <a>disassociateGlobalReplicationGroup_replicationGroupRegion</a> - The
--   Amazon region of secondary cluster you wish to remove from the Global
--   datastore
newDisassociateGlobalReplicationGroup :: Text -> Text -> Text -> DisassociateGlobalReplicationGroup

-- | <i>See:</i> <a>newDisassociateGlobalReplicationGroupResponse</a> smart
--   constructor.
data DisassociateGlobalReplicationGroupResponse
DisassociateGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DisassociateGlobalReplicationGroupResponse

-- | Create a value of <a>DisassociateGlobalReplicationGroupResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DisassociateGlobalReplicationGroupResponse'</a>,
--   <a>disassociateGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:DisassociateGlobalReplicationGroupResponse'</a>,
--   <a>disassociateGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateGlobalReplicationGroupResponse :: Int -> DisassociateGlobalReplicationGroupResponse

-- | Represents the input of a <tt>ModifyCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newModifyCacheParameterGroup</a> smart constructor.
data ModifyCacheParameterGroup
ModifyCacheParameterGroup' :: Text -> [ParameterNameValue] -> ModifyCacheParameterGroup

-- | Create a value of <a>ModifyCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:ModifyCacheParameterGroup'</a>,
--   <a>modifyCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to modify.
--   
--   <a>$sel:parameterNameValues:ModifyCacheParameterGroup'</a>,
--   <a>modifyCacheParameterGroup_parameterNameValues</a> - An array of
--   parameter names and values for the parameter update. You must supply
--   at least one parameter name and value; subsequent arguments are
--   optional. A maximum of 20 parameters may be modified per request.
newModifyCacheParameterGroup :: Text -> ModifyCacheParameterGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | <i>See:</i> <a>newTestFailover</a> smart constructor.
data TestFailover
TestFailover' :: Text -> Text -> TestFailover

-- | Create a value of <a>TestFailover</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:TestFailover'</a>,
--   <a>testFailover_replicationGroupId</a> - The name of the replication
--   group (console: cluster) whose automatic failover is being tested by
--   this operation.
--   
--   <a>$sel:nodeGroupId:TestFailover'</a>, <a>testFailover_nodeGroupId</a>
--   - The name of the node group (called shard in the console) in this
--   replication group on which automatic failover is to be tested. You may
--   test automatic failover on up to 5 node groups in any rolling 24-hour
--   period.
newTestFailover :: Text -> Text -> TestFailover

-- | <i>See:</i> <a>newTestFailoverResponse</a> smart constructor.
data TestFailoverResponse
TestFailoverResponse' :: Maybe ReplicationGroup -> Int -> TestFailoverResponse

-- | Create a value of <a>TestFailoverResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:TestFailoverResponse'</a>,
--   <a>testFailoverResponse_replicationGroup</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:TestFailoverResponse'</a>,
--   <a>testFailoverResponse_httpStatus</a> - The response's http status
--   code.
newTestFailoverResponse :: Int -> TestFailoverResponse

-- | Represents the input of a <tt>DeleteReplicationGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteReplicationGroup</a> smart constructor.
data DeleteReplicationGroup
DeleteReplicationGroup' :: Maybe Text -> Maybe Bool -> Text -> DeleteReplicationGroup

-- | Create a value of <a>DeleteReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotIdentifier:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_finalSnapshotIdentifier</a> - The name of a
--   final node group (shard) snapshot. ElastiCache creates the snapshot
--   from the primary node in the cluster, rather than one of the replicas;
--   this is to ensure that it captures the freshest data. After the final
--   snapshot is taken, the replication group is immediately deleted.
--   
--   <a>$sel:retainPrimaryCluster:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_retainPrimaryCluster</a> - If set to
--   <tt>true</tt>, all of the read replicas are deleted, but the primary
--   node is retained.
--   
--   <a>$sel:replicationGroupId:DeleteReplicationGroup'</a>,
--   <a>deleteReplicationGroup_replicationGroupId</a> - The identifier for
--   the cluster to be deleted. This parameter is not case sensitive.
newDeleteReplicationGroup :: Text -> DeleteReplicationGroup

-- | <i>See:</i> <a>newDeleteReplicationGroupResponse</a> smart
--   constructor.
data DeleteReplicationGroupResponse
DeleteReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> DeleteReplicationGroupResponse

-- | Create a value of <a>DeleteReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:DeleteReplicationGroupResponse'</a>,
--   <a>deleteReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DeleteReplicationGroupResponse'</a>,
--   <a>deleteReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteReplicationGroupResponse :: Int -> DeleteReplicationGroupResponse

-- | The input parameters for the <tt>ListTagsForResource</tt> operation.
--   
--   <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceName</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want the list of tags, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Web Services Service Namespaces</a>.
newListTagsForResource :: Text -> ListTagsForResource

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | <i>See:</i> <a>newCompleteMigration</a> smart constructor.
data CompleteMigration
CompleteMigration' :: Maybe Bool -> Text -> CompleteMigration

-- | Create a value of <a>CompleteMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:CompleteMigration'</a>, <a>completeMigration_force</a> -
--   Forces the migration to stop without ensuring that data is in sync. It
--   is recommended to use this option only to abort the migration and not
--   recommended when application wants to continue migration to
--   ElastiCache.
--   
--   <a>$sel:replicationGroupId:CompleteMigration'</a>,
--   <a>completeMigration_replicationGroupId</a> - The ID of the
--   replication group to which data is being migrated.
newCompleteMigration :: Text -> CompleteMigration

-- | <i>See:</i> <a>newCompleteMigrationResponse</a> smart constructor.
data CompleteMigrationResponse
CompleteMigrationResponse' :: Maybe ReplicationGroup -> Int -> CompleteMigrationResponse

-- | Create a value of <a>CompleteMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:CompleteMigrationResponse'</a>,
--   <a>completeMigrationResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CompleteMigrationResponse'</a>,
--   <a>completeMigrationResponse_httpStatus</a> - The response's http
--   status code.
newCompleteMigrationResponse :: Int -> CompleteMigrationResponse

-- | Represents the input of a <tt>DescribeCacheClusters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheClusters</a> smart constructor.
data DescribeCacheClusters
DescribeCacheClusters' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Bool -> DescribeCacheClusters

-- | Create a value of <a>DescribeCacheClusters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:showCacheClustersNotInReplicationGroups:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_showCacheClustersNotInReplicationGroups</a> -
--   An optional flag that can be included in the
--   <tt>DescribeCacheCluster</tt> request to show only nodes (API/CLI:
--   clusters) that are not members of a replication group. In practice,
--   this mean Memcached and single node Redis clusters.
--   
--   <a>$sel:cacheClusterId:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_cacheClusterId</a> - The user-supplied
--   cluster identifier. If this parameter is specified, only information
--   about that specific cluster is returned. This parameter isn't case
--   sensitive.
--   
--   <a>$sel:marker:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_marker</a> - An optional marker returned from
--   a prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:showCacheNodeInfo:DescribeCacheClusters'</a>,
--   <a>describeCacheClusters_showCacheNodeInfo</a> - An optional flag that
--   can be included in the <tt>DescribeCacheCluster</tt> request to
--   retrieve information about the individual cache nodes.
newDescribeCacheClusters :: DescribeCacheClusters

-- | Represents the output of a <tt>DescribeCacheClusters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheClustersResponse</a> smart constructor.
data DescribeCacheClustersResponse
DescribeCacheClustersResponse' :: Maybe [CacheCluster] -> Maybe Text -> Int -> DescribeCacheClustersResponse

-- | Create a value of <a>DescribeCacheClustersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusters:DescribeCacheClustersResponse'</a>,
--   <a>describeCacheClustersResponse_cacheClusters</a> - A list of
--   clusters. Each item in the list contains detailed information about
--   one cluster.
--   
--   <a>$sel:marker:DescribeCacheClusters'</a>,
--   <a>describeCacheClustersResponse_marker</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheClustersResponse'</a>,
--   <a>describeCacheClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCacheClustersResponse :: Int -> DescribeCacheClustersResponse

-- | Represents the input of a <tt>PurchaseReservedCacheNodesOffering</tt>
--   operation.
--   
--   <i>See:</i> <a>newPurchaseReservedCacheNodesOffering</a> smart
--   constructor.
data PurchaseReservedCacheNodesOffering
PurchaseReservedCacheNodesOffering' :: Maybe Int -> Maybe Text -> Maybe [Tag] -> Text -> PurchaseReservedCacheNodesOffering

-- | Create a value of <a>PurchaseReservedCacheNodesOffering</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeCount:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_cacheNodeCount</a> - The number
--   of cache node instances to reserve.
--   
--   Default: <tt>1</tt>
--   
--   <a>$sel:reservedCacheNodeId:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_reservedCacheNodeId</a> - A
--   customer-specified identifier to track this reservation.
--   
--   The Reserved Cache Node ID is an unique customer-specified identifier
--   to track this reservation. If this parameter is not specified,
--   ElastiCache automatically generates an identifier for the reservation.
--   
--   Example: myreservationID
--   
--   <a>$sel:tags:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_tags</a> - A list of tags to be
--   added to this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   
--   <a>$sel:reservedCacheNodesOfferingId:PurchaseReservedCacheNodesOffering'</a>,
--   <a>purchaseReservedCacheNodesOffering_reservedCacheNodesOfferingId</a>
--   - The ID of the reserved cache node offering to purchase.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
newPurchaseReservedCacheNodesOffering :: Text -> PurchaseReservedCacheNodesOffering

-- | <i>See:</i> <a>newPurchaseReservedCacheNodesOfferingResponse</a> smart
--   constructor.
data PurchaseReservedCacheNodesOfferingResponse
PurchaseReservedCacheNodesOfferingResponse' :: Maybe ReservedCacheNode -> Int -> PurchaseReservedCacheNodesOfferingResponse

-- | Create a value of <a>PurchaseReservedCacheNodesOfferingResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:reservedCacheNode:PurchaseReservedCacheNodesOfferingResponse'</a>,
--   <a>purchaseReservedCacheNodesOfferingResponse_reservedCacheNode</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:PurchaseReservedCacheNodesOfferingResponse'</a>,
--   <a>purchaseReservedCacheNodesOfferingResponse_httpStatus</a> - The
--   response's http status code.
newPurchaseReservedCacheNodesOfferingResponse :: Int -> PurchaseReservedCacheNodesOfferingResponse

-- | Represents the input of a <tt>RemoveTagsFromResource</tt> operation.
--   
--   <i>See:</i> <a>newRemoveTagsFromResource</a> smart constructor.
data RemoveTagsFromResource
RemoveTagsFromResource' :: Text -> [Text] -> RemoveTagsFromResource

-- | Create a value of <a>RemoveTagsFromResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:RemoveTagsFromResource'</a>,
--   <a>removeTagsFromResource_resourceName</a> - The Amazon Resource Name
--   (ARN) of the resource from which you want the tags removed, for
--   example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
--   
--   <a>$sel:tagKeys:RemoveTagsFromResource'</a>,
--   <a>removeTagsFromResource_tagKeys</a> - A list of <tt>TagKeys</tt>
--   identifying the tags you want removed from the named resource.
newRemoveTagsFromResource :: Text -> RemoveTagsFromResource

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | Represents the input of a <tt>ModifyReplicationGroups</tt> operation.
--   
--   <i>See:</i> <a>newModifyReplicationGroup</a> smart constructor.
data ModifyReplicationGroup
ModifyReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe AuthTokenUpdateStrategyType -> Maybe Text -> Maybe [Text] -> Text -> ModifyReplicationGroup

-- | Create a value of <a>ModifyReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_automaticFailoverEnabled</a> - Determines
--   whether a read replica is automatically promoted to read/write primary
--   if the existing primary encounters a failure.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:engineVersion:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_engineVersion</a> - The upgraded version of
--   the cache engine to be run on the clusters in the replication group.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing replication group and create it
--   anew with the earlier engine version.
--   
--   <a>$sel:cacheNodeType:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheNodeType</a> - A valid cache node type
--   that you want to scale this replication group to.
--   
--   <a>$sel:snapshottingClusterId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshottingClusterId</a> - The cluster ID
--   that is used as the daily snapshot source for the replication group.
--   This parameter cannot be set for Redis (cluster mode enabled)
--   replication groups.
--   
--   <a>$sel:securityGroupIds:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_securityGroupIds</a> - Specifies the VPC
--   Security Groups associated with the clusters in the replication group.
--   
--   This parameter can be used only with replication group containing
--   clusters running in an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:autoMinorVersionUpgrade:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_autoMinorVersionUpgrade</a> - This parameter
--   is currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to apply to all of the clusters in this
--   replication group. This change is asynchronously applied as soon as
--   possible for parameters when the <tt>ApplyImmediately</tt> parameter
--   is specified as <tt>true</tt> for this request.
--   
--   <a>$sel:replicationGroupDescription:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_replicationGroupDescription</a> - A
--   description for the replication group. Maximum length is 255
--   characters.
--   
--   <a>$sel:snapshotWindow:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshotWindow</a> - The daily time range
--   (in UTC) during which ElastiCache begins taking a daily snapshot of
--   the node group (shard) specified by <tt>SnapshottingClusterId</tt>.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   <a>$sel:logDeliveryConfigurations:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_logDeliveryConfigurations</a> - Specifies
--   the destination, format and type of the logs.
--   
--   <a>$sel:authToken:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_authToken</a> - Reserved parameter. The
--   password used to access a password protected server. This parameter
--   must be specified with the <tt>auth-token-update-strategy </tt>
--   parameter. Password constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
--   
--   <a>$sel:primaryClusterId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_primaryClusterId</a> - For replication
--   groups with a single primary, if this parameter is specified,
--   ElastiCache promotes the specified cluster in the specified
--   replication group to the primary role. The nodes of all other clusters
--   in the replication group are read replicas.
--   
--   <a>$sel:preferredMaintenanceWindow:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_preferredMaintenanceWindow</a> - Specifies
--   the weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:multiAZEnabled:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_multiAZEnabled</a> - A flag to indicate
--   MultiAZ is enabled.
--   
--   <a>$sel:userGroupIdsToAdd:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_userGroupIdsToAdd</a> - The ID of the user
--   group you are associating with the replication group.
--   
--   <a>$sel:nodeGroupId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_nodeGroupId</a> - Deprecated. This parameter
--   is not used.
--   
--   <a>$sel:snapshotRetentionLimit:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_snapshotRetentionLimit</a> - The number of
--   days for which ElastiCache retains automatic node group (shard)
--   snapshots before deleting them. For example, if you set
--   <tt>SnapshotRetentionLimit</tt> to 5, a snapshot that was taken today
--   is retained for 5 days before being deleted.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
--   
--   <a>$sel:userGroupIdsToRemove:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_userGroupIdsToRemove</a> - The ID of the
--   user group to disassociate from the replication group, meaning the
--   users in the group no longer can access the replication group.
--   
--   <a>$sel:notificationTopicStatus:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_notificationTopicStatus</a> - The status of
--   the Amazon SNS notification topic for the replication group.
--   Notifications are sent only if the status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
--   
--   <a>$sel:applyImmediately:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_applyImmediately</a> - If <tt>true</tt>,
--   this parameter causes the modifications in this request and any
--   pending modifications to be applied, asynchronously and as soon as
--   possible, regardless of the <tt>PreferredMaintenanceWindow</tt>
--   setting for the replication group.
--   
--   If <tt>false</tt>, changes to the nodes in the replication group are
--   applied on the next maintenance reboot, or the next failure reboot,
--   whichever occurs first.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:removeUserGroups:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_removeUserGroups</a> - Removes the user
--   group associated with this replication group.
--   
--   <a>$sel:authTokenUpdateStrategy:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_authTokenUpdateStrategy</a> - Specifies the
--   strategy to use to update the AUTH token. This parameter must be
--   specified with the <tt>auth-token</tt> parameter. Possible values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
--   
--   <a>$sel:notificationTopicArn:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_notificationTopicArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon SNS topic to which notifications are
--   sent.
--   
--   The Amazon SNS topic owner must be same as the replication group
--   owner.
--   
--   <a>$sel:cacheSecurityGroupNames:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_cacheSecurityGroupNames</a> - A list of
--   cache security group names to authorize for the clusters in this
--   replication group. This change is asynchronously applied as soon as
--   possible.
--   
--   This parameter can be used only with replication group containing
--   clusters running outside of an Amazon Virtual Private Cloud (Amazon
--   VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be <tt>Default</tt>.
--   
--   <a>$sel:replicationGroupId:ModifyReplicationGroup'</a>,
--   <a>modifyReplicationGroup_replicationGroupId</a> - The identifier of
--   the replication group to modify.
newModifyReplicationGroup :: Text -> ModifyReplicationGroup

-- | <i>See:</i> <a>newModifyReplicationGroupResponse</a> smart
--   constructor.
data ModifyReplicationGroupResponse
ModifyReplicationGroupResponse' :: Maybe ReplicationGroup -> Int -> ModifyReplicationGroupResponse

-- | Create a value of <a>ModifyReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:ModifyReplicationGroupResponse'</a>,
--   <a>modifyReplicationGroupResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:ModifyReplicationGroupResponse'</a>,
--   <a>modifyReplicationGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyReplicationGroupResponse :: Int -> ModifyReplicationGroupResponse

-- | Represents the input of a <tt>DescribeCacheParameters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameters</a> smart constructor.
data DescribeCacheParameters
DescribeCacheParameters' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> DescribeCacheParameters

-- | Create a value of <a>DescribeCacheParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:source:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_source</a> - The parameter types to return.
--   
--   Valid values: <tt>user</tt> | <tt>system</tt> |
--   <tt>engine-default</tt>
--   
--   <a>$sel:cacheParameterGroupName:DescribeCacheParameters'</a>,
--   <a>describeCacheParameters_cacheParameterGroupName</a> - The name of a
--   specific cache parameter group to return details for.
newDescribeCacheParameters :: Text -> DescribeCacheParameters

-- | Represents the output of a <tt>DescribeCacheParameters</tt> operation.
--   
--   <i>See:</i> <a>newDescribeCacheParametersResponse</a> smart
--   constructor.
data DescribeCacheParametersResponse
DescribeCacheParametersResponse' :: Maybe [CacheNodeTypeSpecificParameter] -> Maybe Text -> Maybe [Parameter] -> Int -> DescribeCacheParametersResponse

-- | Create a value of <a>DescribeCacheParametersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheNodeTypeSpecificParameters:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_cacheNodeTypeSpecificParameters</a>
--   - A list of parameters specific to a particular cache node type. Each
--   element in the list contains detailed information about one parameter.
--   
--   <a>$sel:marker:DescribeCacheParameters'</a>,
--   <a>describeCacheParametersResponse_marker</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_parameters</a> - A list of
--   Parameter instances.
--   
--   <a>$sel:httpStatus:DescribeCacheParametersResponse'</a>,
--   <a>describeCacheParametersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheParametersResponse :: Int -> DescribeCacheParametersResponse

-- | <i>See:</i> <a>newDescribeGlobalReplicationGroups</a> smart
--   constructor.
data DescribeGlobalReplicationGroups
DescribeGlobalReplicationGroups' :: Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Text -> DescribeGlobalReplicationGroups

-- | Create a value of <a>DescribeGlobalReplicationGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showMemberInfo:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_showMemberInfo</a> - Returns the
--   list of members that comprise the Global datastore.
--   
--   <a>$sel:marker:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_maxRecords</a> - The maximum number
--   of records to include in the response. If more records exist than the
--   specified MaxRecords value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   <a>$sel:globalReplicationGroupId:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroups_globalReplicationGroupId</a> - The
--   name of the Global datastore
newDescribeGlobalReplicationGroups :: DescribeGlobalReplicationGroups

-- | <i>See:</i> <a>newDescribeGlobalReplicationGroupsResponse</a> smart
--   constructor.
data DescribeGlobalReplicationGroupsResponse
DescribeGlobalReplicationGroupsResponse' :: Maybe Text -> Maybe [GlobalReplicationGroup] -> Int -> DescribeGlobalReplicationGroupsResponse

-- | Create a value of <a>DescribeGlobalReplicationGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeGlobalReplicationGroups'</a>,
--   <a>describeGlobalReplicationGroupsResponse_marker</a> - An optional
--   marker returned from a prior request. Use this marker for pagination
--   of results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by MaxRecords. &gt;
--   
--   
--   <a>$sel:globalReplicationGroups:DescribeGlobalReplicationGroupsResponse'</a>,
--   <a>describeGlobalReplicationGroupsResponse_globalReplicationGroups</a>
--   - Indicates the slot configuration and global identifier for each
--   slice group.
--   
--   <a>$sel:httpStatus:DescribeGlobalReplicationGroupsResponse'</a>,
--   <a>describeGlobalReplicationGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeGlobalReplicationGroupsResponse :: Int -> DescribeGlobalReplicationGroupsResponse

-- | Represents the input of a <tt>DescribeCacheSubnetGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSubnetGroups</a> smart constructor.
data DescribeCacheSubnetGroups
DescribeCacheSubnetGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheSubnetGroups

-- | Create a value of <a>DescribeCacheSubnetGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroupName:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_cacheSubnetGroupName</a> - The name of
--   the cache subnet group to return details for.
--   
--   <a>$sel:marker:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheSubnetGroups :: DescribeCacheSubnetGroups

-- | Represents the output of a <tt>DescribeCacheSubnetGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSubnetGroupsResponse</a> smart
--   constructor.
data DescribeCacheSubnetGroupsResponse
DescribeCacheSubnetGroupsResponse' :: Maybe Text -> Maybe [CacheSubnetGroup] -> Int -> DescribeCacheSubnetGroupsResponse

-- | Create a value of <a>DescribeCacheSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeCacheSubnetGroups'</a>,
--   <a>describeCacheSubnetGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:cacheSubnetGroups:DescribeCacheSubnetGroupsResponse'</a>,
--   <a>describeCacheSubnetGroupsResponse_cacheSubnetGroups</a> - A list of
--   cache subnet groups. Each element in the list contains detailed
--   information about one group.
--   
--   <a>$sel:httpStatus:DescribeCacheSubnetGroupsResponse'</a>,
--   <a>describeCacheSubnetGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheSubnetGroupsResponse :: Int -> DescribeCacheSubnetGroupsResponse

-- | <i>See:</i> <a>newDescribeUpdateActions</a> smart constructor.
data DescribeUpdateActions
DescribeUpdateActions' :: Maybe [Text] -> Maybe Text -> Maybe [UpdateActionStatus] -> Maybe Text -> Maybe TimeRangeFilter -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe Bool -> Maybe [ServiceUpdateStatus] -> DescribeUpdateActions

-- | Create a value of <a>DescribeUpdateActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:serviceUpdateName:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:updateActionStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_updateActionStatus</a> - The status of the
--   update action.
--   
--   <a>$sel:engine:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_engine</a> - The Elasticache engine to which
--   the update applies. Either Redis or Memcached
--   
--   <a>$sel:serviceUpdateTimeRange:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateTimeRange</a> - The range of
--   time specified to search for service updates that are in available
--   status
--   
--   <a>$sel:marker:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_marker</a> - An optional marker returned from
--   a prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_maxRecords</a> - The maximum number of
--   records to include in the response
--   
--   <a>$sel:replicationGroupIds:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:showNodeLevelUpdateStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_showNodeLevelUpdateStatus</a> - Dictates
--   whether to include node level update status in the response
--   
--   <a>$sel:serviceUpdateStatus:DescribeUpdateActions'</a>,
--   <a>describeUpdateActions_serviceUpdateStatus</a> - The status of the
--   service update
newDescribeUpdateActions :: DescribeUpdateActions

-- | <i>See:</i> <a>newDescribeUpdateActionsResponse</a> smart constructor.
data DescribeUpdateActionsResponse
DescribeUpdateActionsResponse' :: Maybe [UpdateAction] -> Maybe Text -> Int -> DescribeUpdateActionsResponse

-- | Create a value of <a>DescribeUpdateActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateActions:DescribeUpdateActionsResponse'</a>,
--   <a>describeUpdateActionsResponse_updateActions</a> - Returns a list of
--   update actions
--   
--   <a>$sel:marker:DescribeUpdateActions'</a>,
--   <a>describeUpdateActionsResponse_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeUpdateActionsResponse'</a>,
--   <a>describeUpdateActionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUpdateActionsResponse :: Int -> DescribeUpdateActionsResponse

-- | <i>See:</i> <a>newRebalanceSlotsInGlobalReplicationGroup</a> smart
--   constructor.
data RebalanceSlotsInGlobalReplicationGroup
RebalanceSlotsInGlobalReplicationGroup' :: Text -> Bool -> RebalanceSlotsInGlobalReplicationGroup

-- | Create a value of <a>RebalanceSlotsInGlobalReplicationGroup</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupId:RebalanceSlotsInGlobalReplicationGroup'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   <a>$sel:applyImmediately:RebalanceSlotsInGlobalReplicationGroup'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroup_applyImmediately</a> - If
--   <tt>True</tt>, redistribution is applied immediately.
newRebalanceSlotsInGlobalReplicationGroup :: Text -> Bool -> RebalanceSlotsInGlobalReplicationGroup

-- | <i>See:</i> <a>newRebalanceSlotsInGlobalReplicationGroupResponse</a>
--   smart constructor.
data RebalanceSlotsInGlobalReplicationGroupResponse
RebalanceSlotsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> RebalanceSlotsInGlobalReplicationGroupResponse

-- | Create a value of
--   <a>RebalanceSlotsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:RebalanceSlotsInGlobalReplicationGroupResponse'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:RebalanceSlotsInGlobalReplicationGroupResponse'</a>,
--   <a>rebalanceSlotsInGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newRebalanceSlotsInGlobalReplicationGroupResponse :: Int -> RebalanceSlotsInGlobalReplicationGroupResponse

-- | Represents the input of a <tt>CreateCacheSecurityGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateCacheSecurityGroup</a> smart constructor.
data CreateCacheSecurityGroup
CreateCacheSecurityGroup' :: Maybe [Tag] -> Text -> Text -> CreateCacheSecurityGroup

-- | Create a value of <a>CreateCacheSecurityGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheSecurityGroupName:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_cacheSecurityGroupName</a> - A name for
--   the cache security group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Cannot be the word "Default".
--   
--   Example: <tt>mysecuritygroup</tt>
--   
--   <a>$sel:description:CreateCacheSecurityGroup'</a>,
--   <a>createCacheSecurityGroup_description</a> - A description for the
--   cache security group.
newCreateCacheSecurityGroup :: Text -> Text -> CreateCacheSecurityGroup

-- | <i>See:</i> <a>newCreateCacheSecurityGroupResponse</a> smart
--   constructor.
data CreateCacheSecurityGroupResponse
CreateCacheSecurityGroupResponse' :: Maybe CacheSecurityGroup -> Int -> CreateCacheSecurityGroupResponse

-- | Create a value of <a>CreateCacheSecurityGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroup:CreateCacheSecurityGroupResponse'</a>,
--   <a>createCacheSecurityGroupResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheSecurityGroupResponse'</a>,
--   <a>createCacheSecurityGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateCacheSecurityGroupResponse :: Int -> CreateCacheSecurityGroupResponse

-- | <i>See:</i> <a>newDecreaseReplicaCount</a> smart constructor.
data DecreaseReplicaCount
DecreaseReplicaCount' :: Maybe Int -> Maybe [ConfigureShard] -> Maybe [Text] -> Text -> Bool -> DecreaseReplicaCount

-- | Create a value of <a>DecreaseReplicaCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newReplicaCount':DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_newReplicaCount</a> - The number of read
--   replica nodes you want at the completion of this operation. For Redis
--   (cluster mode disabled) replication groups, this is the number of
--   replica nodes in the replication group. For Redis (cluster mode
--   enabled) replication groups, this is the number of replica nodes in
--   each of the replication group's node groups.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ is enabled:
--   1</li><li>If Multi-AZ is not enabled: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
--   
--   <a>$sel:replicaConfiguration:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicaConfiguration</a> - A list of
--   <tt>ConfigureShard</tt> objects that can be used to configure each
--   shard in a Redis (cluster mode enabled) replication group. The
--   <tt>ConfigureShard</tt> has three members: <tt>NewReplicaCount</tt>,
--   <tt>NodeGroupId</tt>, and <tt>PreferredAvailabilityZones</tt>.
--   
--   <a>$sel:replicasToRemove:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicasToRemove</a> - A list of the node ids
--   to remove from the replication group or node group (shard).
--   
--   <a>$sel:replicationGroupId:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_replicationGroupId</a> - The id of the
--   replication group from which you want to remove replica nodes.
--   
--   <a>$sel:applyImmediately:DecreaseReplicaCount'</a>,
--   <a>decreaseReplicaCount_applyImmediately</a> - If <tt>True</tt>, the
--   number of replica nodes is decreased immediately.
--   <tt>ApplyImmediately=False</tt> is not currently supported.
newDecreaseReplicaCount :: Text -> Bool -> DecreaseReplicaCount

-- | <i>See:</i> <a>newDecreaseReplicaCountResponse</a> smart constructor.
data DecreaseReplicaCountResponse
DecreaseReplicaCountResponse' :: Maybe ReplicationGroup -> Int -> DecreaseReplicaCountResponse

-- | Create a value of <a>DecreaseReplicaCountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:DecreaseReplicaCountResponse'</a>,
--   <a>decreaseReplicaCountResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DecreaseReplicaCountResponse'</a>,
--   <a>decreaseReplicaCountResponse_httpStatus</a> - The response's http
--   status code.
newDecreaseReplicaCountResponse :: Int -> DecreaseReplicaCountResponse

-- | Represents the input of an AddTagsToResource operation.
--   
--   <i>See:</i> <a>newAddTagsToResource</a> smart constructor.
data AddTagsToResource
AddTagsToResource' :: Text -> [Tag] -> AddTagsToResource

-- | Create a value of <a>AddTagsToResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:AddTagsToResource'</a>,
--   <a>addTagsToResource_resourceName</a> - The Amazon Resource Name (ARN)
--   of the resource to which the tags are to be added, for example
--   <tt>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</tt> or
--   <tt>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</tt>.
--   ElastiCache resources are <i>cluster</i> and <i>snapshot</i>.
--   
--   For more information about ARNs, see <a>Amazon Resource Names (ARNs)
--   and Amazon Service Namespaces</a>.
--   
--   <a>$sel:tags:AddTagsToResource'</a>, <a>addTagsToResource_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
newAddTagsToResource :: Text -> AddTagsToResource

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | Represents the input of an AuthorizeCacheSecurityGroupIngress
--   operation.
--   
--   <i>See:</i> <a>newAuthorizeCacheSecurityGroupIngress</a> smart
--   constructor.
data AuthorizeCacheSecurityGroupIngress
AuthorizeCacheSecurityGroupIngress' :: Text -> Text -> Text -> AuthorizeCacheSecurityGroupIngress

-- | Create a value of <a>AuthorizeCacheSecurityGroupIngress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroupName:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_cacheSecurityGroupName</a> - The
--   cache security group that allows network ingress.
--   
--   <a>$sel:eC2SecurityGroupName:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_eC2SecurityGroupName</a> - The
--   Amazon EC2 security group to be authorized for ingress to the cache
--   security group.
--   
--   
--   <a>$sel:eC2SecurityGroupOwnerId:AuthorizeCacheSecurityGroupIngress'</a>,
--   <a>authorizeCacheSecurityGroupIngress_eC2SecurityGroupOwnerId</a> -
--   The Amazon account number of the Amazon EC2 security group owner. Note
--   that this is not the same thing as an Amazon access key ID - you must
--   provide a valid Amazon account number for this parameter.
newAuthorizeCacheSecurityGroupIngress :: Text -> Text -> Text -> AuthorizeCacheSecurityGroupIngress

-- | <i>See:</i> <a>newAuthorizeCacheSecurityGroupIngressResponse</a> smart
--   constructor.
data AuthorizeCacheSecurityGroupIngressResponse
AuthorizeCacheSecurityGroupIngressResponse' :: Maybe CacheSecurityGroup -> Int -> AuthorizeCacheSecurityGroupIngressResponse

-- | Create a value of <a>AuthorizeCacheSecurityGroupIngressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheSecurityGroup:AuthorizeCacheSecurityGroupIngressResponse'</a>,
--   <a>authorizeCacheSecurityGroupIngressResponse_cacheSecurityGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:AuthorizeCacheSecurityGroupIngressResponse'</a>,
--   <a>authorizeCacheSecurityGroupIngressResponse_httpStatus</a> - The
--   response's http status code.
newAuthorizeCacheSecurityGroupIngressResponse :: Int -> AuthorizeCacheSecurityGroupIngressResponse

-- | Represents the input of a <tt>CopySnapshotMessage</tt> operation.
--   
--   <i>See:</i> <a>newCopySnapshot</a> smart constructor.
data CopySnapshot
CopySnapshot' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CopySnapshot

-- | Create a value of <a>CopySnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBucket:CopySnapshot'</a>,
--   <a>copySnapshot_targetBucket</a> - The Amazon S3 bucket to which the
--   snapshot is exported. This parameter is used only when exporting a
--   snapshot for external access.
--   
--   When using this parameter to export a snapshot, be sure Amazon
--   ElastiCache has the needed permissions to this S3 bucket. For more
--   information, see <a>Step 2: Grant ElastiCache Access to Your Amazon S3
--   Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.
--   
--   For more information, see <a>Exporting a Snapshot</a> in the <i>Amazon
--   ElastiCache User Guide</i>.
--   
--   <a>$sel:kmsKeyId:CopySnapshot'</a>, <a>copySnapshot_kmsKeyId</a> - The
--   ID of the KMS key used to encrypt the target snapshot.
--   
--   <a>$sel:tags:CopySnapshot'</a>, <a>copySnapshot_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:sourceSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_sourceSnapshotName</a> - The name of an existing
--   snapshot from which to make a copy.
--   
--   <a>$sel:targetSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_targetSnapshotName</a> - A name for the snapshot copy.
--   ElastiCache does not permit overwriting a snapshot, therefore this
--   name must be unique within its context - ElastiCache or an Amazon S3
--   bucket if exporting.
newCopySnapshot :: Text -> Text -> CopySnapshot

-- | <i>See:</i> <a>newCopySnapshotResponse</a> smart constructor.
data CopySnapshotResponse
CopySnapshotResponse' :: Maybe Snapshot -> Int -> CopySnapshotResponse

-- | Create a value of <a>CopySnapshotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCopySnapshotResponse :: Int -> CopySnapshotResponse

-- | <i>See:</i> <a>newFailoverGlobalReplicationGroup</a> smart
--   constructor.
data FailoverGlobalReplicationGroup
FailoverGlobalReplicationGroup' :: Text -> Text -> Text -> FailoverGlobalReplicationGroup

-- | Create a value of <a>FailoverGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:globalReplicationGroupId:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   <a>$sel:primaryRegion:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_primaryRegion</a> - The Amazon
--   region of the primary cluster of the Global datastore
--   
--   <a>$sel:primaryReplicationGroupId:FailoverGlobalReplicationGroup'</a>,
--   <a>failoverGlobalReplicationGroup_primaryReplicationGroupId</a> - The
--   name of the primary replication group
newFailoverGlobalReplicationGroup :: Text -> Text -> Text -> FailoverGlobalReplicationGroup

-- | <i>See:</i> <a>newFailoverGlobalReplicationGroupResponse</a> smart
--   constructor.
data FailoverGlobalReplicationGroupResponse
FailoverGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> FailoverGlobalReplicationGroupResponse

-- | Create a value of <a>FailoverGlobalReplicationGroupResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:FailoverGlobalReplicationGroupResponse'</a>,
--   <a>failoverGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:FailoverGlobalReplicationGroupResponse'</a>,
--   <a>failoverGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newFailoverGlobalReplicationGroupResponse :: Int -> FailoverGlobalReplicationGroupResponse

-- | Represents the input of a <tt>CreateCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateCacheSubnetGroup</a> smart constructor.
data CreateCacheSubnetGroup
CreateCacheSubnetGroup' :: Maybe [Tag] -> Text -> Text -> [Text] -> CreateCacheSubnetGroup

-- | Create a value of <a>CreateCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheSubnetGroupName:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_cacheSubnetGroupName</a> - A name for the
--   cache subnet group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
--   
--   <a>$sel:cacheSubnetGroupDescription:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_cacheSubnetGroupDescription</a> - A
--   description for the cache subnet group.
--   
--   <a>$sel:subnetIds:CreateCacheSubnetGroup'</a>,
--   <a>createCacheSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for
--   the cache subnet group.
newCreateCacheSubnetGroup :: Text -> Text -> CreateCacheSubnetGroup

-- | <i>See:</i> <a>newCreateCacheSubnetGroupResponse</a> smart
--   constructor.
data CreateCacheSubnetGroupResponse
CreateCacheSubnetGroupResponse' :: Maybe CacheSubnetGroup -> Int -> CreateCacheSubnetGroupResponse

-- | Create a value of <a>CreateCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroup:CreateCacheSubnetGroupResponse'</a>,
--   <a>createCacheSubnetGroupResponse_cacheSubnetGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CreateCacheSubnetGroupResponse'</a>,
--   <a>createCacheSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateCacheSubnetGroupResponse :: Int -> CreateCacheSubnetGroupResponse

-- | <i>See:</i> <a>newCreateGlobalReplicationGroup</a> smart constructor.
data CreateGlobalReplicationGroup
CreateGlobalReplicationGroup' :: Maybe Text -> Text -> Text -> CreateGlobalReplicationGroup

-- | Create a value of <a>CreateGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupDescription:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_globalReplicationGroupDescription</a>
--   - Provides details of the Global datastore
--   
--   
--   <a>$sel:globalReplicationGroupIdSuffix:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_globalReplicationGroupIdSuffix</a> -
--   The suffix name of a Global datastore. Amazon ElastiCache
--   automatically applies a prefix to the Global datastore ID when it is
--   created. Each Amazon Region has its own prefix. For instance, a Global
--   datastore ID created in the US-West-1 region will begin with "dsdfu"
--   along with the suffix name you provide. The suffix, combined with the
--   auto-generated prefix, guarantees uniqueness of the Global datastore
--   name across multiple regions.
--   
--   For a full list of Amazon Regions and their respective Global
--   datastore iD prefixes, see <a>Using the Amazon CLI with Global
--   datastores</a> .
--   
--   <a>$sel:primaryReplicationGroupId:CreateGlobalReplicationGroup'</a>,
--   <a>createGlobalReplicationGroup_primaryReplicationGroupId</a> - The
--   name of the primary cluster that accepts writes and will replicate
--   updates to the secondary cluster.
newCreateGlobalReplicationGroup :: Text -> Text -> CreateGlobalReplicationGroup

-- | <i>See:</i> <a>newCreateGlobalReplicationGroupResponse</a> smart
--   constructor.
data CreateGlobalReplicationGroupResponse
CreateGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> CreateGlobalReplicationGroupResponse

-- | Create a value of <a>CreateGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:CreateGlobalReplicationGroupResponse'</a>,
--   <a>createGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateGlobalReplicationGroupResponse'</a>,
--   <a>createGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newCreateGlobalReplicationGroupResponse :: Int -> CreateGlobalReplicationGroupResponse

-- | Represents the input of a <tt>DescribeCacheParameterGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameterGroups</a> smart constructor.
data DescribeCacheParameterGroups
DescribeCacheParameterGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheParameterGroups

-- | Create a value of <a>DescribeCacheParameterGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_cacheParameterGroupName</a> - The name
--   of a specific cache parameter group to return details for.
--   
--   <a>$sel:marker:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheParameterGroups :: DescribeCacheParameterGroups

-- | Represents the output of a <tt>DescribeCacheParameterGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheParameterGroupsResponse</a> smart
--   constructor.
data DescribeCacheParameterGroupsResponse
DescribeCacheParameterGroupsResponse' :: Maybe [CacheParameterGroup] -> Maybe Text -> Int -> DescribeCacheParameterGroupsResponse

-- | Create a value of <a>DescribeCacheParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheParameterGroups:DescribeCacheParameterGroupsResponse'</a>,
--   <a>describeCacheParameterGroupsResponse_cacheParameterGroups</a> - A
--   list of cache parameter groups. Each element in the list contains
--   detailed information about one cache parameter group.
--   
--   <a>$sel:marker:DescribeCacheParameterGroups'</a>,
--   <a>describeCacheParameterGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheParameterGroupsResponse'</a>,
--   <a>describeCacheParameterGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeCacheParameterGroupsResponse :: Int -> DescribeCacheParameterGroupsResponse

-- | Represents the input of a <tt>ResetCacheParameterGroup</tt> operation.
--   
--   <i>See:</i> <a>newResetCacheParameterGroup</a> smart constructor.
data ResetCacheParameterGroup
ResetCacheParameterGroup' :: Maybe Bool -> Maybe [ParameterNameValue] -> Text -> ResetCacheParameterGroup

-- | Create a value of <a>ResetCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetAllParameters:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_resetAllParameters</a> - If <tt>true</tt>,
--   all parameters in the cache parameter group are reset to their default
--   values. If <tt>false</tt>, only the parameters listed by
--   <tt>ParameterNameValues</tt> are reset to their default values.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:parameterNameValues:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_parameterNameValues</a> - An array of
--   parameter names to reset to their default values. If
--   <tt>ResetAllParameters</tt> is <tt>true</tt>, do not use
--   <tt>ParameterNameValues</tt>. If <tt>ResetAllParameters</tt> is
--   <tt>false</tt>, you must specify the name of at least one parameter to
--   reset.
--   
--   <a>$sel:cacheParameterGroupName:ResetCacheParameterGroup'</a>,
--   <a>resetCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to reset.
newResetCacheParameterGroup :: Text -> ResetCacheParameterGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | The input parameters for the <tt>ListAllowedNodeTypeModifications</tt>
--   operation.
--   
--   <i>See:</i> <a>newListAllowedNodeTypeModifications</a> smart
--   constructor.
data ListAllowedNodeTypeModifications
ListAllowedNodeTypeModifications' :: Maybe Text -> Maybe Text -> ListAllowedNodeTypeModifications

-- | Create a value of <a>ListAllowedNodeTypeModifications</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:ListAllowedNodeTypeModifications'</a>,
--   <a>listAllowedNodeTypeModifications_cacheClusterId</a> - The name of
--   the cluster you want to scale up to a larger node instanced type.
--   ElastiCache uses the cluster id to identify the current node type of
--   this cluster and from that to create a list of node types you can
--   scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
--   
--   <a>$sel:replicationGroupId:ListAllowedNodeTypeModifications'</a>,
--   <a>listAllowedNodeTypeModifications_replicationGroupId</a> - The name
--   of the replication group want to scale up to a larger node type.
--   ElastiCache uses the replication group id to identify the current node
--   type being used by this replication group, and from that to create a
--   list of node types you can scale up to.
--   
--   You must provide a value for either the <tt>CacheClusterId</tt> or the
--   <tt>ReplicationGroupId</tt>.
newListAllowedNodeTypeModifications :: ListAllowedNodeTypeModifications

-- | Represents the allowed node types you can use to modify your cluster
--   or replication group.
--   
--   <i>See:</i> <a>newListAllowedNodeTypeModificationsResponse</a> smart
--   constructor.
data ListAllowedNodeTypeModificationsResponse
ListAllowedNodeTypeModificationsResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ListAllowedNodeTypeModificationsResponse

-- | Create a value of <a>ListAllowedNodeTypeModificationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:scaleUpModifications:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_scaleUpModifications</a> -
--   A string list, each element of which specifies a cache node type which
--   you can use to scale your cluster or replication group.
--   
--   When scaling up a Redis cluster or replication group using
--   <tt>ModifyCacheCluster</tt> or <tt>ModifyReplicationGroup</tt>, use a
--   value from this list for the <tt>CacheNodeType</tt> parameter.
--   
--   
--   <a>$sel:scaleDownModifications:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_scaleDownModifications</a>
--   - A string list, each element of which specifies a cache node type
--   which you can use to scale your cluster or replication group. When
--   scaling down a Redis cluster or replication group using
--   ModifyCacheCluster or ModifyReplicationGroup, use a value from this
--   list for the CacheNodeType parameter.
--   
--   <a>$sel:httpStatus:ListAllowedNodeTypeModificationsResponse'</a>,
--   <a>listAllowedNodeTypeModificationsResponse_httpStatus</a> - The
--   response's http status code.
newListAllowedNodeTypeModificationsResponse :: Int -> ListAllowedNodeTypeModificationsResponse

-- | <i>See:</i> <a>newIncreaseReplicaCount</a> smart constructor.
data IncreaseReplicaCount
IncreaseReplicaCount' :: Maybe Int -> Maybe [ConfigureShard] -> Text -> Bool -> IncreaseReplicaCount

-- | Create a value of <a>IncreaseReplicaCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newReplicaCount':IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_newReplicaCount</a> - The number of read
--   replica nodes you want at the completion of this operation. For Redis
--   (cluster mode disabled) replication groups, this is the number of
--   replica nodes in the replication group. For Redis (cluster mode
--   enabled) replication groups, this is the number of replica nodes in
--   each of the replication group's node groups.
--   
--   <a>$sel:replicaConfiguration:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_replicaConfiguration</a> - A list of
--   <tt>ConfigureShard</tt> objects that can be used to configure each
--   shard in a Redis (cluster mode enabled) replication group. The
--   <tt>ConfigureShard</tt> has three members: <tt>NewReplicaCount</tt>,
--   <tt>NodeGroupId</tt>, and <tt>PreferredAvailabilityZones</tt>.
--   
--   <a>$sel:replicationGroupId:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_replicationGroupId</a> - The id of the
--   replication group to which you want to add replica nodes.
--   
--   <a>$sel:applyImmediately:IncreaseReplicaCount'</a>,
--   <a>increaseReplicaCount_applyImmediately</a> - If <tt>True</tt>, the
--   number of replica nodes is increased immediately.
--   <tt>ApplyImmediately=False</tt> is not currently supported.
newIncreaseReplicaCount :: Text -> Bool -> IncreaseReplicaCount

-- | <i>See:</i> <a>newIncreaseReplicaCountResponse</a> smart constructor.
data IncreaseReplicaCountResponse
IncreaseReplicaCountResponse' :: Maybe ReplicationGroup -> Int -> IncreaseReplicaCountResponse

-- | Create a value of <a>IncreaseReplicaCountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroup:IncreaseReplicaCountResponse'</a>,
--   <a>increaseReplicaCountResponse_replicationGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:IncreaseReplicaCountResponse'</a>,
--   <a>increaseReplicaCountResponse_httpStatus</a> - The response's http
--   status code.
newIncreaseReplicaCountResponse :: Int -> IncreaseReplicaCountResponse

-- | Represents the input for a
--   <tt>ModifyReplicationGroupShardConfiguration</tt> operation.
--   
--   <i>See:</i> <a>newModifyReplicationGroupShardConfiguration</a> smart
--   constructor.
data ModifyReplicationGroupShardConfiguration
ModifyReplicationGroupShardConfiguration' :: Maybe [Text] -> Maybe [ReshardingConfiguration] -> Maybe [Text] -> Text -> Int -> Bool -> ModifyReplicationGroupShardConfiguration

-- | Create a value of <a>ModifyReplicationGroupShardConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nodeGroupsToRetain:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupsToRetain</a> -
--   If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRetain</tt> is a list of
--   <tt>NodeGroupId</tt>s to retain in the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups except
--   those listed by <tt>NodeGroupsToRetain</tt> from the cluster.
--   
--   
--   <a>$sel:reshardingConfiguration:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_reshardingConfiguration</a>
--   - Specifies the preferred availability zones for each node group in
--   the cluster. If the value of <tt>NodeGroupCount</tt> is greater than
--   the current number of node groups (shards), you can use this parameter
--   to specify the preferred availability zones of the cluster's shards.
--   If you omit this parameter ElastiCache selects availability zones for
--   you.
--   
--   You can specify this parameter only if the value of
--   <tt>NodeGroupCount</tt> is greater than the current number of node
--   groups (shards).
--   
--   
--   <a>$sel:nodeGroupsToRemove:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupsToRemove</a> -
--   If the value of <tt>NodeGroupCount</tt> is less than the current
--   number of node groups (shards), then either
--   <tt>NodeGroupsToRemove</tt> or <tt>NodeGroupsToRetain</tt> is
--   required. <tt>NodeGroupsToRemove</tt> is a list of
--   <tt>NodeGroupId</tt>s to remove from the cluster.
--   
--   ElastiCache for Redis will attempt to remove all node groups listed by
--   <tt>NodeGroupsToRemove</tt> from the cluster.
--   
--   
--   <a>$sel:replicationGroupId:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_replicationGroupId</a> -
--   The name of the Redis (cluster mode enabled) cluster (replication
--   group) on which the shards are to be configured.
--   
--   <a>$sel:nodeGroupCount:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_nodeGroupCount</a> - The
--   number of node groups (shards) that results from the modification of
--   the shard configuration.
--   
--   
--   <a>$sel:applyImmediately:ModifyReplicationGroupShardConfiguration'</a>,
--   <a>modifyReplicationGroupShardConfiguration_applyImmediately</a> -
--   Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is
--   <tt>true</tt>.
--   
--   Value: true
newModifyReplicationGroupShardConfiguration :: Text -> Int -> Bool -> ModifyReplicationGroupShardConfiguration

-- | <i>See:</i> <a>newModifyReplicationGroupShardConfigurationResponse</a>
--   smart constructor.
data ModifyReplicationGroupShardConfigurationResponse
ModifyReplicationGroupShardConfigurationResponse' :: Maybe ReplicationGroup -> Int -> ModifyReplicationGroupShardConfigurationResponse

-- | Create a value of
--   <a>ModifyReplicationGroupShardConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:replicationGroup:ModifyReplicationGroupShardConfigurationResponse'</a>,
--   <a>modifyReplicationGroupShardConfigurationResponse_replicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:ModifyReplicationGroupShardConfigurationResponse'</a>,
--   <a>modifyReplicationGroupShardConfigurationResponse_httpStatus</a> -
--   The response's http status code.
newModifyReplicationGroupShardConfigurationResponse :: Int -> ModifyReplicationGroupShardConfigurationResponse

-- | <i>See:</i> <a>newBatchApplyUpdateAction</a> smart constructor.
data BatchApplyUpdateAction
BatchApplyUpdateAction' :: Maybe [Text] -> Maybe [Text] -> Text -> BatchApplyUpdateAction

-- | Create a value of <a>BatchApplyUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:replicationGroupIds:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:serviceUpdateName:BatchApplyUpdateAction'</a>,
--   <a>batchApplyUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
newBatchApplyUpdateAction :: Text -> BatchApplyUpdateAction

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | <i>See:</i> <a>newDeleteUserGroup</a> smart constructor.
data DeleteUserGroup
DeleteUserGroup' :: Text -> DeleteUserGroup

-- | Create a value of <a>DeleteUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupId:DeleteUserGroup'</a>,
--   <a>deleteUserGroup_userGroupId</a> - The ID of the user group.
newDeleteUserGroup :: Text -> DeleteUserGroup

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | <i>See:</i> <a>newDescribeServiceUpdates</a> smart constructor.
data DescribeServiceUpdates
DescribeServiceUpdates' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe [ServiceUpdateStatus] -> DescribeServiceUpdates

-- | Create a value of <a>DescribeServiceUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateName:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:marker:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_maxRecords</a> - The maximum number of
--   records to include in the response
--   
--   <a>$sel:serviceUpdateStatus:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateStatus</a> - The status of the
--   service update
newDescribeServiceUpdates :: DescribeServiceUpdates

-- | <i>See:</i> <a>newDescribeServiceUpdatesResponse</a> smart
--   constructor.
data DescribeServiceUpdatesResponse
DescribeServiceUpdatesResponse' :: Maybe [ServiceUpdate] -> Maybe Text -> Int -> DescribeServiceUpdatesResponse

-- | Create a value of <a>DescribeServiceUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_serviceUpdates</a> - A list of
--   service updates
--   
--   <a>$sel:marker:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdatesResponse_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServiceUpdatesResponse :: Int -> DescribeServiceUpdatesResponse

-- | Represents the input of a <tt>DescribeSnapshotsMessage</tt> operation.
--   
--   <i>See:</i> <a>newDescribeSnapshots</a> smart constructor.
data DescribeSnapshots
DescribeSnapshots' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> DescribeSnapshots

-- | Create a value of <a>DescribeSnapshots</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:DescribeSnapshots'</a>,
--   <a>describeSnapshots_cacheClusterId</a> - A user-supplied cluster
--   identifier. If this parameter is specified, only snapshots associated
--   with that specific cluster are described.
--   
--   <a>$sel:marker:DescribeSnapshots'</a>, <a>describeSnapshots_marker</a>
--   - An optional marker returned from a prior request. Use this marker
--   for pagination of results from this operation. If this parameter is
--   specified, the response includes only records beyond the marker, up to
--   the value specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeSnapshots'</a>,
--   <a>describeSnapshots_maxRecords</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   <tt>MaxRecords</tt> value, a marker is included in the response so
--   that the remaining results can be retrieved.
--   
--   Default: 50
--   
--   Constraints: minimum 20; maximum 50.
--   
--   <a>$sel:snapshotName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotName</a> - A user-supplied name of the
--   snapshot. If this parameter is specified, only this snapshot are
--   described.
--   
--   <a>$sel:showNodeGroupConfig:DescribeSnapshots'</a>,
--   <a>describeSnapshots_showNodeGroupConfig</a> - A Boolean value which
--   if true, the node group (shard) configuration is included in the
--   snapshot description.
--   
--   <a>$sel:replicationGroupId:DescribeSnapshots'</a>,
--   <a>describeSnapshots_replicationGroupId</a> - A user-supplied
--   replication group identifier. If this parameter is specified, only
--   snapshots associated with that specific replication group are
--   described.
--   
--   <a>$sel:snapshotSource:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotSource</a> - If set to <tt>system</tt>,
--   the output shows snapshots that were automatically created by
--   ElastiCache. If set to <tt>user</tt> the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
newDescribeSnapshots :: DescribeSnapshots

-- | Represents the output of a <tt>DescribeSnapshots</tt> operation.
--   
--   <i>See:</i> <a>newDescribeSnapshotsResponse</a> smart constructor.
data DescribeSnapshotsResponse
DescribeSnapshotsResponse' :: Maybe [Snapshot] -> Maybe Text -> Int -> DescribeSnapshotsResponse

-- | Create a value of <a>DescribeSnapshotsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshots:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_snapshots</a> - A list of snapshots. Each
--   item in the list contains detailed information about one snapshot.
--   
--   <a>$sel:marker:DescribeSnapshots'</a>,
--   <a>describeSnapshotsResponse_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:httpStatus:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSnapshotsResponse :: Int -> DescribeSnapshotsResponse

-- | Represents the input of a <tt>DescribeReplicationGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReplicationGroups</a> smart constructor.
data DescribeReplicationGroups
DescribeReplicationGroups' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeReplicationGroups

-- | Create a value of <a>DescribeReplicationGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:replicationGroupId:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroups_replicationGroupId</a> - The identifier
--   for the replication group to be described. This parameter is not case
--   sensitive.
--   
--   If you do not specify this parameter, information about all
--   replication groups is returned.
newDescribeReplicationGroups :: DescribeReplicationGroups

-- | Represents the output of a <tt>DescribeReplicationGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReplicationGroupsResponse</a> smart
--   constructor.
data DescribeReplicationGroupsResponse
DescribeReplicationGroupsResponse' :: Maybe Text -> Maybe [ReplicationGroup] -> Int -> DescribeReplicationGroupsResponse

-- | Create a value of <a>DescribeReplicationGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReplicationGroups'</a>,
--   <a>describeReplicationGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:replicationGroups:DescribeReplicationGroupsResponse'</a>,
--   <a>describeReplicationGroupsResponse_replicationGroups</a> - A list of
--   replication groups. Each item in the list contains detailed
--   information about one replication group.
--   
--   <a>$sel:httpStatus:DescribeReplicationGroupsResponse'</a>,
--   <a>describeReplicationGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReplicationGroupsResponse :: Int -> DescribeReplicationGroupsResponse

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe (NonEmpty Text) -> Maybe Bool -> Maybe [Tag] -> Text -> Text -> Text -> Text -> CreateUser

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwords:CreateUser'</a>, <a>createUser_passwords</a> -
--   Passwords used for this user. You can create up to two passwords for
--   each user.
--   
--   <a>$sel:noPasswordRequired:CreateUser'</a>,
--   <a>createUser_noPasswordRequired</a> - Indicates a password is not
--   required for this user.
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - A list of tags
--   to be added to this resource. A tag is a key-value pair. A tag key
--   must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:userId:CreateUser'</a>, <a>createUser_userId</a> - The ID of
--   the user.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   username of the user.
--   
--   <a>$sel:engine:CreateUser'</a>, <a>createUser_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:accessString:CreateUser'</a>, <a>createUser_accessString</a> -
--   Access permissions string used for this user.
newCreateUser :: Text -> Text -> Text -> Text -> CreateUser

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Represents the input of a <tt>DeleteSnapshot</tt> operation.
--   
--   <i>See:</i> <a>newDeleteSnapshot</a> smart constructor.
data DeleteSnapshot
DeleteSnapshot' :: Text -> DeleteSnapshot

-- | Create a value of <a>DeleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotName:DeleteSnapshot'</a>,
--   <a>deleteSnapshot_snapshotName</a> - The name of the snapshot to be
--   deleted.
newDeleteSnapshot :: Text -> DeleteSnapshot

-- | <i>See:</i> <a>newDeleteSnapshotResponse</a> smart constructor.
data DeleteSnapshotResponse
DeleteSnapshotResponse' :: Maybe Snapshot -> Int -> DeleteSnapshotResponse

-- | Create a value of <a>DeleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSnapshotResponse :: Int -> DeleteSnapshotResponse

-- | Represents the input of a <tt>DescribeReservedCacheNodesOfferings</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesOfferings</a> smart
--   constructor.
data DescribeReservedCacheNodesOfferings
DescribeReservedCacheNodesOfferings' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeReservedCacheNodesOfferings

-- | Create a value of <a>DescribeReservedCacheNodesOfferings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_cacheNodeType</a> - The cache
--   node type filter value. Use this parameter to show only the available
--   offerings matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_productDescription</a> - The
--   product description filter value. Use this parameter to show only the
--   available offerings matching the specified product description.
--   
--   <a>$sel:marker:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_maxRecords</a> - The maximum
--   number of records to include in the response. If more records exist
--   than the specified <tt>MaxRecords</tt> value, a marker is included in
--   the response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:offeringType:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_offeringType</a> - The offering
--   type filter value. Use this parameter to show only the available
--   offerings matching the specified offering type.
--   
--   Valid Values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
--   
--   <a>$sel:duration:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_duration</a> - Duration filter
--   value, specified in years or seconds. Use this parameter to show only
--   reservations for a given duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
--   
--   
--   <a>$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferings_reservedCacheNodesOfferingId</a>
--   - The offering identifier filter value. Use this parameter to show
--   only the available offering that matches the specified reservation
--   identifier.
--   
--   Example: <tt>438012d3-4052-4cc7-b2e3-8d3372e0e706</tt>
newDescribeReservedCacheNodesOfferings :: DescribeReservedCacheNodesOfferings

-- | Represents the output of a
--   <tt>DescribeReservedCacheNodesOfferings</tt> operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesOfferingsResponse</a>
--   smart constructor.
data DescribeReservedCacheNodesOfferingsResponse
DescribeReservedCacheNodesOfferingsResponse' :: Maybe Text -> Maybe [ReservedCacheNodesOffering] -> Int -> DescribeReservedCacheNodesOfferingsResponse

-- | Create a value of <a>DescribeReservedCacheNodesOfferingsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReservedCacheNodesOfferings'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_marker</a> - Provides
--   an identifier to allow retrieval of paginated results.
--   
--   
--   <a>$sel:reservedCacheNodesOfferings:DescribeReservedCacheNodesOfferingsResponse'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_reservedCacheNodesOfferings</a>
--   - A list of reserved cache node offerings. Each element in the list
--   contains detailed information about one offering.
--   
--   <a>$sel:httpStatus:DescribeReservedCacheNodesOfferingsResponse'</a>,
--   <a>describeReservedCacheNodesOfferingsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeReservedCacheNodesOfferingsResponse :: Int -> DescribeReservedCacheNodesOfferingsResponse

-- | Represents the input of a <tt>ModifyCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newModifyCacheSubnetGroup</a> smart constructor.
data ModifyCacheSubnetGroup
ModifyCacheSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> ModifyCacheSubnetGroup

-- | Create a value of <a>ModifyCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_subnetIds</a> - The EC2 subnet IDs for the
--   cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupDescription:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_cacheSubnetGroupDescription</a> - A
--   description of the cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupName:ModifyCacheSubnetGroup'</a>,
--   <a>modifyCacheSubnetGroup_cacheSubnetGroupName</a> - The name for the
--   cache subnet group. This value is stored as a lowercase string.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
--   
--   Example: <tt>mysubnetgroup</tt>
newModifyCacheSubnetGroup :: Text -> ModifyCacheSubnetGroup

-- | <i>See:</i> <a>newModifyCacheSubnetGroupResponse</a> smart
--   constructor.
data ModifyCacheSubnetGroupResponse
ModifyCacheSubnetGroupResponse' :: Maybe CacheSubnetGroup -> Int -> ModifyCacheSubnetGroupResponse

-- | Create a value of <a>ModifyCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroup:ModifyCacheSubnetGroupResponse'</a>,
--   <a>modifyCacheSubnetGroupResponse_cacheSubnetGroup</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:ModifyCacheSubnetGroupResponse'</a>,
--   <a>modifyCacheSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newModifyCacheSubnetGroupResponse :: Int -> ModifyCacheSubnetGroupResponse

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> DeleteUser

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userId:DeleteUser'</a>, <a>deleteUser_userId</a> - The ID of
--   the user.
newDeleteUser :: Text -> DeleteUser

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Represents the input of a <tt>CreateSnapshot</tt> operation.
--   
--   <i>See:</i> <a>newCreateSnapshot</a> smart constructor.
data CreateSnapshot
CreateSnapshot' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> CreateSnapshot

-- | Create a value of <a>CreateSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:CreateSnapshot'</a>,
--   <a>createSnapshot_cacheClusterId</a> - The identifier of an existing
--   cluster. The snapshot is created from this cluster.
--   
--   <a>$sel:kmsKeyId:CreateSnapshot'</a>, <a>createSnapshot_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:replicationGroupId:CreateSnapshot'</a>,
--   <a>createSnapshot_replicationGroupId</a> - The identifier of an
--   existing replication group. The snapshot is created from this
--   replication group.
--   
--   <a>$sel:tags:CreateSnapshot'</a>, <a>createSnapshot_tags</a> - A list
--   of tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:snapshotName:CreateSnapshot'</a>,
--   <a>createSnapshot_snapshotName</a> - A name for the snapshot being
--   created.
newCreateSnapshot :: Text -> CreateSnapshot

-- | <i>See:</i> <a>newCreateSnapshotResponse</a> smart constructor.
data CreateSnapshotResponse
CreateSnapshotResponse' :: Maybe Snapshot -> Int -> CreateSnapshotResponse

-- | Create a value of <a>CreateSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_snapshot</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCreateSnapshotResponse :: Int -> CreateSnapshotResponse

-- | <i>See:</i> <a>newModifyGlobalReplicationGroup</a> smart constructor.
data ModifyGlobalReplicationGroup
ModifyGlobalReplicationGroup' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Bool -> ModifyGlobalReplicationGroup

-- | Create a value of <a>ModifyGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticFailoverEnabled:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_automaticFailoverEnabled</a> -
--   Determines whether a read replica is automatically promoted to
--   read/write primary if the existing primary encounters a failure.
--   
--   <a>$sel:engineVersion:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_engineVersion</a> - The upgraded
--   version of the cache engine to be run on the clusters in the Global
--   datastore.
--   
--   <a>$sel:cacheNodeType:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_cacheNodeType</a> - A valid cache node
--   type that you want to scale this Global datastore to.
--   
--   <a>$sel:cacheParameterGroupName:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_cacheParameterGroupName</a> - The name
--   of the cache parameter group to use with the Global datastore. It must
--   be compatible with the major engine version used by the Global
--   datastore.
--   
--   
--   <a>$sel:globalReplicationGroupDescription:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_globalReplicationGroupDescription</a>
--   - A description of the Global datastore
--   
--   <a>$sel:globalReplicationGroupId:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   <a>$sel:applyImmediately:ModifyGlobalReplicationGroup'</a>,
--   <a>modifyGlobalReplicationGroup_applyImmediately</a> - This parameter
--   causes the modifications in this request and any pending modifications
--   to be applied, asynchronously and as soon as possible. Modifications
--   to Global Replication Groups cannot be requested to be applied in
--   PreferredMaintenceWindow.
newModifyGlobalReplicationGroup :: Text -> Bool -> ModifyGlobalReplicationGroup

-- | <i>See:</i> <a>newModifyGlobalReplicationGroupResponse</a> smart
--   constructor.
data ModifyGlobalReplicationGroupResponse
ModifyGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> ModifyGlobalReplicationGroupResponse

-- | Create a value of <a>ModifyGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:ModifyGlobalReplicationGroupResponse'</a>,
--   <a>modifyGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:ModifyGlobalReplicationGroupResponse'</a>,
--   <a>modifyGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newModifyGlobalReplicationGroupResponse :: Int -> ModifyGlobalReplicationGroupResponse

-- | <i>See:</i> <a>newDescribeUserGroups</a> smart constructor.
data DescribeUserGroups
DescribeUserGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeUserGroups

-- | Create a value of <a>DescribeUserGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupId:DescribeUserGroups'</a>,
--   <a>describeUserGroups_userGroupId</a> - The ID of the user group.
--   
--   <a>$sel:marker:DescribeUserGroups'</a>,
--   <a>describeUserGroups_marker</a> - An optional marker returned from a
--   prior request. Use this marker for pagination of results from this
--   operation. If this parameter is specified, the response includes only
--   records beyond the marker, up to the value specified by MaxRecords.
--   &gt;
--   
--   <a>$sel:maxRecords:DescribeUserGroups'</a>,
--   <a>describeUserGroups_maxRecords</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxRecords value, a marker is included in the response so that the
--   remaining results can be retrieved.
newDescribeUserGroups :: DescribeUserGroups

-- | <i>See:</i> <a>newDescribeUserGroupsResponse</a> smart constructor.
data DescribeUserGroupsResponse
DescribeUserGroupsResponse' :: Maybe [UserGroup] -> Maybe Text -> Int -> DescribeUserGroupsResponse

-- | Create a value of <a>DescribeUserGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroups:DescribeUserGroupsResponse'</a>,
--   <a>describeUserGroupsResponse_userGroups</a> - Returns a list of user
--   groups.
--   
--   <a>$sel:marker:DescribeUserGroups'</a>,
--   <a>describeUserGroupsResponse_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   MaxRecords. &gt;
--   
--   <a>$sel:httpStatus:DescribeUserGroupsResponse'</a>,
--   <a>describeUserGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserGroupsResponse :: Int -> DescribeUserGroupsResponse

-- | Represents the input of a <tt>DeleteCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteCacheParameterGroup</a> smart constructor.
data DeleteCacheParameterGroup
DeleteCacheParameterGroup' :: Text -> DeleteCacheParameterGroup

-- | Create a value of <a>DeleteCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:DeleteCacheParameterGroup'</a>,
--   <a>deleteCacheParameterGroup_cacheParameterGroupName</a> - The name of
--   the cache parameter group to delete.
--   
--   The specified cache security group must not be associated with any
--   clusters.
newDeleteCacheParameterGroup :: Text -> DeleteCacheParameterGroup

-- | <i>See:</i> <a>newDeleteCacheParameterGroupResponse</a> smart
--   constructor.
data DeleteCacheParameterGroupResponse
DeleteCacheParameterGroupResponse' :: DeleteCacheParameterGroupResponse

-- | Create a value of <a>DeleteCacheParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheParameterGroupResponse :: DeleteCacheParameterGroupResponse

-- | Represents the input of a <tt>DescribeCacheSecurityGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSecurityGroups</a> smart constructor.
data DescribeCacheSecurityGroups
DescribeCacheSecurityGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheSecurityGroups

-- | Create a value of <a>DescribeCacheSecurityGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_cacheSecurityGroupName</a> - The name
--   of the cache security group to return details for.
--   
--   <a>$sel:marker:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroups_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheSecurityGroups :: DescribeCacheSecurityGroups

-- | Represents the output of a <tt>DescribeCacheSecurityGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheSecurityGroupsResponse</a> smart
--   constructor.
data DescribeCacheSecurityGroupsResponse
DescribeCacheSecurityGroupsResponse' :: Maybe [CacheSecurityGroup] -> Maybe Text -> Int -> DescribeCacheSecurityGroupsResponse

-- | Create a value of <a>DescribeCacheSecurityGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroups:DescribeCacheSecurityGroupsResponse'</a>,
--   <a>describeCacheSecurityGroupsResponse_cacheSecurityGroups</a> - A
--   list of cache security groups. Each element in the list contains
--   detailed information about one group.
--   
--   <a>$sel:marker:DescribeCacheSecurityGroups'</a>,
--   <a>describeCacheSecurityGroupsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheSecurityGroupsResponse'</a>,
--   <a>describeCacheSecurityGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheSecurityGroupsResponse :: Int -> DescribeCacheSecurityGroupsResponse

-- | <i>See:</i> <a>newBatchStopUpdateAction</a> smart constructor.
data BatchStopUpdateAction
BatchStopUpdateAction' :: Maybe [Text] -> Maybe [Text] -> Text -> BatchStopUpdateAction

-- | Create a value of <a>BatchStopUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterIds:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_cacheClusterIds</a> - The cache cluster IDs
--   
--   <a>$sel:replicationGroupIds:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_replicationGroupIds</a> - The replication
--   group IDs
--   
--   <a>$sel:serviceUpdateName:BatchStopUpdateAction'</a>,
--   <a>batchStopUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
newBatchStopUpdateAction :: Text -> BatchStopUpdateAction

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | Represents the input of a <tt>ModifyCacheCluster</tt> operation.
--   
--   <i>See:</i> <a>newModifyCacheCluster</a> smart constructor.
data ModifyCacheCluster
ModifyCacheCluster' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [LogDeliveryConfigurationRequest] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe AZMode -> Maybe Bool -> Maybe AuthTokenUpdateStrategyType -> Maybe Text -> Maybe Int -> Maybe [Text] -> Text -> ModifyCacheCluster

-- | Create a value of <a>ModifyCacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_engineVersion</a> - The upgraded version of the
--   cache engine to be run on the cache nodes.
--   
--   <b>Important:</b> You can upgrade to a newer engine version (see
--   <a>Selecting a Cache Engine and Version</a>), but you cannot downgrade
--   to an earlier engine version. If you want to use an earlier engine
--   version, you must delete the existing cluster and create it anew with
--   the earlier engine version.
--   
--   <a>$sel:cacheNodeType:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheNodeType</a> - A valid cache node type that
--   you want to scale this cluster up to.
--   
--   <a>$sel:securityGroupIds:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_securityGroupIds</a> - Specifies the VPC
--   Security Groups associated with the cluster.
--   
--   This parameter can be used only with clusters that are created in an
--   Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:autoMinorVersionUpgrade:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:cacheParameterGroupName:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheParameterGroupName</a> - The name of the
--   cache parameter group to apply to this cluster. This change is
--   asynchronously applied as soon as possible for parameters when the
--   <tt>ApplyImmediately</tt> parameter is specified as <tt>true</tt> for
--   this request.
--   
--   <a>$sel:snapshotWindow:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_snapshotWindow</a> - The daily time range (in
--   UTC) during which ElastiCache begins taking a daily snapshot of your
--   cluster.
--   
--   <a>$sel:newAvailabilityZones':ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_newAvailabilityZones</a> - This option is only
--   supported on Memcached clusters.
--   
--   The list of Availability Zones where the new Memcached cache nodes are
--   created.
--   
--   This parameter is only valid when <tt>NumCacheNodes</tt> in the
--   request is greater than the sum of the number of active cache nodes
--   and the number of cache nodes pending creation (which may be zero).
--   The number of Availability Zones supplied in this list must match the
--   cache nodes being added in this request.
--   
--   Scenarios:
--   
--   <ul>
--   <li><b>Scenario 1:</b> You have 3 active nodes and wish to add 2
--   nodes. Specify <tt>NumCacheNodes=5</tt> (3 + 2) and optionally specify
--   two Availability Zones for the two new nodes.</li>
--   <li><b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending
--   creation (from the scenario 1 call) and want to add 1 more node.
--   Specify <tt>NumCacheNodes=6</tt> ((3 + 2) + 1) and optionally specify
--   an Availability Zone for the new node.</li>
--   <li><b>Scenario 3:</b> You want to cancel all pending operations.
--   Specify <tt>NumCacheNodes=3</tt> to cancel all pending
--   operations.</li>
--   </ul>
--   
--   The Availability Zone placement of nodes pending creation cannot be
--   modified. If you wish to cancel any nodes pending creation, add 0
--   nodes by setting <tt>NumCacheNodes</tt> to the number of current
--   nodes.
--   
--   If <tt>cross-az</tt> is specified, existing Memcached nodes remain in
--   their current Availability Zone. Only newly created nodes can be
--   located in different Availability Zones. For guidance on how to move
--   existing Memcached nodes to different Availability Zones, see the
--   __Availability Zone Considerations__ section of <a>Cache Node
--   Considerations for Memcached</a>.
--   
--   <b>Impact of new add/remove requests upon pending requests</b>
--   
--   <ul>
--   <li>Scenario-1<ul><li>Pending Action: Delete</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-2<ul><li>Pending Action: Delete</li><li>New Request:
--   Create</li><li>Result: The new create, pending or immediate, replaces
--   the pending delete.</li></ul></li>
--   <li>Scenario-3<ul><li>Pending Action: Create</li><li>New Request:
--   Delete</li><li>Result: The new delete, pending or immediate, replaces
--   the pending create.</li></ul></li>
--   <li>Scenario-4<ul><li>Pending Action: Create</li><li>New Request:
--   Create</li><li>Result: The new create is added to the pending
--   create.<b>Important:</b> If the new create request is __Apply
--   Immediately - Yes__, all creates are performed immediately. If the new
--   create request is <b>Apply Immediately - No</b>, all creates are
--   pending.</li></ul></li>
--   </ul>
--   
--   <a>$sel:logDeliveryConfigurations:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_logDeliveryConfigurations</a> - Specifies the
--   destination, format and type of the logs.
--   
--   <a>$sel:authToken:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_authToken</a> - Reserved parameter. The password
--   used to access a password protected server. This parameter must be
--   specified with the <tt>auth-token-update</tt> parameter. Password
--   constraints:
--   
--   <ul>
--   <li>Must be only printable ASCII characters</li>
--   <li>Must be at least 16 characters and no more than 128 characters in
--   length</li>
--   <li>Cannot contain any of the following characters: '/', '"', or '@',
--   '%'</li>
--   </ul>
--   
--   For more information, see AUTH password at <a>AUTH</a>.
--   
--   <a>$sel:preferredMaintenanceWindow:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_preferredMaintenanceWindow</a> - Specifies the
--   weekly time range during which maintenance on the cluster is
--   performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:cacheNodeIdsToRemove:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheNodeIdsToRemove</a> - A list of cache node
--   IDs to be removed. A node ID is a numeric identifier (0001, 0002,
--   etc.). This parameter is only valid when <tt>NumCacheNodes</tt> is
--   less than the existing number of cache nodes. The number of cache node
--   IDs supplied in this parameter must match the difference between the
--   existing number of cache nodes in the cluster or pending cache nodes,
--   whichever is greater, and the value of <tt>NumCacheNodes</tt> in the
--   request.
--   
--   For example: If you have 3 active cache nodes, 7 pending cache nodes,
--   and the number of cache nodes in this <tt>ModifyCacheCluster</tt> call
--   is 5, you must list 2 (7 - 5) cache node IDs to remove.
--   
--   <a>$sel:snapshotRetentionLimit:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic cluster snapshots before
--   deleting them. For example, if you set <tt>SnapshotRetentionLimit</tt>
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
--   
--   <a>$sel:notificationTopicStatus:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_notificationTopicStatus</a> - The status of the
--   Amazon SNS notification topic. Notifications are sent only if the
--   status is <tt>active</tt>.
--   
--   Valid values: <tt>active</tt> | <tt>inactive</tt>
--   
--   <a>$sel:aZMode:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_aZMode</a> - Specifies whether the new nodes in
--   this Memcached cluster are all created in a single Availability Zone
--   or created across multiple Availability Zones.
--   
--   Valid values: <tt>single-az</tt> | <tt>cross-az</tt>.
--   
--   This option is only supported for Memcached clusters.
--   
--   You cannot specify <tt>single-az</tt> if the Memcached cluster already
--   has cache nodes in different Availability Zones. If <tt>cross-az</tt>
--   is specified, existing Memcached nodes remain in their current
--   Availability Zone.
--   
--   Only newly created nodes are located in different Availability Zones.
--   
--   <a>$sel:applyImmediately:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_applyImmediately</a> - If <tt>true</tt>, this
--   parameter causes the modifications in this request and any pending
--   modifications to be applied, asynchronously and as soon as possible,
--   regardless of the <tt>PreferredMaintenanceWindow</tt> setting for the
--   cluster.
--   
--   If <tt>false</tt>, changes to the cluster are applied on the next
--   maintenance reboot, or the next failure reboot, whichever occurs
--   first.
--   
--   If you perform a <tt>ModifyCacheCluster</tt> before a pending
--   modification is applied, the pending modification is replaced by the
--   newer modification.
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:authTokenUpdateStrategy:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_authTokenUpdateStrategy</a> - Specifies the
--   strategy to use to update the AUTH token. This parameter must be
--   specified with the <tt>auth-token</tt> parameter. Possible values:
--   
--   <ul>
--   <li>Rotate</li>
--   <li>Set</li>
--   </ul>
--   
--   For more information, see <a>Authenticating Users with Redis AUTH</a>
--   
--   <a>$sel:notificationTopicArn:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_notificationTopicArn</a> - The Amazon Resource
--   Name (ARN) of the Amazon SNS topic to which notifications are sent.
--   
--   The Amazon SNS topic owner must be same as the cluster owner.
--   
--   <a>$sel:numCacheNodes:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_numCacheNodes</a> - The number of cache nodes
--   that the cluster should have. If the value for <tt>NumCacheNodes</tt>
--   is greater than the sum of the number of current cache nodes and the
--   number of cache nodes pending creation (which may be zero), more nodes
--   are added. If the value is less than the number of existing cache
--   nodes, nodes are removed. If the value is equal to the number of
--   current cache nodes, any pending add or remove requests are canceled.
--   
--   If you are removing cache nodes, you must use the
--   <tt>CacheNodeIdsToRemove</tt> parameter to provide the IDs of the
--   specific cache nodes to remove.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   Adding or removing Memcached cache nodes can be applied immediately or
--   as a pending operation (see <tt>ApplyImmediately</tt>).
--   
--   A pending operation to modify the number of cache nodes in a cluster
--   during its maintenance window, whether by adding or removing nodes in
--   accordance with the scale out architecture, is not queued. The
--   customer's latest request to add or remove nodes to the cluster
--   overrides any previous pending operations to modify the number of
--   cache nodes in the cluster. For example, a request to remove 2 nodes
--   would override a previous pending operation to remove 3 nodes.
--   Similarly, a request to add 2 nodes would override a previous pending
--   operation to remove 3 nodes and vice versa. As Memcached cache nodes
--   may now be provisioned in different Availability Zones with flexible
--   cache node placement, a request to add nodes does not automatically
--   override a previous pending operation to add nodes. The customer can
--   modify the previous pending operation to add more nodes or explicitly
--   cancel the pending request and retry the new request. To cancel
--   pending operations to modify the number of cache nodes in a cluster,
--   use the <tt>ModifyCacheCluster</tt> request and set
--   <tt>NumCacheNodes</tt> equal to the number of cache nodes currently in
--   the cluster.
--   
--   <a>$sel:cacheSecurityGroupNames:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheSecurityGroupNames</a> - A list of cache
--   security group names to authorize on this cluster. This change is
--   asynchronously applied as soon as possible.
--   
--   You can use this parameter only with clusters that are created outside
--   of an Amazon Virtual Private Cloud (Amazon VPC).
--   
--   Constraints: Must contain no more than 255 alphanumeric characters.
--   Must not be "Default".
--   
--   <a>$sel:cacheClusterId:ModifyCacheCluster'</a>,
--   <a>modifyCacheCluster_cacheClusterId</a> - The cluster identifier.
--   This value is stored as a lowercase string.
newModifyCacheCluster :: Text -> ModifyCacheCluster

-- | <i>See:</i> <a>newModifyCacheClusterResponse</a> smart constructor.
data ModifyCacheClusterResponse
ModifyCacheClusterResponse' :: Maybe CacheCluster -> Int -> ModifyCacheClusterResponse

-- | Create a value of <a>ModifyCacheClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheCluster:ModifyCacheClusterResponse'</a>,
--   <a>modifyCacheClusterResponse_cacheCluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ModifyCacheClusterResponse'</a>,
--   <a>modifyCacheClusterResponse_httpStatus</a> - The response's http
--   status code.
newModifyCacheClusterResponse :: Int -> ModifyCacheClusterResponse

-- | Represents the input of a <tt>DescribeCacheEngineVersions</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeCacheEngineVersions</a> smart constructor.
data DescribeCacheEngineVersions
DescribeCacheEngineVersions' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeCacheEngineVersions

-- | Create a value of <a>DescribeCacheEngineVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_engineVersion</a> - The cache engine
--   version to return.
--   
--   Example: <tt>1.4.14</tt>
--   
--   <a>$sel:cacheParameterGroupFamily:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_cacheParameterGroupFamily</a> - The
--   name of a specific cache parameter group family to return details for.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   Constraints:
--   
--   <ul>
--   <li>Must be 1 to 255 alphanumeric characters</li>
--   <li>First character must be a letter</li>
--   <li>Cannot end with a hyphen or contain two consecutive hyphens</li>
--   </ul>
--   
--   <a>$sel:defaultOnly:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_defaultOnly</a> - If <tt>true</tt>,
--   specifies that only the default version of the specified engine or
--   engine and major version combination is to be returned.
--   
--   <a>$sel:engine:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_engine</a> - The cache engine to
--   return. Valid values: <tt>memcached</tt> | <tt>redis</tt>
--   
--   <a>$sel:marker:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_marker</a> - An optional marker
--   returned from a prior request. Use this marker for pagination of
--   results from this operation. If this parameter is specified, the
--   response includes only records beyond the marker, up to the value
--   specified by <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersions_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
newDescribeCacheEngineVersions :: DescribeCacheEngineVersions

-- | Represents the output of a DescribeCacheEngineVersions operation.
--   
--   <i>See:</i> <a>newDescribeCacheEngineVersionsResponse</a> smart
--   constructor.
data DescribeCacheEngineVersionsResponse
DescribeCacheEngineVersionsResponse' :: Maybe [CacheEngineVersion] -> Maybe Text -> Int -> DescribeCacheEngineVersionsResponse

-- | Create a value of <a>DescribeCacheEngineVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheEngineVersions:DescribeCacheEngineVersionsResponse'</a>,
--   <a>describeCacheEngineVersionsResponse_cacheEngineVersions</a> - A
--   list of cache engine version details. Each element in the list
--   contains detailed information about one cache engine version.
--   
--   <a>$sel:marker:DescribeCacheEngineVersions'</a>,
--   <a>describeCacheEngineVersionsResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeCacheEngineVersionsResponse'</a>,
--   <a>describeCacheEngineVersionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCacheEngineVersionsResponse :: Int -> DescribeCacheEngineVersionsResponse

-- | <i>See:</i> <a>newModifyUserGroup</a> smart constructor.
data ModifyUserGroup
ModifyUserGroup' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> ModifyUserGroup

-- | Create a value of <a>ModifyUserGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIdsToAdd:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userIdsToAdd</a> - The list of user IDs to add to
--   the user group.
--   
--   <a>$sel:userIdsToRemove:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userIdsToRemove</a> - The list of user IDs to
--   remove from the user group.
--   
--   <a>$sel:userGroupId:ModifyUserGroup'</a>,
--   <a>modifyUserGroup_userGroupId</a> - The ID of the user group.
newModifyUserGroup :: Text -> ModifyUserGroup

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Represents the input of a <tt>CreateCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newCreateCacheParameterGroup</a> smart constructor.
data CreateCacheParameterGroup
CreateCacheParameterGroup' :: Maybe [Tag] -> Text -> Text -> Text -> CreateCacheParameterGroup

-- | Create a value of <a>CreateCacheParameterGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_tags</a> - A list of tags to be added to
--   this resource. A tag is a key-value pair. A tag key must be
--   accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:cacheParameterGroupName:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_cacheParameterGroupName</a> - A
--   user-specified name for the cache parameter group.
--   
--   <a>$sel:cacheParameterGroupFamily:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_cacheParameterGroupFamily</a> - The name
--   of the cache parameter group family that the cache parameter group can
--   be used with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:description:CreateCacheParameterGroup'</a>,
--   <a>createCacheParameterGroup_description</a> - A user-specified
--   description for the cache parameter group.
newCreateCacheParameterGroup :: Text -> Text -> Text -> CreateCacheParameterGroup

-- | <i>See:</i> <a>newCreateCacheParameterGroupResponse</a> smart
--   constructor.
data CreateCacheParameterGroupResponse
CreateCacheParameterGroupResponse' :: Maybe CacheParameterGroup -> Int -> CreateCacheParameterGroupResponse

-- | Create a value of <a>CreateCacheParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroup:CreateCacheParameterGroupResponse'</a>,
--   <a>createCacheParameterGroupResponse_cacheParameterGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateCacheParameterGroupResponse'</a>,
--   <a>createCacheParameterGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateCacheParameterGroupResponse :: Int -> CreateCacheParameterGroupResponse

-- | Represents the input of a <tt>DescribeReservedCacheNodes</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodes</a> smart constructor.
data DescribeReservedCacheNodes
DescribeReservedCacheNodes' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> DescribeReservedCacheNodes

-- | Create a value of <a>DescribeReservedCacheNodes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_cacheNodeType</a> - The cache node type
--   filter value. Use this parameter to show only those reservations
--   matching the specified cache node type.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_productDescription</a> - The product
--   description filter value. Use this parameter to show only those
--   reservations matching the specified product description.
--   
--   <a>$sel:marker:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_marker</a> - An optional marker returned
--   from a prior request. Use this marker for pagination of results from
--   this operation. If this parameter is specified, the response includes
--   only records beyond the marker, up to the value specified by
--   <tt>MaxRecords</tt>.
--   
--   <a>$sel:maxRecords:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_maxRecords</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified <tt>MaxRecords</tt> value, a marker is included in the
--   response so that the remaining results can be retrieved.
--   
--   Default: 100
--   
--   Constraints: minimum 20; maximum 100.
--   
--   <a>$sel:reservedCacheNodeId:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_reservedCacheNodeId</a> - The reserved
--   cache node identifier filter value. Use this parameter to show only
--   the reservation that matches the specified reservation ID.
--   
--   <a>$sel:offeringType:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_offeringType</a> - The offering type
--   filter value. Use this parameter to show only the available offerings
--   matching the specified offering type.
--   
--   Valid values: <tt>"Light Utilization"|"Medium Utilization"|"Heavy
--   Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"</tt>
--   
--   <a>$sel:duration:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_duration</a> - The duration filter
--   value, specified in years or seconds. Use this parameter to show only
--   reservations for this duration.
--   
--   Valid Values: <tt>1 | 3 | 31536000 | 94608000</tt>
--   
--   <a>$sel:reservedCacheNodesOfferingId:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodes_reservedCacheNodesOfferingId</a> - The
--   offering identifier filter value. Use this parameter to show only
--   purchased reservations matching the specified offering identifier.
newDescribeReservedCacheNodes :: DescribeReservedCacheNodes

-- | Represents the output of a <tt>DescribeReservedCacheNodes</tt>
--   operation.
--   
--   <i>See:</i> <a>newDescribeReservedCacheNodesResponse</a> smart
--   constructor.
data DescribeReservedCacheNodesResponse
DescribeReservedCacheNodesResponse' :: Maybe Text -> Maybe [ReservedCacheNode] -> Int -> DescribeReservedCacheNodesResponse

-- | Create a value of <a>DescribeReservedCacheNodesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:DescribeReservedCacheNodes'</a>,
--   <a>describeReservedCacheNodesResponse_marker</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:reservedCacheNodes:DescribeReservedCacheNodesResponse'</a>,
--   <a>describeReservedCacheNodesResponse_reservedCacheNodes</a> - A list
--   of reserved cache nodes. Each element in the list contains detailed
--   information about one node.
--   
--   <a>$sel:httpStatus:DescribeReservedCacheNodesResponse'</a>,
--   <a>describeReservedCacheNodesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeReservedCacheNodesResponse :: Int -> DescribeReservedCacheNodesResponse

-- | <i>See:</i> <a>newDeleteGlobalReplicationGroup</a> smart constructor.
data DeleteGlobalReplicationGroup
DeleteGlobalReplicationGroup' :: Text -> Bool -> DeleteGlobalReplicationGroup

-- | Create a value of <a>DeleteGlobalReplicationGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:globalReplicationGroupId:DeleteGlobalReplicationGroup'</a>,
--   <a>deleteGlobalReplicationGroup_globalReplicationGroupId</a> - The
--   name of the Global datastore
--   
--   
--   <a>$sel:retainPrimaryReplicationGroup:DeleteGlobalReplicationGroup'</a>,
--   <a>deleteGlobalReplicationGroup_retainPrimaryReplicationGroup</a> -
--   The primary replication group is retained as a standalone replication
--   group.
newDeleteGlobalReplicationGroup :: Text -> Bool -> DeleteGlobalReplicationGroup

-- | <i>See:</i> <a>newDeleteGlobalReplicationGroupResponse</a> smart
--   constructor.
data DeleteGlobalReplicationGroupResponse
DeleteGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DeleteGlobalReplicationGroupResponse

-- | Create a value of <a>DeleteGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DeleteGlobalReplicationGroupResponse'</a>,
--   <a>deleteGlobalReplicationGroupResponse_globalReplicationGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteGlobalReplicationGroupResponse'</a>,
--   <a>deleteGlobalReplicationGroupResponse_httpStatus</a> - The
--   response's http status code.
newDeleteGlobalReplicationGroupResponse :: Int -> DeleteGlobalReplicationGroupResponse

-- | <i>See:</i> <a>newDecreaseNodeGroupsInGlobalReplicationGroup</a> smart
--   constructor.
data DecreaseNodeGroupsInGlobalReplicationGroup
DecreaseNodeGroupsInGlobalReplicationGroup' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> Bool -> DecreaseNodeGroupsInGlobalReplicationGroup

-- | Create a value of <a>DecreaseNodeGroupsInGlobalReplicationGroup</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalNodeGroupsToRemove:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRemove</a>
--   - If the value of NodeGroupCount is less than the current number of
--   node groups (shards), then either NodeGroupsToRemove or
--   NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of
--   NodeGroupIds to remove from the cluster. ElastiCache for Redis will
--   attempt to remove all node groups listed by GlobalNodeGroupsToRemove
--   from the cluster.
--   
--   
--   <a>$sel:globalNodeGroupsToRetain:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalNodeGroupsToRetain</a>
--   - If the value of NodeGroupCount is less than the current number of
--   node groups (shards), then either NodeGroupsToRemove or
--   NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of
--   NodeGroupIds to retain from the cluster. ElastiCache for Redis will
--   attempt to retain all node groups listed by GlobalNodeGroupsToRetain
--   from the cluster.
--   
--   
--   <a>$sel:globalReplicationGroupId:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_globalReplicationGroupId</a>
--   - The name of the Global datastore
--   
--   
--   <a>$sel:nodeGroupCount:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_nodeGroupCount</a> - The
--   number of node groups (shards) that results from the modification of
--   the shard configuration
--   
--   
--   <a>$sel:applyImmediately:DecreaseNodeGroupsInGlobalReplicationGroup'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroup_applyImmediately</a> -
--   Indicates that the shard reconfiguration process begins immediately.
--   At present, the only permitted value for this parameter is true.
newDecreaseNodeGroupsInGlobalReplicationGroup :: Text -> Int -> Bool -> DecreaseNodeGroupsInGlobalReplicationGroup

-- | <i>See:</i>
--   <a>newDecreaseNodeGroupsInGlobalReplicationGroupResponse</a> smart
--   constructor.
data DecreaseNodeGroupsInGlobalReplicationGroupResponse
DecreaseNodeGroupsInGlobalReplicationGroupResponse' :: Maybe GlobalReplicationGroup -> Int -> DecreaseNodeGroupsInGlobalReplicationGroupResponse

-- | Create a value of
--   <a>DecreaseNodeGroupsInGlobalReplicationGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroup:DecreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroupResponse_globalReplicationGroup</a>
--   - Undocumented member.
--   
--   
--   <a>$sel:httpStatus:DecreaseNodeGroupsInGlobalReplicationGroupResponse'</a>,
--   <a>decreaseNodeGroupsInGlobalReplicationGroupResponse_httpStatus</a> -
--   The response's http status code.
newDecreaseNodeGroupsInGlobalReplicationGroupResponse :: Int -> DecreaseNodeGroupsInGlobalReplicationGroupResponse

-- | <i>See:</i> <a>newModifyUser</a> smart constructor.
data ModifyUser
ModifyUser' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> Text -> ModifyUser

-- | Create a value of <a>ModifyUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appendAccessString:ModifyUser'</a>,
--   <a>modifyUser_appendAccessString</a> - Adds additional user
--   permissions to the access string.
--   
--   <a>$sel:accessString:ModifyUser'</a>, <a>modifyUser_accessString</a> -
--   Access permissions string used for this user.
--   
--   <a>$sel:passwords:ModifyUser'</a>, <a>modifyUser_passwords</a> - The
--   passwords belonging to the user. You are allowed up to two.
--   
--   <a>$sel:noPasswordRequired:ModifyUser'</a>,
--   <a>modifyUser_noPasswordRequired</a> - Indicates no password is
--   required for the user.
--   
--   <a>$sel:userId:ModifyUser'</a>, <a>modifyUser_userId</a> - The ID of
--   the user.
newModifyUser :: Text -> ModifyUser

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | Represents the input of a <tt>DeleteCacheSubnetGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteCacheSubnetGroup</a> smart constructor.
data DeleteCacheSubnetGroup
DeleteCacheSubnetGroup' :: Text -> DeleteCacheSubnetGroup

-- | Create a value of <a>DeleteCacheSubnetGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSubnetGroupName:DeleteCacheSubnetGroup'</a>,
--   <a>deleteCacheSubnetGroup_cacheSubnetGroupName</a> - The name of the
--   cache subnet group to delete.
--   
--   Constraints: Must contain no more than 255 alphanumeric characters or
--   hyphens.
newDeleteCacheSubnetGroup :: Text -> DeleteCacheSubnetGroup

-- | <i>See:</i> <a>newDeleteCacheSubnetGroupResponse</a> smart
--   constructor.
data DeleteCacheSubnetGroupResponse
DeleteCacheSubnetGroupResponse' :: DeleteCacheSubnetGroupResponse

-- | Create a value of <a>DeleteCacheSubnetGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCacheSubnetGroupResponse :: DeleteCacheSubnetGroupResponse
newtype AZMode
AZMode' :: Text -> AZMode
[fromAZMode] :: AZMode -> Text
pattern AZMode_Cross_az :: AZMode
pattern AZMode_Single_az :: AZMode
newtype AuthTokenUpdateStatus
AuthTokenUpdateStatus' :: Text -> AuthTokenUpdateStatus
[fromAuthTokenUpdateStatus] :: AuthTokenUpdateStatus -> Text
pattern AuthTokenUpdateStatus_ROTATING :: AuthTokenUpdateStatus
pattern AuthTokenUpdateStatus_SETTING :: AuthTokenUpdateStatus
newtype AuthTokenUpdateStrategyType
AuthTokenUpdateStrategyType' :: Text -> AuthTokenUpdateStrategyType
[fromAuthTokenUpdateStrategyType] :: AuthTokenUpdateStrategyType -> Text
pattern AuthTokenUpdateStrategyType_DELETE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_ROTATE :: AuthTokenUpdateStrategyType
pattern AuthTokenUpdateStrategyType_SET :: AuthTokenUpdateStrategyType
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
newtype AutomaticFailoverStatus
AutomaticFailoverStatus' :: Text -> AutomaticFailoverStatus
[fromAutomaticFailoverStatus] :: AutomaticFailoverStatus -> Text
pattern AutomaticFailoverStatus_Disabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Disabling :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabled :: AutomaticFailoverStatus
pattern AutomaticFailoverStatus_Enabling :: AutomaticFailoverStatus
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_Immediate :: ChangeType
pattern ChangeType_Requires_reboot :: ChangeType
newtype DestinationType
DestinationType' :: Text -> DestinationType
[fromDestinationType] :: DestinationType -> Text
pattern DestinationType_Cloudwatch_logs :: DestinationType
pattern DestinationType_Kinesis_firehose :: DestinationType
newtype LogDeliveryConfigurationStatus
LogDeliveryConfigurationStatus' :: Text -> LogDeliveryConfigurationStatus
[fromLogDeliveryConfigurationStatus] :: LogDeliveryConfigurationStatus -> Text
pattern LogDeliveryConfigurationStatus_Active :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Disabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Enabling :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Error :: LogDeliveryConfigurationStatus
pattern LogDeliveryConfigurationStatus_Modifying :: LogDeliveryConfigurationStatus
newtype LogFormat
LogFormat' :: Text -> LogFormat
[fromLogFormat] :: LogFormat -> Text
pattern LogFormat_Json :: LogFormat
pattern LogFormat_Text :: LogFormat
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Slow_log :: LogType
newtype MultiAZStatus
MultiAZStatus' :: Text -> MultiAZStatus
[fromMultiAZStatus] :: MultiAZStatus -> Text
pattern MultiAZStatus_Disabled :: MultiAZStatus
pattern MultiAZStatus_Enabled :: MultiAZStatus
newtype NodeUpdateInitiatedBy
NodeUpdateInitiatedBy' :: Text -> NodeUpdateInitiatedBy
[fromNodeUpdateInitiatedBy] :: NodeUpdateInitiatedBy -> Text
pattern NodeUpdateInitiatedBy_Customer :: NodeUpdateInitiatedBy
pattern NodeUpdateInitiatedBy_System :: NodeUpdateInitiatedBy
newtype NodeUpdateStatus
NodeUpdateStatus' :: Text -> NodeUpdateStatus
[fromNodeUpdateStatus] :: NodeUpdateStatus -> Text
pattern NodeUpdateStatus_Complete :: NodeUpdateStatus
pattern NodeUpdateStatus_In_progress :: NodeUpdateStatus
pattern NodeUpdateStatus_Not_applied :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopped :: NodeUpdateStatus
pattern NodeUpdateStatus_Stopping :: NodeUpdateStatus
pattern NodeUpdateStatus_Waiting_to_start :: NodeUpdateStatus
newtype OutpostMode
OutpostMode' :: Text -> OutpostMode
[fromOutpostMode] :: OutpostMode -> Text
pattern OutpostMode_Cross_outpost :: OutpostMode
pattern OutpostMode_Single_outpost :: OutpostMode
newtype PendingAutomaticFailoverStatus
PendingAutomaticFailoverStatus' :: Text -> PendingAutomaticFailoverStatus
[fromPendingAutomaticFailoverStatus] :: PendingAutomaticFailoverStatus -> Text
pattern PendingAutomaticFailoverStatus_Disabled :: PendingAutomaticFailoverStatus
pattern PendingAutomaticFailoverStatus_Enabled :: PendingAutomaticFailoverStatus
newtype ServiceUpdateSeverity
ServiceUpdateSeverity' :: Text -> ServiceUpdateSeverity
[fromServiceUpdateSeverity] :: ServiceUpdateSeverity -> Text
pattern ServiceUpdateSeverity_Critical :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Important :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Low :: ServiceUpdateSeverity
pattern ServiceUpdateSeverity_Medium :: ServiceUpdateSeverity
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Cancelled :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Expired :: ServiceUpdateStatus
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
newtype SlaMet
SlaMet' :: Text -> SlaMet
[fromSlaMet] :: SlaMet -> Text
pattern SlaMet_N_a :: SlaMet
pattern SlaMet_No :: SlaMet
pattern SlaMet_Yes :: SlaMet
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Cache_cluster :: SourceType
pattern SourceType_Cache_parameter_group :: SourceType
pattern SourceType_Cache_security_group :: SourceType
pattern SourceType_Cache_subnet_group :: SourceType
pattern SourceType_Replication_group :: SourceType
pattern SourceType_User :: SourceType
pattern SourceType_User_group :: SourceType
newtype UpdateActionStatus
UpdateActionStatus' :: Text -> UpdateActionStatus
[fromUpdateActionStatus] :: UpdateActionStatus -> Text
pattern UpdateActionStatus_Complete :: UpdateActionStatus
pattern UpdateActionStatus_In_progress :: UpdateActionStatus
pattern UpdateActionStatus_Not_applicable :: UpdateActionStatus
pattern UpdateActionStatus_Not_applied :: UpdateActionStatus
pattern UpdateActionStatus_Scheduled :: UpdateActionStatus
pattern UpdateActionStatus_Scheduling :: UpdateActionStatus
pattern UpdateActionStatus_Stopped :: UpdateActionStatus
pattern UpdateActionStatus_Stopping :: UpdateActionStatus
pattern UpdateActionStatus_Waiting_to_start :: UpdateActionStatus

-- | Indicates whether the user requires a password to authenticate.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | Describes an Availability Zone in which the cluster is launched.
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCacheCluster</a> smart constructor.
data CacheCluster
CacheCluster' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [CacheNode] -> Maybe ISO8601 -> Maybe Bool -> Maybe Bool -> Maybe [SecurityGroupMembership] -> Maybe NotificationConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Text -> Maybe [CacheSecurityGroupMembership] -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CacheParameterGroupStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe PendingModifiedValues -> Maybe Int -> CacheCluster

-- | Create a value of <a>CacheCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:CacheCluster'</a>,
--   <a>cacheCluster_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:engineVersion:CacheCluster'</a>,
--   <a>cacheCluster_engineVersion</a> - The version of the cache engine
--   that is used in this cluster.
--   
--   <a>$sel:cacheNodeType:CacheCluster'</a>,
--   <a>cacheCluster_cacheNodeType</a> - The name of the compute and memory
--   capacity node type for the cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheNodes:CacheCluster'</a>, <a>cacheCluster_cacheNodes</a> -
--   A list of cache nodes that are members of the cluster.
--   
--   <a>$sel:cacheClusterCreateTime:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterCreateTime</a> - The date and time when
--   the cluster was created.
--   
--   <a>$sel:atRestEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable at-rest encryption on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:autoMinorVersionUpgrade:CacheCluster'</a>,
--   <a>cacheCluster_autoMinorVersionUpgrade</a> - This parameter is
--   currently disabled.
--   
--   <a>$sel:securityGroups:CacheCluster'</a>,
--   <a>cacheCluster_securityGroups</a> - A list of VPC Security Groups
--   associated with the cluster.
--   
--   <a>$sel:notificationConfiguration:CacheCluster'</a>,
--   <a>cacheCluster_notificationConfiguration</a> - Describes a
--   notification topic and its status. Notification topics are used for
--   publishing ElastiCache events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <a>$sel:arn:CacheCluster'</a>, <a>cacheCluster_arn</a> - The ARN
--   (Amazon Resource Name) of the cache cluster.
--   
--   <a>$sel:transitEncryptionEnabled:CacheCluster'</a>,
--   <a>cacheCluster_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:snapshotWindow:CacheCluster'</a>,
--   <a>cacheCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your
--   cluster.
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   <a>$sel:cacheClusterId:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterId</a> - The user-supplied identifier of
--   the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:logDeliveryConfigurations:CacheCluster'</a>,
--   <a>cacheCluster_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:CacheCluster'</a>,
--   <a>cacheCluster_configurationEndpoint</a> - Represents a Memcached
--   cluster endpoint which can be used by an application to connect to any
--   node in the cluster. The configuration endpoint will always have
--   <tt>.cfg</tt> in it.
--   
--   Example: <tt>mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211</tt>
--   
--   <a>$sel:engine:CacheCluster'</a>, <a>cacheCluster_engine</a> - The
--   name of the cache engine (<tt>memcached</tt> or <tt>redis</tt>) to be
--   used for this cluster.
--   
--   <a>$sel:cacheSecurityGroups:CacheCluster'</a>,
--   <a>cacheCluster_cacheSecurityGroups</a> - A list of cache security
--   group elements, composed of name and status sub-elements.
--   
--   <a>$sel:replicationGroupLogDeliveryEnabled:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupLogDeliveryEnabled</a> - A boolean
--   value indicating whether log delivery is enabled for the replication
--   group.
--   
--   <a>$sel:authTokenEnabled:CacheCluster'</a>,
--   <a>cacheCluster_authTokenEnabled</a> - A flag that enables using an
--   <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:clientDownloadLandingPage:CacheCluster'</a>,
--   <a>cacheCluster_clientDownloadLandingPage</a> - The URL of the web
--   page where you can download the latest ElastiCache client library.
--   
--   <a>$sel:preferredMaintenanceWindow:CacheCluster'</a>,
--   <a>cacheCluster_preferredMaintenanceWindow</a> - Specifies the weekly
--   time range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:cacheSubnetGroupName:CacheCluster'</a>,
--   <a>cacheCluster_cacheSubnetGroupName</a> - The name of the cache
--   subnet group associated with the cluster.
--   
--   <a>$sel:preferredAvailabilityZone:CacheCluster'</a>,
--   <a>cacheCluster_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the cluster is located or "Multiple" if the
--   cache nodes are located in different Availability Zones.
--   
--   <a>$sel:cacheParameterGroup:CacheCluster'</a>,
--   <a>cacheCluster_cacheParameterGroup</a> - Status of the cache
--   parameter group.
--   
--   <a>$sel:cacheClusterStatus:CacheCluster'</a>,
--   <a>cacheCluster_cacheClusterStatus</a> - The current state of this
--   cluster, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>deleted</tt>, <tt>deleting</tt>,
--   <tt>incompatible-network</tt>, <tt>modifying</tt>, <tt>rebooting
--   cluster nodes</tt>, <tt>restore-failed</tt>, or <tt>snapshotting</tt>.
--   
--   <a>$sel:snapshotRetentionLimit:CacheCluster'</a>,
--   <a>cacheCluster_snapshotRetentionLimit</a> - The number of days for
--   which ElastiCache retains automatic cluster snapshots before deleting
--   them. For example, if you set <tt>SnapshotRetentionLimit</tt> to 5, a
--   snapshot that was taken today is retained for 5 days before being
--   deleted.
--   
--   If the value of SnapshotRetentionLimit is set to zero (0), backups are
--   turned off.
--   
--   <a>$sel:preferredOutpostArn:CacheCluster'</a>,
--   <a>cacheCluster_preferredOutpostArn</a> - The outpost ARN in which the
--   cache cluster is created.
--   
--   <a>$sel:replicationGroupId:CacheCluster'</a>,
--   <a>cacheCluster_replicationGroupId</a> - The replication group to
--   which this cluster belongs. If this field is empty, the cluster is not
--   associated with any replication group.
--   
--   <a>$sel:pendingModifiedValues:CacheCluster'</a>,
--   <a>cacheCluster_pendingModifiedValues</a> - Undocumented member.
--   
--   <a>$sel:numCacheNodes:CacheCluster'</a>,
--   <a>cacheCluster_numCacheNodes</a> - The number of cache nodes in the
--   cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newCacheCluster :: CacheCluster

-- | Provides all of the details about a particular cache engine version.
--   
--   <i>See:</i> <a>newCacheEngineVersion</a> smart constructor.
data CacheEngineVersion
CacheEngineVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> CacheEngineVersion

-- | Create a value of <a>CacheEngineVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engineVersion</a> - The version number of the
--   cache engine.
--   
--   <a>$sel:cacheParameterGroupFamily:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family associated with this cache engine.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheEngineDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineDescription</a> - The description of
--   the cache engine.
--   
--   <a>$sel:engine:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_engine</a> - The name of the cache engine.
--   
--   <a>$sel:cacheEngineVersionDescription:CacheEngineVersion'</a>,
--   <a>cacheEngineVersion_cacheEngineVersionDescription</a> - The
--   description of the cache engine version.
newCacheEngineVersion :: CacheEngineVersion

-- | Represents an individual cache node within a cluster. Each cache node
--   runs its own instance of the cluster's protocol-compliant caching
--   software - either Memcached or Redis.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheNode</a> smart constructor.
data CacheNode
CacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> CacheNode

-- | Create a value of <a>CacheNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCacheNodeId:CacheNode'</a>,
--   <a>cacheNode_sourceCacheNodeId</a> - The ID of the primary node to
--   which this read replica node is synchronized. If this field is empty,
--   this node is not associated with a primary cluster.
--   
--   <a>$sel:parameterGroupStatus:CacheNode'</a>,
--   <a>cacheNode_parameterGroupStatus</a> - The status of the parameter
--   group applied to this cache node.
--   
--   <a>$sel:cacheNodeCreateTime:CacheNode'</a>,
--   <a>cacheNode_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created.
--   
--   <a>$sel:customerAvailabilityZone:CacheNode'</a>,
--   <a>cacheNode_customerAvailabilityZone</a> - The Availability Zone
--   where this node was created and now resides.
--   
--   <a>$sel:cacheNodeId:CacheNode'</a>, <a>cacheNode_cacheNodeId</a> - The
--   cache node identifier. A node ID is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster ID and node ID uniquely identifies
--   every cache node used in a customer's Amazon account.
--   
--   <a>$sel:customerOutpostArn:CacheNode'</a>,
--   <a>cacheNode_customerOutpostArn</a> - The customer outpost ARN of the
--   cache node.
--   
--   <a>$sel:cacheNodeStatus:CacheNode'</a>,
--   <a>cacheNode_cacheNodeStatus</a> - The current state of this cache
--   node, one of the following values: <tt>available</tt>,
--   <tt>creating</tt>, <tt>rebooting</tt>, or <tt>deleting</tt>.
--   
--   <a>$sel:endpoint:CacheNode'</a>, <a>cacheNode_endpoint</a> - The
--   hostname for connecting to this cache node.
newCacheNode :: CacheNode

-- | A parameter that has a different value for each cache node type it is
--   applied to. For example, in a Redis cluster, a <tt>cache.m1.large</tt>
--   cache node type would have a larger <tt>maxmemory</tt> value than a
--   <tt>cache.m1.small</tt> type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificParameter</a> smart
--   constructor.
data CacheNodeTypeSpecificParameter
CacheNodeTypeSpecificParameter' :: Maybe [CacheNodeTypeSpecificValue] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> CacheNodeTypeSpecificParameter

-- | Create a value of <a>CacheNodeTypeSpecificParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cacheNodeTypeSpecificValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_cacheNodeTypeSpecificValues</a> - A
--   list of cache node types and their corresponding values for this
--   parameter.
--   
--   <a>$sel:minimumEngineVersion:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_minimumEngineVersion</a> - The
--   earliest cache engine version to which the parameter can apply.
--   
--   <a>$sel:source:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_source</a> - The source of the
--   parameter value.
--   
--   <a>$sel:isModifiable:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_isModifiable</a> - Indicates whether
--   (<tt>true</tt>) or not (<tt>false</tt>) the parameter can be modified.
--   Some parameters have security or operational implications that prevent
--   them from being changed.
--   
--   <a>$sel:dataType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_dataType</a> - The valid data type
--   for the parameter.
--   
--   <a>$sel:allowedValues:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_allowedValues</a> - The valid range
--   of values for the parameter.
--   
--   <a>$sel:parameterName:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_parameterName</a> - The name of the
--   parameter.
--   
--   <a>$sel:description:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_description</a> - A description of
--   the parameter.
--   
--   <a>$sel:changeType:CacheNodeTypeSpecificParameter'</a>,
--   <a>cacheNodeTypeSpecificParameter_changeType</a> - Indicates whether a
--   change to the parameter is applied immediately or requires a reboot
--   for the change to be applied. You can force a reboot or wait until the
--   next maintenance window's reboot. For more information, see
--   <a>Rebooting a Cluster</a>.
newCacheNodeTypeSpecificParameter :: CacheNodeTypeSpecificParameter

-- | A value that applies only to a certain cache node type.
--   
--   <i>See:</i> <a>newCacheNodeTypeSpecificValue</a> smart constructor.
data CacheNodeTypeSpecificValue
CacheNodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> CacheNodeTypeSpecificValue

-- | Create a value of <a>CacheNodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_cacheNodeType</a> - The cache node type
--   for which this value applies.
--   
--   <a>$sel:value:CacheNodeTypeSpecificValue'</a>,
--   <a>cacheNodeTypeSpecificValue_value</a> - The value for the cache node
--   type.
newCacheNodeTypeSpecificValue :: CacheNodeTypeSpecificValue

-- | The status of the service update on the cache node
--   
--   <i>See:</i> <a>newCacheNodeUpdateStatus</a> smart constructor.
data CacheNodeUpdateStatus
CacheNodeUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> CacheNodeUpdateStatus

-- | Create a value of <a>CacheNodeUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateEndDate</a> - The end date of the
--   update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects whether
--   the update was initiated by the customer or automatically applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatusModifiedDate</a> - The date
--   when the NodeUpdateStatus was last modified&gt;
--   
--   <a>$sel:cacheNodeId:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_cacheNodeId</a> - The node ID of the cache
--   cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateInitiatedDate</a> - The date when
--   the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStartDate</a> - The start date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateStatus:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeUpdateStatus</a> - The update status of
--   the node
--   
--   <a>$sel:nodeDeletionDate:CacheNodeUpdateStatus'</a>,
--   <a>cacheNodeUpdateStatus_nodeDeletionDate</a> - The deletion date of
--   the node
newCacheNodeUpdateStatus :: CacheNodeUpdateStatus

-- | Represents the output of a <tt>CreateCacheParameterGroup</tt>
--   operation.
--   
--   <i>See:</i> <a>newCacheParameterGroup</a> smart constructor.
data CacheParameterGroup
CacheParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> CacheParameterGroup

-- | Create a value of <a>CacheParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupFamily</a> - The name of the
--   cache parameter group family that this cache parameter group is
--   compatible with.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:arn:CacheParameterGroup'</a>, <a>cacheParameterGroup_arn</a> -
--   The ARN (Amazon Resource Name) of the cache parameter group.
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_cacheParameterGroupName</a> - The name of the
--   cache parameter group.
--   
--   <a>$sel:isGlobal:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_isGlobal</a> - Indicates whether the parameter
--   group is associated with a Global datastore
--   
--   <a>$sel:description:CacheParameterGroup'</a>,
--   <a>cacheParameterGroup_description</a> - The description for this
--   cache parameter group.
newCacheParameterGroup :: CacheParameterGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>ModifyCacheParameterGroup</pre></li>
--   <li><pre>ResetCacheParameterGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheParameterGroupNameMessage</a> smart
--   constructor.
data CacheParameterGroupNameMessage
CacheParameterGroupNameMessage' :: Maybe Text -> CacheParameterGroupNameMessage

-- | Create a value of <a>CacheParameterGroupNameMessage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupNameMessage'</a>,
--   <a>cacheParameterGroupNameMessage_cacheParameterGroupName</a> - The
--   name of the cache parameter group.
newCacheParameterGroupNameMessage :: CacheParameterGroupNameMessage

-- | Status of the cache parameter group.
--   
--   <i>See:</i> <a>newCacheParameterGroupStatus</a> smart constructor.
data CacheParameterGroupStatus
CacheParameterGroupStatus' :: Maybe Text -> Maybe [Text] -> Maybe Text -> CacheParameterGroupStatus

-- | Create a value of <a>CacheParameterGroupStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupName:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheParameterGroupName</a> - The name of
--   the cache parameter group.
--   
--   <a>$sel:cacheNodeIdsToReboot:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_cacheNodeIdsToReboot</a> - A list of the
--   cache node IDs which need to be rebooted for parameter changes to be
--   applied. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:parameterApplyStatus:CacheParameterGroupStatus'</a>,
--   <a>cacheParameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newCacheParameterGroupStatus :: CacheParameterGroupStatus

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>AuthorizeCacheSecurityGroupIngress</pre></li>
--   <li><pre>CreateCacheSecurityGroup</pre></li>
--   <li><pre>RevokeCacheSecurityGroupIngress</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSecurityGroup</a> smart constructor.
data CacheSecurityGroup
CacheSecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [EC2SecurityGroup] -> Maybe Text -> CacheSecurityGroup

-- | Create a value of <a>CacheSecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_cacheSecurityGroupName</a> - The name of the
--   cache security group.
--   
--   <a>$sel:arn:CacheSecurityGroup'</a>, <a>cacheSecurityGroup_arn</a> -
--   The ARN of the cache security group,
--   
--   <a>$sel:ownerId:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_ownerId</a> - The Amazon account ID of the cache
--   security group owner.
--   
--   <a>$sel:eC2SecurityGroups:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_eC2SecurityGroups</a> - A list of Amazon EC2
--   security groups that are associated with this cache security group.
--   
--   <a>$sel:description:CacheSecurityGroup'</a>,
--   <a>cacheSecurityGroup_description</a> - The description of the cache
--   security group.
newCacheSecurityGroup :: CacheSecurityGroup

-- | Represents a cluster's status within a particular cache security
--   group.
--   
--   <i>See:</i> <a>newCacheSecurityGroupMembership</a> smart constructor.
data CacheSecurityGroupMembership
CacheSecurityGroupMembership' :: Maybe Text -> Maybe Text -> CacheSecurityGroupMembership

-- | Create a value of <a>CacheSecurityGroupMembership</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_status</a> - The membership status in
--   the cache security group. The status changes when a cache security
--   group is modified, or when the cache security groups assigned to a
--   cluster are modified.
--   
--   <a>$sel:cacheSecurityGroupName:CacheSecurityGroupMembership'</a>,
--   <a>cacheSecurityGroupMembership_cacheSecurityGroupName</a> - The name
--   of the cache security group.
newCacheSecurityGroupMembership :: CacheSecurityGroupMembership

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li><pre>CreateCacheSubnetGroup</pre></li>
--   <li><pre>ModifyCacheSubnetGroup</pre></li>
--   </ul>
--   
--   <i>See:</i> <a>newCacheSubnetGroup</a> smart constructor.
data CacheSubnetGroup
CacheSubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> CacheSubnetGroup

-- | Create a value of <a>CacheSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the cache subnet group.
--   
--   <a>$sel:vpcId:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_vpcId</a> -
--   The Amazon Virtual Private Cloud identifier (VPC ID) of the cache
--   subnet group.
--   
--   <a>$sel:subnets:CacheSubnetGroup'</a>, <a>cacheSubnetGroup_subnets</a>
--   - A list of subnets associated with the cache subnet group.
--   
--   <a>$sel:cacheSubnetGroupName:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupName</a> - The name of the cache
--   subnet group.
--   
--   <a>$sel:cacheSubnetGroupDescription:CacheSubnetGroup'</a>,
--   <a>cacheSubnetGroup_cacheSubnetGroupDescription</a> - The description
--   of the cache subnet group.
newCacheSubnetGroup :: CacheSubnetGroup

-- | The configuration details of the CloudWatch Logs destination.
--   
--   <i>See:</i> <a>newCloudWatchLogsDestinationDetails</a> smart
--   constructor.
data CloudWatchLogsDestinationDetails
CloudWatchLogsDestinationDetails' :: Maybe Text -> CloudWatchLogsDestinationDetails

-- | Create a value of <a>CloudWatchLogsDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogsDestinationDetails'</a>,
--   <a>cloudWatchLogsDestinationDetails_logGroup</a> - The name of the
--   CloudWatch Logs log group.
newCloudWatchLogsDestinationDetails :: CloudWatchLogsDestinationDetails

-- | Node group (shard) configuration options when adding or removing
--   replicas. Each node group (shard) configuration has the following
--   members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones.
--   
--   <i>See:</i> <a>newConfigureShard</a> smart constructor.
data ConfigureShard
ConfigureShard' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> ConfigureShard

-- | Create a value of <a>ConfigureShard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ConfigureShard'</a>,
--   <a>configureShard_preferredAvailabilityZones</a> - A list of
--   <tt>PreferredAvailabilityZone</tt> strings that specify which
--   availability zones the replication group's nodes are to be in. The
--   nummber of <tt>PreferredAvailabilityZone</tt> values must equal the
--   value of <tt>NewReplicaCount</tt> plus 1 to account for the primary
--   node. If this member of <tt>ReplicaConfiguration</tt> is omitted,
--   ElastiCache for Redis selects the availability zone for each of the
--   replicas.
--   
--   <a>$sel:preferredOutpostArns:ConfigureShard'</a>,
--   <a>configureShard_preferredOutpostArns</a> - The outpost ARNs in which
--   the cache cluster is created.
--   
--   <a>$sel:nodeGroupId:ConfigureShard'</a>,
--   <a>configureShard_nodeGroupId</a> - The 4-digit id for the node group
--   you are configuring. For Redis (cluster mode disabled) replication
--   groups, the node group id is always 0001. To find a Redis (cluster
--   mode enabled)'s node group's (shard's) id, see <a>Finding a Shard's
--   Id</a>.
--   
--   <a>$sel:newReplicaCount':ConfigureShard'</a>,
--   <a>configureShard_newReplicaCount</a> - The number of replicas you
--   want in this node group at the end of this operation. The maximum
--   value for <tt>NewReplicaCount</tt> is 5. The minimum value depends
--   upon the type of Redis replication group you are working with.
--   
--   The minimum number of replicas in a shard or replication group is:
--   
--   <ul>
--   <li>Redis (cluster mode disabled)<ul><li>If Multi-AZ: 1</li><li>If
--   Multi-AZ: 0</li></ul></li>
--   <li>Redis (cluster mode enabled): 0 (though you will not be able to
--   failover to a replica if your primary node fails)</li>
--   </ul>
newConfigureShard :: Text -> Int -> ConfigureShard

-- | The endpoint from which data should be migrated.
--   
--   <i>See:</i> <a>newCustomerNodeEndpoint</a> smart constructor.
data CustomerNodeEndpoint
CustomerNodeEndpoint' :: Maybe Text -> Maybe Int -> CustomerNodeEndpoint

-- | Create a value of <a>CustomerNodeEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_address</a> - The address of the node endpoint
--   
--   <a>$sel:port:CustomerNodeEndpoint'</a>,
--   <a>customerNodeEndpoint_port</a> - The port of the node endpoint
newCustomerNodeEndpoint :: CustomerNodeEndpoint

-- | Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newDestinationDetails</a> smart constructor.
data DestinationDetails
DestinationDetails' :: Maybe CloudWatchLogsDestinationDetails -> Maybe KinesisFirehoseDestinationDetails -> DestinationDetails

-- | Create a value of <a>DestinationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogsDetails:DestinationDetails'</a>,
--   <a>destinationDetails_cloudWatchLogsDetails</a> - The configuration
--   details of the CloudWatch Logs destination.
--   
--   <a>$sel:kinesisFirehoseDetails:DestinationDetails'</a>,
--   <a>destinationDetails_kinesisFirehoseDetails</a> - The configuration
--   details of the Kinesis Data Firehose destination.
newDestinationDetails :: DestinationDetails

-- | Provides ownership and status information for an Amazon EC2 security
--   group.
--   
--   <i>See:</i> <a>newEC2SecurityGroup</a> smart constructor.
data EC2SecurityGroup
EC2SecurityGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> EC2SecurityGroup

-- | Create a value of <a>EC2SecurityGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:EC2SecurityGroup'</a>, <a>eC2SecurityGroup_status</a> -
--   The status of the Amazon EC2 security group.
--   
--   <a>$sel:eC2SecurityGroupOwnerId:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupOwnerId</a> - The Amazon account
--   ID of the Amazon EC2 security group owner.
--   
--   <a>$sel:eC2SecurityGroupName:EC2SecurityGroup'</a>,
--   <a>eC2SecurityGroup_eC2SecurityGroupName</a> - The name of the Amazon
--   EC2 security group.
newEC2SecurityGroup :: EC2SecurityGroup

-- | Represents the information required for client programs to connect to
--   a cache node.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the cache node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the cache engine is listening on.
newEndpoint :: Endpoint

-- | Represents the output of a <tt>DescribeEngineDefaultParameters</tt>
--   operation.
--   
--   <i>See:</i> <a>newEngineDefaults</a> smart constructor.
data EngineDefaults
EngineDefaults' :: Maybe Text -> Maybe [CacheNodeTypeSpecificParameter] -> Maybe Text -> Maybe [Parameter] -> EngineDefaults

-- | Create a value of <a>EngineDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheParameterGroupFamily:EngineDefaults'</a>,
--   <a>engineDefaults_cacheParameterGroupFamily</a> - Specifies the name
--   of the cache parameter group family to which the engine default
--   parameters apply.
--   
--   Valid values are: <tt>memcached1.4</tt> | <tt>memcached1.5</tt> |
--   <tt>memcached1.6</tt> | <tt>redis2.6</tt> | <tt>redis2.8</tt> |
--   <tt>redis3.2</tt> | <tt>redis4.0</tt> | <tt>redis5.0</tt> |
--   <tt>redis6.x</tt> |
--   
--   <a>$sel:cacheNodeTypeSpecificParameters:EngineDefaults'</a>,
--   <a>engineDefaults_cacheNodeTypeSpecificParameters</a> - A list of
--   parameters specific to a particular cache node type. Each element in
--   the list contains detailed information about one parameter.
--   
--   <a>$sel:marker:EngineDefaults'</a>, <a>engineDefaults_marker</a> -
--   Provides an identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:EngineDefaults'</a>,
--   <a>engineDefaults_parameters</a> - Contains a list of engine default
--   parameters.
newEngineDefaults :: EngineDefaults

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster, adding or
--   removing a cache node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe SourceType -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:sourceIdentifier:Event'</a>, <a>event_sourceIdentifier</a> -
--   The identifier for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserId.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | Indicates the slot configuration and global identifier for a slice
--   group.
--   
--   <i>See:</i> <a>newGlobalNodeGroup</a> smart constructor.
data GlobalNodeGroup
GlobalNodeGroup' :: Maybe Text -> Maybe Text -> GlobalNodeGroup

-- | Create a value of <a>GlobalNodeGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:GlobalNodeGroup'</a>, <a>globalNodeGroup_slots</a> - The
--   keyspace for this node group
--   
--   <a>$sel:globalNodeGroupId:GlobalNodeGroup'</a>,
--   <a>globalNodeGroup_globalNodeGroupId</a> - The name of the global node
--   group
newGlobalNodeGroup :: GlobalNodeGroup

-- | Consists of a primary cluster that accepts writes and an associated
--   secondary cluster that resides in a different Amazon region. The
--   secondary cluster accepts only reads. The primary cluster
--   automatically replicates updates to the secondary cluster.
--   
--   <ul>
--   <li>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of
--   the Global datastore, which is what you use to associate a secondary
--   cluster.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGlobalReplicationGroup</a> smart constructor.
data GlobalReplicationGroup
GlobalReplicationGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe [GlobalReplicationGroupMember] -> Maybe Text -> Maybe Bool -> Maybe [GlobalNodeGroup] -> Maybe Text -> Maybe Text -> GlobalReplicationGroup

-- | Create a value of <a>GlobalReplicationGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engineVersion</a> - The Elasticache Redis
--   engine version.
--   
--   <a>$sel:status:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_status</a> - The status of the Global
--   datastore
--   
--   <a>$sel:cacheNodeType:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_cacheNodeType</a> - The cache node type of
--   the Global datastore
--   
--   <a>$sel:clusterEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_clusterEnabled</a> - A flag that indicates
--   whether the Global datastore is cluster enabled.
--   
--   <a>$sel:atRestEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_atRestEncryptionEnabled</a> - A flag that
--   enables encryption at rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the replication group is created. To enable encryption at rest on a
--   replication group you must set <tt>AtRestEncryptionEnabled</tt> to
--   <tt>true</tt> when you create the replication group.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:arn:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_arn</a> - The ARN (Amazon Resource Name) of
--   the global replication group.
--   
--   <a>$sel:transitEncryptionEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_transitEncryptionEnabled</a> - A flag that
--   enables in-transit encryption when set to true. You cannot modify the
--   value of <tt>TransitEncryptionEnabled</tt> after the cluster is
--   created. To enable in-transit encryption on a cluster you must set
--   <tt>TransitEncryptionEnabled</tt> to true when you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   <a>$sel:members:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_members</a> - The replication groups that
--   comprise the Global datastore.
--   
--   <a>$sel:engine:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_engine</a> - The Elasticache engine. For
--   Redis only.
--   
--   <a>$sel:authTokenEnabled:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_authTokenEnabled</a> - A flag that enables
--   using an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:globalNodeGroups:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalNodeGroups</a> - Indicates the slot
--   configuration and global identifier for each slice group.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupId</a> - The name of
--   the Global datastore
--   
--   <a>$sel:globalReplicationGroupDescription:GlobalReplicationGroup'</a>,
--   <a>globalReplicationGroup_globalReplicationGroupDescription</a> - The
--   optional description of the Global datastore
newGlobalReplicationGroup :: GlobalReplicationGroup

-- | The name of the Global datastore and role of this replication group in
--   the Global datastore.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupInfo</a> smart constructor.
data GlobalReplicationGroupInfo
GlobalReplicationGroupInfo' :: Maybe Text -> Maybe Text -> GlobalReplicationGroupInfo

-- | Create a value of <a>GlobalReplicationGroupInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:globalReplicationGroupMemberRole:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupMemberRole</a> -
--   The role of the replication group in a Global datastore. Can be
--   primary or secondary.
--   
--   <a>$sel:globalReplicationGroupId:GlobalReplicationGroupInfo'</a>,
--   <a>globalReplicationGroupInfo_globalReplicationGroupId</a> - The name
--   of the Global datastore
newGlobalReplicationGroupInfo :: GlobalReplicationGroupInfo

-- | A member of a Global datastore. It contains the Replication Group Id,
--   the Amazon region and the role of the replication group.
--   
--   <i>See:</i> <a>newGlobalReplicationGroupMember</a> smart constructor.
data GlobalReplicationGroupMember
GlobalReplicationGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutomaticFailoverStatus -> GlobalReplicationGroupMember

-- | Create a value of <a>GlobalReplicationGroupMember</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_status</a> - The status of the
--   membership of the replication group.
--   
--   <a>$sel:replicationGroupRegion:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupRegion</a> - The
--   Amazon region of the Global datastore member.
--   
--   <a>$sel:role':GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_role</a> - Indicates the role of the
--   replication group, primary or secondary.
--   
--   <a>$sel:replicationGroupId:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_replicationGroupId</a> - The
--   replication group id of the Global datastore member.
--   
--   <a>$sel:automaticFailover:GlobalReplicationGroupMember'</a>,
--   <a>globalReplicationGroupMember_automaticFailover</a> - Indicates
--   whether automatic failover is enabled for the replication group.
newGlobalReplicationGroupMember :: GlobalReplicationGroupMember

-- | The configuration details of the Kinesis Data Firehose destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseDestinationDetails</a> smart
--   constructor.
data KinesisFirehoseDestinationDetails
KinesisFirehoseDestinationDetails' :: Maybe Text -> KinesisFirehoseDestinationDetails

-- | Create a value of <a>KinesisFirehoseDestinationDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:KinesisFirehoseDestinationDetails'</a>,
--   <a>kinesisFirehoseDestinationDetails_deliveryStream</a> - The name of
--   the Kinesis Data Firehose delivery stream.
newKinesisFirehoseDestinationDetails :: KinesisFirehoseDestinationDetails

-- | Returns the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfiguration</a> smart constructor.
data LogDeliveryConfiguration
LogDeliveryConfiguration' :: Maybe LogDeliveryConfigurationStatus -> Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> Maybe Text -> LogDeliveryConfiguration

-- | Create a value of <a>LogDeliveryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_status</a> - Returns the log delivery
--   configuration status. Values are one of <tt>enabling</tt> |
--   <tt>disabling</tt> | <tt>modifying</tt> | <tt>active</tt> |
--   <tt>error</tt>
--   
--   <a>$sel:logFormat:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logFormat</a> - Returns the log format,
--   either JSON or TEXT.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationDetails</a> - Configuration
--   details of either a CloudWatch Logs destination or Kinesis Data
--   Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_logType</a> - Refers to <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either <tt>cloudwatch-logs</tt> or
--   <tt>kinesis-firehose</tt>.
--   
--   <a>$sel:message:LogDeliveryConfiguration'</a>,
--   <a>logDeliveryConfiguration_message</a> - Returns an error message for
--   the log delivery configuration.
newLogDeliveryConfiguration :: LogDeliveryConfiguration

-- | Specifies the destination, format and type of the logs.
--   
--   <i>See:</i> <a>newLogDeliveryConfigurationRequest</a> smart
--   constructor.
data LogDeliveryConfigurationRequest
LogDeliveryConfigurationRequest' :: Maybe LogFormat -> Maybe Bool -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> LogDeliveryConfigurationRequest

-- | Create a value of <a>LogDeliveryConfigurationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logFormat</a> - Specifies either
--   JSON or TEXT
--   
--   <a>$sel:enabled:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_enabled</a> - Specify if log
--   delivery is enabled. Default <tt>true</tt>.
--   
--   <a>$sel:destinationDetails:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:LogDeliveryConfigurationRequest'</a>,
--   <a>logDeliveryConfigurationRequest_destinationType</a> - Specify
--   either <tt>cloudwatch-logs</tt> or <tt>kinesis-firehose</tt> as the
--   destination type.
newLogDeliveryConfigurationRequest :: LogDeliveryConfigurationRequest

-- | Represents a collection of cache nodes in a replication group. One
--   node in the node group is the read/write primary node. All the other
--   nodes are read-only Replica nodes.
--   
--   <i>See:</i> <a>newNodeGroup</a> smart constructor.
data NodeGroup
NodeGroup' :: Maybe Text -> Maybe Endpoint -> Maybe Text -> Maybe [NodeGroupMember] -> Maybe Text -> Maybe Endpoint -> NodeGroup

-- | Create a value of <a>NodeGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeGroup'</a>, <a>nodeGroup_status</a> - The current
--   state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>.
--   
--   <a>$sel:primaryEndpoint:NodeGroup'</a>,
--   <a>nodeGroup_primaryEndpoint</a> - The endpoint of the primary node in
--   this node group (shard).
--   
--   <a>$sel:slots:NodeGroup'</a>, <a>nodeGroup_slots</a> - The keyspace
--   for this node group (shard).
--   
--   <a>$sel:nodeGroupMembers:NodeGroup'</a>,
--   <a>nodeGroup_nodeGroupMembers</a> - A list containing information
--   about individual nodes within the node group (shard).
--   
--   <a>$sel:nodeGroupId:NodeGroup'</a>, <a>nodeGroup_nodeGroupId</a> - The
--   identifier for the node group (shard). A Redis (cluster mode disabled)
--   replication group contains only 1 node group; therefore, the node
--   group ID is 0001. A Redis (cluster mode enabled) replication group
--   contains 1 to 90 node groups numbered 0001 to 0090. Optionally, the
--   user can provide the id for a node group.
--   
--   <a>$sel:readerEndpoint:NodeGroup'</a>, <a>nodeGroup_readerEndpoint</a>
--   - The endpoint of the replica nodes in this node group (shard).
newNodeGroup :: NodeGroup

-- | Node group (shard) configuration options. Each node group (shard)
--   configuration has the following: <tt>Slots</tt>,
--   <tt>PrimaryAvailabilityZone</tt>, <tt>ReplicaAvailabilityZones</tt>,
--   <tt>ReplicaCount</tt>.
--   
--   <i>See:</i> <a>newNodeGroupConfiguration</a> smart constructor.
data NodeGroupConfiguration
NodeGroupConfiguration' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> NodeGroupConfiguration

-- | Create a value of <a>NodeGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_slots</a> - A string that specifies the
--   keyspace for a particular node group. Keyspaces range from 0 to
--   16,383. The string is in the format <tt>startkey-endkey</tt>.
--   
--   Example: <tt>"0-3999"</tt>
--   
--   <a>$sel:replicaOutpostArns:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaOutpostArns</a> - The outpost ARN of
--   the node replicas.
--   
--   <a>$sel:replicaCount:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaCount</a> - The number of read
--   replica nodes in this node group (shard).
--   
--   <a>$sel:primaryAvailabilityZone:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryAvailabilityZone</a> - The
--   Availability Zone where the primary node of this node group (shard) is
--   launched.
--   
--   <a>$sel:replicaAvailabilityZones:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_replicaAvailabilityZones</a> - A list of
--   Availability Zones to be used for the read replicas. The number of
--   Availability Zones in this list must match the value of
--   <tt>ReplicaCount</tt> or <tt>ReplicasPerNodeGroup</tt> if not
--   specified.
--   
--   <a>$sel:primaryOutpostArn:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_primaryOutpostArn</a> - The outpost ARN of
--   the primary node.
--   
--   <a>$sel:nodeGroupId:NodeGroupConfiguration'</a>,
--   <a>nodeGroupConfiguration_nodeGroupId</a> - Either the ElastiCache for
--   Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newNodeGroupConfiguration :: NodeGroupConfiguration

-- | Represents a single node within a node group (shard).
--   
--   <i>See:</i> <a>newNodeGroupMember</a> smart constructor.
data NodeGroupMember
NodeGroupMember' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> NodeGroupMember

-- | Create a value of <a>NodeGroupMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheClusterId</a> - The ID of the cluster to which
--   the node belongs.
--   
--   <a>$sel:cacheNodeId:NodeGroupMember'</a>,
--   <a>nodeGroupMember_cacheNodeId</a> - The ID of the node within its
--   cluster. A node ID is a numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:preferredAvailabilityZone:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the node is located.
--   
--   <a>$sel:currentRole:NodeGroupMember'</a>,
--   <a>nodeGroupMember_currentRole</a> - The role that is currently
--   assigned to the node - <tt>primary</tt> or <tt>replica</tt>. This
--   member is only applicable for Redis (cluster mode disabled)
--   replication groups.
--   
--   <a>$sel:preferredOutpostArn:NodeGroupMember'</a>,
--   <a>nodeGroupMember_preferredOutpostArn</a> - The outpost ARN of the
--   node group member.
--   
--   <a>$sel:readEndpoint:NodeGroupMember'</a>,
--   <a>nodeGroupMember_readEndpoint</a> - The information required for
--   client programs to connect to a node for read operations. The read
--   endpoint is only applicable on Redis (cluster mode disabled) clusters.
newNodeGroupMember :: NodeGroupMember

-- | The status of the service update on the node group member
--   
--   <i>See:</i> <a>newNodeGroupMemberUpdateStatus</a> smart constructor.
data NodeGroupMemberUpdateStatus
NodeGroupMemberUpdateStatus' :: Maybe ISO8601 -> Maybe NodeUpdateInitiatedBy -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe NodeUpdateStatus -> Maybe ISO8601 -> NodeGroupMemberUpdateStatus

-- | Create a value of <a>NodeGroupMemberUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeUpdateEndDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateEndDate</a> - The end date of
--   the update for a node
--   
--   <a>$sel:nodeUpdateInitiatedBy:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedBy</a> - Reflects
--   whether the update was initiated by the customer or automatically
--   applied
--   
--   <a>$sel:nodeUpdateStatusModifiedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatusModifiedDate</a> - The
--   date when the NodeUpdateStatus was last modified
--   
--   <a>$sel:cacheClusterId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheClusterId</a> - The cache cluster
--   ID
--   
--   <a>$sel:cacheNodeId:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_cacheNodeId</a> - The node ID of the
--   cache cluster
--   
--   <a>$sel:nodeUpdateInitiatedDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateInitiatedDate</a> - The date
--   when the update is triggered
--   
--   <a>$sel:nodeUpdateStartDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStartDate</a> - The start
--   date of the update for a node
--   
--   <a>$sel:nodeUpdateStatus:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeUpdateStatus</a> - The update
--   status of the node
--   
--   <a>$sel:nodeDeletionDate:NodeGroupMemberUpdateStatus'</a>,
--   <a>nodeGroupMemberUpdateStatus_nodeDeletionDate</a> - The deletion
--   date of the node
newNodeGroupMemberUpdateStatus :: NodeGroupMemberUpdateStatus

-- | The status of the service update on the node group
--   
--   <i>See:</i> <a>newNodeGroupUpdateStatus</a> smart constructor.
data NodeGroupUpdateStatus
NodeGroupUpdateStatus' :: Maybe [NodeGroupMemberUpdateStatus] -> Maybe Text -> NodeGroupUpdateStatus

-- | Create a value of <a>NodeGroupUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupMemberUpdateStatus:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupMemberUpdateStatus</a> - The status
--   of the service update on the node group member
--   
--   <a>$sel:nodeGroupId:NodeGroupUpdateStatus'</a>,
--   <a>nodeGroupUpdateStatus_nodeGroupId</a> - The ID of the node group
newNodeGroupUpdateStatus :: NodeGroupUpdateStatus

-- | Represents an individual cache node in a snapshot of a cluster.
--   
--   <i>See:</i> <a>newNodeSnapshot</a> smart constructor.
data NodeSnapshot
NodeSnapshot' :: Maybe NodeGroupConfiguration -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> NodeSnapshot

-- | Create a value of <a>NodeSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeGroupConfiguration:NodeSnapshot'</a>,
--   <a>nodeSnapshot_nodeGroupConfiguration</a> - The configuration for the
--   source node group (shard).
--   
--   <a>$sel:cacheNodeCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheNodeCreateTime</a> - The date and time when the
--   cache node was created in the source cluster.
--   
--   <a>$sel:cacheClusterId:NodeSnapshot'</a>,
--   <a>nodeSnapshot_cacheClusterId</a> - A unique identifier for the
--   source cluster.
--   
--   <a>$sel:cacheNodeId:NodeSnapshot'</a>, <a>nodeSnapshot_cacheNodeId</a>
--   - The cache node identifier for the node in the source cluster.
--   
--   <a>$sel:nodeGroupId:NodeSnapshot'</a>, <a>nodeSnapshot_nodeGroupId</a>
--   - A unique identifier for the source node group (shard).
--   
--   <a>$sel:snapshotCreateTime:NodeSnapshot'</a>,
--   <a>nodeSnapshot_snapshotCreateTime</a> - The date and time when the
--   source node's metadata and cache data set was obtained for the
--   snapshot.
--   
--   <a>$sel:cacheSize:NodeSnapshot'</a>, <a>nodeSnapshot_cacheSize</a> -
--   The size of the cache on the source cache node.
newNodeSnapshot :: NodeSnapshot

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing ElastiCache events to subscribers using Amazon
--   Simple Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | Describes an individual setting that controls some aspect of
--   ElastiCache behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChangeType -> Parameter

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value of the parameter.
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest cache engine
--   version to which the parameter can apply.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - The source of
--   the parameter.
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Indicates whether (<tt>true</tt>) or not (<tt>false</tt>) the
--   parameter can be modified. Some parameters have security or
--   operational implications that prevent them from being changed.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The valid
--   data type for the parameter.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter.
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> -
--   Indicates whether a change to the parameter is applied immediately or
--   requires a reboot for the change to be applied. You can force a reboot
--   or wait until the next maintenance window's reboot. For more
--   information, see <a>Rebooting a Cluster</a>.
newParameter :: Parameter

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The log delivery configurations being modified
--   
--   <i>See:</i> <a>newPendingLogDeliveryConfiguration</a> smart
--   constructor.
data PendingLogDeliveryConfiguration
PendingLogDeliveryConfiguration' :: Maybe LogFormat -> Maybe DestinationDetails -> Maybe LogType -> Maybe DestinationType -> PendingLogDeliveryConfiguration

-- | Create a value of <a>PendingLogDeliveryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logFormat:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logFormat</a> - Returns the log
--   format, either JSON or TEXT
--   
--   <a>$sel:destinationDetails:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationDetails</a> -
--   Configuration details of either a CloudWatch Logs destination or
--   Kinesis Data Firehose destination.
--   
--   <a>$sel:logType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_logType</a> - Refers to
--   <a>slow-log</a>.
--   
--   <a>$sel:destinationType:PendingLogDeliveryConfiguration'</a>,
--   <a>pendingLogDeliveryConfiguration_destinationType</a> - Returns the
--   destination type, either CloudWatch Logs or Kinesis Data Firehose.
newPendingLogDeliveryConfiguration :: PendingLogDeliveryConfiguration

-- | A group of settings that are applied to the cluster in the future, or
--   that are currently being applied.
--   
--   <i>See:</i> <a>newPendingModifiedValues</a> smart constructor.
data PendingModifiedValues
PendingModifiedValues' :: Maybe Text -> Maybe Text -> Maybe AuthTokenUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe [Text] -> Maybe Int -> PendingModifiedValues

-- | Create a value of <a>PendingModifiedValues</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_engineVersion</a> - The new cache engine
--   version that the cluster runs.
--   
--   <a>$sel:cacheNodeType:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeType</a> - The cache node type that
--   this cluster or replication group is scaled to.
--   
--   <a>$sel:authTokenStatus:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_authTokenStatus</a> - The auth token status
--   
--   <a>$sel:logDeliveryConfigurations:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_logDeliveryConfigurations</a> - The log
--   delivery configurations being modified
--   
--   <a>$sel:cacheNodeIdsToRemove:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_cacheNodeIdsToRemove</a> - A list of cache
--   node IDs that are being removed (or will be removed) from the cluster.
--   A node ID is a 4-digit numeric identifier (0001, 0002, etc.).
--   
--   <a>$sel:numCacheNodes:PendingModifiedValues'</a>,
--   <a>pendingModifiedValues_numCacheNodes</a> - The new number of cache
--   nodes for the cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
newPendingModifiedValues :: PendingModifiedValues

-- | Update action that has been processed for the corresponding apply/stop
--   request
--   
--   <i>See:</i> <a>newProcessedUpdateAction</a> smart constructor.
data ProcessedUpdateAction
ProcessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> ProcessedUpdateAction

-- | Create a value of <a>ProcessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_serviceUpdateName</a> - The unique ID of the
--   service update
--   
--   <a>$sel:updateActionStatus:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_updateActionStatus</a> - The status of the
--   update action on the Redis cluster
--   
--   <a>$sel:replicationGroupId:ProcessedUpdateAction'</a>,
--   <a>processedUpdateAction_replicationGroupId</a> - The ID of the
--   replication group
newProcessedUpdateAction :: ProcessedUpdateAction

-- | Contains the specific price and frequency of a recurring charges for a
--   reserved cache node, or for a reserved cache node offering.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe Text -> Maybe Double -> RecurringCharge

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recurringChargeFrequency:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeFrequency</a> - The frequency of the
--   recurring charge.
--   
--   <a>$sel:recurringChargeAmount:RecurringCharge'</a>,
--   <a>recurringCharge_recurringChargeAmount</a> - The monetary amount of
--   the recurring charge.
newRecurringCharge :: RecurringCharge

-- | A list of the replication groups
--   
--   <i>See:</i> <a>newRegionalConfiguration</a> smart constructor.
data RegionalConfiguration
RegionalConfiguration' :: Text -> Text -> [ReshardingConfiguration] -> RegionalConfiguration

-- | Create a value of <a>RegionalConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationGroupId:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupId</a> - The name of the
--   secondary cluster
--   
--   <a>$sel:replicationGroupRegion:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_replicationGroupRegion</a> - The Amazon
--   region where the cluster is stored
--   
--   <a>$sel:reshardingConfiguration:RegionalConfiguration'</a>,
--   <a>regionalConfiguration_reshardingConfiguration</a> - A list of
--   <tt>PreferredAvailabilityZones</tt> objects that specifies the
--   configuration of a node group in the resharded cluster.
newRegionalConfiguration :: Text -> Text -> RegionalConfiguration

-- | Contains all of the attributes of a specific Redis replication group.
--   
--   <i>See:</i> <a>newReplicationGroup</a> smart constructor.
data ReplicationGroup
ReplicationGroup' :: Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe [NodeGroup] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe [LogDeliveryConfiguration] -> Maybe Endpoint -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe MultiAZStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ReplicationGroupPendingModifiedValues -> Maybe GlobalReplicationGroupInfo -> Maybe [Text] -> Maybe AutomaticFailoverStatus -> ReplicationGroup

-- | Create a value of <a>ReplicationGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenLastModifiedDate:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenLastModifiedDate</a> - The date the auth
--   token was last modified
--   
--   <a>$sel:status:ReplicationGroup'</a>, <a>replicationGroup_status</a> -
--   The current state of this replication group - <tt>creating</tt>,
--   <tt>available</tt>, <tt>modifying</tt>, <tt>deleting</tt>,
--   <tt>create-failed</tt>, <tt>snapshotting</tt>.
--   
--   <a>$sel:cacheNodeType:ReplicationGroup'</a>,
--   <a>replicationGroup_cacheNodeType</a> - The name of the compute and
--   memory capacity node type for each node in the replication group.
--   
--   <a>$sel:nodeGroups:ReplicationGroup'</a>,
--   <a>replicationGroup_nodeGroups</a> - A list of node groups in this
--   replication group. For Redis (cluster mode disabled) replication
--   groups, this is a single-element list. For Redis (cluster mode
--   enabled) replication groups, the list contains an entry for each node
--   group (shard).
--   
--   <a>$sel:snapshottingClusterId:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshottingClusterId</a> - The cluster ID that is
--   used as the daily snapshot source for the replication group.
--   
--   <a>$sel:clusterEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_clusterEnabled</a> - A flag indicating whether or
--   not this replication group is cluster enabled; i.e., whether its data
--   can be partitioned across multiple shards (API/CLI: node groups).
--   
--   Valid values: <tt>true</tt> | <tt>false</tt>
--   
--   <a>$sel:atRestEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_atRestEncryptionEnabled</a> - A flag that enables
--   encryption at-rest when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>AtRestEncryptionEnabled</tt> after
--   the cluster is created. To enable encryption at-rest on a cluster you
--   must set <tt>AtRestEncryptionEnabled</tt> to <tt>true</tt> when you
--   create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:replicationGroupCreateTime:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupCreateTime</a> - The date and time
--   when the cluster was created.
--   
--   <a>$sel:arn:ReplicationGroup'</a>, <a>replicationGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the replication group.
--   
--   <a>$sel:transitEncryptionEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_transitEncryptionEnabled</a> - A flag that enables
--   in-transit encryption when set to <tt>true</tt>.
--   
--   You cannot modify the value of <tt>TransitEncryptionEnabled</tt> after
--   the cluster is created. To enable in-transit encryption on a cluster
--   you must set <tt>TransitEncryptionEnabled</tt> to <tt>true</tt> when
--   you create a cluster.
--   
--   <b>Required:</b> Only available when creating a replication group in
--   an Amazon VPC using redis version <tt>3.2.6</tt>, <tt>4.x</tt> or
--   later.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:userGroupIds:ReplicationGroup'</a>,
--   <a>replicationGroup_userGroupIds</a> - The ID of the user group
--   associated to the replication group.
--   
--   <a>$sel:snapshotWindow:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotWindow</a> - The daily time range (in UTC)
--   during which ElastiCache begins taking a daily snapshot of your node
--   group (shard).
--   
--   Example: <tt>05:00-09:00</tt>
--   
--   If you do not specify this parameter, ElastiCache automatically
--   chooses an appropriate time range.
--   
--   This parameter is only valid if the <tt>Engine</tt> parameter is
--   <tt>redis</tt>.
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroup'</a>,
--   <a>replicationGroup_logDeliveryConfigurations</a> - Returns the
--   destination, format and type of the logs.
--   
--   <a>$sel:configurationEndpoint:ReplicationGroup'</a>,
--   <a>replicationGroup_configurationEndpoint</a> - The configuration
--   endpoint for this replication group. Use the configuration endpoint to
--   connect to this replication group.
--   
--   <a>$sel:authTokenEnabled:ReplicationGroup'</a>,
--   <a>replicationGroup_authTokenEnabled</a> - A flag that enables using
--   an <tt>AuthToken</tt> (password) when issuing Redis commands.
--   
--   Default: <tt>false</tt>
--   
--   <a>$sel:memberClusters:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClusters</a> - The names of all the cache
--   clusters that are part of this replication group.
--   
--   <a>$sel:kmsKeyId:ReplicationGroup'</a>,
--   <a>replicationGroup_kmsKeyId</a> - The ID of the KMS key used to
--   encrypt the disk in the cluster.
--   
--   <a>$sel:multiAZ:ReplicationGroup'</a>, <a>replicationGroup_multiAZ</a>
--   - A flag indicating if you have Multi-AZ enabled to enhance fault
--   tolerance. For more information, see <a>Minimizing Downtime:
--   Multi-AZ</a>
--   
--   <a>$sel:snapshotRetentionLimit:ReplicationGroup'</a>,
--   <a>replicationGroup_snapshotRetentionLimit</a> - The number of days
--   for which ElastiCache retains automatic cluster snapshots before
--   deleting them. For example, if you set <tt>SnapshotRetentionLimit</tt>
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
--   
--   If the value of <tt>SnapshotRetentionLimit</tt> is set to zero (0),
--   backups are turned off.
--   
--   <a>$sel:description:ReplicationGroup'</a>,
--   <a>replicationGroup_description</a> - The user supplied description of
--   the replication group.
--   
--   <a>$sel:replicationGroupId:ReplicationGroup'</a>,
--   <a>replicationGroup_replicationGroupId</a> - The identifier for the
--   replication group.
--   
--   <a>$sel:pendingModifiedValues:ReplicationGroup'</a>,
--   <a>replicationGroup_pendingModifiedValues</a> - A group of settings to
--   be applied to the replication group, either immediately or during the
--   next maintenance window.
--   
--   <a>$sel:globalReplicationGroupInfo:ReplicationGroup'</a>,
--   <a>replicationGroup_globalReplicationGroupInfo</a> - The name of the
--   Global datastore and role of this replication group in the Global
--   datastore.
--   
--   <a>$sel:memberClustersOutpostArns:ReplicationGroup'</a>,
--   <a>replicationGroup_memberClustersOutpostArns</a> - The outpost ARNs
--   of the replication group's member clusters.
--   
--   <a>$sel:automaticFailover:ReplicationGroup'</a>,
--   <a>replicationGroup_automaticFailover</a> - Indicates the status of
--   automatic failover for this Redis replication group.
newReplicationGroup :: ReplicationGroup

-- | The settings to be applied to the Redis replication group, either
--   immediately or during the next maintenance window.
--   
--   <i>See:</i> <a>newReplicationGroupPendingModifiedValues</a> smart
--   constructor.
data ReplicationGroupPendingModifiedValues
ReplicationGroupPendingModifiedValues' :: Maybe AuthTokenUpdateStatus -> Maybe UserGroupsUpdateStatus -> Maybe [PendingLogDeliveryConfiguration] -> Maybe ReshardingStatus -> Maybe Text -> Maybe PendingAutomaticFailoverStatus -> ReplicationGroupPendingModifiedValues

-- | Create a value of <a>ReplicationGroupPendingModifiedValues</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authTokenStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_authTokenStatus</a> - The
--   auth token status
--   
--   <a>$sel:userGroups:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_userGroups</a> - The user
--   group being modified.
--   
--   
--   <a>$sel:logDeliveryConfigurations:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_logDeliveryConfigurations</a>
--   - The log delivery configurations being modified
--   
--   <a>$sel:resharding:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_resharding</a> - The status
--   of an online resharding operation.
--   
--   <a>$sel:primaryClusterId:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_primaryClusterId</a> - The
--   primary cluster ID that is applied immediately (if
--   <tt>--apply-immediately</tt> was specified), or during the next
--   maintenance window.
--   
--   
--   <a>$sel:automaticFailoverStatus:ReplicationGroupPendingModifiedValues'</a>,
--   <a>replicationGroupPendingModifiedValues_automaticFailoverStatus</a> -
--   Indicates the status of automatic failover for this Redis replication
--   group.
newReplicationGroupPendingModifiedValues :: ReplicationGroupPendingModifiedValues

-- | Represents the output of a <tt>PurchaseReservedCacheNodesOffering</tt>
--   operation.
--   
--   <i>See:</i> <a>newReservedCacheNode</a> smart constructor.
data ReservedCacheNode
ReservedCacheNode' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNode

-- | Create a value of <a>ReservedCacheNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeType</a> - The cache node type for the
--   reserved cache nodes.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:state:ReservedCacheNode'</a>, <a>reservedCacheNode_state</a> -
--   The state of the reserved cache node.
--   
--   <a>$sel:startTime:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_startTime</a> - The time the reservation started.
--   
--   <a>$sel:productDescription:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_productDescription</a> - The description of the
--   reserved cache node.
--   
--   <a>$sel:reservationARN:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservationARN</a> - The Amazon Resource Name
--   (ARN) of the reserved cache node.
--   
--   Example:
--   <tt>arn:aws:elasticache:us-east-1:123456789012:reserved-instance:ri-2017-03-27-08-33-25-582</tt>
--   
--   <a>$sel:cacheNodeCount:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_cacheNodeCount</a> - The number of cache nodes
--   that have been reserved.
--   
--   <a>$sel:reservedCacheNodeId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodeId</a> - The unique identifier
--   for the reservation.
--   
--   <a>$sel:recurringCharges:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_recurringCharges</a> - The recurring price
--   charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_offeringType</a> - The offering type of this
--   reserved cache node.
--   
--   <a>$sel:usagePrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_usagePrice</a> - The hourly price charged for
--   this reserved cache node.
--   
--   <a>$sel:fixedPrice:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_fixedPrice</a> - The fixed price charged for this
--   reserved cache node.
--   
--   <a>$sel:duration:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_duration</a> - The duration of the reservation in
--   seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNode'</a>,
--   <a>reservedCacheNode_reservedCacheNodesOfferingId</a> - The offering
--   identifier.
newReservedCacheNode :: ReservedCacheNode

-- | Describes all of the attributes of a reserved cache node offering.
--   
--   <i>See:</i> <a>newReservedCacheNodesOffering</a> smart constructor.
data ReservedCacheNodesOffering
ReservedCacheNodesOffering' :: Maybe Text -> Maybe Text -> Maybe [RecurringCharge] -> Maybe Text -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Text -> ReservedCacheNodesOffering

-- | Create a value of <a>ReservedCacheNodesOffering</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheNodeType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_cacheNodeType</a> - The cache node type
--   for the reserved cache node.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:productDescription:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_productDescription</a> - The cache
--   engine used by the offering.
--   
--   <a>$sel:recurringCharges:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_recurringCharges</a> - The recurring
--   price charged to run this reserved cache node.
--   
--   <a>$sel:offeringType:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_offeringType</a> - The offering type.
--   
--   <a>$sel:usagePrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_usagePrice</a> - The hourly price
--   charged for this offering.
--   
--   <a>$sel:fixedPrice:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_fixedPrice</a> - The fixed price charged
--   for this offering.
--   
--   <a>$sel:duration:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_duration</a> - The duration of the
--   offering. in seconds.
--   
--   <a>$sel:reservedCacheNodesOfferingId:ReservedCacheNodesOffering'</a>,
--   <a>reservedCacheNodesOffering_reservedCacheNodesOfferingId</a> - A
--   unique identifier for the reserved cache node offering.
newReservedCacheNodesOffering :: ReservedCacheNodesOffering

-- | A list of <tt>PreferredAvailabilityZones</tt> objects that specifies
--   the configuration of a node group in the resharded cluster.
--   
--   <i>See:</i> <a>newReshardingConfiguration</a> smart constructor.
data ReshardingConfiguration
ReshardingConfiguration' :: Maybe [Text] -> Maybe Text -> ReshardingConfiguration

-- | Create a value of <a>ReshardingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preferredAvailabilityZones:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_preferredAvailabilityZones</a> - A list of
--   preferred availability zones for the nodes in this cluster.
--   
--   <a>$sel:nodeGroupId:ReshardingConfiguration'</a>,
--   <a>reshardingConfiguration_nodeGroupId</a> - Either the ElastiCache
--   for Redis supplied 4-digit id or a user supplied id for the node group
--   these configuration values apply to.
newReshardingConfiguration :: ReshardingConfiguration

-- | The status of an online resharding operation.
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - Represents the progress of an
--   online resharding operation.
newReshardingStatus :: ReshardingStatus

-- | Represents a single cache security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the cache
--   security group membership. The status changes whenever a cache
--   security group is modified, or when the cache security groups assigned
--   to a cluster are modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   cache security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | An update that you can apply to your Redis clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe ServiceUpdateSeverity -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> ServiceUpdate

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ServiceUpdate'</a>,
--   <a>serviceUpdate_engineVersion</a> - The Elasticache engine version to
--   which the update applies. Either Redis or Memcached engine version
--   
--   <a>$sel:serviceUpdateType:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:engine:ServiceUpdate'</a>, <a>serviceUpdate_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:serviceUpdateReleaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateReleaseDate</a> - The date when the
--   service update is initially available
--   
--   <a>$sel:autoUpdateAfterRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateAfterRecommendedApplyByDate</a> - Indicates
--   whether the service update will be automatically applied once the
--   recommended apply-by date has expired.
--   
--   <a>$sel:serviceUpdateSeverity:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:serviceUpdateEndDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateEndDate</a> - The date after which the
--   service update is no longer available
--   
--   <a>$sel:serviceUpdateDescription:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateDescription</a> - Provides details of
--   the service update
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateRecommendedApplyByDate</a> - The
--   recommendend date to apply the service update in order to ensure
--   compliance. For information on compliance, see <a>Self-Service
--   Security Updates for Compliance</a>.
--   
--   <a>$sel:serviceUpdateStatus:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:ServiceUpdate'</a>,
--   <a>serviceUpdate_estimatedUpdateTime</a> - The estimated length of
--   time the service update will take
newServiceUpdate :: ServiceUpdate

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | Represents a copy of an entire Redis cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [NodeSnapshot] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe AutomaticFailoverStatus -> Maybe Text -> Snapshot

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Snapshot'</a>, <a>snapshot_engineVersion</a> -
--   The version of the cache engine version that is used by the source
--   cluster.
--   
--   <a>$sel:cacheNodeType:Snapshot'</a>, <a>snapshot_cacheNodeType</a> -
--   The name of the compute and memory capacity node type for the source
--   cluster.
--   
--   The following node types are supported by ElastiCache. Generally
--   speaking, the current generation types provide more memory and
--   computational power at lower cost when compared to their equivalent
--   previous generation counterparts.
--   
--   <ul>
--   <li>General purpose:<ul><li>Current generation:<b>M6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.m6g.large</tt>,
--   <tt>cache.m6g.xlarge</tt>, <tt>cache.m6g.2xlarge</tt>,
--   <tt>cache.m6g.4xlarge</tt>, <tt>cache.m6g.8xlarge</tt>,
--   <tt>cache.m6g.12xlarge</tt>, <tt>cache.m6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>M5 node types:</b>
--   <tt>cache.m5.large</tt>, <tt>cache.m5.xlarge</tt>,
--   <tt>cache.m5.2xlarge</tt>, <tt>cache.m5.4xlarge</tt>,
--   <tt>cache.m5.12xlarge</tt>, <tt>cache.m5.24xlarge</tt><b>M4 node
--   types:</b> <tt>cache.m4.large</tt>, <tt>cache.m4.xlarge</tt>,
--   <tt>cache.m4.2xlarge</tt>, <tt>cache.m4.4xlarge</tt>,
--   <tt>cache.m4.10xlarge</tt><b>T3 node types:</b>
--   <tt>cache.t3.micro</tt>, <tt>cache.t3.small</tt>,
--   <tt>cache.t3.medium</tt><b>T2 node types:</b> <tt>cache.t2.micro</tt>,
--   <tt>cache.t2.small</tt>, <tt>cache.t2.medium</tt></li><li>Previous
--   generation: (not recommended)<b>T1 node types:</b>
--   <tt>cache.t1.micro</tt><b>M1 node types:</b> <tt>cache.m1.small</tt>,
--   <tt>cache.m1.medium</tt>, <tt>cache.m1.large</tt>,
--   <tt>cache.m1.xlarge</tt><b>M3 node types:</b>
--   <tt>cache.m3.medium</tt>, <tt>cache.m3.large</tt>,
--   <tt>cache.m3.xlarge</tt>, <tt>cache.m3.2xlarge</tt></li></ul></li>
--   <li>Compute optimized:<ul><li>Previous generation: (not
--   recommended)<b>C1 node types:</b>
--   <tt>cache.c1.xlarge</tt></li></ul></li>
--   <li>Memory optimized:<ul><li>Current generation:<b>R6g node types</b>
--   (available only for Redis engine version 5.0.6 onward and for
--   Memcached engine version 1.5.16 onward).<tt>cache.r6g.large</tt>,
--   <tt>cache.r6g.xlarge</tt>, <tt>cache.r6g.2xlarge</tt>,
--   <tt>cache.r6g.4xlarge</tt>, <tt>cache.r6g.8xlarge</tt>,
--   <tt>cache.r6g.12xlarge</tt>, <tt>cache.r6g.16xlarge</tt>For region
--   availability, see <a>Supported Node Types</a><b>R5 node types:</b>
--   <tt>cache.r5.large</tt>, <tt>cache.r5.xlarge</tt>,
--   <tt>cache.r5.2xlarge</tt>, <tt>cache.r5.4xlarge</tt>,
--   <tt>cache.r5.12xlarge</tt>, <tt>cache.r5.24xlarge</tt><b>R4 node
--   types:</b> <tt>cache.r4.large</tt>, <tt>cache.r4.xlarge</tt>,
--   <tt>cache.r4.2xlarge</tt>, <tt>cache.r4.4xlarge</tt>,
--   <tt>cache.r4.8xlarge</tt>, <tt>cache.r4.16xlarge</tt></li><li>Previous
--   generation: (not recommended)<b>M2 node types:</b>
--   <tt>cache.m2.xlarge</tt>, <tt>cache.m2.2xlarge</tt>,
--   <tt>cache.m2.4xlarge</tt><b>R3 node types:</b>
--   <tt>cache.r3.large</tt>, <tt>cache.r3.xlarge</tt>,
--   <tt>cache.r3.2xlarge</tt>, <tt>cache.r3.4xlarge</tt>,
--   <tt>cache.r3.8xlarge</tt></li></ul></li>
--   </ul>
--   
--   <b>Additional node type info</b>
--   
--   <ul>
--   <li>All current generation instance types are created in Amazon VPC by
--   default.</li>
--   <li>Redis append-only files (AOF) are not supported for T1 or T2
--   instances.</li>
--   <li>Redis Multi-AZ with automatic failover is not supported on T1
--   instances.</li>
--   <li>Redis configuration variables <tt>appendonly</tt> and
--   <tt>appendfsync</tt> are not supported on Redis version 2.8.22 and
--   later.</li>
--   </ul>
--   
--   <a>$sel:cacheClusterCreateTime:Snapshot'</a>,
--   <a>snapshot_cacheClusterCreateTime</a> - The date and time when the
--   source cluster was created.
--   
--   <a>$sel:autoMinorVersionUpgrade:Snapshot'</a>,
--   <a>snapshot_autoMinorVersionUpgrade</a> - This parameter is currently
--   disabled.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:cacheParameterGroupName:Snapshot'</a>,
--   <a>snapshot_cacheParameterGroupName</a> - The cache parameter group
--   that is associated with the source cluster.
--   
--   <a>$sel:replicationGroupDescription:Snapshot'</a>,
--   <a>snapshot_replicationGroupDescription</a> - A description of the
--   source replication group.
--   
--   <a>$sel:vpcId:Snapshot'</a>, <a>snapshot_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the cache subnet group
--   for the source cluster.
--   
--   <a>$sel:snapshotStatus:Snapshot'</a>, <a>snapshot_snapshotStatus</a> -
--   The status of the snapshot. Valid values: <tt>creating</tt> |
--   <tt>available</tt> | <tt>restoring</tt> | <tt>copying</tt> |
--   <tt>deleting</tt>.
--   
--   <a>$sel:snapshotWindow:Snapshot'</a>, <a>snapshot_snapshotWindow</a> -
--   The daily time range during which ElastiCache takes daily snapshots of
--   the source cluster.
--   
--   <a>$sel:cacheClusterId:Snapshot'</a>, <a>snapshot_cacheClusterId</a> -
--   The user-supplied identifier of the source cluster.
--   
--   <a>$sel:engine:Snapshot'</a>, <a>snapshot_engine</a> - The name of the
--   cache engine (<tt>memcached</tt> or <tt>redis</tt>) used by the source
--   cluster.
--   
--   <a>$sel:preferredMaintenanceWindow:Snapshot'</a>,
--   <a>snapshot_preferredMaintenanceWindow</a> - Specifies the weekly time
--   range during which maintenance on the cluster is performed. It is
--   specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock
--   UTC). The minimum maintenance window is a 60 minute period.
--   
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:23:00-mon:01:30</tt>
--   
--   <a>$sel:topicArn:Snapshot'</a>, <a>snapshot_topicArn</a> - The Amazon
--   Resource Name (ARN) for the topic used by the source cluster for
--   publishing notifications.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:nodeSnapshots:Snapshot'</a>, <a>snapshot_nodeSnapshots</a> - A
--   list of the cache nodes in the source cluster.
--   
--   <a>$sel:cacheSubnetGroupName:Snapshot'</a>,
--   <a>snapshot_cacheSubnetGroupName</a> - The name of the cache subnet
--   group associated with the source cluster.
--   
--   <a>$sel:preferredAvailabilityZone:Snapshot'</a>,
--   <a>snapshot_preferredAvailabilityZone</a> - The name of the
--   Availability Zone in which the source cluster is located.
--   
--   <a>$sel:numNodeGroups:Snapshot'</a>, <a>snapshot_numNodeGroups</a> -
--   The number of node groups (shards) in this snapshot. When restoring
--   from a snapshot, the number of node groups (shards) in the snapshot
--   and in the restored replication group must be the same.
--   
--   <a>$sel:snapshotRetentionLimit:Snapshot'</a>,
--   <a>snapshot_snapshotRetentionLimit</a> - For an automatic snapshot,
--   the number of days for which ElastiCache retains the snapshot before
--   deleting it.
--   
--   For manual snapshots, this field reflects the
--   <tt>SnapshotRetentionLimit</tt> for the source cluster when the
--   snapshot was created. This field is otherwise ignored: Manual
--   snapshots do not expire, and can only be deleted using the
--   <tt>DeleteSnapshot</tt> operation.
--   
--   <b>Important</b> If the value of SnapshotRetentionLimit is set to zero
--   (0), backups are turned off.
--   
--   <a>$sel:snapshotName:Snapshot'</a>, <a>snapshot_snapshotName</a> - The
--   name of a snapshot. For an automatic snapshot, the name is
--   system-generated. For a manual snapshot, this is the user-provided
--   name.
--   
--   <a>$sel:preferredOutpostArn:Snapshot'</a>,
--   <a>snapshot_preferredOutpostArn</a> - The ARN (Amazon Resource Name)
--   of the preferred outpost.
--   
--   <a>$sel:replicationGroupId:Snapshot'</a>,
--   <a>snapshot_replicationGroupId</a> - The unique identifier of the
--   source replication group.
--   
--   <a>$sel:numCacheNodes:Snapshot'</a>, <a>snapshot_numCacheNodes</a> -
--   The number of cache nodes in the source cluster.
--   
--   For clusters running Redis, this value must be 1. For clusters running
--   Memcached, this value must be between 1 and 40.
--   
--   <a>$sel:port:Snapshot'</a>, <a>snapshot_port</a> - The port number
--   used by each cache nodes in the source cluster.
--   
--   <a>$sel:automaticFailover:Snapshot'</a>,
--   <a>snapshot_automaticFailover</a> - Indicates the status of automatic
--   failover for the source Redis replication group.
--   
--   <a>$sel:snapshotSource:Snapshot'</a>, <a>snapshot_snapshotSource</a> -
--   Indicates whether the snapshot is from an automatic backup
--   (<tt>automated</tt>) or was created manually (<tt>manual</tt>).
newSnapshot :: Snapshot

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with ElastiCache.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Maybe SubnetOutpost -> Subnet

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The unique identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone
--   associated with the subnet.
--   
--   <a>$sel:subnetOutpost:Subnet'</a>, <a>subnet_subnetOutpost</a> - The
--   outpost ARN of the subnet.
newSubnet :: Subnet

-- | The ID of the outpost subnet.
--   
--   <i>See:</i> <a>newSubnetOutpost</a> smart constructor.
data SubnetOutpost
SubnetOutpost' :: Maybe Text -> SubnetOutpost

-- | Create a value of <a>SubnetOutpost</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetOutpostArn:SubnetOutpost'</a>,
--   <a>subnetOutpost_subnetOutpostArn</a> - The outpost ARN of the subnet.
newSubnetOutpost :: SubnetOutpost

-- | A tag that can be added to an ElastiCache cluster or replication
--   group. Tags are composed of a Key/Value pair. You can use tags to
--   categorize and track all your ElastiCache resources, with the
--   exception of global replication group. When you add or remove tags on
--   replication groups, those actions will be replicated to all nodes in
--   the replication group. A tag with a null Value is permitted.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | Represents the output from the <tt>AddTagsToResource</tt>,
--   <tt>ListTagsForResource</tt>, and <tt>RemoveTagsFromResource</tt>
--   operations.
--   
--   <i>See:</i> <a>newTagListMessage</a> smart constructor.
data TagListMessage
TagListMessage' :: Maybe [Tag] -> TagListMessage

-- | Create a value of <a>TagListMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagListMessage'</a>, <a>tagListMessage_tagList</a> - A
--   list of tags as key-value pairs.
newTagListMessage :: TagListMessage

-- | Filters update actions from the service updates that are in available
--   status during the time range.
--   
--   <i>See:</i> <a>newTimeRangeFilter</a> smart constructor.
data TimeRangeFilter
TimeRangeFilter' :: Maybe ISO8601 -> Maybe ISO8601 -> TimeRangeFilter

-- | Create a value of <a>TimeRangeFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:TimeRangeFilter'</a>,
--   <a>timeRangeFilter_startTime</a> - The start time of the time range
--   filter
--   
--   <a>$sel:endTime:TimeRangeFilter'</a>, <a>timeRangeFilter_endTime</a> -
--   The end time of the time range filter
newTimeRangeFilter :: TimeRangeFilter

-- | Update action that has failed to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newUnprocessedUpdateAction</a> smart constructor.
data UnprocessedUpdateAction
UnprocessedUpdateAction' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedUpdateAction

-- | Create a value of <a>UnprocessedUpdateAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cacheClusterId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_cacheClusterId</a> - The ID of the cache
--   cluster
--   
--   <a>$sel:serviceUpdateName:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_serviceUpdateName</a> - The unique ID of
--   the service update
--   
--   <a>$sel:errorType:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorType</a> - The error type for requests
--   that are not processed
--   
--   <a>$sel:errorMessage:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_errorMessage</a> - The error message that
--   describes the reason the request was not processed
--   
--   <a>$sel:replicationGroupId:UnprocessedUpdateAction'</a>,
--   <a>unprocessedUpdateAction_replicationGroupId</a> - The replication
--   group ID
newUnprocessedUpdateAction :: UnprocessedUpdateAction

-- | The status of the service update for a specific replication group
--   
--   <i>See:</i> <a>newUpdateAction</a> smart constructor.
data UpdateAction
UpdateAction' :: Maybe ServiceUpdateType -> Maybe SlaMet -> Maybe Text -> Maybe Text -> Maybe UpdateActionStatus -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe [CacheNodeUpdateStatus] -> Maybe ServiceUpdateSeverity -> Maybe [NodeGroupUpdateStatus] -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe ServiceUpdateStatus -> Maybe Text -> Maybe Text -> UpdateAction

-- | Create a value of <a>UpdateAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateType:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateType</a> - Reflects the nature of the
--   service update
--   
--   <a>$sel:slaMet:UpdateAction'</a>, <a>updateAction_slaMet</a> - If yes,
--   all nodes in the replication group have been updated by the
--   recommended apply-by date. If no, at least one node in the replication
--   group have not been updated by the recommended apply-by date. If N/A,
--   the replication group was created after the recommended apply-by date.
--   
--   <a>$sel:cacheClusterId:UpdateAction'</a>,
--   <a>updateAction_cacheClusterId</a> - The ID of the cache cluster
--   
--   <a>$sel:serviceUpdateName:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:updateActionStatus:UpdateAction'</a>,
--   <a>updateAction_updateActionStatus</a> - The status of the update
--   action
--   
--   <a>$sel:engine:UpdateAction'</a>, <a>updateAction_engine</a> - The
--   Elasticache engine to which the update applies. Either Redis or
--   Memcached
--   
--   <a>$sel:nodesUpdated:UpdateAction'</a>,
--   <a>updateAction_nodesUpdated</a> - The progress of the service update
--   on the replication group
--   
--   <a>$sel:updateActionStatusModifiedDate:UpdateAction'</a>,
--   <a>updateAction_updateActionStatusModifiedDate</a> - The date when the
--   UpdateActionStatus was last modified
--   
--   <a>$sel:serviceUpdateReleaseDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateReleaseDate</a> - The date the update is
--   first available
--   
--   <a>$sel:cacheNodeUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_cacheNodeUpdateStatus</a> - The status of the service
--   update on the cache node
--   
--   <a>$sel:serviceUpdateSeverity:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateSeverity</a> - The severity of the
--   service update
--   
--   <a>$sel:nodeGroupUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_nodeGroupUpdateStatus</a> - The status of the service
--   update on the node group
--   
--   <a>$sel:serviceUpdateRecommendedApplyByDate:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateRecommendedApplyByDate</a> - The
--   recommended date to apply the service update to ensure compliance. For
--   information on compliance, see <a>Self-Service Security Updates for
--   Compliance</a>.
--   
--   <a>$sel:updateActionAvailableDate:UpdateAction'</a>,
--   <a>updateAction_updateActionAvailableDate</a> - The date that the
--   service update is available to a replication group
--   
--   <a>$sel:serviceUpdateStatus:UpdateAction'</a>,
--   <a>updateAction_serviceUpdateStatus</a> - The status of the service
--   update
--   
--   <a>$sel:estimatedUpdateTime:UpdateAction'</a>,
--   <a>updateAction_estimatedUpdateTime</a> - The estimated length of time
--   for the update to complete
--   
--   <a>$sel:replicationGroupId:UpdateAction'</a>,
--   <a>updateAction_replicationGroupId</a> - The ID of the replication
--   group
newUpdateAction :: UpdateAction

-- | <i>See:</i> <a>newUpdateActionResultsMessage</a> smart constructor.
data UpdateActionResultsMessage
UpdateActionResultsMessage' :: Maybe [UnprocessedUpdateAction] -> Maybe [ProcessedUpdateAction] -> UpdateActionResultsMessage

-- | Create a value of <a>UpdateActionResultsMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_unprocessedUpdateActions</a> - Update
--   actions that haven't been processed successfully
--   
--   <a>$sel:processedUpdateActions:UpdateActionResultsMessage'</a>,
--   <a>updateActionResultsMessage_processedUpdateActions</a> - Update
--   actions that have been processed successfully
newUpdateActionResultsMessage :: UpdateActionResultsMessage

-- | <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:userGroupIds:User'</a>, <a>user_userGroupIds</a> - Returns a
--   list of the user group IDs the user belongs to.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:engine:User'</a>, <a>user_engine</a> - The current supported
--   value is Redis.
--   
--   <a>$sel:userName:User'</a>, <a>user_userName</a> - The username of the
--   user.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:userId:User'</a>, <a>user_userId</a> - The ID of the user.
newUser :: User

-- | <i>See:</i> <a>newUserGroup</a> smart constructor.
data UserGroup
UserGroup' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserGroupPendingChanges -> Maybe [Text] -> UserGroup

-- | Create a value of <a>UserGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserGroup'</a>, <a>userGroup_status</a> - Indicates
--   user group status. Can be "creating", "active", "modifying",
--   "deleting".
--   
--   <a>$sel:userIds:UserGroup'</a>, <a>userGroup_userIds</a> - The list of
--   user IDs that belong to the user group.
--   
--   <a>$sel:arn:UserGroup'</a>, <a>userGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the user group.
--   
--   <a>$sel:userGroupId:UserGroup'</a>, <a>userGroup_userGroupId</a> - The
--   ID of the user group.
--   
--   <a>$sel:engine:UserGroup'</a>, <a>userGroup_engine</a> - The current
--   supported value is Redis.
--   
--   <a>$sel:pendingChanges:UserGroup'</a>, <a>userGroup_pendingChanges</a>
--   - A list of updates being applied to the user group.
--   
--   <a>$sel:replicationGroups:UserGroup'</a>,
--   <a>userGroup_replicationGroups</a> - A list of replication groups that
--   the user group can access.
newUserGroup :: UserGroup

-- | Returns the updates being applied to the user group.
--   
--   <i>See:</i> <a>newUserGroupPendingChanges</a> smart constructor.
data UserGroupPendingChanges
UserGroupPendingChanges' :: Maybe [Text] -> Maybe [Text] -> UserGroupPendingChanges

-- | Create a value of <a>UserGroupPendingChanges</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIdsToAdd:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToAdd</a> - The list of user IDs to
--   add.
--   
--   <a>$sel:userIdsToRemove:UserGroupPendingChanges'</a>,
--   <a>userGroupPendingChanges_userIdsToRemove</a> - The list of user IDs
--   to remove.
newUserGroupPendingChanges :: UserGroupPendingChanges

-- | The status of the user group update.
--   
--   <i>See:</i> <a>newUserGroupsUpdateStatus</a> smart constructor.
data UserGroupsUpdateStatus
UserGroupsUpdateStatus' :: Maybe [Text] -> Maybe [Text] -> UserGroupsUpdateStatus

-- | Create a value of <a>UserGroupsUpdateStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userGroupIdsToAdd:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToAdd</a> - The ID of the user
--   group to add.
--   
--   <a>$sel:userGroupIdsToRemove:UserGroupsUpdateStatus'</a>,
--   <a>userGroupsUpdateStatus_userGroupIdsToRemove</a> - The ID of the
--   user group to remove.
newUserGroupsUpdateStatus :: UserGroupsUpdateStatus
