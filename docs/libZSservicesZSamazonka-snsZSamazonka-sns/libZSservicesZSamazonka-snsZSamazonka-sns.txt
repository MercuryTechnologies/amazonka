-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-snsZSamazonka-sns
@version 1.6.1


module Network.AWS.SNS.Types.Endpoint

-- | Endpoint for mobile app and device.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe (HashMap Text Text) -> Maybe Text -> Endpoint

-- | Attributes for endpoint.
[$sel:attributes:Endpoint'] :: Endpoint -> Maybe (HashMap Text Text)

-- | EndpointArn for mobile app and device.
[$sel:endpointArn:Endpoint'] :: Endpoint -> Maybe Text

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Endpoint'</a>, <a>endpoint_attributes</a> -
--   Attributes for endpoint.
--   
--   <a>$sel:endpointArn:Endpoint'</a>, <a>endpoint_endpointArn</a> -
--   EndpointArn for mobile app and device.
newEndpoint :: Endpoint

-- | Attributes for endpoint.
endpoint_attributes :: Lens' Endpoint (Maybe (HashMap Text Text))

-- | EndpointArn for mobile app and device.
endpoint_endpointArn :: Lens' Endpoint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SNS.Types.Endpoint.Endpoint
instance GHC.Show.Show Network.AWS.SNS.Types.Endpoint.Endpoint
instance GHC.Read.Read Network.AWS.SNS.Types.Endpoint.Endpoint
instance GHC.Classes.Eq Network.AWS.SNS.Types.Endpoint.Endpoint
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.Endpoint.Endpoint
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.Endpoint.Endpoint
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.Endpoint.Endpoint


module Network.AWS.SNS.Types.LanguageCodeString

-- | Supported language code for sending OTP message
newtype LanguageCodeString
LanguageCodeString' :: Text -> LanguageCodeString
[fromLanguageCodeString] :: LanguageCodeString -> Text
pattern LanguageCodeString_De_DE :: LanguageCodeString
pattern LanguageCodeString_En_GB :: LanguageCodeString
pattern LanguageCodeString_En_US :: LanguageCodeString
pattern LanguageCodeString_Es_419 :: LanguageCodeString
pattern LanguageCodeString_Es_ES :: LanguageCodeString
pattern LanguageCodeString_Fr_CA :: LanguageCodeString
pattern LanguageCodeString_Fr_FR :: LanguageCodeString
pattern LanguageCodeString_It_IT :: LanguageCodeString
pattern LanguageCodeString_Ja_JP :: LanguageCodeString
pattern LanguageCodeString_Kr_KR :: LanguageCodeString
pattern LanguageCodeString_Pt_BR :: LanguageCodeString
pattern LanguageCodeString_Zh_CN :: LanguageCodeString
pattern LanguageCodeString_Zh_TW :: LanguageCodeString
instance Network.AWS.Data.XML.ToXML Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.Log.ToLog Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.Text.ToText Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Network.AWS.Data.Text.FromText Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance GHC.Generics.Generic Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance GHC.Classes.Ord Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance GHC.Classes.Eq Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance GHC.Read.Read Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString
instance GHC.Show.Show Network.AWS.SNS.Types.LanguageCodeString.LanguageCodeString


module Network.AWS.SNS.Types.MessageAttributeValue

-- | The user-specified message attribute value. For string data types, the
--   value attribute has the same restrictions on the content as the
--   message body. For more information, see <a>Publish</a>.
--   
--   Name, type, and value must not be empty or null. In addition, the
--   message body should not be empty or null. All parts of the message
--   attribute, including name, type, and value, are included in the
--   message size restriction, which is currently 256 KB (262,144 bytes).
--   For more information, see <a>Amazon SNS message attributes</a> and
--   <a>Publishing to a mobile phone</a> in the <i>Amazon SNS Developer
--   Guide.</i>
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe Text -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Text

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.
[$sel:binaryValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Base64

-- | Amazon SNS supports the following logical data types: String,
--   String.Array, Number, and Binary. For more information, see <a>Message
--   Attribute Data Types</a>.
[$sel:dataType:MessageAttributeValue'] :: MessageAttributeValue -> Text

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, for example, compressed data, encrypted data,
--   or images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SNS supports the
--   following logical data types: String, String.Array, Number, and
--   Binary. For more information, see <a>Message Attribute Data Types</a>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SNS supports the following logical data types: String,
--   String.Array, Number, and Binary. For more information, see <a>Message
--   Attribute Data Types</a>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text
instance GHC.Generics.Generic Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Show.Show Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Read.Read Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance GHC.Classes.Eq Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.MessageAttributeValue.MessageAttributeValue


module Network.AWS.SNS.Types.NumberCapability

-- | Enum listing out all supported number capabilities.
newtype NumberCapability
NumberCapability' :: Text -> NumberCapability
[fromNumberCapability] :: NumberCapability -> Text
pattern NumberCapability_MMS :: NumberCapability
pattern NumberCapability_SMS :: NumberCapability
pattern NumberCapability_VOICE :: NumberCapability
instance Network.AWS.Data.XML.ToXML Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.Log.ToLog Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.Text.ToText Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Network.AWS.Data.Text.FromText Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance GHC.Generics.Generic Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance GHC.Classes.Ord Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance GHC.Classes.Eq Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance GHC.Read.Read Network.AWS.SNS.Types.NumberCapability.NumberCapability
instance GHC.Show.Show Network.AWS.SNS.Types.NumberCapability.NumberCapability


module Network.AWS.SNS.Types.PlatformApplication

-- | Platform application object.
--   
--   <i>See:</i> <a>newPlatformApplication</a> smart constructor.
data PlatformApplication
PlatformApplication' :: Maybe Text -> Maybe (HashMap Text Text) -> PlatformApplication

-- | PlatformApplicationArn for platform application object.
[$sel:platformApplicationArn:PlatformApplication'] :: PlatformApplication -> Maybe Text

-- | Attributes for platform application object.
[$sel:attributes:PlatformApplication'] :: PlatformApplication -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlatformApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:PlatformApplication'</a>,
--   <a>platformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn for platform application object.
--   
--   <a>$sel:attributes:PlatformApplication'</a>,
--   <a>platformApplication_attributes</a> - Attributes for platform
--   application object.
newPlatformApplication :: PlatformApplication

-- | PlatformApplicationArn for platform application object.
platformApplication_platformApplicationArn :: Lens' PlatformApplication (Maybe Text)

-- | Attributes for platform application object.
platformApplication_attributes :: Lens' PlatformApplication (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance GHC.Show.Show Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance GHC.Read.Read Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance GHC.Classes.Eq Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.PlatformApplication.PlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.PlatformApplication.PlatformApplication


module Network.AWS.SNS.Types.RouteType

-- | Enum listing out all supported route types. The following enum values
--   are supported. 1. Transactional : Non-marketing traffic 2. Promotional
--   : Marketing 3. Premium : Premium routes for OTP delivery to the
--   carriers
newtype RouteType
RouteType' :: Text -> RouteType
[fromRouteType] :: RouteType -> Text
pattern RouteType_Premium :: RouteType
pattern RouteType_Promotional :: RouteType
pattern RouteType_Transactional :: RouteType
instance Network.AWS.Data.XML.ToXML Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.RouteType.RouteType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SNS.Types.RouteType.RouteType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SNS.Types.RouteType.RouteType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SNS.Types.RouteType.RouteType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.Log.ToLog Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.Text.ToText Network.AWS.SNS.Types.RouteType.RouteType
instance Network.AWS.Data.Text.FromText Network.AWS.SNS.Types.RouteType.RouteType
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.RouteType.RouteType
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.RouteType.RouteType
instance GHC.Generics.Generic Network.AWS.SNS.Types.RouteType.RouteType
instance GHC.Classes.Ord Network.AWS.SNS.Types.RouteType.RouteType
instance GHC.Classes.Eq Network.AWS.SNS.Types.RouteType.RouteType
instance GHC.Read.Read Network.AWS.SNS.Types.RouteType.RouteType
instance GHC.Show.Show Network.AWS.SNS.Types.RouteType.RouteType


module Network.AWS.SNS.Types.PhoneNumberInformation

-- | A list of phone numbers and their metadata.
--   
--   <i>See:</i> <a>newPhoneNumberInformation</a> smart constructor.
data PhoneNumberInformation
PhoneNumberInformation' :: Maybe Text -> Maybe Text -> Maybe RouteType -> Maybe ISO8601 -> Maybe [NumberCapability] -> Maybe Text -> PhoneNumberInformation

-- | The phone number.
[$sel:phoneNumber:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | The status of the phone number.
[$sel:status:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | The list of supported routes.
[$sel:routeType:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe RouteType

-- | The date and time when the phone number was created.
[$sel:createdAt:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe ISO8601

-- | The capabilities of each phone number.
[$sel:numberCapabilities:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe [NumberCapability]

-- | The two-character code for the country or region, in ISO 3166-1
--   alpha-2 format.
[$sel:iso2CountryCode:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | Create a value of <a>PhoneNumberInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_phoneNumber</a> - The phone number.
--   
--   <a>$sel:status:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_status</a> - The status of the phone number.
--   
--   <a>$sel:routeType:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_routeType</a> - The list of supported
--   routes.
--   
--   <a>$sel:createdAt:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_createdAt</a> - The date and time when the
--   phone number was created.
--   
--   <a>$sel:numberCapabilities:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_numberCapabilities</a> - The capabilities of
--   each phone number.
--   
--   <a>$sel:iso2CountryCode:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_iso2CountryCode</a> - The two-character code
--   for the country or region, in ISO 3166-1 alpha-2 format.
newPhoneNumberInformation :: PhoneNumberInformation

-- | The phone number.
phoneNumberInformation_phoneNumber :: Lens' PhoneNumberInformation (Maybe Text)

-- | The status of the phone number.
phoneNumberInformation_status :: Lens' PhoneNumberInformation (Maybe Text)

-- | The list of supported routes.
phoneNumberInformation_routeType :: Lens' PhoneNumberInformation (Maybe RouteType)

-- | The date and time when the phone number was created.
phoneNumberInformation_createdAt :: Lens' PhoneNumberInformation (Maybe UTCTime)

-- | The capabilities of each phone number.
phoneNumberInformation_numberCapabilities :: Lens' PhoneNumberInformation (Maybe [NumberCapability])

-- | The two-character code for the country or region, in ISO 3166-1
--   alpha-2 format.
phoneNumberInformation_iso2CountryCode :: Lens' PhoneNumberInformation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance GHC.Show.Show Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance GHC.Read.Read Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance GHC.Classes.Eq Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.PhoneNumberInformation.PhoneNumberInformation


module Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus

-- | Enum listing out all supported destination phone number verification
--   statuses. The following enum values are supported. 1. PENDING : The
--   destination phone number is pending verification. 2. VERIFIED : The
--   destination phone number is verified.
newtype SMSSandboxPhoneNumberVerificationStatus
SMSSandboxPhoneNumberVerificationStatus' :: Text -> SMSSandboxPhoneNumberVerificationStatus
[fromSMSSandboxPhoneNumberVerificationStatus] :: SMSSandboxPhoneNumberVerificationStatus -> Text
pattern SMSSandboxPhoneNumberVerificationStatus_Pending :: SMSSandboxPhoneNumberVerificationStatus
pattern SMSSandboxPhoneNumberVerificationStatus_Verified :: SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance GHC.Generics.Generic Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance GHC.Classes.Ord Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance GHC.Classes.Eq Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance GHC.Read.Read Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus
instance GHC.Show.Show Network.AWS.SNS.Types.SMSSandboxPhoneNumberVerificationStatus.SMSSandboxPhoneNumberVerificationStatus


module Network.AWS.SNS.Types.SMSSandboxPhoneNumber

-- | A verified or pending destination phone number in the SMS sandbox.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSMSSandboxPhoneNumber</a> smart constructor.
data SMSSandboxPhoneNumber
SMSSandboxPhoneNumber' :: Maybe Text -> Maybe SMSSandboxPhoneNumberVerificationStatus -> SMSSandboxPhoneNumber

-- | The destination phone number.
[$sel:phoneNumber:SMSSandboxPhoneNumber'] :: SMSSandboxPhoneNumber -> Maybe Text

-- | The destination phone number's verification status.
[$sel:status:SMSSandboxPhoneNumber'] :: SMSSandboxPhoneNumber -> Maybe SMSSandboxPhoneNumberVerificationStatus

-- | Create a value of <a>SMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number.
--   
--   <a>$sel:status:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_status</a> - The destination phone number's
--   verification status.
newSMSSandboxPhoneNumber :: SMSSandboxPhoneNumber

-- | The destination phone number.
sMSSandboxPhoneNumber_phoneNumber :: Lens' SMSSandboxPhoneNumber (Maybe Text)

-- | The destination phone number's verification status.
sMSSandboxPhoneNumber_status :: Lens' SMSSandboxPhoneNumber (Maybe SMSSandboxPhoneNumberVerificationStatus)
instance GHC.Generics.Generic Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance GHC.Show.Show Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance GHC.Read.Read Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance GHC.Classes.Eq Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.SMSSandboxPhoneNumber.SMSSandboxPhoneNumber


module Network.AWS.SNS.Types.Subscription

-- | A wrapper type for the attributes of an Amazon SNS subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Subscription

-- | The ARN of the subscription's topic.
[$sel:topicArn:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's owner.
[$sel:owner:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's protocol.
[$sel:protocol:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's ARN.
[$sel:subscriptionArn:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's endpoint (format depends on the protocol).
[$sel:endpoint:Subscription'] :: Subscription -> Maybe Text

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Subscription'</a>, <a>subscription_topicArn</a> - The
--   ARN of the subscription's topic.
--   
--   <a>$sel:owner:Subscription'</a>, <a>subscription_owner</a> - The
--   subscription's owner.
--   
--   <a>$sel:protocol:Subscription'</a>, <a>subscription_protocol</a> - The
--   subscription's protocol.
--   
--   <a>$sel:subscriptionArn:Subscription'</a>,
--   <a>subscription_subscriptionArn</a> - The subscription's ARN.
--   
--   <a>$sel:endpoint:Subscription'</a>, <a>subscription_endpoint</a> - The
--   subscription's endpoint (format depends on the protocol).
newSubscription :: Subscription

-- | The ARN of the subscription's topic.
subscription_topicArn :: Lens' Subscription (Maybe Text)

-- | The subscription's owner.
subscription_owner :: Lens' Subscription (Maybe Text)

-- | The subscription's protocol.
subscription_protocol :: Lens' Subscription (Maybe Text)

-- | The subscription's ARN.
subscription_subscriptionArn :: Lens' Subscription (Maybe Text)

-- | The subscription's endpoint (format depends on the protocol).
subscription_endpoint :: Lens' Subscription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SNS.Types.Subscription.Subscription
instance GHC.Show.Show Network.AWS.SNS.Types.Subscription.Subscription
instance GHC.Read.Read Network.AWS.SNS.Types.Subscription.Subscription
instance GHC.Classes.Eq Network.AWS.SNS.Types.Subscription.Subscription
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.Subscription.Subscription
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.Subscription.Subscription
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.Subscription.Subscription


module Network.AWS.SNS.Types.Tag

-- | The list of tags to be added to the specified topic.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The required key portion of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional value portion of the tag.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The required key portion of the
--   tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of the tag.
newTag :: Text -> Text -> Tag

-- | The required key portion of the tag.
tag_key :: Lens' Tag Text

-- | The optional value portion of the tag.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.SNS.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.SNS.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.SNS.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.SNS.Types.Tag.Tag
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Types.Tag.Tag


module Network.AWS.SNS.Types.Topic

-- | A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve
--   a topic's attributes, use <tt>GetTopicAttributes</tt>.
--   
--   <i>See:</i> <a>newTopic</a> smart constructor.
data Topic
Topic' :: Maybe Text -> Topic

-- | The topic's ARN.
[$sel:topicArn:Topic'] :: Topic -> Maybe Text

-- | Create a value of <a>Topic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Topic'</a>, <a>topic_topicArn</a> - The topic's ARN.
newTopic :: Topic

-- | The topic's ARN.
topic_topicArn :: Lens' Topic (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SNS.Types.Topic.Topic
instance GHC.Show.Show Network.AWS.SNS.Types.Topic.Topic
instance GHC.Read.Read Network.AWS.SNS.Types.Topic.Topic
instance GHC.Classes.Eq Network.AWS.SNS.Types.Topic.Topic
instance Network.AWS.Data.XML.FromXML Network.AWS.SNS.Types.Topic.Topic
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Types.Topic.Topic
instance Control.DeepSeq.NFData Network.AWS.SNS.Types.Topic.Topic


module Network.AWS.SNS.Types

-- | API version <tt>2010-03-31</tt> of the Amazon Simple Notification
--   Service SDK configuration.
defaultService :: Service

-- | The request was denied due to request throttling. For more information
--   about throttling, see <a>Limits</a> in the <i>Key Management Service
--   Developer Guide.</i>
_KMSThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the state of the specified resource
--   isn't valid for this request. For more information, see <a>How Key
--   State Affects Use of a Customer Master Key</a> in the <i>Key
--   Management Service Developer Guide</i>.
_KMSInvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested resource does not exist.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the specified entity or resource
--   can't be found.
_KMSNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_UserErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the rate at which requests have been submitted for this
--   action exceeds the limit for your account.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can't add more than 50 tags to a topic.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the specified phone number opted out of receiving SMS
--   messages from your account. You can't send SMS messages to phone
--   numbers that opt out.
_OptedOutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates an internal service error.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Web Services access key ID needs a subscription for the
--   service.
_KMSOptInRequired :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can't perform multiple operations on a tag simultaneously. Perform the
--   operations sequentially.
_ConcurrentAccessException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the customer already owns the maximum allowed number of
--   topics.
_TopicLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request doesn't comply with the IAM tag policy. Correct your
--   request and then retry it.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception error indicating platform application disabled.
_PlatformApplicationDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the customer already owns the maximum allowed number of
--   subscriptions.
_SubscriptionLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag has been added to a resource with the same ARN as a deleted
--   resource. Wait a short while and then retry the operation.
_StaleTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the user has been denied access to the requested
--   resource.
_AuthorizationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception error indicating endpoint disabled.
_EndpointDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a parameter in the request is invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The ciphertext references a key that doesn't exist or that you don't
--   have access to.
_KMSAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the number of filter polices in your account exceeds
--   the limit. To add more filter polices, submit an SNS Limit Increase
--   case in the Amazon Web Services Support Center.
_FilterPolicyLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the one-time password (OTP) used for verification is
--   invalid.
_VerificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can’t perform the action on the specified resource. Make sure that the
--   resource exists.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The credential signature isn't valid. You must use an HTTPS endpoint
--   and sign your request using Signature Version 4.
_InvalidSecurityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the specified customer master key
--   (CMK) isn't enabled.
_KMSDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Supported language code for sending OTP message
newtype LanguageCodeString
LanguageCodeString' :: Text -> LanguageCodeString
[fromLanguageCodeString] :: LanguageCodeString -> Text
pattern LanguageCodeString_De_DE :: LanguageCodeString
pattern LanguageCodeString_En_GB :: LanguageCodeString
pattern LanguageCodeString_En_US :: LanguageCodeString
pattern LanguageCodeString_Es_419 :: LanguageCodeString
pattern LanguageCodeString_Es_ES :: LanguageCodeString
pattern LanguageCodeString_Fr_CA :: LanguageCodeString
pattern LanguageCodeString_Fr_FR :: LanguageCodeString
pattern LanguageCodeString_It_IT :: LanguageCodeString
pattern LanguageCodeString_Ja_JP :: LanguageCodeString
pattern LanguageCodeString_Kr_KR :: LanguageCodeString
pattern LanguageCodeString_Pt_BR :: LanguageCodeString
pattern LanguageCodeString_Zh_CN :: LanguageCodeString
pattern LanguageCodeString_Zh_TW :: LanguageCodeString

-- | Enum listing out all supported number capabilities.
newtype NumberCapability
NumberCapability' :: Text -> NumberCapability
[fromNumberCapability] :: NumberCapability -> Text
pattern NumberCapability_MMS :: NumberCapability
pattern NumberCapability_SMS :: NumberCapability
pattern NumberCapability_VOICE :: NumberCapability

-- | Enum listing out all supported route types. The following enum values
--   are supported. 1. Transactional : Non-marketing traffic 2. Promotional
--   : Marketing 3. Premium : Premium routes for OTP delivery to the
--   carriers
newtype RouteType
RouteType' :: Text -> RouteType
[fromRouteType] :: RouteType -> Text
pattern RouteType_Premium :: RouteType
pattern RouteType_Promotional :: RouteType
pattern RouteType_Transactional :: RouteType

-- | Enum listing out all supported destination phone number verification
--   statuses. The following enum values are supported. 1. PENDING : The
--   destination phone number is pending verification. 2. VERIFIED : The
--   destination phone number is verified.
newtype SMSSandboxPhoneNumberVerificationStatus
SMSSandboxPhoneNumberVerificationStatus' :: Text -> SMSSandboxPhoneNumberVerificationStatus
[fromSMSSandboxPhoneNumberVerificationStatus] :: SMSSandboxPhoneNumberVerificationStatus -> Text
pattern SMSSandboxPhoneNumberVerificationStatus_Pending :: SMSSandboxPhoneNumberVerificationStatus
pattern SMSSandboxPhoneNumberVerificationStatus_Verified :: SMSSandboxPhoneNumberVerificationStatus

-- | Endpoint for mobile app and device.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe (HashMap Text Text) -> Maybe Text -> Endpoint

-- | Attributes for endpoint.
[$sel:attributes:Endpoint'] :: Endpoint -> Maybe (HashMap Text Text)

-- | EndpointArn for mobile app and device.
[$sel:endpointArn:Endpoint'] :: Endpoint -> Maybe Text

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Endpoint'</a>, <a>endpoint_attributes</a> -
--   Attributes for endpoint.
--   
--   <a>$sel:endpointArn:Endpoint'</a>, <a>endpoint_endpointArn</a> -
--   EndpointArn for mobile app and device.
newEndpoint :: Endpoint

-- | Attributes for endpoint.
endpoint_attributes :: Lens' Endpoint (Maybe (HashMap Text Text))

-- | EndpointArn for mobile app and device.
endpoint_endpointArn :: Lens' Endpoint (Maybe Text)

-- | The user-specified message attribute value. For string data types, the
--   value attribute has the same restrictions on the content as the
--   message body. For more information, see <a>Publish</a>.
--   
--   Name, type, and value must not be empty or null. In addition, the
--   message body should not be empty or null. All parts of the message
--   attribute, including name, type, and value, are included in the
--   message size restriction, which is currently 256 KB (262,144 bytes).
--   For more information, see <a>Amazon SNS message attributes</a> and
--   <a>Publishing to a mobile phone</a> in the <i>Amazon SNS Developer
--   Guide.</i>
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe Text -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
[$sel:stringValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Text

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.
[$sel:binaryValue:MessageAttributeValue'] :: MessageAttributeValue -> Maybe Base64

-- | Amazon SNS supports the following logical data types: String,
--   String.Array, Number, and Binary. For more information, see <a>Message
--   Attribute Data Types</a>.
[$sel:dataType:MessageAttributeValue'] :: MessageAttributeValue -> Text

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, for example, compressed data, encrypted data,
--   or images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SNS supports the
--   following logical data types: String, String.Array, Number, and
--   Binary. For more information, see <a>Message Attribute Data Types</a>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SNS supports the following logical data types: String,
--   String.Array, Number, and Binary. For more information, see <a>Message
--   Attribute Data Types</a>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text

-- | A list of phone numbers and their metadata.
--   
--   <i>See:</i> <a>newPhoneNumberInformation</a> smart constructor.
data PhoneNumberInformation
PhoneNumberInformation' :: Maybe Text -> Maybe Text -> Maybe RouteType -> Maybe ISO8601 -> Maybe [NumberCapability] -> Maybe Text -> PhoneNumberInformation

-- | The phone number.
[$sel:phoneNumber:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | The status of the phone number.
[$sel:status:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | The list of supported routes.
[$sel:routeType:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe RouteType

-- | The date and time when the phone number was created.
[$sel:createdAt:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe ISO8601

-- | The capabilities of each phone number.
[$sel:numberCapabilities:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe [NumberCapability]

-- | The two-character code for the country or region, in ISO 3166-1
--   alpha-2 format.
[$sel:iso2CountryCode:PhoneNumberInformation'] :: PhoneNumberInformation -> Maybe Text

-- | Create a value of <a>PhoneNumberInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_phoneNumber</a> - The phone number.
--   
--   <a>$sel:status:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_status</a> - The status of the phone number.
--   
--   <a>$sel:routeType:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_routeType</a> - The list of supported
--   routes.
--   
--   <a>$sel:createdAt:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_createdAt</a> - The date and time when the
--   phone number was created.
--   
--   <a>$sel:numberCapabilities:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_numberCapabilities</a> - The capabilities of
--   each phone number.
--   
--   <a>$sel:iso2CountryCode:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_iso2CountryCode</a> - The two-character code
--   for the country or region, in ISO 3166-1 alpha-2 format.
newPhoneNumberInformation :: PhoneNumberInformation

-- | The phone number.
phoneNumberInformation_phoneNumber :: Lens' PhoneNumberInformation (Maybe Text)

-- | The status of the phone number.
phoneNumberInformation_status :: Lens' PhoneNumberInformation (Maybe Text)

-- | The list of supported routes.
phoneNumberInformation_routeType :: Lens' PhoneNumberInformation (Maybe RouteType)

-- | The date and time when the phone number was created.
phoneNumberInformation_createdAt :: Lens' PhoneNumberInformation (Maybe UTCTime)

-- | The capabilities of each phone number.
phoneNumberInformation_numberCapabilities :: Lens' PhoneNumberInformation (Maybe [NumberCapability])

-- | The two-character code for the country or region, in ISO 3166-1
--   alpha-2 format.
phoneNumberInformation_iso2CountryCode :: Lens' PhoneNumberInformation (Maybe Text)

-- | Platform application object.
--   
--   <i>See:</i> <a>newPlatformApplication</a> smart constructor.
data PlatformApplication
PlatformApplication' :: Maybe Text -> Maybe (HashMap Text Text) -> PlatformApplication

-- | PlatformApplicationArn for platform application object.
[$sel:platformApplicationArn:PlatformApplication'] :: PlatformApplication -> Maybe Text

-- | Attributes for platform application object.
[$sel:attributes:PlatformApplication'] :: PlatformApplication -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlatformApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:PlatformApplication'</a>,
--   <a>platformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn for platform application object.
--   
--   <a>$sel:attributes:PlatformApplication'</a>,
--   <a>platformApplication_attributes</a> - Attributes for platform
--   application object.
newPlatformApplication :: PlatformApplication

-- | PlatformApplicationArn for platform application object.
platformApplication_platformApplicationArn :: Lens' PlatformApplication (Maybe Text)

-- | Attributes for platform application object.
platformApplication_attributes :: Lens' PlatformApplication (Maybe (HashMap Text Text))

-- | A verified or pending destination phone number in the SMS sandbox.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSMSSandboxPhoneNumber</a> smart constructor.
data SMSSandboxPhoneNumber
SMSSandboxPhoneNumber' :: Maybe Text -> Maybe SMSSandboxPhoneNumberVerificationStatus -> SMSSandboxPhoneNumber

-- | The destination phone number.
[$sel:phoneNumber:SMSSandboxPhoneNumber'] :: SMSSandboxPhoneNumber -> Maybe Text

-- | The destination phone number's verification status.
[$sel:status:SMSSandboxPhoneNumber'] :: SMSSandboxPhoneNumber -> Maybe SMSSandboxPhoneNumberVerificationStatus

-- | Create a value of <a>SMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number.
--   
--   <a>$sel:status:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_status</a> - The destination phone number's
--   verification status.
newSMSSandboxPhoneNumber :: SMSSandboxPhoneNumber

-- | The destination phone number.
sMSSandboxPhoneNumber_phoneNumber :: Lens' SMSSandboxPhoneNumber (Maybe Text)

-- | The destination phone number's verification status.
sMSSandboxPhoneNumber_status :: Lens' SMSSandboxPhoneNumber (Maybe SMSSandboxPhoneNumberVerificationStatus)

-- | A wrapper type for the attributes of an Amazon SNS subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Subscription

-- | The ARN of the subscription's topic.
[$sel:topicArn:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's owner.
[$sel:owner:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's protocol.
[$sel:protocol:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's ARN.
[$sel:subscriptionArn:Subscription'] :: Subscription -> Maybe Text

-- | The subscription's endpoint (format depends on the protocol).
[$sel:endpoint:Subscription'] :: Subscription -> Maybe Text

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Subscription'</a>, <a>subscription_topicArn</a> - The
--   ARN of the subscription's topic.
--   
--   <a>$sel:owner:Subscription'</a>, <a>subscription_owner</a> - The
--   subscription's owner.
--   
--   <a>$sel:protocol:Subscription'</a>, <a>subscription_protocol</a> - The
--   subscription's protocol.
--   
--   <a>$sel:subscriptionArn:Subscription'</a>,
--   <a>subscription_subscriptionArn</a> - The subscription's ARN.
--   
--   <a>$sel:endpoint:Subscription'</a>, <a>subscription_endpoint</a> - The
--   subscription's endpoint (format depends on the protocol).
newSubscription :: Subscription

-- | The ARN of the subscription's topic.
subscription_topicArn :: Lens' Subscription (Maybe Text)

-- | The subscription's owner.
subscription_owner :: Lens' Subscription (Maybe Text)

-- | The subscription's protocol.
subscription_protocol :: Lens' Subscription (Maybe Text)

-- | The subscription's ARN.
subscription_subscriptionArn :: Lens' Subscription (Maybe Text)

-- | The subscription's endpoint (format depends on the protocol).
subscription_endpoint :: Lens' Subscription (Maybe Text)

-- | The list of tags to be added to the specified topic.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The required key portion of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional value portion of the tag.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The required key portion of the
--   tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of the tag.
newTag :: Text -> Text -> Tag

-- | The required key portion of the tag.
tag_key :: Lens' Tag Text

-- | The optional value portion of the tag.
tag_value :: Lens' Tag Text

-- | A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve
--   a topic's attributes, use <tt>GetTopicAttributes</tt>.
--   
--   <i>See:</i> <a>newTopic</a> smart constructor.
data Topic
Topic' :: Maybe Text -> Topic

-- | The topic's ARN.
[$sel:topicArn:Topic'] :: Topic -> Maybe Text

-- | Create a value of <a>Topic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Topic'</a>, <a>topic_topicArn</a> - The topic's ARN.
newTopic :: Topic

-- | The topic's ARN.
topic_topicArn :: Lens' Topic (Maybe Text)


-- | Add tags to the specified Amazon SNS topic. For an overview, see
--   <a>Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.
--   
--   When you use topic tags, keep the following guidelines in mind:
--   
--   <ul>
--   <li>Adding more than 50 tags to a topic isn't recommended.</li>
--   <li>Tags don't have any semantic meaning. Amazon SNS interprets tags
--   as character strings.</li>
--   <li>Tags are case-sensitive.</li>
--   <li>A new tag with a key identical to that of an existing tag
--   overwrites the existing tag.</li>
--   <li>Tagging actions are limited to 10 TPS per account, per Region. If
--   your application requires a higher throughput, file a <a>technical
--   support request</a>.</li>
--   </ul>
module Network.AWS.SNS.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ARN of the topic to which to add tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to be added to the specified topic. A tag consists of a
--   required key and an optional value.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the topic to which to add tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be added to the specified topic. A tag consists of a required key and
--   an optional value.
newTagResource :: Text -> TagResource

-- | The ARN of the topic to which to add tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to be added to the specified topic. A tag consists of a
--   required key and an optional value.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.TagResource.TagResource
instance GHC.Show.Show Network.AWS.SNS.TagResource.TagResource
instance GHC.Read.Read Network.AWS.SNS.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.SNS.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.SNS.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.SNS.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.SNS.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.SNS.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.SNS.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.SNS.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.TagResource.TagResource


-- | Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is
--   HTTP/S or email, or if the endpoint and the topic are not in the same
--   account, the endpoint owner must run the <tt>ConfirmSubscription</tt>
--   action to confirm the subscription.
--   
--   You call the <tt>ConfirmSubscription</tt> action with the token from
--   the subscription response. Confirmation tokens are valid for three
--   days.
--   
--   This action is throttled at 100 transactions per second (TPS).
module Network.AWS.SNS.Subscribe

-- | Input for Subscribe action.
--   
--   <i>See:</i> <a>newSubscribe</a> smart constructor.
data Subscribe
Subscribe' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Text -> Text -> Text -> Subscribe

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>Subscribe</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
[$sel:attributes:Subscribe'] :: Subscribe -> Maybe (HashMap Text Text)

-- | Sets whether the response from the <tt>Subscribe</tt> request includes
--   the subscription ARN, even if the subscription is not yet confirmed.
--   
--   If you set this parameter to <tt>true</tt>, the response includes the
--   ARN in all cases, even if the subscription is not yet confirmed. In
--   addition to the ARN for confirmed subscriptions, the response also
--   includes the <tt>pending subscription</tt> ARN value for subscriptions
--   that aren't yet confirmed. A subscription becomes confirmed when the
--   subscriber calls the <tt>ConfirmSubscription</tt> action with a
--   confirmation token.
--   
--   The default value is <tt>false</tt>.
[$sel:returnSubscriptionArn:Subscribe'] :: Subscribe -> Maybe Bool

-- | The endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   <ul>
--   <li>For the <tt>http</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>http://</tt>.</li>
--   <li>For the <tt>https</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>https://</tt>.</li>
--   <li>For the <tt>email</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>email-json</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>sms</tt> protocol, the endpoint is a phone number of
--   an SMS-enabled device.</li>
--   <li>For the <tt>sqs</tt> protocol, the endpoint is the ARN of an
--   Amazon SQS queue.</li>
--   <li>For the <tt>application</tt> protocol, the endpoint is the
--   EndpointArn of a mobile app and device.</li>
--   <li>For the <tt>lambda</tt> protocol, the endpoint is the ARN of an
--   Lambda function.</li>
--   <li>For the <tt>firehose</tt> protocol, the endpoint is the ARN of an
--   Amazon Kinesis Data Firehose delivery stream.</li>
--   </ul>
[$sel:endpoint:Subscribe'] :: Subscribe -> Maybe Text

-- | The ARN of the topic you want to subscribe to.
[$sel:topicArn:Subscribe'] :: Subscribe -> Text

-- | The protocol that you want to use. Supported protocols include:
--   
--   <ul>
--   <li><tt>http</tt> – delivery of JSON-encoded message via HTTP
--   POST</li>
--   <li><tt>https</tt> – delivery of JSON-encoded message via HTTPS
--   POST</li>
--   <li><tt>email</tt> – delivery of message via SMTP</li>
--   <li><tt>email-json</tt> – delivery of JSON-encoded message via
--   SMTP</li>
--   <li><tt>sms</tt> – delivery of message via SMS</li>
--   <li><tt>sqs</tt> – delivery of JSON-encoded message to an Amazon SQS
--   queue</li>
--   <li><tt>application</tt> – delivery of JSON-encoded message to an
--   EndpointArn for a mobile app and device</li>
--   <li><tt>lambda</tt> – delivery of JSON-encoded message to an Lambda
--   function</li>
--   <li><tt>firehose</tt> – delivery of JSON-encoded message to an Amazon
--   Kinesis Data Firehose delivery stream.</li>
--   </ul>
[$sel:protocol:Subscribe'] :: Subscribe -> Text

-- | Create a value of <a>Subscribe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Subscribe'</a>, <a>subscribe_attributes</a> - A map
--   of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>Subscribe</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:returnSubscriptionArn:Subscribe'</a>,
--   <a>subscribe_returnSubscriptionArn</a> - Sets whether the response
--   from the <tt>Subscribe</tt> request includes the subscription ARN,
--   even if the subscription is not yet confirmed.
--   
--   If you set this parameter to <tt>true</tt>, the response includes the
--   ARN in all cases, even if the subscription is not yet confirmed. In
--   addition to the ARN for confirmed subscriptions, the response also
--   includes the <tt>pending subscription</tt> ARN value for subscriptions
--   that aren't yet confirmed. A subscription becomes confirmed when the
--   subscriber calls the <tt>ConfirmSubscription</tt> action with a
--   confirmation token.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:endpoint:Subscribe'</a>, <a>subscribe_endpoint</a> - The
--   endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   <ul>
--   <li>For the <tt>http</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>http://</tt>.</li>
--   <li>For the <tt>https</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>https://</tt>.</li>
--   <li>For the <tt>email</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>email-json</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>sms</tt> protocol, the endpoint is a phone number of
--   an SMS-enabled device.</li>
--   <li>For the <tt>sqs</tt> protocol, the endpoint is the ARN of an
--   Amazon SQS queue.</li>
--   <li>For the <tt>application</tt> protocol, the endpoint is the
--   EndpointArn of a mobile app and device.</li>
--   <li>For the <tt>lambda</tt> protocol, the endpoint is the ARN of an
--   Lambda function.</li>
--   <li>For the <tt>firehose</tt> protocol, the endpoint is the ARN of an
--   Amazon Kinesis Data Firehose delivery stream.</li>
--   </ul>
--   
--   <a>$sel:topicArn:Subscribe'</a>, <a>subscribe_topicArn</a> - The ARN
--   of the topic you want to subscribe to.
--   
--   <a>$sel:protocol:Subscribe'</a>, <a>subscribe_protocol</a> - The
--   protocol that you want to use. Supported protocols include:
--   
--   <ul>
--   <li><tt>http</tt> – delivery of JSON-encoded message via HTTP
--   POST</li>
--   <li><tt>https</tt> – delivery of JSON-encoded message via HTTPS
--   POST</li>
--   <li><tt>email</tt> – delivery of message via SMTP</li>
--   <li><tt>email-json</tt> – delivery of JSON-encoded message via
--   SMTP</li>
--   <li><tt>sms</tt> – delivery of message via SMS</li>
--   <li><tt>sqs</tt> – delivery of JSON-encoded message to an Amazon SQS
--   queue</li>
--   <li><tt>application</tt> – delivery of JSON-encoded message to an
--   EndpointArn for a mobile app and device</li>
--   <li><tt>lambda</tt> – delivery of JSON-encoded message to an Lambda
--   function</li>
--   <li><tt>firehose</tt> – delivery of JSON-encoded message to an Amazon
--   Kinesis Data Firehose delivery stream.</li>
--   </ul>
newSubscribe :: Text -> Text -> Subscribe

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>Subscribe</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
subscribe_attributes :: Lens' Subscribe (Maybe (HashMap Text Text))

-- | Sets whether the response from the <tt>Subscribe</tt> request includes
--   the subscription ARN, even if the subscription is not yet confirmed.
--   
--   If you set this parameter to <tt>true</tt>, the response includes the
--   ARN in all cases, even if the subscription is not yet confirmed. In
--   addition to the ARN for confirmed subscriptions, the response also
--   includes the <tt>pending subscription</tt> ARN value for subscriptions
--   that aren't yet confirmed. A subscription becomes confirmed when the
--   subscriber calls the <tt>ConfirmSubscription</tt> action with a
--   confirmation token.
--   
--   The default value is <tt>false</tt>.
subscribe_returnSubscriptionArn :: Lens' Subscribe (Maybe Bool)

-- | The endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   <ul>
--   <li>For the <tt>http</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>http://</tt>.</li>
--   <li>For the <tt>https</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>https://</tt>.</li>
--   <li>For the <tt>email</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>email-json</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>sms</tt> protocol, the endpoint is a phone number of
--   an SMS-enabled device.</li>
--   <li>For the <tt>sqs</tt> protocol, the endpoint is the ARN of an
--   Amazon SQS queue.</li>
--   <li>For the <tt>application</tt> protocol, the endpoint is the
--   EndpointArn of a mobile app and device.</li>
--   <li>For the <tt>lambda</tt> protocol, the endpoint is the ARN of an
--   Lambda function.</li>
--   <li>For the <tt>firehose</tt> protocol, the endpoint is the ARN of an
--   Amazon Kinesis Data Firehose delivery stream.</li>
--   </ul>
subscribe_endpoint :: Lens' Subscribe (Maybe Text)

-- | The ARN of the topic you want to subscribe to.
subscribe_topicArn :: Lens' Subscribe Text

-- | The protocol that you want to use. Supported protocols include:
--   
--   <ul>
--   <li><tt>http</tt> – delivery of JSON-encoded message via HTTP
--   POST</li>
--   <li><tt>https</tt> – delivery of JSON-encoded message via HTTPS
--   POST</li>
--   <li><tt>email</tt> – delivery of message via SMTP</li>
--   <li><tt>email-json</tt> – delivery of JSON-encoded message via
--   SMTP</li>
--   <li><tt>sms</tt> – delivery of message via SMS</li>
--   <li><tt>sqs</tt> – delivery of JSON-encoded message to an Amazon SQS
--   queue</li>
--   <li><tt>application</tt> – delivery of JSON-encoded message to an
--   EndpointArn for a mobile app and device</li>
--   <li><tt>lambda</tt> – delivery of JSON-encoded message to an Lambda
--   function</li>
--   <li><tt>firehose</tt> – delivery of JSON-encoded message to an Amazon
--   Kinesis Data Firehose delivery stream.</li>
--   </ul>
subscribe_protocol :: Lens' Subscribe Text

-- | Response for Subscribe action.
--   
--   <i>See:</i> <a>newSubscribeResponse</a> smart constructor.
data SubscribeResponse
SubscribeResponse' :: Maybe Text -> Int -> SubscribeResponse

-- | The ARN of the subscription if it is confirmed, or the string "pending
--   confirmation" if the subscription requires confirmation. However, if
--   the API request parameter <tt>ReturnSubscriptionArn</tt> is true, then
--   the value is always the subscription ARN, even if the subscription
--   requires confirmation.
[$sel:subscriptionArn:SubscribeResponse'] :: SubscribeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SubscribeResponse'] :: SubscribeResponse -> Int

-- | Create a value of <a>SubscribeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:SubscribeResponse'</a>,
--   <a>subscribeResponse_subscriptionArn</a> - The ARN of the subscription
--   if it is confirmed, or the string "pending confirmation" if the
--   subscription requires confirmation. However, if the API request
--   parameter <tt>ReturnSubscriptionArn</tt> is true, then the value is
--   always the subscription ARN, even if the subscription requires
--   confirmation.
--   
--   <a>$sel:httpStatus:SubscribeResponse'</a>,
--   <a>subscribeResponse_httpStatus</a> - The response's http status code.
newSubscribeResponse :: Int -> SubscribeResponse

-- | The ARN of the subscription if it is confirmed, or the string "pending
--   confirmation" if the subscription requires confirmation. However, if
--   the API request parameter <tt>ReturnSubscriptionArn</tt> is true, then
--   the value is always the subscription ARN, even if the subscription
--   requires confirmation.
subscribeResponse_subscriptionArn :: Lens' SubscribeResponse (Maybe Text)

-- | The response's http status code.
subscribeResponse_httpStatus :: Lens' SubscribeResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.Subscribe.Subscribe
instance GHC.Show.Show Network.AWS.SNS.Subscribe.Subscribe
instance GHC.Read.Read Network.AWS.SNS.Subscribe.Subscribe
instance GHC.Classes.Eq Network.AWS.SNS.Subscribe.Subscribe
instance GHC.Generics.Generic Network.AWS.SNS.Subscribe.SubscribeResponse
instance GHC.Show.Show Network.AWS.SNS.Subscribe.SubscribeResponse
instance GHC.Read.Read Network.AWS.SNS.Subscribe.SubscribeResponse
instance GHC.Classes.Eq Network.AWS.SNS.Subscribe.SubscribeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.Subscribe.Subscribe
instance Control.DeepSeq.NFData Network.AWS.SNS.Subscribe.SubscribeResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Subscribe.Subscribe
instance Control.DeepSeq.NFData Network.AWS.SNS.Subscribe.Subscribe
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.Subscribe.Subscribe
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.Subscribe.Subscribe
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Subscribe.Subscribe


-- | Allows a topic owner to set an attribute of the topic to a new value.
module Network.AWS.SNS.SetTopicAttributes

-- | Input for SetTopicAttributes action.
--   
--   <i>See:</i> <a>newSetTopicAttributes</a> smart constructor.
data SetTopicAttributes
SetTopicAttributes' :: Maybe Text -> Text -> Text -> SetTopicAttributes

-- | The new value for the attribute.
[$sel:attributeValue:SetTopicAttributes'] :: SetTopicAttributes -> Maybe Text

-- | The ARN of the topic to modify.
[$sel:topicArn:SetTopicAttributes'] :: SetTopicAttributes -> Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetTopicAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
[$sel:attributeName:SetTopicAttributes'] :: SetTopicAttributes -> Text

-- | Create a value of <a>SetTopicAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_attributeValue</a> - The new value for the
--   attribute.
--   
--   <a>$sel:topicArn:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_topicArn</a> - The ARN of the topic to modify.
--   
--   <a>$sel:attributeName:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_attributeName</a> - A map of attributes with
--   their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetTopicAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
newSetTopicAttributes :: Text -> Text -> SetTopicAttributes

-- | The new value for the attribute.
setTopicAttributes_attributeValue :: Lens' SetTopicAttributes (Maybe Text)

-- | The ARN of the topic to modify.
setTopicAttributes_topicArn :: Lens' SetTopicAttributes Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetTopicAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
setTopicAttributes_attributeName :: Lens' SetTopicAttributes Text

-- | <i>See:</i> <a>newSetTopicAttributesResponse</a> smart constructor.
data SetTopicAttributesResponse
SetTopicAttributesResponse' :: SetTopicAttributesResponse

-- | Create a value of <a>SetTopicAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetTopicAttributesResponse :: SetTopicAttributesResponse
instance GHC.Generics.Generic Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance GHC.Show.Show Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance GHC.Read.Read Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance GHC.Classes.Eq Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance GHC.Generics.Generic Network.AWS.SNS.SetTopicAttributes.SetTopicAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.SetTopicAttributes.SetTopicAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.SetTopicAttributes.SetTopicAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.SetTopicAttributes.SetTopicAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetTopicAttributes.SetTopicAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.SetTopicAttributes.SetTopicAttributes


-- | Allows a subscription owner to set an attribute of the subscription to
--   a new value.
module Network.AWS.SNS.SetSubscriptionAttributes

-- | Input for SetSubscriptionAttributes action.
--   
--   <i>See:</i> <a>newSetSubscriptionAttributes</a> smart constructor.
data SetSubscriptionAttributes
SetSubscriptionAttributes' :: Maybe Text -> Text -> Text -> SetSubscriptionAttributes

-- | The new value for the attribute in JSON format.
[$sel:attributeValue:SetSubscriptionAttributes'] :: SetSubscriptionAttributes -> Maybe Text

-- | The ARN of the subscription to modify.
[$sel:subscriptionArn:SetSubscriptionAttributes'] :: SetSubscriptionAttributes -> Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that this action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
[$sel:attributeName:SetSubscriptionAttributes'] :: SetSubscriptionAttributes -> Text

-- | Create a value of <a>SetSubscriptionAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_attributeValue</a> - The new value for
--   the attribute in JSON format.
--   
--   <a>$sel:subscriptionArn:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_subscriptionArn</a> - The ARN of the
--   subscription to modify.
--   
--   <a>$sel:attributeName:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_attributeName</a> - A map of attributes
--   with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that this action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
newSetSubscriptionAttributes :: Text -> Text -> SetSubscriptionAttributes

-- | The new value for the attribute in JSON format.
setSubscriptionAttributes_attributeValue :: Lens' SetSubscriptionAttributes (Maybe Text)

-- | The ARN of the subscription to modify.
setSubscriptionAttributes_subscriptionArn :: Lens' SetSubscriptionAttributes Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that this action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
setSubscriptionAttributes_attributeName :: Lens' SetSubscriptionAttributes Text

-- | <i>See:</i> <a>newSetSubscriptionAttributesResponse</a> smart
--   constructor.
data SetSubscriptionAttributesResponse
SetSubscriptionAttributesResponse' :: SetSubscriptionAttributesResponse

-- | Create a value of <a>SetSubscriptionAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetSubscriptionAttributesResponse :: SetSubscriptionAttributesResponse
instance GHC.Generics.Generic Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance GHC.Show.Show Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance GHC.Read.Read Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance GHC.Classes.Eq Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance GHC.Generics.Generic Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.SetSubscriptionAttributes.SetSubscriptionAttributes


-- | Use this request to set the default settings for sending SMS messages
--   and receiving daily SMS usage reports.
--   
--   You can override some of these settings for a single message when you
--   use the <tt>Publish</tt> action with the
--   <tt>MessageAttributes.entry.N</tt> parameter. For more information,
--   see <a>Publishing to a mobile phone</a> in the <i>Amazon SNS Developer
--   Guide</i>.
--   
--   To use this operation, you must grant the Amazon SNS service principal
--   (<tt>sns.amazonaws.com</tt>) permission to perform the
--   <tt>s3:ListBucket</tt> action.
module Network.AWS.SNS.SetSMSAttributes

-- | The input for the SetSMSAttributes action.
--   
--   <i>See:</i> <a>newSetSMSAttributes</a> smart constructor.
data SetSMSAttributes
SetSMSAttributes' :: HashMap Text Text -> SetSMSAttributes

-- | The default settings for sending SMS messages from your account. You
--   can set values for the following attribute names:
--   
--   <tt>MonthlySpendLimit</tt> – The maximum amount in USD that you are
--   willing to spend each month to send SMS messages. When Amazon SNS
--   determines that sending an SMS message would incur a cost that exceeds
--   this limit, it stops sending SMS messages within minutes.
--   
--   Amazon SNS stops sending SMS messages within minutes of the limit
--   being crossed. During that interval, if you continue to send SMS
--   messages, you will incur costs that exceed your limit.
--   
--   By default, the spend limit is set to the maximum allowed by Amazon
--   SNS. If you want to raise the limit, submit an <a>SNS Limit Increase
--   case</a>. For <b>New limit value</b>, enter your desired monthly spend
--   limit. In the <b>Use Case Description</b> field, explain that you are
--   requesting an SMS monthly spend limit increase.
--   
--   <tt>DeliveryStatusIAMRole</tt> – The ARN of the IAM role that allows
--   Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For
--   each SMS message that you send, Amazon SNS writes a log that includes
--   the message price, the success or failure status, the reason for
--   failure (if the message failed), the message dwell time, and other
--   information.
--   
--   <tt>DeliveryStatusSuccessSamplingRate</tt> – The percentage of
--   successful SMS deliveries for which Amazon SNS will write logs in
--   CloudWatch Logs. The value can be an integer from 0 - 100. For
--   example, to write logs only for failed deliveries, set this value to
--   <tt>0</tt>. To write logs for 10% of your successful deliveries, set
--   it to <tt>10</tt>.
--   
--   <tt>DefaultSenderID</tt> – A string, such as your business brand, that
--   is displayed as the sender on the receiving device. Support for sender
--   IDs varies by country. The sender ID can be 1 - 11 alphanumeric
--   characters, and it must contain at least one letter.
--   
--   <tt>DefaultSMSType</tt> – The type of SMS message that you will send
--   by default. You can assign the following values:
--   
--   <ul>
--   <li><tt>Promotional</tt> – (Default) Noncritical messages, such as
--   marketing messages. Amazon SNS optimizes the message delivery to incur
--   the lowest cost.</li>
--   <li><tt>Transactional</tt> – Critical messages that support customer
--   transactions, such as one-time passcodes for multi-factor
--   authentication. Amazon SNS optimizes the message delivery to achieve
--   the highest reliability.</li>
--   </ul>
--   
--   <tt>UsageReportS3Bucket</tt> – The name of the Amazon S3 bucket to
--   receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS
--   will deliver a usage report as a CSV file to the bucket. The report
--   includes the following information for each SMS message that was
--   successfully delivered by your account:
--   
--   <ul>
--   <li>Time that the message was published (in UTC)</li>
--   <li>Message ID</li>
--   <li>Destination phone number</li>
--   <li>Message type</li>
--   <li>Delivery status</li>
--   <li>Message price (in USD)</li>
--   <li>Part number (a message is split into multiple parts if it is too
--   long for a single message)</li>
--   <li>Total number of parts</li>
--   </ul>
--   
--   To receive the report, the bucket must have a policy that allows the
--   Amazon SNS service principal to perform the <tt>s3:PutObject</tt> and
--   <tt>s3:GetBucketLocation</tt> actions.
--   
--   For an example bucket policy and usage report, see <a>Monitoring SMS
--   Activity</a> in the <i>Amazon SNS Developer Guide</i>.
[$sel:attributes:SetSMSAttributes'] :: SetSMSAttributes -> HashMap Text Text

-- | Create a value of <a>SetSMSAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:SetSMSAttributes'</a>,
--   <a>setSMSAttributes_attributes</a> - The default settings for sending
--   SMS messages from your account. You can set values for the following
--   attribute names:
--   
--   <tt>MonthlySpendLimit</tt> – The maximum amount in USD that you are
--   willing to spend each month to send SMS messages. When Amazon SNS
--   determines that sending an SMS message would incur a cost that exceeds
--   this limit, it stops sending SMS messages within minutes.
--   
--   Amazon SNS stops sending SMS messages within minutes of the limit
--   being crossed. During that interval, if you continue to send SMS
--   messages, you will incur costs that exceed your limit.
--   
--   By default, the spend limit is set to the maximum allowed by Amazon
--   SNS. If you want to raise the limit, submit an <a>SNS Limit Increase
--   case</a>. For <b>New limit value</b>, enter your desired monthly spend
--   limit. In the <b>Use Case Description</b> field, explain that you are
--   requesting an SMS monthly spend limit increase.
--   
--   <tt>DeliveryStatusIAMRole</tt> – The ARN of the IAM role that allows
--   Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For
--   each SMS message that you send, Amazon SNS writes a log that includes
--   the message price, the success or failure status, the reason for
--   failure (if the message failed), the message dwell time, and other
--   information.
--   
--   <tt>DeliveryStatusSuccessSamplingRate</tt> – The percentage of
--   successful SMS deliveries for which Amazon SNS will write logs in
--   CloudWatch Logs. The value can be an integer from 0 - 100. For
--   example, to write logs only for failed deliveries, set this value to
--   <tt>0</tt>. To write logs for 10% of your successful deliveries, set
--   it to <tt>10</tt>.
--   
--   <tt>DefaultSenderID</tt> – A string, such as your business brand, that
--   is displayed as the sender on the receiving device. Support for sender
--   IDs varies by country. The sender ID can be 1 - 11 alphanumeric
--   characters, and it must contain at least one letter.
--   
--   <tt>DefaultSMSType</tt> – The type of SMS message that you will send
--   by default. You can assign the following values:
--   
--   <ul>
--   <li><tt>Promotional</tt> – (Default) Noncritical messages, such as
--   marketing messages. Amazon SNS optimizes the message delivery to incur
--   the lowest cost.</li>
--   <li><tt>Transactional</tt> – Critical messages that support customer
--   transactions, such as one-time passcodes for multi-factor
--   authentication. Amazon SNS optimizes the message delivery to achieve
--   the highest reliability.</li>
--   </ul>
--   
--   <tt>UsageReportS3Bucket</tt> – The name of the Amazon S3 bucket to
--   receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS
--   will deliver a usage report as a CSV file to the bucket. The report
--   includes the following information for each SMS message that was
--   successfully delivered by your account:
--   
--   <ul>
--   <li>Time that the message was published (in UTC)</li>
--   <li>Message ID</li>
--   <li>Destination phone number</li>
--   <li>Message type</li>
--   <li>Delivery status</li>
--   <li>Message price (in USD)</li>
--   <li>Part number (a message is split into multiple parts if it is too
--   long for a single message)</li>
--   <li>Total number of parts</li>
--   </ul>
--   
--   To receive the report, the bucket must have a policy that allows the
--   Amazon SNS service principal to perform the <tt>s3:PutObject</tt> and
--   <tt>s3:GetBucketLocation</tt> actions.
--   
--   For an example bucket policy and usage report, see <a>Monitoring SMS
--   Activity</a> in the <i>Amazon SNS Developer Guide</i>.
newSetSMSAttributes :: SetSMSAttributes

-- | The default settings for sending SMS messages from your account. You
--   can set values for the following attribute names:
--   
--   <tt>MonthlySpendLimit</tt> – The maximum amount in USD that you are
--   willing to spend each month to send SMS messages. When Amazon SNS
--   determines that sending an SMS message would incur a cost that exceeds
--   this limit, it stops sending SMS messages within minutes.
--   
--   Amazon SNS stops sending SMS messages within minutes of the limit
--   being crossed. During that interval, if you continue to send SMS
--   messages, you will incur costs that exceed your limit.
--   
--   By default, the spend limit is set to the maximum allowed by Amazon
--   SNS. If you want to raise the limit, submit an <a>SNS Limit Increase
--   case</a>. For <b>New limit value</b>, enter your desired monthly spend
--   limit. In the <b>Use Case Description</b> field, explain that you are
--   requesting an SMS monthly spend limit increase.
--   
--   <tt>DeliveryStatusIAMRole</tt> – The ARN of the IAM role that allows
--   Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For
--   each SMS message that you send, Amazon SNS writes a log that includes
--   the message price, the success or failure status, the reason for
--   failure (if the message failed), the message dwell time, and other
--   information.
--   
--   <tt>DeliveryStatusSuccessSamplingRate</tt> – The percentage of
--   successful SMS deliveries for which Amazon SNS will write logs in
--   CloudWatch Logs. The value can be an integer from 0 - 100. For
--   example, to write logs only for failed deliveries, set this value to
--   <tt>0</tt>. To write logs for 10% of your successful deliveries, set
--   it to <tt>10</tt>.
--   
--   <tt>DefaultSenderID</tt> – A string, such as your business brand, that
--   is displayed as the sender on the receiving device. Support for sender
--   IDs varies by country. The sender ID can be 1 - 11 alphanumeric
--   characters, and it must contain at least one letter.
--   
--   <tt>DefaultSMSType</tt> – The type of SMS message that you will send
--   by default. You can assign the following values:
--   
--   <ul>
--   <li><tt>Promotional</tt> – (Default) Noncritical messages, such as
--   marketing messages. Amazon SNS optimizes the message delivery to incur
--   the lowest cost.</li>
--   <li><tt>Transactional</tt> – Critical messages that support customer
--   transactions, such as one-time passcodes for multi-factor
--   authentication. Amazon SNS optimizes the message delivery to achieve
--   the highest reliability.</li>
--   </ul>
--   
--   <tt>UsageReportS3Bucket</tt> – The name of the Amazon S3 bucket to
--   receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS
--   will deliver a usage report as a CSV file to the bucket. The report
--   includes the following information for each SMS message that was
--   successfully delivered by your account:
--   
--   <ul>
--   <li>Time that the message was published (in UTC)</li>
--   <li>Message ID</li>
--   <li>Destination phone number</li>
--   <li>Message type</li>
--   <li>Delivery status</li>
--   <li>Message price (in USD)</li>
--   <li>Part number (a message is split into multiple parts if it is too
--   long for a single message)</li>
--   <li>Total number of parts</li>
--   </ul>
--   
--   To receive the report, the bucket must have a policy that allows the
--   Amazon SNS service principal to perform the <tt>s3:PutObject</tt> and
--   <tt>s3:GetBucketLocation</tt> actions.
--   
--   For an example bucket policy and usage report, see <a>Monitoring SMS
--   Activity</a> in the <i>Amazon SNS Developer Guide</i>.
setSMSAttributes_attributes :: Lens' SetSMSAttributes (HashMap Text Text)

-- | The response for the SetSMSAttributes action.
--   
--   <i>See:</i> <a>newSetSMSAttributesResponse</a> smart constructor.
data SetSMSAttributesResponse
SetSMSAttributesResponse' :: Int -> SetSMSAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:SetSMSAttributesResponse'] :: SetSMSAttributesResponse -> Int

-- | Create a value of <a>SetSMSAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetSMSAttributesResponse'</a>,
--   <a>setSMSAttributesResponse_httpStatus</a> - The response's http
--   status code.
newSetSMSAttributesResponse :: Int -> SetSMSAttributesResponse

-- | The response's http status code.
setSMSAttributesResponse_httpStatus :: Lens' SetSMSAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance GHC.Show.Show Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance GHC.Read.Read Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance GHC.Classes.Eq Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance GHC.Generics.Generic Network.AWS.SNS.SetSMSAttributes.SetSMSAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.SetSMSAttributes.SetSMSAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.SetSMSAttributes.SetSMSAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.SetSMSAttributes.SetSMSAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetSMSAttributes.SetSMSAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.SetSMSAttributes.SetSMSAttributes


-- | Sets the attributes of the platform application object for the
--   supported push notification services, such as APNS and GCM (Firebase
--   Cloud Messaging). For more information, see <a>Using Amazon SNS Mobile
--   Push Notifications</a>. For information on configuring attributes for
--   message delivery status, see <a>Using Amazon SNS Application
--   Attributes for Message Delivery Status</a>.
module Network.AWS.SNS.SetPlatformApplicationAttributes

-- | Input for SetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newSetPlatformApplicationAttributes</a> smart
--   constructor.
data SetPlatformApplicationAttributes
SetPlatformApplicationAttributes' :: Text -> HashMap Text Text -> SetPlatformApplicationAttributes

-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.
[$sel:platformApplicationArn:SetPlatformApplicationAttributes'] :: SetPlatformApplicationAttributes -> Text

-- | A map of the platform application attributes. Attributes in this map
--   include the following:
--   
--   <ul>
--   <li><tt>PlatformCredential</tt> – The credential received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformCredential</tt> is <tt>private key</tt>. For <tt>GCM</tt>
--   (Firebase Cloud Messaging), <tt>PlatformCredential</tt> is <tt>API
--   key</tt>. For <tt>ADM</tt>, <tt>PlatformCredential</tt> is <tt>client
--   secret</tt>.</li>
--   <li><tt>PlatformPrincipal</tt> – The principal received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt>. For
--   <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt>. For <tt>ADM</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>client id</tt>.</li>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which
--   <tt>EndpointCreated</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which
--   <tt>EndpointDeleted</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which
--   <tt>EndpointUpdate</tt> event notifications are sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which
--   <tt>DeliveryFailure</tt> event notifications are sent upon Direct
--   Publish delivery failure (permanent) to one of the application's
--   endpoints.</li>
--   <li><tt>SuccessFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>FailureFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>SuccessFeedbackSampleRate</tt> – Sample rate percentage
--   (0-100) of successfully delivered messages.</li>
--   </ul>
[$sel:attributes:SetPlatformApplicationAttributes'] :: SetPlatformApplicationAttributes -> HashMap Text Text

-- | Create a value of <a>SetPlatformApplicationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:SetPlatformApplicationAttributes'</a>,
--   <a>setPlatformApplicationAttributes_platformApplicationArn</a> -
--   PlatformApplicationArn for SetPlatformApplicationAttributes action.
--   
--   <a>$sel:attributes:SetPlatformApplicationAttributes'</a>,
--   <a>setPlatformApplicationAttributes_attributes</a> - A map of the
--   platform application attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>PlatformCredential</tt> – The credential received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformCredential</tt> is <tt>private key</tt>. For <tt>GCM</tt>
--   (Firebase Cloud Messaging), <tt>PlatformCredential</tt> is <tt>API
--   key</tt>. For <tt>ADM</tt>, <tt>PlatformCredential</tt> is <tt>client
--   secret</tt>.</li>
--   <li><tt>PlatformPrincipal</tt> – The principal received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt>. For
--   <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt>. For <tt>ADM</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>client id</tt>.</li>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which
--   <tt>EndpointCreated</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which
--   <tt>EndpointDeleted</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which
--   <tt>EndpointUpdate</tt> event notifications are sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which
--   <tt>DeliveryFailure</tt> event notifications are sent upon Direct
--   Publish delivery failure (permanent) to one of the application's
--   endpoints.</li>
--   <li><tt>SuccessFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>FailureFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>SuccessFeedbackSampleRate</tt> – Sample rate percentage
--   (0-100) of successfully delivered messages.</li>
--   </ul>
newSetPlatformApplicationAttributes :: Text -> SetPlatformApplicationAttributes

-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.
setPlatformApplicationAttributes_platformApplicationArn :: Lens' SetPlatformApplicationAttributes Text

-- | A map of the platform application attributes. Attributes in this map
--   include the following:
--   
--   <ul>
--   <li><tt>PlatformCredential</tt> – The credential received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformCredential</tt> is <tt>private key</tt>. For <tt>GCM</tt>
--   (Firebase Cloud Messaging), <tt>PlatformCredential</tt> is <tt>API
--   key</tt>. For <tt>ADM</tt>, <tt>PlatformCredential</tt> is <tt>client
--   secret</tt>.</li>
--   <li><tt>PlatformPrincipal</tt> – The principal received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt>. For
--   <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt>. For <tt>ADM</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>client id</tt>.</li>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which
--   <tt>EndpointCreated</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which
--   <tt>EndpointDeleted</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which
--   <tt>EndpointUpdate</tt> event notifications are sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which
--   <tt>DeliveryFailure</tt> event notifications are sent upon Direct
--   Publish delivery failure (permanent) to one of the application's
--   endpoints.</li>
--   <li><tt>SuccessFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>FailureFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>SuccessFeedbackSampleRate</tt> – Sample rate percentage
--   (0-100) of successfully delivered messages.</li>
--   </ul>
setPlatformApplicationAttributes_attributes :: Lens' SetPlatformApplicationAttributes (HashMap Text Text)

-- | <i>See:</i> <a>newSetPlatformApplicationAttributesResponse</a> smart
--   constructor.
data SetPlatformApplicationAttributesResponse
SetPlatformApplicationAttributesResponse' :: SetPlatformApplicationAttributesResponse

-- | Create a value of <a>SetPlatformApplicationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetPlatformApplicationAttributesResponse :: SetPlatformApplicationAttributesResponse
instance GHC.Generics.Generic Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance GHC.Show.Show Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance GHC.Read.Read Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance GHC.Classes.Eq Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance GHC.Generics.Generic Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.SetPlatformApplicationAttributes.SetPlatformApplicationAttributes


-- | Sets the attributes for an endpoint for a device on one of the
--   supported push notification services, such as GCM (Firebase Cloud
--   Messaging) and APNS. For more information, see <a>Using Amazon SNS
--   Mobile Push Notifications</a>.
module Network.AWS.SNS.SetEndpointAttributes

-- | Input for SetEndpointAttributes action.
--   
--   <i>See:</i> <a>newSetEndpointAttributes</a> smart constructor.
data SetEndpointAttributes
SetEndpointAttributes' :: Text -> HashMap Text Text -> SetEndpointAttributes

-- | EndpointArn used for SetEndpointAttributes action.
[$sel:endpointArn:SetEndpointAttributes'] :: SetEndpointAttributes -> Text

-- | A map of the endpoint attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.</li>
--   </ul>
[$sel:attributes:SetEndpointAttributes'] :: SetEndpointAttributes -> HashMap Text Text

-- | Create a value of <a>SetEndpointAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:SetEndpointAttributes'</a>,
--   <a>setEndpointAttributes_endpointArn</a> - EndpointArn used for
--   SetEndpointAttributes action.
--   
--   <a>$sel:attributes:SetEndpointAttributes'</a>,
--   <a>setEndpointAttributes_attributes</a> - A map of the endpoint
--   attributes. Attributes in this map include the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.</li>
--   </ul>
newSetEndpointAttributes :: Text -> SetEndpointAttributes

-- | EndpointArn used for SetEndpointAttributes action.
setEndpointAttributes_endpointArn :: Lens' SetEndpointAttributes Text

-- | A map of the endpoint attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.</li>
--   </ul>
setEndpointAttributes_attributes :: Lens' SetEndpointAttributes (HashMap Text Text)

-- | <i>See:</i> <a>newSetEndpointAttributesResponse</a> smart constructor.
data SetEndpointAttributesResponse
SetEndpointAttributesResponse' :: SetEndpointAttributesResponse

-- | Create a value of <a>SetEndpointAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetEndpointAttributesResponse :: SetEndpointAttributesResponse
instance GHC.Generics.Generic Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance GHC.Show.Show Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance GHC.Read.Read Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance GHC.Classes.Eq Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance GHC.Generics.Generic Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.SetEndpointAttributes.SetEndpointAttributes


-- | Removes a statement from a topic's access control policy.
module Network.AWS.SNS.RemovePermission

-- | Input for RemovePermission action.
--   
--   <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Text -> Text -> RemovePermission

-- | The ARN of the topic whose access control policy you wish to modify.
[$sel:topicArn:RemovePermission'] :: RemovePermission -> Text

-- | The unique label of the statement you want to remove.
[$sel:label:RemovePermission'] :: RemovePermission -> Text

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:RemovePermission'</a>,
--   <a>removePermission_topicArn</a> - The ARN of the topic whose access
--   control policy you wish to modify.
--   
--   <a>$sel:label:RemovePermission'</a>, <a>removePermission_label</a> -
--   The unique label of the statement you want to remove.
newRemovePermission :: Text -> Text -> RemovePermission

-- | The ARN of the topic whose access control policy you wish to modify.
removePermission_topicArn :: Lens' RemovePermission Text

-- | The unique label of the statement you want to remove.
removePermission_label :: Lens' RemovePermission Text

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse
instance GHC.Generics.Generic Network.AWS.SNS.RemovePermission.RemovePermission
instance GHC.Show.Show Network.AWS.SNS.RemovePermission.RemovePermission
instance GHC.Read.Read Network.AWS.SNS.RemovePermission.RemovePermission
instance GHC.Classes.Eq Network.AWS.SNS.RemovePermission.RemovePermission
instance GHC.Generics.Generic Network.AWS.SNS.RemovePermission.RemovePermissionResponse
instance GHC.Show.Show Network.AWS.SNS.RemovePermission.RemovePermissionResponse
instance GHC.Read.Read Network.AWS.SNS.RemovePermission.RemovePermissionResponse
instance GHC.Classes.Eq Network.AWS.SNS.RemovePermission.RemovePermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Network.AWS.SNS.RemovePermission.RemovePermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Network.AWS.SNS.RemovePermission.RemovePermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.RemovePermission.RemovePermission
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.RemovePermission.RemovePermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.RemovePermission.RemovePermission


-- | Sends a message to an Amazon SNS topic, a text message (SMS message)
--   directly to a phone number, or a message to a mobile platform endpoint
--   (when you specify the <tt>TargetArn</tt>).
--   
--   If you send a message to a topic, Amazon SNS delivers the message to
--   each endpoint that is subscribed to the topic. The format of the
--   message depends on the notification protocol for each subscribed
--   endpoint.
--   
--   When a <tt>messageId</tt> is returned, the message has been saved and
--   Amazon SNS will attempt to deliver it shortly.
--   
--   To use the <tt>Publish</tt> action for sending a message to a mobile
--   endpoint, such as an app on a Kindle device or mobile phone, you must
--   specify the EndpointArn for the TargetArn parameter. The EndpointArn
--   is returned when making a call with the
--   <tt>CreatePlatformEndpoint</tt> action.
--   
--   For more information about formatting messages, see <a>Send Custom
--   Platform-Specific Payloads in Messages to Mobile Devices</a>.
--   
--   You can publish messages only to topics and endpoints in the same
--   Region.
module Network.AWS.SNS.Publish

-- | Input for Publish action.
--   
--   <i>See:</i> <a>newPublish</a> smart constructor.
data Publish
Publish' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Publish

-- | The phone number to which you want to deliver an SMS message. Use
--   E.164 format.
--   
--   If you don't specify a value for the <tt>PhoneNumber</tt> parameter,
--   you must specify a value for the <tt>TargetArn</tt> or
--   <tt>TopicArn</tt> parameters.
[$sel:phoneNumber:Publish'] :: Publish -> Maybe Text

-- | Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   <ul>
--   <li>be a syntactically valid JSON object; and</li>
--   <li>contain at least a top-level JSON key of "default" with a value
--   that is a string.</li>
--   </ul>
--   
--   You can define other top-level keys that define the message you want
--   to send to a specific transport protocol (e.g., "http").
--   
--   Valid value: <tt>json</tt>
[$sel:messageStructure:Publish'] :: Publish -> Maybe Text

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageDeduplicationId</tt> can contain up to 128 alphanumeric
--   characters (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   Every message must have a unique <tt>MessageDeduplicationId</tt>,
--   which is a token used for deduplication of sent messages. If a message
--   with a particular <tt>MessageDeduplicationId</tt> is sent
--   successfully, any message sent with the same
--   <tt>MessageDeduplicationId</tt> during the 5-minute deduplication
--   interval is treated as a duplicate.
--   
--   If the topic has <tt>ContentBasedDeduplication</tt> set, the system
--   generates a <tt>MessageDeduplicationId</tt> based on the contents of
--   the message. Your <tt>MessageDeduplicationId</tt> overrides the
--   generated one.
[$sel:messageDeduplicationId:Publish'] :: Publish -> Maybe Text

-- | If you don't specify a value for the <tt>TargetArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or <tt>TopicArn</tt>
--   parameters.
[$sel:targetArn:Publish'] :: Publish -> Maybe Text

-- | Message attributes for Publish action.
[$sel:messageAttributes:Publish'] :: Publish -> Maybe (HashMap Text MessageAttributeValue)

-- | The topic you want to publish to.
--   
--   If you don't specify a value for the <tt>TopicArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or
--   <tt>TargetArn</tt> parameters.
[$sel:topicArn:Publish'] :: Publish -> Maybe Text

-- | Optional parameter to be used as the "Subject" line when the message
--   is delivered to email endpoints. This field will also be included, if
--   present, in the standard JSON messages delivered to other endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
[$sel:subject:Publish'] :: Publish -> Maybe Text

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageGroupId</tt> can contain up to 128 alphanumeric characters
--   (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   The <tt>MessageGroupId</tt> is a tag that specifies that a message
--   belongs to a specific message group. Messages that belong to the same
--   message group are processed in a FIFO manner (however, messages in
--   different message groups might be processed out of order). Every
--   message must include a <tt>MessageGroupId</tt>.
[$sel:messageGroupId:Publish'] :: Publish -> Maybe Text

-- | The message you want to send.
--   
--   If you are publishing to a topic and you want to send the same message
--   to all transport protocols, include the text of the message as a
--   String value. If you want to send different messages for each
--   transport protocol, set the value of the <tt>MessageStructure</tt>
--   parameter to <tt>json</tt> and use a JSON object for the
--   <tt>Message</tt> parameter.
--   
--   Constraints:
--   
--   <ul>
--   <li>With the exception of SMS, messages must be UTF-8 encoded strings
--   and at most 256 KB in size (262,144 bytes, not 262,144
--   characters).</li>
--   <li>For SMS, each message can contain up to 140 characters. This
--   character limit depends on the encoding schema. For example, an SMS
--   message can contain 160 GSM characters, 140 ASCII characters, or 70
--   UCS-2 characters.If you publish a message that exceeds this size
--   limit, Amazon SNS sends the message as multiple messages, each fitting
--   within the size limit. Messages aren't truncated mid-word but are cut
--   off at whole-word boundaries.The total size limit for a single SMS
--   <tt>Publish</tt> action is 1,600 characters.</li>
--   </ul>
--   
--   JSON-specific constraints:
--   
--   <ul>
--   <li>Keys in the JSON object that correspond to supported transport
--   protocols must have simple JSON string values.</li>
--   <li>The values will be parsed (unescaped) before they are used in
--   outgoing messages.</li>
--   <li>Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending).</li>
--   <li>Values have a minimum length of 0 (the empty string, "", is
--   allowed).</li>
--   <li>Values have a maximum length bounded by the overall message size
--   (so, including multiple protocols may limit message sizes).</li>
--   <li>Non-string values will cause the key to be ignored.</li>
--   <li>Keys that do not correspond to supported transport protocols are
--   ignored.</li>
--   <li>Duplicate keys are not allowed.</li>
--   <li>Failure to parse or validate any key or value in the message will
--   cause the <tt>Publish</tt> call to return an error (no partial
--   delivery).</li>
--   </ul>
[$sel:message:Publish'] :: Publish -> Text

-- | Create a value of <a>Publish</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:Publish'</a>, <a>publish_phoneNumber</a> - The
--   phone number to which you want to deliver an SMS message. Use E.164
--   format.
--   
--   If you don't specify a value for the <tt>PhoneNumber</tt> parameter,
--   you must specify a value for the <tt>TargetArn</tt> or
--   <tt>TopicArn</tt> parameters.
--   
--   <a>$sel:messageStructure:Publish'</a>, <a>publish_messageStructure</a>
--   - Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   <ul>
--   <li>be a syntactically valid JSON object; and</li>
--   <li>contain at least a top-level JSON key of "default" with a value
--   that is a string.</li>
--   </ul>
--   
--   You can define other top-level keys that define the message you want
--   to send to a specific transport protocol (e.g., "http").
--   
--   Valid value: <tt>json</tt>
--   
--   <a>$sel:messageDeduplicationId:Publish'</a>,
--   <a>publish_messageDeduplicationId</a> - This parameter applies only to
--   FIFO (first-in-first-out) topics. The <tt>MessageDeduplicationId</tt>
--   can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and
--   punctuation <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   Every message must have a unique <tt>MessageDeduplicationId</tt>,
--   which is a token used for deduplication of sent messages. If a message
--   with a particular <tt>MessageDeduplicationId</tt> is sent
--   successfully, any message sent with the same
--   <tt>MessageDeduplicationId</tt> during the 5-minute deduplication
--   interval is treated as a duplicate.
--   
--   If the topic has <tt>ContentBasedDeduplication</tt> set, the system
--   generates a <tt>MessageDeduplicationId</tt> based on the contents of
--   the message. Your <tt>MessageDeduplicationId</tt> overrides the
--   generated one.
--   
--   <a>$sel:targetArn:Publish'</a>, <a>publish_targetArn</a> - If you
--   don't specify a value for the <tt>TargetArn</tt> parameter, you must
--   specify a value for the <tt>PhoneNumber</tt> or <tt>TopicArn</tt>
--   parameters.
--   
--   <a>$sel:messageAttributes:Publish'</a>,
--   <a>publish_messageAttributes</a> - Message attributes for Publish
--   action.
--   
--   <a>$sel:topicArn:Publish'</a>, <a>publish_topicArn</a> - The topic you
--   want to publish to.
--   
--   If you don't specify a value for the <tt>TopicArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or
--   <tt>TargetArn</tt> parameters.
--   
--   <a>$sel:subject:Publish'</a>, <a>publish_subject</a> - Optional
--   parameter to be used as the "Subject" line when the message is
--   delivered to email endpoints. This field will also be included, if
--   present, in the standard JSON messages delivered to other endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
--   
--   <a>$sel:messageGroupId:Publish'</a>, <a>publish_messageGroupId</a> -
--   This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageGroupId</tt> can contain up to 128 alphanumeric characters
--   (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   The <tt>MessageGroupId</tt> is a tag that specifies that a message
--   belongs to a specific message group. Messages that belong to the same
--   message group are processed in a FIFO manner (however, messages in
--   different message groups might be processed out of order). Every
--   message must include a <tt>MessageGroupId</tt>.
--   
--   <a>$sel:message:Publish'</a>, <a>publish_message</a> - The message you
--   want to send.
--   
--   If you are publishing to a topic and you want to send the same message
--   to all transport protocols, include the text of the message as a
--   String value. If you want to send different messages for each
--   transport protocol, set the value of the <tt>MessageStructure</tt>
--   parameter to <tt>json</tt> and use a JSON object for the
--   <tt>Message</tt> parameter.
--   
--   Constraints:
--   
--   <ul>
--   <li>With the exception of SMS, messages must be UTF-8 encoded strings
--   and at most 256 KB in size (262,144 bytes, not 262,144
--   characters).</li>
--   <li>For SMS, each message can contain up to 140 characters. This
--   character limit depends on the encoding schema. For example, an SMS
--   message can contain 160 GSM characters, 140 ASCII characters, or 70
--   UCS-2 characters.If you publish a message that exceeds this size
--   limit, Amazon SNS sends the message as multiple messages, each fitting
--   within the size limit. Messages aren't truncated mid-word but are cut
--   off at whole-word boundaries.The total size limit for a single SMS
--   <tt>Publish</tt> action is 1,600 characters.</li>
--   </ul>
--   
--   JSON-specific constraints:
--   
--   <ul>
--   <li>Keys in the JSON object that correspond to supported transport
--   protocols must have simple JSON string values.</li>
--   <li>The values will be parsed (unescaped) before they are used in
--   outgoing messages.</li>
--   <li>Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending).</li>
--   <li>Values have a minimum length of 0 (the empty string, "", is
--   allowed).</li>
--   <li>Values have a maximum length bounded by the overall message size
--   (so, including multiple protocols may limit message sizes).</li>
--   <li>Non-string values will cause the key to be ignored.</li>
--   <li>Keys that do not correspond to supported transport protocols are
--   ignored.</li>
--   <li>Duplicate keys are not allowed.</li>
--   <li>Failure to parse or validate any key or value in the message will
--   cause the <tt>Publish</tt> call to return an error (no partial
--   delivery).</li>
--   </ul>
newPublish :: Text -> Publish

-- | The phone number to which you want to deliver an SMS message. Use
--   E.164 format.
--   
--   If you don't specify a value for the <tt>PhoneNumber</tt> parameter,
--   you must specify a value for the <tt>TargetArn</tt> or
--   <tt>TopicArn</tt> parameters.
publish_phoneNumber :: Lens' Publish (Maybe Text)

-- | Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   <ul>
--   <li>be a syntactically valid JSON object; and</li>
--   <li>contain at least a top-level JSON key of "default" with a value
--   that is a string.</li>
--   </ul>
--   
--   You can define other top-level keys that define the message you want
--   to send to a specific transport protocol (e.g., "http").
--   
--   Valid value: <tt>json</tt>
publish_messageStructure :: Lens' Publish (Maybe Text)

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageDeduplicationId</tt> can contain up to 128 alphanumeric
--   characters (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   Every message must have a unique <tt>MessageDeduplicationId</tt>,
--   which is a token used for deduplication of sent messages. If a message
--   with a particular <tt>MessageDeduplicationId</tt> is sent
--   successfully, any message sent with the same
--   <tt>MessageDeduplicationId</tt> during the 5-minute deduplication
--   interval is treated as a duplicate.
--   
--   If the topic has <tt>ContentBasedDeduplication</tt> set, the system
--   generates a <tt>MessageDeduplicationId</tt> based on the contents of
--   the message. Your <tt>MessageDeduplicationId</tt> overrides the
--   generated one.
publish_messageDeduplicationId :: Lens' Publish (Maybe Text)

-- | If you don't specify a value for the <tt>TargetArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or <tt>TopicArn</tt>
--   parameters.
publish_targetArn :: Lens' Publish (Maybe Text)

-- | Message attributes for Publish action.
publish_messageAttributes :: Lens' Publish (Maybe (HashMap Text MessageAttributeValue))

-- | The topic you want to publish to.
--   
--   If you don't specify a value for the <tt>TopicArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or
--   <tt>TargetArn</tt> parameters.
publish_topicArn :: Lens' Publish (Maybe Text)

-- | Optional parameter to be used as the "Subject" line when the message
--   is delivered to email endpoints. This field will also be included, if
--   present, in the standard JSON messages delivered to other endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
publish_subject :: Lens' Publish (Maybe Text)

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageGroupId</tt> can contain up to 128 alphanumeric characters
--   (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   The <tt>MessageGroupId</tt> is a tag that specifies that a message
--   belongs to a specific message group. Messages that belong to the same
--   message group are processed in a FIFO manner (however, messages in
--   different message groups might be processed out of order). Every
--   message must include a <tt>MessageGroupId</tt>.
publish_messageGroupId :: Lens' Publish (Maybe Text)

-- | The message you want to send.
--   
--   If you are publishing to a topic and you want to send the same message
--   to all transport protocols, include the text of the message as a
--   String value. If you want to send different messages for each
--   transport protocol, set the value of the <tt>MessageStructure</tt>
--   parameter to <tt>json</tt> and use a JSON object for the
--   <tt>Message</tt> parameter.
--   
--   Constraints:
--   
--   <ul>
--   <li>With the exception of SMS, messages must be UTF-8 encoded strings
--   and at most 256 KB in size (262,144 bytes, not 262,144
--   characters).</li>
--   <li>For SMS, each message can contain up to 140 characters. This
--   character limit depends on the encoding schema. For example, an SMS
--   message can contain 160 GSM characters, 140 ASCII characters, or 70
--   UCS-2 characters.If you publish a message that exceeds this size
--   limit, Amazon SNS sends the message as multiple messages, each fitting
--   within the size limit. Messages aren't truncated mid-word but are cut
--   off at whole-word boundaries.The total size limit for a single SMS
--   <tt>Publish</tt> action is 1,600 characters.</li>
--   </ul>
--   
--   JSON-specific constraints:
--   
--   <ul>
--   <li>Keys in the JSON object that correspond to supported transport
--   protocols must have simple JSON string values.</li>
--   <li>The values will be parsed (unescaped) before they are used in
--   outgoing messages.</li>
--   <li>Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending).</li>
--   <li>Values have a minimum length of 0 (the empty string, "", is
--   allowed).</li>
--   <li>Values have a maximum length bounded by the overall message size
--   (so, including multiple protocols may limit message sizes).</li>
--   <li>Non-string values will cause the key to be ignored.</li>
--   <li>Keys that do not correspond to supported transport protocols are
--   ignored.</li>
--   <li>Duplicate keys are not allowed.</li>
--   <li>Failure to parse or validate any key or value in the message will
--   cause the <tt>Publish</tt> call to return an error (no partial
--   delivery).</li>
--   </ul>
publish_message :: Lens' Publish Text

-- | Response for Publish action.
--   
--   <i>See:</i> <a>newPublishResponse</a> smart constructor.
data PublishResponse
PublishResponse' :: Maybe Text -> Maybe Text -> Int -> PublishResponse

-- | This response element applies only to FIFO (first-in-first-out)
--   topics.
--   
--   The sequence number is a large, non-consecutive number that Amazon SNS
--   assigns to each message. The length of <tt>SequenceNumber</tt> is 128
--   bits. <tt>SequenceNumber</tt> continues to increase for each
--   <tt>MessageGroupId</tt>.
[$sel:sequenceNumber:PublishResponse'] :: PublishResponse -> Maybe Text

-- | Unique identifier assigned to the published message.
--   
--   Length Constraint: Maximum 100 characters
[$sel:messageId:PublishResponse'] :: PublishResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PublishResponse'] :: PublishResponse -> Int

-- | Create a value of <a>PublishResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:PublishResponse'</a>,
--   <a>publishResponse_sequenceNumber</a> - This response element applies
--   only to FIFO (first-in-first-out) topics.
--   
--   The sequence number is a large, non-consecutive number that Amazon SNS
--   assigns to each message. The length of <tt>SequenceNumber</tt> is 128
--   bits. <tt>SequenceNumber</tt> continues to increase for each
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:messageId:PublishResponse'</a>,
--   <a>publishResponse_messageId</a> - Unique identifier assigned to the
--   published message.
--   
--   Length Constraint: Maximum 100 characters
--   
--   <a>$sel:httpStatus:PublishResponse'</a>,
--   <a>publishResponse_httpStatus</a> - The response's http status code.
newPublishResponse :: Int -> PublishResponse

-- | This response element applies only to FIFO (first-in-first-out)
--   topics.
--   
--   The sequence number is a large, non-consecutive number that Amazon SNS
--   assigns to each message. The length of <tt>SequenceNumber</tt> is 128
--   bits. <tt>SequenceNumber</tt> continues to increase for each
--   <tt>MessageGroupId</tt>.
publishResponse_sequenceNumber :: Lens' PublishResponse (Maybe Text)

-- | Unique identifier assigned to the published message.
--   
--   Length Constraint: Maximum 100 characters
publishResponse_messageId :: Lens' PublishResponse (Maybe Text)

-- | The response's http status code.
publishResponse_httpStatus :: Lens' PublishResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.Publish.Publish
instance GHC.Show.Show Network.AWS.SNS.Publish.Publish
instance GHC.Read.Read Network.AWS.SNS.Publish.Publish
instance GHC.Classes.Eq Network.AWS.SNS.Publish.Publish
instance GHC.Generics.Generic Network.AWS.SNS.Publish.PublishResponse
instance GHC.Show.Show Network.AWS.SNS.Publish.PublishResponse
instance GHC.Read.Read Network.AWS.SNS.Publish.PublishResponse
instance GHC.Classes.Eq Network.AWS.SNS.Publish.PublishResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.Publish.Publish
instance Control.DeepSeq.NFData Network.AWS.SNS.Publish.PublishResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Publish.Publish
instance Control.DeepSeq.NFData Network.AWS.SNS.Publish.Publish
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.Publish.Publish
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.Publish.Publish
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Publish.Publish


-- | Use this request to opt in a phone number that is opted out, which
--   enables you to resume sending SMS messages to the number.
--   
--   You can opt in a phone number only once every 30 days.
module Network.AWS.SNS.OptInPhoneNumber

-- | Input for the OptInPhoneNumber action.
--   
--   <i>See:</i> <a>newOptInPhoneNumber</a> smart constructor.
data OptInPhoneNumber
OptInPhoneNumber' :: Text -> OptInPhoneNumber

-- | The phone number to opt in. Use E.164 format.
[$sel:phoneNumber:OptInPhoneNumber'] :: OptInPhoneNumber -> Text

-- | Create a value of <a>OptInPhoneNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:OptInPhoneNumber'</a>,
--   <a>optInPhoneNumber_phoneNumber</a> - The phone number to opt in. Use
--   E.164 format.
newOptInPhoneNumber :: Text -> OptInPhoneNumber

-- | The phone number to opt in. Use E.164 format.
optInPhoneNumber_phoneNumber :: Lens' OptInPhoneNumber Text

-- | The response for the OptInPhoneNumber action.
--   
--   <i>See:</i> <a>newOptInPhoneNumberResponse</a> smart constructor.
data OptInPhoneNumberResponse
OptInPhoneNumberResponse' :: Int -> OptInPhoneNumberResponse

-- | The response's http status code.
[$sel:httpStatus:OptInPhoneNumberResponse'] :: OptInPhoneNumberResponse -> Int

-- | Create a value of <a>OptInPhoneNumberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:OptInPhoneNumberResponse'</a>,
--   <a>optInPhoneNumberResponse_httpStatus</a> - The response's http
--   status code.
newOptInPhoneNumberResponse :: Int -> OptInPhoneNumberResponse

-- | The response's http status code.
optInPhoneNumberResponse_httpStatus :: Lens' OptInPhoneNumberResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance GHC.Show.Show Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance GHC.Read.Read Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance GHC.Classes.Eq Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance GHC.Generics.Generic Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumberResponse
instance GHC.Show.Show Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumberResponse
instance GHC.Read.Read Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumberResponse
instance GHC.Classes.Eq Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumberResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.OptInPhoneNumber.OptInPhoneNumber


-- | Returns a list of the requester's topics. Each call returns a limited
--   list of topics, up to 100. If there are more topics, a
--   <tt>NextToken</tt> is also returned. Use the <tt>NextToken</tt>
--   parameter in a new <tt>ListTopics</tt> call to get further results.
--   
--   This action is throttled at 30 transactions per second (TPS).
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListTopics

-- | <i>See:</i> <a>newListTopics</a> smart constructor.
data ListTopics
ListTopics' :: Maybe Text -> ListTopics

-- | Token returned by the previous <tt>ListTopics</tt> request.
[$sel:nextToken:ListTopics'] :: ListTopics -> Maybe Text

-- | Create a value of <a>ListTopics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTopics'</a>, <a>listTopics_nextToken</a> - Token
--   returned by the previous <tt>ListTopics</tt> request.
newListTopics :: ListTopics

-- | Token returned by the previous <tt>ListTopics</tt> request.
listTopics_nextToken :: Lens' ListTopics (Maybe Text)

-- | Response for ListTopics action.
--   
--   <i>See:</i> <a>newListTopicsResponse</a> smart constructor.
data ListTopicsResponse
ListTopicsResponse' :: Maybe Text -> Maybe [Topic] -> Int -> ListTopicsResponse

-- | Token to pass along to the next <tt>ListTopics</tt> request. This
--   element is returned if there are additional topics to retrieve.
[$sel:nextToken:ListTopicsResponse'] :: ListTopicsResponse -> Maybe Text

-- | A list of topic ARNs.
[$sel:topics:ListTopicsResponse'] :: ListTopicsResponse -> Maybe [Topic]

-- | The response's http status code.
[$sel:httpStatus:ListTopicsResponse'] :: ListTopicsResponse -> Int

-- | Create a value of <a>ListTopicsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTopics'</a>, <a>listTopicsResponse_nextToken</a>
--   - Token to pass along to the next <tt>ListTopics</tt> request. This
--   element is returned if there are additional topics to retrieve.
--   
--   <a>$sel:topics:ListTopicsResponse'</a>,
--   <a>listTopicsResponse_topics</a> - A list of topic ARNs.
--   
--   <a>$sel:httpStatus:ListTopicsResponse'</a>,
--   <a>listTopicsResponse_httpStatus</a> - The response's http status
--   code.
newListTopicsResponse :: Int -> ListTopicsResponse

-- | Token to pass along to the next <tt>ListTopics</tt> request. This
--   element is returned if there are additional topics to retrieve.
listTopicsResponse_nextToken :: Lens' ListTopicsResponse (Maybe Text)

-- | A list of topic ARNs.
listTopicsResponse_topics :: Lens' ListTopicsResponse (Maybe [Topic])

-- | The response's http status code.
listTopicsResponse_httpStatus :: Lens' ListTopicsResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListTopics.ListTopics
instance GHC.Show.Show Network.AWS.SNS.ListTopics.ListTopics
instance GHC.Read.Read Network.AWS.SNS.ListTopics.ListTopics
instance GHC.Classes.Eq Network.AWS.SNS.ListTopics.ListTopics
instance GHC.Generics.Generic Network.AWS.SNS.ListTopics.ListTopicsResponse
instance GHC.Show.Show Network.AWS.SNS.ListTopics.ListTopicsResponse
instance GHC.Read.Read Network.AWS.SNS.ListTopics.ListTopicsResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListTopics.ListTopicsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListTopics.ListTopics
instance Control.DeepSeq.NFData Network.AWS.SNS.ListTopics.ListTopicsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListTopics.ListTopics
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListTopics.ListTopics
instance Control.DeepSeq.NFData Network.AWS.SNS.ListTopics.ListTopics
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListTopics.ListTopics
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListTopics.ListTopics
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListTopics.ListTopics


-- | List all tags added to the specified Amazon SNS topic. For an
--   overview, see <a>Amazon SNS Tags</a> in the <i>Amazon Simple
--   Notification Service Developer Guide</i>.
module Network.AWS.SNS.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the topic for which to list tags.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the topic for
--   which to list tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the topic for which to list tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The tags associated with the specified topic.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags associated with the
--   specified topic.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags associated with the specified topic.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.SNS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.SNS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.SNS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.SNS.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListTagsForResource.ListTagsForResource


-- | Returns a list of the subscriptions to a specific topic. Each call
--   returns a limited list of subscriptions, up to 100. If there are more
--   subscriptions, a <tt>NextToken</tt> is also returned. Use the
--   <tt>NextToken</tt> parameter in a new
--   <tt>ListSubscriptionsByTopic</tt> call to get further results.
--   
--   This action is throttled at 30 transactions per second (TPS).
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListSubscriptionsByTopic

-- | Input for ListSubscriptionsByTopic action.
--   
--   <i>See:</i> <a>newListSubscriptionsByTopic</a> smart constructor.
data ListSubscriptionsByTopic
ListSubscriptionsByTopic' :: Maybe Text -> Text -> ListSubscriptionsByTopic

-- | Token returned by the previous <tt>ListSubscriptionsByTopic</tt>
--   request.
[$sel:nextToken:ListSubscriptionsByTopic'] :: ListSubscriptionsByTopic -> Maybe Text

-- | The ARN of the topic for which you wish to find subscriptions.
[$sel:topicArn:ListSubscriptionsByTopic'] :: ListSubscriptionsByTopic -> Text

-- | Create a value of <a>ListSubscriptionsByTopic</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopic_nextToken</a> - Token returned by the
--   previous <tt>ListSubscriptionsByTopic</tt> request.
--   
--   <a>$sel:topicArn:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopic_topicArn</a> - The ARN of the topic for
--   which you wish to find subscriptions.
newListSubscriptionsByTopic :: Text -> ListSubscriptionsByTopic

-- | Token returned by the previous <tt>ListSubscriptionsByTopic</tt>
--   request.
listSubscriptionsByTopic_nextToken :: Lens' ListSubscriptionsByTopic (Maybe Text)

-- | The ARN of the topic for which you wish to find subscriptions.
listSubscriptionsByTopic_topicArn :: Lens' ListSubscriptionsByTopic Text

-- | Response for ListSubscriptionsByTopic action.
--   
--   <i>See:</i> <a>newListSubscriptionsByTopicResponse</a> smart
--   constructor.
data ListSubscriptionsByTopicResponse
ListSubscriptionsByTopicResponse' :: Maybe Text -> Maybe [Subscription] -> Int -> ListSubscriptionsByTopicResponse

-- | Token to pass along to the next <tt>ListSubscriptionsByTopic</tt>
--   request. This element is returned if there are more subscriptions to
--   retrieve.
[$sel:nextToken:ListSubscriptionsByTopicResponse'] :: ListSubscriptionsByTopicResponse -> Maybe Text

-- | A list of subscriptions.
[$sel:subscriptions:ListSubscriptionsByTopicResponse'] :: ListSubscriptionsByTopicResponse -> Maybe [Subscription]

-- | The response's http status code.
[$sel:httpStatus:ListSubscriptionsByTopicResponse'] :: ListSubscriptionsByTopicResponse -> Int

-- | Create a value of <a>ListSubscriptionsByTopicResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopicResponse_nextToken</a> - Token to pass
--   along to the next <tt>ListSubscriptionsByTopic</tt> request. This
--   element is returned if there are more subscriptions to retrieve.
--   
--   <a>$sel:subscriptions:ListSubscriptionsByTopicResponse'</a>,
--   <a>listSubscriptionsByTopicResponse_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:httpStatus:ListSubscriptionsByTopicResponse'</a>,
--   <a>listSubscriptionsByTopicResponse_httpStatus</a> - The response's
--   http status code.
newListSubscriptionsByTopicResponse :: Int -> ListSubscriptionsByTopicResponse

-- | Token to pass along to the next <tt>ListSubscriptionsByTopic</tt>
--   request. This element is returned if there are more subscriptions to
--   retrieve.
listSubscriptionsByTopicResponse_nextToken :: Lens' ListSubscriptionsByTopicResponse (Maybe Text)

-- | A list of subscriptions.
listSubscriptionsByTopicResponse_subscriptions :: Lens' ListSubscriptionsByTopicResponse (Maybe [Subscription])

-- | The response's http status code.
listSubscriptionsByTopicResponse_httpStatus :: Lens' ListSubscriptionsByTopicResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance GHC.Show.Show Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance GHC.Read.Read Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance GHC.Classes.Eq Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance GHC.Generics.Generic Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopicResponse
instance GHC.Show.Show Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopicResponse
instance GHC.Read.Read Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopicResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopicResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopicResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListSubscriptionsByTopic.ListSubscriptionsByTopic


-- | Returns a list of the requester's subscriptions. Each call returns a
--   limited list of subscriptions, up to 100. If there are more
--   subscriptions, a <tt>NextToken</tt> is also returned. Use the
--   <tt>NextToken</tt> parameter in a new <tt>ListSubscriptions</tt> call
--   to get further results.
--   
--   This action is throttled at 30 transactions per second (TPS).
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListSubscriptions

-- | Input for ListSubscriptions action.
--   
--   <i>See:</i> <a>newListSubscriptions</a> smart constructor.
data ListSubscriptions
ListSubscriptions' :: Maybe Text -> ListSubscriptions

-- | Token returned by the previous <tt>ListSubscriptions</tt> request.
[$sel:nextToken:ListSubscriptions'] :: ListSubscriptions -> Maybe Text

-- | Create a value of <a>ListSubscriptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptions'</a>,
--   <a>listSubscriptions_nextToken</a> - Token returned by the previous
--   <tt>ListSubscriptions</tt> request.
newListSubscriptions :: ListSubscriptions

-- | Token returned by the previous <tt>ListSubscriptions</tt> request.
listSubscriptions_nextToken :: Lens' ListSubscriptions (Maybe Text)

-- | Response for ListSubscriptions action
--   
--   <i>See:</i> <a>newListSubscriptionsResponse</a> smart constructor.
data ListSubscriptionsResponse
ListSubscriptionsResponse' :: Maybe Text -> Maybe [Subscription] -> Int -> ListSubscriptionsResponse

-- | Token to pass along to the next <tt>ListSubscriptions</tt> request.
--   This element is returned if there are more subscriptions to retrieve.
[$sel:nextToken:ListSubscriptionsResponse'] :: ListSubscriptionsResponse -> Maybe Text

-- | A list of subscriptions.
[$sel:subscriptions:ListSubscriptionsResponse'] :: ListSubscriptionsResponse -> Maybe [Subscription]

-- | The response's http status code.
[$sel:httpStatus:ListSubscriptionsResponse'] :: ListSubscriptionsResponse -> Int

-- | Create a value of <a>ListSubscriptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptions'</a>,
--   <a>listSubscriptionsResponse_nextToken</a> - Token to pass along to
--   the next <tt>ListSubscriptions</tt> request. This element is returned
--   if there are more subscriptions to retrieve.
--   
--   <a>$sel:subscriptions:ListSubscriptionsResponse'</a>,
--   <a>listSubscriptionsResponse_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:httpStatus:ListSubscriptionsResponse'</a>,
--   <a>listSubscriptionsResponse_httpStatus</a> - The response's http
--   status code.
newListSubscriptionsResponse :: Int -> ListSubscriptionsResponse

-- | Token to pass along to the next <tt>ListSubscriptions</tt> request.
--   This element is returned if there are more subscriptions to retrieve.
listSubscriptionsResponse_nextToken :: Lens' ListSubscriptionsResponse (Maybe Text)

-- | A list of subscriptions.
listSubscriptionsResponse_subscriptions :: Lens' ListSubscriptionsResponse (Maybe [Subscription])

-- | The response's http status code.
listSubscriptionsResponse_httpStatus :: Lens' ListSubscriptionsResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance GHC.Show.Show Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance GHC.Read.Read Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance GHC.Classes.Eq Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance GHC.Generics.Generic Network.AWS.SNS.ListSubscriptions.ListSubscriptionsResponse
instance GHC.Show.Show Network.AWS.SNS.ListSubscriptions.ListSubscriptionsResponse
instance GHC.Read.Read Network.AWS.SNS.ListSubscriptions.ListSubscriptionsResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListSubscriptions.ListSubscriptionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSubscriptions.ListSubscriptionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListSubscriptions.ListSubscriptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListSubscriptions.ListSubscriptions


-- | Lists the calling account's current verified and pending destination
--   phone numbers in the SMS sandbox.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListSMSSandboxPhoneNumbers

-- | <i>See:</i> <a>newListSMSSandboxPhoneNumbers</a> smart constructor.
data ListSMSSandboxPhoneNumbers
ListSMSSandboxPhoneNumbers' :: Maybe Text -> Maybe Natural -> ListSMSSandboxPhoneNumbers

-- | Token that the previous <tt>ListSMSSandboxPhoneNumbersInput</tt>
--   request returns.
[$sel:nextToken:ListSMSSandboxPhoneNumbers'] :: ListSMSSandboxPhoneNumbers -> Maybe Text

-- | The maximum number of phone numbers to return.
[$sel:maxResults:ListSMSSandboxPhoneNumbers'] :: ListSMSSandboxPhoneNumbers -> Maybe Natural

-- | Create a value of <a>ListSMSSandboxPhoneNumbers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbers_nextToken</a> - Token that the previous
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> request returns.
--   
--   <a>$sel:maxResults:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbers_maxResults</a> - The maximum number of
--   phone numbers to return.
newListSMSSandboxPhoneNumbers :: ListSMSSandboxPhoneNumbers

-- | Token that the previous <tt>ListSMSSandboxPhoneNumbersInput</tt>
--   request returns.
listSMSSandboxPhoneNumbers_nextToken :: Lens' ListSMSSandboxPhoneNumbers (Maybe Text)

-- | The maximum number of phone numbers to return.
listSMSSandboxPhoneNumbers_maxResults :: Lens' ListSMSSandboxPhoneNumbers (Maybe Natural)

-- | <i>See:</i> <a>newListSMSSandboxPhoneNumbersResponse</a> smart
--   constructor.
data ListSMSSandboxPhoneNumbersResponse
ListSMSSandboxPhoneNumbersResponse' :: Maybe Text -> Int -> [SMSSandboxPhoneNumber] -> ListSMSSandboxPhoneNumbersResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> operation if additional pages
--   of records are available.
[$sel:nextToken:ListSMSSandboxPhoneNumbersResponse'] :: ListSMSSandboxPhoneNumbersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSMSSandboxPhoneNumbersResponse'] :: ListSMSSandboxPhoneNumbersResponse -> Int

-- | A list of the calling account's pending and verified phone numbers.
[$sel:phoneNumbers:ListSMSSandboxPhoneNumbersResponse'] :: ListSMSSandboxPhoneNumbersResponse -> [SMSSandboxPhoneNumber]

-- | Create a value of <a>ListSMSSandboxPhoneNumbersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_nextToken</a> - A
--   <tt>NextToken</tt> string is returned when you call the
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> operation if additional pages
--   of records are available.
--   
--   <a>$sel:httpStatus:ListSMSSandboxPhoneNumbersResponse'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:phoneNumbers:ListSMSSandboxPhoneNumbersResponse'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_phoneNumbers</a> - A list of the
--   calling account's pending and verified phone numbers.
newListSMSSandboxPhoneNumbersResponse :: Int -> ListSMSSandboxPhoneNumbersResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> operation if additional pages
--   of records are available.
listSMSSandboxPhoneNumbersResponse_nextToken :: Lens' ListSMSSandboxPhoneNumbersResponse (Maybe Text)

-- | The response's http status code.
listSMSSandboxPhoneNumbersResponse_httpStatus :: Lens' ListSMSSandboxPhoneNumbersResponse Int

-- | A list of the calling account's pending and verified phone numbers.
listSMSSandboxPhoneNumbersResponse_phoneNumbers :: Lens' ListSMSSandboxPhoneNumbersResponse [SMSSandboxPhoneNumber]
instance GHC.Generics.Generic Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance GHC.Show.Show Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance GHC.Read.Read Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance GHC.Classes.Eq Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance GHC.Generics.Generic Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbersResponse
instance GHC.Show.Show Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbersResponse
instance GHC.Read.Read Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbersResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Control.DeepSeq.NFData Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListSMSSandboxPhoneNumbers.ListSMSSandboxPhoneNumbers


-- | Lists the platform application objects for the supported push
--   notification services, such as APNS and GCM (Firebase Cloud
--   Messaging). The results for <tt>ListPlatformApplications</tt> are
--   paginated and return a limited list of applications, up to 100. If
--   additional records are available after the first page results, then a
--   NextToken string will be returned. To receive the next page, you call
--   <tt>ListPlatformApplications</tt> using the NextToken string received
--   from the previous call. When there are no more records to return,
--   <tt>NextToken</tt> will be null. For more information, see <a>Using
--   Amazon SNS Mobile Push Notifications</a>.
--   
--   This action is throttled at 15 transactions per second (TPS).
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListPlatformApplications

-- | Input for ListPlatformApplications action.
--   
--   <i>See:</i> <a>newListPlatformApplications</a> smart constructor.
data ListPlatformApplications
ListPlatformApplications' :: Maybe Text -> ListPlatformApplications

-- | NextToken string is used when calling ListPlatformApplications action
--   to retrieve additional records that are available after the first page
--   results.
[$sel:nextToken:ListPlatformApplications'] :: ListPlatformApplications -> Maybe Text

-- | Create a value of <a>ListPlatformApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlatformApplications'</a>,
--   <a>listPlatformApplications_nextToken</a> - NextToken string is used
--   when calling ListPlatformApplications action to retrieve additional
--   records that are available after the first page results.
newListPlatformApplications :: ListPlatformApplications

-- | NextToken string is used when calling ListPlatformApplications action
--   to retrieve additional records that are available after the first page
--   results.
listPlatformApplications_nextToken :: Lens' ListPlatformApplications (Maybe Text)

-- | Response for ListPlatformApplications action.
--   
--   <i>See:</i> <a>newListPlatformApplicationsResponse</a> smart
--   constructor.
data ListPlatformApplicationsResponse
ListPlatformApplicationsResponse' :: Maybe Text -> Maybe [PlatformApplication] -> Int -> ListPlatformApplicationsResponse

-- | NextToken string is returned when calling ListPlatformApplications
--   action if additional records are available after the first page
--   results.
[$sel:nextToken:ListPlatformApplicationsResponse'] :: ListPlatformApplicationsResponse -> Maybe Text

-- | Platform applications returned when calling ListPlatformApplications
--   action.
[$sel:platformApplications:ListPlatformApplicationsResponse'] :: ListPlatformApplicationsResponse -> Maybe [PlatformApplication]

-- | The response's http status code.
[$sel:httpStatus:ListPlatformApplicationsResponse'] :: ListPlatformApplicationsResponse -> Int

-- | Create a value of <a>ListPlatformApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlatformApplications'</a>,
--   <a>listPlatformApplicationsResponse_nextToken</a> - NextToken string
--   is returned when calling ListPlatformApplications action if additional
--   records are available after the first page results.
--   
--   <a>$sel:platformApplications:ListPlatformApplicationsResponse'</a>,
--   <a>listPlatformApplicationsResponse_platformApplications</a> -
--   Platform applications returned when calling ListPlatformApplications
--   action.
--   
--   <a>$sel:httpStatus:ListPlatformApplicationsResponse'</a>,
--   <a>listPlatformApplicationsResponse_httpStatus</a> - The response's
--   http status code.
newListPlatformApplicationsResponse :: Int -> ListPlatformApplicationsResponse

-- | NextToken string is returned when calling ListPlatformApplications
--   action if additional records are available after the first page
--   results.
listPlatformApplicationsResponse_nextToken :: Lens' ListPlatformApplicationsResponse (Maybe Text)

-- | Platform applications returned when calling ListPlatformApplications
--   action.
listPlatformApplicationsResponse_platformApplications :: Lens' ListPlatformApplicationsResponse (Maybe [PlatformApplication])

-- | The response's http status code.
listPlatformApplicationsResponse_httpStatus :: Lens' ListPlatformApplicationsResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance GHC.Show.Show Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance GHC.Read.Read Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance GHC.Classes.Eq Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance GHC.Generics.Generic Network.AWS.SNS.ListPlatformApplications.ListPlatformApplicationsResponse
instance GHC.Show.Show Network.AWS.SNS.ListPlatformApplications.ListPlatformApplicationsResponse
instance GHC.Read.Read Network.AWS.SNS.ListPlatformApplications.ListPlatformApplicationsResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListPlatformApplications.ListPlatformApplicationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Control.DeepSeq.NFData Network.AWS.SNS.ListPlatformApplications.ListPlatformApplicationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Control.DeepSeq.NFData Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListPlatformApplications.ListPlatformApplications


-- | Returns a list of phone numbers that are opted out, meaning you cannot
--   send SMS messages to them.
--   
--   The results for <tt>ListPhoneNumbersOptedOut</tt> are paginated, and
--   each page returns up to 100 phone numbers. If additional phone numbers
--   are available after the first page of results, then a
--   <tt>NextToken</tt> string will be returned. To receive the next page,
--   you call <tt>ListPhoneNumbersOptedOut</tt> again using the
--   <tt>NextToken</tt> string received from the previous call. When there
--   are no more records to return, <tt>NextToken</tt> will be null.
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListPhoneNumbersOptedOut

-- | The input for the <tt>ListPhoneNumbersOptedOut</tt> action.
--   
--   <i>See:</i> <a>newListPhoneNumbersOptedOut</a> smart constructor.
data ListPhoneNumbersOptedOut
ListPhoneNumbersOptedOut' :: Maybe Text -> ListPhoneNumbersOptedOut

-- | A <tt>NextToken</tt> string is used when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action to retrieve additional
--   records that are available after the first page of results.
[$sel:nextToken:ListPhoneNumbersOptedOut'] :: ListPhoneNumbersOptedOut -> Maybe Text

-- | Create a value of <a>ListPhoneNumbersOptedOut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPhoneNumbersOptedOut'</a>,
--   <a>listPhoneNumbersOptedOut_nextToken</a> - A <tt>NextToken</tt>
--   string is used when you call the <tt>ListPhoneNumbersOptedOut</tt>
--   action to retrieve additional records that are available after the
--   first page of results.
newListPhoneNumbersOptedOut :: ListPhoneNumbersOptedOut

-- | A <tt>NextToken</tt> string is used when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action to retrieve additional
--   records that are available after the first page of results.
listPhoneNumbersOptedOut_nextToken :: Lens' ListPhoneNumbersOptedOut (Maybe Text)

-- | The response from the <tt>ListPhoneNumbersOptedOut</tt> action.
--   
--   <i>See:</i> <a>newListPhoneNumbersOptedOutResponse</a> smart
--   constructor.
data ListPhoneNumbersOptedOutResponse
ListPhoneNumbersOptedOutResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListPhoneNumbersOptedOutResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action if additional records are
--   available after the first page of results.
[$sel:nextToken:ListPhoneNumbersOptedOutResponse'] :: ListPhoneNumbersOptedOutResponse -> Maybe Text

-- | A list of phone numbers that are opted out of receiving SMS messages.
--   The list is paginated, and each page can contain up to 100 phone
--   numbers.
[$sel:phoneNumbers:ListPhoneNumbersOptedOutResponse'] :: ListPhoneNumbersOptedOutResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListPhoneNumbersOptedOutResponse'] :: ListPhoneNumbersOptedOutResponse -> Int

-- | Create a value of <a>ListPhoneNumbersOptedOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPhoneNumbersOptedOut'</a>,
--   <a>listPhoneNumbersOptedOutResponse_nextToken</a> - A
--   <tt>NextToken</tt> string is returned when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action if additional records are
--   available after the first page of results.
--   
--   <a>$sel:phoneNumbers:ListPhoneNumbersOptedOutResponse'</a>,
--   <a>listPhoneNumbersOptedOutResponse_phoneNumbers</a> - A list of phone
--   numbers that are opted out of receiving SMS messages. The list is
--   paginated, and each page can contain up to 100 phone numbers.
--   
--   <a>$sel:httpStatus:ListPhoneNumbersOptedOutResponse'</a>,
--   <a>listPhoneNumbersOptedOutResponse_httpStatus</a> - The response's
--   http status code.
newListPhoneNumbersOptedOutResponse :: Int -> ListPhoneNumbersOptedOutResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action if additional records are
--   available after the first page of results.
listPhoneNumbersOptedOutResponse_nextToken :: Lens' ListPhoneNumbersOptedOutResponse (Maybe Text)

-- | A list of phone numbers that are opted out of receiving SMS messages.
--   The list is paginated, and each page can contain up to 100 phone
--   numbers.
listPhoneNumbersOptedOutResponse_phoneNumbers :: Lens' ListPhoneNumbersOptedOutResponse (Maybe [Text])

-- | The response's http status code.
listPhoneNumbersOptedOutResponse_httpStatus :: Lens' ListPhoneNumbersOptedOutResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance GHC.Show.Show Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance GHC.Read.Read Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance GHC.Classes.Eq Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance GHC.Generics.Generic Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOutResponse
instance GHC.Show.Show Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOutResponse
instance GHC.Read.Read Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOutResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOutResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Control.DeepSeq.NFData Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOutResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Control.DeepSeq.NFData Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListPhoneNumbersOptedOut.ListPhoneNumbersOptedOut


-- | Lists the calling account's dedicated origination numbers and their
--   metadata. For more information about origination numbers, see
--   <a>Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListOriginationNumbers

-- | <i>See:</i> <a>newListOriginationNumbers</a> smart constructor.
data ListOriginationNumbers
ListOriginationNumbers' :: Maybe Text -> Maybe Natural -> ListOriginationNumbers

-- | Token that the previous <tt>ListOriginationNumbers</tt> request
--   returns.
[$sel:nextToken:ListOriginationNumbers'] :: ListOriginationNumbers -> Maybe Text

-- | The maximum number of origination numbers to return.
[$sel:maxResults:ListOriginationNumbers'] :: ListOriginationNumbers -> Maybe Natural

-- | Create a value of <a>ListOriginationNumbers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbers_nextToken</a> - Token that the previous
--   <tt>ListOriginationNumbers</tt> request returns.
--   
--   <a>$sel:maxResults:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbers_maxResults</a> - The maximum number of
--   origination numbers to return.
newListOriginationNumbers :: ListOriginationNumbers

-- | Token that the previous <tt>ListOriginationNumbers</tt> request
--   returns.
listOriginationNumbers_nextToken :: Lens' ListOriginationNumbers (Maybe Text)

-- | The maximum number of origination numbers to return.
listOriginationNumbers_maxResults :: Lens' ListOriginationNumbers (Maybe Natural)

-- | <i>See:</i> <a>newListOriginationNumbersResponse</a> smart
--   constructor.
data ListOriginationNumbersResponse
ListOriginationNumbersResponse' :: Maybe Text -> Maybe [PhoneNumberInformation] -> Int -> ListOriginationNumbersResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListOriginationNumbers</tt> operation if additional pages of
--   records are available.
[$sel:nextToken:ListOriginationNumbersResponse'] :: ListOriginationNumbersResponse -> Maybe Text

-- | A list of the calling account's verified and pending origination
--   numbers.
[$sel:phoneNumbers:ListOriginationNumbersResponse'] :: ListOriginationNumbersResponse -> Maybe [PhoneNumberInformation]

-- | The response's http status code.
[$sel:httpStatus:ListOriginationNumbersResponse'] :: ListOriginationNumbersResponse -> Int

-- | Create a value of <a>ListOriginationNumbersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbersResponse_nextToken</a> - A <tt>NextToken</tt>
--   string is returned when you call the <tt>ListOriginationNumbers</tt>
--   operation if additional pages of records are available.
--   
--   <a>$sel:phoneNumbers:ListOriginationNumbersResponse'</a>,
--   <a>listOriginationNumbersResponse_phoneNumbers</a> - A list of the
--   calling account's verified and pending origination numbers.
--   
--   <a>$sel:httpStatus:ListOriginationNumbersResponse'</a>,
--   <a>listOriginationNumbersResponse_httpStatus</a> - The response's http
--   status code.
newListOriginationNumbersResponse :: Int -> ListOriginationNumbersResponse

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListOriginationNumbers</tt> operation if additional pages of
--   records are available.
listOriginationNumbersResponse_nextToken :: Lens' ListOriginationNumbersResponse (Maybe Text)

-- | A list of the calling account's verified and pending origination
--   numbers.
listOriginationNumbersResponse_phoneNumbers :: Lens' ListOriginationNumbersResponse (Maybe [PhoneNumberInformation])

-- | The response's http status code.
listOriginationNumbersResponse_httpStatus :: Lens' ListOriginationNumbersResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance GHC.Show.Show Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance GHC.Read.Read Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance GHC.Classes.Eq Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance GHC.Generics.Generic Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbersResponse
instance GHC.Show.Show Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbersResponse
instance GHC.Read.Read Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbersResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Control.DeepSeq.NFData Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Control.DeepSeq.NFData Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListOriginationNumbers.ListOriginationNumbers


-- | Lists the endpoints and endpoint attributes for devices in a supported
--   push notification service, such as GCM (Firebase Cloud Messaging) and
--   APNS. The results for <tt>ListEndpointsByPlatformApplication</tt> are
--   paginated and return a limited list of endpoints, up to 100. If
--   additional records are available after the first page results, then a
--   NextToken string will be returned. To receive the next page, you call
--   <tt>ListEndpointsByPlatformApplication</tt> again using the NextToken
--   string received from the previous call. When there are no more records
--   to return, NextToken will be null. For more information, see <a>Using
--   Amazon SNS Mobile Push Notifications</a>.
--   
--   This action is throttled at 30 transactions per second (TPS).
--   
--   This operation returns paginated results.
module Network.AWS.SNS.ListEndpointsByPlatformApplication

-- | Input for ListEndpointsByPlatformApplication action.
--   
--   <i>See:</i> <a>newListEndpointsByPlatformApplication</a> smart
--   constructor.
data ListEndpointsByPlatformApplication
ListEndpointsByPlatformApplication' :: Maybe Text -> Text -> ListEndpointsByPlatformApplication

-- | NextToken string is used when calling
--   ListEndpointsByPlatformApplication action to retrieve additional
--   records that are available after the first page results.
[$sel:nextToken:ListEndpointsByPlatformApplication'] :: ListEndpointsByPlatformApplication -> Maybe Text

-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
[$sel:platformApplicationArn:ListEndpointsByPlatformApplication'] :: ListEndpointsByPlatformApplication -> Text

-- | Create a value of <a>ListEndpointsByPlatformApplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplication_nextToken</a> - NextToken string
--   is used when calling ListEndpointsByPlatformApplication action to
--   retrieve additional records that are available after the first page
--   results.
--   
--   
--   <a>$sel:platformApplicationArn:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
newListEndpointsByPlatformApplication :: Text -> ListEndpointsByPlatformApplication

-- | NextToken string is used when calling
--   ListEndpointsByPlatformApplication action to retrieve additional
--   records that are available after the first page results.
listEndpointsByPlatformApplication_nextToken :: Lens' ListEndpointsByPlatformApplication (Maybe Text)

-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
listEndpointsByPlatformApplication_platformApplicationArn :: Lens' ListEndpointsByPlatformApplication Text

-- | Response for ListEndpointsByPlatformApplication action.
--   
--   <i>See:</i> <a>newListEndpointsByPlatformApplicationResponse</a> smart
--   constructor.
data ListEndpointsByPlatformApplicationResponse
ListEndpointsByPlatformApplicationResponse' :: Maybe Text -> Maybe [Endpoint] -> Int -> ListEndpointsByPlatformApplicationResponse

-- | NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
[$sel:nextToken:ListEndpointsByPlatformApplicationResponse'] :: ListEndpointsByPlatformApplicationResponse -> Maybe Text

-- | Endpoints returned for ListEndpointsByPlatformApplication action.
[$sel:endpoints:ListEndpointsByPlatformApplicationResponse'] :: ListEndpointsByPlatformApplicationResponse -> Maybe [Endpoint]

-- | The response's http status code.
[$sel:httpStatus:ListEndpointsByPlatformApplicationResponse'] :: ListEndpointsByPlatformApplicationResponse -> Int

-- | Create a value of <a>ListEndpointsByPlatformApplicationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_nextToken</a> -
--   NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
--   
--   <a>$sel:endpoints:ListEndpointsByPlatformApplicationResponse'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_endpoints</a> -
--   Endpoints returned for ListEndpointsByPlatformApplication action.
--   
--   <a>$sel:httpStatus:ListEndpointsByPlatformApplicationResponse'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_httpStatus</a> - The
--   response's http status code.
newListEndpointsByPlatformApplicationResponse :: Int -> ListEndpointsByPlatformApplicationResponse

-- | NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
listEndpointsByPlatformApplicationResponse_nextToken :: Lens' ListEndpointsByPlatformApplicationResponse (Maybe Text)

-- | Endpoints returned for ListEndpointsByPlatformApplication action.
listEndpointsByPlatformApplicationResponse_endpoints :: Lens' ListEndpointsByPlatformApplicationResponse (Maybe [Endpoint])

-- | The response's http status code.
listEndpointsByPlatformApplicationResponse_httpStatus :: Lens' ListEndpointsByPlatformApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance GHC.Show.Show Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance GHC.Read.Read Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance GHC.Classes.Eq Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance GHC.Generics.Generic Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplicationResponse
instance GHC.Show.Show Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplicationResponse
instance GHC.Read.Read Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplicationResponse
instance GHC.Classes.Eq Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplicationResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ListEndpointsByPlatformApplication.ListEndpointsByPlatformApplication


-- | Returns all of the properties of a topic. Topic properties returned
--   might differ based on the authorization of the user.
module Network.AWS.SNS.GetTopicAttributes

-- | Input for GetTopicAttributes action.
--   
--   <i>See:</i> <a>newGetTopicAttributes</a> smart constructor.
data GetTopicAttributes
GetTopicAttributes' :: Text -> GetTopicAttributes

-- | The ARN of the topic whose properties you want to get.
[$sel:topicArn:GetTopicAttributes'] :: GetTopicAttributes -> Text

-- | Create a value of <a>GetTopicAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:GetTopicAttributes'</a>,
--   <a>getTopicAttributes_topicArn</a> - The ARN of the topic whose
--   properties you want to get.
newGetTopicAttributes :: Text -> GetTopicAttributes

-- | The ARN of the topic whose properties you want to get.
getTopicAttributes_topicArn :: Lens' GetTopicAttributes Text

-- | Response for GetTopicAttributes action.
--   
--   <i>See:</i> <a>newGetTopicAttributesResponse</a> smart constructor.
data GetTopicAttributesResponse
GetTopicAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetTopicAttributesResponse

-- | A map of the topic's attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the topic's
--   delivery policy.</li>
--   <li><tt>DisplayName</tt> – The human-readable name used in the
--   <tt>From</tt> field for notifications to <tt>email</tt> and
--   <tt>email-json</tt> endpoints.</li>
--   <li><tt>Owner</tt> – The account ID of the topic's owner.</li>
--   <li><tt>Policy</tt> – The JSON serialization of the topic's access
--   control policy.</li>
--   <li><tt>SubscriptionsConfirmed</tt> – The number of confirmed
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsDeleted</tt> – The number of deleted
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsPending</tt> – The number of subscriptions
--   pending confirmation for the topic.</li>
--   <li><tt>TopicArn</tt> – The topic's ARN.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy, taking system defaults into account.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> - The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
[$sel:attributes:GetTopicAttributesResponse'] :: GetTopicAttributesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetTopicAttributesResponse'] :: GetTopicAttributesResponse -> Int

-- | Create a value of <a>GetTopicAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetTopicAttributesResponse'</a>,
--   <a>getTopicAttributesResponse_attributes</a> - A map of the topic's
--   attributes. Attributes in this map include the following:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the topic's
--   delivery policy.</li>
--   <li><tt>DisplayName</tt> – The human-readable name used in the
--   <tt>From</tt> field for notifications to <tt>email</tt> and
--   <tt>email-json</tt> endpoints.</li>
--   <li><tt>Owner</tt> – The account ID of the topic's owner.</li>
--   <li><tt>Policy</tt> – The JSON serialization of the topic's access
--   control policy.</li>
--   <li><tt>SubscriptionsConfirmed</tt> – The number of confirmed
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsDeleted</tt> – The number of deleted
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsPending</tt> – The number of subscriptions
--   pending confirmation for the topic.</li>
--   <li><tt>TopicArn</tt> – The topic's ARN.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy, taking system defaults into account.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> - The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetTopicAttributesResponse'</a>,
--   <a>getTopicAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetTopicAttributesResponse :: Int -> GetTopicAttributesResponse

-- | A map of the topic's attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the topic's
--   delivery policy.</li>
--   <li><tt>DisplayName</tt> – The human-readable name used in the
--   <tt>From</tt> field for notifications to <tt>email</tt> and
--   <tt>email-json</tt> endpoints.</li>
--   <li><tt>Owner</tt> – The account ID of the topic's owner.</li>
--   <li><tt>Policy</tt> – The JSON serialization of the topic's access
--   control policy.</li>
--   <li><tt>SubscriptionsConfirmed</tt> – The number of confirmed
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsDeleted</tt> – The number of deleted
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsPending</tt> – The number of subscriptions
--   pending confirmation for the topic.</li>
--   <li><tt>TopicArn</tt> – The topic's ARN.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy, taking system defaults into account.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> - The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
getTopicAttributesResponse_attributes :: Lens' GetTopicAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTopicAttributesResponse_httpStatus :: Lens' GetTopicAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance GHC.Show.Show Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance GHC.Read.Read Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance GHC.Classes.Eq Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance GHC.Generics.Generic Network.AWS.SNS.GetTopicAttributes.GetTopicAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.GetTopicAttributes.GetTopicAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.GetTopicAttributes.GetTopicAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetTopicAttributes.GetTopicAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetTopicAttributes.GetTopicAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetTopicAttributes.GetTopicAttributes


-- | Returns all of the properties of a subscription.
module Network.AWS.SNS.GetSubscriptionAttributes

-- | Input for GetSubscriptionAttributes.
--   
--   <i>See:</i> <a>newGetSubscriptionAttributes</a> smart constructor.
data GetSubscriptionAttributes
GetSubscriptionAttributes' :: Text -> GetSubscriptionAttributes

-- | The ARN of the subscription whose properties you want to get.
[$sel:subscriptionArn:GetSubscriptionAttributes'] :: GetSubscriptionAttributes -> Text

-- | Create a value of <a>GetSubscriptionAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:GetSubscriptionAttributes'</a>,
--   <a>getSubscriptionAttributes_subscriptionArn</a> - The ARN of the
--   subscription whose properties you want to get.
newGetSubscriptionAttributes :: Text -> GetSubscriptionAttributes

-- | The ARN of the subscription whose properties you want to get.
getSubscriptionAttributes_subscriptionArn :: Lens' GetSubscriptionAttributes Text

-- | Response for GetSubscriptionAttributes action.
--   
--   <i>See:</i> <a>newGetSubscriptionAttributesResponse</a> smart
--   constructor.
data GetSubscriptionAttributesResponse
GetSubscriptionAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetSubscriptionAttributesResponse

-- | A map of the subscription's attributes. Attributes in this map include
--   the following:
--   
--   <ul>
--   <li><tt>ConfirmationWasAuthenticated</tt> – <tt>true</tt> if the
--   subscription confirmation request was authenticated.</li>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the
--   subscription's delivery policy.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults.</li>
--   <li><tt>FilterPolicy</tt> – The filter policy JSON that is assigned to
--   the subscription. For more information, see <a>Amazon SNS Message
--   Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   <li><tt>Owner</tt> – The account ID of the subscription's owner.</li>
--   <li><tt>PendingConfirmation</tt> – <tt>true</tt> if the subscription
--   hasn't been confirmed. To confirm a pending subscription, call the
--   <tt>ConfirmSubscription</tt> action with a confirmation token.</li>
--   <li><tt>RawMessageDelivery</tt> – <tt>true</tt> if raw message
--   delivery is enabled for the subscription. Raw messages are free of
--   JSON formatting and can be sent to HTTP/S and Amazon SQS
--   endpoints.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   <li><tt>SubscriptionArn</tt> – The subscription's ARN.</li>
--   <li><tt>TopicArn</tt> – The topic ARN that the subscription is
--   associated with.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
[$sel:attributes:GetSubscriptionAttributesResponse'] :: GetSubscriptionAttributesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetSubscriptionAttributesResponse'] :: GetSubscriptionAttributesResponse -> Int

-- | Create a value of <a>GetSubscriptionAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSubscriptionAttributesResponse'</a>,
--   <a>getSubscriptionAttributesResponse_attributes</a> - A map of the
--   subscription's attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>ConfirmationWasAuthenticated</tt> – <tt>true</tt> if the
--   subscription confirmation request was authenticated.</li>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the
--   subscription's delivery policy.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults.</li>
--   <li><tt>FilterPolicy</tt> – The filter policy JSON that is assigned to
--   the subscription. For more information, see <a>Amazon SNS Message
--   Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   <li><tt>Owner</tt> – The account ID of the subscription's owner.</li>
--   <li><tt>PendingConfirmation</tt> – <tt>true</tt> if the subscription
--   hasn't been confirmed. To confirm a pending subscription, call the
--   <tt>ConfirmSubscription</tt> action with a confirmation token.</li>
--   <li><tt>RawMessageDelivery</tt> – <tt>true</tt> if raw message
--   delivery is enabled for the subscription. Raw messages are free of
--   JSON formatting and can be sent to HTTP/S and Amazon SQS
--   endpoints.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   <li><tt>SubscriptionArn</tt> – The subscription's ARN.</li>
--   <li><tt>TopicArn</tt> – The topic ARN that the subscription is
--   associated with.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetSubscriptionAttributesResponse'</a>,
--   <a>getSubscriptionAttributesResponse_httpStatus</a> - The response's
--   http status code.
newGetSubscriptionAttributesResponse :: Int -> GetSubscriptionAttributesResponse

-- | A map of the subscription's attributes. Attributes in this map include
--   the following:
--   
--   <ul>
--   <li><tt>ConfirmationWasAuthenticated</tt> – <tt>true</tt> if the
--   subscription confirmation request was authenticated.</li>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the
--   subscription's delivery policy.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults.</li>
--   <li><tt>FilterPolicy</tt> – The filter policy JSON that is assigned to
--   the subscription. For more information, see <a>Amazon SNS Message
--   Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   <li><tt>Owner</tt> – The account ID of the subscription's owner.</li>
--   <li><tt>PendingConfirmation</tt> – <tt>true</tt> if the subscription
--   hasn't been confirmed. To confirm a pending subscription, call the
--   <tt>ConfirmSubscription</tt> action with a confirmation token.</li>
--   <li><tt>RawMessageDelivery</tt> – <tt>true</tt> if raw message
--   delivery is enabled for the subscription. Raw messages are free of
--   JSON formatting and can be sent to HTTP/S and Amazon SQS
--   endpoints.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   <li><tt>SubscriptionArn</tt> – The subscription's ARN.</li>
--   <li><tt>TopicArn</tt> – The topic ARN that the subscription is
--   associated with.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
getSubscriptionAttributesResponse_attributes :: Lens' GetSubscriptionAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSubscriptionAttributesResponse_httpStatus :: Lens' GetSubscriptionAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance GHC.Show.Show Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance GHC.Read.Read Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance GHC.Classes.Eq Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance GHC.Generics.Generic Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetSubscriptionAttributes.GetSubscriptionAttributes


-- | Retrieves the SMS sandbox status for the calling account in the target
--   Region.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
module Network.AWS.SNS.GetSMSSandboxAccountStatus

-- | <i>See:</i> <a>newGetSMSSandboxAccountStatus</a> smart constructor.
data GetSMSSandboxAccountStatus
GetSMSSandboxAccountStatus' :: GetSMSSandboxAccountStatus

-- | Create a value of <a>GetSMSSandboxAccountStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetSMSSandboxAccountStatus :: GetSMSSandboxAccountStatus

-- | <i>See:</i> <a>newGetSMSSandboxAccountStatusResponse</a> smart
--   constructor.
data GetSMSSandboxAccountStatusResponse
GetSMSSandboxAccountStatusResponse' :: Int -> Bool -> GetSMSSandboxAccountStatusResponse

-- | The response's http status code.
[$sel:httpStatus:GetSMSSandboxAccountStatusResponse'] :: GetSMSSandboxAccountStatusResponse -> Int

-- | Indicates whether the calling account is in the SMS sandbox.
[$sel:isInSandbox:GetSMSSandboxAccountStatusResponse'] :: GetSMSSandboxAccountStatusResponse -> Bool

-- | Create a value of <a>GetSMSSandboxAccountStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetSMSSandboxAccountStatusResponse'</a>,
--   <a>getSMSSandboxAccountStatusResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:isInSandbox:GetSMSSandboxAccountStatusResponse'</a>,
--   <a>getSMSSandboxAccountStatusResponse_isInSandbox</a> - Indicates
--   whether the calling account is in the SMS sandbox.
newGetSMSSandboxAccountStatusResponse :: Int -> Bool -> GetSMSSandboxAccountStatusResponse

-- | The response's http status code.
getSMSSandboxAccountStatusResponse_httpStatus :: Lens' GetSMSSandboxAccountStatusResponse Int

-- | Indicates whether the calling account is in the SMS sandbox.
getSMSSandboxAccountStatusResponse_isInSandbox :: Lens' GetSMSSandboxAccountStatusResponse Bool
instance GHC.Generics.Generic Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance GHC.Show.Show Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance GHC.Read.Read Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance GHC.Classes.Eq Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance GHC.Generics.Generic Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatusResponse
instance GHC.Show.Show Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatusResponse
instance GHC.Read.Read Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatusResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetSMSSandboxAccountStatus.GetSMSSandboxAccountStatus


-- | Returns the settings for sending SMS messages from your account.
--   
--   These settings are set with the <tt>SetSMSAttributes</tt> action.
module Network.AWS.SNS.GetSMSAttributes

-- | The input for the <tt>GetSMSAttributes</tt> request.
--   
--   <i>See:</i> <a>newGetSMSAttributes</a> smart constructor.
data GetSMSAttributes
GetSMSAttributes' :: Maybe [Text] -> GetSMSAttributes

-- | A list of the individual attribute names, such as
--   <tt>MonthlySpendLimit</tt>, for which you want values.
--   
--   For all attribute names, see <a>SetSMSAttributes</a>.
--   
--   If you don't use this parameter, Amazon SNS returns all SMS
--   attributes.
[$sel:attributes:GetSMSAttributes'] :: GetSMSAttributes -> Maybe [Text]

-- | Create a value of <a>GetSMSAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSMSAttributes'</a>,
--   <a>getSMSAttributes_attributes</a> - A list of the individual
--   attribute names, such as <tt>MonthlySpendLimit</tt>, for which you
--   want values.
--   
--   For all attribute names, see <a>SetSMSAttributes</a>.
--   
--   If you don't use this parameter, Amazon SNS returns all SMS
--   attributes.
newGetSMSAttributes :: GetSMSAttributes

-- | A list of the individual attribute names, such as
--   <tt>MonthlySpendLimit</tt>, for which you want values.
--   
--   For all attribute names, see <a>SetSMSAttributes</a>.
--   
--   If you don't use this parameter, Amazon SNS returns all SMS
--   attributes.
getSMSAttributes_attributes :: Lens' GetSMSAttributes (Maybe [Text])

-- | The response from the <tt>GetSMSAttributes</tt> request.
--   
--   <i>See:</i> <a>newGetSMSAttributesResponse</a> smart constructor.
data GetSMSAttributesResponse
GetSMSAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetSMSAttributesResponse

-- | The SMS attribute names and their values.
[$sel:attributes:GetSMSAttributesResponse'] :: GetSMSAttributesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetSMSAttributesResponse'] :: GetSMSAttributesResponse -> Int

-- | Create a value of <a>GetSMSAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSMSAttributes'</a>,
--   <a>getSMSAttributesResponse_attributes</a> - The SMS attribute names
--   and their values.
--   
--   <a>$sel:httpStatus:GetSMSAttributesResponse'</a>,
--   <a>getSMSAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetSMSAttributesResponse :: Int -> GetSMSAttributesResponse

-- | The SMS attribute names and their values.
getSMSAttributesResponse_attributes :: Lens' GetSMSAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSMSAttributesResponse_httpStatus :: Lens' GetSMSAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance GHC.Show.Show Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance GHC.Read.Read Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance GHC.Classes.Eq Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance GHC.Generics.Generic Network.AWS.SNS.GetSMSAttributes.GetSMSAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.GetSMSAttributes.GetSMSAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.GetSMSAttributes.GetSMSAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetSMSAttributes.GetSMSAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSMSAttributes.GetSMSAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetSMSAttributes.GetSMSAttributes


-- | Retrieves the attributes of the platform application object for the
--   supported push notification services, such as APNS and GCM (Firebase
--   Cloud Messaging). For more information, see <a>Using Amazon SNS Mobile
--   Push Notifications</a>.
module Network.AWS.SNS.GetPlatformApplicationAttributes

-- | Input for GetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newGetPlatformApplicationAttributes</a> smart
--   constructor.
data GetPlatformApplicationAttributes
GetPlatformApplicationAttributes' :: Text -> GetPlatformApplicationAttributes

-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.
[$sel:platformApplicationArn:GetPlatformApplicationAttributes'] :: GetPlatformApplicationAttributes -> Text

-- | Create a value of <a>GetPlatformApplicationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:GetPlatformApplicationAttributes'</a>,
--   <a>getPlatformApplicationAttributes_platformApplicationArn</a> -
--   PlatformApplicationArn for GetPlatformApplicationAttributesInput.
newGetPlatformApplicationAttributes :: Text -> GetPlatformApplicationAttributes

-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.
getPlatformApplicationAttributes_platformApplicationArn :: Lens' GetPlatformApplicationAttributes Text

-- | Response for GetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newGetPlatformApplicationAttributesResponse</a> smart
--   constructor.
data GetPlatformApplicationAttributesResponse
GetPlatformApplicationAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetPlatformApplicationAttributesResponse

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which EndpointCreated
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which EndpointDeleted
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which EndpointUpdate
--   event notifications should be sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.</li>
--   </ul>
[$sel:attributes:GetPlatformApplicationAttributesResponse'] :: GetPlatformApplicationAttributesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetPlatformApplicationAttributesResponse'] :: GetPlatformApplicationAttributesResponse -> Int

-- | Create a value of <a>GetPlatformApplicationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetPlatformApplicationAttributesResponse'</a>,
--   <a>getPlatformApplicationAttributesResponse_attributes</a> -
--   Attributes include the following:
--   
--   <ul>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which EndpointCreated
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which EndpointDeleted
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which EndpointUpdate
--   event notifications should be sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetPlatformApplicationAttributesResponse'</a>,
--   <a>getPlatformApplicationAttributesResponse_httpStatus</a> - The
--   response's http status code.
newGetPlatformApplicationAttributesResponse :: Int -> GetPlatformApplicationAttributesResponse

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which EndpointCreated
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which EndpointDeleted
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which EndpointUpdate
--   event notifications should be sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.</li>
--   </ul>
getPlatformApplicationAttributesResponse_attributes :: Lens' GetPlatformApplicationAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getPlatformApplicationAttributesResponse_httpStatus :: Lens' GetPlatformApplicationAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance GHC.Show.Show Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance GHC.Read.Read Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance GHC.Classes.Eq Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance GHC.Generics.Generic Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetPlatformApplicationAttributes.GetPlatformApplicationAttributes


-- | Retrieves the endpoint attributes for a device on one of the supported
--   push notification services, such as GCM (Firebase Cloud Messaging) and
--   APNS. For more information, see <a>Using Amazon SNS Mobile Push
--   Notifications</a>.
module Network.AWS.SNS.GetEndpointAttributes

-- | Input for GetEndpointAttributes action.
--   
--   <i>See:</i> <a>newGetEndpointAttributes</a> smart constructor.
data GetEndpointAttributes
GetEndpointAttributes' :: Text -> GetEndpointAttributes

-- | EndpointArn for GetEndpointAttributes input.
[$sel:endpointArn:GetEndpointAttributes'] :: GetEndpointAttributes -> Text

-- | Create a value of <a>GetEndpointAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:GetEndpointAttributes'</a>,
--   <a>getEndpointAttributes_endpointArn</a> - EndpointArn for
--   GetEndpointAttributes input.
newGetEndpointAttributes :: Text -> GetEndpointAttributes

-- | EndpointArn for GetEndpointAttributes input.
getEndpointAttributes_endpointArn :: Lens' GetEndpointAttributes Text

-- | Response from GetEndpointAttributes of the EndpointArn.
--   
--   <i>See:</i> <a>newGetEndpointAttributesResponse</a> smart constructor.
data GetEndpointAttributesResponse
GetEndpointAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetEndpointAttributesResponse

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.The device token for the iOS platform is
--   returned in lowercase.</li>
--   </ul>
[$sel:attributes:GetEndpointAttributesResponse'] :: GetEndpointAttributesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetEndpointAttributesResponse'] :: GetEndpointAttributesResponse -> Int

-- | Create a value of <a>GetEndpointAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetEndpointAttributesResponse'</a>,
--   <a>getEndpointAttributesResponse_attributes</a> - Attributes include
--   the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.The device token for the iOS platform is
--   returned in lowercase.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetEndpointAttributesResponse'</a>,
--   <a>getEndpointAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetEndpointAttributesResponse :: Int -> GetEndpointAttributesResponse

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.The device token for the iOS platform is
--   returned in lowercase.</li>
--   </ul>
getEndpointAttributesResponse_attributes :: Lens' GetEndpointAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getEndpointAttributesResponse_httpStatus :: Lens' GetEndpointAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance GHC.Show.Show Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance GHC.Read.Read Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance GHC.Classes.Eq Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance GHC.Generics.Generic Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributesResponse
instance GHC.Show.Show Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributesResponse
instance GHC.Read.Read Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributesResponse
instance GHC.Classes.Eq Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance Control.DeepSeq.NFData Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.GetEndpointAttributes.GetEndpointAttributes


-- | Deletes a topic and all its subscriptions. Deleting a topic might
--   prevent some messages previously sent to the topic from being
--   delivered to subscribers. This action is idempotent, so deleting a
--   topic that does not exist does not result in an error.
module Network.AWS.SNS.DeleteTopic

-- | <i>See:</i> <a>newDeleteTopic</a> smart constructor.
data DeleteTopic
DeleteTopic' :: Text -> DeleteTopic

-- | The ARN of the topic you want to delete.
[$sel:topicArn:DeleteTopic'] :: DeleteTopic -> Text

-- | Create a value of <a>DeleteTopic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:DeleteTopic'</a>, <a>deleteTopic_topicArn</a> - The
--   ARN of the topic you want to delete.
newDeleteTopic :: Text -> DeleteTopic

-- | The ARN of the topic you want to delete.
deleteTopic_topicArn :: Lens' DeleteTopic Text

-- | <i>See:</i> <a>newDeleteTopicResponse</a> smart constructor.
data DeleteTopicResponse
DeleteTopicResponse' :: DeleteTopicResponse

-- | Create a value of <a>DeleteTopicResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTopicResponse :: DeleteTopicResponse
instance GHC.Generics.Generic Network.AWS.SNS.DeleteTopic.DeleteTopic
instance GHC.Show.Show Network.AWS.SNS.DeleteTopic.DeleteTopic
instance GHC.Read.Read Network.AWS.SNS.DeleteTopic.DeleteTopic
instance GHC.Classes.Eq Network.AWS.SNS.DeleteTopic.DeleteTopic
instance GHC.Generics.Generic Network.AWS.SNS.DeleteTopic.DeleteTopicResponse
instance GHC.Show.Show Network.AWS.SNS.DeleteTopic.DeleteTopicResponse
instance GHC.Read.Read Network.AWS.SNS.DeleteTopic.DeleteTopicResponse
instance GHC.Classes.Eq Network.AWS.SNS.DeleteTopic.DeleteTopicResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.DeleteTopic.DeleteTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteTopic.DeleteTopicResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.DeleteTopic.DeleteTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteTopic.DeleteTopic
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.DeleteTopic.DeleteTopic
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.DeleteTopic.DeleteTopic
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.DeleteTopic.DeleteTopic


-- | Deletes an account's verified or pending phone number from the SMS
--   sandbox.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
module Network.AWS.SNS.DeleteSMSSandboxPhoneNumber

-- | <i>See:</i> <a>newDeleteSMSSandboxPhoneNumber</a> smart constructor.
data DeleteSMSSandboxPhoneNumber
DeleteSMSSandboxPhoneNumber' :: Text -> DeleteSMSSandboxPhoneNumber

-- | The destination phone number to delete.
[$sel:phoneNumber:DeleteSMSSandboxPhoneNumber'] :: DeleteSMSSandboxPhoneNumber -> Text

-- | Create a value of <a>DeleteSMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:DeleteSMSSandboxPhoneNumber'</a>,
--   <a>deleteSMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to delete.
newDeleteSMSSandboxPhoneNumber :: Text -> DeleteSMSSandboxPhoneNumber

-- | The destination phone number to delete.
deleteSMSSandboxPhoneNumber_phoneNumber :: Lens' DeleteSMSSandboxPhoneNumber Text

-- | <i>See:</i> <a>newDeleteSMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data DeleteSMSSandboxPhoneNumberResponse
DeleteSMSSandboxPhoneNumberResponse' :: Int -> DeleteSMSSandboxPhoneNumberResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSMSSandboxPhoneNumberResponse'] :: DeleteSMSSandboxPhoneNumberResponse -> Int

-- | Create a value of <a>DeleteSMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSMSSandboxPhoneNumberResponse'</a>,
--   <a>deleteSMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSMSSandboxPhoneNumberResponse :: Int -> DeleteSMSSandboxPhoneNumberResponse

-- | The response's http status code.
deleteSMSSandboxPhoneNumberResponse_httpStatus :: Lens' DeleteSMSSandboxPhoneNumberResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance GHC.Show.Show Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance GHC.Read.Read Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance GHC.Classes.Eq Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance GHC.Generics.Generic Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumberResponse
instance GHC.Show.Show Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumberResponse
instance GHC.Read.Read Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumberResponse
instance GHC.Classes.Eq Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumberResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.DeleteSMSSandboxPhoneNumber.DeleteSMSSandboxPhoneNumber


-- | Deletes a platform application object for one of the supported push
--   notification services, such as APNS and GCM (Firebase Cloud
--   Messaging). For more information, see <a>Using Amazon SNS Mobile Push
--   Notifications</a>.
module Network.AWS.SNS.DeletePlatformApplication

-- | Input for DeletePlatformApplication action.
--   
--   <i>See:</i> <a>newDeletePlatformApplication</a> smart constructor.
data DeletePlatformApplication
DeletePlatformApplication' :: Text -> DeletePlatformApplication

-- | PlatformApplicationArn of platform application object to delete.
[$sel:platformApplicationArn:DeletePlatformApplication'] :: DeletePlatformApplication -> Text

-- | Create a value of <a>DeletePlatformApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:DeletePlatformApplication'</a>,
--   <a>deletePlatformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn of platform application object to delete.
newDeletePlatformApplication :: Text -> DeletePlatformApplication

-- | PlatformApplicationArn of platform application object to delete.
deletePlatformApplication_platformApplicationArn :: Lens' DeletePlatformApplication Text

-- | <i>See:</i> <a>newDeletePlatformApplicationResponse</a> smart
--   constructor.
data DeletePlatformApplicationResponse
DeletePlatformApplicationResponse' :: DeletePlatformApplicationResponse

-- | Create a value of <a>DeletePlatformApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePlatformApplicationResponse :: DeletePlatformApplicationResponse
instance GHC.Generics.Generic Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance GHC.Show.Show Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance GHC.Read.Read Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance GHC.Classes.Eq Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance GHC.Generics.Generic Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplicationResponse
instance GHC.Show.Show Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplicationResponse
instance GHC.Read.Read Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplicationResponse
instance GHC.Classes.Eq Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.DeletePlatformApplication.DeletePlatformApplication


-- | Deletes the endpoint for a device and mobile app from Amazon SNS. This
--   action is idempotent. For more information, see <a>Using Amazon SNS
--   Mobile Push Notifications</a>.
--   
--   When you delete an endpoint that is also subscribed to a topic, then
--   you must also unsubscribe the endpoint from the topic.
module Network.AWS.SNS.DeleteEndpoint

-- | Input for DeleteEndpoint action.
--   
--   <i>See:</i> <a>newDeleteEndpoint</a> smart constructor.
data DeleteEndpoint
DeleteEndpoint' :: Text -> DeleteEndpoint

-- | EndpointArn of endpoint to delete.
[$sel:endpointArn:DeleteEndpoint'] :: DeleteEndpoint -> Text

-- | Create a value of <a>DeleteEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:DeleteEndpoint'</a>,
--   <a>deleteEndpoint_endpointArn</a> - EndpointArn of endpoint to delete.
newDeleteEndpoint :: Text -> DeleteEndpoint

-- | EndpointArn of endpoint to delete.
deleteEndpoint_endpointArn :: Lens' DeleteEndpoint Text

-- | <i>See:</i> <a>newDeleteEndpointResponse</a> smart constructor.
data DeleteEndpointResponse
DeleteEndpointResponse' :: DeleteEndpointResponse

-- | Create a value of <a>DeleteEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEndpointResponse :: DeleteEndpointResponse
instance GHC.Generics.Generic Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance GHC.Show.Show Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance GHC.Read.Read Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance GHC.Classes.Eq Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance GHC.Generics.Generic Network.AWS.SNS.DeleteEndpoint.DeleteEndpointResponse
instance GHC.Show.Show Network.AWS.SNS.DeleteEndpoint.DeleteEndpointResponse
instance GHC.Read.Read Network.AWS.SNS.DeleteEndpoint.DeleteEndpointResponse
instance GHC.Classes.Eq Network.AWS.SNS.DeleteEndpoint.DeleteEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteEndpoint.DeleteEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance Control.DeepSeq.NFData Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.DeleteEndpoint.DeleteEndpoint


-- | Creates a topic to which notifications can be published. Users can
--   create at most 100,000 standard topics (at most 1,000 FIFO topics).
--   For more information, see <a>Creating an Amazon SNS topic</a> in the
--   <i>Amazon SNS Developer Guide</i>. This action is idempotent, so if
--   the requester already owns a topic with the specified name, that
--   topic's ARN is returned without creating a new topic.
module Network.AWS.SNS.CreateTopic

-- | Input for CreateTopic action.
--   
--   <i>See:</i> <a>newCreateTopic</a> smart constructor.
data CreateTopic
CreateTopic' :: Maybe (HashMap Text Text) -> Maybe [Tag] -> Text -> CreateTopic

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateTopic</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>FifoTopic</tt> – Set to true to create a FIFO topic.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
[$sel:attributes:CreateTopic'] :: CreateTopic -> Maybe (HashMap Text Text)

-- | The list of tags to add to a new topic.
--   
--   To be able to tag a topic on creation, you must have the
--   <tt>sns:CreateTopic</tt> and <tt>sns:TagResource</tt> permissions.
[$sel:tags:CreateTopic'] :: CreateTopic -> Maybe [Tag]

-- | The name of the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
--   
--   For a FIFO (first-in-first-out) topic, the name must end with the
--   <tt>.fifo</tt> suffix.
[$sel:name:CreateTopic'] :: CreateTopic -> Text

-- | Create a value of <a>CreateTopic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreateTopic'</a>, <a>createTopic_attributes</a> - A
--   map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateTopic</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>FifoTopic</tt> – Set to true to create a FIFO topic.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
--   
--   <a>$sel:tags:CreateTopic'</a>, <a>createTopic_tags</a> - The list of
--   tags to add to a new topic.
--   
--   To be able to tag a topic on creation, you must have the
--   <tt>sns:CreateTopic</tt> and <tt>sns:TagResource</tt> permissions.
--   
--   <a>$sel:name:CreateTopic'</a>, <a>createTopic_name</a> - The name of
--   the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
--   
--   For a FIFO (first-in-first-out) topic, the name must end with the
--   <tt>.fifo</tt> suffix.
newCreateTopic :: Text -> CreateTopic

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateTopic</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>FifoTopic</tt> – Set to true to create a FIFO topic.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
createTopic_attributes :: Lens' CreateTopic (Maybe (HashMap Text Text))

-- | The list of tags to add to a new topic.
--   
--   To be able to tag a topic on creation, you must have the
--   <tt>sns:CreateTopic</tt> and <tt>sns:TagResource</tt> permissions.
createTopic_tags :: Lens' CreateTopic (Maybe [Tag])

-- | The name of the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
--   
--   For a FIFO (first-in-first-out) topic, the name must end with the
--   <tt>.fifo</tt> suffix.
createTopic_name :: Lens' CreateTopic Text

-- | Response from CreateTopic action.
--   
--   <i>See:</i> <a>newCreateTopicResponse</a> smart constructor.
data CreateTopicResponse
CreateTopicResponse' :: Maybe Text -> Int -> CreateTopicResponse

-- | The Amazon Resource Name (ARN) assigned to the created topic.
[$sel:topicArn:CreateTopicResponse'] :: CreateTopicResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateTopicResponse'] :: CreateTopicResponse -> Int

-- | Create a value of <a>CreateTopicResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:CreateTopicResponse'</a>,
--   <a>createTopicResponse_topicArn</a> - The Amazon Resource Name (ARN)
--   assigned to the created topic.
--   
--   <a>$sel:httpStatus:CreateTopicResponse'</a>,
--   <a>createTopicResponse_httpStatus</a> - The response's http status
--   code.
newCreateTopicResponse :: Int -> CreateTopicResponse

-- | The Amazon Resource Name (ARN) assigned to the created topic.
createTopicResponse_topicArn :: Lens' CreateTopicResponse (Maybe Text)

-- | The response's http status code.
createTopicResponse_httpStatus :: Lens' CreateTopicResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.CreateTopic.CreateTopic
instance GHC.Show.Show Network.AWS.SNS.CreateTopic.CreateTopic
instance GHC.Read.Read Network.AWS.SNS.CreateTopic.CreateTopic
instance GHC.Classes.Eq Network.AWS.SNS.CreateTopic.CreateTopic
instance GHC.Generics.Generic Network.AWS.SNS.CreateTopic.CreateTopicResponse
instance GHC.Show.Show Network.AWS.SNS.CreateTopic.CreateTopicResponse
instance GHC.Read.Read Network.AWS.SNS.CreateTopic.CreateTopicResponse
instance GHC.Classes.Eq Network.AWS.SNS.CreateTopic.CreateTopicResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.CreateTopic.CreateTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.CreateTopic.CreateTopicResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.CreateTopic.CreateTopic
instance Control.DeepSeq.NFData Network.AWS.SNS.CreateTopic.CreateTopic
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.CreateTopic.CreateTopic
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.CreateTopic.CreateTopic
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.CreateTopic.CreateTopic


-- | Adds a destination phone number to an account in the SMS sandbox and
--   sends a one-time password (OTP) to that phone number.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
module Network.AWS.SNS.CreateSMSSandboxPhoneNumber

-- | <i>See:</i> <a>newCreateSMSSandboxPhoneNumber</a> smart constructor.
data CreateSMSSandboxPhoneNumber
CreateSMSSandboxPhoneNumber' :: Maybe LanguageCodeString -> Text -> CreateSMSSandboxPhoneNumber

-- | The language to use for sending the OTP. The default value is
--   <tt>en-US</tt>.
[$sel:languageCode:CreateSMSSandboxPhoneNumber'] :: CreateSMSSandboxPhoneNumber -> Maybe LanguageCodeString

-- | The destination phone number to verify. On verification, Amazon SNS
--   adds this phone number to the list of verified phone numbers that you
--   can send SMS messages to.
[$sel:phoneNumber:CreateSMSSandboxPhoneNumber'] :: CreateSMSSandboxPhoneNumber -> Text

-- | Create a value of <a>CreateSMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:CreateSMSSandboxPhoneNumber'</a>,
--   <a>createSMSSandboxPhoneNumber_languageCode</a> - The language to use
--   for sending the OTP. The default value is <tt>en-US</tt>.
--   
--   <a>$sel:phoneNumber:CreateSMSSandboxPhoneNumber'</a>,
--   <a>createSMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to verify. On verification, Amazon SNS adds this phone number
--   to the list of verified phone numbers that you can send SMS messages
--   to.
newCreateSMSSandboxPhoneNumber :: Text -> CreateSMSSandboxPhoneNumber

-- | The language to use for sending the OTP. The default value is
--   <tt>en-US</tt>.
createSMSSandboxPhoneNumber_languageCode :: Lens' CreateSMSSandboxPhoneNumber (Maybe LanguageCodeString)

-- | The destination phone number to verify. On verification, Amazon SNS
--   adds this phone number to the list of verified phone numbers that you
--   can send SMS messages to.
createSMSSandboxPhoneNumber_phoneNumber :: Lens' CreateSMSSandboxPhoneNumber Text

-- | <i>See:</i> <a>newCreateSMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data CreateSMSSandboxPhoneNumberResponse
CreateSMSSandboxPhoneNumberResponse' :: Int -> CreateSMSSandboxPhoneNumberResponse

-- | The response's http status code.
[$sel:httpStatus:CreateSMSSandboxPhoneNumberResponse'] :: CreateSMSSandboxPhoneNumberResponse -> Int

-- | Create a value of <a>CreateSMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateSMSSandboxPhoneNumberResponse'</a>,
--   <a>createSMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newCreateSMSSandboxPhoneNumberResponse :: Int -> CreateSMSSandboxPhoneNumberResponse

-- | The response's http status code.
createSMSSandboxPhoneNumberResponse_httpStatus :: Lens' CreateSMSSandboxPhoneNumberResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance GHC.Show.Show Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance GHC.Read.Read Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance GHC.Classes.Eq Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance GHC.Generics.Generic Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumberResponse
instance GHC.Show.Show Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumberResponse
instance GHC.Read.Read Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumberResponse
instance GHC.Classes.Eq Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumberResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.CreateSMSSandboxPhoneNumber.CreateSMSSandboxPhoneNumber


-- | Creates an endpoint for a device and mobile app on one of the
--   supported push notification services, such as GCM (Firebase Cloud
--   Messaging) and APNS. <tt>CreatePlatformEndpoint</tt> requires the
--   <tt>PlatformApplicationArn</tt> that is returned from
--   <tt>CreatePlatformApplication</tt>. You can use the returned
--   <tt>EndpointArn</tt> to send a message to a mobile app or by the
--   <tt>Subscribe</tt> action for subscription to a topic. The
--   <tt>CreatePlatformEndpoint</tt> action is idempotent, so if the
--   requester already owns an endpoint with the same device token and
--   attributes, that endpoint's ARN is returned without creating a new
--   endpoint. For more information, see <a>Using Amazon SNS Mobile Push
--   Notifications</a>.
--   
--   When using <tt>CreatePlatformEndpoint</tt> with Baidu, two attributes
--   must be provided: ChannelId and UserId. The token field must also
--   contain the ChannelId. For more information, see <a>Creating an Amazon
--   SNS Endpoint for Baidu</a>.
module Network.AWS.SNS.CreatePlatformEndpoint

-- | Input for CreatePlatformEndpoint action.
--   
--   <i>See:</i> <a>newCreatePlatformEndpoint</a> smart constructor.
data CreatePlatformEndpoint
CreatePlatformEndpoint' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreatePlatformEndpoint

-- | Arbitrary user data to associate with the endpoint. Amazon SNS does
--   not use this data. The data must be in UTF-8 format and less than 2KB.
[$sel:customUserData:CreatePlatformEndpoint'] :: CreatePlatformEndpoint -> Maybe Text

-- | For a list of attributes, see <a>SetEndpointAttributes</a>.
[$sel:attributes:CreatePlatformEndpoint'] :: CreatePlatformEndpoint -> Maybe (HashMap Text Text)

-- | PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
[$sel:platformApplicationArn:CreatePlatformEndpoint'] :: CreatePlatformEndpoint -> Text

-- | Unique identifier created by the notification service for an app on a
--   device. The specific name for Token will vary, depending on which
--   notification service is being used. For example, when using APNS as
--   the notification service, you need the device token. Alternatively,
--   when using GCM (Firebase Cloud Messaging) or ADM, the device token
--   equivalent is called the registration ID.
[$sel:token:CreatePlatformEndpoint'] :: CreatePlatformEndpoint -> Text

-- | Create a value of <a>CreatePlatformEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customUserData:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_customUserData</a> - Arbitrary user data to
--   associate with the endpoint. Amazon SNS does not use this data. The
--   data must be in UTF-8 format and less than 2KB.
--   
--   <a>$sel:attributes:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_attributes</a> - For a list of attributes,
--   see <a>SetEndpointAttributes</a>.
--   
--   <a>$sel:platformApplicationArn:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_platformApplicationArn</a> -
--   PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
--   
--   <a>$sel:token:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_token</a> - Unique identifier created by the
--   notification service for an app on a device. The specific name for
--   Token will vary, depending on which notification service is being
--   used. For example, when using APNS as the notification service, you
--   need the device token. Alternatively, when using GCM (Firebase Cloud
--   Messaging) or ADM, the device token equivalent is called the
--   registration ID.
newCreatePlatformEndpoint :: Text -> Text -> CreatePlatformEndpoint

-- | Arbitrary user data to associate with the endpoint. Amazon SNS does
--   not use this data. The data must be in UTF-8 format and less than 2KB.
createPlatformEndpoint_customUserData :: Lens' CreatePlatformEndpoint (Maybe Text)

-- | For a list of attributes, see <a>SetEndpointAttributes</a>.
createPlatformEndpoint_attributes :: Lens' CreatePlatformEndpoint (Maybe (HashMap Text Text))

-- | PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
createPlatformEndpoint_platformApplicationArn :: Lens' CreatePlatformEndpoint Text

-- | Unique identifier created by the notification service for an app on a
--   device. The specific name for Token will vary, depending on which
--   notification service is being used. For example, when using APNS as
--   the notification service, you need the device token. Alternatively,
--   when using GCM (Firebase Cloud Messaging) or ADM, the device token
--   equivalent is called the registration ID.
createPlatformEndpoint_token :: Lens' CreatePlatformEndpoint Text

-- | Response from CreateEndpoint action.
--   
--   <i>See:</i> <a>newCreatePlatformEndpointResponse</a> smart
--   constructor.
data CreatePlatformEndpointResponse
CreatePlatformEndpointResponse' :: Maybe Text -> Int -> CreatePlatformEndpointResponse

-- | EndpointArn returned from CreateEndpoint action.
[$sel:endpointArn:CreatePlatformEndpointResponse'] :: CreatePlatformEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePlatformEndpointResponse'] :: CreatePlatformEndpointResponse -> Int

-- | Create a value of <a>CreatePlatformEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:CreatePlatformEndpointResponse'</a>,
--   <a>createPlatformEndpointResponse_endpointArn</a> - EndpointArn
--   returned from CreateEndpoint action.
--   
--   <a>$sel:httpStatus:CreatePlatformEndpointResponse'</a>,
--   <a>createPlatformEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlatformEndpointResponse :: Int -> CreatePlatformEndpointResponse

-- | EndpointArn returned from CreateEndpoint action.
createPlatformEndpointResponse_endpointArn :: Lens' CreatePlatformEndpointResponse (Maybe Text)

-- | The response's http status code.
createPlatformEndpointResponse_httpStatus :: Lens' CreatePlatformEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance GHC.Show.Show Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance GHC.Read.Read Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance GHC.Classes.Eq Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance GHC.Generics.Generic Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpointResponse
instance GHC.Show.Show Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpointResponse
instance GHC.Read.Read Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpointResponse
instance GHC.Classes.Eq Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance Control.DeepSeq.NFData Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance Control.DeepSeq.NFData Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.CreatePlatformEndpoint.CreatePlatformEndpoint


-- | Creates a platform application object for one of the supported push
--   notification services, such as APNS and GCM (Firebase Cloud
--   Messaging), to which devices and mobile apps may register. You must
--   specify <tt>PlatformPrincipal</tt> and <tt>PlatformCredential</tt>
--   attributes when using the <tt>CreatePlatformApplication</tt> action.
--   
--   <tt>PlatformPrincipal</tt> and <tt>PlatformCredential</tt> are
--   received from the notification service.
--   
--   <ul>
--   <li>For <tt>ADM</tt>, <tt>PlatformPrincipal</tt> is <tt>client id</tt>
--   and <tt>PlatformCredential</tt> is <tt>client secret</tt>.</li>
--   <li>For <tt>Baidu</tt>, <tt>PlatformPrincipal</tt> is <tt>API key</tt>
--   and <tt>PlatformCredential</tt> is <tt>secret key</tt>.</li>
--   <li>For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt> and
--   <tt>PlatformCredential</tt> is <tt>private key</tt>.</li>
--   <li>For <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt> and the <tt>PlatformCredential</tt> is
--   <tt>API key</tt>.</li>
--   <li>For <tt>MPNS</tt>, <tt>PlatformPrincipal</tt> is <tt>TLS
--   certificate</tt> and <tt>PlatformCredential</tt> is <tt>private
--   key</tt>.</li>
--   <li>For <tt>WNS</tt>, <tt>PlatformPrincipal</tt> is <tt>Package
--   Security Identifier</tt> and <tt>PlatformCredential</tt> is <tt>secret
--   key</tt>.</li>
--   </ul>
--   
--   You can use the returned <tt>PlatformApplicationArn</tt> as an
--   attribute for the <tt>CreatePlatformEndpoint</tt> action.
module Network.AWS.SNS.CreatePlatformApplication

-- | Input for CreatePlatformApplication action.
--   
--   <i>See:</i> <a>newCreatePlatformApplication</a> smart constructor.
data CreatePlatformApplication
CreatePlatformApplication' :: Text -> Text -> HashMap Text Text -> CreatePlatformApplication

-- | Application names must be made up of only uppercase and lowercase
--   ASCII letters, numbers, underscores, hyphens, and periods, and must be
--   between 1 and 256 characters long.
[$sel:name:CreatePlatformApplication'] :: CreatePlatformApplication -> Text

-- | The following platforms are supported: ADM (Amazon Device Messaging),
--   APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM
--   (Firebase Cloud Messaging).
[$sel:platform:CreatePlatformApplication'] :: CreatePlatformApplication -> Text

-- | For a list of attributes, see <a>SetPlatformApplicationAttributes</a>.
[$sel:attributes:CreatePlatformApplication'] :: CreatePlatformApplication -> HashMap Text Text

-- | Create a value of <a>CreatePlatformApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_name</a> - Application names must be made
--   up of only uppercase and lowercase ASCII letters, numbers,
--   underscores, hyphens, and periods, and must be between 1 and 256
--   characters long.
--   
--   <a>$sel:platform:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_platform</a> - The following platforms
--   are supported: ADM (Amazon Device Messaging), APNS (Apple Push
--   Notification Service), APNS_SANDBOX, and GCM (Firebase Cloud
--   Messaging).
--   
--   <a>$sel:attributes:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_attributes</a> - For a list of
--   attributes, see <a>SetPlatformApplicationAttributes</a>.
newCreatePlatformApplication :: Text -> Text -> CreatePlatformApplication

-- | Application names must be made up of only uppercase and lowercase
--   ASCII letters, numbers, underscores, hyphens, and periods, and must be
--   between 1 and 256 characters long.
createPlatformApplication_name :: Lens' CreatePlatformApplication Text

-- | The following platforms are supported: ADM (Amazon Device Messaging),
--   APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM
--   (Firebase Cloud Messaging).
createPlatformApplication_platform :: Lens' CreatePlatformApplication Text

-- | For a list of attributes, see <a>SetPlatformApplicationAttributes</a>.
createPlatformApplication_attributes :: Lens' CreatePlatformApplication (HashMap Text Text)

-- | Response from CreatePlatformApplication action.
--   
--   <i>See:</i> <a>newCreatePlatformApplicationResponse</a> smart
--   constructor.
data CreatePlatformApplicationResponse
CreatePlatformApplicationResponse' :: Maybe Text -> Int -> CreatePlatformApplicationResponse

-- | PlatformApplicationArn is returned.
[$sel:platformApplicationArn:CreatePlatformApplicationResponse'] :: CreatePlatformApplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePlatformApplicationResponse'] :: CreatePlatformApplicationResponse -> Int

-- | Create a value of <a>CreatePlatformApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:CreatePlatformApplicationResponse'</a>,
--   <a>createPlatformApplicationResponse_platformApplicationArn</a> -
--   PlatformApplicationArn is returned.
--   
--   <a>$sel:httpStatus:CreatePlatformApplicationResponse'</a>,
--   <a>createPlatformApplicationResponse_httpStatus</a> - The response's
--   http status code.
newCreatePlatformApplicationResponse :: Int -> CreatePlatformApplicationResponse

-- | PlatformApplicationArn is returned.
createPlatformApplicationResponse_platformApplicationArn :: Lens' CreatePlatformApplicationResponse (Maybe Text)

-- | The response's http status code.
createPlatformApplicationResponse_httpStatus :: Lens' CreatePlatformApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance GHC.Show.Show Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance GHC.Read.Read Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance GHC.Classes.Eq Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance GHC.Generics.Generic Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplicationResponse
instance GHC.Show.Show Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplicationResponse
instance GHC.Read.Read Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplicationResponse
instance GHC.Classes.Eq Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance Control.DeepSeq.NFData Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.CreatePlatformApplication.CreatePlatformApplication


-- | Verifies an endpoint owner's intent to receive messages by validating
--   the token sent to the endpoint by an earlier <tt>Subscribe</tt>
--   action. If the token is valid, the action creates a new subscription
--   and returns its Amazon Resource Name (ARN). This call requires an AWS
--   signature only when the <tt>AuthenticateOnUnsubscribe</tt> flag is set
--   to "true".
module Network.AWS.SNS.ConfirmSubscription

-- | Input for ConfirmSubscription action.
--   
--   <i>See:</i> <a>newConfirmSubscription</a> smart constructor.
data ConfirmSubscription
ConfirmSubscription' :: Maybe Text -> Text -> Text -> ConfirmSubscription

-- | Disallows unauthenticated unsubscribes of the subscription. If the
--   value of this parameter is <tt>true</tt> and the request has an Amazon
--   Web Services signature, then only the topic owner and the subscription
--   owner can unsubscribe the endpoint. The unsubscribe action requires
--   Amazon Web Services authentication.
[$sel:authenticateOnUnsubscribe:ConfirmSubscription'] :: ConfirmSubscription -> Maybe Text

-- | The ARN of the topic for which you wish to confirm a subscription.
[$sel:topicArn:ConfirmSubscription'] :: ConfirmSubscription -> Text

-- | Short-lived token sent to an endpoint during the <tt>Subscribe</tt>
--   action.
[$sel:token:ConfirmSubscription'] :: ConfirmSubscription -> Text

-- | Create a value of <a>ConfirmSubscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authenticateOnUnsubscribe:ConfirmSubscription'</a>,
--   <a>confirmSubscription_authenticateOnUnsubscribe</a> - Disallows
--   unauthenticated unsubscribes of the subscription. If the value of this
--   parameter is <tt>true</tt> and the request has an Amazon Web Services
--   signature, then only the topic owner and the subscription owner can
--   unsubscribe the endpoint. The unsubscribe action requires Amazon Web
--   Services authentication.
--   
--   <a>$sel:topicArn:ConfirmSubscription'</a>,
--   <a>confirmSubscription_topicArn</a> - The ARN of the topic for which
--   you wish to confirm a subscription.
--   
--   <a>$sel:token:ConfirmSubscription'</a>,
--   <a>confirmSubscription_token</a> - Short-lived token sent to an
--   endpoint during the <tt>Subscribe</tt> action.
newConfirmSubscription :: Text -> Text -> ConfirmSubscription

-- | Disallows unauthenticated unsubscribes of the subscription. If the
--   value of this parameter is <tt>true</tt> and the request has an Amazon
--   Web Services signature, then only the topic owner and the subscription
--   owner can unsubscribe the endpoint. The unsubscribe action requires
--   Amazon Web Services authentication.
confirmSubscription_authenticateOnUnsubscribe :: Lens' ConfirmSubscription (Maybe Text)

-- | The ARN of the topic for which you wish to confirm a subscription.
confirmSubscription_topicArn :: Lens' ConfirmSubscription Text

-- | Short-lived token sent to an endpoint during the <tt>Subscribe</tt>
--   action.
confirmSubscription_token :: Lens' ConfirmSubscription Text

-- | Response for ConfirmSubscriptions action.
--   
--   <i>See:</i> <a>newConfirmSubscriptionResponse</a> smart constructor.
data ConfirmSubscriptionResponse
ConfirmSubscriptionResponse' :: Maybe Text -> Int -> ConfirmSubscriptionResponse

-- | The ARN of the created subscription.
[$sel:subscriptionArn:ConfirmSubscriptionResponse'] :: ConfirmSubscriptionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ConfirmSubscriptionResponse'] :: ConfirmSubscriptionResponse -> Int

-- | Create a value of <a>ConfirmSubscriptionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:ConfirmSubscriptionResponse'</a>,
--   <a>confirmSubscriptionResponse_subscriptionArn</a> - The ARN of the
--   created subscription.
--   
--   <a>$sel:httpStatus:ConfirmSubscriptionResponse'</a>,
--   <a>confirmSubscriptionResponse_httpStatus</a> - The response's http
--   status code.
newConfirmSubscriptionResponse :: Int -> ConfirmSubscriptionResponse

-- | The ARN of the created subscription.
confirmSubscriptionResponse_subscriptionArn :: Lens' ConfirmSubscriptionResponse (Maybe Text)

-- | The response's http status code.
confirmSubscriptionResponse_httpStatus :: Lens' ConfirmSubscriptionResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance GHC.Show.Show Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance GHC.Read.Read Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance GHC.Classes.Eq Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance GHC.Generics.Generic Network.AWS.SNS.ConfirmSubscription.ConfirmSubscriptionResponse
instance GHC.Show.Show Network.AWS.SNS.ConfirmSubscription.ConfirmSubscriptionResponse
instance GHC.Read.Read Network.AWS.SNS.ConfirmSubscription.ConfirmSubscriptionResponse
instance GHC.Classes.Eq Network.AWS.SNS.ConfirmSubscription.ConfirmSubscriptionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance Control.DeepSeq.NFData Network.AWS.SNS.ConfirmSubscription.ConfirmSubscriptionResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance Control.DeepSeq.NFData Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.ConfirmSubscription.ConfirmSubscription


-- | Accepts a phone number and indicates whether the phone holder has
--   opted out of receiving SMS messages from your account. You cannot send
--   SMS messages to a number that is opted out.
--   
--   To resume sending messages, you can opt in the number by using the
--   <tt>OptInPhoneNumber</tt> action.
module Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut

-- | The input for the <tt>CheckIfPhoneNumberIsOptedOut</tt> action.
--   
--   <i>See:</i> <a>newCheckIfPhoneNumberIsOptedOut</a> smart constructor.
data CheckIfPhoneNumberIsOptedOut
CheckIfPhoneNumberIsOptedOut' :: Text -> CheckIfPhoneNumberIsOptedOut

-- | The phone number for which you want to check the opt out status.
[$sel:phoneNumber:CheckIfPhoneNumberIsOptedOut'] :: CheckIfPhoneNumberIsOptedOut -> Text

-- | Create a value of <a>CheckIfPhoneNumberIsOptedOut</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:CheckIfPhoneNumberIsOptedOut'</a>,
--   <a>checkIfPhoneNumberIsOptedOut_phoneNumber</a> - The phone number for
--   which you want to check the opt out status.
newCheckIfPhoneNumberIsOptedOut :: Text -> CheckIfPhoneNumberIsOptedOut

-- | The phone number for which you want to check the opt out status.
checkIfPhoneNumberIsOptedOut_phoneNumber :: Lens' CheckIfPhoneNumberIsOptedOut Text

-- | The response from the <tt>CheckIfPhoneNumberIsOptedOut</tt> action.
--   
--   <i>See:</i> <a>newCheckIfPhoneNumberIsOptedOutResponse</a> smart
--   constructor.
data CheckIfPhoneNumberIsOptedOutResponse
CheckIfPhoneNumberIsOptedOutResponse' :: Maybe Bool -> Int -> CheckIfPhoneNumberIsOptedOutResponse

-- | Indicates whether the phone number is opted out:
--   
--   <ul>
--   <li><tt>true</tt> – The phone number is opted out, meaning you cannot
--   publish SMS messages to it.</li>
--   <li><tt>false</tt> – The phone number is opted in, meaning you can
--   publish SMS messages to it.</li>
--   </ul>
[$sel:isOptedOut:CheckIfPhoneNumberIsOptedOutResponse'] :: CheckIfPhoneNumberIsOptedOutResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:CheckIfPhoneNumberIsOptedOutResponse'] :: CheckIfPhoneNumberIsOptedOutResponse -> Int

-- | Create a value of <a>CheckIfPhoneNumberIsOptedOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isOptedOut:CheckIfPhoneNumberIsOptedOutResponse'</a>,
--   <a>checkIfPhoneNumberIsOptedOutResponse_isOptedOut</a> - Indicates
--   whether the phone number is opted out:
--   
--   <ul>
--   <li><tt>true</tt> – The phone number is opted out, meaning you cannot
--   publish SMS messages to it.</li>
--   <li><tt>false</tt> – The phone number is opted in, meaning you can
--   publish SMS messages to it.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:CheckIfPhoneNumberIsOptedOutResponse'</a>,
--   <a>checkIfPhoneNumberIsOptedOutResponse_httpStatus</a> - The
--   response's http status code.
newCheckIfPhoneNumberIsOptedOutResponse :: Int -> CheckIfPhoneNumberIsOptedOutResponse

-- | Indicates whether the phone number is opted out:
--   
--   <ul>
--   <li><tt>true</tt> – The phone number is opted out, meaning you cannot
--   publish SMS messages to it.</li>
--   <li><tt>false</tt> – The phone number is opted in, meaning you can
--   publish SMS messages to it.</li>
--   </ul>
checkIfPhoneNumberIsOptedOutResponse_isOptedOut :: Lens' CheckIfPhoneNumberIsOptedOutResponse (Maybe Bool)

-- | The response's http status code.
checkIfPhoneNumberIsOptedOutResponse_httpStatus :: Lens' CheckIfPhoneNumberIsOptedOutResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance GHC.Show.Show Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance GHC.Read.Read Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance GHC.Classes.Eq Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance GHC.Generics.Generic Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOutResponse
instance GHC.Show.Show Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOutResponse
instance GHC.Read.Read Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOutResponse
instance GHC.Classes.Eq Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOutResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance Control.DeepSeq.NFData Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOutResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance Control.DeepSeq.NFData Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.CheckIfPhoneNumberIsOptedOut.CheckIfPhoneNumberIsOptedOut


-- | Adds a statement to a topic's access control policy, granting access
--   for the specified accounts to the specified actions.
module Network.AWS.SNS.AddPermission

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Text -> Text -> [Text] -> [Text] -> AddPermission

-- | The ARN of the topic whose access control policy you wish to modify.
[$sel:topicArn:AddPermission'] :: AddPermission -> Text

-- | A unique identifier for the new policy statement.
[$sel:label:AddPermission'] :: AddPermission -> Text

-- | The account IDs of the users (principals) who will be given access to
--   the specified actions. The users must have account, but do not need to
--   be signed up for this service.
[$sel:aWSAccountId:AddPermission'] :: AddPermission -> [Text]

-- | The action you want to allow for the specified principal(s).
--   
--   Valid values: Any Amazon SNS action name, for example
--   <tt>Publish</tt>.
[$sel:actionName:AddPermission'] :: AddPermission -> [Text]

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:AddPermission'</a>, <a>addPermission_topicArn</a> -
--   The ARN of the topic whose access control policy you wish to modify.
--   
--   <a>$sel:label:AddPermission'</a>, <a>addPermission_label</a> - A
--   unique identifier for the new policy statement.
--   
--   <a>$sel:aWSAccountId:AddPermission'</a>,
--   <a>addPermission_aWSAccountId</a> - The account IDs of the users
--   (principals) who will be given access to the specified actions. The
--   users must have account, but do not need to be signed up for this
--   service.
--   
--   <a>$sel:actionName:AddPermission'</a>, <a>addPermission_actionName</a>
--   - The action you want to allow for the specified principal(s).
--   
--   Valid values: Any Amazon SNS action name, for example
--   <tt>Publish</tt>.
newAddPermission :: Text -> Text -> AddPermission

-- | The ARN of the topic whose access control policy you wish to modify.
addPermission_topicArn :: Lens' AddPermission Text

-- | A unique identifier for the new policy statement.
addPermission_label :: Lens' AddPermission Text

-- | The account IDs of the users (principals) who will be given access to
--   the specified actions. The users must have account, but do not need to
--   be signed up for this service.
addPermission_aWSAccountId :: Lens' AddPermission [Text]

-- | The action you want to allow for the specified principal(s).
--   
--   Valid values: Any Amazon SNS action name, for example
--   <tt>Publish</tt>.
addPermission_actionName :: Lens' AddPermission [Text]

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: AddPermissionResponse

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddPermissionResponse :: AddPermissionResponse
instance GHC.Generics.Generic Network.AWS.SNS.AddPermission.AddPermission
instance GHC.Show.Show Network.AWS.SNS.AddPermission.AddPermission
instance GHC.Read.Read Network.AWS.SNS.AddPermission.AddPermission
instance GHC.Classes.Eq Network.AWS.SNS.AddPermission.AddPermission
instance GHC.Generics.Generic Network.AWS.SNS.AddPermission.AddPermissionResponse
instance GHC.Show.Show Network.AWS.SNS.AddPermission.AddPermissionResponse
instance GHC.Read.Read Network.AWS.SNS.AddPermission.AddPermissionResponse
instance GHC.Classes.Eq Network.AWS.SNS.AddPermission.AddPermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.AddPermission.AddPermission
instance Control.DeepSeq.NFData Network.AWS.SNS.AddPermission.AddPermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.AddPermission.AddPermission
instance Control.DeepSeq.NFData Network.AWS.SNS.AddPermission.AddPermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.AddPermission.AddPermission
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.AddPermission.AddPermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.AddPermission.AddPermission


-- | Deletes a subscription. If the subscription requires authentication
--   for deletion, only the owner of the subscription or the topic's owner
--   can unsubscribe, and an Amazon Web Services signature is required. If
--   the <tt>Unsubscribe</tt> call does not require authentication and the
--   requester is not the subscription owner, a final cancellation message
--   is delivered to the endpoint, so that the endpoint owner can easily
--   resubscribe to the topic if the <tt>Unsubscribe</tt> request was
--   unintended.
--   
--   This action is throttled at 100 transactions per second (TPS).
module Network.AWS.SNS.Unsubscribe

-- | Input for Unsubscribe action.
--   
--   <i>See:</i> <a>newUnsubscribe</a> smart constructor.
data Unsubscribe
Unsubscribe' :: Text -> Unsubscribe

-- | The ARN of the subscription to be deleted.
[$sel:subscriptionArn:Unsubscribe'] :: Unsubscribe -> Text

-- | Create a value of <a>Unsubscribe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:Unsubscribe'</a>,
--   <a>unsubscribe_subscriptionArn</a> - The ARN of the subscription to be
--   deleted.
newUnsubscribe :: Text -> Unsubscribe

-- | The ARN of the subscription to be deleted.
unsubscribe_subscriptionArn :: Lens' Unsubscribe Text

-- | <i>See:</i> <a>newUnsubscribeResponse</a> smart constructor.
data UnsubscribeResponse
UnsubscribeResponse' :: UnsubscribeResponse

-- | Create a value of <a>UnsubscribeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnsubscribeResponse :: UnsubscribeResponse
instance GHC.Generics.Generic Network.AWS.SNS.Unsubscribe.Unsubscribe
instance GHC.Show.Show Network.AWS.SNS.Unsubscribe.Unsubscribe
instance GHC.Read.Read Network.AWS.SNS.Unsubscribe.Unsubscribe
instance GHC.Classes.Eq Network.AWS.SNS.Unsubscribe.Unsubscribe
instance GHC.Generics.Generic Network.AWS.SNS.Unsubscribe.UnsubscribeResponse
instance GHC.Show.Show Network.AWS.SNS.Unsubscribe.UnsubscribeResponse
instance GHC.Read.Read Network.AWS.SNS.Unsubscribe.UnsubscribeResponse
instance GHC.Classes.Eq Network.AWS.SNS.Unsubscribe.UnsubscribeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.Unsubscribe.Unsubscribe
instance Control.DeepSeq.NFData Network.AWS.SNS.Unsubscribe.UnsubscribeResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.Unsubscribe.Unsubscribe
instance Control.DeepSeq.NFData Network.AWS.SNS.Unsubscribe.Unsubscribe
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.Unsubscribe.Unsubscribe
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.Unsubscribe.Unsubscribe
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.Unsubscribe.Unsubscribe


-- | Remove tags from the specified Amazon SNS topic. For an overview, see
--   <a>Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.
module Network.AWS.SNS.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the topic from which to remove tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys to remove from the specified topic.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the topic from which to
--   remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the specified topic.
newUntagResource :: Text -> UntagResource

-- | The ARN of the topic from which to remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the specified topic.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.SNS.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.SNS.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.SNS.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.SNS.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.SNS.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.SNS.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.SNS.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.SNS.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.SNS.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.UntagResource.UntagResource


-- | Verifies a destination phone number with a one-time password (OTP) for
--   the calling account.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
module Network.AWS.SNS.VerifySMSSandboxPhoneNumber

-- | <i>See:</i> <a>newVerifySMSSandboxPhoneNumber</a> smart constructor.
data VerifySMSSandboxPhoneNumber
VerifySMSSandboxPhoneNumber' :: Text -> Text -> VerifySMSSandboxPhoneNumber

-- | The destination phone number to verify.
[$sel:phoneNumber:VerifySMSSandboxPhoneNumber'] :: VerifySMSSandboxPhoneNumber -> Text

-- | The OTP sent to the destination number from the
--   <tt>CreateSMSSandBoxPhoneNumber</tt> call.
[$sel:oneTimePassword:VerifySMSSandboxPhoneNumber'] :: VerifySMSSandboxPhoneNumber -> Text

-- | Create a value of <a>VerifySMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:VerifySMSSandboxPhoneNumber'</a>,
--   <a>verifySMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to verify.
--   
--   <a>$sel:oneTimePassword:VerifySMSSandboxPhoneNumber'</a>,
--   <a>verifySMSSandboxPhoneNumber_oneTimePassword</a> - The OTP sent to
--   the destination number from the <tt>CreateSMSSandBoxPhoneNumber</tt>
--   call.
newVerifySMSSandboxPhoneNumber :: Text -> Text -> VerifySMSSandboxPhoneNumber

-- | The destination phone number to verify.
verifySMSSandboxPhoneNumber_phoneNumber :: Lens' VerifySMSSandboxPhoneNumber Text

-- | The OTP sent to the destination number from the
--   <tt>CreateSMSSandBoxPhoneNumber</tt> call.
verifySMSSandboxPhoneNumber_oneTimePassword :: Lens' VerifySMSSandboxPhoneNumber Text

-- | The destination phone number's verification status.
--   
--   <i>See:</i> <a>newVerifySMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data VerifySMSSandboxPhoneNumberResponse
VerifySMSSandboxPhoneNumberResponse' :: Int -> VerifySMSSandboxPhoneNumberResponse

-- | The response's http status code.
[$sel:httpStatus:VerifySMSSandboxPhoneNumberResponse'] :: VerifySMSSandboxPhoneNumberResponse -> Int

-- | Create a value of <a>VerifySMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VerifySMSSandboxPhoneNumberResponse'</a>,
--   <a>verifySMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newVerifySMSSandboxPhoneNumberResponse :: Int -> VerifySMSSandboxPhoneNumberResponse

-- | The response's http status code.
verifySMSSandboxPhoneNumberResponse_httpStatus :: Lens' VerifySMSSandboxPhoneNumberResponse Int
instance GHC.Generics.Generic Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance GHC.Show.Show Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance GHC.Read.Read Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance GHC.Classes.Eq Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance GHC.Generics.Generic Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumberResponse
instance GHC.Show.Show Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumberResponse
instance GHC.Read.Read Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumberResponse
instance GHC.Classes.Eq Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumberResponse
instance Data.Hashable.Class.Hashable Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance Control.DeepSeq.NFData Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance Network.AWS.Data.Path.ToPath Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber
instance Network.AWS.Data.Query.ToQuery Network.AWS.SNS.VerifySMSSandboxPhoneNumber.VerifySMSSandboxPhoneNumber


module Network.AWS.SNS.Lens

-- | PlatformApplicationArn of platform application object to delete.
deletePlatformApplication_platformApplicationArn :: Lens' DeletePlatformApplication Text

-- | Disallows unauthenticated unsubscribes of the subscription. If the
--   value of this parameter is <tt>true</tt> and the request has an Amazon
--   Web Services signature, then only the topic owner and the subscription
--   owner can unsubscribe the endpoint. The unsubscribe action requires
--   Amazon Web Services authentication.
confirmSubscription_authenticateOnUnsubscribe :: Lens' ConfirmSubscription (Maybe Text)

-- | The ARN of the topic for which you wish to confirm a subscription.
confirmSubscription_topicArn :: Lens' ConfirmSubscription Text

-- | Short-lived token sent to an endpoint during the <tt>Subscribe</tt>
--   action.
confirmSubscription_token :: Lens' ConfirmSubscription Text

-- | The ARN of the created subscription.
confirmSubscriptionResponse_subscriptionArn :: Lens' ConfirmSubscriptionResponse (Maybe Text)

-- | The response's http status code.
confirmSubscriptionResponse_httpStatus :: Lens' ConfirmSubscriptionResponse Int

-- | The phone number to which you want to deliver an SMS message. Use
--   E.164 format.
--   
--   If you don't specify a value for the <tt>PhoneNumber</tt> parameter,
--   you must specify a value for the <tt>TargetArn</tt> or
--   <tt>TopicArn</tt> parameters.
publish_phoneNumber :: Lens' Publish (Maybe Text)

-- | Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   <ul>
--   <li>be a syntactically valid JSON object; and</li>
--   <li>contain at least a top-level JSON key of "default" with a value
--   that is a string.</li>
--   </ul>
--   
--   You can define other top-level keys that define the message you want
--   to send to a specific transport protocol (e.g., "http").
--   
--   Valid value: <tt>json</tt>
publish_messageStructure :: Lens' Publish (Maybe Text)

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageDeduplicationId</tt> can contain up to 128 alphanumeric
--   characters (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   Every message must have a unique <tt>MessageDeduplicationId</tt>,
--   which is a token used for deduplication of sent messages. If a message
--   with a particular <tt>MessageDeduplicationId</tt> is sent
--   successfully, any message sent with the same
--   <tt>MessageDeduplicationId</tt> during the 5-minute deduplication
--   interval is treated as a duplicate.
--   
--   If the topic has <tt>ContentBasedDeduplication</tt> set, the system
--   generates a <tt>MessageDeduplicationId</tt> based on the contents of
--   the message. Your <tt>MessageDeduplicationId</tt> overrides the
--   generated one.
publish_messageDeduplicationId :: Lens' Publish (Maybe Text)

-- | If you don't specify a value for the <tt>TargetArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or <tt>TopicArn</tt>
--   parameters.
publish_targetArn :: Lens' Publish (Maybe Text)

-- | Message attributes for Publish action.
publish_messageAttributes :: Lens' Publish (Maybe (HashMap Text MessageAttributeValue))

-- | The topic you want to publish to.
--   
--   If you don't specify a value for the <tt>TopicArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or
--   <tt>TargetArn</tt> parameters.
publish_topicArn :: Lens' Publish (Maybe Text)

-- | Optional parameter to be used as the "Subject" line when the message
--   is delivered to email endpoints. This field will also be included, if
--   present, in the standard JSON messages delivered to other endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
publish_subject :: Lens' Publish (Maybe Text)

-- | This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageGroupId</tt> can contain up to 128 alphanumeric characters
--   (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   The <tt>MessageGroupId</tt> is a tag that specifies that a message
--   belongs to a specific message group. Messages that belong to the same
--   message group are processed in a FIFO manner (however, messages in
--   different message groups might be processed out of order). Every
--   message must include a <tt>MessageGroupId</tt>.
publish_messageGroupId :: Lens' Publish (Maybe Text)

-- | The message you want to send.
--   
--   If you are publishing to a topic and you want to send the same message
--   to all transport protocols, include the text of the message as a
--   String value. If you want to send different messages for each
--   transport protocol, set the value of the <tt>MessageStructure</tt>
--   parameter to <tt>json</tt> and use a JSON object for the
--   <tt>Message</tt> parameter.
--   
--   Constraints:
--   
--   <ul>
--   <li>With the exception of SMS, messages must be UTF-8 encoded strings
--   and at most 256 KB in size (262,144 bytes, not 262,144
--   characters).</li>
--   <li>For SMS, each message can contain up to 140 characters. This
--   character limit depends on the encoding schema. For example, an SMS
--   message can contain 160 GSM characters, 140 ASCII characters, or 70
--   UCS-2 characters.If you publish a message that exceeds this size
--   limit, Amazon SNS sends the message as multiple messages, each fitting
--   within the size limit. Messages aren't truncated mid-word but are cut
--   off at whole-word boundaries.The total size limit for a single SMS
--   <tt>Publish</tt> action is 1,600 characters.</li>
--   </ul>
--   
--   JSON-specific constraints:
--   
--   <ul>
--   <li>Keys in the JSON object that correspond to supported transport
--   protocols must have simple JSON string values.</li>
--   <li>The values will be parsed (unescaped) before they are used in
--   outgoing messages.</li>
--   <li>Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending).</li>
--   <li>Values have a minimum length of 0 (the empty string, "", is
--   allowed).</li>
--   <li>Values have a maximum length bounded by the overall message size
--   (so, including multiple protocols may limit message sizes).</li>
--   <li>Non-string values will cause the key to be ignored.</li>
--   <li>Keys that do not correspond to supported transport protocols are
--   ignored.</li>
--   <li>Duplicate keys are not allowed.</li>
--   <li>Failure to parse or validate any key or value in the message will
--   cause the <tt>Publish</tt> call to return an error (no partial
--   delivery).</li>
--   </ul>
publish_message :: Lens' Publish Text

-- | This response element applies only to FIFO (first-in-first-out)
--   topics.
--   
--   The sequence number is a large, non-consecutive number that Amazon SNS
--   assigns to each message. The length of <tt>SequenceNumber</tt> is 128
--   bits. <tt>SequenceNumber</tt> continues to increase for each
--   <tt>MessageGroupId</tt>.
publishResponse_sequenceNumber :: Lens' PublishResponse (Maybe Text)

-- | Unique identifier assigned to the published message.
--   
--   Length Constraint: Maximum 100 characters
publishResponse_messageId :: Lens' PublishResponse (Maybe Text)

-- | The response's http status code.
publishResponse_httpStatus :: Lens' PublishResponse Int

-- | The destination phone number to delete.
deleteSMSSandboxPhoneNumber_phoneNumber :: Lens' DeleteSMSSandboxPhoneNumber Text

-- | The response's http status code.
deleteSMSSandboxPhoneNumberResponse_httpStatus :: Lens' DeleteSMSSandboxPhoneNumberResponse Int

-- | The phone number to opt in. Use E.164 format.
optInPhoneNumber_phoneNumber :: Lens' OptInPhoneNumber Text

-- | The response's http status code.
optInPhoneNumberResponse_httpStatus :: Lens' OptInPhoneNumberResponse Int

-- | The ARN of the subscription to be deleted.
unsubscribe_subscriptionArn :: Lens' Unsubscribe Text

-- | The ARN of the topic from which to remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the specified topic.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ARN of the topic to which to add tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to be added to the specified topic. A tag consists of a
--   required key and an optional value.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Token returned by the previous <tt>ListSubscriptionsByTopic</tt>
--   request.
listSubscriptionsByTopic_nextToken :: Lens' ListSubscriptionsByTopic (Maybe Text)

-- | The ARN of the topic for which you wish to find subscriptions.
listSubscriptionsByTopic_topicArn :: Lens' ListSubscriptionsByTopic Text

-- | Token to pass along to the next <tt>ListSubscriptionsByTopic</tt>
--   request. This element is returned if there are more subscriptions to
--   retrieve.
listSubscriptionsByTopicResponse_nextToken :: Lens' ListSubscriptionsByTopicResponse (Maybe Text)

-- | A list of subscriptions.
listSubscriptionsByTopicResponse_subscriptions :: Lens' ListSubscriptionsByTopicResponse (Maybe [Subscription])

-- | The response's http status code.
listSubscriptionsByTopicResponse_httpStatus :: Lens' ListSubscriptionsByTopicResponse Int

-- | The default settings for sending SMS messages from your account. You
--   can set values for the following attribute names:
--   
--   <tt>MonthlySpendLimit</tt> – The maximum amount in USD that you are
--   willing to spend each month to send SMS messages. When Amazon SNS
--   determines that sending an SMS message would incur a cost that exceeds
--   this limit, it stops sending SMS messages within minutes.
--   
--   Amazon SNS stops sending SMS messages within minutes of the limit
--   being crossed. During that interval, if you continue to send SMS
--   messages, you will incur costs that exceed your limit.
--   
--   By default, the spend limit is set to the maximum allowed by Amazon
--   SNS. If you want to raise the limit, submit an <a>SNS Limit Increase
--   case</a>. For <b>New limit value</b>, enter your desired monthly spend
--   limit. In the <b>Use Case Description</b> field, explain that you are
--   requesting an SMS monthly spend limit increase.
--   
--   <tt>DeliveryStatusIAMRole</tt> – The ARN of the IAM role that allows
--   Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For
--   each SMS message that you send, Amazon SNS writes a log that includes
--   the message price, the success or failure status, the reason for
--   failure (if the message failed), the message dwell time, and other
--   information.
--   
--   <tt>DeliveryStatusSuccessSamplingRate</tt> – The percentage of
--   successful SMS deliveries for which Amazon SNS will write logs in
--   CloudWatch Logs. The value can be an integer from 0 - 100. For
--   example, to write logs only for failed deliveries, set this value to
--   <tt>0</tt>. To write logs for 10% of your successful deliveries, set
--   it to <tt>10</tt>.
--   
--   <tt>DefaultSenderID</tt> – A string, such as your business brand, that
--   is displayed as the sender on the receiving device. Support for sender
--   IDs varies by country. The sender ID can be 1 - 11 alphanumeric
--   characters, and it must contain at least one letter.
--   
--   <tt>DefaultSMSType</tt> – The type of SMS message that you will send
--   by default. You can assign the following values:
--   
--   <ul>
--   <li><tt>Promotional</tt> – (Default) Noncritical messages, such as
--   marketing messages. Amazon SNS optimizes the message delivery to incur
--   the lowest cost.</li>
--   <li><tt>Transactional</tt> – Critical messages that support customer
--   transactions, such as one-time passcodes for multi-factor
--   authentication. Amazon SNS optimizes the message delivery to achieve
--   the highest reliability.</li>
--   </ul>
--   
--   <tt>UsageReportS3Bucket</tt> – The name of the Amazon S3 bucket to
--   receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS
--   will deliver a usage report as a CSV file to the bucket. The report
--   includes the following information for each SMS message that was
--   successfully delivered by your account:
--   
--   <ul>
--   <li>Time that the message was published (in UTC)</li>
--   <li>Message ID</li>
--   <li>Destination phone number</li>
--   <li>Message type</li>
--   <li>Delivery status</li>
--   <li>Message price (in USD)</li>
--   <li>Part number (a message is split into multiple parts if it is too
--   long for a single message)</li>
--   <li>Total number of parts</li>
--   </ul>
--   
--   To receive the report, the bucket must have a policy that allows the
--   Amazon SNS service principal to perform the <tt>s3:PutObject</tt> and
--   <tt>s3:GetBucketLocation</tt> actions.
--   
--   For an example bucket policy and usage report, see <a>Monitoring SMS
--   Activity</a> in the <i>Amazon SNS Developer Guide</i>.
setSMSAttributes_attributes :: Lens' SetSMSAttributes (HashMap Text Text)

-- | The response's http status code.
setSMSAttributesResponse_httpStatus :: Lens' SetSMSAttributesResponse Int

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>Subscribe</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
subscribe_attributes :: Lens' Subscribe (Maybe (HashMap Text Text))

-- | Sets whether the response from the <tt>Subscribe</tt> request includes
--   the subscription ARN, even if the subscription is not yet confirmed.
--   
--   If you set this parameter to <tt>true</tt>, the response includes the
--   ARN in all cases, even if the subscription is not yet confirmed. In
--   addition to the ARN for confirmed subscriptions, the response also
--   includes the <tt>pending subscription</tt> ARN value for subscriptions
--   that aren't yet confirmed. A subscription becomes confirmed when the
--   subscriber calls the <tt>ConfirmSubscription</tt> action with a
--   confirmation token.
--   
--   The default value is <tt>false</tt>.
subscribe_returnSubscriptionArn :: Lens' Subscribe (Maybe Bool)

-- | The endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   <ul>
--   <li>For the <tt>http</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>http://</tt>.</li>
--   <li>For the <tt>https</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>https://</tt>.</li>
--   <li>For the <tt>email</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>email-json</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>sms</tt> protocol, the endpoint is a phone number of
--   an SMS-enabled device.</li>
--   <li>For the <tt>sqs</tt> protocol, the endpoint is the ARN of an
--   Amazon SQS queue.</li>
--   <li>For the <tt>application</tt> protocol, the endpoint is the
--   EndpointArn of a mobile app and device.</li>
--   <li>For the <tt>lambda</tt> protocol, the endpoint is the ARN of an
--   Lambda function.</li>
--   <li>For the <tt>firehose</tt> protocol, the endpoint is the ARN of an
--   Amazon Kinesis Data Firehose delivery stream.</li>
--   </ul>
subscribe_endpoint :: Lens' Subscribe (Maybe Text)

-- | The ARN of the topic you want to subscribe to.
subscribe_topicArn :: Lens' Subscribe Text

-- | The protocol that you want to use. Supported protocols include:
--   
--   <ul>
--   <li><tt>http</tt> – delivery of JSON-encoded message via HTTP
--   POST</li>
--   <li><tt>https</tt> – delivery of JSON-encoded message via HTTPS
--   POST</li>
--   <li><tt>email</tt> – delivery of message via SMTP</li>
--   <li><tt>email-json</tt> – delivery of JSON-encoded message via
--   SMTP</li>
--   <li><tt>sms</tt> – delivery of message via SMS</li>
--   <li><tt>sqs</tt> – delivery of JSON-encoded message to an Amazon SQS
--   queue</li>
--   <li><tt>application</tt> – delivery of JSON-encoded message to an
--   EndpointArn for a mobile app and device</li>
--   <li><tt>lambda</tt> – delivery of JSON-encoded message to an Lambda
--   function</li>
--   <li><tt>firehose</tt> – delivery of JSON-encoded message to an Amazon
--   Kinesis Data Firehose delivery stream.</li>
--   </ul>
subscribe_protocol :: Lens' Subscribe Text

-- | The ARN of the subscription if it is confirmed, or the string "pending
--   confirmation" if the subscription requires confirmation. However, if
--   the API request parameter <tt>ReturnSubscriptionArn</tt> is true, then
--   the value is always the subscription ARN, even if the subscription
--   requires confirmation.
subscribeResponse_subscriptionArn :: Lens' SubscribeResponse (Maybe Text)

-- | The response's http status code.
subscribeResponse_httpStatus :: Lens' SubscribeResponse Int

-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.
setPlatformApplicationAttributes_platformApplicationArn :: Lens' SetPlatformApplicationAttributes Text

-- | A map of the platform application attributes. Attributes in this map
--   include the following:
--   
--   <ul>
--   <li><tt>PlatformCredential</tt> – The credential received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformCredential</tt> is <tt>private key</tt>. For <tt>GCM</tt>
--   (Firebase Cloud Messaging), <tt>PlatformCredential</tt> is <tt>API
--   key</tt>. For <tt>ADM</tt>, <tt>PlatformCredential</tt> is <tt>client
--   secret</tt>.</li>
--   <li><tt>PlatformPrincipal</tt> – The principal received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt>. For
--   <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt>. For <tt>ADM</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>client id</tt>.</li>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which
--   <tt>EndpointCreated</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which
--   <tt>EndpointDeleted</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which
--   <tt>EndpointUpdate</tt> event notifications are sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which
--   <tt>DeliveryFailure</tt> event notifications are sent upon Direct
--   Publish delivery failure (permanent) to one of the application's
--   endpoints.</li>
--   <li><tt>SuccessFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>FailureFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>SuccessFeedbackSampleRate</tt> – Sample rate percentage
--   (0-100) of successfully delivered messages.</li>
--   </ul>
setPlatformApplicationAttributes_attributes :: Lens' SetPlatformApplicationAttributes (HashMap Text Text)

-- | The ARN of the topic whose properties you want to get.
getTopicAttributes_topicArn :: Lens' GetTopicAttributes Text

-- | A map of the topic's attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the topic's
--   delivery policy.</li>
--   <li><tt>DisplayName</tt> – The human-readable name used in the
--   <tt>From</tt> field for notifications to <tt>email</tt> and
--   <tt>email-json</tt> endpoints.</li>
--   <li><tt>Owner</tt> – The account ID of the topic's owner.</li>
--   <li><tt>Policy</tt> – The JSON serialization of the topic's access
--   control policy.</li>
--   <li><tt>SubscriptionsConfirmed</tt> – The number of confirmed
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsDeleted</tt> – The number of deleted
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsPending</tt> – The number of subscriptions
--   pending confirmation for the topic.</li>
--   <li><tt>TopicArn</tt> – The topic's ARN.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy, taking system defaults into account.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> - The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
getTopicAttributesResponse_attributes :: Lens' GetTopicAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTopicAttributesResponse_httpStatus :: Lens' GetTopicAttributesResponse Int

-- | Arbitrary user data to associate with the endpoint. Amazon SNS does
--   not use this data. The data must be in UTF-8 format and less than 2KB.
createPlatformEndpoint_customUserData :: Lens' CreatePlatformEndpoint (Maybe Text)

-- | For a list of attributes, see <a>SetEndpointAttributes</a>.
createPlatformEndpoint_attributes :: Lens' CreatePlatformEndpoint (Maybe (HashMap Text Text))

-- | PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
createPlatformEndpoint_platformApplicationArn :: Lens' CreatePlatformEndpoint Text

-- | Unique identifier created by the notification service for an app on a
--   device. The specific name for Token will vary, depending on which
--   notification service is being used. For example, when using APNS as
--   the notification service, you need the device token. Alternatively,
--   when using GCM (Firebase Cloud Messaging) or ADM, the device token
--   equivalent is called the registration ID.
createPlatformEndpoint_token :: Lens' CreatePlatformEndpoint Text

-- | EndpointArn returned from CreateEndpoint action.
createPlatformEndpointResponse_endpointArn :: Lens' CreatePlatformEndpointResponse (Maybe Text)

-- | The response's http status code.
createPlatformEndpointResponse_httpStatus :: Lens' CreatePlatformEndpointResponse Int

-- | Token returned by the previous <tt>ListTopics</tt> request.
listTopics_nextToken :: Lens' ListTopics (Maybe Text)

-- | Token to pass along to the next <tt>ListTopics</tt> request. This
--   element is returned if there are additional topics to retrieve.
listTopicsResponse_nextToken :: Lens' ListTopicsResponse (Maybe Text)

-- | A list of topic ARNs.
listTopicsResponse_topics :: Lens' ListTopicsResponse (Maybe [Topic])

-- | The response's http status code.
listTopicsResponse_httpStatus :: Lens' ListTopicsResponse Int

-- | The ARN of the topic whose access control policy you wish to modify.
addPermission_topicArn :: Lens' AddPermission Text

-- | A unique identifier for the new policy statement.
addPermission_label :: Lens' AddPermission Text

-- | The account IDs of the users (principals) who will be given access to
--   the specified actions. The users must have account, but do not need to
--   be signed up for this service.
addPermission_aWSAccountId :: Lens' AddPermission [Text]

-- | The action you want to allow for the specified principal(s).
--   
--   Valid values: Any Amazon SNS action name, for example
--   <tt>Publish</tt>.
addPermission_actionName :: Lens' AddPermission [Text]

-- | EndpointArn for GetEndpointAttributes input.
getEndpointAttributes_endpointArn :: Lens' GetEndpointAttributes Text

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.The device token for the iOS platform is
--   returned in lowercase.</li>
--   </ul>
getEndpointAttributesResponse_attributes :: Lens' GetEndpointAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getEndpointAttributesResponse_httpStatus :: Lens' GetEndpointAttributesResponse Int

-- | The ARN of the subscription whose properties you want to get.
getSubscriptionAttributes_subscriptionArn :: Lens' GetSubscriptionAttributes Text

-- | A map of the subscription's attributes. Attributes in this map include
--   the following:
--   
--   <ul>
--   <li><tt>ConfirmationWasAuthenticated</tt> – <tt>true</tt> if the
--   subscription confirmation request was authenticated.</li>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the
--   subscription's delivery policy.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults.</li>
--   <li><tt>FilterPolicy</tt> – The filter policy JSON that is assigned to
--   the subscription. For more information, see <a>Amazon SNS Message
--   Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   <li><tt>Owner</tt> – The account ID of the subscription's owner.</li>
--   <li><tt>PendingConfirmation</tt> – <tt>true</tt> if the subscription
--   hasn't been confirmed. To confirm a pending subscription, call the
--   <tt>ConfirmSubscription</tt> action with a confirmation token.</li>
--   <li><tt>RawMessageDelivery</tt> – <tt>true</tt> if raw message
--   delivery is enabled for the subscription. Raw messages are free of
--   JSON formatting and can be sent to HTTP/S and Amazon SQS
--   endpoints.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   <li><tt>SubscriptionArn</tt> – The subscription's ARN.</li>
--   <li><tt>TopicArn</tt> – The topic ARN that the subscription is
--   associated with.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
getSubscriptionAttributesResponse_attributes :: Lens' GetSubscriptionAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSubscriptionAttributesResponse_httpStatus :: Lens' GetSubscriptionAttributesResponse Int

-- | EndpointArn of endpoint to delete.
deleteEndpoint_endpointArn :: Lens' DeleteEndpoint Text

-- | Token returned by the previous <tt>ListSubscriptions</tt> request.
listSubscriptions_nextToken :: Lens' ListSubscriptions (Maybe Text)

-- | Token to pass along to the next <tt>ListSubscriptions</tt> request.
--   This element is returned if there are more subscriptions to retrieve.
listSubscriptionsResponse_nextToken :: Lens' ListSubscriptionsResponse (Maybe Text)

-- | A list of subscriptions.
listSubscriptionsResponse_subscriptions :: Lens' ListSubscriptionsResponse (Maybe [Subscription])

-- | The response's http status code.
listSubscriptionsResponse_httpStatus :: Lens' ListSubscriptionsResponse Int

-- | A <tt>NextToken</tt> string is used when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action to retrieve additional
--   records that are available after the first page of results.
listPhoneNumbersOptedOut_nextToken :: Lens' ListPhoneNumbersOptedOut (Maybe Text)

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action if additional records are
--   available after the first page of results.
listPhoneNumbersOptedOutResponse_nextToken :: Lens' ListPhoneNumbersOptedOutResponse (Maybe Text)

-- | A list of phone numbers that are opted out of receiving SMS messages.
--   The list is paginated, and each page can contain up to 100 phone
--   numbers.
listPhoneNumbersOptedOutResponse_phoneNumbers :: Lens' ListPhoneNumbersOptedOutResponse (Maybe [Text])

-- | The response's http status code.
listPhoneNumbersOptedOutResponse_httpStatus :: Lens' ListPhoneNumbersOptedOutResponse Int

-- | The new value for the attribute.
setTopicAttributes_attributeValue :: Lens' SetTopicAttributes (Maybe Text)

-- | The ARN of the topic to modify.
setTopicAttributes_topicArn :: Lens' SetTopicAttributes Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetTopicAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
setTopicAttributes_attributeName :: Lens' SetTopicAttributes Text

-- | NextToken string is used when calling ListPlatformApplications action
--   to retrieve additional records that are available after the first page
--   results.
listPlatformApplications_nextToken :: Lens' ListPlatformApplications (Maybe Text)

-- | NextToken string is returned when calling ListPlatformApplications
--   action if additional records are available after the first page
--   results.
listPlatformApplicationsResponse_nextToken :: Lens' ListPlatformApplicationsResponse (Maybe Text)

-- | Platform applications returned when calling ListPlatformApplications
--   action.
listPlatformApplicationsResponse_platformApplications :: Lens' ListPlatformApplicationsResponse (Maybe [PlatformApplication])

-- | The response's http status code.
listPlatformApplicationsResponse_httpStatus :: Lens' ListPlatformApplicationsResponse Int

-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.
getPlatformApplicationAttributes_platformApplicationArn :: Lens' GetPlatformApplicationAttributes Text

-- | Attributes include the following:
--   
--   <ul>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which EndpointCreated
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which EndpointDeleted
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which EndpointUpdate
--   event notifications should be sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.</li>
--   </ul>
getPlatformApplicationAttributesResponse_attributes :: Lens' GetPlatformApplicationAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getPlatformApplicationAttributesResponse_httpStatus :: Lens' GetPlatformApplicationAttributesResponse Int

-- | NextToken string is used when calling
--   ListEndpointsByPlatformApplication action to retrieve additional
--   records that are available after the first page results.
listEndpointsByPlatformApplication_nextToken :: Lens' ListEndpointsByPlatformApplication (Maybe Text)

-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
listEndpointsByPlatformApplication_platformApplicationArn :: Lens' ListEndpointsByPlatformApplication Text

-- | NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
listEndpointsByPlatformApplicationResponse_nextToken :: Lens' ListEndpointsByPlatformApplicationResponse (Maybe Text)

-- | Endpoints returned for ListEndpointsByPlatformApplication action.
listEndpointsByPlatformApplicationResponse_endpoints :: Lens' ListEndpointsByPlatformApplicationResponse (Maybe [Endpoint])

-- | The response's http status code.
listEndpointsByPlatformApplicationResponse_httpStatus :: Lens' ListEndpointsByPlatformApplicationResponse Int

-- | A list of the individual attribute names, such as
--   <tt>MonthlySpendLimit</tt>, for which you want values.
--   
--   For all attribute names, see <a>SetSMSAttributes</a>.
--   
--   If you don't use this parameter, Amazon SNS returns all SMS
--   attributes.
getSMSAttributes_attributes :: Lens' GetSMSAttributes (Maybe [Text])

-- | The SMS attribute names and their values.
getSMSAttributesResponse_attributes :: Lens' GetSMSAttributesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getSMSAttributesResponse_httpStatus :: Lens' GetSMSAttributesResponse Int

-- | Application names must be made up of only uppercase and lowercase
--   ASCII letters, numbers, underscores, hyphens, and periods, and must be
--   between 1 and 256 characters long.
createPlatformApplication_name :: Lens' CreatePlatformApplication Text

-- | The following platforms are supported: ADM (Amazon Device Messaging),
--   APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM
--   (Firebase Cloud Messaging).
createPlatformApplication_platform :: Lens' CreatePlatformApplication Text

-- | For a list of attributes, see <a>SetPlatformApplicationAttributes</a>.
createPlatformApplication_attributes :: Lens' CreatePlatformApplication (HashMap Text Text)

-- | PlatformApplicationArn is returned.
createPlatformApplicationResponse_platformApplicationArn :: Lens' CreatePlatformApplicationResponse (Maybe Text)

-- | The response's http status code.
createPlatformApplicationResponse_httpStatus :: Lens' CreatePlatformApplicationResponse Int

-- | EndpointArn used for SetEndpointAttributes action.
setEndpointAttributes_endpointArn :: Lens' SetEndpointAttributes Text

-- | A map of the endpoint attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.</li>
--   </ul>
setEndpointAttributes_attributes :: Lens' SetEndpointAttributes (HashMap Text Text)

-- | The new value for the attribute in JSON format.
setSubscriptionAttributes_attributeValue :: Lens' SetSubscriptionAttributes (Maybe Text)

-- | The ARN of the subscription to modify.
setSubscriptionAttributes_subscriptionArn :: Lens' SetSubscriptionAttributes Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that this action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
setSubscriptionAttributes_attributeName :: Lens' SetSubscriptionAttributes Text

-- | Token that the previous <tt>ListSMSSandboxPhoneNumbersInput</tt>
--   request returns.
listSMSSandboxPhoneNumbers_nextToken :: Lens' ListSMSSandboxPhoneNumbers (Maybe Text)

-- | The maximum number of phone numbers to return.
listSMSSandboxPhoneNumbers_maxResults :: Lens' ListSMSSandboxPhoneNumbers (Maybe Natural)

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> operation if additional pages
--   of records are available.
listSMSSandboxPhoneNumbersResponse_nextToken :: Lens' ListSMSSandboxPhoneNumbersResponse (Maybe Text)

-- | The response's http status code.
listSMSSandboxPhoneNumbersResponse_httpStatus :: Lens' ListSMSSandboxPhoneNumbersResponse Int

-- | A list of the calling account's pending and verified phone numbers.
listSMSSandboxPhoneNumbersResponse_phoneNumbers :: Lens' ListSMSSandboxPhoneNumbersResponse [SMSSandboxPhoneNumber]

-- | Token that the previous <tt>ListOriginationNumbers</tt> request
--   returns.
listOriginationNumbers_nextToken :: Lens' ListOriginationNumbers (Maybe Text)

-- | The maximum number of origination numbers to return.
listOriginationNumbers_maxResults :: Lens' ListOriginationNumbers (Maybe Natural)

-- | A <tt>NextToken</tt> string is returned when you call the
--   <tt>ListOriginationNumbers</tt> operation if additional pages of
--   records are available.
listOriginationNumbersResponse_nextToken :: Lens' ListOriginationNumbersResponse (Maybe Text)

-- | A list of the calling account's verified and pending origination
--   numbers.
listOriginationNumbersResponse_phoneNumbers :: Lens' ListOriginationNumbersResponse (Maybe [PhoneNumberInformation])

-- | The response's http status code.
listOriginationNumbersResponse_httpStatus :: Lens' ListOriginationNumbersResponse Int

-- | The language to use for sending the OTP. The default value is
--   <tt>en-US</tt>.
createSMSSandboxPhoneNumber_languageCode :: Lens' CreateSMSSandboxPhoneNumber (Maybe LanguageCodeString)

-- | The destination phone number to verify. On verification, Amazon SNS
--   adds this phone number to the list of verified phone numbers that you
--   can send SMS messages to.
createSMSSandboxPhoneNumber_phoneNumber :: Lens' CreateSMSSandboxPhoneNumber Text

-- | The response's http status code.
createSMSSandboxPhoneNumberResponse_httpStatus :: Lens' CreateSMSSandboxPhoneNumberResponse Int

-- | The response's http status code.
getSMSSandboxAccountStatusResponse_httpStatus :: Lens' GetSMSSandboxAccountStatusResponse Int

-- | Indicates whether the calling account is in the SMS sandbox.
getSMSSandboxAccountStatusResponse_isInSandbox :: Lens' GetSMSSandboxAccountStatusResponse Bool

-- | The phone number for which you want to check the opt out status.
checkIfPhoneNumberIsOptedOut_phoneNumber :: Lens' CheckIfPhoneNumberIsOptedOut Text

-- | Indicates whether the phone number is opted out:
--   
--   <ul>
--   <li><tt>true</tt> – The phone number is opted out, meaning you cannot
--   publish SMS messages to it.</li>
--   <li><tt>false</tt> – The phone number is opted in, meaning you can
--   publish SMS messages to it.</li>
--   </ul>
checkIfPhoneNumberIsOptedOutResponse_isOptedOut :: Lens' CheckIfPhoneNumberIsOptedOutResponse (Maybe Bool)

-- | The response's http status code.
checkIfPhoneNumberIsOptedOutResponse_httpStatus :: Lens' CheckIfPhoneNumberIsOptedOutResponse Int

-- | The destination phone number to verify.
verifySMSSandboxPhoneNumber_phoneNumber :: Lens' VerifySMSSandboxPhoneNumber Text

-- | The OTP sent to the destination number from the
--   <tt>CreateSMSSandBoxPhoneNumber</tt> call.
verifySMSSandboxPhoneNumber_oneTimePassword :: Lens' VerifySMSSandboxPhoneNumber Text

-- | The response's http status code.
verifySMSSandboxPhoneNumberResponse_httpStatus :: Lens' VerifySMSSandboxPhoneNumberResponse Int

-- | The ARN of the topic you want to delete.
deleteTopic_topicArn :: Lens' DeleteTopic Text

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateTopic</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>FifoTopic</tt> – Set to true to create a FIFO topic.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
createTopic_attributes :: Lens' CreateTopic (Maybe (HashMap Text Text))

-- | The list of tags to add to a new topic.
--   
--   To be able to tag a topic on creation, you must have the
--   <tt>sns:CreateTopic</tt> and <tt>sns:TagResource</tt> permissions.
createTopic_tags :: Lens' CreateTopic (Maybe [Tag])

-- | The name of the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
--   
--   For a FIFO (first-in-first-out) topic, the name must end with the
--   <tt>.fifo</tt> suffix.
createTopic_name :: Lens' CreateTopic Text

-- | The Amazon Resource Name (ARN) assigned to the created topic.
createTopicResponse_topicArn :: Lens' CreateTopicResponse (Maybe Text)

-- | The response's http status code.
createTopicResponse_httpStatus :: Lens' CreateTopicResponse Int

-- | The ARN of the topic whose access control policy you wish to modify.
removePermission_topicArn :: Lens' RemovePermission Text

-- | The unique label of the statement you want to remove.
removePermission_label :: Lens' RemovePermission Text

-- | The ARN of the topic for which to list tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags associated with the specified topic.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Attributes for endpoint.
endpoint_attributes :: Lens' Endpoint (Maybe (HashMap Text Text))

-- | EndpointArn for mobile app and device.
endpoint_endpointArn :: Lens' Endpoint (Maybe Text)

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see <a>ASCII Printable Characters</a>.
messageAttributeValue_stringValue :: Lens' MessageAttributeValue (Maybe Text)

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
messageAttributeValue_binaryValue :: Lens' MessageAttributeValue (Maybe ByteString)

-- | Amazon SNS supports the following logical data types: String,
--   String.Array, Number, and Binary. For more information, see <a>Message
--   Attribute Data Types</a>.
messageAttributeValue_dataType :: Lens' MessageAttributeValue Text

-- | The phone number.
phoneNumberInformation_phoneNumber :: Lens' PhoneNumberInformation (Maybe Text)

-- | The status of the phone number.
phoneNumberInformation_status :: Lens' PhoneNumberInformation (Maybe Text)

-- | The list of supported routes.
phoneNumberInformation_routeType :: Lens' PhoneNumberInformation (Maybe RouteType)

-- | The date and time when the phone number was created.
phoneNumberInformation_createdAt :: Lens' PhoneNumberInformation (Maybe UTCTime)

-- | The capabilities of each phone number.
phoneNumberInformation_numberCapabilities :: Lens' PhoneNumberInformation (Maybe [NumberCapability])

-- | The two-character code for the country or region, in ISO 3166-1
--   alpha-2 format.
phoneNumberInformation_iso2CountryCode :: Lens' PhoneNumberInformation (Maybe Text)

-- | PlatformApplicationArn for platform application object.
platformApplication_platformApplicationArn :: Lens' PlatformApplication (Maybe Text)

-- | Attributes for platform application object.
platformApplication_attributes :: Lens' PlatformApplication (Maybe (HashMap Text Text))

-- | The destination phone number.
sMSSandboxPhoneNumber_phoneNumber :: Lens' SMSSandboxPhoneNumber (Maybe Text)

-- | The destination phone number's verification status.
sMSSandboxPhoneNumber_status :: Lens' SMSSandboxPhoneNumber (Maybe SMSSandboxPhoneNumberVerificationStatus)

-- | The ARN of the subscription's topic.
subscription_topicArn :: Lens' Subscription (Maybe Text)

-- | The subscription's owner.
subscription_owner :: Lens' Subscription (Maybe Text)

-- | The subscription's protocol.
subscription_protocol :: Lens' Subscription (Maybe Text)

-- | The subscription's ARN.
subscription_subscriptionArn :: Lens' Subscription (Maybe Text)

-- | The subscription's endpoint (format depends on the protocol).
subscription_endpoint :: Lens' Subscription (Maybe Text)

-- | The required key portion of the tag.
tag_key :: Lens' Tag Text

-- | The optional value portion of the tag.
tag_value :: Lens' Tag Text

-- | The topic's ARN.
topic_topicArn :: Lens' Topic (Maybe Text)


module Network.AWS.SNS.Waiters


-- | Derived from API version <tt>2010-03-31</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Simple Notification Service
--   
--   Amazon Simple Notification Service (Amazon SNS) is a web service that
--   enables you to build distributed web-enabled applications.
--   Applications can use Amazon SNS to easily push real-time notification
--   messages to interested subscribers over multiple delivery protocols.
--   For more information about this product see the <a>Amazon SNS product
--   page</a>. For detailed information about Amazon SNS features and their
--   associated API calls, see the <a>Amazon SNS Developer Guide</a>.
--   
--   For information on the permissions you need to use this API, see
--   <a>Identity and access management in Amazon SNS</a> in the <i>Amazon
--   SNS Developer Guide.</i>
--   
--   We also provide SDKs that enable you to access Amazon SNS from your
--   preferred programming language. The SDKs contain functionality that
--   automatically takes care of tasks such as: cryptographically signing
--   your service requests, retrying requests, and handling error
--   responses. For a list of available SDKs, go to <a>Tools for Amazon Web
--   Services</a>.
module Network.AWS.SNS

-- | API version <tt>2010-03-31</tt> of the Amazon Simple Notification
--   Service SDK configuration.
defaultService :: Service

-- | The request was denied due to request throttling. For more information
--   about throttling, see <a>Limits</a> in the <i>Key Management Service
--   Developer Guide.</i>
_KMSThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the state of the specified resource
--   isn't valid for this request. For more information, see <a>How Key
--   State Affects Use of a Customer Master Key</a> in the <i>Key
--   Management Service Developer Guide</i>.
_KMSInvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the requested resource does not exist.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the specified entity or resource
--   can't be found.
_KMSNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_UserErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the rate at which requests have been submitted for this
--   action exceeds the limit for your account.
_ThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can't add more than 50 tags to a topic.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the specified phone number opted out of receiving SMS
--   messages from your account. You can't send SMS messages to phone
--   numbers that opt out.
_OptedOutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates an internal service error.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Web Services access key ID needs a subscription for the
--   service.
_KMSOptInRequired :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can't perform multiple operations on a tag simultaneously. Perform the
--   operations sequentially.
_ConcurrentAccessException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the customer already owns the maximum allowed number of
--   topics.
_TopicLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request doesn't comply with the IAM tag policy. Correct your
--   request and then retry it.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception error indicating platform application disabled.
_PlatformApplicationDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the customer already owns the maximum allowed number of
--   subscriptions.
_SubscriptionLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag has been added to a resource with the same ARN as a deleted
--   resource. Wait a short while and then retry the operation.
_StaleTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the user has been denied access to the requested
--   resource.
_AuthorizationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception error indicating endpoint disabled.
_EndpointDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a request parameter does not comply with the associated
--   constraints.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that a parameter in the request is invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The ciphertext references a key that doesn't exist or that you don't
--   have access to.
_KMSAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the number of filter polices in your account exceeds
--   the limit. To add more filter polices, submit an SNS Limit Increase
--   case in the Amazon Web Services Support Center.
_FilterPolicyLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates that the one-time password (OTP) used for verification is
--   invalid.
_VerificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Can’t perform the action on the specified resource. Make sure that the
--   resource exists.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The credential signature isn't valid. You must use an HTTPS endpoint
--   and sign your request using Signature Version 4.
_InvalidSecurityException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the specified customer master key
--   (CMK) isn't enabled.
_KMSDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Input for DeletePlatformApplication action.
--   
--   <i>See:</i> <a>newDeletePlatformApplication</a> smart constructor.
data DeletePlatformApplication
DeletePlatformApplication' :: Text -> DeletePlatformApplication

-- | Create a value of <a>DeletePlatformApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:DeletePlatformApplication'</a>,
--   <a>deletePlatformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn of platform application object to delete.
newDeletePlatformApplication :: Text -> DeletePlatformApplication

-- | <i>See:</i> <a>newDeletePlatformApplicationResponse</a> smart
--   constructor.
data DeletePlatformApplicationResponse
DeletePlatformApplicationResponse' :: DeletePlatformApplicationResponse

-- | Create a value of <a>DeletePlatformApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePlatformApplicationResponse :: DeletePlatformApplicationResponse

-- | Input for ConfirmSubscription action.
--   
--   <i>See:</i> <a>newConfirmSubscription</a> smart constructor.
data ConfirmSubscription
ConfirmSubscription' :: Maybe Text -> Text -> Text -> ConfirmSubscription

-- | Create a value of <a>ConfirmSubscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authenticateOnUnsubscribe:ConfirmSubscription'</a>,
--   <a>confirmSubscription_authenticateOnUnsubscribe</a> - Disallows
--   unauthenticated unsubscribes of the subscription. If the value of this
--   parameter is <tt>true</tt> and the request has an Amazon Web Services
--   signature, then only the topic owner and the subscription owner can
--   unsubscribe the endpoint. The unsubscribe action requires Amazon Web
--   Services authentication.
--   
--   <a>$sel:topicArn:ConfirmSubscription'</a>,
--   <a>confirmSubscription_topicArn</a> - The ARN of the topic for which
--   you wish to confirm a subscription.
--   
--   <a>$sel:token:ConfirmSubscription'</a>,
--   <a>confirmSubscription_token</a> - Short-lived token sent to an
--   endpoint during the <tt>Subscribe</tt> action.
newConfirmSubscription :: Text -> Text -> ConfirmSubscription

-- | Response for ConfirmSubscriptions action.
--   
--   <i>See:</i> <a>newConfirmSubscriptionResponse</a> smart constructor.
data ConfirmSubscriptionResponse
ConfirmSubscriptionResponse' :: Maybe Text -> Int -> ConfirmSubscriptionResponse

-- | Create a value of <a>ConfirmSubscriptionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:ConfirmSubscriptionResponse'</a>,
--   <a>confirmSubscriptionResponse_subscriptionArn</a> - The ARN of the
--   created subscription.
--   
--   <a>$sel:httpStatus:ConfirmSubscriptionResponse'</a>,
--   <a>confirmSubscriptionResponse_httpStatus</a> - The response's http
--   status code.
newConfirmSubscriptionResponse :: Int -> ConfirmSubscriptionResponse

-- | Input for Publish action.
--   
--   <i>See:</i> <a>newPublish</a> smart constructor.
data Publish
Publish' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text MessageAttributeValue) -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Publish

-- | Create a value of <a>Publish</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:Publish'</a>, <a>publish_phoneNumber</a> - The
--   phone number to which you want to deliver an SMS message. Use E.164
--   format.
--   
--   If you don't specify a value for the <tt>PhoneNumber</tt> parameter,
--   you must specify a value for the <tt>TargetArn</tt> or
--   <tt>TopicArn</tt> parameters.
--   
--   <a>$sel:messageStructure:Publish'</a>, <a>publish_messageStructure</a>
--   - Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   <ul>
--   <li>be a syntactically valid JSON object; and</li>
--   <li>contain at least a top-level JSON key of "default" with a value
--   that is a string.</li>
--   </ul>
--   
--   You can define other top-level keys that define the message you want
--   to send to a specific transport protocol (e.g., "http").
--   
--   Valid value: <tt>json</tt>
--   
--   <a>$sel:messageDeduplicationId:Publish'</a>,
--   <a>publish_messageDeduplicationId</a> - This parameter applies only to
--   FIFO (first-in-first-out) topics. The <tt>MessageDeduplicationId</tt>
--   can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and
--   punctuation <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   Every message must have a unique <tt>MessageDeduplicationId</tt>,
--   which is a token used for deduplication of sent messages. If a message
--   with a particular <tt>MessageDeduplicationId</tt> is sent
--   successfully, any message sent with the same
--   <tt>MessageDeduplicationId</tt> during the 5-minute deduplication
--   interval is treated as a duplicate.
--   
--   If the topic has <tt>ContentBasedDeduplication</tt> set, the system
--   generates a <tt>MessageDeduplicationId</tt> based on the contents of
--   the message. Your <tt>MessageDeduplicationId</tt> overrides the
--   generated one.
--   
--   <a>$sel:targetArn:Publish'</a>, <a>publish_targetArn</a> - If you
--   don't specify a value for the <tt>TargetArn</tt> parameter, you must
--   specify a value for the <tt>PhoneNumber</tt> or <tt>TopicArn</tt>
--   parameters.
--   
--   <a>$sel:messageAttributes:Publish'</a>,
--   <a>publish_messageAttributes</a> - Message attributes for Publish
--   action.
--   
--   <a>$sel:topicArn:Publish'</a>, <a>publish_topicArn</a> - The topic you
--   want to publish to.
--   
--   If you don't specify a value for the <tt>TopicArn</tt> parameter, you
--   must specify a value for the <tt>PhoneNumber</tt> or
--   <tt>TargetArn</tt> parameters.
--   
--   <a>$sel:subject:Publish'</a>, <a>publish_subject</a> - Optional
--   parameter to be used as the "Subject" line when the message is
--   delivered to email endpoints. This field will also be included, if
--   present, in the standard JSON messages delivered to other endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
--   
--   <a>$sel:messageGroupId:Publish'</a>, <a>publish_messageGroupId</a> -
--   This parameter applies only to FIFO (first-in-first-out) topics. The
--   <tt>MessageGroupId</tt> can contain up to 128 alphanumeric characters
--   (a-z, A-Z, 0-9) and punctuation
--   <tt>(!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</tt>.
--   
--   The <tt>MessageGroupId</tt> is a tag that specifies that a message
--   belongs to a specific message group. Messages that belong to the same
--   message group are processed in a FIFO manner (however, messages in
--   different message groups might be processed out of order). Every
--   message must include a <tt>MessageGroupId</tt>.
--   
--   <a>$sel:message:Publish'</a>, <a>publish_message</a> - The message you
--   want to send.
--   
--   If you are publishing to a topic and you want to send the same message
--   to all transport protocols, include the text of the message as a
--   String value. If you want to send different messages for each
--   transport protocol, set the value of the <tt>MessageStructure</tt>
--   parameter to <tt>json</tt> and use a JSON object for the
--   <tt>Message</tt> parameter.
--   
--   Constraints:
--   
--   <ul>
--   <li>With the exception of SMS, messages must be UTF-8 encoded strings
--   and at most 256 KB in size (262,144 bytes, not 262,144
--   characters).</li>
--   <li>For SMS, each message can contain up to 140 characters. This
--   character limit depends on the encoding schema. For example, an SMS
--   message can contain 160 GSM characters, 140 ASCII characters, or 70
--   UCS-2 characters.If you publish a message that exceeds this size
--   limit, Amazon SNS sends the message as multiple messages, each fitting
--   within the size limit. Messages aren't truncated mid-word but are cut
--   off at whole-word boundaries.The total size limit for a single SMS
--   <tt>Publish</tt> action is 1,600 characters.</li>
--   </ul>
--   
--   JSON-specific constraints:
--   
--   <ul>
--   <li>Keys in the JSON object that correspond to supported transport
--   protocols must have simple JSON string values.</li>
--   <li>The values will be parsed (unescaped) before they are used in
--   outgoing messages.</li>
--   <li>Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending).</li>
--   <li>Values have a minimum length of 0 (the empty string, "", is
--   allowed).</li>
--   <li>Values have a maximum length bounded by the overall message size
--   (so, including multiple protocols may limit message sizes).</li>
--   <li>Non-string values will cause the key to be ignored.</li>
--   <li>Keys that do not correspond to supported transport protocols are
--   ignored.</li>
--   <li>Duplicate keys are not allowed.</li>
--   <li>Failure to parse or validate any key or value in the message will
--   cause the <tt>Publish</tt> call to return an error (no partial
--   delivery).</li>
--   </ul>
newPublish :: Text -> Publish

-- | Response for Publish action.
--   
--   <i>See:</i> <a>newPublishResponse</a> smart constructor.
data PublishResponse
PublishResponse' :: Maybe Text -> Maybe Text -> Int -> PublishResponse

-- | Create a value of <a>PublishResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceNumber:PublishResponse'</a>,
--   <a>publishResponse_sequenceNumber</a> - This response element applies
--   only to FIFO (first-in-first-out) topics.
--   
--   The sequence number is a large, non-consecutive number that Amazon SNS
--   assigns to each message. The length of <tt>SequenceNumber</tt> is 128
--   bits. <tt>SequenceNumber</tt> continues to increase for each
--   <tt>MessageGroupId</tt>.
--   
--   <a>$sel:messageId:PublishResponse'</a>,
--   <a>publishResponse_messageId</a> - Unique identifier assigned to the
--   published message.
--   
--   Length Constraint: Maximum 100 characters
--   
--   <a>$sel:httpStatus:PublishResponse'</a>,
--   <a>publishResponse_httpStatus</a> - The response's http status code.
newPublishResponse :: Int -> PublishResponse

-- | <i>See:</i> <a>newDeleteSMSSandboxPhoneNumber</a> smart constructor.
data DeleteSMSSandboxPhoneNumber
DeleteSMSSandboxPhoneNumber' :: Text -> DeleteSMSSandboxPhoneNumber

-- | Create a value of <a>DeleteSMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:DeleteSMSSandboxPhoneNumber'</a>,
--   <a>deleteSMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to delete.
newDeleteSMSSandboxPhoneNumber :: Text -> DeleteSMSSandboxPhoneNumber

-- | <i>See:</i> <a>newDeleteSMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data DeleteSMSSandboxPhoneNumberResponse
DeleteSMSSandboxPhoneNumberResponse' :: Int -> DeleteSMSSandboxPhoneNumberResponse

-- | Create a value of <a>DeleteSMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSMSSandboxPhoneNumberResponse'</a>,
--   <a>deleteSMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSMSSandboxPhoneNumberResponse :: Int -> DeleteSMSSandboxPhoneNumberResponse

-- | Input for the OptInPhoneNumber action.
--   
--   <i>See:</i> <a>newOptInPhoneNumber</a> smart constructor.
data OptInPhoneNumber
OptInPhoneNumber' :: Text -> OptInPhoneNumber

-- | Create a value of <a>OptInPhoneNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:OptInPhoneNumber'</a>,
--   <a>optInPhoneNumber_phoneNumber</a> - The phone number to opt in. Use
--   E.164 format.
newOptInPhoneNumber :: Text -> OptInPhoneNumber

-- | The response for the OptInPhoneNumber action.
--   
--   <i>See:</i> <a>newOptInPhoneNumberResponse</a> smart constructor.
data OptInPhoneNumberResponse
OptInPhoneNumberResponse' :: Int -> OptInPhoneNumberResponse

-- | Create a value of <a>OptInPhoneNumberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:OptInPhoneNumberResponse'</a>,
--   <a>optInPhoneNumberResponse_httpStatus</a> - The response's http
--   status code.
newOptInPhoneNumberResponse :: Int -> OptInPhoneNumberResponse

-- | Input for Unsubscribe action.
--   
--   <i>See:</i> <a>newUnsubscribe</a> smart constructor.
data Unsubscribe
Unsubscribe' :: Text -> Unsubscribe

-- | Create a value of <a>Unsubscribe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:Unsubscribe'</a>,
--   <a>unsubscribe_subscriptionArn</a> - The ARN of the subscription to be
--   deleted.
newUnsubscribe :: Text -> Unsubscribe

-- | <i>See:</i> <a>newUnsubscribeResponse</a> smart constructor.
data UnsubscribeResponse
UnsubscribeResponse' :: UnsubscribeResponse

-- | Create a value of <a>UnsubscribeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnsubscribeResponse :: UnsubscribeResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the topic from which to
--   remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the specified topic.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the topic to which to add tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be added to the specified topic. A tag consists of a required key and
--   an optional value.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Input for ListSubscriptionsByTopic action.
--   
--   <i>See:</i> <a>newListSubscriptionsByTopic</a> smart constructor.
data ListSubscriptionsByTopic
ListSubscriptionsByTopic' :: Maybe Text -> Text -> ListSubscriptionsByTopic

-- | Create a value of <a>ListSubscriptionsByTopic</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopic_nextToken</a> - Token returned by the
--   previous <tt>ListSubscriptionsByTopic</tt> request.
--   
--   <a>$sel:topicArn:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopic_topicArn</a> - The ARN of the topic for
--   which you wish to find subscriptions.
newListSubscriptionsByTopic :: Text -> ListSubscriptionsByTopic

-- | Response for ListSubscriptionsByTopic action.
--   
--   <i>See:</i> <a>newListSubscriptionsByTopicResponse</a> smart
--   constructor.
data ListSubscriptionsByTopicResponse
ListSubscriptionsByTopicResponse' :: Maybe Text -> Maybe [Subscription] -> Int -> ListSubscriptionsByTopicResponse

-- | Create a value of <a>ListSubscriptionsByTopicResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionsByTopic'</a>,
--   <a>listSubscriptionsByTopicResponse_nextToken</a> - Token to pass
--   along to the next <tt>ListSubscriptionsByTopic</tt> request. This
--   element is returned if there are more subscriptions to retrieve.
--   
--   <a>$sel:subscriptions:ListSubscriptionsByTopicResponse'</a>,
--   <a>listSubscriptionsByTopicResponse_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:httpStatus:ListSubscriptionsByTopicResponse'</a>,
--   <a>listSubscriptionsByTopicResponse_httpStatus</a> - The response's
--   http status code.
newListSubscriptionsByTopicResponse :: Int -> ListSubscriptionsByTopicResponse

-- | The input for the SetSMSAttributes action.
--   
--   <i>See:</i> <a>newSetSMSAttributes</a> smart constructor.
data SetSMSAttributes
SetSMSAttributes' :: HashMap Text Text -> SetSMSAttributes

-- | Create a value of <a>SetSMSAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:SetSMSAttributes'</a>,
--   <a>setSMSAttributes_attributes</a> - The default settings for sending
--   SMS messages from your account. You can set values for the following
--   attribute names:
--   
--   <tt>MonthlySpendLimit</tt> – The maximum amount in USD that you are
--   willing to spend each month to send SMS messages. When Amazon SNS
--   determines that sending an SMS message would incur a cost that exceeds
--   this limit, it stops sending SMS messages within minutes.
--   
--   Amazon SNS stops sending SMS messages within minutes of the limit
--   being crossed. During that interval, if you continue to send SMS
--   messages, you will incur costs that exceed your limit.
--   
--   By default, the spend limit is set to the maximum allowed by Amazon
--   SNS. If you want to raise the limit, submit an <a>SNS Limit Increase
--   case</a>. For <b>New limit value</b>, enter your desired monthly spend
--   limit. In the <b>Use Case Description</b> field, explain that you are
--   requesting an SMS monthly spend limit increase.
--   
--   <tt>DeliveryStatusIAMRole</tt> – The ARN of the IAM role that allows
--   Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For
--   each SMS message that you send, Amazon SNS writes a log that includes
--   the message price, the success or failure status, the reason for
--   failure (if the message failed), the message dwell time, and other
--   information.
--   
--   <tt>DeliveryStatusSuccessSamplingRate</tt> – The percentage of
--   successful SMS deliveries for which Amazon SNS will write logs in
--   CloudWatch Logs. The value can be an integer from 0 - 100. For
--   example, to write logs only for failed deliveries, set this value to
--   <tt>0</tt>. To write logs for 10% of your successful deliveries, set
--   it to <tt>10</tt>.
--   
--   <tt>DefaultSenderID</tt> – A string, such as your business brand, that
--   is displayed as the sender on the receiving device. Support for sender
--   IDs varies by country. The sender ID can be 1 - 11 alphanumeric
--   characters, and it must contain at least one letter.
--   
--   <tt>DefaultSMSType</tt> – The type of SMS message that you will send
--   by default. You can assign the following values:
--   
--   <ul>
--   <li><tt>Promotional</tt> – (Default) Noncritical messages, such as
--   marketing messages. Amazon SNS optimizes the message delivery to incur
--   the lowest cost.</li>
--   <li><tt>Transactional</tt> – Critical messages that support customer
--   transactions, such as one-time passcodes for multi-factor
--   authentication. Amazon SNS optimizes the message delivery to achieve
--   the highest reliability.</li>
--   </ul>
--   
--   <tt>UsageReportS3Bucket</tt> – The name of the Amazon S3 bucket to
--   receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS
--   will deliver a usage report as a CSV file to the bucket. The report
--   includes the following information for each SMS message that was
--   successfully delivered by your account:
--   
--   <ul>
--   <li>Time that the message was published (in UTC)</li>
--   <li>Message ID</li>
--   <li>Destination phone number</li>
--   <li>Message type</li>
--   <li>Delivery status</li>
--   <li>Message price (in USD)</li>
--   <li>Part number (a message is split into multiple parts if it is too
--   long for a single message)</li>
--   <li>Total number of parts</li>
--   </ul>
--   
--   To receive the report, the bucket must have a policy that allows the
--   Amazon SNS service principal to perform the <tt>s3:PutObject</tt> and
--   <tt>s3:GetBucketLocation</tt> actions.
--   
--   For an example bucket policy and usage report, see <a>Monitoring SMS
--   Activity</a> in the <i>Amazon SNS Developer Guide</i>.
newSetSMSAttributes :: SetSMSAttributes

-- | The response for the SetSMSAttributes action.
--   
--   <i>See:</i> <a>newSetSMSAttributesResponse</a> smart constructor.
data SetSMSAttributesResponse
SetSMSAttributesResponse' :: Int -> SetSMSAttributesResponse

-- | Create a value of <a>SetSMSAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetSMSAttributesResponse'</a>,
--   <a>setSMSAttributesResponse_httpStatus</a> - The response's http
--   status code.
newSetSMSAttributesResponse :: Int -> SetSMSAttributesResponse

-- | Input for Subscribe action.
--   
--   <i>See:</i> <a>newSubscribe</a> smart constructor.
data Subscribe
Subscribe' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Text -> Text -> Text -> Subscribe

-- | Create a value of <a>Subscribe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Subscribe'</a>, <a>subscribe_attributes</a> - A map
--   of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>Subscribe</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:returnSubscriptionArn:Subscribe'</a>,
--   <a>subscribe_returnSubscriptionArn</a> - Sets whether the response
--   from the <tt>Subscribe</tt> request includes the subscription ARN,
--   even if the subscription is not yet confirmed.
--   
--   If you set this parameter to <tt>true</tt>, the response includes the
--   ARN in all cases, even if the subscription is not yet confirmed. In
--   addition to the ARN for confirmed subscriptions, the response also
--   includes the <tt>pending subscription</tt> ARN value for subscriptions
--   that aren't yet confirmed. A subscription becomes confirmed when the
--   subscriber calls the <tt>ConfirmSubscription</tt> action with a
--   confirmation token.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:endpoint:Subscribe'</a>, <a>subscribe_endpoint</a> - The
--   endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   <ul>
--   <li>For the <tt>http</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>http://</tt>.</li>
--   <li>For the <tt>https</tt> protocol, the (public) endpoint is a URL
--   beginning with <tt>https://</tt>.</li>
--   <li>For the <tt>email</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>email-json</tt> protocol, the endpoint is an email
--   address.</li>
--   <li>For the <tt>sms</tt> protocol, the endpoint is a phone number of
--   an SMS-enabled device.</li>
--   <li>For the <tt>sqs</tt> protocol, the endpoint is the ARN of an
--   Amazon SQS queue.</li>
--   <li>For the <tt>application</tt> protocol, the endpoint is the
--   EndpointArn of a mobile app and device.</li>
--   <li>For the <tt>lambda</tt> protocol, the endpoint is the ARN of an
--   Lambda function.</li>
--   <li>For the <tt>firehose</tt> protocol, the endpoint is the ARN of an
--   Amazon Kinesis Data Firehose delivery stream.</li>
--   </ul>
--   
--   <a>$sel:topicArn:Subscribe'</a>, <a>subscribe_topicArn</a> - The ARN
--   of the topic you want to subscribe to.
--   
--   <a>$sel:protocol:Subscribe'</a>, <a>subscribe_protocol</a> - The
--   protocol that you want to use. Supported protocols include:
--   
--   <ul>
--   <li><tt>http</tt> – delivery of JSON-encoded message via HTTP
--   POST</li>
--   <li><tt>https</tt> – delivery of JSON-encoded message via HTTPS
--   POST</li>
--   <li><tt>email</tt> – delivery of message via SMTP</li>
--   <li><tt>email-json</tt> – delivery of JSON-encoded message via
--   SMTP</li>
--   <li><tt>sms</tt> – delivery of message via SMS</li>
--   <li><tt>sqs</tt> – delivery of JSON-encoded message to an Amazon SQS
--   queue</li>
--   <li><tt>application</tt> – delivery of JSON-encoded message to an
--   EndpointArn for a mobile app and device</li>
--   <li><tt>lambda</tt> – delivery of JSON-encoded message to an Lambda
--   function</li>
--   <li><tt>firehose</tt> – delivery of JSON-encoded message to an Amazon
--   Kinesis Data Firehose delivery stream.</li>
--   </ul>
newSubscribe :: Text -> Text -> Subscribe

-- | Response for Subscribe action.
--   
--   <i>See:</i> <a>newSubscribeResponse</a> smart constructor.
data SubscribeResponse
SubscribeResponse' :: Maybe Text -> Int -> SubscribeResponse

-- | Create a value of <a>SubscribeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:SubscribeResponse'</a>,
--   <a>subscribeResponse_subscriptionArn</a> - The ARN of the subscription
--   if it is confirmed, or the string "pending confirmation" if the
--   subscription requires confirmation. However, if the API request
--   parameter <tt>ReturnSubscriptionArn</tt> is true, then the value is
--   always the subscription ARN, even if the subscription requires
--   confirmation.
--   
--   <a>$sel:httpStatus:SubscribeResponse'</a>,
--   <a>subscribeResponse_httpStatus</a> - The response's http status code.
newSubscribeResponse :: Int -> SubscribeResponse

-- | Input for SetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newSetPlatformApplicationAttributes</a> smart
--   constructor.
data SetPlatformApplicationAttributes
SetPlatformApplicationAttributes' :: Text -> HashMap Text Text -> SetPlatformApplicationAttributes

-- | Create a value of <a>SetPlatformApplicationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:SetPlatformApplicationAttributes'</a>,
--   <a>setPlatformApplicationAttributes_platformApplicationArn</a> -
--   PlatformApplicationArn for SetPlatformApplicationAttributes action.
--   
--   <a>$sel:attributes:SetPlatformApplicationAttributes'</a>,
--   <a>setPlatformApplicationAttributes_attributes</a> - A map of the
--   platform application attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>PlatformCredential</tt> – The credential received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformCredential</tt> is <tt>private key</tt>. For <tt>GCM</tt>
--   (Firebase Cloud Messaging), <tt>PlatformCredential</tt> is <tt>API
--   key</tt>. For <tt>ADM</tt>, <tt>PlatformCredential</tt> is <tt>client
--   secret</tt>.</li>
--   <li><tt>PlatformPrincipal</tt> – The principal received from the
--   notification service. For <tt>APNS</tt> and <tt>APNS_SANDBOX</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>SSL certificate</tt>. For
--   <tt>GCM</tt> (Firebase Cloud Messaging), there is no
--   <tt>PlatformPrincipal</tt>. For <tt>ADM</tt>,
--   <tt>PlatformPrincipal</tt> is <tt>client id</tt>.</li>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which
--   <tt>EndpointCreated</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which
--   <tt>EndpointDeleted</tt> event notifications are sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which
--   <tt>EndpointUpdate</tt> event notifications are sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which
--   <tt>DeliveryFailure</tt> event notifications are sent upon Direct
--   Publish delivery failure (permanent) to one of the application's
--   endpoints.</li>
--   <li><tt>SuccessFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>FailureFeedbackRoleArn</tt> – IAM role ARN used to give Amazon
--   SNS write access to use CloudWatch Logs on your behalf.</li>
--   <li><tt>SuccessFeedbackSampleRate</tt> – Sample rate percentage
--   (0-100) of successfully delivered messages.</li>
--   </ul>
newSetPlatformApplicationAttributes :: Text -> SetPlatformApplicationAttributes

-- | <i>See:</i> <a>newSetPlatformApplicationAttributesResponse</a> smart
--   constructor.
data SetPlatformApplicationAttributesResponse
SetPlatformApplicationAttributesResponse' :: SetPlatformApplicationAttributesResponse

-- | Create a value of <a>SetPlatformApplicationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetPlatformApplicationAttributesResponse :: SetPlatformApplicationAttributesResponse

-- | Input for GetTopicAttributes action.
--   
--   <i>See:</i> <a>newGetTopicAttributes</a> smart constructor.
data GetTopicAttributes
GetTopicAttributes' :: Text -> GetTopicAttributes

-- | Create a value of <a>GetTopicAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:GetTopicAttributes'</a>,
--   <a>getTopicAttributes_topicArn</a> - The ARN of the topic whose
--   properties you want to get.
newGetTopicAttributes :: Text -> GetTopicAttributes

-- | Response for GetTopicAttributes action.
--   
--   <i>See:</i> <a>newGetTopicAttributesResponse</a> smart constructor.
data GetTopicAttributesResponse
GetTopicAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetTopicAttributesResponse

-- | Create a value of <a>GetTopicAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetTopicAttributesResponse'</a>,
--   <a>getTopicAttributesResponse_attributes</a> - A map of the topic's
--   attributes. Attributes in this map include the following:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the topic's
--   delivery policy.</li>
--   <li><tt>DisplayName</tt> – The human-readable name used in the
--   <tt>From</tt> field for notifications to <tt>email</tt> and
--   <tt>email-json</tt> endpoints.</li>
--   <li><tt>Owner</tt> – The account ID of the topic's owner.</li>
--   <li><tt>Policy</tt> – The JSON serialization of the topic's access
--   control policy.</li>
--   <li><tt>SubscriptionsConfirmed</tt> – The number of confirmed
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsDeleted</tt> – The number of deleted
--   subscriptions for the topic.</li>
--   <li><tt>SubscriptionsPending</tt> – The number of subscriptions
--   pending confirmation for the topic.</li>
--   <li><tt>TopicArn</tt> – The topic's ARN.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy, taking system defaults into account.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> - The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetTopicAttributesResponse'</a>,
--   <a>getTopicAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetTopicAttributesResponse :: Int -> GetTopicAttributesResponse

-- | Input for CreatePlatformEndpoint action.
--   
--   <i>See:</i> <a>newCreatePlatformEndpoint</a> smart constructor.
data CreatePlatformEndpoint
CreatePlatformEndpoint' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreatePlatformEndpoint

-- | Create a value of <a>CreatePlatformEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customUserData:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_customUserData</a> - Arbitrary user data to
--   associate with the endpoint. Amazon SNS does not use this data. The
--   data must be in UTF-8 format and less than 2KB.
--   
--   <a>$sel:attributes:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_attributes</a> - For a list of attributes,
--   see <a>SetEndpointAttributes</a>.
--   
--   <a>$sel:platformApplicationArn:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_platformApplicationArn</a> -
--   PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
--   
--   <a>$sel:token:CreatePlatformEndpoint'</a>,
--   <a>createPlatformEndpoint_token</a> - Unique identifier created by the
--   notification service for an app on a device. The specific name for
--   Token will vary, depending on which notification service is being
--   used. For example, when using APNS as the notification service, you
--   need the device token. Alternatively, when using GCM (Firebase Cloud
--   Messaging) or ADM, the device token equivalent is called the
--   registration ID.
newCreatePlatformEndpoint :: Text -> Text -> CreatePlatformEndpoint

-- | Response from CreateEndpoint action.
--   
--   <i>See:</i> <a>newCreatePlatformEndpointResponse</a> smart
--   constructor.
data CreatePlatformEndpointResponse
CreatePlatformEndpointResponse' :: Maybe Text -> Int -> CreatePlatformEndpointResponse

-- | Create a value of <a>CreatePlatformEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:CreatePlatformEndpointResponse'</a>,
--   <a>createPlatformEndpointResponse_endpointArn</a> - EndpointArn
--   returned from CreateEndpoint action.
--   
--   <a>$sel:httpStatus:CreatePlatformEndpointResponse'</a>,
--   <a>createPlatformEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreatePlatformEndpointResponse :: Int -> CreatePlatformEndpointResponse

-- | <i>See:</i> <a>newListTopics</a> smart constructor.
data ListTopics
ListTopics' :: Maybe Text -> ListTopics

-- | Create a value of <a>ListTopics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTopics'</a>, <a>listTopics_nextToken</a> - Token
--   returned by the previous <tt>ListTopics</tt> request.
newListTopics :: ListTopics

-- | Response for ListTopics action.
--   
--   <i>See:</i> <a>newListTopicsResponse</a> smart constructor.
data ListTopicsResponse
ListTopicsResponse' :: Maybe Text -> Maybe [Topic] -> Int -> ListTopicsResponse

-- | Create a value of <a>ListTopicsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTopics'</a>, <a>listTopicsResponse_nextToken</a>
--   - Token to pass along to the next <tt>ListTopics</tt> request. This
--   element is returned if there are additional topics to retrieve.
--   
--   <a>$sel:topics:ListTopicsResponse'</a>,
--   <a>listTopicsResponse_topics</a> - A list of topic ARNs.
--   
--   <a>$sel:httpStatus:ListTopicsResponse'</a>,
--   <a>listTopicsResponse_httpStatus</a> - The response's http status
--   code.
newListTopicsResponse :: Int -> ListTopicsResponse

-- | <i>See:</i> <a>newAddPermission</a> smart constructor.
data AddPermission
AddPermission' :: Text -> Text -> [Text] -> [Text] -> AddPermission

-- | Create a value of <a>AddPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:AddPermission'</a>, <a>addPermission_topicArn</a> -
--   The ARN of the topic whose access control policy you wish to modify.
--   
--   <a>$sel:label:AddPermission'</a>, <a>addPermission_label</a> - A
--   unique identifier for the new policy statement.
--   
--   <a>$sel:aWSAccountId:AddPermission'</a>,
--   <a>addPermission_aWSAccountId</a> - The account IDs of the users
--   (principals) who will be given access to the specified actions. The
--   users must have account, but do not need to be signed up for this
--   service.
--   
--   <a>$sel:actionName:AddPermission'</a>, <a>addPermission_actionName</a>
--   - The action you want to allow for the specified principal(s).
--   
--   Valid values: Any Amazon SNS action name, for example
--   <tt>Publish</tt>.
newAddPermission :: Text -> Text -> AddPermission

-- | <i>See:</i> <a>newAddPermissionResponse</a> smart constructor.
data AddPermissionResponse
AddPermissionResponse' :: AddPermissionResponse

-- | Create a value of <a>AddPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddPermissionResponse :: AddPermissionResponse

-- | Input for GetEndpointAttributes action.
--   
--   <i>See:</i> <a>newGetEndpointAttributes</a> smart constructor.
data GetEndpointAttributes
GetEndpointAttributes' :: Text -> GetEndpointAttributes

-- | Create a value of <a>GetEndpointAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:GetEndpointAttributes'</a>,
--   <a>getEndpointAttributes_endpointArn</a> - EndpointArn for
--   GetEndpointAttributes input.
newGetEndpointAttributes :: Text -> GetEndpointAttributes

-- | Response from GetEndpointAttributes of the EndpointArn.
--   
--   <i>See:</i> <a>newGetEndpointAttributesResponse</a> smart constructor.
data GetEndpointAttributesResponse
GetEndpointAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetEndpointAttributesResponse

-- | Create a value of <a>GetEndpointAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetEndpointAttributesResponse'</a>,
--   <a>getEndpointAttributesResponse_attributes</a> - Attributes include
--   the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.The device token for the iOS platform is
--   returned in lowercase.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetEndpointAttributesResponse'</a>,
--   <a>getEndpointAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetEndpointAttributesResponse :: Int -> GetEndpointAttributesResponse

-- | Input for GetSubscriptionAttributes.
--   
--   <i>See:</i> <a>newGetSubscriptionAttributes</a> smart constructor.
data GetSubscriptionAttributes
GetSubscriptionAttributes' :: Text -> GetSubscriptionAttributes

-- | Create a value of <a>GetSubscriptionAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionArn:GetSubscriptionAttributes'</a>,
--   <a>getSubscriptionAttributes_subscriptionArn</a> - The ARN of the
--   subscription whose properties you want to get.
newGetSubscriptionAttributes :: Text -> GetSubscriptionAttributes

-- | Response for GetSubscriptionAttributes action.
--   
--   <i>See:</i> <a>newGetSubscriptionAttributesResponse</a> smart
--   constructor.
data GetSubscriptionAttributesResponse
GetSubscriptionAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetSubscriptionAttributesResponse

-- | Create a value of <a>GetSubscriptionAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSubscriptionAttributesResponse'</a>,
--   <a>getSubscriptionAttributesResponse_attributes</a> - A map of the
--   subscription's attributes. Attributes in this map include the
--   following:
--   
--   <ul>
--   <li><tt>ConfirmationWasAuthenticated</tt> – <tt>true</tt> if the
--   subscription confirmation request was authenticated.</li>
--   <li><tt>DeliveryPolicy</tt> – The JSON serialization of the
--   subscription's delivery policy.</li>
--   <li><tt>EffectiveDeliveryPolicy</tt> – The JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults.</li>
--   <li><tt>FilterPolicy</tt> – The filter policy JSON that is assigned to
--   the subscription. For more information, see <a>Amazon SNS Message
--   Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   <li><tt>Owner</tt> – The account ID of the subscription's owner.</li>
--   <li><tt>PendingConfirmation</tt> – <tt>true</tt> if the subscription
--   hasn't been confirmed. To confirm a pending subscription, call the
--   <tt>ConfirmSubscription</tt> action with a confirmation token.</li>
--   <li><tt>RawMessageDelivery</tt> – <tt>true</tt> if raw message
--   delivery is enabled for the subscription. Raw messages are free of
--   JSON formatting and can be sent to HTTP/S and Amazon SQS
--   endpoints.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   <li><tt>SubscriptionArn</tt> – The subscription's ARN.</li>
--   <li><tt>TopicArn</tt> – The topic ARN that the subscription is
--   associated with.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetSubscriptionAttributesResponse'</a>,
--   <a>getSubscriptionAttributesResponse_httpStatus</a> - The response's
--   http status code.
newGetSubscriptionAttributesResponse :: Int -> GetSubscriptionAttributesResponse

-- | Input for DeleteEndpoint action.
--   
--   <i>See:</i> <a>newDeleteEndpoint</a> smart constructor.
data DeleteEndpoint
DeleteEndpoint' :: Text -> DeleteEndpoint

-- | Create a value of <a>DeleteEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:DeleteEndpoint'</a>,
--   <a>deleteEndpoint_endpointArn</a> - EndpointArn of endpoint to delete.
newDeleteEndpoint :: Text -> DeleteEndpoint

-- | <i>See:</i> <a>newDeleteEndpointResponse</a> smart constructor.
data DeleteEndpointResponse
DeleteEndpointResponse' :: DeleteEndpointResponse

-- | Create a value of <a>DeleteEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEndpointResponse :: DeleteEndpointResponse

-- | Input for ListSubscriptions action.
--   
--   <i>See:</i> <a>newListSubscriptions</a> smart constructor.
data ListSubscriptions
ListSubscriptions' :: Maybe Text -> ListSubscriptions

-- | Create a value of <a>ListSubscriptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptions'</a>,
--   <a>listSubscriptions_nextToken</a> - Token returned by the previous
--   <tt>ListSubscriptions</tt> request.
newListSubscriptions :: ListSubscriptions

-- | Response for ListSubscriptions action
--   
--   <i>See:</i> <a>newListSubscriptionsResponse</a> smart constructor.
data ListSubscriptionsResponse
ListSubscriptionsResponse' :: Maybe Text -> Maybe [Subscription] -> Int -> ListSubscriptionsResponse

-- | Create a value of <a>ListSubscriptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptions'</a>,
--   <a>listSubscriptionsResponse_nextToken</a> - Token to pass along to
--   the next <tt>ListSubscriptions</tt> request. This element is returned
--   if there are more subscriptions to retrieve.
--   
--   <a>$sel:subscriptions:ListSubscriptionsResponse'</a>,
--   <a>listSubscriptionsResponse_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:httpStatus:ListSubscriptionsResponse'</a>,
--   <a>listSubscriptionsResponse_httpStatus</a> - The response's http
--   status code.
newListSubscriptionsResponse :: Int -> ListSubscriptionsResponse

-- | The input for the <tt>ListPhoneNumbersOptedOut</tt> action.
--   
--   <i>See:</i> <a>newListPhoneNumbersOptedOut</a> smart constructor.
data ListPhoneNumbersOptedOut
ListPhoneNumbersOptedOut' :: Maybe Text -> ListPhoneNumbersOptedOut

-- | Create a value of <a>ListPhoneNumbersOptedOut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPhoneNumbersOptedOut'</a>,
--   <a>listPhoneNumbersOptedOut_nextToken</a> - A <tt>NextToken</tt>
--   string is used when you call the <tt>ListPhoneNumbersOptedOut</tt>
--   action to retrieve additional records that are available after the
--   first page of results.
newListPhoneNumbersOptedOut :: ListPhoneNumbersOptedOut

-- | The response from the <tt>ListPhoneNumbersOptedOut</tt> action.
--   
--   <i>See:</i> <a>newListPhoneNumbersOptedOutResponse</a> smart
--   constructor.
data ListPhoneNumbersOptedOutResponse
ListPhoneNumbersOptedOutResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListPhoneNumbersOptedOutResponse

-- | Create a value of <a>ListPhoneNumbersOptedOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPhoneNumbersOptedOut'</a>,
--   <a>listPhoneNumbersOptedOutResponse_nextToken</a> - A
--   <tt>NextToken</tt> string is returned when you call the
--   <tt>ListPhoneNumbersOptedOut</tt> action if additional records are
--   available after the first page of results.
--   
--   <a>$sel:phoneNumbers:ListPhoneNumbersOptedOutResponse'</a>,
--   <a>listPhoneNumbersOptedOutResponse_phoneNumbers</a> - A list of phone
--   numbers that are opted out of receiving SMS messages. The list is
--   paginated, and each page can contain up to 100 phone numbers.
--   
--   <a>$sel:httpStatus:ListPhoneNumbersOptedOutResponse'</a>,
--   <a>listPhoneNumbersOptedOutResponse_httpStatus</a> - The response's
--   http status code.
newListPhoneNumbersOptedOutResponse :: Int -> ListPhoneNumbersOptedOutResponse

-- | Input for SetTopicAttributes action.
--   
--   <i>See:</i> <a>newSetTopicAttributes</a> smart constructor.
data SetTopicAttributes
SetTopicAttributes' :: Maybe Text -> Text -> Text -> SetTopicAttributes

-- | Create a value of <a>SetTopicAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_attributeValue</a> - The new value for the
--   attribute.
--   
--   <a>$sel:topicArn:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_topicArn</a> - The ARN of the topic to modify.
--   
--   <a>$sel:attributeName:SetTopicAttributes'</a>,
--   <a>setTopicAttributes_attributeName</a> - A map of attributes with
--   their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>SetTopicAttributes</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side-encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attribute applies only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
newSetTopicAttributes :: Text -> Text -> SetTopicAttributes

-- | <i>See:</i> <a>newSetTopicAttributesResponse</a> smart constructor.
data SetTopicAttributesResponse
SetTopicAttributesResponse' :: SetTopicAttributesResponse

-- | Create a value of <a>SetTopicAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetTopicAttributesResponse :: SetTopicAttributesResponse

-- | Input for ListPlatformApplications action.
--   
--   <i>See:</i> <a>newListPlatformApplications</a> smart constructor.
data ListPlatformApplications
ListPlatformApplications' :: Maybe Text -> ListPlatformApplications

-- | Create a value of <a>ListPlatformApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlatformApplications'</a>,
--   <a>listPlatformApplications_nextToken</a> - NextToken string is used
--   when calling ListPlatformApplications action to retrieve additional
--   records that are available after the first page results.
newListPlatformApplications :: ListPlatformApplications

-- | Response for ListPlatformApplications action.
--   
--   <i>See:</i> <a>newListPlatformApplicationsResponse</a> smart
--   constructor.
data ListPlatformApplicationsResponse
ListPlatformApplicationsResponse' :: Maybe Text -> Maybe [PlatformApplication] -> Int -> ListPlatformApplicationsResponse

-- | Create a value of <a>ListPlatformApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlatformApplications'</a>,
--   <a>listPlatformApplicationsResponse_nextToken</a> - NextToken string
--   is returned when calling ListPlatformApplications action if additional
--   records are available after the first page results.
--   
--   <a>$sel:platformApplications:ListPlatformApplicationsResponse'</a>,
--   <a>listPlatformApplicationsResponse_platformApplications</a> -
--   Platform applications returned when calling ListPlatformApplications
--   action.
--   
--   <a>$sel:httpStatus:ListPlatformApplicationsResponse'</a>,
--   <a>listPlatformApplicationsResponse_httpStatus</a> - The response's
--   http status code.
newListPlatformApplicationsResponse :: Int -> ListPlatformApplicationsResponse

-- | Input for GetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newGetPlatformApplicationAttributes</a> smart
--   constructor.
data GetPlatformApplicationAttributes
GetPlatformApplicationAttributes' :: Text -> GetPlatformApplicationAttributes

-- | Create a value of <a>GetPlatformApplicationAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:GetPlatformApplicationAttributes'</a>,
--   <a>getPlatformApplicationAttributes_platformApplicationArn</a> -
--   PlatformApplicationArn for GetPlatformApplicationAttributesInput.
newGetPlatformApplicationAttributes :: Text -> GetPlatformApplicationAttributes

-- | Response for GetPlatformApplicationAttributes action.
--   
--   <i>See:</i> <a>newGetPlatformApplicationAttributesResponse</a> smart
--   constructor.
data GetPlatformApplicationAttributesResponse
GetPlatformApplicationAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetPlatformApplicationAttributesResponse

-- | Create a value of <a>GetPlatformApplicationAttributesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetPlatformApplicationAttributesResponse'</a>,
--   <a>getPlatformApplicationAttributesResponse_attributes</a> -
--   Attributes include the following:
--   
--   <ul>
--   <li><tt>EventEndpointCreated</tt> – Topic ARN to which EndpointCreated
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointDeleted</tt> – Topic ARN to which EndpointDeleted
--   event notifications should be sent.</li>
--   <li><tt>EventEndpointUpdated</tt> – Topic ARN to which EndpointUpdate
--   event notifications should be sent.</li>
--   <li><tt>EventDeliveryFailure</tt> – Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetPlatformApplicationAttributesResponse'</a>,
--   <a>getPlatformApplicationAttributesResponse_httpStatus</a> - The
--   response's http status code.
newGetPlatformApplicationAttributesResponse :: Int -> GetPlatformApplicationAttributesResponse

-- | Input for ListEndpointsByPlatformApplication action.
--   
--   <i>See:</i> <a>newListEndpointsByPlatformApplication</a> smart
--   constructor.
data ListEndpointsByPlatformApplication
ListEndpointsByPlatformApplication' :: Maybe Text -> Text -> ListEndpointsByPlatformApplication

-- | Create a value of <a>ListEndpointsByPlatformApplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplication_nextToken</a> - NextToken string
--   is used when calling ListEndpointsByPlatformApplication action to
--   retrieve additional records that are available after the first page
--   results.
--   
--   
--   <a>$sel:platformApplicationArn:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
newListEndpointsByPlatformApplication :: Text -> ListEndpointsByPlatformApplication

-- | Response for ListEndpointsByPlatformApplication action.
--   
--   <i>See:</i> <a>newListEndpointsByPlatformApplicationResponse</a> smart
--   constructor.
data ListEndpointsByPlatformApplicationResponse
ListEndpointsByPlatformApplicationResponse' :: Maybe Text -> Maybe [Endpoint] -> Int -> ListEndpointsByPlatformApplicationResponse

-- | Create a value of <a>ListEndpointsByPlatformApplicationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEndpointsByPlatformApplication'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_nextToken</a> -
--   NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
--   
--   <a>$sel:endpoints:ListEndpointsByPlatformApplicationResponse'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_endpoints</a> -
--   Endpoints returned for ListEndpointsByPlatformApplication action.
--   
--   <a>$sel:httpStatus:ListEndpointsByPlatformApplicationResponse'</a>,
--   <a>listEndpointsByPlatformApplicationResponse_httpStatus</a> - The
--   response's http status code.
newListEndpointsByPlatformApplicationResponse :: Int -> ListEndpointsByPlatformApplicationResponse

-- | The input for the <tt>GetSMSAttributes</tt> request.
--   
--   <i>See:</i> <a>newGetSMSAttributes</a> smart constructor.
data GetSMSAttributes
GetSMSAttributes' :: Maybe [Text] -> GetSMSAttributes

-- | Create a value of <a>GetSMSAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSMSAttributes'</a>,
--   <a>getSMSAttributes_attributes</a> - A list of the individual
--   attribute names, such as <tt>MonthlySpendLimit</tt>, for which you
--   want values.
--   
--   For all attribute names, see <a>SetSMSAttributes</a>.
--   
--   If you don't use this parameter, Amazon SNS returns all SMS
--   attributes.
newGetSMSAttributes :: GetSMSAttributes

-- | The response from the <tt>GetSMSAttributes</tt> request.
--   
--   <i>See:</i> <a>newGetSMSAttributesResponse</a> smart constructor.
data GetSMSAttributesResponse
GetSMSAttributesResponse' :: Maybe (HashMap Text Text) -> Int -> GetSMSAttributesResponse

-- | Create a value of <a>GetSMSAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetSMSAttributes'</a>,
--   <a>getSMSAttributesResponse_attributes</a> - The SMS attribute names
--   and their values.
--   
--   <a>$sel:httpStatus:GetSMSAttributesResponse'</a>,
--   <a>getSMSAttributesResponse_httpStatus</a> - The response's http
--   status code.
newGetSMSAttributesResponse :: Int -> GetSMSAttributesResponse

-- | Input for CreatePlatformApplication action.
--   
--   <i>See:</i> <a>newCreatePlatformApplication</a> smart constructor.
data CreatePlatformApplication
CreatePlatformApplication' :: Text -> Text -> HashMap Text Text -> CreatePlatformApplication

-- | Create a value of <a>CreatePlatformApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_name</a> - Application names must be made
--   up of only uppercase and lowercase ASCII letters, numbers,
--   underscores, hyphens, and periods, and must be between 1 and 256
--   characters long.
--   
--   <a>$sel:platform:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_platform</a> - The following platforms
--   are supported: ADM (Amazon Device Messaging), APNS (Apple Push
--   Notification Service), APNS_SANDBOX, and GCM (Firebase Cloud
--   Messaging).
--   
--   <a>$sel:attributes:CreatePlatformApplication'</a>,
--   <a>createPlatformApplication_attributes</a> - For a list of
--   attributes, see <a>SetPlatformApplicationAttributes</a>.
newCreatePlatformApplication :: Text -> Text -> CreatePlatformApplication

-- | Response from CreatePlatformApplication action.
--   
--   <i>See:</i> <a>newCreatePlatformApplicationResponse</a> smart
--   constructor.
data CreatePlatformApplicationResponse
CreatePlatformApplicationResponse' :: Maybe Text -> Int -> CreatePlatformApplicationResponse

-- | Create a value of <a>CreatePlatformApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:CreatePlatformApplicationResponse'</a>,
--   <a>createPlatformApplicationResponse_platformApplicationArn</a> -
--   PlatformApplicationArn is returned.
--   
--   <a>$sel:httpStatus:CreatePlatformApplicationResponse'</a>,
--   <a>createPlatformApplicationResponse_httpStatus</a> - The response's
--   http status code.
newCreatePlatformApplicationResponse :: Int -> CreatePlatformApplicationResponse

-- | Input for SetEndpointAttributes action.
--   
--   <i>See:</i> <a>newSetEndpointAttributes</a> smart constructor.
data SetEndpointAttributes
SetEndpointAttributes' :: Text -> HashMap Text Text -> SetEndpointAttributes

-- | Create a value of <a>SetEndpointAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointArn:SetEndpointAttributes'</a>,
--   <a>setEndpointAttributes_endpointArn</a> - EndpointArn used for
--   SetEndpointAttributes action.
--   
--   <a>$sel:attributes:SetEndpointAttributes'</a>,
--   <a>setEndpointAttributes_attributes</a> - A map of the endpoint
--   attributes. Attributes in this map include the following:
--   
--   <ul>
--   <li><tt>CustomUserData</tt> – arbitrary user data to associate with
--   the endpoint. Amazon SNS does not use this data. The data must be in
--   UTF-8 format and less than 2KB.</li>
--   <li><tt>Enabled</tt> – flag that enables/disables delivery to the
--   endpoint. Amazon SNS will set this to false when a notification
--   service indicates to Amazon SNS that the endpoint is invalid. Users
--   can set it back to true, typically after updating Token.</li>
--   <li><tt>Token</tt> – device token, also referred to as a registration
--   id, for an app and mobile device. This is returned from the
--   notification service when an app and mobile device are registered with
--   the notification service.</li>
--   </ul>
newSetEndpointAttributes :: Text -> SetEndpointAttributes

-- | <i>See:</i> <a>newSetEndpointAttributesResponse</a> smart constructor.
data SetEndpointAttributesResponse
SetEndpointAttributesResponse' :: SetEndpointAttributesResponse

-- | Create a value of <a>SetEndpointAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetEndpointAttributesResponse :: SetEndpointAttributesResponse

-- | Input for SetSubscriptionAttributes action.
--   
--   <i>See:</i> <a>newSetSubscriptionAttributes</a> smart constructor.
data SetSubscriptionAttributes
SetSubscriptionAttributes' :: Maybe Text -> Text -> Text -> SetSubscriptionAttributes

-- | Create a value of <a>SetSubscriptionAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_attributeValue</a> - The new value for
--   the attribute in JSON format.
--   
--   <a>$sel:subscriptionArn:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_subscriptionArn</a> - The ARN of the
--   subscription to modify.
--   
--   <a>$sel:attributeName:SetSubscriptionAttributes'</a>,
--   <a>setSubscriptionAttributes_attributeName</a> - A map of attributes
--   with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that this action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>FilterPolicy</tt> – The simple JSON object that lets your
--   subscriber receive only a subset of messages, rather than receiving
--   every message published to the topic.</li>
--   <li><tt>RawMessageDelivery</tt> – When set to <tt>true</tt>, enables
--   raw message delivery to Amazon SQS or HTTP/S endpoints. This
--   eliminates the need for the endpoints to process JSON formatting,
--   which is otherwise created for Amazon SNS metadata.</li>
--   <li><tt>RedrivePolicy</tt> – When specified, sends undeliverable
--   messages to the specified Amazon SQS dead-letter queue. Messages that
--   can't be delivered due to client errors (for example, when the
--   subscribed endpoint is unreachable) or server errors (for example,
--   when the service that powers the subscribed endpoint becomes
--   unavailable) are held in the dead-letter queue for further analysis or
--   reprocessing.</li>
--   </ul>
--   
--   The following attribute applies only to Amazon Kinesis Data Firehose
--   delivery stream subscriptions:
--   
--   <ul>
--   <li><tt>SubscriptionRoleArn</tt> – The ARN of the IAM role that has
--   the following:<ul><li>Permission to write to the Kinesis Data Firehose
--   delivery stream</li><li>Amazon SNS listed as a trusted
--   entity</li></ul>Specifying a valid ARN for this attribute is required
--   for Kinesis Data Firehose delivery stream subscriptions. For more
--   information, see <a>Fanout to Kinesis Data Firehose delivery
--   streams</a> in the <i>Amazon SNS Developer Guide</i>.</li>
--   </ul>
newSetSubscriptionAttributes :: Text -> Text -> SetSubscriptionAttributes

-- | <i>See:</i> <a>newSetSubscriptionAttributesResponse</a> smart
--   constructor.
data SetSubscriptionAttributesResponse
SetSubscriptionAttributesResponse' :: SetSubscriptionAttributesResponse

-- | Create a value of <a>SetSubscriptionAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetSubscriptionAttributesResponse :: SetSubscriptionAttributesResponse

-- | <i>See:</i> <a>newListSMSSandboxPhoneNumbers</a> smart constructor.
data ListSMSSandboxPhoneNumbers
ListSMSSandboxPhoneNumbers' :: Maybe Text -> Maybe Natural -> ListSMSSandboxPhoneNumbers

-- | Create a value of <a>ListSMSSandboxPhoneNumbers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbers_nextToken</a> - Token that the previous
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> request returns.
--   
--   <a>$sel:maxResults:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbers_maxResults</a> - The maximum number of
--   phone numbers to return.
newListSMSSandboxPhoneNumbers :: ListSMSSandboxPhoneNumbers

-- | <i>See:</i> <a>newListSMSSandboxPhoneNumbersResponse</a> smart
--   constructor.
data ListSMSSandboxPhoneNumbersResponse
ListSMSSandboxPhoneNumbersResponse' :: Maybe Text -> Int -> [SMSSandboxPhoneNumber] -> ListSMSSandboxPhoneNumbersResponse

-- | Create a value of <a>ListSMSSandboxPhoneNumbersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSMSSandboxPhoneNumbers'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_nextToken</a> - A
--   <tt>NextToken</tt> string is returned when you call the
--   <tt>ListSMSSandboxPhoneNumbersInput</tt> operation if additional pages
--   of records are available.
--   
--   <a>$sel:httpStatus:ListSMSSandboxPhoneNumbersResponse'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:phoneNumbers:ListSMSSandboxPhoneNumbersResponse'</a>,
--   <a>listSMSSandboxPhoneNumbersResponse_phoneNumbers</a> - A list of the
--   calling account's pending and verified phone numbers.
newListSMSSandboxPhoneNumbersResponse :: Int -> ListSMSSandboxPhoneNumbersResponse

-- | <i>See:</i> <a>newListOriginationNumbers</a> smart constructor.
data ListOriginationNumbers
ListOriginationNumbers' :: Maybe Text -> Maybe Natural -> ListOriginationNumbers

-- | Create a value of <a>ListOriginationNumbers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbers_nextToken</a> - Token that the previous
--   <tt>ListOriginationNumbers</tt> request returns.
--   
--   <a>$sel:maxResults:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbers_maxResults</a> - The maximum number of
--   origination numbers to return.
newListOriginationNumbers :: ListOriginationNumbers

-- | <i>See:</i> <a>newListOriginationNumbersResponse</a> smart
--   constructor.
data ListOriginationNumbersResponse
ListOriginationNumbersResponse' :: Maybe Text -> Maybe [PhoneNumberInformation] -> Int -> ListOriginationNumbersResponse

-- | Create a value of <a>ListOriginationNumbersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOriginationNumbers'</a>,
--   <a>listOriginationNumbersResponse_nextToken</a> - A <tt>NextToken</tt>
--   string is returned when you call the <tt>ListOriginationNumbers</tt>
--   operation if additional pages of records are available.
--   
--   <a>$sel:phoneNumbers:ListOriginationNumbersResponse'</a>,
--   <a>listOriginationNumbersResponse_phoneNumbers</a> - A list of the
--   calling account's verified and pending origination numbers.
--   
--   <a>$sel:httpStatus:ListOriginationNumbersResponse'</a>,
--   <a>listOriginationNumbersResponse_httpStatus</a> - The response's http
--   status code.
newListOriginationNumbersResponse :: Int -> ListOriginationNumbersResponse

-- | <i>See:</i> <a>newCreateSMSSandboxPhoneNumber</a> smart constructor.
data CreateSMSSandboxPhoneNumber
CreateSMSSandboxPhoneNumber' :: Maybe LanguageCodeString -> Text -> CreateSMSSandboxPhoneNumber

-- | Create a value of <a>CreateSMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:CreateSMSSandboxPhoneNumber'</a>,
--   <a>createSMSSandboxPhoneNumber_languageCode</a> - The language to use
--   for sending the OTP. The default value is <tt>en-US</tt>.
--   
--   <a>$sel:phoneNumber:CreateSMSSandboxPhoneNumber'</a>,
--   <a>createSMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to verify. On verification, Amazon SNS adds this phone number
--   to the list of verified phone numbers that you can send SMS messages
--   to.
newCreateSMSSandboxPhoneNumber :: Text -> CreateSMSSandboxPhoneNumber

-- | <i>See:</i> <a>newCreateSMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data CreateSMSSandboxPhoneNumberResponse
CreateSMSSandboxPhoneNumberResponse' :: Int -> CreateSMSSandboxPhoneNumberResponse

-- | Create a value of <a>CreateSMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateSMSSandboxPhoneNumberResponse'</a>,
--   <a>createSMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newCreateSMSSandboxPhoneNumberResponse :: Int -> CreateSMSSandboxPhoneNumberResponse

-- | <i>See:</i> <a>newGetSMSSandboxAccountStatus</a> smart constructor.
data GetSMSSandboxAccountStatus
GetSMSSandboxAccountStatus' :: GetSMSSandboxAccountStatus

-- | Create a value of <a>GetSMSSandboxAccountStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetSMSSandboxAccountStatus :: GetSMSSandboxAccountStatus

-- | <i>See:</i> <a>newGetSMSSandboxAccountStatusResponse</a> smart
--   constructor.
data GetSMSSandboxAccountStatusResponse
GetSMSSandboxAccountStatusResponse' :: Int -> Bool -> GetSMSSandboxAccountStatusResponse

-- | Create a value of <a>GetSMSSandboxAccountStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetSMSSandboxAccountStatusResponse'</a>,
--   <a>getSMSSandboxAccountStatusResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:isInSandbox:GetSMSSandboxAccountStatusResponse'</a>,
--   <a>getSMSSandboxAccountStatusResponse_isInSandbox</a> - Indicates
--   whether the calling account is in the SMS sandbox.
newGetSMSSandboxAccountStatusResponse :: Int -> Bool -> GetSMSSandboxAccountStatusResponse

-- | The input for the <tt>CheckIfPhoneNumberIsOptedOut</tt> action.
--   
--   <i>See:</i> <a>newCheckIfPhoneNumberIsOptedOut</a> smart constructor.
data CheckIfPhoneNumberIsOptedOut
CheckIfPhoneNumberIsOptedOut' :: Text -> CheckIfPhoneNumberIsOptedOut

-- | Create a value of <a>CheckIfPhoneNumberIsOptedOut</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:CheckIfPhoneNumberIsOptedOut'</a>,
--   <a>checkIfPhoneNumberIsOptedOut_phoneNumber</a> - The phone number for
--   which you want to check the opt out status.
newCheckIfPhoneNumberIsOptedOut :: Text -> CheckIfPhoneNumberIsOptedOut

-- | The response from the <tt>CheckIfPhoneNumberIsOptedOut</tt> action.
--   
--   <i>See:</i> <a>newCheckIfPhoneNumberIsOptedOutResponse</a> smart
--   constructor.
data CheckIfPhoneNumberIsOptedOutResponse
CheckIfPhoneNumberIsOptedOutResponse' :: Maybe Bool -> Int -> CheckIfPhoneNumberIsOptedOutResponse

-- | Create a value of <a>CheckIfPhoneNumberIsOptedOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isOptedOut:CheckIfPhoneNumberIsOptedOutResponse'</a>,
--   <a>checkIfPhoneNumberIsOptedOutResponse_isOptedOut</a> - Indicates
--   whether the phone number is opted out:
--   
--   <ul>
--   <li><tt>true</tt> – The phone number is opted out, meaning you cannot
--   publish SMS messages to it.</li>
--   <li><tt>false</tt> – The phone number is opted in, meaning you can
--   publish SMS messages to it.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:CheckIfPhoneNumberIsOptedOutResponse'</a>,
--   <a>checkIfPhoneNumberIsOptedOutResponse_httpStatus</a> - The
--   response's http status code.
newCheckIfPhoneNumberIsOptedOutResponse :: Int -> CheckIfPhoneNumberIsOptedOutResponse

-- | <i>See:</i> <a>newVerifySMSSandboxPhoneNumber</a> smart constructor.
data VerifySMSSandboxPhoneNumber
VerifySMSSandboxPhoneNumber' :: Text -> Text -> VerifySMSSandboxPhoneNumber

-- | Create a value of <a>VerifySMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:VerifySMSSandboxPhoneNumber'</a>,
--   <a>verifySMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number to verify.
--   
--   <a>$sel:oneTimePassword:VerifySMSSandboxPhoneNumber'</a>,
--   <a>verifySMSSandboxPhoneNumber_oneTimePassword</a> - The OTP sent to
--   the destination number from the <tt>CreateSMSSandBoxPhoneNumber</tt>
--   call.
newVerifySMSSandboxPhoneNumber :: Text -> Text -> VerifySMSSandboxPhoneNumber

-- | The destination phone number's verification status.
--   
--   <i>See:</i> <a>newVerifySMSSandboxPhoneNumberResponse</a> smart
--   constructor.
data VerifySMSSandboxPhoneNumberResponse
VerifySMSSandboxPhoneNumberResponse' :: Int -> VerifySMSSandboxPhoneNumberResponse

-- | Create a value of <a>VerifySMSSandboxPhoneNumberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VerifySMSSandboxPhoneNumberResponse'</a>,
--   <a>verifySMSSandboxPhoneNumberResponse_httpStatus</a> - The response's
--   http status code.
newVerifySMSSandboxPhoneNumberResponse :: Int -> VerifySMSSandboxPhoneNumberResponse

-- | <i>See:</i> <a>newDeleteTopic</a> smart constructor.
data DeleteTopic
DeleteTopic' :: Text -> DeleteTopic

-- | Create a value of <a>DeleteTopic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:DeleteTopic'</a>, <a>deleteTopic_topicArn</a> - The
--   ARN of the topic you want to delete.
newDeleteTopic :: Text -> DeleteTopic

-- | <i>See:</i> <a>newDeleteTopicResponse</a> smart constructor.
data DeleteTopicResponse
DeleteTopicResponse' :: DeleteTopicResponse

-- | Create a value of <a>DeleteTopicResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTopicResponse :: DeleteTopicResponse

-- | Input for CreateTopic action.
--   
--   <i>See:</i> <a>newCreateTopic</a> smart constructor.
data CreateTopic
CreateTopic' :: Maybe (HashMap Text Text) -> Maybe [Tag] -> Text -> CreateTopic

-- | Create a value of <a>CreateTopic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreateTopic'</a>, <a>createTopic_attributes</a> - A
--   map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters that the <tt>CreateTopic</tt> action uses:
--   
--   <ul>
--   <li><tt>DeliveryPolicy</tt> – The policy that defines how Amazon SNS
--   retries failed deliveries to HTTP/S endpoints.</li>
--   <li><tt>DisplayName</tt> – The display name to use for a topic with
--   SMS subscriptions.</li>
--   <li><tt>FifoTopic</tt> – Set to true to create a FIFO topic.</li>
--   <li><tt>Policy</tt> – The policy that defines who can access your
--   topic. By default, only the topic owner can publish or subscribe to
--   the topic.</li>
--   </ul>
--   
--   The following attribute applies only to <a>server-side encryption</a>:
--   
--   <ul>
--   <li><tt>KmsMasterKeyId</tt> – The ID of an Amazon Web Services managed
--   customer master key (CMK) for Amazon SNS or a custom CMK. For more
--   information, see <a>Key Terms</a>. For more examples, see <a>KeyId</a>
--   in the <i>Key Management Service API Reference</i>.</li>
--   </ul>
--   
--   The following attributes apply only to <a>FIFO topics</a>:
--   
--   <ul>
--   <li><tt>FifoTopic</tt> – When this is set to <tt>true</tt>, a FIFO
--   topic is created.</li>
--   <li><tt>ContentBasedDeduplication</tt> – Enables content-based
--   deduplication for FIFO topics.<ul><li>By default,
--   <tt>ContentBasedDeduplication</tt> is set to <tt>false</tt>. If you
--   create a FIFO topic and this attribute is <tt>false</tt>, you must
--   specify a value for the <tt>MessageDeduplicationId</tt> parameter for
--   the <a>Publish</a> action.</li><li>When you set
--   <tt>ContentBasedDeduplication</tt> to <tt>true</tt>, Amazon SNS uses a
--   SHA-256 hash to generate the <tt>MessageDeduplicationId</tt> using the
--   body of the message (but not the attributes of the message).(Optional)
--   To override the generated value, you can specify a value for the
--   <tt>MessageDeduplicationId</tt> parameter for the <tt>Publish</tt>
--   action.</li></ul></li>
--   </ul>
--   
--   <a>$sel:tags:CreateTopic'</a>, <a>createTopic_tags</a> - The list of
--   tags to add to a new topic.
--   
--   To be able to tag a topic on creation, you must have the
--   <tt>sns:CreateTopic</tt> and <tt>sns:TagResource</tt> permissions.
--   
--   <a>$sel:name:CreateTopic'</a>, <a>createTopic_name</a> - The name of
--   the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
--   
--   For a FIFO (first-in-first-out) topic, the name must end with the
--   <tt>.fifo</tt> suffix.
newCreateTopic :: Text -> CreateTopic

-- | Response from CreateTopic action.
--   
--   <i>See:</i> <a>newCreateTopicResponse</a> smart constructor.
data CreateTopicResponse
CreateTopicResponse' :: Maybe Text -> Int -> CreateTopicResponse

-- | Create a value of <a>CreateTopicResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:CreateTopicResponse'</a>,
--   <a>createTopicResponse_topicArn</a> - The Amazon Resource Name (ARN)
--   assigned to the created topic.
--   
--   <a>$sel:httpStatus:CreateTopicResponse'</a>,
--   <a>createTopicResponse_httpStatus</a> - The response's http status
--   code.
newCreateTopicResponse :: Int -> CreateTopicResponse

-- | Input for RemovePermission action.
--   
--   <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Text -> Text -> RemovePermission

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:RemovePermission'</a>,
--   <a>removePermission_topicArn</a> - The ARN of the topic whose access
--   control policy you wish to modify.
--   
--   <a>$sel:label:RemovePermission'</a>, <a>removePermission_label</a> -
--   The unique label of the statement you want to remove.
newRemovePermission :: Text -> Text -> RemovePermission

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the topic for
--   which to list tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags associated with the
--   specified topic.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Supported language code for sending OTP message
newtype LanguageCodeString
LanguageCodeString' :: Text -> LanguageCodeString
[fromLanguageCodeString] :: LanguageCodeString -> Text
pattern LanguageCodeString_De_DE :: LanguageCodeString
pattern LanguageCodeString_En_GB :: LanguageCodeString
pattern LanguageCodeString_En_US :: LanguageCodeString
pattern LanguageCodeString_Es_419 :: LanguageCodeString
pattern LanguageCodeString_Es_ES :: LanguageCodeString
pattern LanguageCodeString_Fr_CA :: LanguageCodeString
pattern LanguageCodeString_Fr_FR :: LanguageCodeString
pattern LanguageCodeString_It_IT :: LanguageCodeString
pattern LanguageCodeString_Ja_JP :: LanguageCodeString
pattern LanguageCodeString_Kr_KR :: LanguageCodeString
pattern LanguageCodeString_Pt_BR :: LanguageCodeString
pattern LanguageCodeString_Zh_CN :: LanguageCodeString
pattern LanguageCodeString_Zh_TW :: LanguageCodeString

-- | Enum listing out all supported number capabilities.
newtype NumberCapability
NumberCapability' :: Text -> NumberCapability
[fromNumberCapability] :: NumberCapability -> Text
pattern NumberCapability_MMS :: NumberCapability
pattern NumberCapability_SMS :: NumberCapability
pattern NumberCapability_VOICE :: NumberCapability

-- | Enum listing out all supported route types. The following enum values
--   are supported. 1. Transactional : Non-marketing traffic 2. Promotional
--   : Marketing 3. Premium : Premium routes for OTP delivery to the
--   carriers
newtype RouteType
RouteType' :: Text -> RouteType
[fromRouteType] :: RouteType -> Text
pattern RouteType_Premium :: RouteType
pattern RouteType_Promotional :: RouteType
pattern RouteType_Transactional :: RouteType

-- | Enum listing out all supported destination phone number verification
--   statuses. The following enum values are supported. 1. PENDING : The
--   destination phone number is pending verification. 2. VERIFIED : The
--   destination phone number is verified.
newtype SMSSandboxPhoneNumberVerificationStatus
SMSSandboxPhoneNumberVerificationStatus' :: Text -> SMSSandboxPhoneNumberVerificationStatus
[fromSMSSandboxPhoneNumberVerificationStatus] :: SMSSandboxPhoneNumberVerificationStatus -> Text
pattern SMSSandboxPhoneNumberVerificationStatus_Pending :: SMSSandboxPhoneNumberVerificationStatus
pattern SMSSandboxPhoneNumberVerificationStatus_Verified :: SMSSandboxPhoneNumberVerificationStatus

-- | Endpoint for mobile app and device.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe (HashMap Text Text) -> Maybe Text -> Endpoint

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Endpoint'</a>, <a>endpoint_attributes</a> -
--   Attributes for endpoint.
--   
--   <a>$sel:endpointArn:Endpoint'</a>, <a>endpoint_endpointArn</a> -
--   EndpointArn for mobile app and device.
newEndpoint :: Endpoint

-- | The user-specified message attribute value. For string data types, the
--   value attribute has the same restrictions on the content as the
--   message body. For more information, see <a>Publish</a>.
--   
--   Name, type, and value must not be empty or null. In addition, the
--   message body should not be empty or null. All parts of the message
--   attribute, including name, type, and value, are included in the
--   message size restriction, which is currently 256 KB (262,144 bytes).
--   For more information, see <a>Amazon SNS message attributes</a> and
--   <a>Publishing to a mobile phone</a> in the <i>Amazon SNS Developer
--   Guide.</i>
--   
--   <i>See:</i> <a>newMessageAttributeValue</a> smart constructor.
data MessageAttributeValue
MessageAttributeValue' :: Maybe Text -> Maybe Base64 -> Text -> MessageAttributeValue

-- | Create a value of <a>MessageAttributeValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_stringValue</a> - Strings are Unicode with
--   UTF8 binary encoding. For a list of code values, see <a>ASCII
--   Printable Characters</a>.
--   
--   <a>$sel:binaryValue:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_binaryValue</a> - Binary type attributes can
--   store any binary data, for example, compressed data, encrypted data,
--   or images.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:dataType:MessageAttributeValue'</a>,
--   <a>messageAttributeValue_dataType</a> - Amazon SNS supports the
--   following logical data types: String, String.Array, Number, and
--   Binary. For more information, see <a>Message Attribute Data Types</a>.
newMessageAttributeValue :: Text -> MessageAttributeValue

-- | A list of phone numbers and their metadata.
--   
--   <i>See:</i> <a>newPhoneNumberInformation</a> smart constructor.
data PhoneNumberInformation
PhoneNumberInformation' :: Maybe Text -> Maybe Text -> Maybe RouteType -> Maybe ISO8601 -> Maybe [NumberCapability] -> Maybe Text -> PhoneNumberInformation

-- | Create a value of <a>PhoneNumberInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_phoneNumber</a> - The phone number.
--   
--   <a>$sel:status:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_status</a> - The status of the phone number.
--   
--   <a>$sel:routeType:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_routeType</a> - The list of supported
--   routes.
--   
--   <a>$sel:createdAt:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_createdAt</a> - The date and time when the
--   phone number was created.
--   
--   <a>$sel:numberCapabilities:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_numberCapabilities</a> - The capabilities of
--   each phone number.
--   
--   <a>$sel:iso2CountryCode:PhoneNumberInformation'</a>,
--   <a>phoneNumberInformation_iso2CountryCode</a> - The two-character code
--   for the country or region, in ISO 3166-1 alpha-2 format.
newPhoneNumberInformation :: PhoneNumberInformation

-- | Platform application object.
--   
--   <i>See:</i> <a>newPlatformApplication</a> smart constructor.
data PlatformApplication
PlatformApplication' :: Maybe Text -> Maybe (HashMap Text Text) -> PlatformApplication

-- | Create a value of <a>PlatformApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformApplicationArn:PlatformApplication'</a>,
--   <a>platformApplication_platformApplicationArn</a> -
--   PlatformApplicationArn for platform application object.
--   
--   <a>$sel:attributes:PlatformApplication'</a>,
--   <a>platformApplication_attributes</a> - Attributes for platform
--   application object.
newPlatformApplication :: PlatformApplication

-- | A verified or pending destination phone number in the SMS sandbox.
--   
--   When you start using Amazon SNS to send SMS messages, your account is
--   in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment
--   for you to try Amazon SNS features without risking your reputation as
--   an SMS sender. While your account is in the SMS sandbox, you can use
--   all of the features of Amazon SNS. However, you can send SMS messages
--   only to verified destination phone numbers. For more information,
--   including how to move out of the sandbox to send messages without
--   restrictions, see <a>SMS sandbox</a> in the <i>Amazon SNS Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newSMSSandboxPhoneNumber</a> smart constructor.
data SMSSandboxPhoneNumber
SMSSandboxPhoneNumber' :: Maybe Text -> Maybe SMSSandboxPhoneNumberVerificationStatus -> SMSSandboxPhoneNumber

-- | Create a value of <a>SMSSandboxPhoneNumber</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phoneNumber:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_phoneNumber</a> - The destination phone
--   number.
--   
--   <a>$sel:status:SMSSandboxPhoneNumber'</a>,
--   <a>sMSSandboxPhoneNumber_status</a> - The destination phone number's
--   verification status.
newSMSSandboxPhoneNumber :: SMSSandboxPhoneNumber

-- | A wrapper type for the attributes of an Amazon SNS subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Subscription

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Subscription'</a>, <a>subscription_topicArn</a> - The
--   ARN of the subscription's topic.
--   
--   <a>$sel:owner:Subscription'</a>, <a>subscription_owner</a> - The
--   subscription's owner.
--   
--   <a>$sel:protocol:Subscription'</a>, <a>subscription_protocol</a> - The
--   subscription's protocol.
--   
--   <a>$sel:subscriptionArn:Subscription'</a>,
--   <a>subscription_subscriptionArn</a> - The subscription's ARN.
--   
--   <a>$sel:endpoint:Subscription'</a>, <a>subscription_endpoint</a> - The
--   subscription's endpoint (format depends on the protocol).
newSubscription :: Subscription

-- | The list of tags to be added to the specified topic.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The required key portion of the
--   tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of the tag.
newTag :: Text -> Text -> Tag

-- | A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve
--   a topic's attributes, use <tt>GetTopicAttributes</tt>.
--   
--   <i>See:</i> <a>newTopic</a> smart constructor.
data Topic
Topic' :: Maybe Text -> Topic

-- | Create a value of <a>Topic</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicArn:Topic'</a>, <a>topic_topicArn</a> - The topic's ARN.
newTopic :: Topic
