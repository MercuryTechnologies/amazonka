-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-configZSamazonka-config
@version 2.0


module Network.AWS.Config.Types.AccountAggregationSource

-- | A collection of accounts and regions.
--   
--   <i>See:</i> <a>newAccountAggregationSource</a> smart constructor.
data AccountAggregationSource
AccountAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> AccountAggregationSource

-- | The source regions being aggregated.
[$sel:awsRegions:AccountAggregationSource'] :: AccountAggregationSource -> Maybe (NonEmpty Text)

-- | If true, aggregate existing Config regions and future regions.
[$sel:allAwsRegions:AccountAggregationSource'] :: AccountAggregationSource -> Maybe Bool

-- | The 12-digit account ID of the account being aggregated.
[$sel:accountIds:AccountAggregationSource'] :: AccountAggregationSource -> NonEmpty Text

-- | Create a value of <a>AccountAggregationSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_awsRegions</a> - The source regions being
--   aggregated.
--   
--   <a>$sel:allAwsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_allAwsRegions</a> - If true, aggregate
--   existing Config regions and future regions.
--   
--   <a>$sel:accountIds:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_accountIds</a> - The 12-digit account ID
--   of the account being aggregated.
newAccountAggregationSource :: NonEmpty Text -> AccountAggregationSource

-- | The source regions being aggregated.
accountAggregationSource_awsRegions :: Lens' AccountAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
accountAggregationSource_allAwsRegions :: Lens' AccountAggregationSource (Maybe Bool)

-- | The 12-digit account ID of the account being aggregated.
accountAggregationSource_accountIds :: Lens' AccountAggregationSource (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance GHC.Show.Show Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance GHC.Read.Read Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance GHC.Classes.Eq Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AccountAggregationSource.AccountAggregationSource


module Network.AWS.Config.Types.AggregateConformancePackComplianceCount

-- | The number of conformance packs that are compliant and noncompliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceCount</a> smart
--   constructor.
data AggregateConformancePackComplianceCount
AggregateConformancePackComplianceCount' :: Maybe Int -> Maybe Int -> AggregateConformancePackComplianceCount

-- | Number of compliant conformance packs.
[$sel:compliantConformancePackCount:AggregateConformancePackComplianceCount'] :: AggregateConformancePackComplianceCount -> Maybe Int

-- | Number of noncompliant conformance packs.
[$sel:nonCompliantConformancePackCount:AggregateConformancePackComplianceCount'] :: AggregateConformancePackComplianceCount -> Maybe Int

-- | Create a value of <a>AggregateConformancePackComplianceCount</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:compliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_compliantConformancePackCount</a>
--   - Number of compliant conformance packs.
--   
--   
--   <a>$sel:nonCompliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_nonCompliantConformancePackCount</a>
--   - Number of noncompliant conformance packs.
newAggregateConformancePackComplianceCount :: AggregateConformancePackComplianceCount

-- | Number of compliant conformance packs.
aggregateConformancePackComplianceCount_compliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)

-- | Number of noncompliant conformance packs.
aggregateConformancePackComplianceCount_nonCompliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackComplianceCount.AggregateConformancePackComplianceCount


module Network.AWS.Config.Types.AggregateConformancePackComplianceSummary

-- | Provides a summary of compliance based on either account ID or region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummary</a> smart
--   constructor.
data AggregateConformancePackComplianceSummary
AggregateConformancePackComplianceSummary' :: Maybe Text -> Maybe AggregateConformancePackComplianceCount -> AggregateConformancePackComplianceSummary

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
[$sel:groupName:AggregateConformancePackComplianceSummary'] :: AggregateConformancePackComplianceSummary -> Maybe Text

-- | Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
[$sel:complianceSummary:AggregateConformancePackComplianceSummary'] :: AggregateConformancePackComplianceSummary -> Maybe AggregateConformancePackComplianceCount

-- | Create a value of <a>AggregateConformancePackComplianceSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_groupName</a> - Groups
--   the result based on Amazon Web Services account ID or Amazon Web
--   Services Region.
--   
--   
--   <a>$sel:complianceSummary:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_complianceSummary</a> -
--   Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
newAggregateConformancePackComplianceSummary :: AggregateConformancePackComplianceSummary

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
aggregateConformancePackComplianceSummary_groupName :: Lens' AggregateConformancePackComplianceSummary (Maybe Text)

-- | Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
aggregateConformancePackComplianceSummary_complianceSummary :: Lens' AggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceCount)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackComplianceSummary.AggregateConformancePackComplianceSummary


module Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters

-- | Filters the results based on account ID and region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummaryFilters</a>
--   smart constructor.
data AggregateConformancePackComplianceSummaryFilters
AggregateConformancePackComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> AggregateConformancePackComplianceSummaryFilters

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateConformancePackComplianceSummaryFilters'] :: AggregateConformancePackComplianceSummaryFilters -> Maybe Text

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateConformancePackComplianceSummaryFilters'] :: AggregateConformancePackComplianceSummaryFilters -> Maybe Text

-- | Create a value of
--   <a>AggregateConformancePackComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_accountId</a> -
--   The 12-digit Amazon Web Services account ID of the source account.
--   
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_awsRegion</a> -
--   The source Amazon Web Services Region from where the data is
--   aggregated.
newAggregateConformancePackComplianceSummaryFilters :: AggregateConformancePackComplianceSummaryFilters

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceSummaryFilters_accountId :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceSummaryFilters_awsRegion :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryFilters.AggregateConformancePackComplianceSummaryFilters


module Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey
newtype AggregateConformancePackComplianceSummaryGroupKey
AggregateConformancePackComplianceSummaryGroupKey' :: Text -> AggregateConformancePackComplianceSummaryGroupKey
[fromAggregateConformancePackComplianceSummaryGroupKey] :: AggregateConformancePackComplianceSummaryGroupKey -> Text
pattern AggregateConformancePackComplianceSummaryGroupKey_ACCOUNT_ID :: AggregateConformancePackComplianceSummaryGroupKey
pattern AggregateConformancePackComplianceSummaryGroupKey_AWS_REGION :: AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance GHC.Classes.Ord Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackComplianceSummaryGroupKey.AggregateConformancePackComplianceSummaryGroupKey


module Network.AWS.Config.Types.AggregatedSourceStatusType
newtype AggregatedSourceStatusType
AggregatedSourceStatusType' :: Text -> AggregatedSourceStatusType
[fromAggregatedSourceStatusType] :: AggregatedSourceStatusType -> Text
pattern AggregatedSourceStatusType_FAILED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_OUTDATED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_SUCCEEDED :: AggregatedSourceStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance GHC.Classes.Ord Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance GHC.Read.Read Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType
instance GHC.Show.Show Network.AWS.Config.Types.AggregatedSourceStatusType.AggregatedSourceStatusType


module Network.AWS.Config.Types.AggregatedSourceType
newtype AggregatedSourceType
AggregatedSourceType' :: Text -> AggregatedSourceType
[fromAggregatedSourceType] :: AggregatedSourceType -> Text
pattern AggregatedSourceType_ACCOUNT :: AggregatedSourceType
pattern AggregatedSourceType_ORGANIZATION :: AggregatedSourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance GHC.Classes.Ord Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance GHC.Read.Read Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType
instance GHC.Show.Show Network.AWS.Config.Types.AggregatedSourceType.AggregatedSourceType


module Network.AWS.Config.Types.AggregatedSourceStatus

-- | The current sync status between the source and the aggregator account.
--   
--   <i>See:</i> <a>newAggregatedSourceStatus</a> smart constructor.
data AggregatedSourceStatus
AggregatedSourceStatus' :: Maybe Text -> Maybe AggregatedSourceStatusType -> Maybe AggregatedSourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> AggregatedSourceStatus

-- | The error code that Config returned when the source account
--   aggregation last failed.
[$sel:lastErrorCode:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | Filters the last updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
[$sel:lastUpdateStatus:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe AggregatedSourceStatusType

-- | The source account or an organization.
[$sel:sourceType:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe AggregatedSourceType

-- | The source account ID or an organization.
[$sel:sourceId:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The message indicating that the source account aggregation failed due
--   to an error.
[$sel:lastErrorMessage:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The region authorized to collect aggregated data.
[$sel:awsRegion:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The time of the last update.
[$sel:lastUpdateTime:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe POSIX

-- | Create a value of <a>AggregatedSourceStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorCode</a> - The error code that
--   Config returned when the source account aggregation last failed.
--   
--   <a>$sel:lastUpdateStatus:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateStatus</a> - Filters the last
--   updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
--   
--   <a>$sel:sourceType:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceType</a> - The source account or an
--   organization.
--   
--   <a>$sel:sourceId:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceId</a> - The source account ID or an
--   organization.
--   
--   <a>$sel:lastErrorMessage:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorMessage</a> - The message
--   indicating that the source account aggregation failed due to an error.
--   
--   <a>$sel:awsRegion:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_awsRegion</a> - The region authorized to
--   collect aggregated data.
--   
--   <a>$sel:lastUpdateTime:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateTime</a> - The time of the last
--   update.
newAggregatedSourceStatus :: AggregatedSourceStatus

-- | The error code that Config returned when the source account
--   aggregation last failed.
aggregatedSourceStatus_lastErrorCode :: Lens' AggregatedSourceStatus (Maybe Text)

-- | Filters the last updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
aggregatedSourceStatus_lastUpdateStatus :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceStatusType)

-- | The source account or an organization.
aggregatedSourceStatus_sourceType :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceType)

-- | The source account ID or an organization.
aggregatedSourceStatus_sourceId :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The message indicating that the source account aggregation failed due
--   to an error.
aggregatedSourceStatus_lastErrorMessage :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The region authorized to collect aggregated data.
aggregatedSourceStatus_awsRegion :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The time of the last update.
aggregatedSourceStatus_lastUpdateTime :: Lens' AggregatedSourceStatus (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance GHC.Show.Show Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance GHC.Read.Read Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregatedSourceStatus.AggregatedSourceStatus


module Network.AWS.Config.Types.AggregationAuthorization

-- | An object that represents the authorizations granted to aggregator
--   accounts and regions.
--   
--   <i>See:</i> <a>newAggregationAuthorization</a> smart constructor.
data AggregationAuthorization
AggregationAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AggregationAuthorization

-- | The time stamp when the aggregation authorization was created.
[$sel:creationTime:AggregationAuthorization'] :: AggregationAuthorization -> Maybe POSIX

-- | The region authorized to collect aggregated data.
[$sel:authorizedAwsRegion:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | The Amazon Resource Name (ARN) of the aggregation object.
[$sel:aggregationAuthorizationArn:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | The 12-digit account ID of the account authorized to aggregate data.
[$sel:authorizedAccountId:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | Create a value of <a>AggregationAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_creationTime</a> - The time stamp when the
--   aggregation authorization was created.
--   
--   <a>$sel:authorizedAwsRegion:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
--   
--   <a>$sel:aggregationAuthorizationArn:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_aggregationAuthorizationArn</a> - The
--   Amazon Resource Name (ARN) of the aggregation object.
--   
--   <a>$sel:authorizedAccountId:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAccountId</a> - The 12-digit
--   account ID of the account authorized to aggregate data.
newAggregationAuthorization :: AggregationAuthorization

-- | The time stamp when the aggregation authorization was created.
aggregationAuthorization_creationTime :: Lens' AggregationAuthorization (Maybe UTCTime)

-- | The region authorized to collect aggregated data.
aggregationAuthorization_authorizedAwsRegion :: Lens' AggregationAuthorization (Maybe Text)

-- | The Amazon Resource Name (ARN) of the aggregation object.
aggregationAuthorization_aggregationAuthorizationArn :: Lens' AggregationAuthorization (Maybe Text)

-- | The 12-digit account ID of the account authorized to aggregate data.
aggregationAuthorization_authorizedAccountId :: Lens' AggregationAuthorization (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance GHC.Show.Show Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance GHC.Read.Read Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregationAuthorization.AggregationAuthorization


module Network.AWS.Config.Types.ChronologicalOrder
newtype ChronologicalOrder
ChronologicalOrder' :: Text -> ChronologicalOrder
[fromChronologicalOrder] :: ChronologicalOrder -> Text
pattern ChronologicalOrder_Forward :: ChronologicalOrder
pattern ChronologicalOrder_Reverse :: ChronologicalOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance GHC.Generics.Generic Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance GHC.Classes.Ord Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance GHC.Classes.Eq Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance GHC.Read.Read Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder
instance GHC.Show.Show Network.AWS.Config.Types.ChronologicalOrder.ChronologicalOrder


module Network.AWS.Config.Types.ComplianceContributorCount

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item, up to a maximum
--   number.
--   
--   <i>See:</i> <a>newComplianceContributorCount</a> smart constructor.
data ComplianceContributorCount
ComplianceContributorCount' :: Maybe Int -> Maybe Bool -> ComplianceContributorCount

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item.
[$sel:cappedCount:ComplianceContributorCount'] :: ComplianceContributorCount -> Maybe Int

-- | Indicates whether the maximum count is reached.
[$sel:capExceeded:ComplianceContributorCount'] :: ComplianceContributorCount -> Maybe Bool

-- | Create a value of <a>ComplianceContributorCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cappedCount:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_cappedCount</a> - The number of Amazon
--   Web Services resources or Config rules responsible for the current
--   compliance of the item.
--   
--   <a>$sel:capExceeded:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_capExceeded</a> - Indicates whether the
--   maximum count is reached.
newComplianceContributorCount :: ComplianceContributorCount

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item.
complianceContributorCount_cappedCount :: Lens' ComplianceContributorCount (Maybe Int)

-- | Indicates whether the maximum count is reached.
complianceContributorCount_capExceeded :: Lens' ComplianceContributorCount (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceContributorCount.ComplianceContributorCount


module Network.AWS.Config.Types.ComplianceSummary

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant and noncompliant.
--   
--   <i>See:</i> <a>newComplianceSummary</a> smart constructor.
data ComplianceSummary
ComplianceSummary' :: Maybe POSIX -> Maybe ComplianceContributorCount -> Maybe ComplianceContributorCount -> ComplianceSummary

-- | The time that Config created the compliance summary.
[$sel:complianceSummaryTimestamp:ComplianceSummary'] :: ComplianceSummary -> Maybe POSIX

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant, up to a maximum of 25 for rules and 100 for resources.
[$sel:compliantResourceCount:ComplianceSummary'] :: ComplianceSummary -> Maybe ComplianceContributorCount

-- | The number of Config rules or Amazon Web Services resources that are
--   noncompliant, up to a maximum of 25 for rules and 100 for resources.
[$sel:nonCompliantResourceCount:ComplianceSummary'] :: ComplianceSummary -> Maybe ComplianceContributorCount

-- | Create a value of <a>ComplianceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceSummaryTimestamp:ComplianceSummary'</a>,
--   <a>complianceSummary_complianceSummaryTimestamp</a> - The time that
--   Config created the compliance summary.
--   
--   <a>$sel:compliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_compliantResourceCount</a> - The number of Config
--   rules or Amazon Web Services resources that are compliant, up to a
--   maximum of 25 for rules and 100 for resources.
--   
--   <a>$sel:nonCompliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_nonCompliantResourceCount</a> - The number of
--   Config rules or Amazon Web Services resources that are noncompliant,
--   up to a maximum of 25 for rules and 100 for resources.
newComplianceSummary :: ComplianceSummary

-- | The time that Config created the compliance summary.
complianceSummary_complianceSummaryTimestamp :: Lens' ComplianceSummary (Maybe UTCTime)

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_compliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)

-- | The number of Config rules or Amazon Web Services resources that are
--   noncompliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_nonCompliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceSummary.ComplianceSummary


module Network.AWS.Config.Types.AggregateComplianceCount

-- | Returns the number of compliant and noncompliant rules for one or more
--   accounts and regions in an aggregator.
--   
--   <i>See:</i> <a>newAggregateComplianceCount</a> smart constructor.
data AggregateComplianceCount
AggregateComplianceCount' :: Maybe Text -> Maybe ComplianceSummary -> AggregateComplianceCount

-- | The 12-digit account ID or region based on the GroupByKey value.
[$sel:groupName:AggregateComplianceCount'] :: AggregateComplianceCount -> Maybe Text

-- | The number of compliant and noncompliant Config rules.
[$sel:complianceSummary:AggregateComplianceCount'] :: AggregateComplianceCount -> Maybe ComplianceSummary

-- | Create a value of <a>AggregateComplianceCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_groupName</a> - The 12-digit account ID or
--   region based on the GroupByKey value.
--   
--   <a>$sel:complianceSummary:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_complianceSummary</a> - The number of
--   compliant and noncompliant Config rules.
newAggregateComplianceCount :: AggregateComplianceCount

-- | The 12-digit account ID or region based on the GroupByKey value.
aggregateComplianceCount_groupName :: Lens' AggregateComplianceCount (Maybe Text)

-- | The number of compliant and noncompliant Config rules.
aggregateComplianceCount_complianceSummary :: Lens' AggregateComplianceCount (Maybe ComplianceSummary)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance GHC.Show.Show Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance GHC.Read.Read Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateComplianceCount.AggregateComplianceCount


module Network.AWS.Config.Types.ComplianceSummaryByResourceType

-- | The number of Amazon Web Services resources of a specific type that
--   are compliant or noncompliant, up to a maximum of 100 for each.
--   
--   <i>See:</i> <a>newComplianceSummaryByResourceType</a> smart
--   constructor.
data ComplianceSummaryByResourceType
ComplianceSummaryByResourceType' :: Maybe Text -> Maybe ComplianceSummary -> ComplianceSummaryByResourceType

-- | The type of Amazon Web Services resource.
[$sel:resourceType:ComplianceSummaryByResourceType'] :: ComplianceSummaryByResourceType -> Maybe Text

-- | The number of Amazon Web Services resources that are compliant or
--   noncompliant, up to a maximum of 100 for each.
[$sel:complianceSummary:ComplianceSummaryByResourceType'] :: ComplianceSummaryByResourceType -> Maybe ComplianceSummary

-- | Create a value of <a>ComplianceSummaryByResourceType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_resourceType</a> - The type of
--   Amazon Web Services resource.
--   
--   <a>$sel:complianceSummary:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_complianceSummary</a> - The number
--   of Amazon Web Services resources that are compliant or noncompliant,
--   up to a maximum of 100 for each.
newComplianceSummaryByResourceType :: ComplianceSummaryByResourceType

-- | The type of Amazon Web Services resource.
complianceSummaryByResourceType_resourceType :: Lens' ComplianceSummaryByResourceType (Maybe Text)

-- | The number of Amazon Web Services resources that are compliant or
--   noncompliant, up to a maximum of 100 for each.
complianceSummaryByResourceType_complianceSummary :: Lens' ComplianceSummaryByResourceType (Maybe ComplianceSummary)
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceSummaryByResourceType.ComplianceSummaryByResourceType


module Network.AWS.Config.Types.ComplianceType
newtype ComplianceType
ComplianceType' :: Text -> ComplianceType
[fromComplianceType] :: ComplianceType -> Text
pattern ComplianceType_COMPLIANT :: ComplianceType
pattern ComplianceType_INSUFFICIENT_DATA :: ComplianceType
pattern ComplianceType_NON_COMPLIANT :: ComplianceType
pattern ComplianceType_NOT_APPLICABLE :: ComplianceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceType.ComplianceType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceType.ComplianceType
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceType.ComplianceType
instance GHC.Classes.Ord Network.AWS.Config.Types.ComplianceType.ComplianceType
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceType.ComplianceType
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceType.ComplianceType
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceType.ComplianceType


module Network.AWS.Config.Types.Compliance

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
--   
--   <i>See:</i> <a>newCompliance</a> smart constructor.
data Compliance
Compliance' :: Maybe ComplianceContributorCount -> Maybe ComplianceType -> Compliance

-- | The number of Amazon Web Services resources or Config rules that cause
--   a result of <tt>NON_COMPLIANT</tt>, up to a maximum number.
[$sel:complianceContributorCount:Compliance'] :: Compliance -> Maybe ComplianceContributorCount

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
[$sel:complianceType:Compliance'] :: Compliance -> Maybe ComplianceType

-- | Create a value of <a>Compliance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceContributorCount:Compliance'</a>,
--   <a>compliance_complianceContributorCount</a> - The number of Amazon
--   Web Services resources or Config rules that cause a result of
--   <tt>NON_COMPLIANT</tt>, up to a maximum number.
--   
--   <a>$sel:complianceType:Compliance'</a>,
--   <a>compliance_complianceType</a> - Indicates whether an Amazon Web
--   Services resource or Config rule is compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
newCompliance :: Compliance

-- | The number of Amazon Web Services resources or Config rules that cause
--   a result of <tt>NON_COMPLIANT</tt>, up to a maximum number.
compliance_complianceContributorCount :: Lens' Compliance (Maybe ComplianceContributorCount)

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
compliance_complianceType :: Lens' Compliance (Maybe ComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.Compliance.Compliance
instance GHC.Show.Show Network.AWS.Config.Types.Compliance.Compliance
instance GHC.Read.Read Network.AWS.Config.Types.Compliance.Compliance
instance GHC.Classes.Eq Network.AWS.Config.Types.Compliance.Compliance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Compliance.Compliance
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Compliance.Compliance
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Compliance.Compliance


module Network.AWS.Config.Types.ComplianceByResource

-- | Indicates whether an Amazon Web Services resource that is evaluated
--   according to one or more Config rules is compliant. A resource is
--   compliant if it complies with all of the rules that evaluate it. A
--   resource is noncompliant if it does not comply with one or more of
--   these rules.
--   
--   <i>See:</i> <a>newComplianceByResource</a> smart constructor.
data ComplianceByResource
ComplianceByResource' :: Maybe Text -> Maybe Text -> Maybe Compliance -> ComplianceByResource

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceId:ComplianceByResource'] :: ComplianceByResource -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceType:ComplianceByResource'] :: ComplianceByResource -> Maybe Text

-- | Indicates whether the Amazon Web Services resource complies with all
--   of the Config rules that evaluated it.
[$sel:compliance:ComplianceByResource'] :: ComplianceByResource -> Maybe Compliance

-- | Create a value of <a>ComplianceByResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:resourceType:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceType</a> - The type of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:compliance:ComplianceByResource'</a>,
--   <a>complianceByResource_compliance</a> - Indicates whether the Amazon
--   Web Services resource complies with all of the Config rules that
--   evaluated it.
newComplianceByResource :: ComplianceByResource

-- | The ID of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceId :: Lens' ComplianceByResource (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceType :: Lens' ComplianceByResource (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with all
--   of the Config rules that evaluated it.
complianceByResource_compliance :: Lens' ComplianceByResource (Maybe Compliance)
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceByResource.ComplianceByResource


module Network.AWS.Config.Types.ComplianceByConfigRule

-- | Indicates whether an Config rule is compliant. A rule is compliant if
--   all of the resources that the rule evaluated comply with it. A rule is
--   noncompliant if any of these resources do not comply.
--   
--   <i>See:</i> <a>newComplianceByConfigRule</a> smart constructor.
data ComplianceByConfigRule
ComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> ComplianceByConfigRule

-- | Indicates whether the Config rule is compliant.
[$sel:compliance:ComplianceByConfigRule'] :: ComplianceByConfigRule -> Maybe Compliance

-- | The name of the Config rule.
[$sel:configRuleName:ComplianceByConfigRule'] :: ComplianceByConfigRule -> Maybe Text

-- | Create a value of <a>ComplianceByConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_compliance</a> - Indicates whether the
--   Config rule is compliant.
--   
--   <a>$sel:configRuleName:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_configRuleName</a> - The name of the Config
--   rule.
newComplianceByConfigRule :: ComplianceByConfigRule

-- | Indicates whether the Config rule is compliant.
complianceByConfigRule_compliance :: Lens' ComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
complianceByConfigRule_configRuleName :: Lens' ComplianceByConfigRule (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance GHC.Show.Show Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance GHC.Read.Read Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ComplianceByConfigRule.ComplianceByConfigRule


module Network.AWS.Config.Types.AggregateComplianceByConfigRule

-- | Indicates whether an Config rule is compliant based on account ID,
--   region, compliance, and rule name.
--   
--   A rule is compliant if all of the resources that the rule evaluated
--   comply with it. It is noncompliant if any of these resources do not
--   comply.
--   
--   <i>See:</i> <a>newAggregateComplianceByConfigRule</a> smart
--   constructor.
data AggregateComplianceByConfigRule
AggregateComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConfigRule

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
[$sel:compliance:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Compliance

-- | The name of the Config rule.
[$sel:configRuleName:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:accountId:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | The source region from where the data is aggregated.
[$sel:awsRegion:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | Create a value of <a>AggregateComplianceByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_compliance</a> - Indicates whether
--   an Amazon Web Services resource or Config rule is compliant and
--   provides the number of contributors that affect the compliance.
--   
--   <a>$sel:configRuleName:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_configRuleName</a> - The name of
--   the Config rule.
--   
--   <a>$sel:accountId:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_awsRegion</a> - The source region
--   from where the data is aggregated.
newAggregateComplianceByConfigRule :: AggregateComplianceByConfigRule

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
aggregateComplianceByConfigRule_compliance :: Lens' AggregateComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
aggregateComplianceByConfigRule_configRuleName :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateComplianceByConfigRule_accountId :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The source region from where the data is aggregated.
aggregateComplianceByConfigRule_awsRegion :: Lens' AggregateComplianceByConfigRule (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance GHC.Show.Show Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance GHC.Read.Read Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateComplianceByConfigRule.AggregateComplianceByConfigRule


module Network.AWS.Config.Types.ConfigRuleComplianceFilters

-- | Filters the compliance results based on account ID, region, compliance
--   type, and rule name.
--   
--   <i>See:</i> <a>newConfigRuleComplianceFilters</a> smart constructor.
data ConfigRuleComplianceFilters
ConfigRuleComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> ConfigRuleComplianceFilters

-- | The name of the Config rule.
[$sel:configRuleName:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:accountId:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | The rule compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
[$sel:complianceType:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe ComplianceType

-- | The source region where the data is aggregated.
[$sel:awsRegion:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | Create a value of <a>ConfigRuleComplianceFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:accountId:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_complianceType</a> - The rule
--   compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_awsRegion</a> - The source region where
--   the data is aggregated.
newConfigRuleComplianceFilters :: ConfigRuleComplianceFilters

-- | The name of the Config rule.
configRuleComplianceFilters_configRuleName :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The 12-digit account ID of the source account.
configRuleComplianceFilters_accountId :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The rule compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
configRuleComplianceFilters_complianceType :: Lens' ConfigRuleComplianceFilters (Maybe ComplianceType)

-- | The source region where the data is aggregated.
configRuleComplianceFilters_awsRegion :: Lens' ConfigRuleComplianceFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigRuleComplianceFilters.ConfigRuleComplianceFilters


module Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters

-- | Filters the results based on the account IDs and regions.
--   
--   <i>See:</i> <a>newConfigRuleComplianceSummaryFilters</a> smart
--   constructor.
data ConfigRuleComplianceSummaryFilters
ConfigRuleComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> ConfigRuleComplianceSummaryFilters

-- | The 12-digit account ID of the source account.
[$sel:accountId:ConfigRuleComplianceSummaryFilters'] :: ConfigRuleComplianceSummaryFilters -> Maybe Text

-- | The source region where the data is aggregated.
[$sel:awsRegion:ConfigRuleComplianceSummaryFilters'] :: ConfigRuleComplianceSummaryFilters -> Maybe Text

-- | Create a value of <a>ConfigRuleComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_awsRegion</a> - The source
--   region where the data is aggregated.
newConfigRuleComplianceSummaryFilters :: ConfigRuleComplianceSummaryFilters

-- | The 12-digit account ID of the source account.
configRuleComplianceSummaryFilters_accountId :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)

-- | The source region where the data is aggregated.
configRuleComplianceSummaryFilters_awsRegion :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigRuleComplianceSummaryFilters.ConfigRuleComplianceSummaryFilters


module Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey
newtype ConfigRuleComplianceSummaryGroupKey
ConfigRuleComplianceSummaryGroupKey' :: Text -> ConfigRuleComplianceSummaryGroupKey
[fromConfigRuleComplianceSummaryGroupKey] :: ConfigRuleComplianceSummaryGroupKey -> Text
pattern ConfigRuleComplianceSummaryGroupKey_ACCOUNT_ID :: ConfigRuleComplianceSummaryGroupKey
pattern ConfigRuleComplianceSummaryGroupKey_AWS_REGION :: ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance GHC.Classes.Ord Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRuleComplianceSummaryGroupKey.ConfigRuleComplianceSummaryGroupKey


module Network.AWS.Config.Types.ConfigRuleEvaluationStatus

-- | Status information for your Config managed rules. The status includes
--   information such as the last time the rule ran, the last time it
--   failed, and the related error for the last failure.
--   
--   This action does not return status information about custom Config
--   rules.
--   
--   <i>See:</i> <a>newConfigRuleEvaluationStatus</a> smart constructor.
data ConfigRuleEvaluationStatus
ConfigRuleEvaluationStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe POSIX -> Maybe Text -> ConfigRuleEvaluationStatus

-- | The error code that Config returned when the rule last failed.
[$sel:lastErrorCode:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The time that Config last failed to evaluate your Amazon Web Services
--   resources against the rule.
[$sel:lastFailedEvaluationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that you first activated the Config rule.
[$sel:firstActivatedTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that Config last successfully evaluated your Amazon Web
--   Services resources against the rule.
[$sel:lastSuccessfulEvaluationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that you last turned off the Config rule.
[$sel:lastDeactivatedTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The name of the Config rule.
[$sel:configRuleName:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The error message that Config returned when the rule last failed.
[$sel:lastErrorMessage:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The ID of the Config rule.
[$sel:configRuleId:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The time that Config last failed to invoke the Config rule to evaluate
--   your Amazon Web Services resources.
[$sel:lastFailedInvocationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | Indicates whether Config has evaluated your resources against the rule
--   at least once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
[$sel:firstEvaluationStarted:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Bool

-- | The time that Config last successfully invoked the Config rule to
--   evaluate your Amazon Web Services resources.
[$sel:lastSuccessfulInvocationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the Config rule.
[$sel:configRuleArn:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | Create a value of <a>ConfigRuleEvaluationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorCode</a> - The error code that
--   Config returned when the rule last failed.
--   
--   <a>$sel:lastFailedEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedEvaluationTime</a> - The time
--   that Config last failed to evaluate your Amazon Web Services resources
--   against the rule.
--   
--   <a>$sel:firstActivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstActivatedTime</a> - The time that
--   you first activated the Config rule.
--   
--   <a>$sel:lastSuccessfulEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulEvaluationTime</a> - The
--   time that Config last successfully evaluated your Amazon Web Services
--   resources against the rule.
--   
--   <a>$sel:lastDeactivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastDeactivatedTime</a> - The time that
--   you last turned off the Config rule.
--   
--   <a>$sel:configRuleName:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:lastErrorMessage:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorMessage</a> - The error message
--   that Config returned when the rule last failed.
--   
--   <a>$sel:configRuleId:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleId</a> - The ID of the Config
--   rule.
--   
--   <a>$sel:lastFailedInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedInvocationTime</a> - The time
--   that Config last failed to invoke the Config rule to evaluate your
--   Amazon Web Services resources.
--   
--   <a>$sel:firstEvaluationStarted:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstEvaluationStarted</a> - Indicates
--   whether Config has evaluated your resources against the rule at least
--   once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
--   
--   <a>$sel:lastSuccessfulInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulInvocationTime</a> - The
--   time that Config last successfully invoked the Config rule to evaluate
--   your Amazon Web Services resources.
--   
--   <a>$sel:configRuleArn:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleArn</a> - The Amazon Resource
--   Name (ARN) of the Config rule.
newConfigRuleEvaluationStatus :: ConfigRuleEvaluationStatus

-- | The error code that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorCode :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to evaluate your Amazon Web Services
--   resources against the rule.
configRuleEvaluationStatus_lastFailedEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you first activated the Config rule.
configRuleEvaluationStatus_firstActivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that Config last successfully evaluated your Amazon Web
--   Services resources against the rule.
configRuleEvaluationStatus_lastSuccessfulEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you last turned off the Config rule.
configRuleEvaluationStatus_lastDeactivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The name of the Config rule.
configRuleEvaluationStatus_configRuleName :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The error message that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorMessage :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The ID of the Config rule.
configRuleEvaluationStatus_configRuleId :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to invoke the Config rule to evaluate
--   your Amazon Web Services resources.
configRuleEvaluationStatus_lastFailedInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | Indicates whether Config has evaluated your resources against the rule
--   at least once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
configRuleEvaluationStatus_firstEvaluationStarted :: Lens' ConfigRuleEvaluationStatus (Maybe Bool)

-- | The time that Config last successfully invoked the Config rule to
--   evaluate your Amazon Web Services resources.
configRuleEvaluationStatus_lastSuccessfulInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRuleEvaluationStatus_configRuleArn :: Lens' ConfigRuleEvaluationStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRuleEvaluationStatus.ConfigRuleEvaluationStatus


module Network.AWS.Config.Types.ConfigRuleState
newtype ConfigRuleState
ConfigRuleState' :: Text -> ConfigRuleState
[fromConfigRuleState] :: ConfigRuleState -> Text
pattern ConfigRuleState_ACTIVE :: ConfigRuleState
pattern ConfigRuleState_DELETING :: ConfigRuleState
pattern ConfigRuleState_DELETING_RESULTS :: ConfigRuleState
pattern ConfigRuleState_EVALUATING :: ConfigRuleState
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance GHC.Classes.Ord Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRuleState.ConfigRuleState


module Network.AWS.Config.Types.ConfigurationItemStatus
newtype ConfigurationItemStatus
ConfigurationItemStatus' :: Text -> ConfigurationItemStatus
[fromConfigurationItemStatus] :: ConfigurationItemStatus -> Text
pattern ConfigurationItemStatus_OK :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeleted :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeletedNotRecorded :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDiscovered :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceNotRecorded :: ConfigurationItemStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance GHC.Read.Read Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus
instance GHC.Show.Show Network.AWS.Config.Types.ConfigurationItemStatus.ConfigurationItemStatus


module Network.AWS.Config.Types.ConformancePackComplianceType
newtype ConformancePackComplianceType
ConformancePackComplianceType' :: Text -> ConformancePackComplianceType
[fromConformancePackComplianceType] :: ConformancePackComplianceType -> Text
pattern ConformancePackComplianceType_COMPLIANT :: ConformancePackComplianceType
pattern ConformancePackComplianceType_INSUFFICIENT_DATA :: ConformancePackComplianceType
pattern ConformancePackComplianceType_NON_COMPLIANT :: ConformancePackComplianceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance GHC.Classes.Ord Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackComplianceType.ConformancePackComplianceType


module Network.AWS.Config.Types.ConformancePackComplianceSummary

-- | Summary includes the name and status of the conformance pack.
--   
--   <i>See:</i> <a>newConformancePackComplianceSummary</a> smart
--   constructor.
data ConformancePackComplianceSummary
ConformancePackComplianceSummary' :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | The name of the conformance pack name.
[$sel:conformancePackName:ConformancePackComplianceSummary'] :: ConformancePackComplianceSummary -> Text

-- | The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
[$sel:conformancePackComplianceStatus:ConformancePackComplianceSummary'] :: ConformancePackComplianceSummary -> ConformancePackComplianceType

-- | Create a value of <a>ConformancePackComplianceSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackName:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackName</a> - The name
--   of the conformance pack name.
--   
--   
--   <a>$sel:conformancePackComplianceStatus:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackComplianceStatus</a>
--   - The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackComplianceSummary :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | The name of the conformance pack name.
conformancePackComplianceSummary_conformancePackName :: Lens' ConformancePackComplianceSummary Text

-- | The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackComplianceSummary_conformancePackComplianceStatus :: Lens' ConformancePackComplianceSummary ConformancePackComplianceType
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackComplianceSummary.ConformancePackComplianceSummary


module Network.AWS.Config.Types.ConformancePackComplianceFilters

-- | Filters the conformance pack by compliance types and Config rule
--   names.
--   
--   <i>See:</i> <a>newConformancePackComplianceFilters</a> smart
--   constructor.
data ConformancePackComplianceFilters
ConformancePackComplianceFilters' :: Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackComplianceFilters

-- | Filters the results by Config rule names.
[$sel:configRuleNames:ConformancePackComplianceFilters'] :: ConformancePackComplianceFilters -> Maybe [Text]

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackComplianceFilters'] :: ConformancePackComplianceFilters -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackComplianceFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackComplianceFilters :: ConformancePackComplianceFilters

-- | Filters the results by Config rule names.
conformancePackComplianceFilters_configRuleNames :: Lens' ConformancePackComplianceFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackComplianceFilters_complianceType :: Lens' ConformancePackComplianceFilters (Maybe ConformancePackComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConformancePackComplianceFilters.ConformancePackComplianceFilters


module Network.AWS.Config.Types.AggregateConformancePackComplianceFilters

-- | Filters the conformance packs based on an account ID, region,
--   compliance type, and the name of the conformance pack.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceFilters</a> smart
--   constructor.
data AggregateConformancePackComplianceFilters
AggregateConformancePackComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ConformancePackComplianceType -> Maybe Text -> AggregateConformancePackComplianceFilters

-- | The name of the conformance pack.
[$sel:conformancePackName:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | The compliance status of the conformance pack.
[$sel:complianceType:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe ConformancePackComplianceType

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | Create a value of <a>AggregateConformancePackComplianceFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackName:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_conformancePackName</a> -
--   The name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_accountId</a> - The
--   12-digit Amazon Web Services account ID of the source account.
--   
--   <a>$sel:complianceType:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_complianceType</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_awsRegion</a> - The
--   source Amazon Web Services Region from where the data is aggregated.
newAggregateConformancePackComplianceFilters :: AggregateConformancePackComplianceFilters

-- | The name of the conformance pack.
aggregateConformancePackComplianceFilters_conformancePackName :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceFilters_accountId :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The compliance status of the conformance pack.
aggregateConformancePackComplianceFilters_complianceType :: Lens' AggregateConformancePackComplianceFilters (Maybe ConformancePackComplianceType)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceFilters_awsRegion :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregateConformancePackComplianceFilters.AggregateConformancePackComplianceFilters


module Network.AWS.Config.Types.AggregateConformancePackCompliance

-- | Provides the number of compliant and noncompliant rules within a
--   conformance pack. Also provides the compliance status of the
--   conformance pack and the total rule count which includes compliant
--   rules, noncompliant rules, and rules that cannot be evaluated due to
--   insufficient data.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackCompliance</a> smart
--   constructor.
data AggregateConformancePackCompliance
AggregateConformancePackCompliance' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe ConformancePackComplianceType -> AggregateConformancePackCompliance

-- | Total number of compliant rules, noncompliant rules, and the rules
--   that do not have any applicable resources to evaluate upon resulting
--   in insufficient data.
[$sel:totalRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The number of compliant Config Rules.
[$sel:compliantRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The number of noncompliant Config Rules.
[$sel:nonCompliantRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The compliance status of the conformance pack.
[$sel:complianceType:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe ConformancePackComplianceType

-- | Create a value of <a>AggregateConformancePackCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_totalRuleCount</a> - Total
--   number of compliant rules, noncompliant rules, and the rules that do
--   not have any applicable resources to evaluate upon resulting in
--   insufficient data.
--   
--   <a>$sel:compliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_compliantRuleCount</a> - The
--   number of compliant Config Rules.
--   
--   <a>$sel:nonCompliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_nonCompliantRuleCount</a> - The
--   number of noncompliant Config Rules.
--   
--   <a>$sel:complianceType:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_complianceType</a> - The
--   compliance status of the conformance pack.
newAggregateConformancePackCompliance :: AggregateConformancePackCompliance

-- | Total number of compliant rules, noncompliant rules, and the rules
--   that do not have any applicable resources to evaluate upon resulting
--   in insufficient data.
aggregateConformancePackCompliance_totalRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of compliant Config Rules.
aggregateConformancePackCompliance_compliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of noncompliant Config Rules.
aggregateConformancePackCompliance_nonCompliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The compliance status of the conformance pack.
aggregateConformancePackCompliance_complianceType :: Lens' AggregateConformancePackCompliance (Maybe ConformancePackComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance GHC.Show.Show Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance GHC.Read.Read Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateConformancePackCompliance.AggregateConformancePackCompliance


module Network.AWS.Config.Types.AggregateComplianceByConformancePack

-- | Provides aggregate compliance of the conformance pack. Indicates
--   whether a conformance pack is compliant based on the name of the
--   conformance pack, account ID, and region.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateComplianceByConformancePack</a> smart
--   constructor.
data AggregateComplianceByConformancePack
AggregateComplianceByConformancePack' :: Maybe AggregateConformancePackCompliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConformancePack

-- | The compliance status of the conformance pack.
[$sel:compliance:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe AggregateConformancePackCompliance

-- | The name of the conformance pack.
[$sel:conformancePackName:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | Create a value of <a>AggregateComplianceByConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_compliance</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:conformancePackName:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_conformancePackName</a> - The
--   name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_accountId</a> - The 12-digit
--   Amazon Web Services account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_awsRegion</a> - The source
--   Amazon Web Services Region from where the data is aggregated.
newAggregateComplianceByConformancePack :: AggregateComplianceByConformancePack

-- | The compliance status of the conformance pack.
aggregateComplianceByConformancePack_compliance :: Lens' AggregateComplianceByConformancePack (Maybe AggregateConformancePackCompliance)

-- | The name of the conformance pack.
aggregateComplianceByConformancePack_conformancePackName :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateComplianceByConformancePack_accountId :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateComplianceByConformancePack_awsRegion :: Lens' AggregateComplianceByConformancePack (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance GHC.Show.Show Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance GHC.Read.Read Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateComplianceByConformancePack.AggregateComplianceByConformancePack


module Network.AWS.Config.Types.ConformancePackEvaluationFilters

-- | Filters a conformance pack by Config rule names, compliance types,
--   Amazon Web Services resource types, and resource IDs.
--   
--   <i>See:</i> <a>newConformancePackEvaluationFilters</a> smart
--   constructor.
data ConformancePackEvaluationFilters
ConformancePackEvaluationFilters' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackEvaluationFilters

-- | Filters the results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
[$sel:resourceIds:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe [Text]

-- | Filters the results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
[$sel:resourceType:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe Text

-- | Filters the results by Config rule names.
[$sel:configRuleNames:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe [Text]

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackEvaluationFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceIds</a> - Filters the
--   results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
--   
--   <a>$sel:resourceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceType</a> - Filters the
--   results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:configRuleNames:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackEvaluationFilters :: ConformancePackEvaluationFilters

-- | Filters the results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
conformancePackEvaluationFilters_resourceIds :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
conformancePackEvaluationFilters_resourceType :: Lens' ConformancePackEvaluationFilters (Maybe Text)

-- | Filters the results by Config rule names.
conformancePackEvaluationFilters_configRuleNames :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationFilters_complianceType :: Lens' ConformancePackEvaluationFilters (Maybe ConformancePackComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConformancePackEvaluationFilters.ConformancePackEvaluationFilters


module Network.AWS.Config.Types.ConformancePackInputParameter

-- | Input parameters in the form of key-value pairs for the conformance
--   pack, both of which you define. Keys can have a maximum character
--   length of 255 characters, and values can have a maximum length of 4096
--   characters.
--   
--   <i>See:</i> <a>newConformancePackInputParameter</a> smart constructor.
data ConformancePackInputParameter
ConformancePackInputParameter' :: Text -> Text -> ConformancePackInputParameter

-- | One part of a key-value pair.
[$sel:parameterName:ConformancePackInputParameter'] :: ConformancePackInputParameter -> Text

-- | Another part of the key-value pair.
[$sel:parameterValue:ConformancePackInputParameter'] :: ConformancePackInputParameter -> Text

-- | Create a value of <a>ConformancePackInputParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterName:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterName</a> - One part of a
--   key-value pair.
--   
--   <a>$sel:parameterValue:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterValue</a> - Another part of
--   the key-value pair.
newConformancePackInputParameter :: Text -> Text -> ConformancePackInputParameter

-- | One part of a key-value pair.
conformancePackInputParameter_parameterName :: Lens' ConformancePackInputParameter Text

-- | Another part of the key-value pair.
conformancePackInputParameter_parameterValue :: Lens' ConformancePackInputParameter Text
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConformancePackInputParameter.ConformancePackInputParameter


module Network.AWS.Config.Types.ConformancePackDetail

-- | Returns details of a conformance pack. A conformance pack is a
--   collection of Config rules and remediation actions that can be easily
--   deployed in an account and a region.
--   
--   <i>See:</i> <a>newConformancePackDetail</a> smart constructor.
data ConformancePackDetail
ConformancePackDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [ConformancePackInputParameter] -> Text -> Text -> Text -> ConformancePackDetail

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
[$sel:deliveryS3Bucket:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | Amazon Web Services service that created the conformance pack.
[$sel:createdBy:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | Last time when conformation pack update was requested.
[$sel:lastUpdateRequestedTime:ConformancePackDetail'] :: ConformancePackDetail -> Maybe POSIX

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:ConformancePackDetail'] :: ConformancePackDetail -> Maybe [ConformancePackInputParameter]

-- | Name of the conformance pack.
[$sel:conformancePackName:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | Amazon Resource Name (ARN) of the conformance pack.
[$sel:conformancePackArn:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | ID of the conformance pack.
[$sel:conformancePackId:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | Create a value of <a>ConformancePackDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3Bucket</a> - The name of the Amazon
--   S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3KeyPrefix</a> - The prefix for the
--   Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:createdBy:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_createdBy</a> - Amazon Web Services service
--   that created the conformance pack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_lastUpdateRequestedTime</a> - Last time when
--   conformation pack update was requested.
--   
--   <a>$sel:conformancePackInputParameters:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackInputParameters</a> - A list
--   of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:conformancePackName:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackArn</a> - Amazon Resource Name
--   (ARN) of the conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackId</a> - ID of the conformance
--   pack.
newConformancePackDetail :: Text -> Text -> Text -> ConformancePackDetail

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
conformancePackDetail_deliveryS3Bucket :: Lens' ConformancePackDetail (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
conformancePackDetail_deliveryS3KeyPrefix :: Lens' ConformancePackDetail (Maybe Text)

-- | Amazon Web Services service that created the conformance pack.
conformancePackDetail_createdBy :: Lens' ConformancePackDetail (Maybe Text)

-- | Last time when conformation pack update was requested.
conformancePackDetail_lastUpdateRequestedTime :: Lens' ConformancePackDetail (Maybe UTCTime)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
conformancePackDetail_conformancePackInputParameters :: Lens' ConformancePackDetail (Maybe [ConformancePackInputParameter])

-- | Name of the conformance pack.
conformancePackDetail_conformancePackName :: Lens' ConformancePackDetail Text

-- | Amazon Resource Name (ARN) of the conformance pack.
conformancePackDetail_conformancePackArn :: Lens' ConformancePackDetail Text

-- | ID of the conformance pack.
conformancePackDetail_conformancePackId :: Lens' ConformancePackDetail Text
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackDetail.ConformancePackDetail


module Network.AWS.Config.Types.ConformancePackRuleCompliance

-- | Compliance information of one or more Config rules within a
--   conformance pack. You can filter using Config rule names and
--   compliance types.
--   
--   <i>See:</i> <a>newConformancePackRuleCompliance</a> smart constructor.
data ConformancePackRuleCompliance
ConformancePackRuleCompliance' :: Maybe [Text] -> Maybe Text -> Maybe ConformancePackComplianceType -> ConformancePackRuleCompliance

-- | Controls for the conformance pack. A control is a process to prevent
--   or detect problems while meeting objectives. A control can align with
--   a specific compliance regime or map to internal controls defined by an
--   organization.
[$sel:controls:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe [Text]

-- | Name of the config rule.
[$sel:configRuleName:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe Text

-- | Compliance of the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
[$sel:complianceType:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackRuleCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controls:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_controls</a> - Controls for the
--   conformance pack. A control is a process to prevent or detect problems
--   while meeting objectives. A control can align with a specific
--   compliance regime or map to internal controls defined by an
--   organization.
--   
--   <a>$sel:configRuleName:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_configRuleName</a> - Name of the
--   config rule.
--   
--   <a>$sel:complianceType:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_complianceType</a> - Compliance of
--   the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackRuleCompliance :: ConformancePackRuleCompliance

-- | Controls for the conformance pack. A control is a process to prevent
--   or detect problems while meeting objectives. A control can align with
--   a specific compliance regime or map to internal controls defined by an
--   organization.
conformancePackRuleCompliance_controls :: Lens' ConformancePackRuleCompliance (Maybe [Text])

-- | Name of the config rule.
conformancePackRuleCompliance_configRuleName :: Lens' ConformancePackRuleCompliance (Maybe Text)

-- | Compliance of the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackRuleCompliance_complianceType :: Lens' ConformancePackRuleCompliance (Maybe ConformancePackComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackRuleCompliance.ConformancePackRuleCompliance


module Network.AWS.Config.Types.ConformancePackState
newtype ConformancePackState
ConformancePackState' :: Text -> ConformancePackState
[fromConformancePackState] :: ConformancePackState -> Text
pattern ConformancePackState_CREATE_COMPLETE :: ConformancePackState
pattern ConformancePackState_CREATE_FAILED :: ConformancePackState
pattern ConformancePackState_CREATE_IN_PROGRESS :: ConformancePackState
pattern ConformancePackState_DELETE_FAILED :: ConformancePackState
pattern ConformancePackState_DELETE_IN_PROGRESS :: ConformancePackState
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance GHC.Classes.Ord Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackState.ConformancePackState
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackState.ConformancePackState


module Network.AWS.Config.Types.ConformancePackStatusDetail

-- | Status details of a conformance pack.
--   
--   <i>See:</i> <a>newConformancePackStatusDetail</a> smart constructor.
data ConformancePackStatusDetail
ConformancePackStatusDetail' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ConformancePackState -> Text -> POSIX -> ConformancePackStatusDetail

-- | The reason of conformance pack creation failure.
[$sel:conformancePackStatusReason:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Maybe Text

-- | Last time when conformation pack creation and update was successful.
[$sel:lastUpdateCompletedTime:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Maybe POSIX

-- | Name of the conformance pack.
[$sel:conformancePackName:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | ID of the conformance pack.
[$sel:conformancePackId:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Amazon Resource Name (ARN) of comformance pack.
[$sel:conformancePackArn:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Indicates deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
[$sel:conformancePackState:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> ConformancePackState

-- | Amazon Resource Name (ARN) of CloudFormation stack.
[$sel:stackArn:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Last time when conformation pack creation and update was requested.
[$sel:lastUpdateRequestedTime:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> POSIX

-- | Create a value of <a>ConformancePackStatusDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackStatusReason:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackStatusReason</a> - The
--   reason of conformance pack creation failure.
--   
--   <a>$sel:lastUpdateCompletedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateCompletedTime</a> - Last time
--   when conformation pack creation and update was successful.
--   
--   <a>$sel:conformancePackName:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackId</a> - ID of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackArn</a> - Amazon
--   Resource Name (ARN) of comformance pack.
--   
--   <a>$sel:conformancePackState:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackState</a> - Indicates
--   deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
--   
--   <a>$sel:stackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_stackArn</a> - Amazon Resource Name
--   (ARN) of CloudFormation stack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateRequestedTime</a> - Last time
--   when conformation pack creation and update was requested.
newConformancePackStatusDetail :: Text -> Text -> Text -> ConformancePackState -> Text -> UTCTime -> ConformancePackStatusDetail

-- | The reason of conformance pack creation failure.
conformancePackStatusDetail_conformancePackStatusReason :: Lens' ConformancePackStatusDetail (Maybe Text)

-- | Last time when conformation pack creation and update was successful.
conformancePackStatusDetail_lastUpdateCompletedTime :: Lens' ConformancePackStatusDetail (Maybe UTCTime)

-- | Name of the conformance pack.
conformancePackStatusDetail_conformancePackName :: Lens' ConformancePackStatusDetail Text

-- | ID of the conformance pack.
conformancePackStatusDetail_conformancePackId :: Lens' ConformancePackStatusDetail Text

-- | Amazon Resource Name (ARN) of comformance pack.
conformancePackStatusDetail_conformancePackArn :: Lens' ConformancePackStatusDetail Text

-- | Indicates deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
conformancePackStatusDetail_conformancePackState :: Lens' ConformancePackStatusDetail ConformancePackState

-- | Amazon Resource Name (ARN) of CloudFormation stack.
conformancePackStatusDetail_stackArn :: Lens' ConformancePackStatusDetail Text

-- | Last time when conformation pack creation and update was requested.
conformancePackStatusDetail_lastUpdateRequestedTime :: Lens' ConformancePackStatusDetail UTCTime
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackStatusDetail.ConformancePackStatusDetail


module Network.AWS.Config.Types.DeliveryStatus
newtype DeliveryStatus
DeliveryStatus' :: Text -> DeliveryStatus
[fromDeliveryStatus] :: DeliveryStatus -> Text
pattern DeliveryStatus_Failure :: DeliveryStatus
pattern DeliveryStatus_Not_Applicable :: DeliveryStatus
pattern DeliveryStatus_Success :: DeliveryStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance GHC.Read.Read Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus
instance GHC.Show.Show Network.AWS.Config.Types.DeliveryStatus.DeliveryStatus


module Network.AWS.Config.Types.ConfigStreamDeliveryInfo

-- | A list that contains the status of the delivery of the configuration
--   stream notification to the Amazon SNS topic.
--   
--   <i>See:</i> <a>newConfigStreamDeliveryInfo</a> smart constructor.
data ConfigStreamDeliveryInfo
ConfigStreamDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> ConfigStreamDeliveryInfo

-- | The error code from the last attempted delivery.
[$sel:lastErrorCode:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe Text

-- | The time from the last status change.
[$sel:lastStatusChangeTime:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe POSIX

-- | Status of the last attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
[$sel:lastStatus:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe DeliveryStatus

-- | The error message from the last attempted delivery.
[$sel:lastErrorMessage:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe Text

-- | Create a value of <a>ConfigStreamDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastStatusChangeTime:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatusChangeTime</a> - The time from
--   the last status change.
--   
--   <a>$sel:lastStatus:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
--   
--   <a>$sel:lastErrorMessage:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
newConfigStreamDeliveryInfo :: ConfigStreamDeliveryInfo

-- | The error code from the last attempted delivery.
configStreamDeliveryInfo_lastErrorCode :: Lens' ConfigStreamDeliveryInfo (Maybe Text)

-- | The time from the last status change.
configStreamDeliveryInfo_lastStatusChangeTime :: Lens' ConfigStreamDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
configStreamDeliveryInfo_lastStatus :: Lens' ConfigStreamDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configStreamDeliveryInfo_lastErrorMessage :: Lens' ConfigStreamDeliveryInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance GHC.Show.Show Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance GHC.Read.Read Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigStreamDeliveryInfo.ConfigStreamDeliveryInfo


module Network.AWS.Config.Types.ConfigExportDeliveryInfo

-- | Provides status of the delivery of the snapshot or the configuration
--   history to the specified Amazon S3 bucket. Also provides the status of
--   notifications about the Amazon S3 delivery to the specified Amazon SNS
--   topic.
--   
--   <i>See:</i> <a>newConfigExportDeliveryInfo</a> smart constructor.
data ConfigExportDeliveryInfo
ConfigExportDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> Maybe POSIX -> ConfigExportDeliveryInfo

-- | The error code from the last attempted delivery.
[$sel:lastErrorCode:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe Text

-- | The time of the last attempted delivery.
[$sel:lastAttemptTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | The time of the last successful delivery.
[$sel:lastSuccessfulTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | Status of the last attempted delivery.
[$sel:lastStatus:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe DeliveryStatus

-- | The error message from the last attempted delivery.
[$sel:lastErrorMessage:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe Text

-- | The time that the next delivery occurs.
[$sel:nextDeliveryTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | Create a value of <a>ConfigExportDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastAttemptTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastAttemptTime</a> - The time of the last
--   attempted delivery.
--   
--   <a>$sel:lastSuccessfulTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastSuccessfulTime</a> - The time of the
--   last successful delivery.
--   
--   <a>$sel:lastStatus:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <a>$sel:lastErrorMessage:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
--   
--   <a>$sel:nextDeliveryTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_nextDeliveryTime</a> - The time that the
--   next delivery occurs.
newConfigExportDeliveryInfo :: ConfigExportDeliveryInfo

-- | The error code from the last attempted delivery.
configExportDeliveryInfo_lastErrorCode :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time of the last attempted delivery.
configExportDeliveryInfo_lastAttemptTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | The time of the last successful delivery.
configExportDeliveryInfo_lastSuccessfulTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
configExportDeliveryInfo_lastStatus :: Lens' ConfigExportDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configExportDeliveryInfo_lastErrorMessage :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time that the next delivery occurs.
configExportDeliveryInfo_nextDeliveryTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance GHC.Show.Show Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance GHC.Read.Read Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigExportDeliveryInfo.ConfigExportDeliveryInfo


module Network.AWS.Config.Types.DeliveryChannelStatus

-- | The status of a specified delivery channel.
--   
--   Valid values: <tt>Success</tt> | <tt>Failure</tt>
--   
--   <i>See:</i> <a>newDeliveryChannelStatus</a> smart constructor.
data DeliveryChannelStatus
DeliveryChannelStatus' :: Maybe ConfigExportDeliveryInfo -> Maybe ConfigStreamDeliveryInfo -> Maybe ConfigExportDeliveryInfo -> Maybe Text -> DeliveryChannelStatus

-- | A list containing the status of the delivery of the snapshot to the
--   specified Amazon S3 bucket.
[$sel:configSnapshotDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigExportDeliveryInfo

-- | A list containing the status of the delivery of the configuration
--   stream notification to the specified Amazon SNS topic.
[$sel:configStreamDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigStreamDeliveryInfo

-- | A list that contains the status of the delivery of the configuration
--   history to the specified Amazon S3 bucket.
[$sel:configHistoryDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigExportDeliveryInfo

-- | The name of the delivery channel.
[$sel:name:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe Text

-- | Create a value of <a>DeliveryChannelStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configSnapshotDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configSnapshotDeliveryInfo</a> - A list
--   containing the status of the delivery of the snapshot to the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:configStreamDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configStreamDeliveryInfo</a> - A list
--   containing the status of the delivery of the configuration stream
--   notification to the specified Amazon SNS topic.
--   
--   <a>$sel:configHistoryDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configHistoryDeliveryInfo</a> - A list that
--   contains the status of the delivery of the configuration history to
--   the specified Amazon S3 bucket.
--   
--   <a>$sel:name:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_name</a> - The name of the delivery channel.
newDeliveryChannelStatus :: DeliveryChannelStatus

-- | A list containing the status of the delivery of the snapshot to the
--   specified Amazon S3 bucket.
deliveryChannelStatus_configSnapshotDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | A list containing the status of the delivery of the configuration
--   stream notification to the specified Amazon SNS topic.
deliveryChannelStatus_configStreamDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigStreamDeliveryInfo)

-- | A list that contains the status of the delivery of the configuration
--   history to the specified Amazon S3 bucket.
deliveryChannelStatus_configHistoryDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | The name of the delivery channel.
deliveryChannelStatus_name :: Lens' DeliveryChannelStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance GHC.Show.Show Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance GHC.Read.Read Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.DeliveryChannelStatus.DeliveryChannelStatus


module Network.AWS.Config.Types.Evaluation

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> Evaluation

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:Evaluation'] :: Evaluation -> Maybe Text

-- | The type of Amazon Web Services resource that was evaluated.
[$sel:complianceResourceType:Evaluation'] :: Evaluation -> Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:complianceResourceId:Evaluation'] :: Evaluation -> Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that it was evaluated against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
[$sel:complianceType:Evaluation'] :: Evaluation -> ComplianceType

-- | The time of the event in Config that triggered the evaluation. For
--   event-based evaluations, the time indicates when Config created the
--   configuration item that triggered the evaluation. For periodic
--   evaluations, the time indicates when Config triggered the evaluation
--   at the frequency that you specified (for example, every 24 hours).
[$sel:orderingTimestamp:Evaluation'] :: Evaluation -> POSIX

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:Evaluation'</a>, <a>evaluation_annotation</a> -
--   Supplementary information about how the evaluation determined the
--   compliance.
--   
--   <a>$sel:complianceResourceType:Evaluation'</a>,
--   <a>evaluation_complianceResourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceResourceId:Evaluation'</a>,
--   <a>evaluation_complianceResourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceType:Evaluation'</a>,
--   <a>evaluation_complianceType</a> - Indicates whether the Amazon Web
--   Services resource complies with the Config rule that it was evaluated
--   against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
--   
--   <a>$sel:orderingTimestamp:Evaluation'</a>,
--   <a>evaluation_orderingTimestamp</a> - The time of the event in Config
--   that triggered the evaluation. For event-based evaluations, the time
--   indicates when Config created the configuration item that triggered
--   the evaluation. For periodic evaluations, the time indicates when
--   Config triggered the evaluation at the frequency that you specified
--   (for example, every 24 hours).
newEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> Evaluation

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluation_annotation :: Lens' Evaluation (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluation_complianceResourceType :: Lens' Evaluation Text

-- | The ID of the Amazon Web Services resource that was evaluated.
evaluation_complianceResourceId :: Lens' Evaluation Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that it was evaluated against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
evaluation_complianceType :: Lens' Evaluation ComplianceType

-- | The time of the event in Config that triggered the evaluation. For
--   event-based evaluations, the time indicates when Config created the
--   configuration item that triggered the evaluation. For periodic
--   evaluations, the time indicates when Config triggered the evaluation
--   at the frequency that you specified (for example, every 24 hours).
evaluation_orderingTimestamp :: Lens' Evaluation UTCTime
instance GHC.Generics.Generic Network.AWS.Config.Types.Evaluation.Evaluation
instance GHC.Show.Show Network.AWS.Config.Types.Evaluation.Evaluation
instance GHC.Read.Read Network.AWS.Config.Types.Evaluation.Evaluation
instance GHC.Classes.Eq Network.AWS.Config.Types.Evaluation.Evaluation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Evaluation.Evaluation
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Evaluation.Evaluation
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Evaluation.Evaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.Evaluation.Evaluation


module Network.AWS.Config.Types.EvaluationResultQualifier

-- | Identifies an Config rule that evaluated an Amazon Web Services
--   resource, and provides the type and ID of the resource that the rule
--   evaluated.
--   
--   <i>See:</i> <a>newEvaluationResultQualifier</a> smart constructor.
data EvaluationResultQualifier
EvaluationResultQualifier' :: Maybe Text -> Maybe Text -> Maybe Text -> EvaluationResultQualifier

-- | The ID of the evaluated Amazon Web Services resource.
[$sel:resourceId:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | The type of Amazon Web Services resource that was evaluated.
[$sel:resourceType:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | The name of the Config rule that was used in the evaluation.
[$sel:configRuleName:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | Create a value of <a>EvaluationResultQualifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceId</a> - The ID of the evaluated
--   Amazon Web Services resource.
--   
--   <a>$sel:resourceType:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:configRuleName:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_configRuleName</a> - The name of the
--   Config rule that was used in the evaluation.
newEvaluationResultQualifier :: EvaluationResultQualifier

-- | The ID of the evaluated Amazon Web Services resource.
evaluationResultQualifier_resourceId :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluationResultQualifier_resourceType :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The name of the Config rule that was used in the evaluation.
evaluationResultQualifier_configRuleName :: Lens' EvaluationResultQualifier (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance GHC.Show.Show Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance GHC.Read.Read Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance GHC.Classes.Eq Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier
instance Control.DeepSeq.NFData Network.AWS.Config.Types.EvaluationResultQualifier.EvaluationResultQualifier


module Network.AWS.Config.Types.EvaluationResultIdentifier

-- | Uniquely identifies an evaluation result.
--   
--   <i>See:</i> <a>newEvaluationResultIdentifier</a> smart constructor.
data EvaluationResultIdentifier
EvaluationResultIdentifier' :: Maybe EvaluationResultQualifier -> Maybe POSIX -> EvaluationResultIdentifier

-- | Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
[$sel:evaluationResultQualifier:EvaluationResultIdentifier'] :: EvaluationResultIdentifier -> Maybe EvaluationResultQualifier

-- | The time of the event that triggered the evaluation of your Amazon Web
--   Services resources. The time can indicate when Config delivered a
--   configuration item change notification, or it can indicate when Config
--   delivered the configuration snapshot, depending on which event
--   triggered the evaluation.
[$sel:orderingTimestamp:EvaluationResultIdentifier'] :: EvaluationResultIdentifier -> Maybe POSIX

-- | Create a value of <a>EvaluationResultIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultQualifier:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_evaluationResultQualifier</a> -
--   Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
--   
--   <a>$sel:orderingTimestamp:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_orderingTimestamp</a> - The time of the
--   event that triggered the evaluation of your Amazon Web Services
--   resources. The time can indicate when Config delivered a configuration
--   item change notification, or it can indicate when Config delivered the
--   configuration snapshot, depending on which event triggered the
--   evaluation.
newEvaluationResultIdentifier :: EvaluationResultIdentifier

-- | Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
evaluationResultIdentifier_evaluationResultQualifier :: Lens' EvaluationResultIdentifier (Maybe EvaluationResultQualifier)

-- | The time of the event that triggered the evaluation of your Amazon Web
--   Services resources. The time can indicate when Config delivered a
--   configuration item change notification, or it can indicate when Config
--   delivered the configuration snapshot, depending on which event
--   triggered the evaluation.
evaluationResultIdentifier_orderingTimestamp :: Lens' EvaluationResultIdentifier (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance GHC.Show.Show Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance GHC.Read.Read Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance GHC.Classes.Eq Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier
instance Control.DeepSeq.NFData Network.AWS.Config.Types.EvaluationResultIdentifier.EvaluationResultIdentifier


module Network.AWS.Config.Types.EvaluationResult

-- | The details of an Config evaluation. Provides the Amazon Web Services
--   resource that was evaluated, the compliance of the resource, related
--   time stamps, and supplementary information.
--   
--   <i>See:</i> <a>newEvaluationResult</a> smart constructor.
data EvaluationResult
EvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> EvaluationResult

-- | Uniquely identifies the evaluation result.
[$sel:evaluationResultIdentifier:EvaluationResult'] :: EvaluationResult -> Maybe EvaluationResultIdentifier

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:EvaluationResult'] :: EvaluationResult -> Maybe Text

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
[$sel:configRuleInvokedTime:EvaluationResult'] :: EvaluationResult -> Maybe POSIX

-- | The time when Config recorded the evaluation result.
[$sel:resultRecordedTime:EvaluationResult'] :: EvaluationResult -> Maybe POSIX

-- | An encrypted token that associates an evaluation with an Config rule.
--   The token identifies the rule, the Amazon Web Services resource being
--   evaluated, and the event that triggered the evaluation.
[$sel:resultToken:EvaluationResult'] :: EvaluationResult -> Maybe Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
[$sel:complianceType:EvaluationResult'] :: EvaluationResult -> Maybe ComplianceType

-- | Create a value of <a>EvaluationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:EvaluationResult'</a>,
--   <a>evaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:EvaluationResult'</a>,
--   <a>evaluationResult_annotation</a> - Supplementary information about
--   how the evaluation determined the compliance.
--   
--   <a>$sel:configRuleInvokedTime:EvaluationResult'</a>,
--   <a>evaluationResult_configRuleInvokedTime</a> - The time when the
--   Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:EvaluationResult'</a>,
--   <a>evaluationResult_resultRecordedTime</a> - The time when Config
--   recorded the evaluation result.
--   
--   <a>$sel:resultToken:EvaluationResult'</a>,
--   <a>evaluationResult_resultToken</a> - An encrypted token that
--   associates an evaluation with an Config rule. The token identifies the
--   rule, the Amazon Web Services resource being evaluated, and the event
--   that triggered the evaluation.
--   
--   <a>$sel:complianceType:EvaluationResult'</a>,
--   <a>evaluationResult_complianceType</a> - Indicates whether the Amazon
--   Web Services resource complies with the Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
newEvaluationResult :: EvaluationResult

-- | Uniquely identifies the evaluation result.
evaluationResult_evaluationResultIdentifier :: Lens' EvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluationResult_annotation :: Lens' EvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
evaluationResult_configRuleInvokedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the evaluation result.
evaluationResult_resultRecordedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | An encrypted token that associates an evaluation with an Config rule.
--   The token identifies the rule, the Amazon Web Services resource being
--   evaluated, and the event that triggered the evaluation.
evaluationResult_resultToken :: Lens' EvaluationResult (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
evaluationResult_complianceType :: Lens' EvaluationResult (Maybe ComplianceType)
instance GHC.Generics.Generic Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance GHC.Show.Show Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance GHC.Read.Read Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance GHC.Classes.Eq Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.EvaluationResult.EvaluationResult
instance Control.DeepSeq.NFData Network.AWS.Config.Types.EvaluationResult.EvaluationResult


module Network.AWS.Config.Types.ConformancePackEvaluationResult

-- | The details of a conformance pack evaluation. Provides Config rule and
--   Amazon Web Services resource type that was evaluated, the compliance
--   of the conformance pack, related time stamps, and supplementary
--   information.
--   
--   <i>See:</i> <a>newConformancePackEvaluationResult</a> smart
--   constructor.
data ConformancePackEvaluationResult
ConformancePackEvaluationResult' :: Maybe Text -> ConformancePackComplianceType -> EvaluationResultIdentifier -> POSIX -> POSIX -> ConformancePackEvaluationResult

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> Maybe Text

-- | The compliance type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> ConformancePackComplianceType
[$sel:evaluationResultIdentifier:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> EvaluationResultIdentifier

-- | The time when Config rule evaluated Amazon Web Services resource.
[$sel:configRuleInvokedTime:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> POSIX

-- | The time when Config recorded the evaluation result.
[$sel:resultRecordedTime:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> POSIX

-- | Create a value of <a>ConformancePackEvaluationResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_annotation</a> - Supplementary
--   information about how the evaluation determined the compliance.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_complianceType</a> - The compliance
--   type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
--   
--   
--   <a>$sel:evaluationResultIdentifier:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_evaluationResultIdentifier</a> -
--   Undocumented member.
--   
--   <a>$sel:configRuleInvokedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_configRuleInvokedTime</a> - The
--   time when Config rule evaluated Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_resultRecordedTime</a> - The time
--   when Config recorded the evaluation result.
newConformancePackEvaluationResult :: ConformancePackComplianceType -> EvaluationResultIdentifier -> UTCTime -> UTCTime -> ConformancePackEvaluationResult

-- | Supplementary information about how the evaluation determined the
--   compliance.
conformancePackEvaluationResult_annotation :: Lens' ConformancePackEvaluationResult (Maybe Text)

-- | The compliance type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationResult_complianceType :: Lens' ConformancePackEvaluationResult ConformancePackComplianceType

-- | Undocumented member.
conformancePackEvaluationResult_evaluationResultIdentifier :: Lens' ConformancePackEvaluationResult EvaluationResultIdentifier

-- | The time when Config rule evaluated Amazon Web Services resource.
conformancePackEvaluationResult_configRuleInvokedTime :: Lens' ConformancePackEvaluationResult UTCTime

-- | The time when Config recorded the evaluation result.
conformancePackEvaluationResult_resultRecordedTime :: Lens' ConformancePackEvaluationResult UTCTime
instance GHC.Generics.Generic Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance GHC.Show.Show Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance GHC.Read.Read Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance GHC.Classes.Eq Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConformancePackEvaluationResult.ConformancePackEvaluationResult


module Network.AWS.Config.Types.AggregateEvaluationResult

-- | The details of an Config evaluation for an account ID and region in an
--   aggregator. Provides the Amazon Web Services resource that was
--   evaluated, the compliance of the resource, related time stamps, and
--   supplementary information.
--   
--   <i>See:</i> <a>newAggregateEvaluationResult</a> smart constructor.
data AggregateEvaluationResult
AggregateEvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> AggregateEvaluationResult

-- | Uniquely identifies the evaluation result.
[$sel:evaluationResultIdentifier:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe EvaluationResultIdentifier

-- | Supplementary information about how the agrregate evaluation
--   determined the compliance.
[$sel:annotation:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
[$sel:configRuleInvokedTime:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe POSIX

-- | The time when Config recorded the aggregate evaluation result.
[$sel:resultRecordedTime:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe POSIX

-- | The 12-digit account ID of the source account.
[$sel:accountId:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | The resource compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
[$sel:complianceType:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe ComplianceType

-- | The source region from where the data is aggregated.
[$sel:awsRegion:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | Create a value of <a>AggregateEvaluationResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_annotation</a> - Supplementary
--   information about how the agrregate evaluation determined the
--   compliance.
--   
--   <a>$sel:configRuleInvokedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_configRuleInvokedTime</a> - The time when
--   the Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_resultRecordedTime</a> - The time when
--   Config recorded the aggregate evaluation result.
--   
--   <a>$sel:accountId:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_complianceType</a> - The resource
--   compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
--   
--   <a>$sel:awsRegion:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_awsRegion</a> - The source region from
--   where the data is aggregated.
newAggregateEvaluationResult :: AggregateEvaluationResult

-- | Uniquely identifies the evaluation result.
aggregateEvaluationResult_evaluationResultIdentifier :: Lens' AggregateEvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the agrregate evaluation
--   determined the compliance.
aggregateEvaluationResult_annotation :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
aggregateEvaluationResult_configRuleInvokedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the aggregate evaluation result.
aggregateEvaluationResult_resultRecordedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The 12-digit account ID of the source account.
aggregateEvaluationResult_accountId :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The resource compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
aggregateEvaluationResult_complianceType :: Lens' AggregateEvaluationResult (Maybe ComplianceType)

-- | The source region from where the data is aggregated.
aggregateEvaluationResult_awsRegion :: Lens' AggregateEvaluationResult (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance GHC.Show.Show Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance GHC.Read.Read Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateEvaluationResult.AggregateEvaluationResult


module Network.AWS.Config.Types.EventSource
newtype EventSource
EventSource' :: Text -> EventSource
[fromEventSource] :: EventSource -> Text
pattern EventSource_Aws_config :: EventSource
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.EventSource.EventSource
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.EventSource.EventSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.EventSource.EventSource
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.EventSource.EventSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.EventSource.EventSource
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.EventSource.EventSource
instance Control.DeepSeq.NFData Network.AWS.Config.Types.EventSource.EventSource
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.EventSource.EventSource
instance GHC.Generics.Generic Network.AWS.Config.Types.EventSource.EventSource
instance GHC.Classes.Ord Network.AWS.Config.Types.EventSource.EventSource
instance GHC.Classes.Eq Network.AWS.Config.Types.EventSource.EventSource
instance GHC.Read.Read Network.AWS.Config.Types.EventSource.EventSource
instance GHC.Show.Show Network.AWS.Config.Types.EventSource.EventSource


module Network.AWS.Config.Types.ExternalEvaluation

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newExternalEvaluation</a> smart constructor.
data ExternalEvaluation
ExternalEvaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> ExternalEvaluation

-- | Supplementary information about the reason of compliance. For example,
--   this task was completed on a specific date.
[$sel:annotation:ExternalEvaluation'] :: ExternalEvaluation -> Maybe Text

-- | The evaluated compliance resource type. Config accepts
--   <tt>AWS::::Account</tt> resource type.
[$sel:complianceResourceType:ExternalEvaluation'] :: ExternalEvaluation -> Text

-- | The evaluated compliance resource ID. Config accepts only Amazon Web
--   Services account ID.
[$sel:complianceResourceId:ExternalEvaluation'] :: ExternalEvaluation -> Text

-- | The compliance of the Amazon Web Services resource. The valid values
--   are <tt>COMPLIANT, NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
[$sel:complianceType:ExternalEvaluation'] :: ExternalEvaluation -> ComplianceType

-- | The time when the compliance was recorded.
[$sel:orderingTimestamp:ExternalEvaluation'] :: ExternalEvaluation -> POSIX

-- | Create a value of <a>ExternalEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ExternalEvaluation'</a>,
--   <a>externalEvaluation_annotation</a> - Supplementary information about
--   the reason of compliance. For example, this task was completed on a
--   specific date.
--   
--   <a>$sel:complianceResourceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceType</a> - The evaluated
--   compliance resource type. Config accepts <tt>AWS::::Account</tt>
--   resource type.
--   
--   <a>$sel:complianceResourceId:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceId</a> - The evaluated
--   compliance resource ID. Config accepts only Amazon Web Services
--   account ID.
--   
--   <a>$sel:complianceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceType</a> - The compliance of the
--   Amazon Web Services resource. The valid values are <tt>COMPLIANT,
--   NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:orderingTimestamp:ExternalEvaluation'</a>,
--   <a>externalEvaluation_orderingTimestamp</a> - The time when the
--   compliance was recorded.
newExternalEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> ExternalEvaluation

-- | Supplementary information about the reason of compliance. For example,
--   this task was completed on a specific date.
externalEvaluation_annotation :: Lens' ExternalEvaluation (Maybe Text)

-- | The evaluated compliance resource type. Config accepts
--   <tt>AWS::::Account</tt> resource type.
externalEvaluation_complianceResourceType :: Lens' ExternalEvaluation Text

-- | The evaluated compliance resource ID. Config accepts only Amazon Web
--   Services account ID.
externalEvaluation_complianceResourceId :: Lens' ExternalEvaluation Text

-- | The compliance of the Amazon Web Services resource. The valid values
--   are <tt>COMPLIANT, NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
externalEvaluation_complianceType :: Lens' ExternalEvaluation ComplianceType

-- | The time when the compliance was recorded.
externalEvaluation_orderingTimestamp :: Lens' ExternalEvaluation UTCTime
instance GHC.Generics.Generic Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance GHC.Show.Show Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance GHC.Read.Read Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance GHC.Classes.Eq Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ExternalEvaluation.ExternalEvaluation


module Network.AWS.Config.Types.FieldInfo

-- | Details about the fields such as name of the field.
--   
--   <i>See:</i> <a>newFieldInfo</a> smart constructor.
data FieldInfo
FieldInfo' :: Maybe Text -> FieldInfo

-- | Name of the field.
[$sel:name:FieldInfo'] :: FieldInfo -> Maybe Text

-- | Create a value of <a>FieldInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:FieldInfo'</a>, <a>fieldInfo_name</a> - Name of the
--   field.
newFieldInfo :: FieldInfo

-- | Name of the field.
fieldInfo_name :: Lens' FieldInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.FieldInfo.FieldInfo
instance GHC.Show.Show Network.AWS.Config.Types.FieldInfo.FieldInfo
instance GHC.Read.Read Network.AWS.Config.Types.FieldInfo.FieldInfo
instance GHC.Classes.Eq Network.AWS.Config.Types.FieldInfo.FieldInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.FieldInfo.FieldInfo
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.FieldInfo.FieldInfo
instance Control.DeepSeq.NFData Network.AWS.Config.Types.FieldInfo.FieldInfo


module Network.AWS.Config.Types.GroupedResourceCount

-- | The count of resources that are grouped by the group name.
--   
--   <i>See:</i> <a>newGroupedResourceCount</a> smart constructor.
data GroupedResourceCount
GroupedResourceCount' :: Text -> Integer -> GroupedResourceCount

-- | The name of the group that can be region, account ID, or resource
--   type. For example, region1, region2 if the region was chosen as
--   <tt>GroupByKey</tt>.
[$sel:groupName:GroupedResourceCount'] :: GroupedResourceCount -> Text

-- | The number of resources in the group.
[$sel:resourceCount:GroupedResourceCount'] :: GroupedResourceCount -> Integer

-- | Create a value of <a>GroupedResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_groupName</a> - The name of the group that can
--   be region, account ID, or resource type. For example, region1, region2
--   if the region was chosen as <tt>GroupByKey</tt>.
--   
--   <a>$sel:resourceCount:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_resourceCount</a> - The number of resources in
--   the group.
newGroupedResourceCount :: Text -> Integer -> GroupedResourceCount

-- | The name of the group that can be region, account ID, or resource
--   type. For example, region1, region2 if the region was chosen as
--   <tt>GroupByKey</tt>.
groupedResourceCount_groupName :: Lens' GroupedResourceCount Text

-- | The number of resources in the group.
groupedResourceCount_resourceCount :: Lens' GroupedResourceCount Integer
instance GHC.Generics.Generic Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance GHC.Show.Show Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance GHC.Read.Read Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance GHC.Classes.Eq Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount
instance Control.DeepSeq.NFData Network.AWS.Config.Types.GroupedResourceCount.GroupedResourceCount


module Network.AWS.Config.Types.MaximumExecutionFrequency
newtype MaximumExecutionFrequency
MaximumExecutionFrequency' :: Text -> MaximumExecutionFrequency
[fromMaximumExecutionFrequency] :: MaximumExecutionFrequency -> Text
pattern MaximumExecutionFrequency_One_Hour :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Six_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Three_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Twelve_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_TwentyFour_Hours :: MaximumExecutionFrequency
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Control.DeepSeq.NFData Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance GHC.Generics.Generic Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance GHC.Classes.Ord Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance GHC.Classes.Eq Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance GHC.Read.Read Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency
instance GHC.Show.Show Network.AWS.Config.Types.MaximumExecutionFrequency.MaximumExecutionFrequency


module Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties

-- | Provides options for how often Config delivers configuration snapshots
--   to the Amazon S3 bucket in your delivery channel.
--   
--   The frequency for a rule that triggers evaluations for your resources
--   when Config delivers the configuration snapshot is set by one of two
--   values, depending on which is less frequent:
--   
--   <ul>
--   <li>The value for the <tt>deliveryFrequency</tt> parameter within the
--   delivery channel configuration, which sets how often Config delivers
--   configuration snapshots. This value also sets how often Config invokes
--   evaluations for Config rules.</li>
--   <li>The value for the <tt>MaximumExecutionFrequency</tt> parameter,
--   which sets the maximum frequency with which Config invokes evaluations
--   for the rule. For more information, see ConfigRule.</li>
--   </ul>
--   
--   If the <tt>deliveryFrequency</tt> value is less frequent than the
--   <tt>MaximumExecutionFrequency</tt> value for a rule, Config invokes
--   the rule only as often as the <tt>deliveryFrequency</tt> value.
--   
--   <ol>
--   <li>For example, you want your rule to run evaluations when Config
--   delivers the configuration snapshot.</li>
--   <li>You specify the <tt>MaximumExecutionFrequency</tt> value for
--   <tt>Six_Hours</tt>.</li>
--   <li>You then specify the delivery channel <tt>deliveryFrequency</tt>
--   value for <tt>TwentyFour_Hours</tt>.</li>
--   <li>Because the value for <tt>deliveryFrequency</tt> is less frequent
--   than <tt>MaximumExecutionFrequency</tt>, Config invokes evaluations
--   for the rule every 24 hours.</li>
--   </ol>
--   
--   You should set the <tt>MaximumExecutionFrequency</tt> value to be at
--   least as frequent as the <tt>deliveryFrequency</tt> value. You can
--   view the <tt>deliveryFrequency</tt> value by using the
--   <tt>DescribeDeliveryChannnels</tt> action.
--   
--   To update the <tt>deliveryFrequency</tt> with which Config delivers
--   your configuration snapshots, use the <tt>PutDeliveryChannel</tt>
--   action.
--   
--   <i>See:</i> <a>newConfigSnapshotDeliveryProperties</a> smart
--   constructor.
data ConfigSnapshotDeliveryProperties
ConfigSnapshotDeliveryProperties' :: Maybe MaximumExecutionFrequency -> ConfigSnapshotDeliveryProperties

-- | The frequency with which Config delivers configuration snapshots.
[$sel:deliveryFrequency:ConfigSnapshotDeliveryProperties'] :: ConfigSnapshotDeliveryProperties -> Maybe MaximumExecutionFrequency

-- | Create a value of <a>ConfigSnapshotDeliveryProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryFrequency:ConfigSnapshotDeliveryProperties'</a>,
--   <a>configSnapshotDeliveryProperties_deliveryFrequency</a> - The
--   frequency with which Config delivers configuration snapshots.
newConfigSnapshotDeliveryProperties :: ConfigSnapshotDeliveryProperties

-- | The frequency with which Config delivers configuration snapshots.
configSnapshotDeliveryProperties_deliveryFrequency :: Lens' ConfigSnapshotDeliveryProperties (Maybe MaximumExecutionFrequency)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance GHC.Show.Show Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance GHC.Read.Read Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigSnapshotDeliveryProperties.ConfigSnapshotDeliveryProperties


module Network.AWS.Config.Types.DeliveryChannel

-- | The channel through which Config delivers notifications and updated
--   configuration states.
--   
--   <i>See:</i> <a>newDeliveryChannel</a> smart constructor.
data DeliveryChannel
DeliveryChannel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigSnapshotDeliveryProperties -> Maybe Text -> DeliveryChannel

-- | The prefix for the specified Amazon S3 bucket.
[$sel:s3KeyPrefix:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
--   sends notifications about configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
[$sel:snsTopicARN:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
[$sel:name:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS )
--   KMS key (KMS key) used to encrypt objects delivered by Config. Must
--   belong to the same Region as the destination S3 bucket.
[$sel:s3KmsKeyArn:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The options for how often Config delivers configuration snapshots to
--   the Amazon S3 bucket.
[$sel:configSnapshotDeliveryProperties:DeliveryChannel'] :: DeliveryChannel -> Maybe ConfigSnapshotDeliveryProperties

-- | The name of the Amazon S3 bucket to which Config delivers
--   configuration snapshots and configuration history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
[$sel:s3BucketName:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | Create a value of <a>DeliveryChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KeyPrefix</a> - The prefix for the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:snsTopicARN:DeliveryChannel'</a>,
--   <a>deliveryChannel_snsTopicARN</a> - The Amazon Resource Name (ARN) of
--   the Amazon SNS topic to which Config sends notifications about
--   configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
--   
--   <a>$sel:name:DeliveryChannel'</a>, <a>deliveryChannel_name</a> - The
--   name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
--   
--   <a>$sel:s3KmsKeyArn:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KmsKeyArn</a> - The Amazon Resource Name (ARN) of
--   the Key Management Service (KMS ) KMS key (KMS key) used to encrypt
--   objects delivered by Config. Must belong to the same Region as the
--   destination S3 bucket.
--   
--   <a>$sel:configSnapshotDeliveryProperties:DeliveryChannel'</a>,
--   <a>deliveryChannel_configSnapshotDeliveryProperties</a> - The options
--   for how often Config delivers configuration snapshots to the Amazon S3
--   bucket.
--   
--   <a>$sel:s3BucketName:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3BucketName</a> - The name of the Amazon S3 bucket
--   to which Config delivers configuration snapshots and configuration
--   history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
newDeliveryChannel :: DeliveryChannel

-- | The prefix for the specified Amazon S3 bucket.
deliveryChannel_s3KeyPrefix :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
--   sends notifications about configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
deliveryChannel_snsTopicARN :: Lens' DeliveryChannel (Maybe Text)

-- | The name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
deliveryChannel_name :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS )
--   KMS key (KMS key) used to encrypt objects delivered by Config. Must
--   belong to the same Region as the destination S3 bucket.
deliveryChannel_s3KmsKeyArn :: Lens' DeliveryChannel (Maybe Text)

-- | The options for how often Config delivers configuration snapshots to
--   the Amazon S3 bucket.
deliveryChannel_configSnapshotDeliveryProperties :: Lens' DeliveryChannel (Maybe ConfigSnapshotDeliveryProperties)

-- | The name of the Amazon S3 bucket to which Config delivers
--   configuration snapshots and configuration history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
deliveryChannel_s3BucketName :: Lens' DeliveryChannel (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance GHC.Show.Show Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance GHC.Read.Read Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance GHC.Classes.Eq Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance Control.DeepSeq.NFData Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.DeliveryChannel.DeliveryChannel


module Network.AWS.Config.Types.MemberAccountRuleStatus
newtype MemberAccountRuleStatus
MemberAccountRuleStatus' :: Text -> MemberAccountRuleStatus
[fromMemberAccountRuleStatus] :: MemberAccountRuleStatus -> Text
pattern MemberAccountRuleStatus_CREATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_SUCCESSFUL :: MemberAccountRuleStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance GHC.Read.Read Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus
instance GHC.Show.Show Network.AWS.Config.Types.MemberAccountRuleStatus.MemberAccountRuleStatus


module Network.AWS.Config.Types.MemberAccountStatus

-- | Organization config rule creation or deletion status in each member
--   account. This includes the name of the rule, the status, error code
--   and error message when the rule creation or deletion failed.
--   
--   <i>See:</i> <a>newMemberAccountStatus</a> smart constructor.
data MemberAccountStatus
MemberAccountStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | An error code that is returned when config rule creation or deletion
--   failed in the member account.
[$sel:errorCode:MemberAccountStatus'] :: MemberAccountStatus -> Maybe Text

-- | An error message indicating that config rule account creation or
--   deletion has failed due to an error in the member account.
[$sel:errorMessage:MemberAccountStatus'] :: MemberAccountStatus -> Maybe Text

-- | The timestamp of the last status update.
[$sel:lastUpdateTime:MemberAccountStatus'] :: MemberAccountStatus -> Maybe POSIX

-- | The 12-digit account ID of a member account.
[$sel:accountId:MemberAccountStatus'] :: MemberAccountStatus -> Text

-- | The name of config rule deployed in the member account.
[$sel:configRuleName:MemberAccountStatus'] :: MemberAccountStatus -> Text

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
[$sel:memberAccountRuleStatus:MemberAccountStatus'] :: MemberAccountStatus -> MemberAccountRuleStatus

-- | Create a value of <a>MemberAccountStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorCode</a> - An error code that is returned
--   when config rule creation or deletion failed in the member account.
--   
--   <a>$sel:errorMessage:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorMessage</a> - An error message indicating
--   that config rule account creation or deletion has failed due to an
--   error in the member account.
--   
--   <a>$sel:lastUpdateTime:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_lastUpdateTime</a> - The timestamp of the last
--   status update.
--   
--   <a>$sel:accountId:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_accountId</a> - The 12-digit account ID of a
--   member account.
--   
--   <a>$sel:configRuleName:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_configRuleName</a> - The name of config rule
--   deployed in the member account.
--   
--   <a>$sel:memberAccountRuleStatus:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
newMemberAccountStatus :: Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | An error code that is returned when config rule creation or deletion
--   failed in the member account.
memberAccountStatus_errorCode :: Lens' MemberAccountStatus (Maybe Text)

-- | An error message indicating that config rule account creation or
--   deletion has failed due to an error in the member account.
memberAccountStatus_errorMessage :: Lens' MemberAccountStatus (Maybe Text)

-- | The timestamp of the last status update.
memberAccountStatus_lastUpdateTime :: Lens' MemberAccountStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
memberAccountStatus_accountId :: Lens' MemberAccountStatus Text

-- | The name of config rule deployed in the member account.
memberAccountStatus_configRuleName :: Lens' MemberAccountStatus Text

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
memberAccountStatus_memberAccountRuleStatus :: Lens' MemberAccountStatus MemberAccountRuleStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance GHC.Show.Show Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance GHC.Read.Read Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.MemberAccountStatus.MemberAccountStatus


module Network.AWS.Config.Types.MessageType
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_ConfigurationItemChangeNotification :: MessageType
pattern MessageType_ConfigurationSnapshotDeliveryCompleted :: MessageType
pattern MessageType_OversizedConfigurationItemChangeNotification :: MessageType
pattern MessageType_ScheduledNotification :: MessageType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.MessageType.MessageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.MessageType.MessageType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.MessageType.MessageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.MessageType.MessageType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.MessageType.MessageType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.MessageType.MessageType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.MessageType.MessageType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.MessageType.MessageType
instance GHC.Generics.Generic Network.AWS.Config.Types.MessageType.MessageType
instance GHC.Classes.Ord Network.AWS.Config.Types.MessageType.MessageType
instance GHC.Classes.Eq Network.AWS.Config.Types.MessageType.MessageType
instance GHC.Read.Read Network.AWS.Config.Types.MessageType.MessageType
instance GHC.Show.Show Network.AWS.Config.Types.MessageType.MessageType


module Network.AWS.Config.Types.OrganizationAggregationSource

-- | This object contains regions to set up the aggregator and an IAM role
--   to retrieve organization details.
--   
--   <i>See:</i> <a>newOrganizationAggregationSource</a> smart constructor.
data OrganizationAggregationSource
OrganizationAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> Text -> OrganizationAggregationSource

-- | The source regions being aggregated.
[$sel:awsRegions:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Maybe (NonEmpty Text)

-- | If true, aggregate existing Config regions and future regions.
[$sel:allAwsRegions:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Maybe Bool

-- | ARN of the IAM role used to retrieve Amazon Web Services Organization
--   details associated with the aggregator account.
[$sel:roleArn:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Text

-- | Create a value of <a>OrganizationAggregationSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_awsRegions</a> - The source regions
--   being aggregated.
--   
--   <a>$sel:allAwsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_allAwsRegions</a> - If true,
--   aggregate existing Config regions and future regions.
--   
--   <a>$sel:roleArn:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_roleArn</a> - ARN of the IAM role
--   used to retrieve Amazon Web Services Organization details associated
--   with the aggregator account.
newOrganizationAggregationSource :: Text -> OrganizationAggregationSource

-- | The source regions being aggregated.
organizationAggregationSource_awsRegions :: Lens' OrganizationAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
organizationAggregationSource_allAwsRegions :: Lens' OrganizationAggregationSource (Maybe Bool)

-- | ARN of the IAM role used to retrieve Amazon Web Services Organization
--   details associated with the aggregator account.
organizationAggregationSource_roleArn :: Lens' OrganizationAggregationSource Text
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationAggregationSource.OrganizationAggregationSource


module Network.AWS.Config.Types.ConfigurationAggregator

-- | The details about the configuration aggregator, including information
--   about source accounts, regions, and metadata of the aggregator.
--   
--   <i>See:</i> <a>newConfigurationAggregator</a> smart constructor.
data ConfigurationAggregator
ConfigurationAggregator' :: Maybe Text -> Maybe POSIX -> Maybe OrganizationAggregationSource -> Maybe POSIX -> Maybe [AccountAggregationSource] -> Maybe Text -> Maybe Text -> ConfigurationAggregator

-- | The Amazon Resource Name (ARN) of the aggregator.
[$sel:configurationAggregatorArn:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | The time stamp when the configuration aggregator was created.
[$sel:creationTime:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe POSIX

-- | Provides an organization and list of regions to be aggregated.
[$sel:organizationAggregationSource:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe OrganizationAggregationSource

-- | The time of the last update.
[$sel:lastUpdatedTime:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe POSIX

-- | Provides a list of source accounts and regions to be aggregated.
[$sel:accountAggregationSources:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe [AccountAggregationSource]

-- | Amazon Web Services service that created the configuration aggregator.
[$sel:createdBy:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | The name of the aggregator.
[$sel:configurationAggregatorName:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | Create a value of <a>ConfigurationAggregator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationAggregatorArn:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorArn</a> - The Amazon
--   Resource Name (ARN) of the aggregator.
--   
--   <a>$sel:creationTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_creationTime</a> - The time stamp when the
--   configuration aggregator was created.
--   
--   <a>$sel:organizationAggregationSource:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_organizationAggregationSource</a> -
--   Provides an organization and list of regions to be aggregated.
--   
--   <a>$sel:lastUpdatedTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_lastUpdatedTime</a> - The time of the last
--   update.
--   
--   <a>$sel:accountAggregationSources:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_accountAggregationSources</a> - Provides a
--   list of source accounts and regions to be aggregated.
--   
--   <a>$sel:createdBy:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_createdBy</a> - Amazon Web Services service
--   that created the configuration aggregator.
--   
--   <a>$sel:configurationAggregatorName:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorName</a> - The name
--   of the aggregator.
newConfigurationAggregator :: ConfigurationAggregator

-- | The Amazon Resource Name (ARN) of the aggregator.
configurationAggregator_configurationAggregatorArn :: Lens' ConfigurationAggregator (Maybe Text)

-- | The time stamp when the configuration aggregator was created.
configurationAggregator_creationTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides an organization and list of regions to be aggregated.
configurationAggregator_organizationAggregationSource :: Lens' ConfigurationAggregator (Maybe OrganizationAggregationSource)

-- | The time of the last update.
configurationAggregator_lastUpdatedTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides a list of source accounts and regions to be aggregated.
configurationAggregator_accountAggregationSources :: Lens' ConfigurationAggregator (Maybe [AccountAggregationSource])

-- | Amazon Web Services service that created the configuration aggregator.
configurationAggregator_createdBy :: Lens' ConfigurationAggregator (Maybe Text)

-- | The name of the aggregator.
configurationAggregator_configurationAggregatorName :: Lens' ConfigurationAggregator (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance GHC.Show.Show Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance GHC.Read.Read Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigurationAggregator.ConfigurationAggregator


module Network.AWS.Config.Types.OrganizationConfigRuleTriggerType
newtype OrganizationConfigRuleTriggerType
OrganizationConfigRuleTriggerType' :: Text -> OrganizationConfigRuleTriggerType
[fromOrganizationConfigRuleTriggerType] :: OrganizationConfigRuleTriggerType -> Text
pattern OrganizationConfigRuleTriggerType_ConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_OversizedConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_ScheduledNotification :: OrganizationConfigRuleTriggerType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance GHC.Classes.Ord Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConfigRuleTriggerType.OrganizationConfigRuleTriggerType


module Network.AWS.Config.Types.OrganizationConformancePack

-- | An organization conformance pack that has information about
--   conformance packs that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConformancePack</a> smart constructor.
data OrganizationConformancePack
OrganizationConformancePack' :: Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe [Text] -> Text -> Text -> POSIX -> OrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
[$sel:deliveryS3Bucket:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe Text

-- | Any folder structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe Text

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe [ConformancePackInputParameter]

-- | A comma-separated list of accounts excluded from organization
--   conformance pack.
[$sel:excludedAccounts:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe [Text]

-- | The name you assign to an organization conformance pack.
[$sel:organizationConformancePackName:OrganizationConformancePack'] :: OrganizationConformancePack -> Text

-- | Amazon Resource Name (ARN) of organization conformance pack.
[$sel:organizationConformancePackArn:OrganizationConformancePack'] :: OrganizationConformancePack -> Text

-- | Last time when organization conformation pack was updated.
[$sel:lastUpdateTime:OrganizationConformancePack'] :: OrganizationConformancePack -> POSIX

-- | Create a value of <a>OrganizationConformancePack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3Bucket</a> - The name of the
--   Amazon S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3KeyPrefix</a> - Any folder
--   structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
--   
--   
--   <a>$sel:conformancePackInputParameters:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_conformancePackInputParameters</a> - A
--   list of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:excludedAccounts:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_excludedAccounts</a> - A
--   comma-separated list of accounts excluded from organization
--   conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackName</a> -
--   The name you assign to an organization conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackArn:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackArn</a> -
--   Amazon Resource Name (ARN) of organization conformance pack.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_lastUpdateTime</a> - Last time when
--   organization conformation pack was updated.
newOrganizationConformancePack :: Text -> Text -> UTCTime -> OrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
organizationConformancePack_deliveryS3Bucket :: Lens' OrganizationConformancePack (Maybe Text)

-- | Any folder structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
organizationConformancePack_deliveryS3KeyPrefix :: Lens' OrganizationConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
organizationConformancePack_conformancePackInputParameters :: Lens' OrganizationConformancePack (Maybe [ConformancePackInputParameter])

-- | A comma-separated list of accounts excluded from organization
--   conformance pack.
organizationConformancePack_excludedAccounts :: Lens' OrganizationConformancePack (Maybe [Text])

-- | The name you assign to an organization conformance pack.
organizationConformancePack_organizationConformancePackName :: Lens' OrganizationConformancePack Text

-- | Amazon Resource Name (ARN) of organization conformance pack.
organizationConformancePack_organizationConformancePackArn :: Lens' OrganizationConformancePack Text

-- | Last time when organization conformation pack was updated.
organizationConformancePack_lastUpdateTime :: Lens' OrganizationConformancePack UTCTime
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConformancePack.OrganizationConformancePack


module Network.AWS.Config.Types.OrganizationCustomRuleMetadata

-- | An object that specifies organization custom rule metadata such as
--   resource type, resource ID of Amazon Web Services resource, Lambda
--   function ARN, and organization trigger types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic.
--   
--   <i>See:</i> <a>newOrganizationCustomRuleMetadata</a> smart
--   constructor.
data OrganizationCustomRuleMetadata
OrganizationCustomRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> [OrganizationConfigRuleTriggerType] -> OrganizationCustomRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
[$sel:inputParameters:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceIdScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:tagValueScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   Your custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe MaximumExecutionFrequency

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:tagKeyScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceTypesScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe [Text]

-- | The description that you provide for organization config rule.
[$sel:description:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The lambda function ARN.
[$sel:lambdaFunctionArn:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
[$sel:organizationConfigRuleTriggerTypes:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> [OrganizationConfigRuleTriggerType]

-- | Create a value of <a>OrganizationCustomRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. Your
--   custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceTypesScope</a> - The type of
--   the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:lambdaFunctionArn:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_lambdaFunctionArn</a> - The lambda
--   function ARN.
--   
--   
--   <a>$sel:organizationConfigRuleTriggerTypes:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
newOrganizationCustomRuleMetadata :: Text -> OrganizationCustomRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationCustomRuleMetadata_inputParameters :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceIdScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationCustomRuleMetadata_tagValueScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   Your custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationCustomRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationCustomRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationCustomRuleMetadata_tagKeyScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceTypesScope :: Lens' OrganizationCustomRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationCustomRuleMetadata_description :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The lambda function ARN.
organizationCustomRuleMetadata_lambdaFunctionArn :: Lens' OrganizationCustomRuleMetadata Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes :: Lens' OrganizationCustomRuleMetadata [OrganizationConfigRuleTriggerType]
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationCustomRuleMetadata.OrganizationCustomRuleMetadata


module Network.AWS.Config.Types.OrganizationManagedRuleMetadata

-- | An object that specifies organization managed rule metadata such as
--   resource type and ID of Amazon Web Services resource along with the
--   rule identifier. It also provides the frequency with which you want
--   Config to run evaluations for the rule if the trigger type is
--   periodic.
--   
--   <i>See:</i> <a>newOrganizationManagedRuleMetadata</a> smart
--   constructor.
data OrganizationManagedRuleMetadata
OrganizationManagedRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> OrganizationManagedRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
[$sel:inputParameters:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceIdScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:tagValueScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe MaximumExecutionFrequency

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:tagKeyScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceTypesScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe [Text]

-- | The description that you provide for organization config rule.
[$sel:description:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | For organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
[$sel:ruleIdentifier:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Text

-- | Create a value of <a>OrganizationManagedRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. You
--   are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceTypesScope</a> - The type
--   of the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:ruleIdentifier:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_ruleIdentifier</a> - For
--   organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
newOrganizationManagedRuleMetadata :: Text -> OrganizationManagedRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationManagedRuleMetadata_inputParameters :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceIdScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationManagedRuleMetadata_tagValueScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationManagedRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationManagedRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationManagedRuleMetadata_tagKeyScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceTypesScope :: Lens' OrganizationManagedRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationManagedRuleMetadata_description :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | For organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
organizationManagedRuleMetadata_ruleIdentifier :: Lens' OrganizationManagedRuleMetadata Text
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationManagedRuleMetadata.OrganizationManagedRuleMetadata


module Network.AWS.Config.Types.OrganizationConfigRule

-- | An organization config rule that has information about config rules
--   that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConfigRule</a> smart constructor.
data OrganizationConfigRule
OrganizationConfigRule' :: Maybe OrganizationManagedRuleMetadata -> Maybe [Text] -> Maybe OrganizationCustomRuleMetadata -> Maybe POSIX -> Text -> Text -> OrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
[$sel:organizationManagedRuleMetadata:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe OrganizationManagedRuleMetadata

-- | A comma-separated list of accounts excluded from organization config
--   rule.
[$sel:excludedAccounts:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe [Text]

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
[$sel:organizationCustomRuleMetadata:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe OrganizationCustomRuleMetadata

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe POSIX

-- | The name that you assign to organization config rule.
[$sel:organizationConfigRuleName:OrganizationConfigRule'] :: OrganizationConfigRule -> Text

-- | Amazon Resource Name (ARN) of organization config rule.
[$sel:organizationConfigRuleArn:OrganizationConfigRule'] :: OrganizationConfigRule -> Text

-- | Create a value of <a>OrganizationConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationManagedRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationManagedRuleMetadata</a> - An
--   <tt>OrganizationManagedRuleMetadata</tt> object.
--   
--   <a>$sel:excludedAccounts:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_excludedAccounts</a> - A comma-separated
--   list of accounts excluded from organization config rule.
--   
--   <a>$sel:organizationCustomRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationCustomRuleMetadata</a> - An
--   <tt>OrganizationCustomRuleMetadata</tt> object.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_lastUpdateTime</a> - The timestamp of the
--   last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleName</a> - The name
--   that you assign to organization config rule.
--   
--   <a>$sel:organizationConfigRuleArn:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleArn</a> - Amazon
--   Resource Name (ARN) of organization config rule.
newOrganizationConfigRule :: Text -> Text -> OrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
organizationConfigRule_organizationManagedRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationManagedRuleMetadata)

-- | A comma-separated list of accounts excluded from organization config
--   rule.
organizationConfigRule_excludedAccounts :: Lens' OrganizationConfigRule (Maybe [Text])

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
organizationConfigRule_organizationCustomRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationCustomRuleMetadata)

-- | The timestamp of the last update.
organizationConfigRule_lastUpdateTime :: Lens' OrganizationConfigRule (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRule_organizationConfigRuleName :: Lens' OrganizationConfigRule Text

-- | Amazon Resource Name (ARN) of organization config rule.
organizationConfigRule_organizationConfigRuleArn :: Lens' OrganizationConfigRule Text
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConfigRule.OrganizationConfigRule


module Network.AWS.Config.Types.OrganizationResourceDetailedStatus
newtype OrganizationResourceDetailedStatus
OrganizationResourceDetailedStatus' :: Text -> OrganizationResourceDetailedStatus
[fromOrganizationResourceDetailedStatus] :: OrganizationResourceDetailedStatus -> Text
pattern OrganizationResourceDetailedStatus_CREATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationResourceDetailedStatus.OrganizationResourceDetailedStatus


module Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus

-- | Organization conformance pack creation or deletion status in each
--   member account. This includes the name of the conformance pack, the
--   status, error code and error message when the conformance pack
--   creation or deletion failed.
--   
--   <i>See:</i> <a>newOrganizationConformancePackDetailedStatus</a> smart
--   constructor.
data OrganizationConformancePackDetailedStatus
OrganizationConformancePackDetailedStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | An error code that is returned when conformance pack creation or
--   deletion failed in the member account.
[$sel:errorCode:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe Text

-- | An error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
[$sel:errorMessage:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe Text

-- | The timestamp of the last status update.
[$sel:lastUpdateTime:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe POSIX

-- | The 12-digit account ID of a member account.
[$sel:accountId:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Text

-- | The name of conformance pack deployed in the member account.
[$sel:conformancePackName:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
[$sel:status:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> OrganizationResourceDetailedStatus

-- | Create a value of <a>OrganizationConformancePackDetailedStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorCode</a> - An error
--   code that is returned when conformance pack creation or deletion
--   failed in the member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorMessage</a> - An
--   error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_lastUpdateTime</a> - The
--   timestamp of the last status update.
--   
--   <a>$sel:accountId:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_accountId</a> - The
--   12-digit account ID of a member account.
--   
--   
--   <a>$sel:conformancePackName:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_conformancePackName</a> -
--   The name of conformance pack deployed in the member account.
--   
--   <a>$sel:status:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
newOrganizationConformancePackDetailedStatus :: Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | An error code that is returned when conformance pack creation or
--   deletion failed in the member account.
organizationConformancePackDetailedStatus_errorCode :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | An error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
organizationConformancePackDetailedStatus_errorMessage :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | The timestamp of the last status update.
organizationConformancePackDetailedStatus_lastUpdateTime :: Lens' OrganizationConformancePackDetailedStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
organizationConformancePackDetailedStatus_accountId :: Lens' OrganizationConformancePackDetailedStatus Text

-- | The name of conformance pack deployed in the member account.
organizationConformancePackDetailedStatus_conformancePackName :: Lens' OrganizationConformancePackDetailedStatus Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationConformancePackDetailedStatus_status :: Lens' OrganizationConformancePackDetailedStatus OrganizationResourceDetailedStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConformancePackDetailedStatus.OrganizationConformancePackDetailedStatus


module Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization conformance pack.
--   
--   <i>See:</i> <a>newOrganizationResourceDetailedStatusFilters</a> smart
--   constructor.
data OrganizationResourceDetailedStatusFilters
OrganizationResourceDetailedStatusFilters' :: Maybe OrganizationResourceDetailedStatus -> Maybe Text -> OrganizationResourceDetailedStatusFilters

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
[$sel:status:OrganizationResourceDetailedStatusFilters'] :: OrganizationResourceDetailedStatusFilters -> Maybe OrganizationResourceDetailedStatus

-- | The 12-digit account ID of the member account within an organization.
[$sel:accountId:OrganizationResourceDetailedStatusFilters'] :: OrganizationResourceDetailedStatusFilters -> Maybe Text

-- | Create a value of <a>OrganizationResourceDetailedStatusFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_accountId</a> - The
--   12-digit account ID of the member account within an organization.
newOrganizationResourceDetailedStatusFilters :: OrganizationResourceDetailedStatusFilters

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationResourceDetailedStatusFilters_status :: Lens' OrganizationResourceDetailedStatusFilters (Maybe OrganizationResourceDetailedStatus)

-- | The 12-digit account ID of the member account within an organization.
organizationResourceDetailedStatusFilters_accountId :: Lens' OrganizationResourceDetailedStatusFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationResourceDetailedStatusFilters.OrganizationResourceDetailedStatusFilters


module Network.AWS.Config.Types.OrganizationResourceStatus
newtype OrganizationResourceStatus
OrganizationResourceStatus' :: Text -> OrganizationResourceStatus
[fromOrganizationResourceStatus] :: OrganizationResourceStatus -> Text
pattern OrganizationResourceStatus_CREATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_SUCCESSFUL :: OrganizationResourceStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationResourceStatus.OrganizationResourceStatus


module Network.AWS.Config.Types.OrganizationConformancePackStatus

-- | Returns the status for an organization conformance pack in an
--   organization.
--   
--   <i>See:</i> <a>newOrganizationConformancePackStatus</a> smart
--   constructor.
data OrganizationConformancePackStatus
OrganizationConformancePackStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | An error code that is returned when organization conformance pack
--   creation or deletion has failed in a member account.
[$sel:errorCode:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe Text

-- | An error message indicating that organization conformance pack
--   creation or deletion failed due to an error.
[$sel:errorMessage:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe Text

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe POSIX

-- | The name that you assign to organization conformance pack.
[$sel:organizationConformancePackName:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Text

-- | Indicates deployment status of an organization conformance pack. When
--   master account calls PutOrganizationConformancePack for the first
--   time, conformance pack status is created in all the member accounts.
--   When master account calls PutOrganizationConformancePack for the
--   second time, conformance pack status is updated in all the member
--   accounts. Additionally, conformance pack status is updated when one or
--   more member accounts join or leave an organization. Conformance pack
--   status is deleted when the master account deletes
--   OrganizationConformancePack in all the member accounts and disables
--   service access for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
[$sel:status:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> OrganizationResourceStatus

-- | Create a value of <a>OrganizationConformancePackStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorCode</a> - An error code
--   that is returned when organization conformance pack creation or
--   deletion has failed in a member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorMessage</a> - An error
--   message indicating that organization conformance pack creation or
--   deletion failed due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_lastUpdateTime</a> - The
--   timestamp of the last update.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_organizationConformancePackName</a>
--   - The name that you assign to organization conformance pack.
--   
--   <a>$sel:status:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_status</a> - Indicates deployment
--   status of an organization conformance pack. When master account calls
--   PutOrganizationConformancePack for the first time, conformance pack
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConformancePack for the second time, conformance
--   pack status is updated in all the member accounts. Additionally,
--   conformance pack status is updated when one or more member accounts
--   join or leave an organization. Conformance pack status is deleted when
--   the master account deletes OrganizationConformancePack in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
newOrganizationConformancePackStatus :: Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | An error code that is returned when organization conformance pack
--   creation or deletion has failed in a member account.
organizationConformancePackStatus_errorCode :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | An error message indicating that organization conformance pack
--   creation or deletion failed due to an error.
organizationConformancePackStatus_errorMessage :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConformancePackStatus_lastUpdateTime :: Lens' OrganizationConformancePackStatus (Maybe UTCTime)

-- | The name that you assign to organization conformance pack.
organizationConformancePackStatus_organizationConformancePackName :: Lens' OrganizationConformancePackStatus Text

-- | Indicates deployment status of an organization conformance pack. When
--   master account calls PutOrganizationConformancePack for the first
--   time, conformance pack status is created in all the member accounts.
--   When master account calls PutOrganizationConformancePack for the
--   second time, conformance pack status is updated in all the member
--   accounts. Additionally, conformance pack status is updated when one or
--   more member accounts join or leave an organization. Conformance pack
--   status is deleted when the master account deletes
--   OrganizationConformancePack in all the member accounts and disables
--   service access for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
organizationConformancePackStatus_status :: Lens' OrganizationConformancePackStatus OrganizationResourceStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConformancePackStatus.OrganizationConformancePackStatus


module Network.AWS.Config.Types.OrganizationRuleStatus
newtype OrganizationRuleStatus
OrganizationRuleStatus' :: Text -> OrganizationRuleStatus
[fromOrganizationRuleStatus] :: OrganizationRuleStatus -> Text
pattern OrganizationRuleStatus_CREATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_SUCCESSFUL :: OrganizationRuleStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationRuleStatus.OrganizationRuleStatus


module Network.AWS.Config.Types.OrganizationConfigRuleStatus

-- | Returns the status for an organization config rule in an organization.
--   
--   <i>See:</i> <a>newOrganizationConfigRuleStatus</a> smart constructor.
data OrganizationConfigRuleStatus
OrganizationConfigRuleStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | An error code that is returned when organization config rule creation
--   or deletion has failed.
[$sel:errorCode:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe Text

-- | An error message indicating that organization config rule creation or
--   deletion failed due to an error.
[$sel:errorMessage:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe Text

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe POSIX

-- | The name that you assign to organization config rule.
[$sel:organizationConfigRuleName:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Text

-- | Indicates deployment status of an organization config rule. When
--   master account calls PutOrganizationConfigRule action for the first
--   time, config rule status is created in all the member accounts. When
--   master account calls PutOrganizationConfigRule action for the second
--   time, config rule status is updated in all the member accounts.
--   Additionally, config rule status is updated when one or more member
--   accounts join or leave an organization. Config rule status is deleted
--   when the master account deletes OrganizationConfigRule in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
[$sel:organizationRuleStatus:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> OrganizationRuleStatus

-- | Create a value of <a>OrganizationConfigRuleStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorCode</a> - An error code that is
--   returned when organization config rule creation or deletion has
--   failed.
--   
--   <a>$sel:errorMessage:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorMessage</a> - An error message
--   indicating that organization config rule creation or deletion failed
--   due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_lastUpdateTime</a> - The timestamp of
--   the last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationConfigRuleName</a> - The
--   name that you assign to organization config rule.
--   
--   <a>$sel:organizationRuleStatus:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationRuleStatus</a> - Indicates
--   deployment status of an organization config rule. When master account
--   calls PutOrganizationConfigRule action for the first time, config rule
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConfigRule action for the second time, config
--   rule status is updated in all the member accounts. Additionally,
--   config rule status is updated when one or more member accounts join or
--   leave an organization. Config rule status is deleted when the master
--   account deletes OrganizationConfigRule in all the member accounts and
--   disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
newOrganizationConfigRuleStatus :: Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | An error code that is returned when organization config rule creation
--   or deletion has failed.
organizationConfigRuleStatus_errorCode :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | An error message indicating that organization config rule creation or
--   deletion failed due to an error.
organizationConfigRuleStatus_errorMessage :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConfigRuleStatus_lastUpdateTime :: Lens' OrganizationConfigRuleStatus (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRuleStatus_organizationConfigRuleName :: Lens' OrganizationConfigRuleStatus Text

-- | Indicates deployment status of an organization config rule. When
--   master account calls PutOrganizationConfigRule action for the first
--   time, config rule status is created in all the member accounts. When
--   master account calls PutOrganizationConfigRule action for the second
--   time, config rule status is updated in all the member accounts.
--   Additionally, config rule status is updated when one or more member
--   accounts join or leave an organization. Config rule status is deleted
--   when the master account deletes OrganizationConfigRule in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
organizationConfigRuleStatus_organizationRuleStatus :: Lens' OrganizationConfigRuleStatus OrganizationRuleStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance GHC.Show.Show Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance GHC.Read.Read Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.OrganizationConfigRuleStatus.OrganizationConfigRuleStatus


module Network.AWS.Config.Types.Owner
newtype Owner
Owner' :: Text -> Owner
[fromOwner] :: Owner -> Text
pattern Owner_AWS :: Owner
pattern Owner_CUSTOM_LAMBDA :: Owner
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.Owner.Owner
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.Owner.Owner
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.Owner.Owner
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.Owner.Owner
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.Owner.Owner
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.Owner.Owner
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Owner.Owner
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Owner.Owner
instance GHC.Generics.Generic Network.AWS.Config.Types.Owner.Owner
instance GHC.Classes.Ord Network.AWS.Config.Types.Owner.Owner
instance GHC.Classes.Eq Network.AWS.Config.Types.Owner.Owner
instance GHC.Read.Read Network.AWS.Config.Types.Owner.Owner
instance GHC.Show.Show Network.AWS.Config.Types.Owner.Owner


module Network.AWS.Config.Types.PendingAggregationRequest

-- | An object that represents the account ID and region of an aggregator
--   account that is requesting authorization but is not yet authorized.
--   
--   <i>See:</i> <a>newPendingAggregationRequest</a> smart constructor.
data PendingAggregationRequest
PendingAggregationRequest' :: Maybe Text -> Maybe Text -> PendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
[$sel:requesterAccountId:PendingAggregationRequest'] :: PendingAggregationRequest -> Maybe Text

-- | The region requesting to aggregate data.
[$sel:requesterAwsRegion:PendingAggregationRequest'] :: PendingAggregationRequest -> Maybe Text

-- | Create a value of <a>PendingAggregationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requesterAccountId:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAccountId</a> - The 12-digit
--   account ID of the account requesting to aggregate data.
--   
--   <a>$sel:requesterAwsRegion:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAwsRegion</a> - The region
--   requesting to aggregate data.
newPendingAggregationRequest :: PendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
pendingAggregationRequest_requesterAccountId :: Lens' PendingAggregationRequest (Maybe Text)

-- | The region requesting to aggregate data.
pendingAggregationRequest_requesterAwsRegion :: Lens' PendingAggregationRequest (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance GHC.Show.Show Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance GHC.Read.Read Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance GHC.Classes.Eq Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest
instance Control.DeepSeq.NFData Network.AWS.Config.Types.PendingAggregationRequest.PendingAggregationRequest


module Network.AWS.Config.Types.QueryInfo

-- | Details about the query.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe [FieldInfo] -> QueryInfo

-- | Returns a <tt>FieldInfo</tt> object.
[$sel:selectFields:QueryInfo'] :: QueryInfo -> Maybe [FieldInfo]

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectFields:QueryInfo'</a>, <a>queryInfo_selectFields</a> -
--   Returns a <tt>FieldInfo</tt> object.
newQueryInfo :: QueryInfo

-- | Returns a <tt>FieldInfo</tt> object.
queryInfo_selectFields :: Lens' QueryInfo (Maybe [FieldInfo])
instance GHC.Generics.Generic Network.AWS.Config.Types.QueryInfo.QueryInfo
instance GHC.Show.Show Network.AWS.Config.Types.QueryInfo.QueryInfo
instance GHC.Read.Read Network.AWS.Config.Types.QueryInfo.QueryInfo
instance GHC.Classes.Eq Network.AWS.Config.Types.QueryInfo.QueryInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.QueryInfo.QueryInfo
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.QueryInfo.QueryInfo
instance Control.DeepSeq.NFData Network.AWS.Config.Types.QueryInfo.QueryInfo


module Network.AWS.Config.Types.RecorderStatus
newtype RecorderStatus
RecorderStatus' :: Text -> RecorderStatus
[fromRecorderStatus] :: RecorderStatus -> Text
pattern RecorderStatus_Failure :: RecorderStatus
pattern RecorderStatus_Pending :: RecorderStatus
pattern RecorderStatus_Success :: RecorderStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance GHC.Generics.Generic Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance GHC.Classes.Ord Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance GHC.Read.Read Network.AWS.Config.Types.RecorderStatus.RecorderStatus
instance GHC.Show.Show Network.AWS.Config.Types.RecorderStatus.RecorderStatus


module Network.AWS.Config.Types.ConfigurationRecorderStatus

-- | The current status of the configuration recorder.
--   
--   <i>See:</i> <a>newConfigurationRecorderStatus</a> smart constructor.
data ConfigurationRecorderStatus
ConfigurationRecorderStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Maybe RecorderStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> ConfigurationRecorderStatus

-- | The error code indicating that the recording failed.
[$sel:lastErrorCode:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The time the recorder was last stopped.
[$sel:lastStopTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | The time when the status was last changed.
[$sel:lastStatusChangeTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | Specifies whether or not the recorder is currently recording.
[$sel:recording:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Bool

-- | The last (previous) status of the recorder.
[$sel:lastStatus:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe RecorderStatus

-- | The message indicating that the recording failed due to an error.
[$sel:lastErrorMessage:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The name of the configuration recorder.
[$sel:name:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The time the recorder was last started.
[$sel:lastStartTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | Create a value of <a>ConfigurationRecorderStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorCode</a> - The error code
--   indicating that the recording failed.
--   
--   <a>$sel:lastStopTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStopTime</a> - The time the
--   recorder was last stopped.
--   
--   <a>$sel:lastStatusChangeTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatusChangeTime</a> - The time
--   when the status was last changed.
--   
--   <a>$sel:recording:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_recording</a> - Specifies whether or
--   not the recorder is currently recording.
--   
--   <a>$sel:lastStatus:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatus</a> - The last (previous)
--   status of the recorder.
--   
--   <a>$sel:lastErrorMessage:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorMessage</a> - The message
--   indicating that the recording failed due to an error.
--   
--   <a>$sel:name:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_name</a> - The name of the
--   configuration recorder.
--   
--   <a>$sel:lastStartTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStartTime</a> - The time the
--   recorder was last started.
newConfigurationRecorderStatus :: ConfigurationRecorderStatus

-- | The error code indicating that the recording failed.
configurationRecorderStatus_lastErrorCode :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last stopped.
configurationRecorderStatus_lastStopTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | The time when the status was last changed.
configurationRecorderStatus_lastStatusChangeTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | Specifies whether or not the recorder is currently recording.
configurationRecorderStatus_recording :: Lens' ConfigurationRecorderStatus (Maybe Bool)

-- | The last (previous) status of the recorder.
configurationRecorderStatus_lastStatus :: Lens' ConfigurationRecorderStatus (Maybe RecorderStatus)

-- | The message indicating that the recording failed due to an error.
configurationRecorderStatus_lastErrorMessage :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The name of the configuration recorder.
configurationRecorderStatus_name :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last started.
configurationRecorderStatus_lastStartTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance GHC.Show.Show Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance GHC.Read.Read Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigurationRecorderStatus.ConfigurationRecorderStatus


module Network.AWS.Config.Types.RemediationException

-- | An object that represents the details about the remediation exception.
--   The details include the rule name, an explanation of an exception, the
--   time when the exception will be deleted, the resource ID, and resource
--   type.
--   
--   <i>See:</i> <a>newRemediationException</a> smart constructor.
data RemediationException
RemediationException' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> RemediationException

-- | An explanation of an remediation exception.
[$sel:message:RemediationException'] :: RemediationException -> Maybe Text

-- | The time when the remediation exception will be deleted.
[$sel:expirationTime:RemediationException'] :: RemediationException -> Maybe POSIX

-- | The name of the Config rule.
[$sel:configRuleName:RemediationException'] :: RemediationException -> Text

-- | The type of a resource.
[$sel:resourceType:RemediationException'] :: RemediationException -> Text

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:RemediationException'] :: RemediationException -> Text

-- | Create a value of <a>RemediationException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:RemediationException'</a>,
--   <a>remediationException_message</a> - An explanation of an remediation
--   exception.
--   
--   <a>$sel:expirationTime:RemediationException'</a>,
--   <a>remediationException_expirationTime</a> - The time when the
--   remediation exception will be deleted.
--   
--   <a>$sel:configRuleName:RemediationException'</a>,
--   <a>remediationException_configRuleName</a> - The name of the Config
--   rule.
--   
--   <a>$sel:resourceType:RemediationException'</a>,
--   <a>remediationException_resourceType</a> - The type of a resource.
--   
--   <a>$sel:resourceId:RemediationException'</a>,
--   <a>remediationException_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
newRemediationException :: Text -> Text -> Text -> RemediationException

-- | An explanation of an remediation exception.
remediationException_message :: Lens' RemediationException (Maybe Text)

-- | The time when the remediation exception will be deleted.
remediationException_expirationTime :: Lens' RemediationException (Maybe UTCTime)

-- | The name of the Config rule.
remediationException_configRuleName :: Lens' RemediationException Text

-- | The type of a resource.
remediationException_resourceType :: Lens' RemediationException Text

-- | The ID of the resource (for example., sg-xxxxxx).
remediationException_resourceId :: Lens' RemediationException Text
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationException.RemediationException
instance GHC.Show.Show Network.AWS.Config.Types.RemediationException.RemediationException
instance GHC.Read.Read Network.AWS.Config.Types.RemediationException.RemediationException
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationException.RemediationException
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationException.RemediationException
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationException.RemediationException
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationException.RemediationException


module Network.AWS.Config.Types.FailedRemediationExceptionBatch

-- | List of each of the failed remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedRemediationExceptionBatch</a> smart
--   constructor.
data FailedRemediationExceptionBatch
FailedRemediationExceptionBatch' :: Maybe Text -> Maybe [RemediationException] -> FailedRemediationExceptionBatch

-- | Returns a failure message. For example, the auto-remediation has
--   failed.
[$sel:failureMessage:FailedRemediationExceptionBatch'] :: FailedRemediationExceptionBatch -> Maybe Text

-- | Returns remediation exception resource key object of the failed items.
[$sel:failedItems:FailedRemediationExceptionBatch'] :: FailedRemediationExceptionBatch -> Maybe [RemediationException]

-- | Create a value of <a>FailedRemediationExceptionBatch</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failureMessage</a> - Returns a
--   failure message. For example, the auto-remediation has failed.
--   
--   <a>$sel:failedItems:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedRemediationExceptionBatch :: FailedRemediationExceptionBatch

-- | Returns a failure message. For example, the auto-remediation has
--   failed.
failedRemediationExceptionBatch_failureMessage :: Lens' FailedRemediationExceptionBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedRemediationExceptionBatch_failedItems :: Lens' FailedRemediationExceptionBatch (Maybe [RemediationException])
instance GHC.Generics.Generic Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance GHC.Show.Show Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance GHC.Read.Read Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance GHC.Classes.Eq Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch
instance Control.DeepSeq.NFData Network.AWS.Config.Types.FailedRemediationExceptionBatch.FailedRemediationExceptionBatch


module Network.AWS.Config.Types.RemediationExceptionResourceKey

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newRemediationExceptionResourceKey</a> smart
--   constructor.
data RemediationExceptionResourceKey
RemediationExceptionResourceKey' :: Maybe Text -> Maybe Text -> RemediationExceptionResourceKey

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:RemediationExceptionResourceKey'] :: RemediationExceptionResourceKey -> Maybe Text

-- | The type of a resource.
[$sel:resourceType:RemediationExceptionResourceKey'] :: RemediationExceptionResourceKey -> Maybe Text

-- | Create a value of <a>RemediationExceptionResourceKey</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceId</a> - The ID of the
--   resource (for example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceType</a> - The type of a
--   resource.
newRemediationExceptionResourceKey :: RemediationExceptionResourceKey

-- | The ID of the resource (for example., sg-xxxxxx).
remediationExceptionResourceKey_resourceId :: Lens' RemediationExceptionResourceKey (Maybe Text)

-- | The type of a resource.
remediationExceptionResourceKey_resourceType :: Lens' RemediationExceptionResourceKey (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance GHC.Show.Show Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance GHC.Read.Read Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationExceptionResourceKey.RemediationExceptionResourceKey


module Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch

-- | List of each of the failed delete remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedDeleteRemediationExceptionsBatch</a> smart
--   constructor.
data FailedDeleteRemediationExceptionsBatch
FailedDeleteRemediationExceptionsBatch' :: Maybe Text -> Maybe (NonEmpty RemediationExceptionResourceKey) -> FailedDeleteRemediationExceptionsBatch

-- | Returns a failure message for delete remediation exception. For
--   example, Config creates an exception due to an internal error.
[$sel:failureMessage:FailedDeleteRemediationExceptionsBatch'] :: FailedDeleteRemediationExceptionsBatch -> Maybe Text

-- | Returns remediation exception resource key object of the failed items.
[$sel:failedItems:FailedDeleteRemediationExceptionsBatch'] :: FailedDeleteRemediationExceptionsBatch -> Maybe (NonEmpty RemediationExceptionResourceKey)

-- | Create a value of <a>FailedDeleteRemediationExceptionsBatch</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failureMessage</a> - Returns
--   a failure message for delete remediation exception. For example,
--   Config creates an exception due to an internal error.
--   
--   <a>$sel:failedItems:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedDeleteRemediationExceptionsBatch :: FailedDeleteRemediationExceptionsBatch

-- | Returns a failure message for delete remediation exception. For
--   example, Config creates an exception due to an internal error.
failedDeleteRemediationExceptionsBatch_failureMessage :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedDeleteRemediationExceptionsBatch_failedItems :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe (NonEmpty RemediationExceptionResourceKey))
instance GHC.Generics.Generic Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance GHC.Show.Show Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance GHC.Read.Read Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance GHC.Classes.Eq Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch
instance Control.DeepSeq.NFData Network.AWS.Config.Types.FailedDeleteRemediationExceptionsBatch.FailedDeleteRemediationExceptionsBatch


module Network.AWS.Config.Types.RemediationExecutionState
newtype RemediationExecutionState
RemediationExecutionState' :: Text -> RemediationExecutionState
[fromRemediationExecutionState] :: RemediationExecutionState -> Text
pattern RemediationExecutionState_FAILED :: RemediationExecutionState
pattern RemediationExecutionState_IN_PROGRESS :: RemediationExecutionState
pattern RemediationExecutionState_QUEUED :: RemediationExecutionState
pattern RemediationExecutionState_SUCCEEDED :: RemediationExecutionState
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance GHC.Classes.Ord Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance GHC.Read.Read Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState
instance GHC.Show.Show Network.AWS.Config.Types.RemediationExecutionState.RemediationExecutionState


module Network.AWS.Config.Types.RemediationExecutionStepState
newtype RemediationExecutionStepState
RemediationExecutionStepState' :: Text -> RemediationExecutionStepState
[fromRemediationExecutionStepState] :: RemediationExecutionStepState -> Text
pattern RemediationExecutionStepState_FAILED :: RemediationExecutionStepState
pattern RemediationExecutionStepState_PENDING :: RemediationExecutionStepState
pattern RemediationExecutionStepState_SUCCEEDED :: RemediationExecutionStepState
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance GHC.Classes.Ord Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance GHC.Read.Read Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState
instance GHC.Show.Show Network.AWS.Config.Types.RemediationExecutionStepState.RemediationExecutionStepState


module Network.AWS.Config.Types.RemediationExecutionStep

-- | Name of the step from the SSM document.
--   
--   <i>See:</i> <a>newRemediationExecutionStep</a> smart constructor.
data RemediationExecutionStep
RemediationExecutionStep' :: Maybe RemediationExecutionStepState -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> RemediationExecutionStep

-- | The valid status of the step.
[$sel:state:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe RemediationExecutionStepState

-- | The time when the step started.
[$sel:startTime:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe POSIX

-- | The details of the step.
[$sel:name:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe Text

-- | The time when the step stopped.
[$sel:stopTime:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe POSIX

-- | An error message if the step was interrupted during execution.
[$sel:errorMessage:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe Text

-- | Create a value of <a>RemediationExecutionStep</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_state</a> - The valid status of the step.
--   
--   <a>$sel:startTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_startTime</a> - The time when the step
--   started.
--   
--   <a>$sel:name:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_name</a> - The details of the step.
--   
--   <a>$sel:stopTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_stopTime</a> - The time when the step
--   stopped.
--   
--   <a>$sel:errorMessage:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_errorMessage</a> - An error message if the
--   step was interrupted during execution.
newRemediationExecutionStep :: RemediationExecutionStep

-- | The valid status of the step.
remediationExecutionStep_state :: Lens' RemediationExecutionStep (Maybe RemediationExecutionStepState)

-- | The time when the step started.
remediationExecutionStep_startTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | The details of the step.
remediationExecutionStep_name :: Lens' RemediationExecutionStep (Maybe Text)

-- | The time when the step stopped.
remediationExecutionStep_stopTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | An error message if the step was interrupted during execution.
remediationExecutionStep_errorMessage :: Lens' RemediationExecutionStep (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance GHC.Show.Show Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance GHC.Read.Read Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationExecutionStep.RemediationExecutionStep


module Network.AWS.Config.Types.RemediationTargetType
newtype RemediationTargetType
RemediationTargetType' :: Text -> RemediationTargetType
[fromRemediationTargetType] :: RemediationTargetType -> Text
pattern RemediationTargetType_SSM_DOCUMENT :: RemediationTargetType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance GHC.Classes.Ord Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance GHC.Read.Read Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType
instance GHC.Show.Show Network.AWS.Config.Types.RemediationTargetType.RemediationTargetType


module Network.AWS.Config.Types.ResourceCountGroupKey
newtype ResourceCountGroupKey
ResourceCountGroupKey' :: Text -> ResourceCountGroupKey
[fromResourceCountGroupKey] :: ResourceCountGroupKey -> Text
pattern ResourceCountGroupKey_ACCOUNT_ID :: ResourceCountGroupKey
pattern ResourceCountGroupKey_AWS_REGION :: ResourceCountGroupKey
pattern ResourceCountGroupKey_RESOURCE_TYPE :: ResourceCountGroupKey
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance GHC.Classes.Ord Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance GHC.Read.Read Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey
instance GHC.Show.Show Network.AWS.Config.Types.ResourceCountGroupKey.ResourceCountGroupKey


module Network.AWS.Config.Types.ResourceFilters

-- | Filters the results by resource account ID, region, resource ID, and
--   resource name.
--   
--   <i>See:</i> <a>newResourceFilters</a> smart constructor.
data ResourceFilters
ResourceFilters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResourceFilters

-- | The ID of the resource.
[$sel:resourceId:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The name of the resource.
[$sel:resourceName:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The 12-digit source account ID.
[$sel:accountId:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The source region.
[$sel:region:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | Create a value of <a>ResourceFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceFilters'</a>,
--   <a>resourceFilters_resourceId</a> - The ID of the resource.
--   
--   <a>$sel:resourceName:ResourceFilters'</a>,
--   <a>resourceFilters_resourceName</a> - The name of the resource.
--   
--   <a>$sel:accountId:ResourceFilters'</a>,
--   <a>resourceFilters_accountId</a> - The 12-digit source account ID.
--   
--   <a>$sel:region:ResourceFilters'</a>, <a>resourceFilters_region</a> -
--   The source region.
newResourceFilters :: ResourceFilters

-- | The ID of the resource.
resourceFilters_resourceId :: Lens' ResourceFilters (Maybe Text)

-- | The name of the resource.
resourceFilters_resourceName :: Lens' ResourceFilters (Maybe Text)

-- | The 12-digit source account ID.
resourceFilters_accountId :: Lens' ResourceFilters (Maybe Text)

-- | The source region.
resourceFilters_region :: Lens' ResourceFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance GHC.Show.Show Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance GHC.Read.Read Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceFilters.ResourceFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceFilters.ResourceFilters


module Network.AWS.Config.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_AWS__ACM__Certificate :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Api :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Stage :: ResourceType
pattern ResourceType_AWS__ApiGateway__RestApi :: ResourceType
pattern ResourceType_AWS__ApiGateway__Stage :: ResourceType
pattern ResourceType_AWS__AutoScaling__AutoScalingGroup :: ResourceType
pattern ResourceType_AWS__AutoScaling__LaunchConfiguration :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScalingPolicy :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScheduledAction :: ResourceType
pattern ResourceType_AWS__Backup__BackupPlan :: ResourceType
pattern ResourceType_AWS__Backup__BackupSelection :: ResourceType
pattern ResourceType_AWS__Backup__BackupVault :: ResourceType
pattern ResourceType_AWS__Backup__RecoveryPoint :: ResourceType
pattern ResourceType_AWS__CloudFormation__Stack :: ResourceType
pattern ResourceType_AWS__CloudFront__Distribution :: ResourceType
pattern ResourceType_AWS__CloudFront__StreamingDistribution :: ResourceType
pattern ResourceType_AWS__CloudTrail__Trail :: ResourceType
pattern ResourceType_AWS__CloudWatch__Alarm :: ResourceType
pattern ResourceType_AWS__CodeBuild__Project :: ResourceType
pattern ResourceType_AWS__CodePipeline__Pipeline :: ResourceType
pattern ResourceType_AWS__Config__ConformancePackCompliance :: ResourceType
pattern ResourceType_AWS__Config__ResourceCompliance :: ResourceType
pattern ResourceType_AWS__DynamoDB__Table :: ResourceType
pattern ResourceType_AWS__EC2__CustomerGateway :: ResourceType
pattern ResourceType_AWS__EC2__EIP :: ResourceType
pattern ResourceType_AWS__EC2__EgressOnlyInternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__FlowLog :: ResourceType
pattern ResourceType_AWS__EC2__Host :: ResourceType
pattern ResourceType_AWS__EC2__Instance :: ResourceType
pattern ResourceType_AWS__EC2__InternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__NatGateway :: ResourceType
pattern ResourceType_AWS__EC2__NetworkAcl :: ResourceType
pattern ResourceType_AWS__EC2__NetworkInterface :: ResourceType
pattern ResourceType_AWS__EC2__RegisteredHAInstance :: ResourceType
pattern ResourceType_AWS__EC2__RouteTable :: ResourceType
pattern ResourceType_AWS__EC2__SecurityGroup :: ResourceType
pattern ResourceType_AWS__EC2__Subnet :: ResourceType
pattern ResourceType_AWS__EC2__VPC :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpoint :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpointService :: ResourceType
pattern ResourceType_AWS__EC2__VPCPeeringConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNGateway :: ResourceType
pattern ResourceType_AWS__EC2__Volume :: ResourceType
pattern ResourceType_AWS__ECR__Repository :: ResourceType
pattern ResourceType_AWS__ECS__Cluster :: ResourceType
pattern ResourceType_AWS__ECS__Service :: ResourceType
pattern ResourceType_AWS__ECS__TaskDefinition :: ResourceType
pattern ResourceType_AWS__EFS__AccessPoint :: ResourceType
pattern ResourceType_AWS__EFS__FileSystem :: ResourceType
pattern ResourceType_AWS__EKS__Cluster :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Application :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__ApplicationVersion :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Environment :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancingV2__LoadBalancer :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancing__LoadBalancer :: ResourceType
pattern ResourceType_AWS__Elasticsearch__Domain :: ResourceType
pattern ResourceType_AWS__IAM__Group :: ResourceType
pattern ResourceType_AWS__IAM__Policy :: ResourceType
pattern ResourceType_AWS__IAM__Role :: ResourceType
pattern ResourceType_AWS__IAM__User :: ResourceType
pattern ResourceType_AWS__KMS__Key :: ResourceType
pattern ResourceType_AWS__Lambda__Function :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__Firewall :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__FirewallPolicy :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__RuleGroup :: ResourceType
pattern ResourceType_AWS__OpenSearch__Domain :: ResourceType
pattern ResourceType_AWS__QLDB__Ledger :: ResourceType
pattern ResourceType_AWS__RDS__DBCluster :: ResourceType
pattern ResourceType_AWS__RDS__DBClusterSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBInstance :: ResourceType
pattern ResourceType_AWS__RDS__DBSecurityGroup :: ResourceType
pattern ResourceType_AWS__RDS__DBSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBSubnetGroup :: ResourceType
pattern ResourceType_AWS__RDS__EventSubscription :: ResourceType
pattern ResourceType_AWS__Redshift__Cluster :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterParameterGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSecurityGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSnapshot :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSubnetGroup :: ResourceType
pattern ResourceType_AWS__Redshift__EventSubscription :: ResourceType
pattern ResourceType_AWS__S3__AccountPublicAccessBlock :: ResourceType
pattern ResourceType_AWS__S3__Bucket :: ResourceType
pattern ResourceType_AWS__SNS__Topic :: ResourceType
pattern ResourceType_AWS__SQS__Queue :: ResourceType
pattern ResourceType_AWS__SSM__AssociationCompliance :: ResourceType
pattern ResourceType_AWS__SSM__FileData :: ResourceType
pattern ResourceType_AWS__SSM__ManagedInstanceInventory :: ResourceType
pattern ResourceType_AWS__SSM__PatchCompliance :: ResourceType
pattern ResourceType_AWS__SecretsManager__Secret :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProvisionedProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__Portfolio :: ResourceType
pattern ResourceType_AWS__ShieldRegional__Protection :: ResourceType
pattern ResourceType_AWS__Shield__Protection :: ResourceType
pattern ResourceType_AWS__WAFRegional__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAFRegional__Rule :: ResourceType
pattern ResourceType_AWS__WAFRegional__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFRegional__WebACL :: ResourceType
pattern ResourceType_AWS__WAF__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAF__Rule :: ResourceType
pattern ResourceType_AWS__WAF__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAF__WebACL :: ResourceType
pattern ResourceType_AWS__WAFv2__IPSet :: ResourceType
pattern ResourceType_AWS__WAFv2__ManagedRuleSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RegexPatternSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFv2__WebACL :: ResourceType
pattern ResourceType_AWS__XRay__EncryptionConfig :: ResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Network.AWS.Config.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceType.ResourceType
instance GHC.Read.Read Network.AWS.Config.Types.ResourceType.ResourceType
instance GHC.Show.Show Network.AWS.Config.Types.ResourceType.ResourceType


module Network.AWS.Config.Types.ResourceKey

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newResourceKey</a> smart constructor.
data ResourceKey
ResourceKey' :: ResourceType -> Text -> ResourceKey

-- | The resource type.
[$sel:resourceType:ResourceKey'] :: ResourceKey -> ResourceType

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:ResourceKey'] :: ResourceKey -> Text

-- | Create a value of <a>ResourceKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceKey'</a>, <a>resourceKey_resourceType</a>
--   - The resource type.
--   
--   <a>$sel:resourceId:ResourceKey'</a>, <a>resourceKey_resourceId</a> -
--   The ID of the resource (for example., sg-xxxxxx).
newResourceKey :: ResourceType -> Text -> ResourceKey

-- | The resource type.
resourceKey_resourceType :: Lens' ResourceKey ResourceType

-- | The ID of the resource (for example., sg-xxxxxx).
resourceKey_resourceId :: Lens' ResourceKey Text
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceKey.ResourceKey
instance GHC.Show.Show Network.AWS.Config.Types.ResourceKey.ResourceKey
instance GHC.Read.Read Network.AWS.Config.Types.ResourceKey.ResourceKey
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceKey.ResourceKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceKey.ResourceKey
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceKey.ResourceKey
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceKey.ResourceKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceKey.ResourceKey


module Network.AWS.Config.Types.RemediationExecutionStatus

-- | Provides details of the current status of the invoked remediation
--   action for that resource.
--   
--   <i>See:</i> <a>newRemediationExecutionStatus</a> smart constructor.
data RemediationExecutionStatus
RemediationExecutionStatus' :: Maybe RemediationExecutionState -> Maybe POSIX -> Maybe ResourceKey -> Maybe [RemediationExecutionStep] -> Maybe POSIX -> RemediationExecutionStatus

-- | ENUM of the values.
[$sel:state:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe RemediationExecutionState

-- | The time when the remediation execution was last updated.
[$sel:lastUpdatedTime:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe POSIX
[$sel:resourceKey:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe ResourceKey

-- | Details of every step.
[$sel:stepDetails:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe [RemediationExecutionStep]

-- | Start time when the remediation was executed.
[$sel:invocationTime:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe POSIX

-- | Create a value of <a>RemediationExecutionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_state</a> - ENUM of the values.
--   
--   <a>$sel:lastUpdatedTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_lastUpdatedTime</a> - The time when the
--   remediation execution was last updated.
--   
--   <a>$sel:resourceKey:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_resourceKey</a> - Undocumented member.
--   
--   <a>$sel:stepDetails:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_stepDetails</a> - Details of every step.
--   
--   <a>$sel:invocationTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_invocationTime</a> - Start time when the
--   remediation was executed.
newRemediationExecutionStatus :: RemediationExecutionStatus

-- | ENUM of the values.
remediationExecutionStatus_state :: Lens' RemediationExecutionStatus (Maybe RemediationExecutionState)

-- | The time when the remediation execution was last updated.
remediationExecutionStatus_lastUpdatedTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)

-- | Undocumented member.
remediationExecutionStatus_resourceKey :: Lens' RemediationExecutionStatus (Maybe ResourceKey)

-- | Details of every step.
remediationExecutionStatus_stepDetails :: Lens' RemediationExecutionStatus (Maybe [RemediationExecutionStep])

-- | Start time when the remediation was executed.
remediationExecutionStatus_invocationTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance GHC.Show.Show Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance GHC.Read.Read Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationExecutionStatus.RemediationExecutionStatus


module Network.AWS.Config.Types.ResourceIdentifier

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe POSIX -> ResourceIdentifier

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The type of resource.
[$sel:resourceType:ResourceIdentifier'] :: ResourceIdentifier -> Maybe ResourceType

-- | The custom name of the resource (if available).
[$sel:resourceName:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The time that the resource was deleted.
[$sel:resourceDeletionTime:ResourceIdentifier'] :: ResourceIdentifier -> Maybe POSIX

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The type of resource.
--   
--   <a>$sel:resourceName:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceName</a> - The custom name of the
--   resource (if available).
--   
--   <a>$sel:resourceDeletionTime:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceDeletionTime</a> - The time that the
--   resource was deleted.
newResourceIdentifier :: ResourceIdentifier

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
resourceIdentifier_resourceId :: Lens' ResourceIdentifier (Maybe Text)

-- | The type of resource.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe ResourceType)

-- | The custom name of the resource (if available).
resourceIdentifier_resourceName :: Lens' ResourceIdentifier (Maybe Text)

-- | The time that the resource was deleted.
resourceIdentifier_resourceDeletionTime :: Lens' ResourceIdentifier (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Show.Show Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Read.Read Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceIdentifier.ResourceIdentifier


module Network.AWS.Config.Types.ResourceCountFilters

-- | Filters the resource count based on account ID, region, and resource
--   type.
--   
--   <i>See:</i> <a>newResourceCountFilters</a> smart constructor.
data ResourceCountFilters
ResourceCountFilters' :: Maybe ResourceType -> Maybe Text -> Maybe Text -> ResourceCountFilters

-- | The type of the Amazon Web Services resource.
[$sel:resourceType:ResourceCountFilters'] :: ResourceCountFilters -> Maybe ResourceType

-- | The 12-digit ID of the account.
[$sel:accountId:ResourceCountFilters'] :: ResourceCountFilters -> Maybe Text

-- | The region where the account is located.
[$sel:region:ResourceCountFilters'] :: ResourceCountFilters -> Maybe Text

-- | Create a value of <a>ResourceCountFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_resourceType</a> - The type of the Amazon Web
--   Services resource.
--   
--   <a>$sel:accountId:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_accountId</a> - The 12-digit ID of the
--   account.
--   
--   <a>$sel:region:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_region</a> - The region where the account is
--   located.
newResourceCountFilters :: ResourceCountFilters

-- | The type of the Amazon Web Services resource.
resourceCountFilters_resourceType :: Lens' ResourceCountFilters (Maybe ResourceType)

-- | The 12-digit ID of the account.
resourceCountFilters_accountId :: Lens' ResourceCountFilters (Maybe Text)

-- | The region where the account is located.
resourceCountFilters_region :: Lens' ResourceCountFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance GHC.Show.Show Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance GHC.Read.Read Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceCountFilters.ResourceCountFilters


module Network.AWS.Config.Types.ResourceCount

-- | An object that contains the resource type and the number of resources.
--   
--   <i>See:</i> <a>newResourceCount</a> smart constructor.
data ResourceCount
ResourceCount' :: Maybe ResourceType -> Maybe Integer -> ResourceCount

-- | The resource type (for example, <tt>"AWS::EC2::Instance"</tt>).
[$sel:resourceType:ResourceCount'] :: ResourceCount -> Maybe ResourceType

-- | The number of resources.
[$sel:count:ResourceCount'] :: ResourceCount -> Maybe Integer

-- | Create a value of <a>ResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCount'</a>,
--   <a>resourceCount_resourceType</a> - The resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:count:ResourceCount'</a>, <a>resourceCount_count</a> - The
--   number of resources.
newResourceCount :: ResourceCount

-- | The resource type (for example, <tt>"AWS::EC2::Instance"</tt>).
resourceCount_resourceType :: Lens' ResourceCount (Maybe ResourceType)

-- | The number of resources.
resourceCount_count :: Lens' ResourceCount (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceCount.ResourceCount
instance GHC.Show.Show Network.AWS.Config.Types.ResourceCount.ResourceCount
instance GHC.Read.Read Network.AWS.Config.Types.ResourceCount.ResourceCount
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceCount.ResourceCount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceCount.ResourceCount
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceCount.ResourceCount
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceCount.ResourceCount


module Network.AWS.Config.Types.Relationship

-- | The relationship of the related resource to the main resource.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Relationship

-- | The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:Relationship'] :: Relationship -> Maybe Text

-- | The resource type of the related resource.
[$sel:resourceType:Relationship'] :: Relationship -> Maybe ResourceType

-- | The custom name of the related resource, if available.
[$sel:resourceName:Relationship'] :: Relationship -> Maybe Text

-- | The type of relationship with the related resource.
[$sel:relationshipName:Relationship'] :: Relationship -> Maybe Text

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Relationship'</a>, <a>relationship_resourceId</a> -
--   The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:Relationship'</a>,
--   <a>relationship_resourceType</a> - The resource type of the related
--   resource.
--   
--   <a>$sel:resourceName:Relationship'</a>,
--   <a>relationship_resourceName</a> - The custom name of the related
--   resource, if available.
--   
--   <a>$sel:relationshipName:Relationship'</a>,
--   <a>relationship_relationshipName</a> - The type of relationship with
--   the related resource.
newRelationship :: Relationship

-- | The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
relationship_resourceId :: Lens' Relationship (Maybe Text)

-- | The resource type of the related resource.
relationship_resourceType :: Lens' Relationship (Maybe ResourceType)

-- | The custom name of the related resource, if available.
relationship_resourceName :: Lens' Relationship (Maybe Text)

-- | The type of relationship with the related resource.
relationship_relationshipName :: Lens' Relationship (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.Relationship.Relationship
instance GHC.Show.Show Network.AWS.Config.Types.Relationship.Relationship
instance GHC.Read.Read Network.AWS.Config.Types.Relationship.Relationship
instance GHC.Classes.Eq Network.AWS.Config.Types.Relationship.Relationship
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Relationship.Relationship
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Relationship.Relationship
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Relationship.Relationship


module Network.AWS.Config.Types.RecordingGroup

-- | Specifies the types of Amazon Web Services resource for which Config
--   records configuration changes.
--   
--   In the recording group, you specify whether all supported types or
--   specific types of resources are recorded.
--   
--   By default, Config records configuration changes for all supported
--   types of regional resources that Config discovers in the region in
--   which it is running. Regional resources are tied to a region and can
--   be used only in that region. Examples of regional resources are EC2
--   instances and EBS volumes.
--   
--   You can also have Config record configuration changes for supported
--   types of global resources (for example, IAM resources). Global
--   resources are not tied to an individual region and can be used in all
--   regions.
--   
--   The configuration details for any global resource are the same in all
--   regions. If you customize Config in multiple regions to record global
--   resources, it will create multiple configuration items each time a
--   global resource changes: one configuration item for each region. These
--   configuration items will contain identical data. To prevent duplicate
--   configuration items, you should consider customizing Config in only
--   one region to record global resources, unless you want the
--   configuration items to be available in multiple regions.
--   
--   If you don't want Config to record all resources, you can specify
--   which types of resources it will record with the
--   <tt>resourceTypes</tt> parameter.
--   
--   For a list of supported resource types, see <a>Supported Resource
--   Types</a>.
--   
--   For more information, see <a>Selecting Which Resources Config
--   Records</a>.
--   
--   <i>See:</i> <a>newRecordingGroup</a> smart constructor.
data RecordingGroup
RecordingGroup' :: Maybe Bool -> Maybe Bool -> Maybe [ResourceType] -> RecordingGroup

-- | Specifies whether Config records configuration changes for every
--   supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
[$sel:allSupported:RecordingGroup'] :: RecordingGroup -> Maybe Bool

-- | Specifies whether Config includes all supported types of global
--   resources (for example, IAM resources) with the resources that it
--   records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
[$sel:includeGlobalResourceTypes:RecordingGroup'] :: RecordingGroup -> Maybe Bool

-- | A comma-separated list that specifies the types of Amazon Web Services
--   resources for which Config records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
[$sel:resourceTypes:RecordingGroup'] :: RecordingGroup -> Maybe [ResourceType]

-- | Create a value of <a>RecordingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allSupported:RecordingGroup'</a>,
--   <a>recordingGroup_allSupported</a> - Specifies whether Config records
--   configuration changes for every supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
--   
--   <a>$sel:includeGlobalResourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_includeGlobalResourceTypes</a> - Specifies whether
--   Config includes all supported types of global resources (for example,
--   IAM resources) with the resources that it records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
--   
--   <a>$sel:resourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_resourceTypes</a> - A comma-separated list that
--   specifies the types of Amazon Web Services resources for which Config
--   records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
newRecordingGroup :: RecordingGroup

-- | Specifies whether Config records configuration changes for every
--   supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
recordingGroup_allSupported :: Lens' RecordingGroup (Maybe Bool)

-- | Specifies whether Config includes all supported types of global
--   resources (for example, IAM resources) with the resources that it
--   records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
recordingGroup_includeGlobalResourceTypes :: Lens' RecordingGroup (Maybe Bool)

-- | A comma-separated list that specifies the types of Amazon Web Services
--   resources for which Config records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
recordingGroup_resourceTypes :: Lens' RecordingGroup (Maybe [ResourceType])
instance GHC.Generics.Generic Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance GHC.Show.Show Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance GHC.Read.Read Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance GHC.Classes.Eq Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RecordingGroup.RecordingGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RecordingGroup.RecordingGroup


module Network.AWS.Config.Types.ConfigurationRecorder

-- | An object that represents the recording of configuration changes of an
--   Amazon Web Services resource.
--   
--   <i>See:</i> <a>newConfigurationRecorder</a> smart constructor.
data ConfigurationRecorder
ConfigurationRecorder' :: Maybe Text -> Maybe RecordingGroup -> Maybe Text -> ConfigurationRecorder

-- | The name of the recorder. By default, Config automatically assigns the
--   name "default" when creating the configuration recorder. You cannot
--   change the assigned name.
[$sel:name:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe Text

-- | Specifies the types of Amazon Web Services resources for which Config
--   records configuration changes.
[$sel:recordingGroup:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe RecordingGroup

-- | Amazon Resource Name (ARN) of the IAM role used to describe the Amazon
--   Web Services resources associated with the account.
[$sel:roleARN:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe Text

-- | Create a value of <a>ConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_name</a> - The name of the recorder. By
--   default, Config automatically assigns the name "default" when creating
--   the configuration recorder. You cannot change the assigned name.
--   
--   <a>$sel:recordingGroup:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_recordingGroup</a> - Specifies the types of
--   Amazon Web Services resources for which Config records configuration
--   changes.
--   
--   <a>$sel:roleARN:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_roleARN</a> - Amazon Resource Name (ARN) of
--   the IAM role used to describe the Amazon Web Services resources
--   associated with the account.
newConfigurationRecorder :: ConfigurationRecorder

-- | The name of the recorder. By default, Config automatically assigns the
--   name "default" when creating the configuration recorder. You cannot
--   change the assigned name.
configurationRecorder_name :: Lens' ConfigurationRecorder (Maybe Text)

-- | Specifies the types of Amazon Web Services resources for which Config
--   records configuration changes.
configurationRecorder_recordingGroup :: Lens' ConfigurationRecorder (Maybe RecordingGroup)

-- | Amazon Resource Name (ARN) of the IAM role used to describe the Amazon
--   Web Services resources associated with the account.
configurationRecorder_roleARN :: Lens' ConfigurationRecorder (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance GHC.Show.Show Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance GHC.Read.Read Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigurationRecorder.ConfigurationRecorder


module Network.AWS.Config.Types.ConfigurationItem

-- | A list that contains detailed configurations of a specified resource.
--   
--   <i>See:</i> <a>newConfigurationItem</a> smart constructor.
data ConfigurationItem
ConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [Relationship] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ConfigurationItem

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The type of Amazon Web Services resource.
[$sel:resourceType:ConfigurationItem'] :: ConfigurationItem -> Maybe ResourceType

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
[$sel:configurationStateId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Amazon Resource Name (ARN) associated with the resource.
[$sel:arn:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The custom name of the resource, if available.
[$sel:resourceName:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The time stamp when the resource was created.
[$sel:resourceCreationTime:ConfigurationItem'] :: ConfigurationItem -> Maybe POSIX

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
[$sel:configurationItemStatus:ConfigurationItem'] :: ConfigurationItem -> Maybe ConfigurationItemStatus

-- | The time when the configuration recording was initiated.
[$sel:configurationItemCaptureTime:ConfigurationItem'] :: ConfigurationItem -> Maybe POSIX

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
[$sel:accountId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the
--   <tt>configuration</tt> parameter.
[$sel:supplementaryConfiguration:ConfigurationItem'] :: ConfigurationItem -> Maybe (HashMap Text Text)

-- | The Availability Zone associated with the resource.
[$sel:availabilityZone:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A list of related Amazon Web Services resources.
[$sel:relationships:ConfigurationItem'] :: ConfigurationItem -> Maybe [Relationship]

-- | The version number of the resource configuration.
[$sel:version:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The region where the resource resides.
[$sel:awsRegion:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A list of CloudTrail event IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
[$sel:relatedEvents:ConfigurationItem'] :: ConfigurationItem -> Maybe [Text]

-- | The description of the resource configuration.
[$sel:configuration:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Unique MD5 hash that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
[$sel:configurationItemMD5Hash:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A mapping of key value tags associated with the resource.
[$sel:tags:ConfigurationItem'] :: ConfigurationItem -> Maybe (HashMap Text Text)

-- | Create a value of <a>ConfigurationItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ConfigurationItem'</a>,
--   <a>configurationItem_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ConfigurationItem'</a>,
--   <a>configurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:ConfigurationItem'</a>,
--   <a>configurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:ConfigurationItem'</a>, <a>configurationItem_arn</a> -
--   Amazon Resource Name (ARN) associated with the resource.
--   
--   <a>$sel:resourceName:ConfigurationItem'</a>,
--   <a>configurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:ConfigurationItem'</a>,
--   <a>configurationItem_resourceCreationTime</a> - The time stamp when
--   the resource was created.
--   
--   <a>$sel:configurationItemStatus:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemStatus</a> - The configuration
--   item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemCaptureTime</a> - The time when
--   the configuration recording was initiated.
--   
--   <a>$sel:accountId:ConfigurationItem'</a>,
--   <a>configurationItem_accountId</a> - The 12-digit Amazon Web Services
--   account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:ConfigurationItem'</a>,
--   <a>configurationItem_supplementaryConfiguration</a> - Configuration
--   attributes that Config returns for certain resource types to
--   supplement the information returned for the <tt>configuration</tt>
--   parameter.
--   
--   <a>$sel:availabilityZone:ConfigurationItem'</a>,
--   <a>configurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:relationships:ConfigurationItem'</a>,
--   <a>configurationItem_relationships</a> - A list of related Amazon Web
--   Services resources.
--   
--   <a>$sel:version:ConfigurationItem'</a>,
--   <a>configurationItem_version</a> - The version number of the resource
--   configuration.
--   
--   <a>$sel:awsRegion:ConfigurationItem'</a>,
--   <a>configurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:relatedEvents:ConfigurationItem'</a>,
--   <a>configurationItem_relatedEvents</a> - A list of CloudTrail event
--   IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
--   
--   <a>$sel:configuration:ConfigurationItem'</a>,
--   <a>configurationItem_configuration</a> - The description of the
--   resource configuration.
--   
--   <a>$sel:configurationItemMD5Hash:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemMD5Hash</a> - Unique MD5 hash
--   that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
--   
--   <a>$sel:tags:ConfigurationItem'</a>, <a>configurationItem_tags</a> - A
--   mapping of key value tags associated with the resource.
newConfigurationItem :: ConfigurationItem

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
configurationItem_resourceId :: Lens' ConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
configurationItem_resourceType :: Lens' ConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
configurationItem_configurationStateId :: Lens' ConfigurationItem (Maybe Text)

-- | Amazon Resource Name (ARN) associated with the resource.
configurationItem_arn :: Lens' ConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
configurationItem_resourceName :: Lens' ConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
configurationItem_resourceCreationTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
configurationItem_configurationItemStatus :: Lens' ConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
configurationItem_configurationItemCaptureTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
configurationItem_accountId :: Lens' ConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the
--   <tt>configuration</tt> parameter.
configurationItem_supplementaryConfiguration :: Lens' ConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
configurationItem_availabilityZone :: Lens' ConfigurationItem (Maybe Text)

-- | A list of related Amazon Web Services resources.
configurationItem_relationships :: Lens' ConfigurationItem (Maybe [Relationship])

-- | The version number of the resource configuration.
configurationItem_version :: Lens' ConfigurationItem (Maybe Text)

-- | The region where the resource resides.
configurationItem_awsRegion :: Lens' ConfigurationItem (Maybe Text)

-- | A list of CloudTrail event IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
configurationItem_relatedEvents :: Lens' ConfigurationItem (Maybe [Text])

-- | The description of the resource configuration.
configurationItem_configuration :: Lens' ConfigurationItem (Maybe Text)

-- | Unique MD5 hash that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
configurationItem_configurationItemMD5Hash :: Lens' ConfigurationItem (Maybe Text)

-- | A mapping of key value tags associated with the resource.
configurationItem_tags :: Lens' ConfigurationItem (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance GHC.Show.Show Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance GHC.Read.Read Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigurationItem.ConfigurationItem


module Network.AWS.Config.Types.BaseConfigurationItem

-- | The detailed configuration of a specified resource.
--   
--   <i>See:</i> <a>newBaseConfigurationItem</a> smart constructor.
data BaseConfigurationItem
BaseConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BaseConfigurationItem

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The type of Amazon Web Services resource.
[$sel:resourceType:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe ResourceType

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
[$sel:configurationStateId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:arn:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The custom name of the resource, if available.
[$sel:resourceName:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The time stamp when the resource was created.
[$sel:resourceCreationTime:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe POSIX

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
[$sel:configurationItemStatus:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe ConfigurationItemStatus

-- | The time when the configuration recording was initiated.
[$sel:configurationItemCaptureTime:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe POSIX

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
[$sel:accountId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
[$sel:supplementaryConfiguration:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe (HashMap Text Text)

-- | The Availability Zone associated with the resource.
[$sel:availabilityZone:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The version number of the resource configuration.
[$sel:version:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The region where the resource resides.
[$sel:awsRegion:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The description of the resource configuration.
[$sel:configuration:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | Create a value of <a>BaseConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_arn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:resourceName:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceCreationTime</a> - The time stamp
--   when the resource was created.
--   
--   <a>$sel:configurationItemStatus:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemStatus</a> - The
--   configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemCaptureTime</a> - The time
--   when the configuration recording was initiated.
--   
--   <a>$sel:accountId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_accountId</a> - The 12-digit Amazon Web
--   Services account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_supplementaryConfiguration</a> -
--   Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
--   
--   <a>$sel:availabilityZone:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:version:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_version</a> - The version number of the
--   resource configuration.
--   
--   <a>$sel:awsRegion:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:configuration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configuration</a> - The description of the
--   resource configuration.
newBaseConfigurationItem :: BaseConfigurationItem

-- | The ID of the resource (for example., sg-xxxxxx).
baseConfigurationItem_resourceId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
baseConfigurationItem_resourceType :: Lens' BaseConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
baseConfigurationItem_configurationStateId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource.
baseConfigurationItem_arn :: Lens' BaseConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
baseConfigurationItem_resourceName :: Lens' BaseConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
baseConfigurationItem_resourceCreationTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
baseConfigurationItem_configurationItemStatus :: Lens' BaseConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
baseConfigurationItem_configurationItemCaptureTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
baseConfigurationItem_accountId :: Lens' BaseConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
baseConfigurationItem_supplementaryConfiguration :: Lens' BaseConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
baseConfigurationItem_availabilityZone :: Lens' BaseConfigurationItem (Maybe Text)

-- | The version number of the resource configuration.
baseConfigurationItem_version :: Lens' BaseConfigurationItem (Maybe Text)

-- | The region where the resource resides.
baseConfigurationItem_awsRegion :: Lens' BaseConfigurationItem (Maybe Text)

-- | The description of the resource configuration.
baseConfigurationItem_configuration :: Lens' BaseConfigurationItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance GHC.Show.Show Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance GHC.Read.Read Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance GHC.Classes.Eq Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem
instance Control.DeepSeq.NFData Network.AWS.Config.Types.BaseConfigurationItem.BaseConfigurationItem


module Network.AWS.Config.Types.AggregateResourceIdentifier

-- | The details that identify a resource that is collected by Config
--   aggregator, including the resource type, ID, (if available) the custom
--   resource name, the source account, and source region.
--   
--   <i>See:</i> <a>newAggregateResourceIdentifier</a> smart constructor.
data AggregateResourceIdentifier
AggregateResourceIdentifier' :: Maybe Text -> Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | The name of the Amazon Web Services resource.
[$sel:resourceName:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:sourceAccountId:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The source region where data is aggregated.
[$sel:sourceRegion:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The ID of the Amazon Web Services resource.
[$sel:resourceId:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The type of the Amazon Web Services resource.
[$sel:resourceType:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> ResourceType

-- | Create a value of <a>AggregateResourceIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceName</a> - The name of the
--   Amazon Web Services resource.
--   
--   <a>$sel:sourceAccountId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceAccountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:sourceRegion:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceRegion</a> - The source region
--   where data is aggregated.
--   
--   <a>$sel:resourceId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceId</a> - The ID of the Amazon
--   Web Services resource.
--   
--   <a>$sel:resourceType:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceType</a> - The type of the
--   Amazon Web Services resource.
newAggregateResourceIdentifier :: Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | The name of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceName :: Lens' AggregateResourceIdentifier (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateResourceIdentifier_sourceAccountId :: Lens' AggregateResourceIdentifier Text

-- | The source region where data is aggregated.
aggregateResourceIdentifier_sourceRegion :: Lens' AggregateResourceIdentifier Text

-- | The ID of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceId :: Lens' AggregateResourceIdentifier Text

-- | The type of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceType :: Lens' AggregateResourceIdentifier ResourceType
instance GHC.Generics.Generic Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance GHC.Show.Show Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance GHC.Read.Read Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance GHC.Classes.Eq Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance Control.DeepSeq.NFData Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.AggregateResourceIdentifier.AggregateResourceIdentifier


module Network.AWS.Config.Types.ResourceValueType
newtype ResourceValueType
ResourceValueType' :: Text -> ResourceValueType
[fromResourceValueType] :: ResourceValueType -> Text
pattern ResourceValueType_RESOURCE_ID :: ResourceValueType
instance Network.AWS.Data.XML.ToXML Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.XML.FromXML Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.Log.ToLog Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.Text.ToText Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Network.AWS.Data.Text.FromText Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance GHC.Classes.Ord Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance GHC.Read.Read Network.AWS.Config.Types.ResourceValueType.ResourceValueType
instance GHC.Show.Show Network.AWS.Config.Types.ResourceValueType.ResourceValueType


module Network.AWS.Config.Types.ResourceValue

-- | The dynamic value of the resource.
--   
--   <i>See:</i> <a>newResourceValue</a> smart constructor.
data ResourceValue
ResourceValue' :: ResourceValueType -> ResourceValue

-- | The value is a resource ID.
[$sel:value:ResourceValue'] :: ResourceValue -> ResourceValueType

-- | Create a value of <a>ResourceValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceValue'</a>, <a>resourceValue_value</a> - The
--   value is a resource ID.
newResourceValue :: ResourceValueType -> ResourceValue

-- | The value is a resource ID.
resourceValue_value :: Lens' ResourceValue ResourceValueType
instance GHC.Generics.Generic Network.AWS.Config.Types.ResourceValue.ResourceValue
instance GHC.Show.Show Network.AWS.Config.Types.ResourceValue.ResourceValue
instance GHC.Read.Read Network.AWS.Config.Types.ResourceValue.ResourceValue
instance GHC.Classes.Eq Network.AWS.Config.Types.ResourceValue.ResourceValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ResourceValue.ResourceValue
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ResourceValue.ResourceValue
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ResourceValue.ResourceValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ResourceValue.ResourceValue


module Network.AWS.Config.Types.RetentionConfiguration

-- | An object with the name of the retention configuration and the
--   retention period in days. The object stores the configuration for data
--   retention in Config.
--   
--   <i>See:</i> <a>newRetentionConfiguration</a> smart constructor.
data RetentionConfiguration
RetentionConfiguration' :: Text -> Natural -> RetentionConfiguration

-- | The name of the retention configuration object.
[$sel:name:RetentionConfiguration'] :: RetentionConfiguration -> Text

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
[$sel:retentionPeriodInDays:RetentionConfiguration'] :: RetentionConfiguration -> Natural

-- | Create a value of <a>RetentionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_name</a> - The name of the retention
--   configuration object.
--   
--   <a>$sel:retentionPeriodInDays:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_retentionPeriodInDays</a> - Number of days
--   Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
newRetentionConfiguration :: Text -> Natural -> RetentionConfiguration

-- | The name of the retention configuration object.
retentionConfiguration_name :: Lens' RetentionConfiguration Text

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
retentionConfiguration_retentionPeriodInDays :: Lens' RetentionConfiguration Natural
instance GHC.Generics.Generic Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance GHC.Show.Show Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance GHC.Read.Read Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance GHC.Classes.Eq Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RetentionConfiguration.RetentionConfiguration


module Network.AWS.Config.Types.Scope

-- | Defines which resources trigger an evaluation for an Config rule. The
--   scope can include one or more resource types, a combination of a tag
--   key and value, or a combination of one resource type and one resource
--   ID. Specify a scope to constrain which resources trigger an evaluation
--   for a rule. Otherwise, evaluations for the rule are triggered when any
--   resource in your recording group changes in configuration.
--   
--   <i>See:</i> <a>newScope</a> smart constructor.
data Scope
Scope' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Scope

-- | The resource types of only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. You can only specify
--   one type if you also specify a resource ID for
--   <tt>ComplianceResourceId</tt>.
[$sel:complianceResourceTypes:Scope'] :: Scope -> Maybe [Text]

-- | The ID of the only Amazon Web Services resource that you want to
--   trigger an evaluation for the rule. If you specify a resource ID, you
--   must specify one resource type for <tt>ComplianceResourceTypes</tt>.
[$sel:complianceResourceId:Scope'] :: Scope -> Maybe Text

-- | The tag value applied to only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. If you specify a value
--   for <tt>TagValue</tt>, you must also specify a value for
--   <tt>TagKey</tt>.
[$sel:tagValue:Scope'] :: Scope -> Maybe Text

-- | The tag key that is applied to only those Amazon Web Services
--   resources that you want to trigger an evaluation for the rule.
[$sel:tagKey:Scope'] :: Scope -> Maybe Text

-- | Create a value of <a>Scope</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceResourceTypes:Scope'</a>,
--   <a>scope_complianceResourceTypes</a> - The resource types of only
--   those Amazon Web Services resources that you want to trigger an
--   evaluation for the rule. You can only specify one type if you also
--   specify a resource ID for <tt>ComplianceResourceId</tt>.
--   
--   <a>$sel:complianceResourceId:Scope'</a>,
--   <a>scope_complianceResourceId</a> - The ID of the only Amazon Web
--   Services resource that you want to trigger an evaluation for the rule.
--   If you specify a resource ID, you must specify one resource type for
--   <tt>ComplianceResourceTypes</tt>.
--   
--   <a>$sel:tagValue:Scope'</a>, <a>scope_tagValue</a> - The tag value
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule. If you specify a value for
--   <tt>TagValue</tt>, you must also specify a value for <tt>TagKey</tt>.
--   
--   <a>$sel:tagKey:Scope'</a>, <a>scope_tagKey</a> - The tag key that is
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule.
newScope :: Scope

-- | The resource types of only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. You can only specify
--   one type if you also specify a resource ID for
--   <tt>ComplianceResourceId</tt>.
scope_complianceResourceTypes :: Lens' Scope (Maybe [Text])

-- | The ID of the only Amazon Web Services resource that you want to
--   trigger an evaluation for the rule. If you specify a resource ID, you
--   must specify one resource type for <tt>ComplianceResourceTypes</tt>.
scope_complianceResourceId :: Lens' Scope (Maybe Text)

-- | The tag value applied to only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. If you specify a value
--   for <tt>TagValue</tt>, you must also specify a value for
--   <tt>TagKey</tt>.
scope_tagValue :: Lens' Scope (Maybe Text)

-- | The tag key that is applied to only those Amazon Web Services
--   resources that you want to trigger an evaluation for the rule.
scope_tagKey :: Lens' Scope (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.Scope.Scope
instance GHC.Show.Show Network.AWS.Config.Types.Scope.Scope
instance GHC.Read.Read Network.AWS.Config.Types.Scope.Scope
instance GHC.Classes.Eq Network.AWS.Config.Types.Scope.Scope
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Scope.Scope
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Scope.Scope
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Scope.Scope
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.Scope.Scope


module Network.AWS.Config.Types.SourceDetail

-- | Provides the source and the message types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic. You can specify the
--   parameter values for <tt>SourceDetail</tt> only for custom rules.
--   
--   <i>See:</i> <a>newSourceDetail</a> smart constructor.
data SourceDetail
SourceDetail' :: Maybe MessageType -> Maybe MaximumExecutionFrequency -> Maybe EventSource -> SourceDetail

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
[$sel:messageType:SourceDetail'] :: SourceDetail -> Maybe MessageType

-- | The frequency at which you want Config to run evaluations for a custom
--   rule with a periodic trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
[$sel:maximumExecutionFrequency:SourceDetail'] :: SourceDetail -> Maybe MaximumExecutionFrequency

-- | The source of the event, such as an Amazon Web Services service, that
--   triggers Config to evaluate your Amazon Web Services resources.
[$sel:eventSource:SourceDetail'] :: SourceDetail -> Maybe EventSource

-- | Create a value of <a>SourceDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageType:SourceDetail'</a>, <a>sourceDetail_messageType</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
--   
--   <a>$sel:maximumExecutionFrequency:SourceDetail'</a>,
--   <a>sourceDetail_maximumExecutionFrequency</a> - The frequency at which
--   you want Config to run evaluations for a custom rule with a periodic
--   trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
--   
--   <a>$sel:eventSource:SourceDetail'</a>, <a>sourceDetail_eventSource</a>
--   - The source of the event, such as an Amazon Web Services service,
--   that triggers Config to evaluate your Amazon Web Services resources.
newSourceDetail :: SourceDetail

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
sourceDetail_messageType :: Lens' SourceDetail (Maybe MessageType)

-- | The frequency at which you want Config to run evaluations for a custom
--   rule with a periodic trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
sourceDetail_maximumExecutionFrequency :: Lens' SourceDetail (Maybe MaximumExecutionFrequency)

-- | The source of the event, such as an Amazon Web Services service, that
--   triggers Config to evaluate your Amazon Web Services resources.
sourceDetail_eventSource :: Lens' SourceDetail (Maybe EventSource)
instance GHC.Generics.Generic Network.AWS.Config.Types.SourceDetail.SourceDetail
instance GHC.Show.Show Network.AWS.Config.Types.SourceDetail.SourceDetail
instance GHC.Read.Read Network.AWS.Config.Types.SourceDetail.SourceDetail
instance GHC.Classes.Eq Network.AWS.Config.Types.SourceDetail.SourceDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.SourceDetail.SourceDetail
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.SourceDetail.SourceDetail
instance Control.DeepSeq.NFData Network.AWS.Config.Types.SourceDetail.SourceDetail
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.SourceDetail.SourceDetail


module Network.AWS.Config.Types.Source

-- | Provides the Config rule owner (Amazon Web Services or customer), the
--   rule identifier, and the events that trigger the evaluation of your
--   Amazon Web Services resources.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe [SourceDetail] -> Owner -> Text -> Source

-- | Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
[$sel:sourceDetails:Source'] :: Source -> Maybe [SourceDetail]

-- | Indicates whether Amazon Web Services or the customer owns and manages
--   the Config rule.
[$sel:owner:Source'] :: Source -> Owner

-- | For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
[$sel:sourceIdentifier:Source'] :: Source -> Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceDetails:Source'</a>, <a>source_sourceDetails</a> -
--   Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
--   
--   <a>$sel:owner:Source'</a>, <a>source_owner</a> - Indicates whether
--   Amazon Web Services or the customer owns and manages the Config rule.
--   
--   <a>$sel:sourceIdentifier:Source'</a>, <a>source_sourceIdentifier</a> -
--   For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
newSource :: Owner -> Text -> Source

-- | Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
source_sourceDetails :: Lens' Source (Maybe [SourceDetail])

-- | Indicates whether Amazon Web Services or the customer owns and manages
--   the Config rule.
source_owner :: Lens' Source Owner

-- | For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
source_sourceIdentifier :: Lens' Source Text
instance GHC.Generics.Generic Network.AWS.Config.Types.Source.Source
instance GHC.Show.Show Network.AWS.Config.Types.Source.Source
instance GHC.Read.Read Network.AWS.Config.Types.Source.Source
instance GHC.Classes.Eq Network.AWS.Config.Types.Source.Source
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Source.Source
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Source.Source
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Source.Source
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.Source.Source


module Network.AWS.Config.Types.ConfigRule

-- | An Config rule represents an Lambda function that you create for a
--   custom rule or a predefined function for an Config managed rule. The
--   function evaluates configuration items to assess whether your Amazon
--   Web Services resources comply with your desired configurations. This
--   function can run when Config detects a configuration change to an
--   Amazon Web Services resource and at a periodic frequency that you
--   choose (for example, every 24 hours).
--   
--   You can use the Amazon Web Services CLI and Amazon Web Services SDKs
--   if you want to create a rule that triggers evaluations for your
--   resources when Config delivers the configuration snapshot. For more
--   information, see ConfigSnapshotDeliveryProperties.
--   
--   For more information about developing and using Config rules, see
--   <a>Evaluating Amazon Web Services resource Configurations with
--   Config</a> in the <i>Config Developer Guide</i>.
--   
--   <i>See:</i> <a>newConfigRule</a> smart constructor.
data ConfigRule
ConfigRule' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe Scope -> Maybe ConfigRuleState -> Maybe Text -> Maybe Text -> Source -> ConfigRule

-- | A string, in JSON format, that is passed to the Config rule Lambda
--   function.
[$sel:inputParameters:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The name that you assign to the Config rule. The name is required if
--   you are adding a new rule.
[$sel:configRuleName:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
[$sel:createdBy:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You can specify a value for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:ConfigRule'] :: ConfigRule -> Maybe MaximumExecutionFrequency

-- | The ID of the Config rule.
[$sel:configRuleId:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Defines which resources can trigger an evaluation for the rule. The
--   scope can include one or more resource types, a combination of one
--   resource type and one resource ID, or a combination of a tag key and
--   value. Specify a scope to constrain the resources that can trigger an
--   evaluation for the rule. If you do not specify a scope, evaluations
--   are triggered when any resource in the recording group changes.
--   
--   The scope can be empty.
[$sel:scope:ConfigRule'] :: ConfigRule -> Maybe Scope

-- | Indicates whether the Config rule is active or is currently being
--   deleted by Config. It can also indicate the evaluation status for the
--   Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
[$sel:configRuleState:ConfigRule'] :: ConfigRule -> Maybe ConfigRuleState

-- | The description that you provide for the Config rule.
[$sel:description:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Config rule.
[$sel:configRuleArn:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Provides the rule owner (Amazon Web Services or customer), the rule
--   identifier, and the notifications that cause the function to evaluate
--   your Amazon Web Services resources.
[$sel:source:ConfigRule'] :: ConfigRule -> Source

-- | Create a value of <a>ConfigRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:ConfigRule'</a>,
--   <a>configRule_inputParameters</a> - A string, in JSON format, that is
--   passed to the Config rule Lambda function.
--   
--   <a>$sel:configRuleName:ConfigRule'</a>,
--   <a>configRule_configRuleName</a> - The name that you assign to the
--   Config rule. The name is required if you are adding a new rule.
--   
--   <a>$sel:createdBy:ConfigRule'</a>, <a>configRule_createdBy</a> -
--   Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
--   
--   <a>$sel:maximumExecutionFrequency:ConfigRule'</a>,
--   <a>configRule_maximumExecutionFrequency</a> - The maximum frequency
--   with which Config runs evaluations for a rule. You can specify a value
--   for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:configRuleId:ConfigRule'</a>, <a>configRule_configRuleId</a> -
--   The ID of the Config rule.
--   
--   <a>$sel:scope:ConfigRule'</a>, <a>configRule_scope</a> - Defines which
--   resources can trigger an evaluation for the rule. The scope can
--   include one or more resource types, a combination of one resource type
--   and one resource ID, or a combination of a tag key and value. Specify
--   a scope to constrain the resources that can trigger an evaluation for
--   the rule. If you do not specify a scope, evaluations are triggered
--   when any resource in the recording group changes.
--   
--   The scope can be empty.
--   
--   <a>$sel:configRuleState:ConfigRule'</a>,
--   <a>configRule_configRuleState</a> - Indicates whether the Config rule
--   is active or is currently being deleted by Config. It can also
--   indicate the evaluation status for the Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
--   
--   <a>$sel:description:ConfigRule'</a>, <a>configRule_description</a> -
--   The description that you provide for the Config rule.
--   
--   <a>$sel:configRuleArn:ConfigRule'</a>, <a>configRule_configRuleArn</a>
--   - The Amazon Resource Name (ARN) of the Config rule.
--   
--   <a>$sel:source:ConfigRule'</a>, <a>configRule_source</a> - Provides
--   the rule owner (Amazon Web Services or customer), the rule identifier,
--   and the notifications that cause the function to evaluate your Amazon
--   Web Services resources.
newConfigRule :: Source -> ConfigRule

-- | A string, in JSON format, that is passed to the Config rule Lambda
--   function.
configRule_inputParameters :: Lens' ConfigRule (Maybe Text)

-- | The name that you assign to the Config rule. The name is required if
--   you are adding a new rule.
configRule_configRuleName :: Lens' ConfigRule (Maybe Text)

-- | Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
configRule_createdBy :: Lens' ConfigRule (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You can specify a value for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
configRule_maximumExecutionFrequency :: Lens' ConfigRule (Maybe MaximumExecutionFrequency)

-- | The ID of the Config rule.
configRule_configRuleId :: Lens' ConfigRule (Maybe Text)

-- | Defines which resources can trigger an evaluation for the rule. The
--   scope can include one or more resource types, a combination of one
--   resource type and one resource ID, or a combination of a tag key and
--   value. Specify a scope to constrain the resources that can trigger an
--   evaluation for the rule. If you do not specify a scope, evaluations
--   are triggered when any resource in the recording group changes.
--   
--   The scope can be empty.
configRule_scope :: Lens' ConfigRule (Maybe Scope)

-- | Indicates whether the Config rule is active or is currently being
--   deleted by Config. It can also indicate the evaluation status for the
--   Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
configRule_configRuleState :: Lens' ConfigRule (Maybe ConfigRuleState)

-- | The description that you provide for the Config rule.
configRule_description :: Lens' ConfigRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRule_configRuleArn :: Lens' ConfigRule (Maybe Text)

-- | Provides the rule owner (Amazon Web Services or customer), the rule
--   identifier, and the notifications that cause the function to evaluate
--   your Amazon Web Services resources.
configRule_source :: Lens' ConfigRule Source
instance GHC.Generics.Generic Network.AWS.Config.Types.ConfigRule.ConfigRule
instance GHC.Show.Show Network.AWS.Config.Types.ConfigRule.ConfigRule
instance GHC.Read.Read Network.AWS.Config.Types.ConfigRule.ConfigRule
instance GHC.Classes.Eq Network.AWS.Config.Types.ConfigRule.ConfigRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ConfigRule.ConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ConfigRule.ConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ConfigRule.ConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ConfigRule.ConfigRule


module Network.AWS.Config.Types.SsmControls

-- | Amazon Web Services Systems Manager (SSM) specific remediation
--   controls.
--   
--   <i>See:</i> <a>newSsmControls</a> smart constructor.
data SsmControls
SsmControls' :: Maybe Natural -> Maybe Natural -> SsmControls

-- | The maximum percentage of remediation actions allowed to run in
--   parallel on the non-compliant resources for that specific rule. You
--   can specify a percentage, such as 10%. The default value is 10.
[$sel:concurrentExecutionRatePercentage:SsmControls'] :: SsmControls -> Maybe Natural

-- | The percentage of errors that are allowed before SSM stops running
--   automations on non-compliant resources for that specific rule. You can
--   specify a percentage of errors, for example 10%. If you do not
--   specifiy a percentage, the default is 50%. For example, if you set the
--   ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops
--   running the automations when the fifth error is received.
[$sel:errorPercentage:SsmControls'] :: SsmControls -> Maybe Natural

-- | Create a value of <a>SsmControls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutionRatePercentage:SsmControls'</a>,
--   <a>ssmControls_concurrentExecutionRatePercentage</a> - The maximum
--   percentage of remediation actions allowed to run in parallel on the
--   non-compliant resources for that specific rule. You can specify a
--   percentage, such as 10%. The default value is 10.
--   
--   <a>$sel:errorPercentage:SsmControls'</a>,
--   <a>ssmControls_errorPercentage</a> - The percentage of errors that are
--   allowed before SSM stops running automations on non-compliant
--   resources for that specific rule. You can specify a percentage of
--   errors, for example 10%. If you do not specifiy a percentage, the
--   default is 50%. For example, if you set the ErrorPercentage to 40% for
--   10 non-compliant resources, then SSM stops running the automations
--   when the fifth error is received.
newSsmControls :: SsmControls

-- | The maximum percentage of remediation actions allowed to run in
--   parallel on the non-compliant resources for that specific rule. You
--   can specify a percentage, such as 10%. The default value is 10.
ssmControls_concurrentExecutionRatePercentage :: Lens' SsmControls (Maybe Natural)

-- | The percentage of errors that are allowed before SSM stops running
--   automations on non-compliant resources for that specific rule. You can
--   specify a percentage of errors, for example 10%. If you do not
--   specifiy a percentage, the default is 50%. For example, if you set the
--   ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops
--   running the automations when the fifth error is received.
ssmControls_errorPercentage :: Lens' SsmControls (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Config.Types.SsmControls.SsmControls
instance GHC.Show.Show Network.AWS.Config.Types.SsmControls.SsmControls
instance GHC.Read.Read Network.AWS.Config.Types.SsmControls.SsmControls
instance GHC.Classes.Eq Network.AWS.Config.Types.SsmControls.SsmControls
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.SsmControls.SsmControls
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.SsmControls.SsmControls
instance Control.DeepSeq.NFData Network.AWS.Config.Types.SsmControls.SsmControls
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.SsmControls.SsmControls


module Network.AWS.Config.Types.ExecutionControls

-- | The controls that Config uses for executing remediations.
--   
--   <i>See:</i> <a>newExecutionControls</a> smart constructor.
data ExecutionControls
ExecutionControls' :: Maybe SsmControls -> ExecutionControls

-- | A SsmControls object.
[$sel:ssmControls:ExecutionControls'] :: ExecutionControls -> Maybe SsmControls

-- | Create a value of <a>ExecutionControls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssmControls:ExecutionControls'</a>,
--   <a>executionControls_ssmControls</a> - A SsmControls object.
newExecutionControls :: ExecutionControls

-- | A SsmControls object.
executionControls_ssmControls :: Lens' ExecutionControls (Maybe SsmControls)
instance GHC.Generics.Generic Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance GHC.Show.Show Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance GHC.Read.Read Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance GHC.Classes.Eq Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance Control.DeepSeq.NFData Network.AWS.Config.Types.ExecutionControls.ExecutionControls
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.ExecutionControls.ExecutionControls


module Network.AWS.Config.Types.StaticValue

-- | The static value of the resource.
--   
--   <i>See:</i> <a>newStaticValue</a> smart constructor.
data StaticValue
StaticValue' :: [Text] -> StaticValue

-- | A list of values. For example, the ARN of the assumed role.
[$sel:values:StaticValue'] :: StaticValue -> [Text]

-- | Create a value of <a>StaticValue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:StaticValue'</a>, <a>staticValue_values</a> - A list of
--   values. For example, the ARN of the assumed role.
newStaticValue :: StaticValue

-- | A list of values. For example, the ARN of the assumed role.
staticValue_values :: Lens' StaticValue [Text]
instance GHC.Generics.Generic Network.AWS.Config.Types.StaticValue.StaticValue
instance GHC.Show.Show Network.AWS.Config.Types.StaticValue.StaticValue
instance GHC.Read.Read Network.AWS.Config.Types.StaticValue.StaticValue
instance GHC.Classes.Eq Network.AWS.Config.Types.StaticValue.StaticValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.StaticValue.StaticValue
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.StaticValue.StaticValue
instance Control.DeepSeq.NFData Network.AWS.Config.Types.StaticValue.StaticValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.StaticValue.StaticValue


module Network.AWS.Config.Types.RemediationParameterValue

-- | The value is either a dynamic (resource) value or a static value. You
--   must select either a dynamic value or a static value.
--   
--   <i>See:</i> <a>newRemediationParameterValue</a> smart constructor.
data RemediationParameterValue
RemediationParameterValue' :: Maybe StaticValue -> Maybe ResourceValue -> RemediationParameterValue

-- | The value is static and does not change at run-time.
[$sel:staticValue:RemediationParameterValue'] :: RemediationParameterValue -> Maybe StaticValue

-- | The value is dynamic and changes at run-time.
[$sel:resourceValue:RemediationParameterValue'] :: RemediationParameterValue -> Maybe ResourceValue

-- | Create a value of <a>RemediationParameterValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_staticValue</a> - The value is static and
--   does not change at run-time.
--   
--   <a>$sel:resourceValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_resourceValue</a> - The value is dynamic
--   and changes at run-time.
newRemediationParameterValue :: RemediationParameterValue

-- | The value is static and does not change at run-time.
remediationParameterValue_staticValue :: Lens' RemediationParameterValue (Maybe StaticValue)

-- | The value is dynamic and changes at run-time.
remediationParameterValue_resourceValue :: Lens' RemediationParameterValue (Maybe ResourceValue)
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance GHC.Show.Show Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance GHC.Read.Read Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationParameterValue.RemediationParameterValue


module Network.AWS.Config.Types.RemediationConfiguration

-- | An object that represents the details about the remediation
--   configuration that includes the remediation action, parameters, and
--   data to execute the action.
--   
--   <i>See:</i> <a>newRemediationConfiguration</a> smart constructor.
data RemediationConfiguration
RemediationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe ExecutionControls -> Maybe (HashMap Text RemediationParameterValue) -> Maybe Natural -> Maybe Text -> Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | The type of a resource.
[$sel:resourceType:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | Amazon Resource Name (ARN) of remediation configuration.
[$sel:arn:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | The remediation is triggered automatically.
[$sel:automatic:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Bool

-- | Name of the service that owns the service linked rule, if applicable.
[$sel:createdByService:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | Maximum time in seconds that Config runs auto-remediation. If you do
--   not select a number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
[$sel:retryAttemptSeconds:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Natural

-- | An ExecutionControls object.
[$sel:executionControls:RemediationConfiguration'] :: RemediationConfiguration -> Maybe ExecutionControls

-- | An object of the RemediationParameterValue.
[$sel:parameters:RemediationConfiguration'] :: RemediationConfiguration -> Maybe (HashMap Text RemediationParameterValue)

-- | The maximum number of failed attempts for auto-remediation. If you do
--   not select a number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
[$sel:maximumAutomaticAttempts:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Natural

-- | Version of the target. For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
[$sel:targetVersion:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | The name of the Config rule.
[$sel:configRuleName:RemediationConfiguration'] :: RemediationConfiguration -> Text

-- | The type of the target. Target executes remediation. For example, SSM
--   document.
[$sel:targetType:RemediationConfiguration'] :: RemediationConfiguration -> RemediationTargetType

-- | Target ID is the name of the public document.
[$sel:targetId:RemediationConfiguration'] :: RemediationConfiguration -> Text

-- | Create a value of <a>RemediationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_resourceType</a> - The type of a resource.
--   
--   <a>$sel:arn:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_arn</a> - Amazon Resource Name (ARN) of
--   remediation configuration.
--   
--   <a>$sel:automatic:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_automatic</a> - The remediation is
--   triggered automatically.
--   
--   <a>$sel:createdByService:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_createdByService</a> - Name of the service
--   that owns the service linked rule, if applicable.
--   
--   <a>$sel:retryAttemptSeconds:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_retryAttemptSeconds</a> - Maximum time in
--   seconds that Config runs auto-remediation. If you do not select a
--   number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
--   
--   <a>$sel:executionControls:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_executionControls</a> - An
--   ExecutionControls object.
--   
--   <a>$sel:parameters:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_parameters</a> - An object of the
--   RemediationParameterValue.
--   
--   <a>$sel:maximumAutomaticAttempts:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_maximumAutomaticAttempts</a> - The maximum
--   number of failed attempts for auto-remediation. If you do not select a
--   number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
--   
--   <a>$sel:targetVersion:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetVersion</a> - Version of the target.
--   For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
--   
--   <a>$sel:configRuleName:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:targetType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetType</a> - The type of the target.
--   Target executes remediation. For example, SSM document.
--   
--   <a>$sel:targetId:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetId</a> - Target ID is the name of
--   the public document.
newRemediationConfiguration :: Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | The type of a resource.
remediationConfiguration_resourceType :: Lens' RemediationConfiguration (Maybe Text)

-- | Amazon Resource Name (ARN) of remediation configuration.
remediationConfiguration_arn :: Lens' RemediationConfiguration (Maybe Text)

-- | The remediation is triggered automatically.
remediationConfiguration_automatic :: Lens' RemediationConfiguration (Maybe Bool)

-- | Name of the service that owns the service linked rule, if applicable.
remediationConfiguration_createdByService :: Lens' RemediationConfiguration (Maybe Text)

-- | Maximum time in seconds that Config runs auto-remediation. If you do
--   not select a number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
remediationConfiguration_retryAttemptSeconds :: Lens' RemediationConfiguration (Maybe Natural)

-- | An ExecutionControls object.
remediationConfiguration_executionControls :: Lens' RemediationConfiguration (Maybe ExecutionControls)

-- | An object of the RemediationParameterValue.
remediationConfiguration_parameters :: Lens' RemediationConfiguration (Maybe (HashMap Text RemediationParameterValue))

-- | The maximum number of failed attempts for auto-remediation. If you do
--   not select a number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
remediationConfiguration_maximumAutomaticAttempts :: Lens' RemediationConfiguration (Maybe Natural)

-- | Version of the target. For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
remediationConfiguration_targetVersion :: Lens' RemediationConfiguration (Maybe Text)

-- | The name of the Config rule.
remediationConfiguration_configRuleName :: Lens' RemediationConfiguration Text

-- | The type of the target. Target executes remediation. For example, SSM
--   document.
remediationConfiguration_targetType :: Lens' RemediationConfiguration RemediationTargetType

-- | Target ID is the name of the public document.
remediationConfiguration_targetId :: Lens' RemediationConfiguration Text
instance GHC.Generics.Generic Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance GHC.Show.Show Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance GHC.Read.Read Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance GHC.Classes.Eq Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.RemediationConfiguration.RemediationConfiguration


module Network.AWS.Config.Types.FailedRemediationBatch

-- | List of each of the failed remediations with specific reasons.
--   
--   <i>See:</i> <a>newFailedRemediationBatch</a> smart constructor.
data FailedRemediationBatch
FailedRemediationBatch' :: Maybe Text -> Maybe [RemediationConfiguration] -> FailedRemediationBatch

-- | Returns a failure message. For example, the resource is already
--   compliant.
[$sel:failureMessage:FailedRemediationBatch'] :: FailedRemediationBatch -> Maybe Text

-- | Returns remediation configurations of the failed items.
[$sel:failedItems:FailedRemediationBatch'] :: FailedRemediationBatch -> Maybe [RemediationConfiguration]

-- | Create a value of <a>FailedRemediationBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failureMessage</a> - Returns a failure
--   message. For example, the resource is already compliant.
--   
--   <a>$sel:failedItems:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failedItems</a> - Returns remediation
--   configurations of the failed items.
newFailedRemediationBatch :: FailedRemediationBatch

-- | Returns a failure message. For example, the resource is already
--   compliant.
failedRemediationBatch_failureMessage :: Lens' FailedRemediationBatch (Maybe Text)

-- | Returns remediation configurations of the failed items.
failedRemediationBatch_failedItems :: Lens' FailedRemediationBatch (Maybe [RemediationConfiguration])
instance GHC.Generics.Generic Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance GHC.Show.Show Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance GHC.Read.Read Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance GHC.Classes.Eq Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch
instance Control.DeepSeq.NFData Network.AWS.Config.Types.FailedRemediationBatch.FailedRemediationBatch


module Network.AWS.Config.Types.StatusDetailFilters

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization config rule.
--   
--   <i>See:</i> <a>newStatusDetailFilters</a> smart constructor.
data StatusDetailFilters
StatusDetailFilters' :: Maybe MemberAccountRuleStatus -> Maybe Text -> StatusDetailFilters

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
[$sel:memberAccountRuleStatus:StatusDetailFilters'] :: StatusDetailFilters -> Maybe MemberAccountRuleStatus

-- | The 12-digit account ID of the member account within an organization.
[$sel:accountId:StatusDetailFilters'] :: StatusDetailFilters -> Maybe Text

-- | Create a value of <a>StatusDetailFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberAccountRuleStatus:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_accountId</a> - The 12-digit account ID of the
--   member account within an organization.
newStatusDetailFilters :: StatusDetailFilters

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
statusDetailFilters_memberAccountRuleStatus :: Lens' StatusDetailFilters (Maybe MemberAccountRuleStatus)

-- | The 12-digit account ID of the member account within an organization.
statusDetailFilters_accountId :: Lens' StatusDetailFilters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance GHC.Show.Show Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance GHC.Read.Read Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance GHC.Classes.Eq Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance Control.DeepSeq.NFData Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.StatusDetailFilters.StatusDetailFilters


module Network.AWS.Config.Types.StoredQuery

-- | Provides the details of a stored query.
--   
--   <i>See:</i> <a>newStoredQuery</a> smart constructor.
data StoredQuery
StoredQuery' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> StoredQuery

-- | The ID of the query.
[$sel:queryId:StoredQuery'] :: StoredQuery -> Maybe Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
[$sel:queryArn:StoredQuery'] :: StoredQuery -> Maybe Text

-- | The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
[$sel:expression:StoredQuery'] :: StoredQuery -> Maybe Text

-- | A unique description for the query.
[$sel:description:StoredQuery'] :: StoredQuery -> Maybe Text

-- | The name of the query.
[$sel:queryName:StoredQuery'] :: StoredQuery -> Text

-- | Create a value of <a>StoredQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StoredQuery'</a>, <a>storedQuery_queryId</a> - The ID
--   of the query.
--   
--   <a>$sel:queryArn:StoredQuery'</a>, <a>storedQuery_queryArn</a> -
--   Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:expression:StoredQuery'</a>, <a>storedQuery_expression</a> -
--   The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
--   
--   <a>$sel:description:StoredQuery'</a>, <a>storedQuery_description</a> -
--   A unique description for the query.
--   
--   <a>$sel:queryName:StoredQuery'</a>, <a>storedQuery_queryName</a> - The
--   name of the query.
newStoredQuery :: Text -> StoredQuery

-- | The ID of the query.
storedQuery_queryId :: Lens' StoredQuery (Maybe Text)

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQuery_queryArn :: Lens' StoredQuery (Maybe Text)

-- | The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
storedQuery_expression :: Lens' StoredQuery (Maybe Text)

-- | A unique description for the query.
storedQuery_description :: Lens' StoredQuery (Maybe Text)

-- | The name of the query.
storedQuery_queryName :: Lens' StoredQuery Text
instance GHC.Generics.Generic Network.AWS.Config.Types.StoredQuery.StoredQuery
instance GHC.Show.Show Network.AWS.Config.Types.StoredQuery.StoredQuery
instance GHC.Read.Read Network.AWS.Config.Types.StoredQuery.StoredQuery
instance GHC.Classes.Eq Network.AWS.Config.Types.StoredQuery.StoredQuery
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.StoredQuery.StoredQuery
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.StoredQuery.StoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.Types.StoredQuery.StoredQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.StoredQuery.StoredQuery


module Network.AWS.Config.Types.StoredQueryMetadata

-- | Returns details of a specific query.
--   
--   <i>See:</i> <a>newStoredQueryMetadata</a> smart constructor.
data StoredQueryMetadata
StoredQueryMetadata' :: Maybe Text -> Text -> Text -> Text -> StoredQueryMetadata

-- | A unique description for the query.
[$sel:description:StoredQueryMetadata'] :: StoredQueryMetadata -> Maybe Text

-- | The ID of the query.
[$sel:queryId:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
[$sel:queryArn:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | The name of the query.
[$sel:queryName:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | Create a value of <a>StoredQueryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_description</a> - A unique description for the
--   query.
--   
--   <a>$sel:queryId:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryId</a> - The ID of the query.
--   
--   <a>$sel:queryArn:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryArn</a> - Amazon Resource Name (ARN) of
--   the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:queryName:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryName</a> - The name of the query.
newStoredQueryMetadata :: Text -> Text -> Text -> StoredQueryMetadata

-- | A unique description for the query.
storedQueryMetadata_description :: Lens' StoredQueryMetadata (Maybe Text)

-- | The ID of the query.
storedQueryMetadata_queryId :: Lens' StoredQueryMetadata Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQueryMetadata_queryArn :: Lens' StoredQueryMetadata Text

-- | The name of the query.
storedQueryMetadata_queryName :: Lens' StoredQueryMetadata Text
instance GHC.Generics.Generic Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance GHC.Show.Show Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance GHC.Read.Read Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance GHC.Classes.Eq Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata
instance Control.DeepSeq.NFData Network.AWS.Config.Types.StoredQueryMetadata.StoredQueryMetadata


module Network.AWS.Config.Types.Tag

-- | The tags for the resource. The metadata that you apply to a resource
--   to help you categorize and organize them. Each tag consists of a key
--   and an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key).
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that make up a tag. A key is a general label that acts like a category
--   for more specific tag values.
newTag :: Tag

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
tag_value :: Lens' Tag (Maybe Text)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Config.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.Config.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.Config.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.Config.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Config.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.Config.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.Config.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.Types.Tag.Tag


module Network.AWS.Config.Types

-- | API version <tt>2014-11-12</tt> of the Amazon Config SDK
--   configuration.
defaultService :: Service

-- | You specified an Config rule without a remediation configuration.
_NoSuchRemediationConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified time range is not valid. The earlier time is not
--   chronologically before the later time.
_InvalidTimeRangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config organization conformance pack that you passed in the filter
--   does not exist.
--   
--   For DeleteOrganizationConformancePack, you tried to delete an
--   organization conformance pack that does not exist.
_NoSuchOrganizationConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon SNS topic does not exist.
_InvalidSNSTopicARNException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config throws an exception if the recording group does not contain a
--   valid list of resource types. Invalid values might also be incorrectly
--   formatted.
_InvalidRecordingGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The syntax of the query is incorrect.
_InvalidExpressionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Organization is no longer available.
_NoAvailableOrganizationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested action is not valid.
--   
--   For PutStoredQuery, you will see this exception if there are missing
--   required fields or if the input value fails the validation, or if you
--   are trying to create more than 300 queries.
--   
--   For GetStoredQuery, ListStoredQuery, and DeleteStoredQuery you will
--   see this exception if there are missing required fields or if the
--   input value fails the validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | For <tt>PutConfigurationAggregator</tt> API, you can see this
--   exception for the following reasons:
--   
--   <ul>
--   <li>No permission to call <tt>EnableAWSServiceAccess</tt> API</li>
--   <li>The configuration aggregator cannot be updated because your Amazon
--   Web Services Organization management account or the delegated
--   administrator role changed. Delete this aggregator and create a new
--   one with the current Amazon Web Services Organization.</li>
--   <li>The configuration aggregator is associated with a previous Amazon
--   Web Services Organization and Config cannot aggregate data with
--   current Amazon Web Services Organization. Delete this aggregator and
--   create a new one with the current Amazon Web Services
--   Organization.</li>
--   <li>You are not a registered delegated administrator for Config with
--   permissions to call <tt>ListDelegatedAdministrators</tt> API. Ensure
--   that the management account registers delagated administrator for
--   Config service principle name before the delegated administrator
--   creates an aggregator.</li>
--   </ul>
--   
--   For all <tt>OrganizationConfigRule</tt> and
--   <tt>OrganizationConformancePack</tt> APIs, Config throws an exception
--   if APIs are called from member accounts. All APIs must be called from
--   organization master account.
_OrganizationAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a configuration aggregator that does not exist.
_NoSuchConfigurationAggregatorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided a null or empty role ARN.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration item size is outside the allowable range.
_OversizedConfigurationItemException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two users are trying to modify the same query at the same time. Wait
--   for a moment and try again.
_ResourceConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot delete the delivery channel you specified because the
--   configuration recorder is running.
_LastDeliveryChannelDeleteFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a template that is not valid or supported.
_ConformancePackTemplateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You tried to delete a remediation exception that does not exist.
_NoSuchRemediationExceptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified limit is outside the allowable range.
_InvalidLimitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (6) of the number of organization
--   conformance packs in an account (6 conformance pack with 25 Config
--   rules per pack per account).
_MaxNumberOfOrganizationConformancePacksExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delivery channel name is not valid.
_InvalidDeliveryChannelNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of tags you can use. You have
--   more than 50 tags.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon KMS Key ARN is not valid.
_InvalidS3KmsKeyArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the specified parameters are invalid. Verify that your
--   parameters are valid and try again.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified <tt>ResultToken</tt> is invalid.
_InvalidResultTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config rule that you passed in the filter does not exist.
_NoSuchConfigRuleInConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You specified one or more organization config rules that do not exist.
_NoSuchOrganizationConfigRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a delivery channel that does not exist.
_NoSuchDeliveryChannelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more Config rules in the request are invalid. Verify that the
--   rule names are correct and try again.
_NoSuchConfigRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You specified one or more conformance packs that do not exist.
_NoSuchConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a retention configuration that does not exist.
_NoSuchRetentionConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Remediation action is in progress. You can either cancel execution in
--   Amazon Web Services Systems Manager or wait and try again later.
_RemediationInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config resource cannot be created because your organization does not
--   have all features enabled.
_OrganizationAllFeaturesNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates one of the following errors:
--   
--   <ul>
--   <li>For PutConfigRule, the rule cannot be created because the IAM role
--   assigned to Config lacks permissions to perform the config:Put*
--   action.</li>
--   <li>For PutConfigRule, the Lambda function cannot be invoked. Check
--   the function ARN, and check the function's permissions.</li>
--   <li>For PutOrganizationConfigRule, organization config rule cannot be
--   created because you do not have permissions to call IAM
--   <tt>GetRole</tt> action or create a service linked role.</li>
--   <li>For PutConformancePack and PutOrganizationConformancePack, a
--   conformance pack cannot be created because you do not have
--   permissions:<ul><li>To call IAM <tt>GetRole</tt> action or create a
--   service linked role.</li><li>To read Amazon S3 bucket.</li></ul></li>
--   </ul>
_InsufficientPermissionsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a resource that is either unknown or has not been
--   discovered.
_ResourceNotDiscoveredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified next token is invalid. Specify the <tt>nextToken</tt>
--   string that was returned in the previous response to get the next page
--   of results.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed to add the retention configuration because a retention
--   configuration with that name already exists.
_MaxNumberOfRetentionConfigurationsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (6) of the number of conformance packs in
--   an account (6 conformance pack with 25 Config rules per pack).
_MaxNumberOfConformancePacksExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed to add the Config rule because the account already contains the
--   maximum number of 150 rules. Consider deleting any deactivated rules
--   before you add new rules.
_MaxNumberOfConfigRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There are no configuration recorders available to provide the role
--   needed to describe your resources. Create a configuration recorder.
_NoAvailableConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon S3 bucket does not exist.
_NoSuchBucketException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (100,000) of active custom resource types
--   in your account. Delete unused resources using
--   <tt>DeleteResourceConfig</tt>.
_MaxActiveResourcesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no delivery channel available to record configurations.
_NoAvailableDeliveryChannelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a template that is not valid or supported.
_OrganizationConformancePackTemplateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided a configuration recorder name that is not valid.
_InvalidConfigurationRecorderNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no configuration recorder running.
_NoRunningConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of recorders you can create.
_MaxNumberOfConfigurationRecordersExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your Amazon S3 bucket policy does not permit Config to write to it.
_InsufficientDeliveryPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of delivery channels you can
--   create.
_MaxNumberOfDeliveryChannelsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of organization config rules
--   you can create.
_MaxNumberOfOrganizationConfigRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a resource that does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a configuration recorder that does not exist.
_NoSuchConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon S3 key prefix is not valid.
_InvalidS3KeyPrefixException :: AsError a => Getting (First ServiceError) a ServiceError

-- | For <tt>StartConfigRulesEvaluation</tt> API, this exception is thrown
--   if an evaluation is in progress or if you call the
--   StartConfigRulesEvaluation API more than once per minute.
--   
--   For <tt>PutConfigurationAggregator</tt> API, this exception is thrown
--   if the number of accounts and aggregators exceeds the limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You see this exception in the following cases:
--   
--   <ul>
--   <li>For DeleteConfigRule, Config is deleting this rule. Try your
--   request again later.</li>
--   <li>For DeleteConfigRule, the rule is deleting your evaluation
--   results. Try your request again later.</li>
--   <li>For DeleteConfigRule, a remediation action is associated with the
--   rule and Config cannot delete this rule. Delete the remediation action
--   associated with the rule before deleting the rule and try your request
--   again later.</li>
--   <li>For PutConfigOrganizationRule, organization config rule deletion
--   is in progress. Try your request again later.</li>
--   <li>For DeleteOrganizationConfigRule, organization config rule
--   creation is in progress. Try your request again later.</li>
--   <li>For PutConformancePack and PutOrganizationConformancePack, a
--   conformance pack creation, update, and deletion is in progress. Try
--   your request again later.</li>
--   <li>For DeleteConformancePack, a conformance pack creation, update,
--   and deletion is in progress. Try your request again later.</li>
--   </ul>
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AggregateConformancePackComplianceSummaryGroupKey
AggregateConformancePackComplianceSummaryGroupKey' :: Text -> AggregateConformancePackComplianceSummaryGroupKey
[fromAggregateConformancePackComplianceSummaryGroupKey] :: AggregateConformancePackComplianceSummaryGroupKey -> Text
pattern AggregateConformancePackComplianceSummaryGroupKey_ACCOUNT_ID :: AggregateConformancePackComplianceSummaryGroupKey
pattern AggregateConformancePackComplianceSummaryGroupKey_AWS_REGION :: AggregateConformancePackComplianceSummaryGroupKey
newtype AggregatedSourceStatusType
AggregatedSourceStatusType' :: Text -> AggregatedSourceStatusType
[fromAggregatedSourceStatusType] :: AggregatedSourceStatusType -> Text
pattern AggregatedSourceStatusType_FAILED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_OUTDATED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_SUCCEEDED :: AggregatedSourceStatusType
newtype AggregatedSourceType
AggregatedSourceType' :: Text -> AggregatedSourceType
[fromAggregatedSourceType] :: AggregatedSourceType -> Text
pattern AggregatedSourceType_ACCOUNT :: AggregatedSourceType
pattern AggregatedSourceType_ORGANIZATION :: AggregatedSourceType
newtype ChronologicalOrder
ChronologicalOrder' :: Text -> ChronologicalOrder
[fromChronologicalOrder] :: ChronologicalOrder -> Text
pattern ChronologicalOrder_Forward :: ChronologicalOrder
pattern ChronologicalOrder_Reverse :: ChronologicalOrder
newtype ComplianceType
ComplianceType' :: Text -> ComplianceType
[fromComplianceType] :: ComplianceType -> Text
pattern ComplianceType_COMPLIANT :: ComplianceType
pattern ComplianceType_INSUFFICIENT_DATA :: ComplianceType
pattern ComplianceType_NON_COMPLIANT :: ComplianceType
pattern ComplianceType_NOT_APPLICABLE :: ComplianceType
newtype ConfigRuleComplianceSummaryGroupKey
ConfigRuleComplianceSummaryGroupKey' :: Text -> ConfigRuleComplianceSummaryGroupKey
[fromConfigRuleComplianceSummaryGroupKey] :: ConfigRuleComplianceSummaryGroupKey -> Text
pattern ConfigRuleComplianceSummaryGroupKey_ACCOUNT_ID :: ConfigRuleComplianceSummaryGroupKey
pattern ConfigRuleComplianceSummaryGroupKey_AWS_REGION :: ConfigRuleComplianceSummaryGroupKey
newtype ConfigRuleState
ConfigRuleState' :: Text -> ConfigRuleState
[fromConfigRuleState] :: ConfigRuleState -> Text
pattern ConfigRuleState_ACTIVE :: ConfigRuleState
pattern ConfigRuleState_DELETING :: ConfigRuleState
pattern ConfigRuleState_DELETING_RESULTS :: ConfigRuleState
pattern ConfigRuleState_EVALUATING :: ConfigRuleState
newtype ConfigurationItemStatus
ConfigurationItemStatus' :: Text -> ConfigurationItemStatus
[fromConfigurationItemStatus] :: ConfigurationItemStatus -> Text
pattern ConfigurationItemStatus_OK :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeleted :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeletedNotRecorded :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDiscovered :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceNotRecorded :: ConfigurationItemStatus
newtype ConformancePackComplianceType
ConformancePackComplianceType' :: Text -> ConformancePackComplianceType
[fromConformancePackComplianceType] :: ConformancePackComplianceType -> Text
pattern ConformancePackComplianceType_COMPLIANT :: ConformancePackComplianceType
pattern ConformancePackComplianceType_INSUFFICIENT_DATA :: ConformancePackComplianceType
pattern ConformancePackComplianceType_NON_COMPLIANT :: ConformancePackComplianceType
newtype ConformancePackState
ConformancePackState' :: Text -> ConformancePackState
[fromConformancePackState] :: ConformancePackState -> Text
pattern ConformancePackState_CREATE_COMPLETE :: ConformancePackState
pattern ConformancePackState_CREATE_FAILED :: ConformancePackState
pattern ConformancePackState_CREATE_IN_PROGRESS :: ConformancePackState
pattern ConformancePackState_DELETE_FAILED :: ConformancePackState
pattern ConformancePackState_DELETE_IN_PROGRESS :: ConformancePackState
newtype DeliveryStatus
DeliveryStatus' :: Text -> DeliveryStatus
[fromDeliveryStatus] :: DeliveryStatus -> Text
pattern DeliveryStatus_Failure :: DeliveryStatus
pattern DeliveryStatus_Not_Applicable :: DeliveryStatus
pattern DeliveryStatus_Success :: DeliveryStatus
newtype EventSource
EventSource' :: Text -> EventSource
[fromEventSource] :: EventSource -> Text
pattern EventSource_Aws_config :: EventSource
newtype MaximumExecutionFrequency
MaximumExecutionFrequency' :: Text -> MaximumExecutionFrequency
[fromMaximumExecutionFrequency] :: MaximumExecutionFrequency -> Text
pattern MaximumExecutionFrequency_One_Hour :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Six_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Three_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Twelve_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_TwentyFour_Hours :: MaximumExecutionFrequency
newtype MemberAccountRuleStatus
MemberAccountRuleStatus' :: Text -> MemberAccountRuleStatus
[fromMemberAccountRuleStatus] :: MemberAccountRuleStatus -> Text
pattern MemberAccountRuleStatus_CREATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_SUCCESSFUL :: MemberAccountRuleStatus
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_ConfigurationItemChangeNotification :: MessageType
pattern MessageType_ConfigurationSnapshotDeliveryCompleted :: MessageType
pattern MessageType_OversizedConfigurationItemChangeNotification :: MessageType
pattern MessageType_ScheduledNotification :: MessageType
newtype OrganizationConfigRuleTriggerType
OrganizationConfigRuleTriggerType' :: Text -> OrganizationConfigRuleTriggerType
[fromOrganizationConfigRuleTriggerType] :: OrganizationConfigRuleTriggerType -> Text
pattern OrganizationConfigRuleTriggerType_ConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_OversizedConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_ScheduledNotification :: OrganizationConfigRuleTriggerType
newtype OrganizationResourceDetailedStatus
OrganizationResourceDetailedStatus' :: Text -> OrganizationResourceDetailedStatus
[fromOrganizationResourceDetailedStatus] :: OrganizationResourceDetailedStatus -> Text
pattern OrganizationResourceDetailedStatus_CREATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
newtype OrganizationResourceStatus
OrganizationResourceStatus' :: Text -> OrganizationResourceStatus
[fromOrganizationResourceStatus] :: OrganizationResourceStatus -> Text
pattern OrganizationResourceStatus_CREATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_SUCCESSFUL :: OrganizationResourceStatus
newtype OrganizationRuleStatus
OrganizationRuleStatus' :: Text -> OrganizationRuleStatus
[fromOrganizationRuleStatus] :: OrganizationRuleStatus -> Text
pattern OrganizationRuleStatus_CREATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_SUCCESSFUL :: OrganizationRuleStatus
newtype Owner
Owner' :: Text -> Owner
[fromOwner] :: Owner -> Text
pattern Owner_AWS :: Owner
pattern Owner_CUSTOM_LAMBDA :: Owner
newtype RecorderStatus
RecorderStatus' :: Text -> RecorderStatus
[fromRecorderStatus] :: RecorderStatus -> Text
pattern RecorderStatus_Failure :: RecorderStatus
pattern RecorderStatus_Pending :: RecorderStatus
pattern RecorderStatus_Success :: RecorderStatus
newtype RemediationExecutionState
RemediationExecutionState' :: Text -> RemediationExecutionState
[fromRemediationExecutionState] :: RemediationExecutionState -> Text
pattern RemediationExecutionState_FAILED :: RemediationExecutionState
pattern RemediationExecutionState_IN_PROGRESS :: RemediationExecutionState
pattern RemediationExecutionState_QUEUED :: RemediationExecutionState
pattern RemediationExecutionState_SUCCEEDED :: RemediationExecutionState
newtype RemediationExecutionStepState
RemediationExecutionStepState' :: Text -> RemediationExecutionStepState
[fromRemediationExecutionStepState] :: RemediationExecutionStepState -> Text
pattern RemediationExecutionStepState_FAILED :: RemediationExecutionStepState
pattern RemediationExecutionStepState_PENDING :: RemediationExecutionStepState
pattern RemediationExecutionStepState_SUCCEEDED :: RemediationExecutionStepState
newtype RemediationTargetType
RemediationTargetType' :: Text -> RemediationTargetType
[fromRemediationTargetType] :: RemediationTargetType -> Text
pattern RemediationTargetType_SSM_DOCUMENT :: RemediationTargetType
newtype ResourceCountGroupKey
ResourceCountGroupKey' :: Text -> ResourceCountGroupKey
[fromResourceCountGroupKey] :: ResourceCountGroupKey -> Text
pattern ResourceCountGroupKey_ACCOUNT_ID :: ResourceCountGroupKey
pattern ResourceCountGroupKey_AWS_REGION :: ResourceCountGroupKey
pattern ResourceCountGroupKey_RESOURCE_TYPE :: ResourceCountGroupKey
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_AWS__ACM__Certificate :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Api :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Stage :: ResourceType
pattern ResourceType_AWS__ApiGateway__RestApi :: ResourceType
pattern ResourceType_AWS__ApiGateway__Stage :: ResourceType
pattern ResourceType_AWS__AutoScaling__AutoScalingGroup :: ResourceType
pattern ResourceType_AWS__AutoScaling__LaunchConfiguration :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScalingPolicy :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScheduledAction :: ResourceType
pattern ResourceType_AWS__Backup__BackupPlan :: ResourceType
pattern ResourceType_AWS__Backup__BackupSelection :: ResourceType
pattern ResourceType_AWS__Backup__BackupVault :: ResourceType
pattern ResourceType_AWS__Backup__RecoveryPoint :: ResourceType
pattern ResourceType_AWS__CloudFormation__Stack :: ResourceType
pattern ResourceType_AWS__CloudFront__Distribution :: ResourceType
pattern ResourceType_AWS__CloudFront__StreamingDistribution :: ResourceType
pattern ResourceType_AWS__CloudTrail__Trail :: ResourceType
pattern ResourceType_AWS__CloudWatch__Alarm :: ResourceType
pattern ResourceType_AWS__CodeBuild__Project :: ResourceType
pattern ResourceType_AWS__CodePipeline__Pipeline :: ResourceType
pattern ResourceType_AWS__Config__ConformancePackCompliance :: ResourceType
pattern ResourceType_AWS__Config__ResourceCompliance :: ResourceType
pattern ResourceType_AWS__DynamoDB__Table :: ResourceType
pattern ResourceType_AWS__EC2__CustomerGateway :: ResourceType
pattern ResourceType_AWS__EC2__EIP :: ResourceType
pattern ResourceType_AWS__EC2__EgressOnlyInternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__FlowLog :: ResourceType
pattern ResourceType_AWS__EC2__Host :: ResourceType
pattern ResourceType_AWS__EC2__Instance :: ResourceType
pattern ResourceType_AWS__EC2__InternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__NatGateway :: ResourceType
pattern ResourceType_AWS__EC2__NetworkAcl :: ResourceType
pattern ResourceType_AWS__EC2__NetworkInterface :: ResourceType
pattern ResourceType_AWS__EC2__RegisteredHAInstance :: ResourceType
pattern ResourceType_AWS__EC2__RouteTable :: ResourceType
pattern ResourceType_AWS__EC2__SecurityGroup :: ResourceType
pattern ResourceType_AWS__EC2__Subnet :: ResourceType
pattern ResourceType_AWS__EC2__VPC :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpoint :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpointService :: ResourceType
pattern ResourceType_AWS__EC2__VPCPeeringConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNGateway :: ResourceType
pattern ResourceType_AWS__EC2__Volume :: ResourceType
pattern ResourceType_AWS__ECR__Repository :: ResourceType
pattern ResourceType_AWS__ECS__Cluster :: ResourceType
pattern ResourceType_AWS__ECS__Service :: ResourceType
pattern ResourceType_AWS__ECS__TaskDefinition :: ResourceType
pattern ResourceType_AWS__EFS__AccessPoint :: ResourceType
pattern ResourceType_AWS__EFS__FileSystem :: ResourceType
pattern ResourceType_AWS__EKS__Cluster :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Application :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__ApplicationVersion :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Environment :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancingV2__LoadBalancer :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancing__LoadBalancer :: ResourceType
pattern ResourceType_AWS__Elasticsearch__Domain :: ResourceType
pattern ResourceType_AWS__IAM__Group :: ResourceType
pattern ResourceType_AWS__IAM__Policy :: ResourceType
pattern ResourceType_AWS__IAM__Role :: ResourceType
pattern ResourceType_AWS__IAM__User :: ResourceType
pattern ResourceType_AWS__KMS__Key :: ResourceType
pattern ResourceType_AWS__Lambda__Function :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__Firewall :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__FirewallPolicy :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__RuleGroup :: ResourceType
pattern ResourceType_AWS__OpenSearch__Domain :: ResourceType
pattern ResourceType_AWS__QLDB__Ledger :: ResourceType
pattern ResourceType_AWS__RDS__DBCluster :: ResourceType
pattern ResourceType_AWS__RDS__DBClusterSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBInstance :: ResourceType
pattern ResourceType_AWS__RDS__DBSecurityGroup :: ResourceType
pattern ResourceType_AWS__RDS__DBSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBSubnetGroup :: ResourceType
pattern ResourceType_AWS__RDS__EventSubscription :: ResourceType
pattern ResourceType_AWS__Redshift__Cluster :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterParameterGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSecurityGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSnapshot :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSubnetGroup :: ResourceType
pattern ResourceType_AWS__Redshift__EventSubscription :: ResourceType
pattern ResourceType_AWS__S3__AccountPublicAccessBlock :: ResourceType
pattern ResourceType_AWS__S3__Bucket :: ResourceType
pattern ResourceType_AWS__SNS__Topic :: ResourceType
pattern ResourceType_AWS__SQS__Queue :: ResourceType
pattern ResourceType_AWS__SSM__AssociationCompliance :: ResourceType
pattern ResourceType_AWS__SSM__FileData :: ResourceType
pattern ResourceType_AWS__SSM__ManagedInstanceInventory :: ResourceType
pattern ResourceType_AWS__SSM__PatchCompliance :: ResourceType
pattern ResourceType_AWS__SecretsManager__Secret :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProvisionedProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__Portfolio :: ResourceType
pattern ResourceType_AWS__ShieldRegional__Protection :: ResourceType
pattern ResourceType_AWS__Shield__Protection :: ResourceType
pattern ResourceType_AWS__WAFRegional__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAFRegional__Rule :: ResourceType
pattern ResourceType_AWS__WAFRegional__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFRegional__WebACL :: ResourceType
pattern ResourceType_AWS__WAF__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAF__Rule :: ResourceType
pattern ResourceType_AWS__WAF__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAF__WebACL :: ResourceType
pattern ResourceType_AWS__WAFv2__IPSet :: ResourceType
pattern ResourceType_AWS__WAFv2__ManagedRuleSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RegexPatternSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFv2__WebACL :: ResourceType
pattern ResourceType_AWS__XRay__EncryptionConfig :: ResourceType
newtype ResourceValueType
ResourceValueType' :: Text -> ResourceValueType
[fromResourceValueType] :: ResourceValueType -> Text
pattern ResourceValueType_RESOURCE_ID :: ResourceValueType

-- | A collection of accounts and regions.
--   
--   <i>See:</i> <a>newAccountAggregationSource</a> smart constructor.
data AccountAggregationSource
AccountAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> AccountAggregationSource

-- | The source regions being aggregated.
[$sel:awsRegions:AccountAggregationSource'] :: AccountAggregationSource -> Maybe (NonEmpty Text)

-- | If true, aggregate existing Config regions and future regions.
[$sel:allAwsRegions:AccountAggregationSource'] :: AccountAggregationSource -> Maybe Bool

-- | The 12-digit account ID of the account being aggregated.
[$sel:accountIds:AccountAggregationSource'] :: AccountAggregationSource -> NonEmpty Text

-- | Create a value of <a>AccountAggregationSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_awsRegions</a> - The source regions being
--   aggregated.
--   
--   <a>$sel:allAwsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_allAwsRegions</a> - If true, aggregate
--   existing Config regions and future regions.
--   
--   <a>$sel:accountIds:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_accountIds</a> - The 12-digit account ID
--   of the account being aggregated.
newAccountAggregationSource :: NonEmpty Text -> AccountAggregationSource

-- | The source regions being aggregated.
accountAggregationSource_awsRegions :: Lens' AccountAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
accountAggregationSource_allAwsRegions :: Lens' AccountAggregationSource (Maybe Bool)

-- | The 12-digit account ID of the account being aggregated.
accountAggregationSource_accountIds :: Lens' AccountAggregationSource (NonEmpty Text)

-- | Indicates whether an Config rule is compliant based on account ID,
--   region, compliance, and rule name.
--   
--   A rule is compliant if all of the resources that the rule evaluated
--   comply with it. It is noncompliant if any of these resources do not
--   comply.
--   
--   <i>See:</i> <a>newAggregateComplianceByConfigRule</a> smart
--   constructor.
data AggregateComplianceByConfigRule
AggregateComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConfigRule

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
[$sel:compliance:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Compliance

-- | The name of the Config rule.
[$sel:configRuleName:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:accountId:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | The source region from where the data is aggregated.
[$sel:awsRegion:AggregateComplianceByConfigRule'] :: AggregateComplianceByConfigRule -> Maybe Text

-- | Create a value of <a>AggregateComplianceByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_compliance</a> - Indicates whether
--   an Amazon Web Services resource or Config rule is compliant and
--   provides the number of contributors that affect the compliance.
--   
--   <a>$sel:configRuleName:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_configRuleName</a> - The name of
--   the Config rule.
--   
--   <a>$sel:accountId:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_awsRegion</a> - The source region
--   from where the data is aggregated.
newAggregateComplianceByConfigRule :: AggregateComplianceByConfigRule

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
aggregateComplianceByConfigRule_compliance :: Lens' AggregateComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
aggregateComplianceByConfigRule_configRuleName :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateComplianceByConfigRule_accountId :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The source region from where the data is aggregated.
aggregateComplianceByConfigRule_awsRegion :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | Provides aggregate compliance of the conformance pack. Indicates
--   whether a conformance pack is compliant based on the name of the
--   conformance pack, account ID, and region.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateComplianceByConformancePack</a> smart
--   constructor.
data AggregateComplianceByConformancePack
AggregateComplianceByConformancePack' :: Maybe AggregateConformancePackCompliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConformancePack

-- | The compliance status of the conformance pack.
[$sel:compliance:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe AggregateConformancePackCompliance

-- | The name of the conformance pack.
[$sel:conformancePackName:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateComplianceByConformancePack'] :: AggregateComplianceByConformancePack -> Maybe Text

-- | Create a value of <a>AggregateComplianceByConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_compliance</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:conformancePackName:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_conformancePackName</a> - The
--   name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_accountId</a> - The 12-digit
--   Amazon Web Services account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_awsRegion</a> - The source
--   Amazon Web Services Region from where the data is aggregated.
newAggregateComplianceByConformancePack :: AggregateComplianceByConformancePack

-- | The compliance status of the conformance pack.
aggregateComplianceByConformancePack_compliance :: Lens' AggregateComplianceByConformancePack (Maybe AggregateConformancePackCompliance)

-- | The name of the conformance pack.
aggregateComplianceByConformancePack_conformancePackName :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateComplianceByConformancePack_accountId :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateComplianceByConformancePack_awsRegion :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | Returns the number of compliant and noncompliant rules for one or more
--   accounts and regions in an aggregator.
--   
--   <i>See:</i> <a>newAggregateComplianceCount</a> smart constructor.
data AggregateComplianceCount
AggregateComplianceCount' :: Maybe Text -> Maybe ComplianceSummary -> AggregateComplianceCount

-- | The 12-digit account ID or region based on the GroupByKey value.
[$sel:groupName:AggregateComplianceCount'] :: AggregateComplianceCount -> Maybe Text

-- | The number of compliant and noncompliant Config rules.
[$sel:complianceSummary:AggregateComplianceCount'] :: AggregateComplianceCount -> Maybe ComplianceSummary

-- | Create a value of <a>AggregateComplianceCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_groupName</a> - The 12-digit account ID or
--   region based on the GroupByKey value.
--   
--   <a>$sel:complianceSummary:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_complianceSummary</a> - The number of
--   compliant and noncompliant Config rules.
newAggregateComplianceCount :: AggregateComplianceCount

-- | The 12-digit account ID or region based on the GroupByKey value.
aggregateComplianceCount_groupName :: Lens' AggregateComplianceCount (Maybe Text)

-- | The number of compliant and noncompliant Config rules.
aggregateComplianceCount_complianceSummary :: Lens' AggregateComplianceCount (Maybe ComplianceSummary)

-- | Provides the number of compliant and noncompliant rules within a
--   conformance pack. Also provides the compliance status of the
--   conformance pack and the total rule count which includes compliant
--   rules, noncompliant rules, and rules that cannot be evaluated due to
--   insufficient data.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackCompliance</a> smart
--   constructor.
data AggregateConformancePackCompliance
AggregateConformancePackCompliance' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe ConformancePackComplianceType -> AggregateConformancePackCompliance

-- | Total number of compliant rules, noncompliant rules, and the rules
--   that do not have any applicable resources to evaluate upon resulting
--   in insufficient data.
[$sel:totalRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The number of compliant Config Rules.
[$sel:compliantRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The number of noncompliant Config Rules.
[$sel:nonCompliantRuleCount:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe Int

-- | The compliance status of the conformance pack.
[$sel:complianceType:AggregateConformancePackCompliance'] :: AggregateConformancePackCompliance -> Maybe ConformancePackComplianceType

-- | Create a value of <a>AggregateConformancePackCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_totalRuleCount</a> - Total
--   number of compliant rules, noncompliant rules, and the rules that do
--   not have any applicable resources to evaluate upon resulting in
--   insufficient data.
--   
--   <a>$sel:compliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_compliantRuleCount</a> - The
--   number of compliant Config Rules.
--   
--   <a>$sel:nonCompliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_nonCompliantRuleCount</a> - The
--   number of noncompliant Config Rules.
--   
--   <a>$sel:complianceType:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_complianceType</a> - The
--   compliance status of the conformance pack.
newAggregateConformancePackCompliance :: AggregateConformancePackCompliance

-- | Total number of compliant rules, noncompliant rules, and the rules
--   that do not have any applicable resources to evaluate upon resulting
--   in insufficient data.
aggregateConformancePackCompliance_totalRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of compliant Config Rules.
aggregateConformancePackCompliance_compliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of noncompliant Config Rules.
aggregateConformancePackCompliance_nonCompliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The compliance status of the conformance pack.
aggregateConformancePackCompliance_complianceType :: Lens' AggregateConformancePackCompliance (Maybe ConformancePackComplianceType)

-- | The number of conformance packs that are compliant and noncompliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceCount</a> smart
--   constructor.
data AggregateConformancePackComplianceCount
AggregateConformancePackComplianceCount' :: Maybe Int -> Maybe Int -> AggregateConformancePackComplianceCount

-- | Number of compliant conformance packs.
[$sel:compliantConformancePackCount:AggregateConformancePackComplianceCount'] :: AggregateConformancePackComplianceCount -> Maybe Int

-- | Number of noncompliant conformance packs.
[$sel:nonCompliantConformancePackCount:AggregateConformancePackComplianceCount'] :: AggregateConformancePackComplianceCount -> Maybe Int

-- | Create a value of <a>AggregateConformancePackComplianceCount</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:compliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_compliantConformancePackCount</a>
--   - Number of compliant conformance packs.
--   
--   
--   <a>$sel:nonCompliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_nonCompliantConformancePackCount</a>
--   - Number of noncompliant conformance packs.
newAggregateConformancePackComplianceCount :: AggregateConformancePackComplianceCount

-- | Number of compliant conformance packs.
aggregateConformancePackComplianceCount_compliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)

-- | Number of noncompliant conformance packs.
aggregateConformancePackComplianceCount_nonCompliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)

-- | Filters the conformance packs based on an account ID, region,
--   compliance type, and the name of the conformance pack.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceFilters</a> smart
--   constructor.
data AggregateConformancePackComplianceFilters
AggregateConformancePackComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ConformancePackComplianceType -> Maybe Text -> AggregateConformancePackComplianceFilters

-- | The name of the conformance pack.
[$sel:conformancePackName:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | The compliance status of the conformance pack.
[$sel:complianceType:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe ConformancePackComplianceType

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateConformancePackComplianceFilters'] :: AggregateConformancePackComplianceFilters -> Maybe Text

-- | Create a value of <a>AggregateConformancePackComplianceFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackName:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_conformancePackName</a> -
--   The name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_accountId</a> - The
--   12-digit Amazon Web Services account ID of the source account.
--   
--   <a>$sel:complianceType:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_complianceType</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_awsRegion</a> - The
--   source Amazon Web Services Region from where the data is aggregated.
newAggregateConformancePackComplianceFilters :: AggregateConformancePackComplianceFilters

-- | The name of the conformance pack.
aggregateConformancePackComplianceFilters_conformancePackName :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceFilters_accountId :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The compliance status of the conformance pack.
aggregateConformancePackComplianceFilters_complianceType :: Lens' AggregateConformancePackComplianceFilters (Maybe ConformancePackComplianceType)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceFilters_awsRegion :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | Provides a summary of compliance based on either account ID or region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummary</a> smart
--   constructor.
data AggregateConformancePackComplianceSummary
AggregateConformancePackComplianceSummary' :: Maybe Text -> Maybe AggregateConformancePackComplianceCount -> AggregateConformancePackComplianceSummary

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
[$sel:groupName:AggregateConformancePackComplianceSummary'] :: AggregateConformancePackComplianceSummary -> Maybe Text

-- | Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
[$sel:complianceSummary:AggregateConformancePackComplianceSummary'] :: AggregateConformancePackComplianceSummary -> Maybe AggregateConformancePackComplianceCount

-- | Create a value of <a>AggregateConformancePackComplianceSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_groupName</a> - Groups
--   the result based on Amazon Web Services account ID or Amazon Web
--   Services Region.
--   
--   
--   <a>$sel:complianceSummary:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_complianceSummary</a> -
--   Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
newAggregateConformancePackComplianceSummary :: AggregateConformancePackComplianceSummary

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
aggregateConformancePackComplianceSummary_groupName :: Lens' AggregateConformancePackComplianceSummary (Maybe Text)

-- | Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
aggregateConformancePackComplianceSummary_complianceSummary :: Lens' AggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceCount)

-- | Filters the results based on account ID and region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummaryFilters</a>
--   smart constructor.
data AggregateConformancePackComplianceSummaryFilters
AggregateConformancePackComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> AggregateConformancePackComplianceSummaryFilters

-- | The 12-digit Amazon Web Services account ID of the source account.
[$sel:accountId:AggregateConformancePackComplianceSummaryFilters'] :: AggregateConformancePackComplianceSummaryFilters -> Maybe Text

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
[$sel:awsRegion:AggregateConformancePackComplianceSummaryFilters'] :: AggregateConformancePackComplianceSummaryFilters -> Maybe Text

-- | Create a value of
--   <a>AggregateConformancePackComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_accountId</a> -
--   The 12-digit Amazon Web Services account ID of the source account.
--   
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_awsRegion</a> -
--   The source Amazon Web Services Region from where the data is
--   aggregated.
newAggregateConformancePackComplianceSummaryFilters :: AggregateConformancePackComplianceSummaryFilters

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceSummaryFilters_accountId :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceSummaryFilters_awsRegion :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)

-- | The details of an Config evaluation for an account ID and region in an
--   aggregator. Provides the Amazon Web Services resource that was
--   evaluated, the compliance of the resource, related time stamps, and
--   supplementary information.
--   
--   <i>See:</i> <a>newAggregateEvaluationResult</a> smart constructor.
data AggregateEvaluationResult
AggregateEvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> AggregateEvaluationResult

-- | Uniquely identifies the evaluation result.
[$sel:evaluationResultIdentifier:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe EvaluationResultIdentifier

-- | Supplementary information about how the agrregate evaluation
--   determined the compliance.
[$sel:annotation:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
[$sel:configRuleInvokedTime:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe POSIX

-- | The time when Config recorded the aggregate evaluation result.
[$sel:resultRecordedTime:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe POSIX

-- | The 12-digit account ID of the source account.
[$sel:accountId:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | The resource compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
[$sel:complianceType:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe ComplianceType

-- | The source region from where the data is aggregated.
[$sel:awsRegion:AggregateEvaluationResult'] :: AggregateEvaluationResult -> Maybe Text

-- | Create a value of <a>AggregateEvaluationResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_annotation</a> - Supplementary
--   information about how the agrregate evaluation determined the
--   compliance.
--   
--   <a>$sel:configRuleInvokedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_configRuleInvokedTime</a> - The time when
--   the Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_resultRecordedTime</a> - The time when
--   Config recorded the aggregate evaluation result.
--   
--   <a>$sel:accountId:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_complianceType</a> - The resource
--   compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
--   
--   <a>$sel:awsRegion:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_awsRegion</a> - The source region from
--   where the data is aggregated.
newAggregateEvaluationResult :: AggregateEvaluationResult

-- | Uniquely identifies the evaluation result.
aggregateEvaluationResult_evaluationResultIdentifier :: Lens' AggregateEvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the agrregate evaluation
--   determined the compliance.
aggregateEvaluationResult_annotation :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
aggregateEvaluationResult_configRuleInvokedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the aggregate evaluation result.
aggregateEvaluationResult_resultRecordedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The 12-digit account ID of the source account.
aggregateEvaluationResult_accountId :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The resource compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
aggregateEvaluationResult_complianceType :: Lens' AggregateEvaluationResult (Maybe ComplianceType)

-- | The source region from where the data is aggregated.
aggregateEvaluationResult_awsRegion :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The details that identify a resource that is collected by Config
--   aggregator, including the resource type, ID, (if available) the custom
--   resource name, the source account, and source region.
--   
--   <i>See:</i> <a>newAggregateResourceIdentifier</a> smart constructor.
data AggregateResourceIdentifier
AggregateResourceIdentifier' :: Maybe Text -> Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | The name of the Amazon Web Services resource.
[$sel:resourceName:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:sourceAccountId:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The source region where data is aggregated.
[$sel:sourceRegion:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The ID of the Amazon Web Services resource.
[$sel:resourceId:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> Text

-- | The type of the Amazon Web Services resource.
[$sel:resourceType:AggregateResourceIdentifier'] :: AggregateResourceIdentifier -> ResourceType

-- | Create a value of <a>AggregateResourceIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceName</a> - The name of the
--   Amazon Web Services resource.
--   
--   <a>$sel:sourceAccountId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceAccountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:sourceRegion:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceRegion</a> - The source region
--   where data is aggregated.
--   
--   <a>$sel:resourceId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceId</a> - The ID of the Amazon
--   Web Services resource.
--   
--   <a>$sel:resourceType:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceType</a> - The type of the
--   Amazon Web Services resource.
newAggregateResourceIdentifier :: Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | The name of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceName :: Lens' AggregateResourceIdentifier (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateResourceIdentifier_sourceAccountId :: Lens' AggregateResourceIdentifier Text

-- | The source region where data is aggregated.
aggregateResourceIdentifier_sourceRegion :: Lens' AggregateResourceIdentifier Text

-- | The ID of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceId :: Lens' AggregateResourceIdentifier Text

-- | The type of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceType :: Lens' AggregateResourceIdentifier ResourceType

-- | The current sync status between the source and the aggregator account.
--   
--   <i>See:</i> <a>newAggregatedSourceStatus</a> smart constructor.
data AggregatedSourceStatus
AggregatedSourceStatus' :: Maybe Text -> Maybe AggregatedSourceStatusType -> Maybe AggregatedSourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> AggregatedSourceStatus

-- | The error code that Config returned when the source account
--   aggregation last failed.
[$sel:lastErrorCode:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | Filters the last updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
[$sel:lastUpdateStatus:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe AggregatedSourceStatusType

-- | The source account or an organization.
[$sel:sourceType:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe AggregatedSourceType

-- | The source account ID or an organization.
[$sel:sourceId:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The message indicating that the source account aggregation failed due
--   to an error.
[$sel:lastErrorMessage:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The region authorized to collect aggregated data.
[$sel:awsRegion:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe Text

-- | The time of the last update.
[$sel:lastUpdateTime:AggregatedSourceStatus'] :: AggregatedSourceStatus -> Maybe POSIX

-- | Create a value of <a>AggregatedSourceStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorCode</a> - The error code that
--   Config returned when the source account aggregation last failed.
--   
--   <a>$sel:lastUpdateStatus:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateStatus</a> - Filters the last
--   updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
--   
--   <a>$sel:sourceType:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceType</a> - The source account or an
--   organization.
--   
--   <a>$sel:sourceId:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceId</a> - The source account ID or an
--   organization.
--   
--   <a>$sel:lastErrorMessage:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorMessage</a> - The message
--   indicating that the source account aggregation failed due to an error.
--   
--   <a>$sel:awsRegion:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_awsRegion</a> - The region authorized to
--   collect aggregated data.
--   
--   <a>$sel:lastUpdateTime:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateTime</a> - The time of the last
--   update.
newAggregatedSourceStatus :: AggregatedSourceStatus

-- | The error code that Config returned when the source account
--   aggregation last failed.
aggregatedSourceStatus_lastErrorCode :: Lens' AggregatedSourceStatus (Maybe Text)

-- | Filters the last updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
aggregatedSourceStatus_lastUpdateStatus :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceStatusType)

-- | The source account or an organization.
aggregatedSourceStatus_sourceType :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceType)

-- | The source account ID or an organization.
aggregatedSourceStatus_sourceId :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The message indicating that the source account aggregation failed due
--   to an error.
aggregatedSourceStatus_lastErrorMessage :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The region authorized to collect aggregated data.
aggregatedSourceStatus_awsRegion :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The time of the last update.
aggregatedSourceStatus_lastUpdateTime :: Lens' AggregatedSourceStatus (Maybe UTCTime)

-- | An object that represents the authorizations granted to aggregator
--   accounts and regions.
--   
--   <i>See:</i> <a>newAggregationAuthorization</a> smart constructor.
data AggregationAuthorization
AggregationAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AggregationAuthorization

-- | The time stamp when the aggregation authorization was created.
[$sel:creationTime:AggregationAuthorization'] :: AggregationAuthorization -> Maybe POSIX

-- | The region authorized to collect aggregated data.
[$sel:authorizedAwsRegion:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | The Amazon Resource Name (ARN) of the aggregation object.
[$sel:aggregationAuthorizationArn:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | The 12-digit account ID of the account authorized to aggregate data.
[$sel:authorizedAccountId:AggregationAuthorization'] :: AggregationAuthorization -> Maybe Text

-- | Create a value of <a>AggregationAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_creationTime</a> - The time stamp when the
--   aggregation authorization was created.
--   
--   <a>$sel:authorizedAwsRegion:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
--   
--   <a>$sel:aggregationAuthorizationArn:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_aggregationAuthorizationArn</a> - The
--   Amazon Resource Name (ARN) of the aggregation object.
--   
--   <a>$sel:authorizedAccountId:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAccountId</a> - The 12-digit
--   account ID of the account authorized to aggregate data.
newAggregationAuthorization :: AggregationAuthorization

-- | The time stamp when the aggregation authorization was created.
aggregationAuthorization_creationTime :: Lens' AggregationAuthorization (Maybe UTCTime)

-- | The region authorized to collect aggregated data.
aggregationAuthorization_authorizedAwsRegion :: Lens' AggregationAuthorization (Maybe Text)

-- | The Amazon Resource Name (ARN) of the aggregation object.
aggregationAuthorization_aggregationAuthorizationArn :: Lens' AggregationAuthorization (Maybe Text)

-- | The 12-digit account ID of the account authorized to aggregate data.
aggregationAuthorization_authorizedAccountId :: Lens' AggregationAuthorization (Maybe Text)

-- | The detailed configuration of a specified resource.
--   
--   <i>See:</i> <a>newBaseConfigurationItem</a> smart constructor.
data BaseConfigurationItem
BaseConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BaseConfigurationItem

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The type of Amazon Web Services resource.
[$sel:resourceType:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe ResourceType

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
[$sel:configurationStateId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:arn:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The custom name of the resource, if available.
[$sel:resourceName:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The time stamp when the resource was created.
[$sel:resourceCreationTime:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe POSIX

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
[$sel:configurationItemStatus:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe ConfigurationItemStatus

-- | The time when the configuration recording was initiated.
[$sel:configurationItemCaptureTime:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe POSIX

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
[$sel:accountId:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
[$sel:supplementaryConfiguration:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe (HashMap Text Text)

-- | The Availability Zone associated with the resource.
[$sel:availabilityZone:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The version number of the resource configuration.
[$sel:version:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The region where the resource resides.
[$sel:awsRegion:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | The description of the resource configuration.
[$sel:configuration:BaseConfigurationItem'] :: BaseConfigurationItem -> Maybe Text

-- | Create a value of <a>BaseConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_arn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:resourceName:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceCreationTime</a> - The time stamp
--   when the resource was created.
--   
--   <a>$sel:configurationItemStatus:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemStatus</a> - The
--   configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemCaptureTime</a> - The time
--   when the configuration recording was initiated.
--   
--   <a>$sel:accountId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_accountId</a> - The 12-digit Amazon Web
--   Services account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_supplementaryConfiguration</a> -
--   Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
--   
--   <a>$sel:availabilityZone:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:version:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_version</a> - The version number of the
--   resource configuration.
--   
--   <a>$sel:awsRegion:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:configuration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configuration</a> - The description of the
--   resource configuration.
newBaseConfigurationItem :: BaseConfigurationItem

-- | The ID of the resource (for example., sg-xxxxxx).
baseConfigurationItem_resourceId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
baseConfigurationItem_resourceType :: Lens' BaseConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
baseConfigurationItem_configurationStateId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource.
baseConfigurationItem_arn :: Lens' BaseConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
baseConfigurationItem_resourceName :: Lens' BaseConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
baseConfigurationItem_resourceCreationTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
baseConfigurationItem_configurationItemStatus :: Lens' BaseConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
baseConfigurationItem_configurationItemCaptureTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
baseConfigurationItem_accountId :: Lens' BaseConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
baseConfigurationItem_supplementaryConfiguration :: Lens' BaseConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
baseConfigurationItem_availabilityZone :: Lens' BaseConfigurationItem (Maybe Text)

-- | The version number of the resource configuration.
baseConfigurationItem_version :: Lens' BaseConfigurationItem (Maybe Text)

-- | The region where the resource resides.
baseConfigurationItem_awsRegion :: Lens' BaseConfigurationItem (Maybe Text)

-- | The description of the resource configuration.
baseConfigurationItem_configuration :: Lens' BaseConfigurationItem (Maybe Text)

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
--   
--   <i>See:</i> <a>newCompliance</a> smart constructor.
data Compliance
Compliance' :: Maybe ComplianceContributorCount -> Maybe ComplianceType -> Compliance

-- | The number of Amazon Web Services resources or Config rules that cause
--   a result of <tt>NON_COMPLIANT</tt>, up to a maximum number.
[$sel:complianceContributorCount:Compliance'] :: Compliance -> Maybe ComplianceContributorCount

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
[$sel:complianceType:Compliance'] :: Compliance -> Maybe ComplianceType

-- | Create a value of <a>Compliance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceContributorCount:Compliance'</a>,
--   <a>compliance_complianceContributorCount</a> - The number of Amazon
--   Web Services resources or Config rules that cause a result of
--   <tt>NON_COMPLIANT</tt>, up to a maximum number.
--   
--   <a>$sel:complianceType:Compliance'</a>,
--   <a>compliance_complianceType</a> - Indicates whether an Amazon Web
--   Services resource or Config rule is compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
newCompliance :: Compliance

-- | The number of Amazon Web Services resources or Config rules that cause
--   a result of <tt>NON_COMPLIANT</tt>, up to a maximum number.
compliance_complianceContributorCount :: Lens' Compliance (Maybe ComplianceContributorCount)

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
compliance_complianceType :: Lens' Compliance (Maybe ComplianceType)

-- | Indicates whether an Config rule is compliant. A rule is compliant if
--   all of the resources that the rule evaluated comply with it. A rule is
--   noncompliant if any of these resources do not comply.
--   
--   <i>See:</i> <a>newComplianceByConfigRule</a> smart constructor.
data ComplianceByConfigRule
ComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> ComplianceByConfigRule

-- | Indicates whether the Config rule is compliant.
[$sel:compliance:ComplianceByConfigRule'] :: ComplianceByConfigRule -> Maybe Compliance

-- | The name of the Config rule.
[$sel:configRuleName:ComplianceByConfigRule'] :: ComplianceByConfigRule -> Maybe Text

-- | Create a value of <a>ComplianceByConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_compliance</a> - Indicates whether the
--   Config rule is compliant.
--   
--   <a>$sel:configRuleName:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_configRuleName</a> - The name of the Config
--   rule.
newComplianceByConfigRule :: ComplianceByConfigRule

-- | Indicates whether the Config rule is compliant.
complianceByConfigRule_compliance :: Lens' ComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
complianceByConfigRule_configRuleName :: Lens' ComplianceByConfigRule (Maybe Text)

-- | Indicates whether an Amazon Web Services resource that is evaluated
--   according to one or more Config rules is compliant. A resource is
--   compliant if it complies with all of the rules that evaluate it. A
--   resource is noncompliant if it does not comply with one or more of
--   these rules.
--   
--   <i>See:</i> <a>newComplianceByResource</a> smart constructor.
data ComplianceByResource
ComplianceByResource' :: Maybe Text -> Maybe Text -> Maybe Compliance -> ComplianceByResource

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceId:ComplianceByResource'] :: ComplianceByResource -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceType:ComplianceByResource'] :: ComplianceByResource -> Maybe Text

-- | Indicates whether the Amazon Web Services resource complies with all
--   of the Config rules that evaluated it.
[$sel:compliance:ComplianceByResource'] :: ComplianceByResource -> Maybe Compliance

-- | Create a value of <a>ComplianceByResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:resourceType:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceType</a> - The type of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:compliance:ComplianceByResource'</a>,
--   <a>complianceByResource_compliance</a> - Indicates whether the Amazon
--   Web Services resource complies with all of the Config rules that
--   evaluated it.
newComplianceByResource :: ComplianceByResource

-- | The ID of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceId :: Lens' ComplianceByResource (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceType :: Lens' ComplianceByResource (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with all
--   of the Config rules that evaluated it.
complianceByResource_compliance :: Lens' ComplianceByResource (Maybe Compliance)

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item, up to a maximum
--   number.
--   
--   <i>See:</i> <a>newComplianceContributorCount</a> smart constructor.
data ComplianceContributorCount
ComplianceContributorCount' :: Maybe Int -> Maybe Bool -> ComplianceContributorCount

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item.
[$sel:cappedCount:ComplianceContributorCount'] :: ComplianceContributorCount -> Maybe Int

-- | Indicates whether the maximum count is reached.
[$sel:capExceeded:ComplianceContributorCount'] :: ComplianceContributorCount -> Maybe Bool

-- | Create a value of <a>ComplianceContributorCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cappedCount:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_cappedCount</a> - The number of Amazon
--   Web Services resources or Config rules responsible for the current
--   compliance of the item.
--   
--   <a>$sel:capExceeded:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_capExceeded</a> - Indicates whether the
--   maximum count is reached.
newComplianceContributorCount :: ComplianceContributorCount

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item.
complianceContributorCount_cappedCount :: Lens' ComplianceContributorCount (Maybe Int)

-- | Indicates whether the maximum count is reached.
complianceContributorCount_capExceeded :: Lens' ComplianceContributorCount (Maybe Bool)

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant and noncompliant.
--   
--   <i>See:</i> <a>newComplianceSummary</a> smart constructor.
data ComplianceSummary
ComplianceSummary' :: Maybe POSIX -> Maybe ComplianceContributorCount -> Maybe ComplianceContributorCount -> ComplianceSummary

-- | The time that Config created the compliance summary.
[$sel:complianceSummaryTimestamp:ComplianceSummary'] :: ComplianceSummary -> Maybe POSIX

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant, up to a maximum of 25 for rules and 100 for resources.
[$sel:compliantResourceCount:ComplianceSummary'] :: ComplianceSummary -> Maybe ComplianceContributorCount

-- | The number of Config rules or Amazon Web Services resources that are
--   noncompliant, up to a maximum of 25 for rules and 100 for resources.
[$sel:nonCompliantResourceCount:ComplianceSummary'] :: ComplianceSummary -> Maybe ComplianceContributorCount

-- | Create a value of <a>ComplianceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceSummaryTimestamp:ComplianceSummary'</a>,
--   <a>complianceSummary_complianceSummaryTimestamp</a> - The time that
--   Config created the compliance summary.
--   
--   <a>$sel:compliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_compliantResourceCount</a> - The number of Config
--   rules or Amazon Web Services resources that are compliant, up to a
--   maximum of 25 for rules and 100 for resources.
--   
--   <a>$sel:nonCompliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_nonCompliantResourceCount</a> - The number of
--   Config rules or Amazon Web Services resources that are noncompliant,
--   up to a maximum of 25 for rules and 100 for resources.
newComplianceSummary :: ComplianceSummary

-- | The time that Config created the compliance summary.
complianceSummary_complianceSummaryTimestamp :: Lens' ComplianceSummary (Maybe UTCTime)

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_compliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)

-- | The number of Config rules or Amazon Web Services resources that are
--   noncompliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_nonCompliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)

-- | The number of Amazon Web Services resources of a specific type that
--   are compliant or noncompliant, up to a maximum of 100 for each.
--   
--   <i>See:</i> <a>newComplianceSummaryByResourceType</a> smart
--   constructor.
data ComplianceSummaryByResourceType
ComplianceSummaryByResourceType' :: Maybe Text -> Maybe ComplianceSummary -> ComplianceSummaryByResourceType

-- | The type of Amazon Web Services resource.
[$sel:resourceType:ComplianceSummaryByResourceType'] :: ComplianceSummaryByResourceType -> Maybe Text

-- | The number of Amazon Web Services resources that are compliant or
--   noncompliant, up to a maximum of 100 for each.
[$sel:complianceSummary:ComplianceSummaryByResourceType'] :: ComplianceSummaryByResourceType -> Maybe ComplianceSummary

-- | Create a value of <a>ComplianceSummaryByResourceType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_resourceType</a> - The type of
--   Amazon Web Services resource.
--   
--   <a>$sel:complianceSummary:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_complianceSummary</a> - The number
--   of Amazon Web Services resources that are compliant or noncompliant,
--   up to a maximum of 100 for each.
newComplianceSummaryByResourceType :: ComplianceSummaryByResourceType

-- | The type of Amazon Web Services resource.
complianceSummaryByResourceType_resourceType :: Lens' ComplianceSummaryByResourceType (Maybe Text)

-- | The number of Amazon Web Services resources that are compliant or
--   noncompliant, up to a maximum of 100 for each.
complianceSummaryByResourceType_complianceSummary :: Lens' ComplianceSummaryByResourceType (Maybe ComplianceSummary)

-- | Provides status of the delivery of the snapshot or the configuration
--   history to the specified Amazon S3 bucket. Also provides the status of
--   notifications about the Amazon S3 delivery to the specified Amazon SNS
--   topic.
--   
--   <i>See:</i> <a>newConfigExportDeliveryInfo</a> smart constructor.
data ConfigExportDeliveryInfo
ConfigExportDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> Maybe POSIX -> ConfigExportDeliveryInfo

-- | The error code from the last attempted delivery.
[$sel:lastErrorCode:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe Text

-- | The time of the last attempted delivery.
[$sel:lastAttemptTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | The time of the last successful delivery.
[$sel:lastSuccessfulTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | Status of the last attempted delivery.
[$sel:lastStatus:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe DeliveryStatus

-- | The error message from the last attempted delivery.
[$sel:lastErrorMessage:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe Text

-- | The time that the next delivery occurs.
[$sel:nextDeliveryTime:ConfigExportDeliveryInfo'] :: ConfigExportDeliveryInfo -> Maybe POSIX

-- | Create a value of <a>ConfigExportDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastAttemptTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastAttemptTime</a> - The time of the last
--   attempted delivery.
--   
--   <a>$sel:lastSuccessfulTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastSuccessfulTime</a> - The time of the
--   last successful delivery.
--   
--   <a>$sel:lastStatus:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <a>$sel:lastErrorMessage:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
--   
--   <a>$sel:nextDeliveryTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_nextDeliveryTime</a> - The time that the
--   next delivery occurs.
newConfigExportDeliveryInfo :: ConfigExportDeliveryInfo

-- | The error code from the last attempted delivery.
configExportDeliveryInfo_lastErrorCode :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time of the last attempted delivery.
configExportDeliveryInfo_lastAttemptTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | The time of the last successful delivery.
configExportDeliveryInfo_lastSuccessfulTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
configExportDeliveryInfo_lastStatus :: Lens' ConfigExportDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configExportDeliveryInfo_lastErrorMessage :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time that the next delivery occurs.
configExportDeliveryInfo_nextDeliveryTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | An Config rule represents an Lambda function that you create for a
--   custom rule or a predefined function for an Config managed rule. The
--   function evaluates configuration items to assess whether your Amazon
--   Web Services resources comply with your desired configurations. This
--   function can run when Config detects a configuration change to an
--   Amazon Web Services resource and at a periodic frequency that you
--   choose (for example, every 24 hours).
--   
--   You can use the Amazon Web Services CLI and Amazon Web Services SDKs
--   if you want to create a rule that triggers evaluations for your
--   resources when Config delivers the configuration snapshot. For more
--   information, see ConfigSnapshotDeliveryProperties.
--   
--   For more information about developing and using Config rules, see
--   <a>Evaluating Amazon Web Services resource Configurations with
--   Config</a> in the <i>Config Developer Guide</i>.
--   
--   <i>See:</i> <a>newConfigRule</a> smart constructor.
data ConfigRule
ConfigRule' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe Scope -> Maybe ConfigRuleState -> Maybe Text -> Maybe Text -> Source -> ConfigRule

-- | A string, in JSON format, that is passed to the Config rule Lambda
--   function.
[$sel:inputParameters:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The name that you assign to the Config rule. The name is required if
--   you are adding a new rule.
[$sel:configRuleName:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
[$sel:createdBy:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You can specify a value for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:ConfigRule'] :: ConfigRule -> Maybe MaximumExecutionFrequency

-- | The ID of the Config rule.
[$sel:configRuleId:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Defines which resources can trigger an evaluation for the rule. The
--   scope can include one or more resource types, a combination of one
--   resource type and one resource ID, or a combination of a tag key and
--   value. Specify a scope to constrain the resources that can trigger an
--   evaluation for the rule. If you do not specify a scope, evaluations
--   are triggered when any resource in the recording group changes.
--   
--   The scope can be empty.
[$sel:scope:ConfigRule'] :: ConfigRule -> Maybe Scope

-- | Indicates whether the Config rule is active or is currently being
--   deleted by Config. It can also indicate the evaluation status for the
--   Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
[$sel:configRuleState:ConfigRule'] :: ConfigRule -> Maybe ConfigRuleState

-- | The description that you provide for the Config rule.
[$sel:description:ConfigRule'] :: ConfigRule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Config rule.
[$sel:configRuleArn:ConfigRule'] :: ConfigRule -> Maybe Text

-- | Provides the rule owner (Amazon Web Services or customer), the rule
--   identifier, and the notifications that cause the function to evaluate
--   your Amazon Web Services resources.
[$sel:source:ConfigRule'] :: ConfigRule -> Source

-- | Create a value of <a>ConfigRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:ConfigRule'</a>,
--   <a>configRule_inputParameters</a> - A string, in JSON format, that is
--   passed to the Config rule Lambda function.
--   
--   <a>$sel:configRuleName:ConfigRule'</a>,
--   <a>configRule_configRuleName</a> - The name that you assign to the
--   Config rule. The name is required if you are adding a new rule.
--   
--   <a>$sel:createdBy:ConfigRule'</a>, <a>configRule_createdBy</a> -
--   Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
--   
--   <a>$sel:maximumExecutionFrequency:ConfigRule'</a>,
--   <a>configRule_maximumExecutionFrequency</a> - The maximum frequency
--   with which Config runs evaluations for a rule. You can specify a value
--   for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:configRuleId:ConfigRule'</a>, <a>configRule_configRuleId</a> -
--   The ID of the Config rule.
--   
--   <a>$sel:scope:ConfigRule'</a>, <a>configRule_scope</a> - Defines which
--   resources can trigger an evaluation for the rule. The scope can
--   include one or more resource types, a combination of one resource type
--   and one resource ID, or a combination of a tag key and value. Specify
--   a scope to constrain the resources that can trigger an evaluation for
--   the rule. If you do not specify a scope, evaluations are triggered
--   when any resource in the recording group changes.
--   
--   The scope can be empty.
--   
--   <a>$sel:configRuleState:ConfigRule'</a>,
--   <a>configRule_configRuleState</a> - Indicates whether the Config rule
--   is active or is currently being deleted by Config. It can also
--   indicate the evaluation status for the Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
--   
--   <a>$sel:description:ConfigRule'</a>, <a>configRule_description</a> -
--   The description that you provide for the Config rule.
--   
--   <a>$sel:configRuleArn:ConfigRule'</a>, <a>configRule_configRuleArn</a>
--   - The Amazon Resource Name (ARN) of the Config rule.
--   
--   <a>$sel:source:ConfigRule'</a>, <a>configRule_source</a> - Provides
--   the rule owner (Amazon Web Services or customer), the rule identifier,
--   and the notifications that cause the function to evaluate your Amazon
--   Web Services resources.
newConfigRule :: Source -> ConfigRule

-- | A string, in JSON format, that is passed to the Config rule Lambda
--   function.
configRule_inputParameters :: Lens' ConfigRule (Maybe Text)

-- | The name that you assign to the Config rule. The name is required if
--   you are adding a new rule.
configRule_configRuleName :: Lens' ConfigRule (Maybe Text)

-- | Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
configRule_createdBy :: Lens' ConfigRule (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You can specify a value for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
configRule_maximumExecutionFrequency :: Lens' ConfigRule (Maybe MaximumExecutionFrequency)

-- | The ID of the Config rule.
configRule_configRuleId :: Lens' ConfigRule (Maybe Text)

-- | Defines which resources can trigger an evaluation for the rule. The
--   scope can include one or more resource types, a combination of one
--   resource type and one resource ID, or a combination of a tag key and
--   value. Specify a scope to constrain the resources that can trigger an
--   evaluation for the rule. If you do not specify a scope, evaluations
--   are triggered when any resource in the recording group changes.
--   
--   The scope can be empty.
configRule_scope :: Lens' ConfigRule (Maybe Scope)

-- | Indicates whether the Config rule is active or is currently being
--   deleted by Config. It can also indicate the evaluation status for the
--   Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
configRule_configRuleState :: Lens' ConfigRule (Maybe ConfigRuleState)

-- | The description that you provide for the Config rule.
configRule_description :: Lens' ConfigRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRule_configRuleArn :: Lens' ConfigRule (Maybe Text)

-- | Provides the rule owner (Amazon Web Services or customer), the rule
--   identifier, and the notifications that cause the function to evaluate
--   your Amazon Web Services resources.
configRule_source :: Lens' ConfigRule Source

-- | Filters the compliance results based on account ID, region, compliance
--   type, and rule name.
--   
--   <i>See:</i> <a>newConfigRuleComplianceFilters</a> smart constructor.
data ConfigRuleComplianceFilters
ConfigRuleComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> ConfigRuleComplianceFilters

-- | The name of the Config rule.
[$sel:configRuleName:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | The 12-digit account ID of the source account.
[$sel:accountId:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | The rule compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
[$sel:complianceType:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe ComplianceType

-- | The source region where the data is aggregated.
[$sel:awsRegion:ConfigRuleComplianceFilters'] :: ConfigRuleComplianceFilters -> Maybe Text

-- | Create a value of <a>ConfigRuleComplianceFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:accountId:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_complianceType</a> - The rule
--   compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_awsRegion</a> - The source region where
--   the data is aggregated.
newConfigRuleComplianceFilters :: ConfigRuleComplianceFilters

-- | The name of the Config rule.
configRuleComplianceFilters_configRuleName :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The 12-digit account ID of the source account.
configRuleComplianceFilters_accountId :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The rule compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
configRuleComplianceFilters_complianceType :: Lens' ConfigRuleComplianceFilters (Maybe ComplianceType)

-- | The source region where the data is aggregated.
configRuleComplianceFilters_awsRegion :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | Filters the results based on the account IDs and regions.
--   
--   <i>See:</i> <a>newConfigRuleComplianceSummaryFilters</a> smart
--   constructor.
data ConfigRuleComplianceSummaryFilters
ConfigRuleComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> ConfigRuleComplianceSummaryFilters

-- | The 12-digit account ID of the source account.
[$sel:accountId:ConfigRuleComplianceSummaryFilters'] :: ConfigRuleComplianceSummaryFilters -> Maybe Text

-- | The source region where the data is aggregated.
[$sel:awsRegion:ConfigRuleComplianceSummaryFilters'] :: ConfigRuleComplianceSummaryFilters -> Maybe Text

-- | Create a value of <a>ConfigRuleComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_awsRegion</a> - The source
--   region where the data is aggregated.
newConfigRuleComplianceSummaryFilters :: ConfigRuleComplianceSummaryFilters

-- | The 12-digit account ID of the source account.
configRuleComplianceSummaryFilters_accountId :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)

-- | The source region where the data is aggregated.
configRuleComplianceSummaryFilters_awsRegion :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)

-- | Status information for your Config managed rules. The status includes
--   information such as the last time the rule ran, the last time it
--   failed, and the related error for the last failure.
--   
--   This action does not return status information about custom Config
--   rules.
--   
--   <i>See:</i> <a>newConfigRuleEvaluationStatus</a> smart constructor.
data ConfigRuleEvaluationStatus
ConfigRuleEvaluationStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe POSIX -> Maybe Text -> ConfigRuleEvaluationStatus

-- | The error code that Config returned when the rule last failed.
[$sel:lastErrorCode:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The time that Config last failed to evaluate your Amazon Web Services
--   resources against the rule.
[$sel:lastFailedEvaluationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that you first activated the Config rule.
[$sel:firstActivatedTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that Config last successfully evaluated your Amazon Web
--   Services resources against the rule.
[$sel:lastSuccessfulEvaluationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The time that you last turned off the Config rule.
[$sel:lastDeactivatedTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The name of the Config rule.
[$sel:configRuleName:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The error message that Config returned when the rule last failed.
[$sel:lastErrorMessage:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The ID of the Config rule.
[$sel:configRuleId:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | The time that Config last failed to invoke the Config rule to evaluate
--   your Amazon Web Services resources.
[$sel:lastFailedInvocationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | Indicates whether Config has evaluated your resources against the rule
--   at least once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
[$sel:firstEvaluationStarted:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Bool

-- | The time that Config last successfully invoked the Config rule to
--   evaluate your Amazon Web Services resources.
[$sel:lastSuccessfulInvocationTime:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the Config rule.
[$sel:configRuleArn:ConfigRuleEvaluationStatus'] :: ConfigRuleEvaluationStatus -> Maybe Text

-- | Create a value of <a>ConfigRuleEvaluationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorCode</a> - The error code that
--   Config returned when the rule last failed.
--   
--   <a>$sel:lastFailedEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedEvaluationTime</a> - The time
--   that Config last failed to evaluate your Amazon Web Services resources
--   against the rule.
--   
--   <a>$sel:firstActivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstActivatedTime</a> - The time that
--   you first activated the Config rule.
--   
--   <a>$sel:lastSuccessfulEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulEvaluationTime</a> - The
--   time that Config last successfully evaluated your Amazon Web Services
--   resources against the rule.
--   
--   <a>$sel:lastDeactivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastDeactivatedTime</a> - The time that
--   you last turned off the Config rule.
--   
--   <a>$sel:configRuleName:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:lastErrorMessage:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorMessage</a> - The error message
--   that Config returned when the rule last failed.
--   
--   <a>$sel:configRuleId:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleId</a> - The ID of the Config
--   rule.
--   
--   <a>$sel:lastFailedInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedInvocationTime</a> - The time
--   that Config last failed to invoke the Config rule to evaluate your
--   Amazon Web Services resources.
--   
--   <a>$sel:firstEvaluationStarted:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstEvaluationStarted</a> - Indicates
--   whether Config has evaluated your resources against the rule at least
--   once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
--   
--   <a>$sel:lastSuccessfulInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulInvocationTime</a> - The
--   time that Config last successfully invoked the Config rule to evaluate
--   your Amazon Web Services resources.
--   
--   <a>$sel:configRuleArn:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleArn</a> - The Amazon Resource
--   Name (ARN) of the Config rule.
newConfigRuleEvaluationStatus :: ConfigRuleEvaluationStatus

-- | The error code that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorCode :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to evaluate your Amazon Web Services
--   resources against the rule.
configRuleEvaluationStatus_lastFailedEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you first activated the Config rule.
configRuleEvaluationStatus_firstActivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that Config last successfully evaluated your Amazon Web
--   Services resources against the rule.
configRuleEvaluationStatus_lastSuccessfulEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you last turned off the Config rule.
configRuleEvaluationStatus_lastDeactivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The name of the Config rule.
configRuleEvaluationStatus_configRuleName :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The error message that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorMessage :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The ID of the Config rule.
configRuleEvaluationStatus_configRuleId :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to invoke the Config rule to evaluate
--   your Amazon Web Services resources.
configRuleEvaluationStatus_lastFailedInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | Indicates whether Config has evaluated your resources against the rule
--   at least once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
configRuleEvaluationStatus_firstEvaluationStarted :: Lens' ConfigRuleEvaluationStatus (Maybe Bool)

-- | The time that Config last successfully invoked the Config rule to
--   evaluate your Amazon Web Services resources.
configRuleEvaluationStatus_lastSuccessfulInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRuleEvaluationStatus_configRuleArn :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | Provides options for how often Config delivers configuration snapshots
--   to the Amazon S3 bucket in your delivery channel.
--   
--   The frequency for a rule that triggers evaluations for your resources
--   when Config delivers the configuration snapshot is set by one of two
--   values, depending on which is less frequent:
--   
--   <ul>
--   <li>The value for the <tt>deliveryFrequency</tt> parameter within the
--   delivery channel configuration, which sets how often Config delivers
--   configuration snapshots. This value also sets how often Config invokes
--   evaluations for Config rules.</li>
--   <li>The value for the <tt>MaximumExecutionFrequency</tt> parameter,
--   which sets the maximum frequency with which Config invokes evaluations
--   for the rule. For more information, see ConfigRule.</li>
--   </ul>
--   
--   If the <tt>deliveryFrequency</tt> value is less frequent than the
--   <tt>MaximumExecutionFrequency</tt> value for a rule, Config invokes
--   the rule only as often as the <tt>deliveryFrequency</tt> value.
--   
--   <ol>
--   <li>For example, you want your rule to run evaluations when Config
--   delivers the configuration snapshot.</li>
--   <li>You specify the <tt>MaximumExecutionFrequency</tt> value for
--   <tt>Six_Hours</tt>.</li>
--   <li>You then specify the delivery channel <tt>deliveryFrequency</tt>
--   value for <tt>TwentyFour_Hours</tt>.</li>
--   <li>Because the value for <tt>deliveryFrequency</tt> is less frequent
--   than <tt>MaximumExecutionFrequency</tt>, Config invokes evaluations
--   for the rule every 24 hours.</li>
--   </ol>
--   
--   You should set the <tt>MaximumExecutionFrequency</tt> value to be at
--   least as frequent as the <tt>deliveryFrequency</tt> value. You can
--   view the <tt>deliveryFrequency</tt> value by using the
--   <tt>DescribeDeliveryChannnels</tt> action.
--   
--   To update the <tt>deliveryFrequency</tt> with which Config delivers
--   your configuration snapshots, use the <tt>PutDeliveryChannel</tt>
--   action.
--   
--   <i>See:</i> <a>newConfigSnapshotDeliveryProperties</a> smart
--   constructor.
data ConfigSnapshotDeliveryProperties
ConfigSnapshotDeliveryProperties' :: Maybe MaximumExecutionFrequency -> ConfigSnapshotDeliveryProperties

-- | The frequency with which Config delivers configuration snapshots.
[$sel:deliveryFrequency:ConfigSnapshotDeliveryProperties'] :: ConfigSnapshotDeliveryProperties -> Maybe MaximumExecutionFrequency

-- | Create a value of <a>ConfigSnapshotDeliveryProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryFrequency:ConfigSnapshotDeliveryProperties'</a>,
--   <a>configSnapshotDeliveryProperties_deliveryFrequency</a> - The
--   frequency with which Config delivers configuration snapshots.
newConfigSnapshotDeliveryProperties :: ConfigSnapshotDeliveryProperties

-- | The frequency with which Config delivers configuration snapshots.
configSnapshotDeliveryProperties_deliveryFrequency :: Lens' ConfigSnapshotDeliveryProperties (Maybe MaximumExecutionFrequency)

-- | A list that contains the status of the delivery of the configuration
--   stream notification to the Amazon SNS topic.
--   
--   <i>See:</i> <a>newConfigStreamDeliveryInfo</a> smart constructor.
data ConfigStreamDeliveryInfo
ConfigStreamDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> ConfigStreamDeliveryInfo

-- | The error code from the last attempted delivery.
[$sel:lastErrorCode:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe Text

-- | The time from the last status change.
[$sel:lastStatusChangeTime:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe POSIX

-- | Status of the last attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
[$sel:lastStatus:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe DeliveryStatus

-- | The error message from the last attempted delivery.
[$sel:lastErrorMessage:ConfigStreamDeliveryInfo'] :: ConfigStreamDeliveryInfo -> Maybe Text

-- | Create a value of <a>ConfigStreamDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastStatusChangeTime:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatusChangeTime</a> - The time from
--   the last status change.
--   
--   <a>$sel:lastStatus:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
--   
--   <a>$sel:lastErrorMessage:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
newConfigStreamDeliveryInfo :: ConfigStreamDeliveryInfo

-- | The error code from the last attempted delivery.
configStreamDeliveryInfo_lastErrorCode :: Lens' ConfigStreamDeliveryInfo (Maybe Text)

-- | The time from the last status change.
configStreamDeliveryInfo_lastStatusChangeTime :: Lens' ConfigStreamDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
configStreamDeliveryInfo_lastStatus :: Lens' ConfigStreamDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configStreamDeliveryInfo_lastErrorMessage :: Lens' ConfigStreamDeliveryInfo (Maybe Text)

-- | The details about the configuration aggregator, including information
--   about source accounts, regions, and metadata of the aggregator.
--   
--   <i>See:</i> <a>newConfigurationAggregator</a> smart constructor.
data ConfigurationAggregator
ConfigurationAggregator' :: Maybe Text -> Maybe POSIX -> Maybe OrganizationAggregationSource -> Maybe POSIX -> Maybe [AccountAggregationSource] -> Maybe Text -> Maybe Text -> ConfigurationAggregator

-- | The Amazon Resource Name (ARN) of the aggregator.
[$sel:configurationAggregatorArn:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | The time stamp when the configuration aggregator was created.
[$sel:creationTime:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe POSIX

-- | Provides an organization and list of regions to be aggregated.
[$sel:organizationAggregationSource:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe OrganizationAggregationSource

-- | The time of the last update.
[$sel:lastUpdatedTime:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe POSIX

-- | Provides a list of source accounts and regions to be aggregated.
[$sel:accountAggregationSources:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe [AccountAggregationSource]

-- | Amazon Web Services service that created the configuration aggregator.
[$sel:createdBy:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | The name of the aggregator.
[$sel:configurationAggregatorName:ConfigurationAggregator'] :: ConfigurationAggregator -> Maybe Text

-- | Create a value of <a>ConfigurationAggregator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationAggregatorArn:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorArn</a> - The Amazon
--   Resource Name (ARN) of the aggregator.
--   
--   <a>$sel:creationTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_creationTime</a> - The time stamp when the
--   configuration aggregator was created.
--   
--   <a>$sel:organizationAggregationSource:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_organizationAggregationSource</a> -
--   Provides an organization and list of regions to be aggregated.
--   
--   <a>$sel:lastUpdatedTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_lastUpdatedTime</a> - The time of the last
--   update.
--   
--   <a>$sel:accountAggregationSources:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_accountAggregationSources</a> - Provides a
--   list of source accounts and regions to be aggregated.
--   
--   <a>$sel:createdBy:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_createdBy</a> - Amazon Web Services service
--   that created the configuration aggregator.
--   
--   <a>$sel:configurationAggregatorName:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorName</a> - The name
--   of the aggregator.
newConfigurationAggregator :: ConfigurationAggregator

-- | The Amazon Resource Name (ARN) of the aggregator.
configurationAggregator_configurationAggregatorArn :: Lens' ConfigurationAggregator (Maybe Text)

-- | The time stamp when the configuration aggregator was created.
configurationAggregator_creationTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides an organization and list of regions to be aggregated.
configurationAggregator_organizationAggregationSource :: Lens' ConfigurationAggregator (Maybe OrganizationAggregationSource)

-- | The time of the last update.
configurationAggregator_lastUpdatedTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides a list of source accounts and regions to be aggregated.
configurationAggregator_accountAggregationSources :: Lens' ConfigurationAggregator (Maybe [AccountAggregationSource])

-- | Amazon Web Services service that created the configuration aggregator.
configurationAggregator_createdBy :: Lens' ConfigurationAggregator (Maybe Text)

-- | The name of the aggregator.
configurationAggregator_configurationAggregatorName :: Lens' ConfigurationAggregator (Maybe Text)

-- | A list that contains detailed configurations of a specified resource.
--   
--   <i>See:</i> <a>newConfigurationItem</a> smart constructor.
data ConfigurationItem
ConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [Relationship] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ConfigurationItem

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The type of Amazon Web Services resource.
[$sel:resourceType:ConfigurationItem'] :: ConfigurationItem -> Maybe ResourceType

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
[$sel:configurationStateId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Amazon Resource Name (ARN) associated with the resource.
[$sel:arn:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The custom name of the resource, if available.
[$sel:resourceName:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The time stamp when the resource was created.
[$sel:resourceCreationTime:ConfigurationItem'] :: ConfigurationItem -> Maybe POSIX

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
[$sel:configurationItemStatus:ConfigurationItem'] :: ConfigurationItem -> Maybe ConfigurationItemStatus

-- | The time when the configuration recording was initiated.
[$sel:configurationItemCaptureTime:ConfigurationItem'] :: ConfigurationItem -> Maybe POSIX

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
[$sel:accountId:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the
--   <tt>configuration</tt> parameter.
[$sel:supplementaryConfiguration:ConfigurationItem'] :: ConfigurationItem -> Maybe (HashMap Text Text)

-- | The Availability Zone associated with the resource.
[$sel:availabilityZone:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A list of related Amazon Web Services resources.
[$sel:relationships:ConfigurationItem'] :: ConfigurationItem -> Maybe [Relationship]

-- | The version number of the resource configuration.
[$sel:version:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | The region where the resource resides.
[$sel:awsRegion:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A list of CloudTrail event IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
[$sel:relatedEvents:ConfigurationItem'] :: ConfigurationItem -> Maybe [Text]

-- | The description of the resource configuration.
[$sel:configuration:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | Unique MD5 hash that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
[$sel:configurationItemMD5Hash:ConfigurationItem'] :: ConfigurationItem -> Maybe Text

-- | A mapping of key value tags associated with the resource.
[$sel:tags:ConfigurationItem'] :: ConfigurationItem -> Maybe (HashMap Text Text)

-- | Create a value of <a>ConfigurationItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ConfigurationItem'</a>,
--   <a>configurationItem_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ConfigurationItem'</a>,
--   <a>configurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:ConfigurationItem'</a>,
--   <a>configurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:ConfigurationItem'</a>, <a>configurationItem_arn</a> -
--   Amazon Resource Name (ARN) associated with the resource.
--   
--   <a>$sel:resourceName:ConfigurationItem'</a>,
--   <a>configurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:ConfigurationItem'</a>,
--   <a>configurationItem_resourceCreationTime</a> - The time stamp when
--   the resource was created.
--   
--   <a>$sel:configurationItemStatus:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemStatus</a> - The configuration
--   item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemCaptureTime</a> - The time when
--   the configuration recording was initiated.
--   
--   <a>$sel:accountId:ConfigurationItem'</a>,
--   <a>configurationItem_accountId</a> - The 12-digit Amazon Web Services
--   account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:ConfigurationItem'</a>,
--   <a>configurationItem_supplementaryConfiguration</a> - Configuration
--   attributes that Config returns for certain resource types to
--   supplement the information returned for the <tt>configuration</tt>
--   parameter.
--   
--   <a>$sel:availabilityZone:ConfigurationItem'</a>,
--   <a>configurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:relationships:ConfigurationItem'</a>,
--   <a>configurationItem_relationships</a> - A list of related Amazon Web
--   Services resources.
--   
--   <a>$sel:version:ConfigurationItem'</a>,
--   <a>configurationItem_version</a> - The version number of the resource
--   configuration.
--   
--   <a>$sel:awsRegion:ConfigurationItem'</a>,
--   <a>configurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:relatedEvents:ConfigurationItem'</a>,
--   <a>configurationItem_relatedEvents</a> - A list of CloudTrail event
--   IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
--   
--   <a>$sel:configuration:ConfigurationItem'</a>,
--   <a>configurationItem_configuration</a> - The description of the
--   resource configuration.
--   
--   <a>$sel:configurationItemMD5Hash:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemMD5Hash</a> - Unique MD5 hash
--   that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
--   
--   <a>$sel:tags:ConfigurationItem'</a>, <a>configurationItem_tags</a> - A
--   mapping of key value tags associated with the resource.
newConfigurationItem :: ConfigurationItem

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
configurationItem_resourceId :: Lens' ConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
configurationItem_resourceType :: Lens' ConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
configurationItem_configurationStateId :: Lens' ConfigurationItem (Maybe Text)

-- | Amazon Resource Name (ARN) associated with the resource.
configurationItem_arn :: Lens' ConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
configurationItem_resourceName :: Lens' ConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
configurationItem_resourceCreationTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
configurationItem_configurationItemStatus :: Lens' ConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
configurationItem_configurationItemCaptureTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
configurationItem_accountId :: Lens' ConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the
--   <tt>configuration</tt> parameter.
configurationItem_supplementaryConfiguration :: Lens' ConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
configurationItem_availabilityZone :: Lens' ConfigurationItem (Maybe Text)

-- | A list of related Amazon Web Services resources.
configurationItem_relationships :: Lens' ConfigurationItem (Maybe [Relationship])

-- | The version number of the resource configuration.
configurationItem_version :: Lens' ConfigurationItem (Maybe Text)

-- | The region where the resource resides.
configurationItem_awsRegion :: Lens' ConfigurationItem (Maybe Text)

-- | A list of CloudTrail event IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
configurationItem_relatedEvents :: Lens' ConfigurationItem (Maybe [Text])

-- | The description of the resource configuration.
configurationItem_configuration :: Lens' ConfigurationItem (Maybe Text)

-- | Unique MD5 hash that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
configurationItem_configurationItemMD5Hash :: Lens' ConfigurationItem (Maybe Text)

-- | A mapping of key value tags associated with the resource.
configurationItem_tags :: Lens' ConfigurationItem (Maybe (HashMap Text Text))

-- | An object that represents the recording of configuration changes of an
--   Amazon Web Services resource.
--   
--   <i>See:</i> <a>newConfigurationRecorder</a> smart constructor.
data ConfigurationRecorder
ConfigurationRecorder' :: Maybe Text -> Maybe RecordingGroup -> Maybe Text -> ConfigurationRecorder

-- | The name of the recorder. By default, Config automatically assigns the
--   name "default" when creating the configuration recorder. You cannot
--   change the assigned name.
[$sel:name:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe Text

-- | Specifies the types of Amazon Web Services resources for which Config
--   records configuration changes.
[$sel:recordingGroup:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe RecordingGroup

-- | Amazon Resource Name (ARN) of the IAM role used to describe the Amazon
--   Web Services resources associated with the account.
[$sel:roleARN:ConfigurationRecorder'] :: ConfigurationRecorder -> Maybe Text

-- | Create a value of <a>ConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_name</a> - The name of the recorder. By
--   default, Config automatically assigns the name "default" when creating
--   the configuration recorder. You cannot change the assigned name.
--   
--   <a>$sel:recordingGroup:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_recordingGroup</a> - Specifies the types of
--   Amazon Web Services resources for which Config records configuration
--   changes.
--   
--   <a>$sel:roleARN:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_roleARN</a> - Amazon Resource Name (ARN) of
--   the IAM role used to describe the Amazon Web Services resources
--   associated with the account.
newConfigurationRecorder :: ConfigurationRecorder

-- | The name of the recorder. By default, Config automatically assigns the
--   name "default" when creating the configuration recorder. You cannot
--   change the assigned name.
configurationRecorder_name :: Lens' ConfigurationRecorder (Maybe Text)

-- | Specifies the types of Amazon Web Services resources for which Config
--   records configuration changes.
configurationRecorder_recordingGroup :: Lens' ConfigurationRecorder (Maybe RecordingGroup)

-- | Amazon Resource Name (ARN) of the IAM role used to describe the Amazon
--   Web Services resources associated with the account.
configurationRecorder_roleARN :: Lens' ConfigurationRecorder (Maybe Text)

-- | The current status of the configuration recorder.
--   
--   <i>See:</i> <a>newConfigurationRecorderStatus</a> smart constructor.
data ConfigurationRecorderStatus
ConfigurationRecorderStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Maybe RecorderStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> ConfigurationRecorderStatus

-- | The error code indicating that the recording failed.
[$sel:lastErrorCode:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The time the recorder was last stopped.
[$sel:lastStopTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | The time when the status was last changed.
[$sel:lastStatusChangeTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | Specifies whether or not the recorder is currently recording.
[$sel:recording:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Bool

-- | The last (previous) status of the recorder.
[$sel:lastStatus:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe RecorderStatus

-- | The message indicating that the recording failed due to an error.
[$sel:lastErrorMessage:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The name of the configuration recorder.
[$sel:name:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe Text

-- | The time the recorder was last started.
[$sel:lastStartTime:ConfigurationRecorderStatus'] :: ConfigurationRecorderStatus -> Maybe POSIX

-- | Create a value of <a>ConfigurationRecorderStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorCode</a> - The error code
--   indicating that the recording failed.
--   
--   <a>$sel:lastStopTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStopTime</a> - The time the
--   recorder was last stopped.
--   
--   <a>$sel:lastStatusChangeTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatusChangeTime</a> - The time
--   when the status was last changed.
--   
--   <a>$sel:recording:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_recording</a> - Specifies whether or
--   not the recorder is currently recording.
--   
--   <a>$sel:lastStatus:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatus</a> - The last (previous)
--   status of the recorder.
--   
--   <a>$sel:lastErrorMessage:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorMessage</a> - The message
--   indicating that the recording failed due to an error.
--   
--   <a>$sel:name:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_name</a> - The name of the
--   configuration recorder.
--   
--   <a>$sel:lastStartTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStartTime</a> - The time the
--   recorder was last started.
newConfigurationRecorderStatus :: ConfigurationRecorderStatus

-- | The error code indicating that the recording failed.
configurationRecorderStatus_lastErrorCode :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last stopped.
configurationRecorderStatus_lastStopTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | The time when the status was last changed.
configurationRecorderStatus_lastStatusChangeTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | Specifies whether or not the recorder is currently recording.
configurationRecorderStatus_recording :: Lens' ConfigurationRecorderStatus (Maybe Bool)

-- | The last (previous) status of the recorder.
configurationRecorderStatus_lastStatus :: Lens' ConfigurationRecorderStatus (Maybe RecorderStatus)

-- | The message indicating that the recording failed due to an error.
configurationRecorderStatus_lastErrorMessage :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The name of the configuration recorder.
configurationRecorderStatus_name :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last started.
configurationRecorderStatus_lastStartTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | Filters the conformance pack by compliance types and Config rule
--   names.
--   
--   <i>See:</i> <a>newConformancePackComplianceFilters</a> smart
--   constructor.
data ConformancePackComplianceFilters
ConformancePackComplianceFilters' :: Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackComplianceFilters

-- | Filters the results by Config rule names.
[$sel:configRuleNames:ConformancePackComplianceFilters'] :: ConformancePackComplianceFilters -> Maybe [Text]

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackComplianceFilters'] :: ConformancePackComplianceFilters -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackComplianceFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackComplianceFilters :: ConformancePackComplianceFilters

-- | Filters the results by Config rule names.
conformancePackComplianceFilters_configRuleNames :: Lens' ConformancePackComplianceFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackComplianceFilters_complianceType :: Lens' ConformancePackComplianceFilters (Maybe ConformancePackComplianceType)

-- | Summary includes the name and status of the conformance pack.
--   
--   <i>See:</i> <a>newConformancePackComplianceSummary</a> smart
--   constructor.
data ConformancePackComplianceSummary
ConformancePackComplianceSummary' :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | The name of the conformance pack name.
[$sel:conformancePackName:ConformancePackComplianceSummary'] :: ConformancePackComplianceSummary -> Text

-- | The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
[$sel:conformancePackComplianceStatus:ConformancePackComplianceSummary'] :: ConformancePackComplianceSummary -> ConformancePackComplianceType

-- | Create a value of <a>ConformancePackComplianceSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackName:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackName</a> - The name
--   of the conformance pack name.
--   
--   
--   <a>$sel:conformancePackComplianceStatus:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackComplianceStatus</a>
--   - The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackComplianceSummary :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | The name of the conformance pack name.
conformancePackComplianceSummary_conformancePackName :: Lens' ConformancePackComplianceSummary Text

-- | The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackComplianceSummary_conformancePackComplianceStatus :: Lens' ConformancePackComplianceSummary ConformancePackComplianceType

-- | Returns details of a conformance pack. A conformance pack is a
--   collection of Config rules and remediation actions that can be easily
--   deployed in an account and a region.
--   
--   <i>See:</i> <a>newConformancePackDetail</a> smart constructor.
data ConformancePackDetail
ConformancePackDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [ConformancePackInputParameter] -> Text -> Text -> Text -> ConformancePackDetail

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
[$sel:deliveryS3Bucket:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | Amazon Web Services service that created the conformance pack.
[$sel:createdBy:ConformancePackDetail'] :: ConformancePackDetail -> Maybe Text

-- | Last time when conformation pack update was requested.
[$sel:lastUpdateRequestedTime:ConformancePackDetail'] :: ConformancePackDetail -> Maybe POSIX

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:ConformancePackDetail'] :: ConformancePackDetail -> Maybe [ConformancePackInputParameter]

-- | Name of the conformance pack.
[$sel:conformancePackName:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | Amazon Resource Name (ARN) of the conformance pack.
[$sel:conformancePackArn:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | ID of the conformance pack.
[$sel:conformancePackId:ConformancePackDetail'] :: ConformancePackDetail -> Text

-- | Create a value of <a>ConformancePackDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3Bucket</a> - The name of the Amazon
--   S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3KeyPrefix</a> - The prefix for the
--   Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:createdBy:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_createdBy</a> - Amazon Web Services service
--   that created the conformance pack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_lastUpdateRequestedTime</a> - Last time when
--   conformation pack update was requested.
--   
--   <a>$sel:conformancePackInputParameters:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackInputParameters</a> - A list
--   of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:conformancePackName:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackArn</a> - Amazon Resource Name
--   (ARN) of the conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackId</a> - ID of the conformance
--   pack.
newConformancePackDetail :: Text -> Text -> Text -> ConformancePackDetail

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
conformancePackDetail_deliveryS3Bucket :: Lens' ConformancePackDetail (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
conformancePackDetail_deliveryS3KeyPrefix :: Lens' ConformancePackDetail (Maybe Text)

-- | Amazon Web Services service that created the conformance pack.
conformancePackDetail_createdBy :: Lens' ConformancePackDetail (Maybe Text)

-- | Last time when conformation pack update was requested.
conformancePackDetail_lastUpdateRequestedTime :: Lens' ConformancePackDetail (Maybe UTCTime)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
conformancePackDetail_conformancePackInputParameters :: Lens' ConformancePackDetail (Maybe [ConformancePackInputParameter])

-- | Name of the conformance pack.
conformancePackDetail_conformancePackName :: Lens' ConformancePackDetail Text

-- | Amazon Resource Name (ARN) of the conformance pack.
conformancePackDetail_conformancePackArn :: Lens' ConformancePackDetail Text

-- | ID of the conformance pack.
conformancePackDetail_conformancePackId :: Lens' ConformancePackDetail Text

-- | Filters a conformance pack by Config rule names, compliance types,
--   Amazon Web Services resource types, and resource IDs.
--   
--   <i>See:</i> <a>newConformancePackEvaluationFilters</a> smart
--   constructor.
data ConformancePackEvaluationFilters
ConformancePackEvaluationFilters' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackEvaluationFilters

-- | Filters the results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
[$sel:resourceIds:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe [Text]

-- | Filters the results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
[$sel:resourceType:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe Text

-- | Filters the results by Config rule names.
[$sel:configRuleNames:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe [Text]

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackEvaluationFilters'] :: ConformancePackEvaluationFilters -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackEvaluationFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceIds</a> - Filters the
--   results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
--   
--   <a>$sel:resourceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceType</a> - Filters the
--   results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:configRuleNames:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackEvaluationFilters :: ConformancePackEvaluationFilters

-- | Filters the results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
conformancePackEvaluationFilters_resourceIds :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
conformancePackEvaluationFilters_resourceType :: Lens' ConformancePackEvaluationFilters (Maybe Text)

-- | Filters the results by Config rule names.
conformancePackEvaluationFilters_configRuleNames :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationFilters_complianceType :: Lens' ConformancePackEvaluationFilters (Maybe ConformancePackComplianceType)

-- | The details of a conformance pack evaluation. Provides Config rule and
--   Amazon Web Services resource type that was evaluated, the compliance
--   of the conformance pack, related time stamps, and supplementary
--   information.
--   
--   <i>See:</i> <a>newConformancePackEvaluationResult</a> smart
--   constructor.
data ConformancePackEvaluationResult
ConformancePackEvaluationResult' :: Maybe Text -> ConformancePackComplianceType -> EvaluationResultIdentifier -> POSIX -> POSIX -> ConformancePackEvaluationResult

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> Maybe Text

-- | The compliance type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
[$sel:complianceType:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> ConformancePackComplianceType
[$sel:evaluationResultIdentifier:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> EvaluationResultIdentifier

-- | The time when Config rule evaluated Amazon Web Services resource.
[$sel:configRuleInvokedTime:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> POSIX

-- | The time when Config recorded the evaluation result.
[$sel:resultRecordedTime:ConformancePackEvaluationResult'] :: ConformancePackEvaluationResult -> POSIX

-- | Create a value of <a>ConformancePackEvaluationResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_annotation</a> - Supplementary
--   information about how the evaluation determined the compliance.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_complianceType</a> - The compliance
--   type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
--   
--   
--   <a>$sel:evaluationResultIdentifier:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_evaluationResultIdentifier</a> -
--   Undocumented member.
--   
--   <a>$sel:configRuleInvokedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_configRuleInvokedTime</a> - The
--   time when Config rule evaluated Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_resultRecordedTime</a> - The time
--   when Config recorded the evaluation result.
newConformancePackEvaluationResult :: ConformancePackComplianceType -> EvaluationResultIdentifier -> UTCTime -> UTCTime -> ConformancePackEvaluationResult

-- | Supplementary information about how the evaluation determined the
--   compliance.
conformancePackEvaluationResult_annotation :: Lens' ConformancePackEvaluationResult (Maybe Text)

-- | The compliance type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationResult_complianceType :: Lens' ConformancePackEvaluationResult ConformancePackComplianceType

-- | Undocumented member.
conformancePackEvaluationResult_evaluationResultIdentifier :: Lens' ConformancePackEvaluationResult EvaluationResultIdentifier

-- | The time when Config rule evaluated Amazon Web Services resource.
conformancePackEvaluationResult_configRuleInvokedTime :: Lens' ConformancePackEvaluationResult UTCTime

-- | The time when Config recorded the evaluation result.
conformancePackEvaluationResult_resultRecordedTime :: Lens' ConformancePackEvaluationResult UTCTime

-- | Input parameters in the form of key-value pairs for the conformance
--   pack, both of which you define. Keys can have a maximum character
--   length of 255 characters, and values can have a maximum length of 4096
--   characters.
--   
--   <i>See:</i> <a>newConformancePackInputParameter</a> smart constructor.
data ConformancePackInputParameter
ConformancePackInputParameter' :: Text -> Text -> ConformancePackInputParameter

-- | One part of a key-value pair.
[$sel:parameterName:ConformancePackInputParameter'] :: ConformancePackInputParameter -> Text

-- | Another part of the key-value pair.
[$sel:parameterValue:ConformancePackInputParameter'] :: ConformancePackInputParameter -> Text

-- | Create a value of <a>ConformancePackInputParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterName:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterName</a> - One part of a
--   key-value pair.
--   
--   <a>$sel:parameterValue:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterValue</a> - Another part of
--   the key-value pair.
newConformancePackInputParameter :: Text -> Text -> ConformancePackInputParameter

-- | One part of a key-value pair.
conformancePackInputParameter_parameterName :: Lens' ConformancePackInputParameter Text

-- | Another part of the key-value pair.
conformancePackInputParameter_parameterValue :: Lens' ConformancePackInputParameter Text

-- | Compliance information of one or more Config rules within a
--   conformance pack. You can filter using Config rule names and
--   compliance types.
--   
--   <i>See:</i> <a>newConformancePackRuleCompliance</a> smart constructor.
data ConformancePackRuleCompliance
ConformancePackRuleCompliance' :: Maybe [Text] -> Maybe Text -> Maybe ConformancePackComplianceType -> ConformancePackRuleCompliance

-- | Controls for the conformance pack. A control is a process to prevent
--   or detect problems while meeting objectives. A control can align with
--   a specific compliance regime or map to internal controls defined by an
--   organization.
[$sel:controls:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe [Text]

-- | Name of the config rule.
[$sel:configRuleName:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe Text

-- | Compliance of the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
[$sel:complianceType:ConformancePackRuleCompliance'] :: ConformancePackRuleCompliance -> Maybe ConformancePackComplianceType

-- | Create a value of <a>ConformancePackRuleCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controls:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_controls</a> - Controls for the
--   conformance pack. A control is a process to prevent or detect problems
--   while meeting objectives. A control can align with a specific
--   compliance regime or map to internal controls defined by an
--   organization.
--   
--   <a>$sel:configRuleName:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_configRuleName</a> - Name of the
--   config rule.
--   
--   <a>$sel:complianceType:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_complianceType</a> - Compliance of
--   the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackRuleCompliance :: ConformancePackRuleCompliance

-- | Controls for the conformance pack. A control is a process to prevent
--   or detect problems while meeting objectives. A control can align with
--   a specific compliance regime or map to internal controls defined by an
--   organization.
conformancePackRuleCompliance_controls :: Lens' ConformancePackRuleCompliance (Maybe [Text])

-- | Name of the config rule.
conformancePackRuleCompliance_configRuleName :: Lens' ConformancePackRuleCompliance (Maybe Text)

-- | Compliance of the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackRuleCompliance_complianceType :: Lens' ConformancePackRuleCompliance (Maybe ConformancePackComplianceType)

-- | Status details of a conformance pack.
--   
--   <i>See:</i> <a>newConformancePackStatusDetail</a> smart constructor.
data ConformancePackStatusDetail
ConformancePackStatusDetail' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ConformancePackState -> Text -> POSIX -> ConformancePackStatusDetail

-- | The reason of conformance pack creation failure.
[$sel:conformancePackStatusReason:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Maybe Text

-- | Last time when conformation pack creation and update was successful.
[$sel:lastUpdateCompletedTime:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Maybe POSIX

-- | Name of the conformance pack.
[$sel:conformancePackName:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | ID of the conformance pack.
[$sel:conformancePackId:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Amazon Resource Name (ARN) of comformance pack.
[$sel:conformancePackArn:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Indicates deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
[$sel:conformancePackState:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> ConformancePackState

-- | Amazon Resource Name (ARN) of CloudFormation stack.
[$sel:stackArn:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> Text

-- | Last time when conformation pack creation and update was requested.
[$sel:lastUpdateRequestedTime:ConformancePackStatusDetail'] :: ConformancePackStatusDetail -> POSIX

-- | Create a value of <a>ConformancePackStatusDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackStatusReason:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackStatusReason</a> - The
--   reason of conformance pack creation failure.
--   
--   <a>$sel:lastUpdateCompletedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateCompletedTime</a> - Last time
--   when conformation pack creation and update was successful.
--   
--   <a>$sel:conformancePackName:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackId</a> - ID of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackArn</a> - Amazon
--   Resource Name (ARN) of comformance pack.
--   
--   <a>$sel:conformancePackState:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackState</a> - Indicates
--   deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
--   
--   <a>$sel:stackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_stackArn</a> - Amazon Resource Name
--   (ARN) of CloudFormation stack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateRequestedTime</a> - Last time
--   when conformation pack creation and update was requested.
newConformancePackStatusDetail :: Text -> Text -> Text -> ConformancePackState -> Text -> UTCTime -> ConformancePackStatusDetail

-- | The reason of conformance pack creation failure.
conformancePackStatusDetail_conformancePackStatusReason :: Lens' ConformancePackStatusDetail (Maybe Text)

-- | Last time when conformation pack creation and update was successful.
conformancePackStatusDetail_lastUpdateCompletedTime :: Lens' ConformancePackStatusDetail (Maybe UTCTime)

-- | Name of the conformance pack.
conformancePackStatusDetail_conformancePackName :: Lens' ConformancePackStatusDetail Text

-- | ID of the conformance pack.
conformancePackStatusDetail_conformancePackId :: Lens' ConformancePackStatusDetail Text

-- | Amazon Resource Name (ARN) of comformance pack.
conformancePackStatusDetail_conformancePackArn :: Lens' ConformancePackStatusDetail Text

-- | Indicates deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
conformancePackStatusDetail_conformancePackState :: Lens' ConformancePackStatusDetail ConformancePackState

-- | Amazon Resource Name (ARN) of CloudFormation stack.
conformancePackStatusDetail_stackArn :: Lens' ConformancePackStatusDetail Text

-- | Last time when conformation pack creation and update was requested.
conformancePackStatusDetail_lastUpdateRequestedTime :: Lens' ConformancePackStatusDetail UTCTime

-- | The channel through which Config delivers notifications and updated
--   configuration states.
--   
--   <i>See:</i> <a>newDeliveryChannel</a> smart constructor.
data DeliveryChannel
DeliveryChannel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigSnapshotDeliveryProperties -> Maybe Text -> DeliveryChannel

-- | The prefix for the specified Amazon S3 bucket.
[$sel:s3KeyPrefix:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
--   sends notifications about configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
[$sel:snsTopicARN:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
[$sel:name:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS )
--   KMS key (KMS key) used to encrypt objects delivered by Config. Must
--   belong to the same Region as the destination S3 bucket.
[$sel:s3KmsKeyArn:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | The options for how often Config delivers configuration snapshots to
--   the Amazon S3 bucket.
[$sel:configSnapshotDeliveryProperties:DeliveryChannel'] :: DeliveryChannel -> Maybe ConfigSnapshotDeliveryProperties

-- | The name of the Amazon S3 bucket to which Config delivers
--   configuration snapshots and configuration history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
[$sel:s3BucketName:DeliveryChannel'] :: DeliveryChannel -> Maybe Text

-- | Create a value of <a>DeliveryChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KeyPrefix</a> - The prefix for the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:snsTopicARN:DeliveryChannel'</a>,
--   <a>deliveryChannel_snsTopicARN</a> - The Amazon Resource Name (ARN) of
--   the Amazon SNS topic to which Config sends notifications about
--   configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
--   
--   <a>$sel:name:DeliveryChannel'</a>, <a>deliveryChannel_name</a> - The
--   name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
--   
--   <a>$sel:s3KmsKeyArn:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KmsKeyArn</a> - The Amazon Resource Name (ARN) of
--   the Key Management Service (KMS ) KMS key (KMS key) used to encrypt
--   objects delivered by Config. Must belong to the same Region as the
--   destination S3 bucket.
--   
--   <a>$sel:configSnapshotDeliveryProperties:DeliveryChannel'</a>,
--   <a>deliveryChannel_configSnapshotDeliveryProperties</a> - The options
--   for how often Config delivers configuration snapshots to the Amazon S3
--   bucket.
--   
--   <a>$sel:s3BucketName:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3BucketName</a> - The name of the Amazon S3 bucket
--   to which Config delivers configuration snapshots and configuration
--   history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
newDeliveryChannel :: DeliveryChannel

-- | The prefix for the specified Amazon S3 bucket.
deliveryChannel_s3KeyPrefix :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
--   sends notifications about configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
deliveryChannel_snsTopicARN :: Lens' DeliveryChannel (Maybe Text)

-- | The name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
deliveryChannel_name :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS )
--   KMS key (KMS key) used to encrypt objects delivered by Config. Must
--   belong to the same Region as the destination S3 bucket.
deliveryChannel_s3KmsKeyArn :: Lens' DeliveryChannel (Maybe Text)

-- | The options for how often Config delivers configuration snapshots to
--   the Amazon S3 bucket.
deliveryChannel_configSnapshotDeliveryProperties :: Lens' DeliveryChannel (Maybe ConfigSnapshotDeliveryProperties)

-- | The name of the Amazon S3 bucket to which Config delivers
--   configuration snapshots and configuration history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
deliveryChannel_s3BucketName :: Lens' DeliveryChannel (Maybe Text)

-- | The status of a specified delivery channel.
--   
--   Valid values: <tt>Success</tt> | <tt>Failure</tt>
--   
--   <i>See:</i> <a>newDeliveryChannelStatus</a> smart constructor.
data DeliveryChannelStatus
DeliveryChannelStatus' :: Maybe ConfigExportDeliveryInfo -> Maybe ConfigStreamDeliveryInfo -> Maybe ConfigExportDeliveryInfo -> Maybe Text -> DeliveryChannelStatus

-- | A list containing the status of the delivery of the snapshot to the
--   specified Amazon S3 bucket.
[$sel:configSnapshotDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigExportDeliveryInfo

-- | A list containing the status of the delivery of the configuration
--   stream notification to the specified Amazon SNS topic.
[$sel:configStreamDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigStreamDeliveryInfo

-- | A list that contains the status of the delivery of the configuration
--   history to the specified Amazon S3 bucket.
[$sel:configHistoryDeliveryInfo:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe ConfigExportDeliveryInfo

-- | The name of the delivery channel.
[$sel:name:DeliveryChannelStatus'] :: DeliveryChannelStatus -> Maybe Text

-- | Create a value of <a>DeliveryChannelStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configSnapshotDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configSnapshotDeliveryInfo</a> - A list
--   containing the status of the delivery of the snapshot to the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:configStreamDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configStreamDeliveryInfo</a> - A list
--   containing the status of the delivery of the configuration stream
--   notification to the specified Amazon SNS topic.
--   
--   <a>$sel:configHistoryDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configHistoryDeliveryInfo</a> - A list that
--   contains the status of the delivery of the configuration history to
--   the specified Amazon S3 bucket.
--   
--   <a>$sel:name:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_name</a> - The name of the delivery channel.
newDeliveryChannelStatus :: DeliveryChannelStatus

-- | A list containing the status of the delivery of the snapshot to the
--   specified Amazon S3 bucket.
deliveryChannelStatus_configSnapshotDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | A list containing the status of the delivery of the configuration
--   stream notification to the specified Amazon SNS topic.
deliveryChannelStatus_configStreamDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigStreamDeliveryInfo)

-- | A list that contains the status of the delivery of the configuration
--   history to the specified Amazon S3 bucket.
deliveryChannelStatus_configHistoryDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | The name of the delivery channel.
deliveryChannelStatus_name :: Lens' DeliveryChannelStatus (Maybe Text)

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> Evaluation

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:Evaluation'] :: Evaluation -> Maybe Text

-- | The type of Amazon Web Services resource that was evaluated.
[$sel:complianceResourceType:Evaluation'] :: Evaluation -> Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:complianceResourceId:Evaluation'] :: Evaluation -> Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that it was evaluated against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
[$sel:complianceType:Evaluation'] :: Evaluation -> ComplianceType

-- | The time of the event in Config that triggered the evaluation. For
--   event-based evaluations, the time indicates when Config created the
--   configuration item that triggered the evaluation. For periodic
--   evaluations, the time indicates when Config triggered the evaluation
--   at the frequency that you specified (for example, every 24 hours).
[$sel:orderingTimestamp:Evaluation'] :: Evaluation -> POSIX

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:Evaluation'</a>, <a>evaluation_annotation</a> -
--   Supplementary information about how the evaluation determined the
--   compliance.
--   
--   <a>$sel:complianceResourceType:Evaluation'</a>,
--   <a>evaluation_complianceResourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceResourceId:Evaluation'</a>,
--   <a>evaluation_complianceResourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceType:Evaluation'</a>,
--   <a>evaluation_complianceType</a> - Indicates whether the Amazon Web
--   Services resource complies with the Config rule that it was evaluated
--   against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
--   
--   <a>$sel:orderingTimestamp:Evaluation'</a>,
--   <a>evaluation_orderingTimestamp</a> - The time of the event in Config
--   that triggered the evaluation. For event-based evaluations, the time
--   indicates when Config created the configuration item that triggered
--   the evaluation. For periodic evaluations, the time indicates when
--   Config triggered the evaluation at the frequency that you specified
--   (for example, every 24 hours).
newEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> Evaluation

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluation_annotation :: Lens' Evaluation (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluation_complianceResourceType :: Lens' Evaluation Text

-- | The ID of the Amazon Web Services resource that was evaluated.
evaluation_complianceResourceId :: Lens' Evaluation Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that it was evaluated against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
evaluation_complianceType :: Lens' Evaluation ComplianceType

-- | The time of the event in Config that triggered the evaluation. For
--   event-based evaluations, the time indicates when Config created the
--   configuration item that triggered the evaluation. For periodic
--   evaluations, the time indicates when Config triggered the evaluation
--   at the frequency that you specified (for example, every 24 hours).
evaluation_orderingTimestamp :: Lens' Evaluation UTCTime

-- | The details of an Config evaluation. Provides the Amazon Web Services
--   resource that was evaluated, the compliance of the resource, related
--   time stamps, and supplementary information.
--   
--   <i>See:</i> <a>newEvaluationResult</a> smart constructor.
data EvaluationResult
EvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> EvaluationResult

-- | Uniquely identifies the evaluation result.
[$sel:evaluationResultIdentifier:EvaluationResult'] :: EvaluationResult -> Maybe EvaluationResultIdentifier

-- | Supplementary information about how the evaluation determined the
--   compliance.
[$sel:annotation:EvaluationResult'] :: EvaluationResult -> Maybe Text

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
[$sel:configRuleInvokedTime:EvaluationResult'] :: EvaluationResult -> Maybe POSIX

-- | The time when Config recorded the evaluation result.
[$sel:resultRecordedTime:EvaluationResult'] :: EvaluationResult -> Maybe POSIX

-- | An encrypted token that associates an evaluation with an Config rule.
--   The token identifies the rule, the Amazon Web Services resource being
--   evaluated, and the event that triggered the evaluation.
[$sel:resultToken:EvaluationResult'] :: EvaluationResult -> Maybe Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
[$sel:complianceType:EvaluationResult'] :: EvaluationResult -> Maybe ComplianceType

-- | Create a value of <a>EvaluationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:EvaluationResult'</a>,
--   <a>evaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:EvaluationResult'</a>,
--   <a>evaluationResult_annotation</a> - Supplementary information about
--   how the evaluation determined the compliance.
--   
--   <a>$sel:configRuleInvokedTime:EvaluationResult'</a>,
--   <a>evaluationResult_configRuleInvokedTime</a> - The time when the
--   Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:EvaluationResult'</a>,
--   <a>evaluationResult_resultRecordedTime</a> - The time when Config
--   recorded the evaluation result.
--   
--   <a>$sel:resultToken:EvaluationResult'</a>,
--   <a>evaluationResult_resultToken</a> - An encrypted token that
--   associates an evaluation with an Config rule. The token identifies the
--   rule, the Amazon Web Services resource being evaluated, and the event
--   that triggered the evaluation.
--   
--   <a>$sel:complianceType:EvaluationResult'</a>,
--   <a>evaluationResult_complianceType</a> - Indicates whether the Amazon
--   Web Services resource complies with the Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
newEvaluationResult :: EvaluationResult

-- | Uniquely identifies the evaluation result.
evaluationResult_evaluationResultIdentifier :: Lens' EvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluationResult_annotation :: Lens' EvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
evaluationResult_configRuleInvokedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the evaluation result.
evaluationResult_resultRecordedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | An encrypted token that associates an evaluation with an Config rule.
--   The token identifies the rule, the Amazon Web Services resource being
--   evaluated, and the event that triggered the evaluation.
evaluationResult_resultToken :: Lens' EvaluationResult (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
evaluationResult_complianceType :: Lens' EvaluationResult (Maybe ComplianceType)

-- | Uniquely identifies an evaluation result.
--   
--   <i>See:</i> <a>newEvaluationResultIdentifier</a> smart constructor.
data EvaluationResultIdentifier
EvaluationResultIdentifier' :: Maybe EvaluationResultQualifier -> Maybe POSIX -> EvaluationResultIdentifier

-- | Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
[$sel:evaluationResultQualifier:EvaluationResultIdentifier'] :: EvaluationResultIdentifier -> Maybe EvaluationResultQualifier

-- | The time of the event that triggered the evaluation of your Amazon Web
--   Services resources. The time can indicate when Config delivered a
--   configuration item change notification, or it can indicate when Config
--   delivered the configuration snapshot, depending on which event
--   triggered the evaluation.
[$sel:orderingTimestamp:EvaluationResultIdentifier'] :: EvaluationResultIdentifier -> Maybe POSIX

-- | Create a value of <a>EvaluationResultIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultQualifier:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_evaluationResultQualifier</a> -
--   Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
--   
--   <a>$sel:orderingTimestamp:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_orderingTimestamp</a> - The time of the
--   event that triggered the evaluation of your Amazon Web Services
--   resources. The time can indicate when Config delivered a configuration
--   item change notification, or it can indicate when Config delivered the
--   configuration snapshot, depending on which event triggered the
--   evaluation.
newEvaluationResultIdentifier :: EvaluationResultIdentifier

-- | Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
evaluationResultIdentifier_evaluationResultQualifier :: Lens' EvaluationResultIdentifier (Maybe EvaluationResultQualifier)

-- | The time of the event that triggered the evaluation of your Amazon Web
--   Services resources. The time can indicate when Config delivered a
--   configuration item change notification, or it can indicate when Config
--   delivered the configuration snapshot, depending on which event
--   triggered the evaluation.
evaluationResultIdentifier_orderingTimestamp :: Lens' EvaluationResultIdentifier (Maybe UTCTime)

-- | Identifies an Config rule that evaluated an Amazon Web Services
--   resource, and provides the type and ID of the resource that the rule
--   evaluated.
--   
--   <i>See:</i> <a>newEvaluationResultQualifier</a> smart constructor.
data EvaluationResultQualifier
EvaluationResultQualifier' :: Maybe Text -> Maybe Text -> Maybe Text -> EvaluationResultQualifier

-- | The ID of the evaluated Amazon Web Services resource.
[$sel:resourceId:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | The type of Amazon Web Services resource that was evaluated.
[$sel:resourceType:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | The name of the Config rule that was used in the evaluation.
[$sel:configRuleName:EvaluationResultQualifier'] :: EvaluationResultQualifier -> Maybe Text

-- | Create a value of <a>EvaluationResultQualifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceId</a> - The ID of the evaluated
--   Amazon Web Services resource.
--   
--   <a>$sel:resourceType:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:configRuleName:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_configRuleName</a> - The name of the
--   Config rule that was used in the evaluation.
newEvaluationResultQualifier :: EvaluationResultQualifier

-- | The ID of the evaluated Amazon Web Services resource.
evaluationResultQualifier_resourceId :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluationResultQualifier_resourceType :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The name of the Config rule that was used in the evaluation.
evaluationResultQualifier_configRuleName :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The controls that Config uses for executing remediations.
--   
--   <i>See:</i> <a>newExecutionControls</a> smart constructor.
data ExecutionControls
ExecutionControls' :: Maybe SsmControls -> ExecutionControls

-- | A SsmControls object.
[$sel:ssmControls:ExecutionControls'] :: ExecutionControls -> Maybe SsmControls

-- | Create a value of <a>ExecutionControls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssmControls:ExecutionControls'</a>,
--   <a>executionControls_ssmControls</a> - A SsmControls object.
newExecutionControls :: ExecutionControls

-- | A SsmControls object.
executionControls_ssmControls :: Lens' ExecutionControls (Maybe SsmControls)

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newExternalEvaluation</a> smart constructor.
data ExternalEvaluation
ExternalEvaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> ExternalEvaluation

-- | Supplementary information about the reason of compliance. For example,
--   this task was completed on a specific date.
[$sel:annotation:ExternalEvaluation'] :: ExternalEvaluation -> Maybe Text

-- | The evaluated compliance resource type. Config accepts
--   <tt>AWS::::Account</tt> resource type.
[$sel:complianceResourceType:ExternalEvaluation'] :: ExternalEvaluation -> Text

-- | The evaluated compliance resource ID. Config accepts only Amazon Web
--   Services account ID.
[$sel:complianceResourceId:ExternalEvaluation'] :: ExternalEvaluation -> Text

-- | The compliance of the Amazon Web Services resource. The valid values
--   are <tt>COMPLIANT, NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
[$sel:complianceType:ExternalEvaluation'] :: ExternalEvaluation -> ComplianceType

-- | The time when the compliance was recorded.
[$sel:orderingTimestamp:ExternalEvaluation'] :: ExternalEvaluation -> POSIX

-- | Create a value of <a>ExternalEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ExternalEvaluation'</a>,
--   <a>externalEvaluation_annotation</a> - Supplementary information about
--   the reason of compliance. For example, this task was completed on a
--   specific date.
--   
--   <a>$sel:complianceResourceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceType</a> - The evaluated
--   compliance resource type. Config accepts <tt>AWS::::Account</tt>
--   resource type.
--   
--   <a>$sel:complianceResourceId:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceId</a> - The evaluated
--   compliance resource ID. Config accepts only Amazon Web Services
--   account ID.
--   
--   <a>$sel:complianceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceType</a> - The compliance of the
--   Amazon Web Services resource. The valid values are <tt>COMPLIANT,
--   NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:orderingTimestamp:ExternalEvaluation'</a>,
--   <a>externalEvaluation_orderingTimestamp</a> - The time when the
--   compliance was recorded.
newExternalEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> ExternalEvaluation

-- | Supplementary information about the reason of compliance. For example,
--   this task was completed on a specific date.
externalEvaluation_annotation :: Lens' ExternalEvaluation (Maybe Text)

-- | The evaluated compliance resource type. Config accepts
--   <tt>AWS::::Account</tt> resource type.
externalEvaluation_complianceResourceType :: Lens' ExternalEvaluation Text

-- | The evaluated compliance resource ID. Config accepts only Amazon Web
--   Services account ID.
externalEvaluation_complianceResourceId :: Lens' ExternalEvaluation Text

-- | The compliance of the Amazon Web Services resource. The valid values
--   are <tt>COMPLIANT, NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
externalEvaluation_complianceType :: Lens' ExternalEvaluation ComplianceType

-- | The time when the compliance was recorded.
externalEvaluation_orderingTimestamp :: Lens' ExternalEvaluation UTCTime

-- | List of each of the failed delete remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedDeleteRemediationExceptionsBatch</a> smart
--   constructor.
data FailedDeleteRemediationExceptionsBatch
FailedDeleteRemediationExceptionsBatch' :: Maybe Text -> Maybe (NonEmpty RemediationExceptionResourceKey) -> FailedDeleteRemediationExceptionsBatch

-- | Returns a failure message for delete remediation exception. For
--   example, Config creates an exception due to an internal error.
[$sel:failureMessage:FailedDeleteRemediationExceptionsBatch'] :: FailedDeleteRemediationExceptionsBatch -> Maybe Text

-- | Returns remediation exception resource key object of the failed items.
[$sel:failedItems:FailedDeleteRemediationExceptionsBatch'] :: FailedDeleteRemediationExceptionsBatch -> Maybe (NonEmpty RemediationExceptionResourceKey)

-- | Create a value of <a>FailedDeleteRemediationExceptionsBatch</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failureMessage</a> - Returns
--   a failure message for delete remediation exception. For example,
--   Config creates an exception due to an internal error.
--   
--   <a>$sel:failedItems:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedDeleteRemediationExceptionsBatch :: FailedDeleteRemediationExceptionsBatch

-- | Returns a failure message for delete remediation exception. For
--   example, Config creates an exception due to an internal error.
failedDeleteRemediationExceptionsBatch_failureMessage :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedDeleteRemediationExceptionsBatch_failedItems :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe (NonEmpty RemediationExceptionResourceKey))

-- | List of each of the failed remediations with specific reasons.
--   
--   <i>See:</i> <a>newFailedRemediationBatch</a> smart constructor.
data FailedRemediationBatch
FailedRemediationBatch' :: Maybe Text -> Maybe [RemediationConfiguration] -> FailedRemediationBatch

-- | Returns a failure message. For example, the resource is already
--   compliant.
[$sel:failureMessage:FailedRemediationBatch'] :: FailedRemediationBatch -> Maybe Text

-- | Returns remediation configurations of the failed items.
[$sel:failedItems:FailedRemediationBatch'] :: FailedRemediationBatch -> Maybe [RemediationConfiguration]

-- | Create a value of <a>FailedRemediationBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failureMessage</a> - Returns a failure
--   message. For example, the resource is already compliant.
--   
--   <a>$sel:failedItems:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failedItems</a> - Returns remediation
--   configurations of the failed items.
newFailedRemediationBatch :: FailedRemediationBatch

-- | Returns a failure message. For example, the resource is already
--   compliant.
failedRemediationBatch_failureMessage :: Lens' FailedRemediationBatch (Maybe Text)

-- | Returns remediation configurations of the failed items.
failedRemediationBatch_failedItems :: Lens' FailedRemediationBatch (Maybe [RemediationConfiguration])

-- | List of each of the failed remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedRemediationExceptionBatch</a> smart
--   constructor.
data FailedRemediationExceptionBatch
FailedRemediationExceptionBatch' :: Maybe Text -> Maybe [RemediationException] -> FailedRemediationExceptionBatch

-- | Returns a failure message. For example, the auto-remediation has
--   failed.
[$sel:failureMessage:FailedRemediationExceptionBatch'] :: FailedRemediationExceptionBatch -> Maybe Text

-- | Returns remediation exception resource key object of the failed items.
[$sel:failedItems:FailedRemediationExceptionBatch'] :: FailedRemediationExceptionBatch -> Maybe [RemediationException]

-- | Create a value of <a>FailedRemediationExceptionBatch</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failureMessage</a> - Returns a
--   failure message. For example, the auto-remediation has failed.
--   
--   <a>$sel:failedItems:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedRemediationExceptionBatch :: FailedRemediationExceptionBatch

-- | Returns a failure message. For example, the auto-remediation has
--   failed.
failedRemediationExceptionBatch_failureMessage :: Lens' FailedRemediationExceptionBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedRemediationExceptionBatch_failedItems :: Lens' FailedRemediationExceptionBatch (Maybe [RemediationException])

-- | Details about the fields such as name of the field.
--   
--   <i>See:</i> <a>newFieldInfo</a> smart constructor.
data FieldInfo
FieldInfo' :: Maybe Text -> FieldInfo

-- | Name of the field.
[$sel:name:FieldInfo'] :: FieldInfo -> Maybe Text

-- | Create a value of <a>FieldInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:FieldInfo'</a>, <a>fieldInfo_name</a> - Name of the
--   field.
newFieldInfo :: FieldInfo

-- | Name of the field.
fieldInfo_name :: Lens' FieldInfo (Maybe Text)

-- | The count of resources that are grouped by the group name.
--   
--   <i>See:</i> <a>newGroupedResourceCount</a> smart constructor.
data GroupedResourceCount
GroupedResourceCount' :: Text -> Integer -> GroupedResourceCount

-- | The name of the group that can be region, account ID, or resource
--   type. For example, region1, region2 if the region was chosen as
--   <tt>GroupByKey</tt>.
[$sel:groupName:GroupedResourceCount'] :: GroupedResourceCount -> Text

-- | The number of resources in the group.
[$sel:resourceCount:GroupedResourceCount'] :: GroupedResourceCount -> Integer

-- | Create a value of <a>GroupedResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_groupName</a> - The name of the group that can
--   be region, account ID, or resource type. For example, region1, region2
--   if the region was chosen as <tt>GroupByKey</tt>.
--   
--   <a>$sel:resourceCount:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_resourceCount</a> - The number of resources in
--   the group.
newGroupedResourceCount :: Text -> Integer -> GroupedResourceCount

-- | The name of the group that can be region, account ID, or resource
--   type. For example, region1, region2 if the region was chosen as
--   <tt>GroupByKey</tt>.
groupedResourceCount_groupName :: Lens' GroupedResourceCount Text

-- | The number of resources in the group.
groupedResourceCount_resourceCount :: Lens' GroupedResourceCount Integer

-- | Organization config rule creation or deletion status in each member
--   account. This includes the name of the rule, the status, error code
--   and error message when the rule creation or deletion failed.
--   
--   <i>See:</i> <a>newMemberAccountStatus</a> smart constructor.
data MemberAccountStatus
MemberAccountStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | An error code that is returned when config rule creation or deletion
--   failed in the member account.
[$sel:errorCode:MemberAccountStatus'] :: MemberAccountStatus -> Maybe Text

-- | An error message indicating that config rule account creation or
--   deletion has failed due to an error in the member account.
[$sel:errorMessage:MemberAccountStatus'] :: MemberAccountStatus -> Maybe Text

-- | The timestamp of the last status update.
[$sel:lastUpdateTime:MemberAccountStatus'] :: MemberAccountStatus -> Maybe POSIX

-- | The 12-digit account ID of a member account.
[$sel:accountId:MemberAccountStatus'] :: MemberAccountStatus -> Text

-- | The name of config rule deployed in the member account.
[$sel:configRuleName:MemberAccountStatus'] :: MemberAccountStatus -> Text

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
[$sel:memberAccountRuleStatus:MemberAccountStatus'] :: MemberAccountStatus -> MemberAccountRuleStatus

-- | Create a value of <a>MemberAccountStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorCode</a> - An error code that is returned
--   when config rule creation or deletion failed in the member account.
--   
--   <a>$sel:errorMessage:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorMessage</a> - An error message indicating
--   that config rule account creation or deletion has failed due to an
--   error in the member account.
--   
--   <a>$sel:lastUpdateTime:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_lastUpdateTime</a> - The timestamp of the last
--   status update.
--   
--   <a>$sel:accountId:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_accountId</a> - The 12-digit account ID of a
--   member account.
--   
--   <a>$sel:configRuleName:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_configRuleName</a> - The name of config rule
--   deployed in the member account.
--   
--   <a>$sel:memberAccountRuleStatus:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
newMemberAccountStatus :: Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | An error code that is returned when config rule creation or deletion
--   failed in the member account.
memberAccountStatus_errorCode :: Lens' MemberAccountStatus (Maybe Text)

-- | An error message indicating that config rule account creation or
--   deletion has failed due to an error in the member account.
memberAccountStatus_errorMessage :: Lens' MemberAccountStatus (Maybe Text)

-- | The timestamp of the last status update.
memberAccountStatus_lastUpdateTime :: Lens' MemberAccountStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
memberAccountStatus_accountId :: Lens' MemberAccountStatus Text

-- | The name of config rule deployed in the member account.
memberAccountStatus_configRuleName :: Lens' MemberAccountStatus Text

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
memberAccountStatus_memberAccountRuleStatus :: Lens' MemberAccountStatus MemberAccountRuleStatus

-- | This object contains regions to set up the aggregator and an IAM role
--   to retrieve organization details.
--   
--   <i>See:</i> <a>newOrganizationAggregationSource</a> smart constructor.
data OrganizationAggregationSource
OrganizationAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> Text -> OrganizationAggregationSource

-- | The source regions being aggregated.
[$sel:awsRegions:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Maybe (NonEmpty Text)

-- | If true, aggregate existing Config regions and future regions.
[$sel:allAwsRegions:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Maybe Bool

-- | ARN of the IAM role used to retrieve Amazon Web Services Organization
--   details associated with the aggregator account.
[$sel:roleArn:OrganizationAggregationSource'] :: OrganizationAggregationSource -> Text

-- | Create a value of <a>OrganizationAggregationSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_awsRegions</a> - The source regions
--   being aggregated.
--   
--   <a>$sel:allAwsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_allAwsRegions</a> - If true,
--   aggregate existing Config regions and future regions.
--   
--   <a>$sel:roleArn:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_roleArn</a> - ARN of the IAM role
--   used to retrieve Amazon Web Services Organization details associated
--   with the aggregator account.
newOrganizationAggregationSource :: Text -> OrganizationAggregationSource

-- | The source regions being aggregated.
organizationAggregationSource_awsRegions :: Lens' OrganizationAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
organizationAggregationSource_allAwsRegions :: Lens' OrganizationAggregationSource (Maybe Bool)

-- | ARN of the IAM role used to retrieve Amazon Web Services Organization
--   details associated with the aggregator account.
organizationAggregationSource_roleArn :: Lens' OrganizationAggregationSource Text

-- | An organization config rule that has information about config rules
--   that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConfigRule</a> smart constructor.
data OrganizationConfigRule
OrganizationConfigRule' :: Maybe OrganizationManagedRuleMetadata -> Maybe [Text] -> Maybe OrganizationCustomRuleMetadata -> Maybe POSIX -> Text -> Text -> OrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
[$sel:organizationManagedRuleMetadata:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe OrganizationManagedRuleMetadata

-- | A comma-separated list of accounts excluded from organization config
--   rule.
[$sel:excludedAccounts:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe [Text]

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
[$sel:organizationCustomRuleMetadata:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe OrganizationCustomRuleMetadata

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConfigRule'] :: OrganizationConfigRule -> Maybe POSIX

-- | The name that you assign to organization config rule.
[$sel:organizationConfigRuleName:OrganizationConfigRule'] :: OrganizationConfigRule -> Text

-- | Amazon Resource Name (ARN) of organization config rule.
[$sel:organizationConfigRuleArn:OrganizationConfigRule'] :: OrganizationConfigRule -> Text

-- | Create a value of <a>OrganizationConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationManagedRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationManagedRuleMetadata</a> - An
--   <tt>OrganizationManagedRuleMetadata</tt> object.
--   
--   <a>$sel:excludedAccounts:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_excludedAccounts</a> - A comma-separated
--   list of accounts excluded from organization config rule.
--   
--   <a>$sel:organizationCustomRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationCustomRuleMetadata</a> - An
--   <tt>OrganizationCustomRuleMetadata</tt> object.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_lastUpdateTime</a> - The timestamp of the
--   last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleName</a> - The name
--   that you assign to organization config rule.
--   
--   <a>$sel:organizationConfigRuleArn:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleArn</a> - Amazon
--   Resource Name (ARN) of organization config rule.
newOrganizationConfigRule :: Text -> Text -> OrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
organizationConfigRule_organizationManagedRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationManagedRuleMetadata)

-- | A comma-separated list of accounts excluded from organization config
--   rule.
organizationConfigRule_excludedAccounts :: Lens' OrganizationConfigRule (Maybe [Text])

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
organizationConfigRule_organizationCustomRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationCustomRuleMetadata)

-- | The timestamp of the last update.
organizationConfigRule_lastUpdateTime :: Lens' OrganizationConfigRule (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRule_organizationConfigRuleName :: Lens' OrganizationConfigRule Text

-- | Amazon Resource Name (ARN) of organization config rule.
organizationConfigRule_organizationConfigRuleArn :: Lens' OrganizationConfigRule Text

-- | Returns the status for an organization config rule in an organization.
--   
--   <i>See:</i> <a>newOrganizationConfigRuleStatus</a> smart constructor.
data OrganizationConfigRuleStatus
OrganizationConfigRuleStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | An error code that is returned when organization config rule creation
--   or deletion has failed.
[$sel:errorCode:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe Text

-- | An error message indicating that organization config rule creation or
--   deletion failed due to an error.
[$sel:errorMessage:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe Text

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Maybe POSIX

-- | The name that you assign to organization config rule.
[$sel:organizationConfigRuleName:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> Text

-- | Indicates deployment status of an organization config rule. When
--   master account calls PutOrganizationConfigRule action for the first
--   time, config rule status is created in all the member accounts. When
--   master account calls PutOrganizationConfigRule action for the second
--   time, config rule status is updated in all the member accounts.
--   Additionally, config rule status is updated when one or more member
--   accounts join or leave an organization. Config rule status is deleted
--   when the master account deletes OrganizationConfigRule in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
[$sel:organizationRuleStatus:OrganizationConfigRuleStatus'] :: OrganizationConfigRuleStatus -> OrganizationRuleStatus

-- | Create a value of <a>OrganizationConfigRuleStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorCode</a> - An error code that is
--   returned when organization config rule creation or deletion has
--   failed.
--   
--   <a>$sel:errorMessage:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorMessage</a> - An error message
--   indicating that organization config rule creation or deletion failed
--   due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_lastUpdateTime</a> - The timestamp of
--   the last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationConfigRuleName</a> - The
--   name that you assign to organization config rule.
--   
--   <a>$sel:organizationRuleStatus:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationRuleStatus</a> - Indicates
--   deployment status of an organization config rule. When master account
--   calls PutOrganizationConfigRule action for the first time, config rule
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConfigRule action for the second time, config
--   rule status is updated in all the member accounts. Additionally,
--   config rule status is updated when one or more member accounts join or
--   leave an organization. Config rule status is deleted when the master
--   account deletes OrganizationConfigRule in all the member accounts and
--   disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
newOrganizationConfigRuleStatus :: Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | An error code that is returned when organization config rule creation
--   or deletion has failed.
organizationConfigRuleStatus_errorCode :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | An error message indicating that organization config rule creation or
--   deletion failed due to an error.
organizationConfigRuleStatus_errorMessage :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConfigRuleStatus_lastUpdateTime :: Lens' OrganizationConfigRuleStatus (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRuleStatus_organizationConfigRuleName :: Lens' OrganizationConfigRuleStatus Text

-- | Indicates deployment status of an organization config rule. When
--   master account calls PutOrganizationConfigRule action for the first
--   time, config rule status is created in all the member accounts. When
--   master account calls PutOrganizationConfigRule action for the second
--   time, config rule status is updated in all the member accounts.
--   Additionally, config rule status is updated when one or more member
--   accounts join or leave an organization. Config rule status is deleted
--   when the master account deletes OrganizationConfigRule in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
organizationConfigRuleStatus_organizationRuleStatus :: Lens' OrganizationConfigRuleStatus OrganizationRuleStatus

-- | An organization conformance pack that has information about
--   conformance packs that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConformancePack</a> smart constructor.
data OrganizationConformancePack
OrganizationConformancePack' :: Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe [Text] -> Text -> Text -> POSIX -> OrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
[$sel:deliveryS3Bucket:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe Text

-- | Any folder structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe Text

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe [ConformancePackInputParameter]

-- | A comma-separated list of accounts excluded from organization
--   conformance pack.
[$sel:excludedAccounts:OrganizationConformancePack'] :: OrganizationConformancePack -> Maybe [Text]

-- | The name you assign to an organization conformance pack.
[$sel:organizationConformancePackName:OrganizationConformancePack'] :: OrganizationConformancePack -> Text

-- | Amazon Resource Name (ARN) of organization conformance pack.
[$sel:organizationConformancePackArn:OrganizationConformancePack'] :: OrganizationConformancePack -> Text

-- | Last time when organization conformation pack was updated.
[$sel:lastUpdateTime:OrganizationConformancePack'] :: OrganizationConformancePack -> POSIX

-- | Create a value of <a>OrganizationConformancePack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3Bucket</a> - The name of the
--   Amazon S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3KeyPrefix</a> - Any folder
--   structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
--   
--   
--   <a>$sel:conformancePackInputParameters:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_conformancePackInputParameters</a> - A
--   list of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:excludedAccounts:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_excludedAccounts</a> - A
--   comma-separated list of accounts excluded from organization
--   conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackName</a> -
--   The name you assign to an organization conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackArn:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackArn</a> -
--   Amazon Resource Name (ARN) of organization conformance pack.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_lastUpdateTime</a> - Last time when
--   organization conformation pack was updated.
newOrganizationConformancePack :: Text -> Text -> UTCTime -> OrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
organizationConformancePack_deliveryS3Bucket :: Lens' OrganizationConformancePack (Maybe Text)

-- | Any folder structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
organizationConformancePack_deliveryS3KeyPrefix :: Lens' OrganizationConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
organizationConformancePack_conformancePackInputParameters :: Lens' OrganizationConformancePack (Maybe [ConformancePackInputParameter])

-- | A comma-separated list of accounts excluded from organization
--   conformance pack.
organizationConformancePack_excludedAccounts :: Lens' OrganizationConformancePack (Maybe [Text])

-- | The name you assign to an organization conformance pack.
organizationConformancePack_organizationConformancePackName :: Lens' OrganizationConformancePack Text

-- | Amazon Resource Name (ARN) of organization conformance pack.
organizationConformancePack_organizationConformancePackArn :: Lens' OrganizationConformancePack Text

-- | Last time when organization conformation pack was updated.
organizationConformancePack_lastUpdateTime :: Lens' OrganizationConformancePack UTCTime

-- | Organization conformance pack creation or deletion status in each
--   member account. This includes the name of the conformance pack, the
--   status, error code and error message when the conformance pack
--   creation or deletion failed.
--   
--   <i>See:</i> <a>newOrganizationConformancePackDetailedStatus</a> smart
--   constructor.
data OrganizationConformancePackDetailedStatus
OrganizationConformancePackDetailedStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | An error code that is returned when conformance pack creation or
--   deletion failed in the member account.
[$sel:errorCode:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe Text

-- | An error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
[$sel:errorMessage:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe Text

-- | The timestamp of the last status update.
[$sel:lastUpdateTime:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Maybe POSIX

-- | The 12-digit account ID of a member account.
[$sel:accountId:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Text

-- | The name of conformance pack deployed in the member account.
[$sel:conformancePackName:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
[$sel:status:OrganizationConformancePackDetailedStatus'] :: OrganizationConformancePackDetailedStatus -> OrganizationResourceDetailedStatus

-- | Create a value of <a>OrganizationConformancePackDetailedStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorCode</a> - An error
--   code that is returned when conformance pack creation or deletion
--   failed in the member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorMessage</a> - An
--   error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_lastUpdateTime</a> - The
--   timestamp of the last status update.
--   
--   <a>$sel:accountId:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_accountId</a> - The
--   12-digit account ID of a member account.
--   
--   
--   <a>$sel:conformancePackName:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_conformancePackName</a> -
--   The name of conformance pack deployed in the member account.
--   
--   <a>$sel:status:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
newOrganizationConformancePackDetailedStatus :: Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | An error code that is returned when conformance pack creation or
--   deletion failed in the member account.
organizationConformancePackDetailedStatus_errorCode :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | An error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
organizationConformancePackDetailedStatus_errorMessage :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | The timestamp of the last status update.
organizationConformancePackDetailedStatus_lastUpdateTime :: Lens' OrganizationConformancePackDetailedStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
organizationConformancePackDetailedStatus_accountId :: Lens' OrganizationConformancePackDetailedStatus Text

-- | The name of conformance pack deployed in the member account.
organizationConformancePackDetailedStatus_conformancePackName :: Lens' OrganizationConformancePackDetailedStatus Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationConformancePackDetailedStatus_status :: Lens' OrganizationConformancePackDetailedStatus OrganizationResourceDetailedStatus

-- | Returns the status for an organization conformance pack in an
--   organization.
--   
--   <i>See:</i> <a>newOrganizationConformancePackStatus</a> smart
--   constructor.
data OrganizationConformancePackStatus
OrganizationConformancePackStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | An error code that is returned when organization conformance pack
--   creation or deletion has failed in a member account.
[$sel:errorCode:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe Text

-- | An error message indicating that organization conformance pack
--   creation or deletion failed due to an error.
[$sel:errorMessage:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe Text

-- | The timestamp of the last update.
[$sel:lastUpdateTime:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Maybe POSIX

-- | The name that you assign to organization conformance pack.
[$sel:organizationConformancePackName:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> Text

-- | Indicates deployment status of an organization conformance pack. When
--   master account calls PutOrganizationConformancePack for the first
--   time, conformance pack status is created in all the member accounts.
--   When master account calls PutOrganizationConformancePack for the
--   second time, conformance pack status is updated in all the member
--   accounts. Additionally, conformance pack status is updated when one or
--   more member accounts join or leave an organization. Conformance pack
--   status is deleted when the master account deletes
--   OrganizationConformancePack in all the member accounts and disables
--   service access for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
[$sel:status:OrganizationConformancePackStatus'] :: OrganizationConformancePackStatus -> OrganizationResourceStatus

-- | Create a value of <a>OrganizationConformancePackStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorCode</a> - An error code
--   that is returned when organization conformance pack creation or
--   deletion has failed in a member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorMessage</a> - An error
--   message indicating that organization conformance pack creation or
--   deletion failed due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_lastUpdateTime</a> - The
--   timestamp of the last update.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_organizationConformancePackName</a>
--   - The name that you assign to organization conformance pack.
--   
--   <a>$sel:status:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_status</a> - Indicates deployment
--   status of an organization conformance pack. When master account calls
--   PutOrganizationConformancePack for the first time, conformance pack
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConformancePack for the second time, conformance
--   pack status is updated in all the member accounts. Additionally,
--   conformance pack status is updated when one or more member accounts
--   join or leave an organization. Conformance pack status is deleted when
--   the master account deletes OrganizationConformancePack in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
newOrganizationConformancePackStatus :: Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | An error code that is returned when organization conformance pack
--   creation or deletion has failed in a member account.
organizationConformancePackStatus_errorCode :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | An error message indicating that organization conformance pack
--   creation or deletion failed due to an error.
organizationConformancePackStatus_errorMessage :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConformancePackStatus_lastUpdateTime :: Lens' OrganizationConformancePackStatus (Maybe UTCTime)

-- | The name that you assign to organization conformance pack.
organizationConformancePackStatus_organizationConformancePackName :: Lens' OrganizationConformancePackStatus Text

-- | Indicates deployment status of an organization conformance pack. When
--   master account calls PutOrganizationConformancePack for the first
--   time, conformance pack status is created in all the member accounts.
--   When master account calls PutOrganizationConformancePack for the
--   second time, conformance pack status is updated in all the member
--   accounts. Additionally, conformance pack status is updated when one or
--   more member accounts join or leave an organization. Conformance pack
--   status is deleted when the master account deletes
--   OrganizationConformancePack in all the member accounts and disables
--   service access for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
organizationConformancePackStatus_status :: Lens' OrganizationConformancePackStatus OrganizationResourceStatus

-- | An object that specifies organization custom rule metadata such as
--   resource type, resource ID of Amazon Web Services resource, Lambda
--   function ARN, and organization trigger types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic.
--   
--   <i>See:</i> <a>newOrganizationCustomRuleMetadata</a> smart
--   constructor.
data OrganizationCustomRuleMetadata
OrganizationCustomRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> [OrganizationConfigRuleTriggerType] -> OrganizationCustomRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
[$sel:inputParameters:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceIdScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:tagValueScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   Your custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe MaximumExecutionFrequency

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:tagKeyScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceTypesScope:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe [Text]

-- | The description that you provide for organization config rule.
[$sel:description:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Maybe Text

-- | The lambda function ARN.
[$sel:lambdaFunctionArn:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
[$sel:organizationConfigRuleTriggerTypes:OrganizationCustomRuleMetadata'] :: OrganizationCustomRuleMetadata -> [OrganizationConfigRuleTriggerType]

-- | Create a value of <a>OrganizationCustomRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. Your
--   custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceTypesScope</a> - The type of
--   the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:lambdaFunctionArn:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_lambdaFunctionArn</a> - The lambda
--   function ARN.
--   
--   
--   <a>$sel:organizationConfigRuleTriggerTypes:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
newOrganizationCustomRuleMetadata :: Text -> OrganizationCustomRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationCustomRuleMetadata_inputParameters :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceIdScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationCustomRuleMetadata_tagValueScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   Your custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationCustomRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationCustomRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationCustomRuleMetadata_tagKeyScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceTypesScope :: Lens' OrganizationCustomRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationCustomRuleMetadata_description :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The lambda function ARN.
organizationCustomRuleMetadata_lambdaFunctionArn :: Lens' OrganizationCustomRuleMetadata Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes :: Lens' OrganizationCustomRuleMetadata [OrganizationConfigRuleTriggerType]

-- | An object that specifies organization managed rule metadata such as
--   resource type and ID of Amazon Web Services resource along with the
--   rule identifier. It also provides the frequency with which you want
--   Config to run evaluations for the rule if the trigger type is
--   periodic.
--   
--   <i>See:</i> <a>newOrganizationManagedRuleMetadata</a> smart
--   constructor.
data OrganizationManagedRuleMetadata
OrganizationManagedRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> OrganizationManagedRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
[$sel:inputParameters:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The ID of the Amazon Web Services resource that was evaluated.
[$sel:resourceIdScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:tagValueScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
[$sel:maximumExecutionFrequency:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe MaximumExecutionFrequency

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:tagKeyScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | The type of the Amazon Web Services resource that was evaluated.
[$sel:resourceTypesScope:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe [Text]

-- | The description that you provide for organization config rule.
[$sel:description:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Maybe Text

-- | For organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
[$sel:ruleIdentifier:OrganizationManagedRuleMetadata'] :: OrganizationManagedRuleMetadata -> Text

-- | Create a value of <a>OrganizationManagedRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. You
--   are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceTypesScope</a> - The type
--   of the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:ruleIdentifier:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_ruleIdentifier</a> - For
--   organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
newOrganizationManagedRuleMetadata :: Text -> OrganizationManagedRuleMetadata

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationManagedRuleMetadata_inputParameters :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceIdScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationManagedRuleMetadata_tagValueScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationManagedRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationManagedRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationManagedRuleMetadata_tagKeyScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceTypesScope :: Lens' OrganizationManagedRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationManagedRuleMetadata_description :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | For organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
organizationManagedRuleMetadata_ruleIdentifier :: Lens' OrganizationManagedRuleMetadata Text

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization conformance pack.
--   
--   <i>See:</i> <a>newOrganizationResourceDetailedStatusFilters</a> smart
--   constructor.
data OrganizationResourceDetailedStatusFilters
OrganizationResourceDetailedStatusFilters' :: Maybe OrganizationResourceDetailedStatus -> Maybe Text -> OrganizationResourceDetailedStatusFilters

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
[$sel:status:OrganizationResourceDetailedStatusFilters'] :: OrganizationResourceDetailedStatusFilters -> Maybe OrganizationResourceDetailedStatus

-- | The 12-digit account ID of the member account within an organization.
[$sel:accountId:OrganizationResourceDetailedStatusFilters'] :: OrganizationResourceDetailedStatusFilters -> Maybe Text

-- | Create a value of <a>OrganizationResourceDetailedStatusFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_accountId</a> - The
--   12-digit account ID of the member account within an organization.
newOrganizationResourceDetailedStatusFilters :: OrganizationResourceDetailedStatusFilters

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationResourceDetailedStatusFilters_status :: Lens' OrganizationResourceDetailedStatusFilters (Maybe OrganizationResourceDetailedStatus)

-- | The 12-digit account ID of the member account within an organization.
organizationResourceDetailedStatusFilters_accountId :: Lens' OrganizationResourceDetailedStatusFilters (Maybe Text)

-- | An object that represents the account ID and region of an aggregator
--   account that is requesting authorization but is not yet authorized.
--   
--   <i>See:</i> <a>newPendingAggregationRequest</a> smart constructor.
data PendingAggregationRequest
PendingAggregationRequest' :: Maybe Text -> Maybe Text -> PendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
[$sel:requesterAccountId:PendingAggregationRequest'] :: PendingAggregationRequest -> Maybe Text

-- | The region requesting to aggregate data.
[$sel:requesterAwsRegion:PendingAggregationRequest'] :: PendingAggregationRequest -> Maybe Text

-- | Create a value of <a>PendingAggregationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requesterAccountId:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAccountId</a> - The 12-digit
--   account ID of the account requesting to aggregate data.
--   
--   <a>$sel:requesterAwsRegion:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAwsRegion</a> - The region
--   requesting to aggregate data.
newPendingAggregationRequest :: PendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
pendingAggregationRequest_requesterAccountId :: Lens' PendingAggregationRequest (Maybe Text)

-- | The region requesting to aggregate data.
pendingAggregationRequest_requesterAwsRegion :: Lens' PendingAggregationRequest (Maybe Text)

-- | Details about the query.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe [FieldInfo] -> QueryInfo

-- | Returns a <tt>FieldInfo</tt> object.
[$sel:selectFields:QueryInfo'] :: QueryInfo -> Maybe [FieldInfo]

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectFields:QueryInfo'</a>, <a>queryInfo_selectFields</a> -
--   Returns a <tt>FieldInfo</tt> object.
newQueryInfo :: QueryInfo

-- | Returns a <tt>FieldInfo</tt> object.
queryInfo_selectFields :: Lens' QueryInfo (Maybe [FieldInfo])

-- | Specifies the types of Amazon Web Services resource for which Config
--   records configuration changes.
--   
--   In the recording group, you specify whether all supported types or
--   specific types of resources are recorded.
--   
--   By default, Config records configuration changes for all supported
--   types of regional resources that Config discovers in the region in
--   which it is running. Regional resources are tied to a region and can
--   be used only in that region. Examples of regional resources are EC2
--   instances and EBS volumes.
--   
--   You can also have Config record configuration changes for supported
--   types of global resources (for example, IAM resources). Global
--   resources are not tied to an individual region and can be used in all
--   regions.
--   
--   The configuration details for any global resource are the same in all
--   regions. If you customize Config in multiple regions to record global
--   resources, it will create multiple configuration items each time a
--   global resource changes: one configuration item for each region. These
--   configuration items will contain identical data. To prevent duplicate
--   configuration items, you should consider customizing Config in only
--   one region to record global resources, unless you want the
--   configuration items to be available in multiple regions.
--   
--   If you don't want Config to record all resources, you can specify
--   which types of resources it will record with the
--   <tt>resourceTypes</tt> parameter.
--   
--   For a list of supported resource types, see <a>Supported Resource
--   Types</a>.
--   
--   For more information, see <a>Selecting Which Resources Config
--   Records</a>.
--   
--   <i>See:</i> <a>newRecordingGroup</a> smart constructor.
data RecordingGroup
RecordingGroup' :: Maybe Bool -> Maybe Bool -> Maybe [ResourceType] -> RecordingGroup

-- | Specifies whether Config records configuration changes for every
--   supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
[$sel:allSupported:RecordingGroup'] :: RecordingGroup -> Maybe Bool

-- | Specifies whether Config includes all supported types of global
--   resources (for example, IAM resources) with the resources that it
--   records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
[$sel:includeGlobalResourceTypes:RecordingGroup'] :: RecordingGroup -> Maybe Bool

-- | A comma-separated list that specifies the types of Amazon Web Services
--   resources for which Config records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
[$sel:resourceTypes:RecordingGroup'] :: RecordingGroup -> Maybe [ResourceType]

-- | Create a value of <a>RecordingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allSupported:RecordingGroup'</a>,
--   <a>recordingGroup_allSupported</a> - Specifies whether Config records
--   configuration changes for every supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
--   
--   <a>$sel:includeGlobalResourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_includeGlobalResourceTypes</a> - Specifies whether
--   Config includes all supported types of global resources (for example,
--   IAM resources) with the resources that it records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
--   
--   <a>$sel:resourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_resourceTypes</a> - A comma-separated list that
--   specifies the types of Amazon Web Services resources for which Config
--   records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
newRecordingGroup :: RecordingGroup

-- | Specifies whether Config records configuration changes for every
--   supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
recordingGroup_allSupported :: Lens' RecordingGroup (Maybe Bool)

-- | Specifies whether Config includes all supported types of global
--   resources (for example, IAM resources) with the resources that it
--   records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
recordingGroup_includeGlobalResourceTypes :: Lens' RecordingGroup (Maybe Bool)

-- | A comma-separated list that specifies the types of Amazon Web Services
--   resources for which Config records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
recordingGroup_resourceTypes :: Lens' RecordingGroup (Maybe [ResourceType])

-- | The relationship of the related resource to the main resource.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Relationship

-- | The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:Relationship'] :: Relationship -> Maybe Text

-- | The resource type of the related resource.
[$sel:resourceType:Relationship'] :: Relationship -> Maybe ResourceType

-- | The custom name of the related resource, if available.
[$sel:resourceName:Relationship'] :: Relationship -> Maybe Text

-- | The type of relationship with the related resource.
[$sel:relationshipName:Relationship'] :: Relationship -> Maybe Text

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Relationship'</a>, <a>relationship_resourceId</a> -
--   The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:Relationship'</a>,
--   <a>relationship_resourceType</a> - The resource type of the related
--   resource.
--   
--   <a>$sel:resourceName:Relationship'</a>,
--   <a>relationship_resourceName</a> - The custom name of the related
--   resource, if available.
--   
--   <a>$sel:relationshipName:Relationship'</a>,
--   <a>relationship_relationshipName</a> - The type of relationship with
--   the related resource.
newRelationship :: Relationship

-- | The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
relationship_resourceId :: Lens' Relationship (Maybe Text)

-- | The resource type of the related resource.
relationship_resourceType :: Lens' Relationship (Maybe ResourceType)

-- | The custom name of the related resource, if available.
relationship_resourceName :: Lens' Relationship (Maybe Text)

-- | The type of relationship with the related resource.
relationship_relationshipName :: Lens' Relationship (Maybe Text)

-- | An object that represents the details about the remediation
--   configuration that includes the remediation action, parameters, and
--   data to execute the action.
--   
--   <i>See:</i> <a>newRemediationConfiguration</a> smart constructor.
data RemediationConfiguration
RemediationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe ExecutionControls -> Maybe (HashMap Text RemediationParameterValue) -> Maybe Natural -> Maybe Text -> Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | The type of a resource.
[$sel:resourceType:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | Amazon Resource Name (ARN) of remediation configuration.
[$sel:arn:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | The remediation is triggered automatically.
[$sel:automatic:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Bool

-- | Name of the service that owns the service linked rule, if applicable.
[$sel:createdByService:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | Maximum time in seconds that Config runs auto-remediation. If you do
--   not select a number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
[$sel:retryAttemptSeconds:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Natural

-- | An ExecutionControls object.
[$sel:executionControls:RemediationConfiguration'] :: RemediationConfiguration -> Maybe ExecutionControls

-- | An object of the RemediationParameterValue.
[$sel:parameters:RemediationConfiguration'] :: RemediationConfiguration -> Maybe (HashMap Text RemediationParameterValue)

-- | The maximum number of failed attempts for auto-remediation. If you do
--   not select a number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
[$sel:maximumAutomaticAttempts:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Natural

-- | Version of the target. For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
[$sel:targetVersion:RemediationConfiguration'] :: RemediationConfiguration -> Maybe Text

-- | The name of the Config rule.
[$sel:configRuleName:RemediationConfiguration'] :: RemediationConfiguration -> Text

-- | The type of the target. Target executes remediation. For example, SSM
--   document.
[$sel:targetType:RemediationConfiguration'] :: RemediationConfiguration -> RemediationTargetType

-- | Target ID is the name of the public document.
[$sel:targetId:RemediationConfiguration'] :: RemediationConfiguration -> Text

-- | Create a value of <a>RemediationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_resourceType</a> - The type of a resource.
--   
--   <a>$sel:arn:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_arn</a> - Amazon Resource Name (ARN) of
--   remediation configuration.
--   
--   <a>$sel:automatic:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_automatic</a> - The remediation is
--   triggered automatically.
--   
--   <a>$sel:createdByService:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_createdByService</a> - Name of the service
--   that owns the service linked rule, if applicable.
--   
--   <a>$sel:retryAttemptSeconds:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_retryAttemptSeconds</a> - Maximum time in
--   seconds that Config runs auto-remediation. If you do not select a
--   number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
--   
--   <a>$sel:executionControls:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_executionControls</a> - An
--   ExecutionControls object.
--   
--   <a>$sel:parameters:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_parameters</a> - An object of the
--   RemediationParameterValue.
--   
--   <a>$sel:maximumAutomaticAttempts:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_maximumAutomaticAttempts</a> - The maximum
--   number of failed attempts for auto-remediation. If you do not select a
--   number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
--   
--   <a>$sel:targetVersion:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetVersion</a> - Version of the target.
--   For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
--   
--   <a>$sel:configRuleName:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:targetType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetType</a> - The type of the target.
--   Target executes remediation. For example, SSM document.
--   
--   <a>$sel:targetId:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetId</a> - Target ID is the name of
--   the public document.
newRemediationConfiguration :: Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | The type of a resource.
remediationConfiguration_resourceType :: Lens' RemediationConfiguration (Maybe Text)

-- | Amazon Resource Name (ARN) of remediation configuration.
remediationConfiguration_arn :: Lens' RemediationConfiguration (Maybe Text)

-- | The remediation is triggered automatically.
remediationConfiguration_automatic :: Lens' RemediationConfiguration (Maybe Bool)

-- | Name of the service that owns the service linked rule, if applicable.
remediationConfiguration_createdByService :: Lens' RemediationConfiguration (Maybe Text)

-- | Maximum time in seconds that Config runs auto-remediation. If you do
--   not select a number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
remediationConfiguration_retryAttemptSeconds :: Lens' RemediationConfiguration (Maybe Natural)

-- | An ExecutionControls object.
remediationConfiguration_executionControls :: Lens' RemediationConfiguration (Maybe ExecutionControls)

-- | An object of the RemediationParameterValue.
remediationConfiguration_parameters :: Lens' RemediationConfiguration (Maybe (HashMap Text RemediationParameterValue))

-- | The maximum number of failed attempts for auto-remediation. If you do
--   not select a number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
remediationConfiguration_maximumAutomaticAttempts :: Lens' RemediationConfiguration (Maybe Natural)

-- | Version of the target. For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
remediationConfiguration_targetVersion :: Lens' RemediationConfiguration (Maybe Text)

-- | The name of the Config rule.
remediationConfiguration_configRuleName :: Lens' RemediationConfiguration Text

-- | The type of the target. Target executes remediation. For example, SSM
--   document.
remediationConfiguration_targetType :: Lens' RemediationConfiguration RemediationTargetType

-- | Target ID is the name of the public document.
remediationConfiguration_targetId :: Lens' RemediationConfiguration Text

-- | An object that represents the details about the remediation exception.
--   The details include the rule name, an explanation of an exception, the
--   time when the exception will be deleted, the resource ID, and resource
--   type.
--   
--   <i>See:</i> <a>newRemediationException</a> smart constructor.
data RemediationException
RemediationException' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> RemediationException

-- | An explanation of an remediation exception.
[$sel:message:RemediationException'] :: RemediationException -> Maybe Text

-- | The time when the remediation exception will be deleted.
[$sel:expirationTime:RemediationException'] :: RemediationException -> Maybe POSIX

-- | The name of the Config rule.
[$sel:configRuleName:RemediationException'] :: RemediationException -> Text

-- | The type of a resource.
[$sel:resourceType:RemediationException'] :: RemediationException -> Text

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:RemediationException'] :: RemediationException -> Text

-- | Create a value of <a>RemediationException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:RemediationException'</a>,
--   <a>remediationException_message</a> - An explanation of an remediation
--   exception.
--   
--   <a>$sel:expirationTime:RemediationException'</a>,
--   <a>remediationException_expirationTime</a> - The time when the
--   remediation exception will be deleted.
--   
--   <a>$sel:configRuleName:RemediationException'</a>,
--   <a>remediationException_configRuleName</a> - The name of the Config
--   rule.
--   
--   <a>$sel:resourceType:RemediationException'</a>,
--   <a>remediationException_resourceType</a> - The type of a resource.
--   
--   <a>$sel:resourceId:RemediationException'</a>,
--   <a>remediationException_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
newRemediationException :: Text -> Text -> Text -> RemediationException

-- | An explanation of an remediation exception.
remediationException_message :: Lens' RemediationException (Maybe Text)

-- | The time when the remediation exception will be deleted.
remediationException_expirationTime :: Lens' RemediationException (Maybe UTCTime)

-- | The name of the Config rule.
remediationException_configRuleName :: Lens' RemediationException Text

-- | The type of a resource.
remediationException_resourceType :: Lens' RemediationException Text

-- | The ID of the resource (for example., sg-xxxxxx).
remediationException_resourceId :: Lens' RemediationException Text

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newRemediationExceptionResourceKey</a> smart
--   constructor.
data RemediationExceptionResourceKey
RemediationExceptionResourceKey' :: Maybe Text -> Maybe Text -> RemediationExceptionResourceKey

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:RemediationExceptionResourceKey'] :: RemediationExceptionResourceKey -> Maybe Text

-- | The type of a resource.
[$sel:resourceType:RemediationExceptionResourceKey'] :: RemediationExceptionResourceKey -> Maybe Text

-- | Create a value of <a>RemediationExceptionResourceKey</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceId</a> - The ID of the
--   resource (for example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceType</a> - The type of a
--   resource.
newRemediationExceptionResourceKey :: RemediationExceptionResourceKey

-- | The ID of the resource (for example., sg-xxxxxx).
remediationExceptionResourceKey_resourceId :: Lens' RemediationExceptionResourceKey (Maybe Text)

-- | The type of a resource.
remediationExceptionResourceKey_resourceType :: Lens' RemediationExceptionResourceKey (Maybe Text)

-- | Provides details of the current status of the invoked remediation
--   action for that resource.
--   
--   <i>See:</i> <a>newRemediationExecutionStatus</a> smart constructor.
data RemediationExecutionStatus
RemediationExecutionStatus' :: Maybe RemediationExecutionState -> Maybe POSIX -> Maybe ResourceKey -> Maybe [RemediationExecutionStep] -> Maybe POSIX -> RemediationExecutionStatus

-- | ENUM of the values.
[$sel:state:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe RemediationExecutionState

-- | The time when the remediation execution was last updated.
[$sel:lastUpdatedTime:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe POSIX
[$sel:resourceKey:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe ResourceKey

-- | Details of every step.
[$sel:stepDetails:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe [RemediationExecutionStep]

-- | Start time when the remediation was executed.
[$sel:invocationTime:RemediationExecutionStatus'] :: RemediationExecutionStatus -> Maybe POSIX

-- | Create a value of <a>RemediationExecutionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_state</a> - ENUM of the values.
--   
--   <a>$sel:lastUpdatedTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_lastUpdatedTime</a> - The time when the
--   remediation execution was last updated.
--   
--   <a>$sel:resourceKey:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_resourceKey</a> - Undocumented member.
--   
--   <a>$sel:stepDetails:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_stepDetails</a> - Details of every step.
--   
--   <a>$sel:invocationTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_invocationTime</a> - Start time when the
--   remediation was executed.
newRemediationExecutionStatus :: RemediationExecutionStatus

-- | ENUM of the values.
remediationExecutionStatus_state :: Lens' RemediationExecutionStatus (Maybe RemediationExecutionState)

-- | The time when the remediation execution was last updated.
remediationExecutionStatus_lastUpdatedTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)

-- | Undocumented member.
remediationExecutionStatus_resourceKey :: Lens' RemediationExecutionStatus (Maybe ResourceKey)

-- | Details of every step.
remediationExecutionStatus_stepDetails :: Lens' RemediationExecutionStatus (Maybe [RemediationExecutionStep])

-- | Start time when the remediation was executed.
remediationExecutionStatus_invocationTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)

-- | Name of the step from the SSM document.
--   
--   <i>See:</i> <a>newRemediationExecutionStep</a> smart constructor.
data RemediationExecutionStep
RemediationExecutionStep' :: Maybe RemediationExecutionStepState -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> RemediationExecutionStep

-- | The valid status of the step.
[$sel:state:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe RemediationExecutionStepState

-- | The time when the step started.
[$sel:startTime:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe POSIX

-- | The details of the step.
[$sel:name:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe Text

-- | The time when the step stopped.
[$sel:stopTime:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe POSIX

-- | An error message if the step was interrupted during execution.
[$sel:errorMessage:RemediationExecutionStep'] :: RemediationExecutionStep -> Maybe Text

-- | Create a value of <a>RemediationExecutionStep</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_state</a> - The valid status of the step.
--   
--   <a>$sel:startTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_startTime</a> - The time when the step
--   started.
--   
--   <a>$sel:name:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_name</a> - The details of the step.
--   
--   <a>$sel:stopTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_stopTime</a> - The time when the step
--   stopped.
--   
--   <a>$sel:errorMessage:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_errorMessage</a> - An error message if the
--   step was interrupted during execution.
newRemediationExecutionStep :: RemediationExecutionStep

-- | The valid status of the step.
remediationExecutionStep_state :: Lens' RemediationExecutionStep (Maybe RemediationExecutionStepState)

-- | The time when the step started.
remediationExecutionStep_startTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | The details of the step.
remediationExecutionStep_name :: Lens' RemediationExecutionStep (Maybe Text)

-- | The time when the step stopped.
remediationExecutionStep_stopTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | An error message if the step was interrupted during execution.
remediationExecutionStep_errorMessage :: Lens' RemediationExecutionStep (Maybe Text)

-- | The value is either a dynamic (resource) value or a static value. You
--   must select either a dynamic value or a static value.
--   
--   <i>See:</i> <a>newRemediationParameterValue</a> smart constructor.
data RemediationParameterValue
RemediationParameterValue' :: Maybe StaticValue -> Maybe ResourceValue -> RemediationParameterValue

-- | The value is static and does not change at run-time.
[$sel:staticValue:RemediationParameterValue'] :: RemediationParameterValue -> Maybe StaticValue

-- | The value is dynamic and changes at run-time.
[$sel:resourceValue:RemediationParameterValue'] :: RemediationParameterValue -> Maybe ResourceValue

-- | Create a value of <a>RemediationParameterValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_staticValue</a> - The value is static and
--   does not change at run-time.
--   
--   <a>$sel:resourceValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_resourceValue</a> - The value is dynamic
--   and changes at run-time.
newRemediationParameterValue :: RemediationParameterValue

-- | The value is static and does not change at run-time.
remediationParameterValue_staticValue :: Lens' RemediationParameterValue (Maybe StaticValue)

-- | The value is dynamic and changes at run-time.
remediationParameterValue_resourceValue :: Lens' RemediationParameterValue (Maybe ResourceValue)

-- | An object that contains the resource type and the number of resources.
--   
--   <i>See:</i> <a>newResourceCount</a> smart constructor.
data ResourceCount
ResourceCount' :: Maybe ResourceType -> Maybe Integer -> ResourceCount

-- | The resource type (for example, <tt>"AWS::EC2::Instance"</tt>).
[$sel:resourceType:ResourceCount'] :: ResourceCount -> Maybe ResourceType

-- | The number of resources.
[$sel:count:ResourceCount'] :: ResourceCount -> Maybe Integer

-- | Create a value of <a>ResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCount'</a>,
--   <a>resourceCount_resourceType</a> - The resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:count:ResourceCount'</a>, <a>resourceCount_count</a> - The
--   number of resources.
newResourceCount :: ResourceCount

-- | The resource type (for example, <tt>"AWS::EC2::Instance"</tt>).
resourceCount_resourceType :: Lens' ResourceCount (Maybe ResourceType)

-- | The number of resources.
resourceCount_count :: Lens' ResourceCount (Maybe Integer)

-- | Filters the resource count based on account ID, region, and resource
--   type.
--   
--   <i>See:</i> <a>newResourceCountFilters</a> smart constructor.
data ResourceCountFilters
ResourceCountFilters' :: Maybe ResourceType -> Maybe Text -> Maybe Text -> ResourceCountFilters

-- | The type of the Amazon Web Services resource.
[$sel:resourceType:ResourceCountFilters'] :: ResourceCountFilters -> Maybe ResourceType

-- | The 12-digit ID of the account.
[$sel:accountId:ResourceCountFilters'] :: ResourceCountFilters -> Maybe Text

-- | The region where the account is located.
[$sel:region:ResourceCountFilters'] :: ResourceCountFilters -> Maybe Text

-- | Create a value of <a>ResourceCountFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_resourceType</a> - The type of the Amazon Web
--   Services resource.
--   
--   <a>$sel:accountId:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_accountId</a> - The 12-digit ID of the
--   account.
--   
--   <a>$sel:region:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_region</a> - The region where the account is
--   located.
newResourceCountFilters :: ResourceCountFilters

-- | The type of the Amazon Web Services resource.
resourceCountFilters_resourceType :: Lens' ResourceCountFilters (Maybe ResourceType)

-- | The 12-digit ID of the account.
resourceCountFilters_accountId :: Lens' ResourceCountFilters (Maybe Text)

-- | The region where the account is located.
resourceCountFilters_region :: Lens' ResourceCountFilters (Maybe Text)

-- | Filters the results by resource account ID, region, resource ID, and
--   resource name.
--   
--   <i>See:</i> <a>newResourceFilters</a> smart constructor.
data ResourceFilters
ResourceFilters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResourceFilters

-- | The ID of the resource.
[$sel:resourceId:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The name of the resource.
[$sel:resourceName:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The 12-digit source account ID.
[$sel:accountId:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | The source region.
[$sel:region:ResourceFilters'] :: ResourceFilters -> Maybe Text

-- | Create a value of <a>ResourceFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceFilters'</a>,
--   <a>resourceFilters_resourceId</a> - The ID of the resource.
--   
--   <a>$sel:resourceName:ResourceFilters'</a>,
--   <a>resourceFilters_resourceName</a> - The name of the resource.
--   
--   <a>$sel:accountId:ResourceFilters'</a>,
--   <a>resourceFilters_accountId</a> - The 12-digit source account ID.
--   
--   <a>$sel:region:ResourceFilters'</a>, <a>resourceFilters_region</a> -
--   The source region.
newResourceFilters :: ResourceFilters

-- | The ID of the resource.
resourceFilters_resourceId :: Lens' ResourceFilters (Maybe Text)

-- | The name of the resource.
resourceFilters_resourceName :: Lens' ResourceFilters (Maybe Text)

-- | The 12-digit source account ID.
resourceFilters_accountId :: Lens' ResourceFilters (Maybe Text)

-- | The source region.
resourceFilters_region :: Lens' ResourceFilters (Maybe Text)

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe POSIX -> ResourceIdentifier

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
[$sel:resourceId:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The type of resource.
[$sel:resourceType:ResourceIdentifier'] :: ResourceIdentifier -> Maybe ResourceType

-- | The custom name of the resource (if available).
[$sel:resourceName:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The time that the resource was deleted.
[$sel:resourceDeletionTime:ResourceIdentifier'] :: ResourceIdentifier -> Maybe POSIX

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The type of resource.
--   
--   <a>$sel:resourceName:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceName</a> - The custom name of the
--   resource (if available).
--   
--   <a>$sel:resourceDeletionTime:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceDeletionTime</a> - The time that the
--   resource was deleted.
newResourceIdentifier :: ResourceIdentifier

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
resourceIdentifier_resourceId :: Lens' ResourceIdentifier (Maybe Text)

-- | The type of resource.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe ResourceType)

-- | The custom name of the resource (if available).
resourceIdentifier_resourceName :: Lens' ResourceIdentifier (Maybe Text)

-- | The time that the resource was deleted.
resourceIdentifier_resourceDeletionTime :: Lens' ResourceIdentifier (Maybe UTCTime)

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newResourceKey</a> smart constructor.
data ResourceKey
ResourceKey' :: ResourceType -> Text -> ResourceKey

-- | The resource type.
[$sel:resourceType:ResourceKey'] :: ResourceKey -> ResourceType

-- | The ID of the resource (for example., sg-xxxxxx).
[$sel:resourceId:ResourceKey'] :: ResourceKey -> Text

-- | Create a value of <a>ResourceKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceKey'</a>, <a>resourceKey_resourceType</a>
--   - The resource type.
--   
--   <a>$sel:resourceId:ResourceKey'</a>, <a>resourceKey_resourceId</a> -
--   The ID of the resource (for example., sg-xxxxxx).
newResourceKey :: ResourceType -> Text -> ResourceKey

-- | The resource type.
resourceKey_resourceType :: Lens' ResourceKey ResourceType

-- | The ID of the resource (for example., sg-xxxxxx).
resourceKey_resourceId :: Lens' ResourceKey Text

-- | The dynamic value of the resource.
--   
--   <i>See:</i> <a>newResourceValue</a> smart constructor.
data ResourceValue
ResourceValue' :: ResourceValueType -> ResourceValue

-- | The value is a resource ID.
[$sel:value:ResourceValue'] :: ResourceValue -> ResourceValueType

-- | Create a value of <a>ResourceValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceValue'</a>, <a>resourceValue_value</a> - The
--   value is a resource ID.
newResourceValue :: ResourceValueType -> ResourceValue

-- | The value is a resource ID.
resourceValue_value :: Lens' ResourceValue ResourceValueType

-- | An object with the name of the retention configuration and the
--   retention period in days. The object stores the configuration for data
--   retention in Config.
--   
--   <i>See:</i> <a>newRetentionConfiguration</a> smart constructor.
data RetentionConfiguration
RetentionConfiguration' :: Text -> Natural -> RetentionConfiguration

-- | The name of the retention configuration object.
[$sel:name:RetentionConfiguration'] :: RetentionConfiguration -> Text

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
[$sel:retentionPeriodInDays:RetentionConfiguration'] :: RetentionConfiguration -> Natural

-- | Create a value of <a>RetentionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_name</a> - The name of the retention
--   configuration object.
--   
--   <a>$sel:retentionPeriodInDays:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_retentionPeriodInDays</a> - Number of days
--   Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
newRetentionConfiguration :: Text -> Natural -> RetentionConfiguration

-- | The name of the retention configuration object.
retentionConfiguration_name :: Lens' RetentionConfiguration Text

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
retentionConfiguration_retentionPeriodInDays :: Lens' RetentionConfiguration Natural

-- | Defines which resources trigger an evaluation for an Config rule. The
--   scope can include one or more resource types, a combination of a tag
--   key and value, or a combination of one resource type and one resource
--   ID. Specify a scope to constrain which resources trigger an evaluation
--   for a rule. Otherwise, evaluations for the rule are triggered when any
--   resource in your recording group changes in configuration.
--   
--   <i>See:</i> <a>newScope</a> smart constructor.
data Scope
Scope' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Scope

-- | The resource types of only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. You can only specify
--   one type if you also specify a resource ID for
--   <tt>ComplianceResourceId</tt>.
[$sel:complianceResourceTypes:Scope'] :: Scope -> Maybe [Text]

-- | The ID of the only Amazon Web Services resource that you want to
--   trigger an evaluation for the rule. If you specify a resource ID, you
--   must specify one resource type for <tt>ComplianceResourceTypes</tt>.
[$sel:complianceResourceId:Scope'] :: Scope -> Maybe Text

-- | The tag value applied to only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. If you specify a value
--   for <tt>TagValue</tt>, you must also specify a value for
--   <tt>TagKey</tt>.
[$sel:tagValue:Scope'] :: Scope -> Maybe Text

-- | The tag key that is applied to only those Amazon Web Services
--   resources that you want to trigger an evaluation for the rule.
[$sel:tagKey:Scope'] :: Scope -> Maybe Text

-- | Create a value of <a>Scope</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceResourceTypes:Scope'</a>,
--   <a>scope_complianceResourceTypes</a> - The resource types of only
--   those Amazon Web Services resources that you want to trigger an
--   evaluation for the rule. You can only specify one type if you also
--   specify a resource ID for <tt>ComplianceResourceId</tt>.
--   
--   <a>$sel:complianceResourceId:Scope'</a>,
--   <a>scope_complianceResourceId</a> - The ID of the only Amazon Web
--   Services resource that you want to trigger an evaluation for the rule.
--   If you specify a resource ID, you must specify one resource type for
--   <tt>ComplianceResourceTypes</tt>.
--   
--   <a>$sel:tagValue:Scope'</a>, <a>scope_tagValue</a> - The tag value
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule. If you specify a value for
--   <tt>TagValue</tt>, you must also specify a value for <tt>TagKey</tt>.
--   
--   <a>$sel:tagKey:Scope'</a>, <a>scope_tagKey</a> - The tag key that is
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule.
newScope :: Scope

-- | The resource types of only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. You can only specify
--   one type if you also specify a resource ID for
--   <tt>ComplianceResourceId</tt>.
scope_complianceResourceTypes :: Lens' Scope (Maybe [Text])

-- | The ID of the only Amazon Web Services resource that you want to
--   trigger an evaluation for the rule. If you specify a resource ID, you
--   must specify one resource type for <tt>ComplianceResourceTypes</tt>.
scope_complianceResourceId :: Lens' Scope (Maybe Text)

-- | The tag value applied to only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. If you specify a value
--   for <tt>TagValue</tt>, you must also specify a value for
--   <tt>TagKey</tt>.
scope_tagValue :: Lens' Scope (Maybe Text)

-- | The tag key that is applied to only those Amazon Web Services
--   resources that you want to trigger an evaluation for the rule.
scope_tagKey :: Lens' Scope (Maybe Text)

-- | Provides the Config rule owner (Amazon Web Services or customer), the
--   rule identifier, and the events that trigger the evaluation of your
--   Amazon Web Services resources.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe [SourceDetail] -> Owner -> Text -> Source

-- | Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
[$sel:sourceDetails:Source'] :: Source -> Maybe [SourceDetail]

-- | Indicates whether Amazon Web Services or the customer owns and manages
--   the Config rule.
[$sel:owner:Source'] :: Source -> Owner

-- | For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
[$sel:sourceIdentifier:Source'] :: Source -> Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceDetails:Source'</a>, <a>source_sourceDetails</a> -
--   Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
--   
--   <a>$sel:owner:Source'</a>, <a>source_owner</a> - Indicates whether
--   Amazon Web Services or the customer owns and manages the Config rule.
--   
--   <a>$sel:sourceIdentifier:Source'</a>, <a>source_sourceIdentifier</a> -
--   For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
newSource :: Owner -> Text -> Source

-- | Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
source_sourceDetails :: Lens' Source (Maybe [SourceDetail])

-- | Indicates whether Amazon Web Services or the customer owns and manages
--   the Config rule.
source_owner :: Lens' Source Owner

-- | For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
source_sourceIdentifier :: Lens' Source Text

-- | Provides the source and the message types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic. You can specify the
--   parameter values for <tt>SourceDetail</tt> only for custom rules.
--   
--   <i>See:</i> <a>newSourceDetail</a> smart constructor.
data SourceDetail
SourceDetail' :: Maybe MessageType -> Maybe MaximumExecutionFrequency -> Maybe EventSource -> SourceDetail

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
[$sel:messageType:SourceDetail'] :: SourceDetail -> Maybe MessageType

-- | The frequency at which you want Config to run evaluations for a custom
--   rule with a periodic trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
[$sel:maximumExecutionFrequency:SourceDetail'] :: SourceDetail -> Maybe MaximumExecutionFrequency

-- | The source of the event, such as an Amazon Web Services service, that
--   triggers Config to evaluate your Amazon Web Services resources.
[$sel:eventSource:SourceDetail'] :: SourceDetail -> Maybe EventSource

-- | Create a value of <a>SourceDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageType:SourceDetail'</a>, <a>sourceDetail_messageType</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
--   
--   <a>$sel:maximumExecutionFrequency:SourceDetail'</a>,
--   <a>sourceDetail_maximumExecutionFrequency</a> - The frequency at which
--   you want Config to run evaluations for a custom rule with a periodic
--   trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
--   
--   <a>$sel:eventSource:SourceDetail'</a>, <a>sourceDetail_eventSource</a>
--   - The source of the event, such as an Amazon Web Services service,
--   that triggers Config to evaluate your Amazon Web Services resources.
newSourceDetail :: SourceDetail

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
sourceDetail_messageType :: Lens' SourceDetail (Maybe MessageType)

-- | The frequency at which you want Config to run evaluations for a custom
--   rule with a periodic trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
sourceDetail_maximumExecutionFrequency :: Lens' SourceDetail (Maybe MaximumExecutionFrequency)

-- | The source of the event, such as an Amazon Web Services service, that
--   triggers Config to evaluate your Amazon Web Services resources.
sourceDetail_eventSource :: Lens' SourceDetail (Maybe EventSource)

-- | Amazon Web Services Systems Manager (SSM) specific remediation
--   controls.
--   
--   <i>See:</i> <a>newSsmControls</a> smart constructor.
data SsmControls
SsmControls' :: Maybe Natural -> Maybe Natural -> SsmControls

-- | The maximum percentage of remediation actions allowed to run in
--   parallel on the non-compliant resources for that specific rule. You
--   can specify a percentage, such as 10%. The default value is 10.
[$sel:concurrentExecutionRatePercentage:SsmControls'] :: SsmControls -> Maybe Natural

-- | The percentage of errors that are allowed before SSM stops running
--   automations on non-compliant resources for that specific rule. You can
--   specify a percentage of errors, for example 10%. If you do not
--   specifiy a percentage, the default is 50%. For example, if you set the
--   ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops
--   running the automations when the fifth error is received.
[$sel:errorPercentage:SsmControls'] :: SsmControls -> Maybe Natural

-- | Create a value of <a>SsmControls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutionRatePercentage:SsmControls'</a>,
--   <a>ssmControls_concurrentExecutionRatePercentage</a> - The maximum
--   percentage of remediation actions allowed to run in parallel on the
--   non-compliant resources for that specific rule. You can specify a
--   percentage, such as 10%. The default value is 10.
--   
--   <a>$sel:errorPercentage:SsmControls'</a>,
--   <a>ssmControls_errorPercentage</a> - The percentage of errors that are
--   allowed before SSM stops running automations on non-compliant
--   resources for that specific rule. You can specify a percentage of
--   errors, for example 10%. If you do not specifiy a percentage, the
--   default is 50%. For example, if you set the ErrorPercentage to 40% for
--   10 non-compliant resources, then SSM stops running the automations
--   when the fifth error is received.
newSsmControls :: SsmControls

-- | The maximum percentage of remediation actions allowed to run in
--   parallel on the non-compliant resources for that specific rule. You
--   can specify a percentage, such as 10%. The default value is 10.
ssmControls_concurrentExecutionRatePercentage :: Lens' SsmControls (Maybe Natural)

-- | The percentage of errors that are allowed before SSM stops running
--   automations on non-compliant resources for that specific rule. You can
--   specify a percentage of errors, for example 10%. If you do not
--   specifiy a percentage, the default is 50%. For example, if you set the
--   ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops
--   running the automations when the fifth error is received.
ssmControls_errorPercentage :: Lens' SsmControls (Maybe Natural)

-- | The static value of the resource.
--   
--   <i>See:</i> <a>newStaticValue</a> smart constructor.
data StaticValue
StaticValue' :: [Text] -> StaticValue

-- | A list of values. For example, the ARN of the assumed role.
[$sel:values:StaticValue'] :: StaticValue -> [Text]

-- | Create a value of <a>StaticValue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:StaticValue'</a>, <a>staticValue_values</a> - A list of
--   values. For example, the ARN of the assumed role.
newStaticValue :: StaticValue

-- | A list of values. For example, the ARN of the assumed role.
staticValue_values :: Lens' StaticValue [Text]

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization config rule.
--   
--   <i>See:</i> <a>newStatusDetailFilters</a> smart constructor.
data StatusDetailFilters
StatusDetailFilters' :: Maybe MemberAccountRuleStatus -> Maybe Text -> StatusDetailFilters

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
[$sel:memberAccountRuleStatus:StatusDetailFilters'] :: StatusDetailFilters -> Maybe MemberAccountRuleStatus

-- | The 12-digit account ID of the member account within an organization.
[$sel:accountId:StatusDetailFilters'] :: StatusDetailFilters -> Maybe Text

-- | Create a value of <a>StatusDetailFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberAccountRuleStatus:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_accountId</a> - The 12-digit account ID of the
--   member account within an organization.
newStatusDetailFilters :: StatusDetailFilters

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
statusDetailFilters_memberAccountRuleStatus :: Lens' StatusDetailFilters (Maybe MemberAccountRuleStatus)

-- | The 12-digit account ID of the member account within an organization.
statusDetailFilters_accountId :: Lens' StatusDetailFilters (Maybe Text)

-- | Provides the details of a stored query.
--   
--   <i>See:</i> <a>newStoredQuery</a> smart constructor.
data StoredQuery
StoredQuery' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> StoredQuery

-- | The ID of the query.
[$sel:queryId:StoredQuery'] :: StoredQuery -> Maybe Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
[$sel:queryArn:StoredQuery'] :: StoredQuery -> Maybe Text

-- | The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
[$sel:expression:StoredQuery'] :: StoredQuery -> Maybe Text

-- | A unique description for the query.
[$sel:description:StoredQuery'] :: StoredQuery -> Maybe Text

-- | The name of the query.
[$sel:queryName:StoredQuery'] :: StoredQuery -> Text

-- | Create a value of <a>StoredQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StoredQuery'</a>, <a>storedQuery_queryId</a> - The ID
--   of the query.
--   
--   <a>$sel:queryArn:StoredQuery'</a>, <a>storedQuery_queryArn</a> -
--   Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:expression:StoredQuery'</a>, <a>storedQuery_expression</a> -
--   The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
--   
--   <a>$sel:description:StoredQuery'</a>, <a>storedQuery_description</a> -
--   A unique description for the query.
--   
--   <a>$sel:queryName:StoredQuery'</a>, <a>storedQuery_queryName</a> - The
--   name of the query.
newStoredQuery :: Text -> StoredQuery

-- | The ID of the query.
storedQuery_queryId :: Lens' StoredQuery (Maybe Text)

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQuery_queryArn :: Lens' StoredQuery (Maybe Text)

-- | The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
storedQuery_expression :: Lens' StoredQuery (Maybe Text)

-- | A unique description for the query.
storedQuery_description :: Lens' StoredQuery (Maybe Text)

-- | The name of the query.
storedQuery_queryName :: Lens' StoredQuery Text

-- | Returns details of a specific query.
--   
--   <i>See:</i> <a>newStoredQueryMetadata</a> smart constructor.
data StoredQueryMetadata
StoredQueryMetadata' :: Maybe Text -> Text -> Text -> Text -> StoredQueryMetadata

-- | A unique description for the query.
[$sel:description:StoredQueryMetadata'] :: StoredQueryMetadata -> Maybe Text

-- | The ID of the query.
[$sel:queryId:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
[$sel:queryArn:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | The name of the query.
[$sel:queryName:StoredQueryMetadata'] :: StoredQueryMetadata -> Text

-- | Create a value of <a>StoredQueryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_description</a> - A unique description for the
--   query.
--   
--   <a>$sel:queryId:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryId</a> - The ID of the query.
--   
--   <a>$sel:queryArn:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryArn</a> - Amazon Resource Name (ARN) of
--   the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:queryName:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryName</a> - The name of the query.
newStoredQueryMetadata :: Text -> Text -> Text -> StoredQueryMetadata

-- | A unique description for the query.
storedQueryMetadata_description :: Lens' StoredQueryMetadata (Maybe Text)

-- | The ID of the query.
storedQueryMetadata_queryId :: Lens' StoredQueryMetadata Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQueryMetadata_queryArn :: Lens' StoredQueryMetadata Text

-- | The name of the query.
storedQueryMetadata_queryName :: Lens' StoredQueryMetadata Text

-- | The tags for the resource. The metadata that you apply to a resource
--   to help you categorize and organize them. Each tag consists of a key
--   and an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key).
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that make up a tag. A key is a general label that acts like a category
--   for more specific tag values.
newTag :: Tag

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
tag_value :: Lens' Tag (Maybe Text)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag (Maybe Text)


-- | Associates the specified tags to a resource with the specified
--   resourceArn. If existing tags on a resource are not specified in the
--   request parameters, they are not changed. When a resource is deleted,
--   the tags associated with that resource are deleted as well.
module Network.AWS.Config.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | An array of tag object.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   tag object.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | An array of tag object.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.Config.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Config.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Config.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Config.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Config.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Config.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Config.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Config.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Config.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Config.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.TagResource.TagResource


-- | Stops recording configurations of the Amazon Web Services resources
--   you have selected to record in your Amazon Web Services account.
module Network.AWS.Config.StopConfigurationRecorder

-- | The input for the StopConfigurationRecorder action.
--   
--   <i>See:</i> <a>newStopConfigurationRecorder</a> smart constructor.
data StopConfigurationRecorder
StopConfigurationRecorder' :: Text -> StopConfigurationRecorder

-- | The name of the recorder object that records each configuration change
--   made to the resources.
[$sel:configurationRecorderName:StopConfigurationRecorder'] :: StopConfigurationRecorder -> Text

-- | Create a value of <a>StopConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:StopConfigurationRecorder'</a>,
--   <a>stopConfigurationRecorder_configurationRecorderName</a> - The name
--   of the recorder object that records each configuration change made to
--   the resources.
newStopConfigurationRecorder :: Text -> StopConfigurationRecorder

-- | The name of the recorder object that records each configuration change
--   made to the resources.
stopConfigurationRecorder_configurationRecorderName :: Lens' StopConfigurationRecorder Text

-- | <i>See:</i> <a>newStopConfigurationRecorderResponse</a> smart
--   constructor.
data StopConfigurationRecorderResponse
StopConfigurationRecorderResponse' :: StopConfigurationRecorderResponse

-- | Create a value of <a>StopConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopConfigurationRecorderResponse :: StopConfigurationRecorderResponse
instance GHC.Generics.Generic Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance GHC.Show.Show Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance GHC.Read.Read Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance GHC.Classes.Eq Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance GHC.Generics.Generic Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorderResponse
instance GHC.Show.Show Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorderResponse
instance GHC.Read.Read Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorderResponse
instance GHC.Classes.Eq Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorderResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.StopConfigurationRecorder.StopConfigurationRecorder


-- | Runs an on-demand remediation for the specified Config rules against
--   the last known remediation configuration. It runs an execution against
--   the current state of your resources. Remediation execution is
--   asynchronous.
--   
--   You can specify up to 100 resource keys per request. An existing
--   StartRemediationExecution call for the specified resource keys must
--   complete before you can call the API again.
module Network.AWS.Config.StartRemediationExecution

-- | <i>See:</i> <a>newStartRemediationExecution</a> smart constructor.
data StartRemediationExecution
StartRemediationExecution' :: Text -> NonEmpty ResourceKey -> StartRemediationExecution

-- | The list of names of Config rules that you want to run remediation
--   execution for.
[$sel:configRuleName:StartRemediationExecution'] :: StartRemediationExecution -> Text

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
[$sel:resourceKeys:StartRemediationExecution'] :: StartRemediationExecution -> NonEmpty ResourceKey

-- | Create a value of <a>StartRemediationExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:StartRemediationExecution'</a>,
--   <a>startRemediationExecution_configRuleName</a> - The list of names of
--   Config rules that you want to run remediation execution for.
--   
--   <a>$sel:resourceKeys:StartRemediationExecution'</a>,
--   <a>startRemediationExecution_resourceKeys</a> - A list of resource
--   keys to be processed with the current request. Each element in the
--   list consists of the resource type and resource ID.
newStartRemediationExecution :: Text -> NonEmpty ResourceKey -> StartRemediationExecution

-- | The list of names of Config rules that you want to run remediation
--   execution for.
startRemediationExecution_configRuleName :: Lens' StartRemediationExecution Text

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
startRemediationExecution_resourceKeys :: Lens' StartRemediationExecution (NonEmpty ResourceKey)

-- | <i>See:</i> <a>newStartRemediationExecutionResponse</a> smart
--   constructor.
data StartRemediationExecutionResponse
StartRemediationExecutionResponse' :: Maybe Text -> Maybe (NonEmpty ResourceKey) -> Int -> StartRemediationExecutionResponse

-- | Returns a failure message. For example, the resource is already
--   compliant.
[$sel:failureMessage:StartRemediationExecutionResponse'] :: StartRemediationExecutionResponse -> Maybe Text

-- | For resources that have failed to start execution, the API returns a
--   resource key object.
[$sel:failedItems:StartRemediationExecutionResponse'] :: StartRemediationExecutionResponse -> Maybe (NonEmpty ResourceKey)

-- | The response's http status code.
[$sel:httpStatus:StartRemediationExecutionResponse'] :: StartRemediationExecutionResponse -> Int

-- | Create a value of <a>StartRemediationExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_failureMessage</a> - Returns a
--   failure message. For example, the resource is already compliant.
--   
--   <a>$sel:failedItems:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_failedItems</a> - For resources
--   that have failed to start execution, the API returns a resource key
--   object.
--   
--   <a>$sel:httpStatus:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_httpStatus</a> - The response's
--   http status code.
newStartRemediationExecutionResponse :: Int -> StartRemediationExecutionResponse

-- | Returns a failure message. For example, the resource is already
--   compliant.
startRemediationExecutionResponse_failureMessage :: Lens' StartRemediationExecutionResponse (Maybe Text)

-- | For resources that have failed to start execution, the API returns a
--   resource key object.
startRemediationExecutionResponse_failedItems :: Lens' StartRemediationExecutionResponse (Maybe (NonEmpty ResourceKey))

-- | The response's http status code.
startRemediationExecutionResponse_httpStatus :: Lens' StartRemediationExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance GHC.Show.Show Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance GHC.Read.Read Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance GHC.Classes.Eq Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance GHC.Generics.Generic Network.AWS.Config.StartRemediationExecution.StartRemediationExecutionResponse
instance GHC.Show.Show Network.AWS.Config.StartRemediationExecution.StartRemediationExecutionResponse
instance GHC.Read.Read Network.AWS.Config.StartRemediationExecution.StartRemediationExecutionResponse
instance GHC.Classes.Eq Network.AWS.Config.StartRemediationExecution.StartRemediationExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Control.DeepSeq.NFData Network.AWS.Config.StartRemediationExecution.StartRemediationExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Control.DeepSeq.NFData Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.StartRemediationExecution.StartRemediationExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.StartRemediationExecution.StartRemediationExecution


-- | Starts recording configurations of the Amazon Web Services resources
--   you have selected to record in your Amazon Web Services account.
--   
--   You must have created at least one delivery channel to successfully
--   start the configuration recorder.
module Network.AWS.Config.StartConfigurationRecorder

-- | The input for the StartConfigurationRecorder action.
--   
--   <i>See:</i> <a>newStartConfigurationRecorder</a> smart constructor.
data StartConfigurationRecorder
StartConfigurationRecorder' :: Text -> StartConfigurationRecorder

-- | The name of the recorder object that records each configuration change
--   made to the resources.
[$sel:configurationRecorderName:StartConfigurationRecorder'] :: StartConfigurationRecorder -> Text

-- | Create a value of <a>StartConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:StartConfigurationRecorder'</a>,
--   <a>startConfigurationRecorder_configurationRecorderName</a> - The name
--   of the recorder object that records each configuration change made to
--   the resources.
newStartConfigurationRecorder :: Text -> StartConfigurationRecorder

-- | The name of the recorder object that records each configuration change
--   made to the resources.
startConfigurationRecorder_configurationRecorderName :: Lens' StartConfigurationRecorder Text

-- | <i>See:</i> <a>newStartConfigurationRecorderResponse</a> smart
--   constructor.
data StartConfigurationRecorderResponse
StartConfigurationRecorderResponse' :: StartConfigurationRecorderResponse

-- | Create a value of <a>StartConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartConfigurationRecorderResponse :: StartConfigurationRecorderResponse
instance GHC.Generics.Generic Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance GHC.Show.Show Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance GHC.Read.Read Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance GHC.Classes.Eq Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance GHC.Generics.Generic Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorderResponse
instance GHC.Show.Show Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorderResponse
instance GHC.Read.Read Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorderResponse
instance GHC.Classes.Eq Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorderResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.StartConfigurationRecorder.StartConfigurationRecorder


-- | Runs an on-demand evaluation for the specified Config rules against
--   the last known configuration state of the resources. Use
--   <tt>StartConfigRulesEvaluation</tt> when you want to test that a rule
--   you updated is working as expected.
--   <tt>StartConfigRulesEvaluation</tt> does not re-record the latest
--   configuration state for your resources. It re-runs an evaluation
--   against the last known state of your resources.
--   
--   You can specify up to 25 Config rules per request.
--   
--   An existing <tt>StartConfigRulesEvaluation</tt> call for the specified
--   rules must complete before you can call the API again. If you chose to
--   have Config stream to an Amazon SNS topic, you will receive a
--   <tt>ConfigRuleEvaluationStarted</tt> notification when the evaluation
--   starts.
--   
--   You don't need to call the <tt>StartConfigRulesEvaluation</tt> API to
--   run an evaluation for a new rule. When you create a rule, Config
--   evaluates your resources against the rule automatically.
--   
--   The <tt>StartConfigRulesEvaluation</tt> API is useful if you want to
--   run on-demand evaluations, such as the following example:
--   
--   <ol>
--   <li>You have a custom rule that evaluates your IAM resources every 24
--   hours.</li>
--   <li>You update your Lambda function to add additional conditions to
--   your rule.</li>
--   <li>Instead of waiting for the next periodic evaluation, you call the
--   <tt>StartConfigRulesEvaluation</tt> API.</li>
--   <li>Config invokes your Lambda function and evaluates your IAM
--   resources.</li>
--   <li>Your custom rule will still run periodic evaluations every 24
--   hours.</li>
--   </ol>
module Network.AWS.Config.StartConfigRulesEvaluation

-- | <i>See:</i> <a>newStartConfigRulesEvaluation</a> smart constructor.
data StartConfigRulesEvaluation
StartConfigRulesEvaluation' :: Maybe (NonEmpty Text) -> StartConfigRulesEvaluation

-- | The list of names of Config rules that you want to run evaluations
--   for.
[$sel:configRuleNames:StartConfigRulesEvaluation'] :: StartConfigRulesEvaluation -> Maybe (NonEmpty Text)

-- | Create a value of <a>StartConfigRulesEvaluation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:StartConfigRulesEvaluation'</a>,
--   <a>startConfigRulesEvaluation_configRuleNames</a> - The list of names
--   of Config rules that you want to run evaluations for.
newStartConfigRulesEvaluation :: StartConfigRulesEvaluation

-- | The list of names of Config rules that you want to run evaluations
--   for.
startConfigRulesEvaluation_configRuleNames :: Lens' StartConfigRulesEvaluation (Maybe (NonEmpty Text))

-- | The output when you start the evaluation for the specified Config
--   rule.
--   
--   <i>See:</i> <a>newStartConfigRulesEvaluationResponse</a> smart
--   constructor.
data StartConfigRulesEvaluationResponse
StartConfigRulesEvaluationResponse' :: Int -> StartConfigRulesEvaluationResponse

-- | The response's http status code.
[$sel:httpStatus:StartConfigRulesEvaluationResponse'] :: StartConfigRulesEvaluationResponse -> Int

-- | Create a value of <a>StartConfigRulesEvaluationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartConfigRulesEvaluationResponse'</a>,
--   <a>startConfigRulesEvaluationResponse_httpStatus</a> - The response's
--   http status code.
newStartConfigRulesEvaluationResponse :: Int -> StartConfigRulesEvaluationResponse

-- | The response's http status code.
startConfigRulesEvaluationResponse_httpStatus :: Lens' StartConfigRulesEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance GHC.Show.Show Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance GHC.Read.Read Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance GHC.Classes.Eq Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance GHC.Generics.Generic Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluationResponse
instance GHC.Show.Show Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluationResponse
instance GHC.Read.Read Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluationResponse
instance GHC.Classes.Eq Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Control.DeepSeq.NFData Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Control.DeepSeq.NFData Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.StartConfigRulesEvaluation.StartConfigRulesEvaluation


-- | Accepts a structured query language (SQL) <tt>SELECT</tt> command,
--   performs the corresponding search, and returns resource configurations
--   matching the properties.
--   
--   For more information about query components, see the <a>Query
--   Components</a> section in the Config Developer Guide.
--   
--   This operation returns paginated results.
module Network.AWS.Config.SelectResourceConfig

-- | <i>See:</i> <a>newSelectResourceConfig</a> smart constructor.
data SelectResourceConfig
SelectResourceConfig' :: Maybe Text -> Maybe Natural -> Text -> SelectResourceConfig

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:SelectResourceConfig'] :: SelectResourceConfig -> Maybe Text

-- | The maximum number of query results returned on each page.
[$sel:limit:SelectResourceConfig'] :: SelectResourceConfig -> Maybe Natural

-- | The SQL query <tt>SELECT</tt> command.
[$sel:expression:SelectResourceConfig'] :: SelectResourceConfig -> Text

-- | Create a value of <a>SelectResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_nextToken</a> - The <tt>nextToken</tt> string
--   returned in a previous request that you use to request the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_limit</a> - The maximum number of query
--   results returned on each page.
--   
--   <a>$sel:expression:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_expression</a> - The SQL query <tt>SELECT</tt>
--   command.
newSelectResourceConfig :: Text -> SelectResourceConfig

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
selectResourceConfig_nextToken :: Lens' SelectResourceConfig (Maybe Text)

-- | The maximum number of query results returned on each page.
selectResourceConfig_limit :: Lens' SelectResourceConfig (Maybe Natural)

-- | The SQL query <tt>SELECT</tt> command.
selectResourceConfig_expression :: Lens' SelectResourceConfig Text

-- | <i>See:</i> <a>newSelectResourceConfigResponse</a> smart constructor.
data SelectResourceConfigResponse
SelectResourceConfigResponse' :: Maybe [Text] -> Maybe QueryInfo -> Maybe Text -> Int -> SelectResourceConfigResponse

-- | Returns the results for the SQL query.
[$sel:results:SelectResourceConfigResponse'] :: SelectResourceConfigResponse -> Maybe [Text]

-- | Returns the <tt>QueryInfo</tt> object.
[$sel:queryInfo:SelectResourceConfigResponse'] :: SelectResourceConfigResponse -> Maybe QueryInfo

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:SelectResourceConfigResponse'] :: SelectResourceConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SelectResourceConfigResponse'] :: SelectResourceConfigResponse -> Int

-- | Create a value of <a>SelectResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:results:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_results</a> - Returns the results for
--   the SQL query.
--   
--   <a>$sel:queryInfo:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_queryInfo</a> - Returns the
--   <tt>QueryInfo</tt> object.
--   
--   <a>$sel:nextToken:SelectResourceConfig'</a>,
--   <a>selectResourceConfigResponse_nextToken</a> - The <tt>nextToken</tt>
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:httpStatus:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_httpStatus</a> - The response's http
--   status code.
newSelectResourceConfigResponse :: Int -> SelectResourceConfigResponse

-- | Returns the results for the SQL query.
selectResourceConfigResponse_results :: Lens' SelectResourceConfigResponse (Maybe [Text])

-- | Returns the <tt>QueryInfo</tt> object.
selectResourceConfigResponse_queryInfo :: Lens' SelectResourceConfigResponse (Maybe QueryInfo)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
selectResourceConfigResponse_nextToken :: Lens' SelectResourceConfigResponse (Maybe Text)

-- | The response's http status code.
selectResourceConfigResponse_httpStatus :: Lens' SelectResourceConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance GHC.Show.Show Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance GHC.Read.Read Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.SelectResourceConfig.SelectResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.SelectResourceConfig.SelectResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.SelectResourceConfig.SelectResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.SelectResourceConfig.SelectResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.SelectResourceConfig.SelectResourceConfigResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Data.Hashable.Class.Hashable Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.SelectResourceConfig.SelectResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.SelectResourceConfig.SelectResourceConfig


-- | Accepts a structured query language (SQL) SELECT command and an
--   aggregator to query configuration state of Amazon Web Services
--   resources across multiple accounts and regions, performs the
--   corresponding search, and returns resource configurations matching the
--   properties.
--   
--   For more information about query components, see the <a>Query
--   Components</a> section in the Config Developer Guide.
--   
--   If you run an aggregation query (i.e., using <tt>GROUP BY</tt> or
--   using aggregate functions such as <tt>COUNT</tt>; e.g., <tt>SELECT
--   resourceId, COUNT(*) WHERE resourceType = 'AWS::IAM::Role' GROUP BY
--   resourceId</tt>) and do not specify the <tt>MaxResults</tt> or the
--   <tt>Limit</tt> query parameters, the default page size is set to 500.
--   
--   If you run a non-aggregation query (i.e., not using <tt>GROUP BY</tt>
--   or aggregate function; e.g., <tt>SELECT * WHERE resourceType =
--   'AWS::IAM::Role'</tt>) and do not specify the <tt>MaxResults</tt> or
--   the <tt>Limit</tt> query parameters, the default page size is set to
--   25.
--   
--   This operation returns paginated results.
module Network.AWS.Config.SelectAggregateResourceConfig

-- | <i>See:</i> <a>newSelectAggregateResourceConfig</a> smart constructor.
data SelectAggregateResourceConfig
SelectAggregateResourceConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> Text -> SelectAggregateResourceConfig

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
[$sel:nextToken:SelectAggregateResourceConfig'] :: SelectAggregateResourceConfig -> Maybe Text

-- | The maximum number of query results returned on each page.
[$sel:limit:SelectAggregateResourceConfig'] :: SelectAggregateResourceConfig -> Maybe Natural

-- | The maximum number of query results returned on each page. Config also
--   allows the Limit request parameter.
[$sel:maxResults:SelectAggregateResourceConfig'] :: SelectAggregateResourceConfig -> Maybe Natural

-- | The SQL query SELECT command.
[$sel:expression:SelectAggregateResourceConfig'] :: SelectAggregateResourceConfig -> Text

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:SelectAggregateResourceConfig'] :: SelectAggregateResourceConfig -> Text

-- | Create a value of <a>SelectAggregateResourceConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_nextToken</a> - The nextToken string
--   returned in a previous request that you use to request the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_limit</a> - The maximum number of
--   query results returned on each page.
--   
--   <a>$sel:maxResults:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_maxResults</a> - The maximum number
--   of query results returned on each page. Config also allows the Limit
--   request parameter.
--   
--   <a>$sel:expression:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_expression</a> - The SQL query SELECT
--   command.
--   
--   
--   <a>$sel:configurationAggregatorName:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newSelectAggregateResourceConfig :: Text -> Text -> SelectAggregateResourceConfig

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
selectAggregateResourceConfig_nextToken :: Lens' SelectAggregateResourceConfig (Maybe Text)

-- | The maximum number of query results returned on each page.
selectAggregateResourceConfig_limit :: Lens' SelectAggregateResourceConfig (Maybe Natural)

-- | The maximum number of query results returned on each page. Config also
--   allows the Limit request parameter.
selectAggregateResourceConfig_maxResults :: Lens' SelectAggregateResourceConfig (Maybe Natural)

-- | The SQL query SELECT command.
selectAggregateResourceConfig_expression :: Lens' SelectAggregateResourceConfig Text

-- | The name of the configuration aggregator.
selectAggregateResourceConfig_configurationAggregatorName :: Lens' SelectAggregateResourceConfig Text

-- | <i>See:</i> <a>newSelectAggregateResourceConfigResponse</a> smart
--   constructor.
data SelectAggregateResourceConfigResponse
SelectAggregateResourceConfigResponse' :: Maybe [Text] -> Maybe QueryInfo -> Maybe Text -> Int -> SelectAggregateResourceConfigResponse

-- | Returns the results for the SQL query.
[$sel:results:SelectAggregateResourceConfigResponse'] :: SelectAggregateResourceConfigResponse -> Maybe [Text]
[$sel:queryInfo:SelectAggregateResourceConfigResponse'] :: SelectAggregateResourceConfigResponse -> Maybe QueryInfo

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
[$sel:nextToken:SelectAggregateResourceConfigResponse'] :: SelectAggregateResourceConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SelectAggregateResourceConfigResponse'] :: SelectAggregateResourceConfigResponse -> Int

-- | Create a value of <a>SelectAggregateResourceConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:results:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_results</a> - Returns the
--   results for the SQL query.
--   
--   <a>$sel:queryInfo:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_queryInfo</a> - Undocumented
--   member.
--   
--   <a>$sel:nextToken:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfigResponse_nextToken</a> - The nextToken
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:httpStatus:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_httpStatus</a> - The
--   response's http status code.
newSelectAggregateResourceConfigResponse :: Int -> SelectAggregateResourceConfigResponse

-- | Returns the results for the SQL query.
selectAggregateResourceConfigResponse_results :: Lens' SelectAggregateResourceConfigResponse (Maybe [Text])

-- | Undocumented member.
selectAggregateResourceConfigResponse_queryInfo :: Lens' SelectAggregateResourceConfigResponse (Maybe QueryInfo)

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
selectAggregateResourceConfigResponse_nextToken :: Lens' SelectAggregateResourceConfigResponse (Maybe Text)

-- | The response's http status code.
selectAggregateResourceConfigResponse_httpStatus :: Lens' SelectAggregateResourceConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance GHC.Show.Show Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance GHC.Read.Read Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfigResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Data.Hashable.Class.Hashable Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.SelectAggregateResourceConfig.SelectAggregateResourceConfig


-- | Saves a new query or updates an existing saved query. The
--   <tt>QueryName</tt> must be unique for a single Amazon Web Services
--   account and a single Amazon Web Services Region. You can create upto
--   300 queries in a single Amazon Web Services account and a single
--   Amazon Web Services Region.
module Network.AWS.Config.PutStoredQuery

-- | <i>See:</i> <a>newPutStoredQuery</a> smart constructor.
data PutStoredQuery
PutStoredQuery' :: Maybe [Tag] -> StoredQuery -> PutStoredQuery

-- | A list of <tt>Tags</tt> object.
[$sel:tags:PutStoredQuery'] :: PutStoredQuery -> Maybe [Tag]

-- | A list of <tt>StoredQuery</tt> objects. The mandatory fields are
--   <tt>QueryName</tt> and <tt>Expression</tt>.
--   
--   When you are creating a query, you must provide a query name and an
--   expression. When you are updating a query, you must provide a query
--   name but updating the description is optional.
[$sel:storedQuery:PutStoredQuery'] :: PutStoredQuery -> StoredQuery

-- | Create a value of <a>PutStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutStoredQuery'</a>, <a>putStoredQuery_tags</a> - A list
--   of <tt>Tags</tt> object.
--   
--   <a>$sel:storedQuery:PutStoredQuery'</a>,
--   <a>putStoredQuery_storedQuery</a> - A list of <tt>StoredQuery</tt>
--   objects. The mandatory fields are <tt>QueryName</tt> and
--   <tt>Expression</tt>.
--   
--   When you are creating a query, you must provide a query name and an
--   expression. When you are updating a query, you must provide a query
--   name but updating the description is optional.
newPutStoredQuery :: StoredQuery -> PutStoredQuery

-- | A list of <tt>Tags</tt> object.
putStoredQuery_tags :: Lens' PutStoredQuery (Maybe [Tag])

-- | A list of <tt>StoredQuery</tt> objects. The mandatory fields are
--   <tt>QueryName</tt> and <tt>Expression</tt>.
--   
--   When you are creating a query, you must provide a query name and an
--   expression. When you are updating a query, you must provide a query
--   name but updating the description is optional.
putStoredQuery_storedQuery :: Lens' PutStoredQuery StoredQuery

-- | <i>See:</i> <a>newPutStoredQueryResponse</a> smart constructor.
data PutStoredQueryResponse
PutStoredQueryResponse' :: Maybe Text -> Int -> PutStoredQueryResponse

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
[$sel:queryArn:PutStoredQueryResponse'] :: PutStoredQueryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutStoredQueryResponse'] :: PutStoredQueryResponse -> Int

-- | Create a value of <a>PutStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryArn:PutStoredQueryResponse'</a>,
--   <a>putStoredQueryResponse_queryArn</a> - Amazon Resource Name (ARN) of
--   the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:httpStatus:PutStoredQueryResponse'</a>,
--   <a>putStoredQueryResponse_httpStatus</a> - The response's http status
--   code.
newPutStoredQueryResponse :: Int -> PutStoredQueryResponse

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
putStoredQueryResponse_queryArn :: Lens' PutStoredQueryResponse (Maybe Text)

-- | The response's http status code.
putStoredQueryResponse_httpStatus :: Lens' PutStoredQueryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance GHC.Show.Show Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance GHC.Read.Read Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance GHC.Classes.Eq Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance GHC.Generics.Generic Network.AWS.Config.PutStoredQuery.PutStoredQueryResponse
instance GHC.Show.Show Network.AWS.Config.PutStoredQuery.PutStoredQueryResponse
instance GHC.Read.Read Network.AWS.Config.PutStoredQuery.PutStoredQueryResponse
instance GHC.Classes.Eq Network.AWS.Config.PutStoredQuery.PutStoredQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.PutStoredQuery.PutStoredQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutStoredQuery.PutStoredQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutStoredQuery.PutStoredQuery


-- | Creates and updates the retention configuration with details about
--   retention period (number of days) that Config stores your historical
--   information. The API creates the <tt>RetentionConfiguration</tt>
--   object and names the object as <b>default</b>. When you have a
--   <tt>RetentionConfiguration</tt> object named <b>default</b>, calling
--   the API modifies the default object.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
module Network.AWS.Config.PutRetentionConfiguration

-- | <i>See:</i> <a>newPutRetentionConfiguration</a> smart constructor.
data PutRetentionConfiguration
PutRetentionConfiguration' :: Natural -> PutRetentionConfiguration

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
[$sel:retentionPeriodInDays:PutRetentionConfiguration'] :: PutRetentionConfiguration -> Natural

-- | Create a value of <a>PutRetentionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriodInDays:PutRetentionConfiguration'</a>,
--   <a>putRetentionConfiguration_retentionPeriodInDays</a> - Number of
--   days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
newPutRetentionConfiguration :: Natural -> PutRetentionConfiguration

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
putRetentionConfiguration_retentionPeriodInDays :: Lens' PutRetentionConfiguration Natural

-- | <i>See:</i> <a>newPutRetentionConfigurationResponse</a> smart
--   constructor.
data PutRetentionConfigurationResponse
PutRetentionConfigurationResponse' :: Maybe RetentionConfiguration -> Int -> PutRetentionConfigurationResponse

-- | Returns a retention configuration object.
[$sel:retentionConfiguration:PutRetentionConfigurationResponse'] :: PutRetentionConfigurationResponse -> Maybe RetentionConfiguration

-- | The response's http status code.
[$sel:httpStatus:PutRetentionConfigurationResponse'] :: PutRetentionConfigurationResponse -> Int

-- | Create a value of <a>PutRetentionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionConfiguration:PutRetentionConfigurationResponse'</a>,
--   <a>putRetentionConfigurationResponse_retentionConfiguration</a> -
--   Returns a retention configuration object.
--   
--   <a>$sel:httpStatus:PutRetentionConfigurationResponse'</a>,
--   <a>putRetentionConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newPutRetentionConfigurationResponse :: Int -> PutRetentionConfigurationResponse

-- | Returns a retention configuration object.
putRetentionConfigurationResponse_retentionConfiguration :: Lens' PutRetentionConfigurationResponse (Maybe RetentionConfiguration)

-- | The response's http status code.
putRetentionConfigurationResponse_httpStatus :: Lens' PutRetentionConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance GHC.Show.Show Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance GHC.Read.Read Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance GHC.Classes.Eq Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance GHC.Generics.Generic Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfigurationResponse
instance GHC.Show.Show Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfigurationResponse
instance GHC.Read.Read Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutRetentionConfiguration.PutRetentionConfiguration


-- | Records the configuration state for the resource provided in the
--   request. The configuration state of a resource is represented in
--   Config as Configuration Items. Once this API records the configuration
--   item, you can retrieve the list of configuration items for the custom
--   resource type using existing Config APIs.
--   
--   The custom resource type must be registered with CloudFormation. This
--   API accepts the configuration item registered with CloudFormation.
--   
--   When you call this API, Config only stores configuration state of the
--   resource provided in the request. This API does not change or
--   remediate the configuration of the resource.
--   
--   Write-only schema properites are not recorded as part of the published
--   configuration item.
module Network.AWS.Config.PutResourceConfig

-- | <i>See:</i> <a>newPutResourceConfig</a> smart constructor.
data PutResourceConfig
PutResourceConfig' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> PutResourceConfig

-- | Name of the resource.
[$sel:resourceName:PutResourceConfig'] :: PutResourceConfig -> Maybe Text

-- | Tags associated with the resource.
[$sel:tags:PutResourceConfig'] :: PutResourceConfig -> Maybe (HashMap Text Text)

-- | The type of the resource. The custom resource type must be registered
--   with CloudFormation.
--   
--   You cannot use the organization names “amzn”, “amazon”, “alexa”,
--   “custom” with custom resource types. It is the first part of the
--   ResourceType up to the first ::.
[$sel:resourceType:PutResourceConfig'] :: PutResourceConfig -> Text

-- | Version of the schema registered for the ResourceType in
--   CloudFormation.
[$sel:schemaVersionId:PutResourceConfig'] :: PutResourceConfig -> Text

-- | Unique identifier of the resource.
[$sel:resourceId:PutResourceConfig'] :: PutResourceConfig -> Text

-- | The configuration object of the resource in valid JSON format. It must
--   match the schema registered with CloudFormation.
--   
--   The configuration JSON must not exceed 64 KB.
[$sel:configuration:PutResourceConfig'] :: PutResourceConfig -> Text

-- | Create a value of <a>PutResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceName</a> - Name of the resource.
--   
--   <a>$sel:tags:PutResourceConfig'</a>, <a>putResourceConfig_tags</a> -
--   Tags associated with the resource.
--   
--   <a>$sel:resourceType:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceType</a> - The type of the resource. The
--   custom resource type must be registered with CloudFormation.
--   
--   You cannot use the organization names “amzn”, “amazon”, “alexa”,
--   “custom” with custom resource types. It is the first part of the
--   ResourceType up to the first ::.
--   
--   <a>$sel:schemaVersionId:PutResourceConfig'</a>,
--   <a>putResourceConfig_schemaVersionId</a> - Version of the schema
--   registered for the ResourceType in CloudFormation.
--   
--   <a>$sel:resourceId:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceId</a> - Unique identifier of the
--   resource.
--   
--   <a>$sel:configuration:PutResourceConfig'</a>,
--   <a>putResourceConfig_configuration</a> - The configuration object of
--   the resource in valid JSON format. It must match the schema registered
--   with CloudFormation.
--   
--   The configuration JSON must not exceed 64 KB.
newPutResourceConfig :: Text -> Text -> Text -> Text -> PutResourceConfig

-- | Name of the resource.
putResourceConfig_resourceName :: Lens' PutResourceConfig (Maybe Text)

-- | Tags associated with the resource.
putResourceConfig_tags :: Lens' PutResourceConfig (Maybe (HashMap Text Text))

-- | The type of the resource. The custom resource type must be registered
--   with CloudFormation.
--   
--   You cannot use the organization names “amzn”, “amazon”, “alexa”,
--   “custom” with custom resource types. It is the first part of the
--   ResourceType up to the first ::.
putResourceConfig_resourceType :: Lens' PutResourceConfig Text

-- | Version of the schema registered for the ResourceType in
--   CloudFormation.
putResourceConfig_schemaVersionId :: Lens' PutResourceConfig Text

-- | Unique identifier of the resource.
putResourceConfig_resourceId :: Lens' PutResourceConfig Text

-- | The configuration object of the resource in valid JSON format. It must
--   match the schema registered with CloudFormation.
--   
--   The configuration JSON must not exceed 64 KB.
putResourceConfig_configuration :: Lens' PutResourceConfig Text

-- | <i>See:</i> <a>newPutResourceConfigResponse</a> smart constructor.
data PutResourceConfigResponse
PutResourceConfigResponse' :: PutResourceConfigResponse

-- | Create a value of <a>PutResourceConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutResourceConfigResponse :: PutResourceConfigResponse
instance GHC.Generics.Generic Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance GHC.Show.Show Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance GHC.Read.Read Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.PutResourceConfig.PutResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.PutResourceConfig.PutResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.PutResourceConfig.PutResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.PutResourceConfig.PutResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.PutResourceConfig.PutResourceConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutResourceConfig.PutResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutResourceConfig.PutResourceConfig


-- | A remediation exception is when a specific resource is no longer
--   considered for auto-remediation. This API adds a new exception or
--   updates an existing exception for a specific resource with a specific
--   Config rule.
--   
--   Config generates a remediation exception when a problem occurs
--   executing a remediation action to a specific resource. Remediation
--   exceptions blocks auto-remediation until the exception is cleared.
module Network.AWS.Config.PutRemediationExceptions

-- | <i>See:</i> <a>newPutRemediationExceptions</a> smart constructor.
data PutRemediationExceptions
PutRemediationExceptions' :: Maybe Text -> Maybe POSIX -> Text -> NonEmpty RemediationExceptionResourceKey -> PutRemediationExceptions

-- | The message contains an explanation of the exception.
[$sel:message:PutRemediationExceptions'] :: PutRemediationExceptions -> Maybe Text

-- | The exception is automatically deleted after the expiration date.
[$sel:expirationTime:PutRemediationExceptions'] :: PutRemediationExceptions -> Maybe POSIX

-- | The name of the Config rule for which you want to create remediation
--   exception.
[$sel:configRuleName:PutRemediationExceptions'] :: PutRemediationExceptions -> Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
[$sel:resourceKeys:PutRemediationExceptions'] :: PutRemediationExceptions -> NonEmpty RemediationExceptionResourceKey

-- | Create a value of <a>PutRemediationExceptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_message</a> - The message contains an
--   explanation of the exception.
--   
--   <a>$sel:expirationTime:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_expirationTime</a> - The exception is
--   automatically deleted after the expiration date.
--   
--   <a>$sel:configRuleName:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_configRuleName</a> - The name of the
--   Config rule for which you want to create remediation exception.
--   
--   <a>$sel:resourceKeys:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_resourceKeys</a> - An exception list of
--   resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
newPutRemediationExceptions :: Text -> NonEmpty RemediationExceptionResourceKey -> PutRemediationExceptions

-- | The message contains an explanation of the exception.
putRemediationExceptions_message :: Lens' PutRemediationExceptions (Maybe Text)

-- | The exception is automatically deleted after the expiration date.
putRemediationExceptions_expirationTime :: Lens' PutRemediationExceptions (Maybe UTCTime)

-- | The name of the Config rule for which you want to create remediation
--   exception.
putRemediationExceptions_configRuleName :: Lens' PutRemediationExceptions Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
putRemediationExceptions_resourceKeys :: Lens' PutRemediationExceptions (NonEmpty RemediationExceptionResourceKey)

-- | <i>See:</i> <a>newPutRemediationExceptionsResponse</a> smart
--   constructor.
data PutRemediationExceptionsResponse
PutRemediationExceptionsResponse' :: Maybe [FailedRemediationExceptionBatch] -> Int -> PutRemediationExceptionsResponse

-- | Returns a list of failed remediation exceptions batch objects. Each
--   object in the batch consists of a list of failed items and failure
--   messages.
[$sel:failedBatches:PutRemediationExceptionsResponse'] :: PutRemediationExceptionsResponse -> Maybe [FailedRemediationExceptionBatch]

-- | The response's http status code.
[$sel:httpStatus:PutRemediationExceptionsResponse'] :: PutRemediationExceptionsResponse -> Int

-- | Create a value of <a>PutRemediationExceptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:PutRemediationExceptionsResponse'</a>,
--   <a>putRemediationExceptionsResponse_failedBatches</a> - Returns a list
--   of failed remediation exceptions batch objects. Each object in the
--   batch consists of a list of failed items and failure messages.
--   
--   <a>$sel:httpStatus:PutRemediationExceptionsResponse'</a>,
--   <a>putRemediationExceptionsResponse_httpStatus</a> - The response's
--   http status code.
newPutRemediationExceptionsResponse :: Int -> PutRemediationExceptionsResponse

-- | Returns a list of failed remediation exceptions batch objects. Each
--   object in the batch consists of a list of failed items and failure
--   messages.
putRemediationExceptionsResponse_failedBatches :: Lens' PutRemediationExceptionsResponse (Maybe [FailedRemediationExceptionBatch])

-- | The response's http status code.
putRemediationExceptionsResponse_httpStatus :: Lens' PutRemediationExceptionsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance GHC.Show.Show Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance GHC.Read.Read Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance GHC.Classes.Eq Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance GHC.Generics.Generic Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptionsResponse
instance GHC.Show.Show Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptionsResponse
instance GHC.Read.Read Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptionsResponse
instance GHC.Classes.Eq Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutRemediationExceptions.PutRemediationExceptions


-- | Adds or updates the remediation configuration with a specific Config
--   rule with the selected target or action. The API creates the
--   <tt>RemediationConfiguration</tt> object for the Config rule. The
--   Config rule must already exist for you to add a remediation
--   configuration. The target (SSM document) must exist and have
--   permissions to use the target.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call this again to ensure the remediations can run.
--   
--   This API does not support adding remediation configurations for
--   service-linked Config Rules such as Organization Config rules, the
--   rules deployed by conformance packs, and rules deployed by Amazon Web
--   Services Security Hub.
module Network.AWS.Config.PutRemediationConfigurations

-- | <i>See:</i> <a>newPutRemediationConfigurations</a> smart constructor.
data PutRemediationConfigurations
PutRemediationConfigurations' :: [RemediationConfiguration] -> PutRemediationConfigurations

-- | A list of remediation configuration objects.
[$sel:remediationConfigurations:PutRemediationConfigurations'] :: PutRemediationConfigurations -> [RemediationConfiguration]

-- | Create a value of <a>PutRemediationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remediationConfigurations:PutRemediationConfigurations'</a>,
--   <a>putRemediationConfigurations_remediationConfigurations</a> - A list
--   of remediation configuration objects.
newPutRemediationConfigurations :: PutRemediationConfigurations

-- | A list of remediation configuration objects.
putRemediationConfigurations_remediationConfigurations :: Lens' PutRemediationConfigurations [RemediationConfiguration]

-- | <i>See:</i> <a>newPutRemediationConfigurationsResponse</a> smart
--   constructor.
data PutRemediationConfigurationsResponse
PutRemediationConfigurationsResponse' :: Maybe [FailedRemediationBatch] -> Int -> PutRemediationConfigurationsResponse

-- | Returns a list of failed remediation batch objects.
[$sel:failedBatches:PutRemediationConfigurationsResponse'] :: PutRemediationConfigurationsResponse -> Maybe [FailedRemediationBatch]

-- | The response's http status code.
[$sel:httpStatus:PutRemediationConfigurationsResponse'] :: PutRemediationConfigurationsResponse -> Int

-- | Create a value of <a>PutRemediationConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:PutRemediationConfigurationsResponse'</a>,
--   <a>putRemediationConfigurationsResponse_failedBatches</a> - Returns a
--   list of failed remediation batch objects.
--   
--   <a>$sel:httpStatus:PutRemediationConfigurationsResponse'</a>,
--   <a>putRemediationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newPutRemediationConfigurationsResponse :: Int -> PutRemediationConfigurationsResponse

-- | Returns a list of failed remediation batch objects.
putRemediationConfigurationsResponse_failedBatches :: Lens' PutRemediationConfigurationsResponse (Maybe [FailedRemediationBatch])

-- | The response's http status code.
putRemediationConfigurationsResponse_httpStatus :: Lens' PutRemediationConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance GHC.Show.Show Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance GHC.Read.Read Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance GHC.Classes.Eq Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance GHC.Generics.Generic Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurationsResponse
instance GHC.Show.Show Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurationsResponse
instance GHC.Read.Read Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutRemediationConfigurations.PutRemediationConfigurations


-- | Deploys conformance packs across member accounts in an Amazon Web
--   Services Organization.
--   
--   Only a master account and a delegated administrator can call this API.
--   When calling this API with a delegated administrator, you must ensure
--   Organizations <tt>ListDelegatedAdministrator</tt> permissions are
--   added.
--   
--   This API enables organization service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt> through the
--   <tt>EnableAWSServiceAccess</tt> action and creates a service linked
--   role <tt>AWSServiceRoleForConfigMultiAccountSetup</tt> in the master
--   or delegated administrator account of your organization. The service
--   linked role is created only when the role does not exist in the caller
--   account. To use this API with delegated administrator, register a
--   delegated administrator by calling Amazon Web Services Organization
--   <tt>register-delegate-admin</tt> for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Prerequisite: Ensure you call <tt>EnableAllFeatures</tt> API to enable
--   all features in an organization.
--   
--   You must specify either the <tt>TemplateS3Uri</tt> or the
--   <tt>TemplateBody</tt> parameter, but not both. If you provide both
--   Config uses the <tt>TemplateS3Uri</tt> parameter and ignores the
--   <tt>TemplateBody</tt> parameter.
--   
--   Config sets the state of a conformance pack to CREATE_IN_PROGRESS and
--   UPDATE_IN_PROGRESS until the conformance pack is created or updated.
--   You cannot update a conformance pack while it is in this state.
--   
--   You can create 50 conformance packs with 25 Config rules in each pack
--   and 3 delegated administrator per organization.
module Network.AWS.Config.PutOrganizationConformancePack

-- | <i>See:</i> <a>newPutOrganizationConformancePack</a> smart
--   constructor.
data PutOrganizationConformancePack
PutOrganizationConformancePack' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe [Text] -> Maybe Text -> Text -> PutOrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional. If used, it must be prefixed with
--   <tt>awsconfigconforms</tt>.
[$sel:deliveryS3Bucket:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe Text

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe Text

-- | Location of file containing the template body. The uri must point to
--   the conformance pack template (max size: 300 KB).
--   
--   You must have access to read Amazon S3 bucket.
[$sel:templateS3Uri:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe Text

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe [ConformancePackInputParameter]

-- | A list of Amazon Web Services accounts to be excluded from an
--   organization conformance pack while deploying a conformance pack.
[$sel:excludedAccounts:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe [Text]

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
[$sel:templateBody:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Maybe Text

-- | Name of the organization conformance pack you want to create.
[$sel:organizationConformancePackName:PutOrganizationConformancePack'] :: PutOrganizationConformancePack -> Text

-- | Create a value of <a>PutOrganizationConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_deliveryS3Bucket</a> - The name of
--   the Amazon S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional. If used, it must be prefixed with
--   <tt>awsconfigconforms</tt>.
--   
--   <a>$sel:deliveryS3KeyPrefix:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_deliveryS3KeyPrefix</a> - The prefix
--   for the Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:templateS3Uri:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_templateS3Uri</a> - Location of file
--   containing the template body. The uri must point to the conformance
--   pack template (max size: 300 KB).
--   
--   You must have access to read Amazon S3 bucket.
--   
--   
--   <a>$sel:conformancePackInputParameters:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_conformancePackInputParameters</a> -
--   A list of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:excludedAccounts:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_excludedAccounts</a> - A list of
--   Amazon Web Services accounts to be excluded from an organization
--   conformance pack while deploying a conformance pack.
--   
--   <a>$sel:templateBody:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_templateBody</a> - A string
--   containing full conformance pack template body. Structure containing
--   the template body with a minimum length of 1 byte and a maximum length
--   of 51,200 bytes.
--   
--   
--   <a>$sel:organizationConformancePackName:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_organizationConformancePackName</a>
--   - Name of the organization conformance pack you want to create.
newPutOrganizationConformancePack :: Text -> PutOrganizationConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional. If used, it must be prefixed with
--   <tt>awsconfigconforms</tt>.
putOrganizationConformancePack_deliveryS3Bucket :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
putOrganizationConformancePack_deliveryS3KeyPrefix :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | Location of file containing the template body. The uri must point to
--   the conformance pack template (max size: 300 KB).
--   
--   You must have access to read Amazon S3 bucket.
putOrganizationConformancePack_templateS3Uri :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
putOrganizationConformancePack_conformancePackInputParameters :: Lens' PutOrganizationConformancePack (Maybe [ConformancePackInputParameter])

-- | A list of Amazon Web Services accounts to be excluded from an
--   organization conformance pack while deploying a conformance pack.
putOrganizationConformancePack_excludedAccounts :: Lens' PutOrganizationConformancePack (Maybe [Text])

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
putOrganizationConformancePack_templateBody :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | Name of the organization conformance pack you want to create.
putOrganizationConformancePack_organizationConformancePackName :: Lens' PutOrganizationConformancePack Text

-- | <i>See:</i> <a>newPutOrganizationConformancePackResponse</a> smart
--   constructor.
data PutOrganizationConformancePackResponse
PutOrganizationConformancePackResponse' :: Maybe Text -> Int -> PutOrganizationConformancePackResponse

-- | ARN of the organization conformance pack.
[$sel:organizationConformancePackArn:PutOrganizationConformancePackResponse'] :: PutOrganizationConformancePackResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutOrganizationConformancePackResponse'] :: PutOrganizationConformancePackResponse -> Int

-- | Create a value of <a>PutOrganizationConformancePackResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackArn:PutOrganizationConformancePackResponse'</a>,
--   <a>putOrganizationConformancePackResponse_organizationConformancePackArn</a>
--   - ARN of the organization conformance pack.
--   
--   <a>$sel:httpStatus:PutOrganizationConformancePackResponse'</a>,
--   <a>putOrganizationConformancePackResponse_httpStatus</a> - The
--   response's http status code.
newPutOrganizationConformancePackResponse :: Int -> PutOrganizationConformancePackResponse

-- | ARN of the organization conformance pack.
putOrganizationConformancePackResponse_organizationConformancePackArn :: Lens' PutOrganizationConformancePackResponse (Maybe Text)

-- | The response's http status code.
putOrganizationConformancePackResponse_httpStatus :: Lens' PutOrganizationConformancePackResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance GHC.Show.Show Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance GHC.Read.Read Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance GHC.Classes.Eq Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance GHC.Generics.Generic Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePackResponse
instance GHC.Show.Show Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePackResponse
instance GHC.Read.Read Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePackResponse
instance GHC.Classes.Eq Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePackResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutOrganizationConformancePack.PutOrganizationConformancePack


-- | Adds or updates organization config rule for your entire organization
--   evaluating whether your Amazon Web Services resources comply with your
--   desired configurations.
--   
--   Only a master account and a delegated administrator can create or
--   update an organization config rule. When calling this API with a
--   delegated administrator, you must ensure Organizations
--   <tt>ListDelegatedAdministrator</tt> permissions are added.
--   
--   This API enables organization service access through the
--   <tt>EnableAWSServiceAccess</tt> action and creates a service linked
--   role <tt>AWSServiceRoleForConfigMultiAccountSetup</tt> in the master
--   or delegated administrator account of your organization. The service
--   linked role is created only when the role does not exist in the caller
--   account. Config verifies the existence of role with <tt>GetRole</tt>
--   action.
--   
--   To use this API with delegated administrator, register a delegated
--   administrator by calling Amazon Web Services Organization
--   <tt>register-delegated-administrator</tt> for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   You can use this action to create both custom Config rules and Config
--   managed rules. If you are adding a new custom Config rule, you must
--   first create Lambda function in the master account or a delegated
--   administrator that the rule invokes to evaluate your resources. You
--   also need to create an IAM role in the managed-account that can be
--   assumed by the Lambda function. When you use the
--   <tt>PutOrganizationConfigRule</tt> action to add the rule to Config,
--   you must specify the Amazon Resource Name (ARN) that Lambda assigns to
--   the function. If you are adding an Config managed rule, specify the
--   rule's identifier for the <tt>RuleIdentifier</tt> key.
--   
--   The maximum number of organization config rules that Config supports
--   is 150 and 3 delegated administrator per organization.
--   
--   Prerequisite: Ensure you call <tt>EnableAllFeatures</tt> API to enable
--   all features in an organization.
--   
--   Specify either <tt>OrganizationCustomRuleMetadata</tt> or
--   <tt>OrganizationManagedRuleMetadata</tt>.
module Network.AWS.Config.PutOrganizationConfigRule

-- | <i>See:</i> <a>newPutOrganizationConfigRule</a> smart constructor.
data PutOrganizationConfigRule
PutOrganizationConfigRule' :: Maybe OrganizationManagedRuleMetadata -> Maybe [Text] -> Maybe OrganizationCustomRuleMetadata -> Text -> PutOrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
[$sel:organizationManagedRuleMetadata:PutOrganizationConfigRule'] :: PutOrganizationConfigRule -> Maybe OrganizationManagedRuleMetadata

-- | A comma-separated list of accounts that you want to exclude from an
--   organization config rule.
[$sel:excludedAccounts:PutOrganizationConfigRule'] :: PutOrganizationConfigRule -> Maybe [Text]

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
[$sel:organizationCustomRuleMetadata:PutOrganizationConfigRule'] :: PutOrganizationConfigRule -> Maybe OrganizationCustomRuleMetadata

-- | The name that you assign to an organization config rule.
[$sel:organizationConfigRuleName:PutOrganizationConfigRule'] :: PutOrganizationConfigRule -> Text

-- | Create a value of <a>PutOrganizationConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationManagedRuleMetadata:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationManagedRuleMetadata</a> - An
--   <tt>OrganizationManagedRuleMetadata</tt> object.
--   
--   <a>$sel:excludedAccounts:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_excludedAccounts</a> - A comma-separated
--   list of accounts that you want to exclude from an organization config
--   rule.
--   
--   <a>$sel:organizationCustomRuleMetadata:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationCustomRuleMetadata</a> - An
--   <tt>OrganizationCustomRuleMetadata</tt> object.
--   
--   <a>$sel:organizationConfigRuleName:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationConfigRuleName</a> - The name
--   that you assign to an organization config rule.
newPutOrganizationConfigRule :: Text -> PutOrganizationConfigRule

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
putOrganizationConfigRule_organizationManagedRuleMetadata :: Lens' PutOrganizationConfigRule (Maybe OrganizationManagedRuleMetadata)

-- | A comma-separated list of accounts that you want to exclude from an
--   organization config rule.
putOrganizationConfigRule_excludedAccounts :: Lens' PutOrganizationConfigRule (Maybe [Text])

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
putOrganizationConfigRule_organizationCustomRuleMetadata :: Lens' PutOrganizationConfigRule (Maybe OrganizationCustomRuleMetadata)

-- | The name that you assign to an organization config rule.
putOrganizationConfigRule_organizationConfigRuleName :: Lens' PutOrganizationConfigRule Text

-- | <i>See:</i> <a>newPutOrganizationConfigRuleResponse</a> smart
--   constructor.
data PutOrganizationConfigRuleResponse
PutOrganizationConfigRuleResponse' :: Maybe Text -> Int -> PutOrganizationConfigRuleResponse

-- | The Amazon Resource Name (ARN) of an organization config rule.
[$sel:organizationConfigRuleArn:PutOrganizationConfigRuleResponse'] :: PutOrganizationConfigRuleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutOrganizationConfigRuleResponse'] :: PutOrganizationConfigRuleResponse -> Int

-- | Create a value of <a>PutOrganizationConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleArn:PutOrganizationConfigRuleResponse'</a>,
--   <a>putOrganizationConfigRuleResponse_organizationConfigRuleArn</a> -
--   The Amazon Resource Name (ARN) of an organization config rule.
--   
--   <a>$sel:httpStatus:PutOrganizationConfigRuleResponse'</a>,
--   <a>putOrganizationConfigRuleResponse_httpStatus</a> - The response's
--   http status code.
newPutOrganizationConfigRuleResponse :: Int -> PutOrganizationConfigRuleResponse

-- | The Amazon Resource Name (ARN) of an organization config rule.
putOrganizationConfigRuleResponse_organizationConfigRuleArn :: Lens' PutOrganizationConfigRuleResponse (Maybe Text)

-- | The response's http status code.
putOrganizationConfigRuleResponse_httpStatus :: Lens' PutOrganizationConfigRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance GHC.Show.Show Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance GHC.Read.Read Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance GHC.Classes.Eq Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance GHC.Generics.Generic Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutOrganizationConfigRule.PutOrganizationConfigRule


-- | Add or updates the evaluations for process checks. This API checks if
--   the rule is a process check when the name of the Config rule is
--   provided.
module Network.AWS.Config.PutExternalEvaluation

-- | <i>See:</i> <a>newPutExternalEvaluation</a> smart constructor.
data PutExternalEvaluation
PutExternalEvaluation' :: Text -> ExternalEvaluation -> PutExternalEvaluation

-- | The name of the Config rule.
[$sel:configRuleName:PutExternalEvaluation'] :: PutExternalEvaluation -> Text

-- | An <tt>ExternalEvaluation</tt> object that provides details about
--   compliance.
[$sel:externalEvaluation:PutExternalEvaluation'] :: PutExternalEvaluation -> ExternalEvaluation

-- | Create a value of <a>PutExternalEvaluation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:PutExternalEvaluation'</a>,
--   <a>putExternalEvaluation_configRuleName</a> - The name of the Config
--   rule.
--   
--   <a>$sel:externalEvaluation:PutExternalEvaluation'</a>,
--   <a>putExternalEvaluation_externalEvaluation</a> - An
--   <tt>ExternalEvaluation</tt> object that provides details about
--   compliance.
newPutExternalEvaluation :: Text -> ExternalEvaluation -> PutExternalEvaluation

-- | The name of the Config rule.
putExternalEvaluation_configRuleName :: Lens' PutExternalEvaluation Text

-- | An <tt>ExternalEvaluation</tt> object that provides details about
--   compliance.
putExternalEvaluation_externalEvaluation :: Lens' PutExternalEvaluation ExternalEvaluation

-- | <i>See:</i> <a>newPutExternalEvaluationResponse</a> smart constructor.
data PutExternalEvaluationResponse
PutExternalEvaluationResponse' :: Int -> PutExternalEvaluationResponse

-- | The response's http status code.
[$sel:httpStatus:PutExternalEvaluationResponse'] :: PutExternalEvaluationResponse -> Int

-- | Create a value of <a>PutExternalEvaluationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutExternalEvaluationResponse'</a>,
--   <a>putExternalEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newPutExternalEvaluationResponse :: Int -> PutExternalEvaluationResponse

-- | The response's http status code.
putExternalEvaluationResponse_httpStatus :: Lens' PutExternalEvaluationResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance GHC.Show.Show Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance GHC.Read.Read Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance GHC.Classes.Eq Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance GHC.Generics.Generic Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluationResponse
instance GHC.Show.Show Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluationResponse
instance GHC.Read.Read Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluationResponse
instance GHC.Classes.Eq Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Control.DeepSeq.NFData Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Control.DeepSeq.NFData Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutExternalEvaluation.PutExternalEvaluation


-- | Used by an Lambda function to deliver evaluation results to Config.
--   This action is required in every Lambda function that is invoked by an
--   Config rule.
module Network.AWS.Config.PutEvaluations

-- | <i>See:</i> <a>newPutEvaluations</a> smart constructor.
data PutEvaluations
PutEvaluations' :: Maybe [Evaluation] -> Maybe Bool -> Text -> PutEvaluations

-- | The assessments that the Lambda function performs. Each evaluation
--   identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that invokes the Lambda function.
[$sel:evaluations:PutEvaluations'] :: PutEvaluations -> Maybe [Evaluation]

-- | Use this parameter to specify a test run for <tt>PutEvaluations</tt>.
--   You can verify whether your Lambda function will deliver evaluation
--   results to Config. No updates occur to your existing evaluations, and
--   evaluation results are not sent to Config.
--   
--   When <tt>TestMode</tt> is <tt>true</tt>, <tt>PutEvaluations</tt>
--   doesn't require a valid value for the <tt>ResultToken</tt> parameter,
--   but the value cannot be null.
[$sel:testMode:PutEvaluations'] :: PutEvaluations -> Maybe Bool

-- | An encrypted token that associates an evaluation with an Config rule.
--   Identifies the rule and the event that triggered the evaluation.
[$sel:resultToken:PutEvaluations'] :: PutEvaluations -> Text

-- | Create a value of <a>PutEvaluations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluations:PutEvaluations'</a>,
--   <a>putEvaluations_evaluations</a> - The assessments that the Lambda
--   function performs. Each evaluation identifies an Amazon Web Services
--   resource and indicates whether it complies with the Config rule that
--   invokes the Lambda function.
--   
--   <a>$sel:testMode:PutEvaluations'</a>, <a>putEvaluations_testMode</a> -
--   Use this parameter to specify a test run for <tt>PutEvaluations</tt>.
--   You can verify whether your Lambda function will deliver evaluation
--   results to Config. No updates occur to your existing evaluations, and
--   evaluation results are not sent to Config.
--   
--   When <tt>TestMode</tt> is <tt>true</tt>, <tt>PutEvaluations</tt>
--   doesn't require a valid value for the <tt>ResultToken</tt> parameter,
--   but the value cannot be null.
--   
--   <a>$sel:resultToken:PutEvaluations'</a>,
--   <a>putEvaluations_resultToken</a> - An encrypted token that associates
--   an evaluation with an Config rule. Identifies the rule and the event
--   that triggered the evaluation.
newPutEvaluations :: Text -> PutEvaluations

-- | The assessments that the Lambda function performs. Each evaluation
--   identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that invokes the Lambda function.
putEvaluations_evaluations :: Lens' PutEvaluations (Maybe [Evaluation])

-- | Use this parameter to specify a test run for <tt>PutEvaluations</tt>.
--   You can verify whether your Lambda function will deliver evaluation
--   results to Config. No updates occur to your existing evaluations, and
--   evaluation results are not sent to Config.
--   
--   When <tt>TestMode</tt> is <tt>true</tt>, <tt>PutEvaluations</tt>
--   doesn't require a valid value for the <tt>ResultToken</tt> parameter,
--   but the value cannot be null.
putEvaluations_testMode :: Lens' PutEvaluations (Maybe Bool)

-- | An encrypted token that associates an evaluation with an Config rule.
--   Identifies the rule and the event that triggered the evaluation.
putEvaluations_resultToken :: Lens' PutEvaluations Text

-- | <i>See:</i> <a>newPutEvaluationsResponse</a> smart constructor.
data PutEvaluationsResponse
PutEvaluationsResponse' :: Maybe [Evaluation] -> Int -> PutEvaluationsResponse

-- | Requests that failed because of a client or server error.
[$sel:failedEvaluations:PutEvaluationsResponse'] :: PutEvaluationsResponse -> Maybe [Evaluation]

-- | The response's http status code.
[$sel:httpStatus:PutEvaluationsResponse'] :: PutEvaluationsResponse -> Int

-- | Create a value of <a>PutEvaluationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEvaluations:PutEvaluationsResponse'</a>,
--   <a>putEvaluationsResponse_failedEvaluations</a> - Requests that failed
--   because of a client or server error.
--   
--   <a>$sel:httpStatus:PutEvaluationsResponse'</a>,
--   <a>putEvaluationsResponse_httpStatus</a> - The response's http status
--   code.
newPutEvaluationsResponse :: Int -> PutEvaluationsResponse

-- | Requests that failed because of a client or server error.
putEvaluationsResponse_failedEvaluations :: Lens' PutEvaluationsResponse (Maybe [Evaluation])

-- | The response's http status code.
putEvaluationsResponse_httpStatus :: Lens' PutEvaluationsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutEvaluations.PutEvaluations
instance GHC.Show.Show Network.AWS.Config.PutEvaluations.PutEvaluations
instance GHC.Read.Read Network.AWS.Config.PutEvaluations.PutEvaluations
instance GHC.Classes.Eq Network.AWS.Config.PutEvaluations.PutEvaluations
instance GHC.Generics.Generic Network.AWS.Config.PutEvaluations.PutEvaluationsResponse
instance GHC.Show.Show Network.AWS.Config.PutEvaluations.PutEvaluationsResponse
instance GHC.Read.Read Network.AWS.Config.PutEvaluations.PutEvaluationsResponse
instance GHC.Classes.Eq Network.AWS.Config.PutEvaluations.PutEvaluationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutEvaluations.PutEvaluations
instance Control.DeepSeq.NFData Network.AWS.Config.PutEvaluations.PutEvaluationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutEvaluations.PutEvaluations
instance Control.DeepSeq.NFData Network.AWS.Config.PutEvaluations.PutEvaluations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutEvaluations.PutEvaluations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutEvaluations.PutEvaluations
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutEvaluations.PutEvaluations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutEvaluations.PutEvaluations


-- | Creates a delivery channel object to deliver configuration information
--   to an Amazon S3 bucket and Amazon SNS topic.
--   
--   Before you can create a delivery channel, you must create a
--   configuration recorder.
--   
--   You can use this action to change the Amazon S3 bucket or an Amazon
--   SNS topic of the existing delivery channel. To change the Amazon S3
--   bucket or an Amazon SNS topic, call this action and specify the
--   changed values for the S3 bucket and the SNS topic. If you specify a
--   different value for either the S3 bucket or the SNS topic, this action
--   will keep the existing value for the parameter that is not changed.
--   
--   You can have only one delivery channel per region in your account.
module Network.AWS.Config.PutDeliveryChannel

-- | The input for the PutDeliveryChannel action.
--   
--   <i>See:</i> <a>newPutDeliveryChannel</a> smart constructor.
data PutDeliveryChannel
PutDeliveryChannel' :: DeliveryChannel -> PutDeliveryChannel

-- | The configuration delivery channel object that delivers the
--   configuration information to an Amazon S3 bucket and to an Amazon SNS
--   topic.
[$sel:deliveryChannel:PutDeliveryChannel'] :: PutDeliveryChannel -> DeliveryChannel

-- | Create a value of <a>PutDeliveryChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannel:PutDeliveryChannel'</a>,
--   <a>putDeliveryChannel_deliveryChannel</a> - The configuration delivery
--   channel object that delivers the configuration information to an
--   Amazon S3 bucket and to an Amazon SNS topic.
newPutDeliveryChannel :: DeliveryChannel -> PutDeliveryChannel

-- | The configuration delivery channel object that delivers the
--   configuration information to an Amazon S3 bucket and to an Amazon SNS
--   topic.
putDeliveryChannel_deliveryChannel :: Lens' PutDeliveryChannel DeliveryChannel

-- | <i>See:</i> <a>newPutDeliveryChannelResponse</a> smart constructor.
data PutDeliveryChannelResponse
PutDeliveryChannelResponse' :: PutDeliveryChannelResponse

-- | Create a value of <a>PutDeliveryChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutDeliveryChannelResponse :: PutDeliveryChannelResponse
instance GHC.Generics.Generic Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance GHC.Show.Show Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance GHC.Read.Read Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance GHC.Classes.Eq Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance GHC.Generics.Generic Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannelResponse
instance GHC.Show.Show Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannelResponse
instance GHC.Read.Read Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannelResponse
instance GHC.Classes.Eq Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Control.DeepSeq.NFData Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Control.DeepSeq.NFData Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutDeliveryChannel.PutDeliveryChannel


-- | Creates or updates a conformance pack. A conformance pack is a
--   collection of Config rules that can be easily deployed in an account
--   and a region and across Amazon Web Services Organization.
--   
--   This API creates a service linked role
--   <tt>AWSServiceRoleForConfigConforms</tt> in your account. The service
--   linked role is created only when the role does not exist in your
--   account.
--   
--   You must specify either the <tt>TemplateS3Uri</tt> or the
--   <tt>TemplateBody</tt> parameter, but not both. If you provide both
--   Config uses the <tt>TemplateS3Uri</tt> parameter and ignores the
--   <tt>TemplateBody</tt> parameter.
module Network.AWS.Config.PutConformancePack

-- | <i>See:</i> <a>newPutConformancePack</a> smart constructor.
data PutConformancePack
PutConformancePack' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe Text -> Text -> PutConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
[$sel:deliveryS3Bucket:PutConformancePack'] :: PutConformancePack -> Maybe Text

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
[$sel:deliveryS3KeyPrefix:PutConformancePack'] :: PutConformancePack -> Maybe Text

-- | Location of file containing the template body
--   (<tt>s3://bucketname/prefix</tt>). The uri must point to the
--   conformance pack template (max size: 300 KB) that is located in an
--   Amazon S3 bucket in the same region as the conformance pack.
--   
--   You must have access to read Amazon S3 bucket.
[$sel:templateS3Uri:PutConformancePack'] :: PutConformancePack -> Maybe Text

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
[$sel:conformancePackInputParameters:PutConformancePack'] :: PutConformancePack -> Maybe [ConformancePackInputParameter]

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
--   
--   You can only use a YAML template with one resource type, that is,
--   config rule and a remediation action.
[$sel:templateBody:PutConformancePack'] :: PutConformancePack -> Maybe Text

-- | Name of the conformance pack you want to create.
[$sel:conformancePackName:PutConformancePack'] :: PutConformancePack -> Text

-- | Create a value of <a>PutConformancePack</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:PutConformancePack'</a>,
--   <a>putConformancePack_deliveryS3Bucket</a> - The name of the Amazon S3
--   bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:PutConformancePack'</a>,
--   <a>putConformancePack_deliveryS3KeyPrefix</a> - The prefix for the
--   Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:templateS3Uri:PutConformancePack'</a>,
--   <a>putConformancePack_templateS3Uri</a> - Location of file containing
--   the template body (<tt>s3://bucketname/prefix</tt>). The uri must
--   point to the conformance pack template (max size: 300 KB) that is
--   located in an Amazon S3 bucket in the same region as the conformance
--   pack.
--   
--   You must have access to read Amazon S3 bucket.
--   
--   <a>$sel:conformancePackInputParameters:PutConformancePack'</a>,
--   <a>putConformancePack_conformancePackInputParameters</a> - A list of
--   <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:templateBody:PutConformancePack'</a>,
--   <a>putConformancePack_templateBody</a> - A string containing full
--   conformance pack template body. Structure containing the template body
--   with a minimum length of 1 byte and a maximum length of 51,200 bytes.
--   
--   You can only use a YAML template with one resource type, that is,
--   config rule and a remediation action.
--   
--   <a>$sel:conformancePackName:PutConformancePack'</a>,
--   <a>putConformancePack_conformancePackName</a> - Name of the
--   conformance pack you want to create.
newPutConformancePack :: Text -> PutConformancePack

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
putConformancePack_deliveryS3Bucket :: Lens' PutConformancePack (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
putConformancePack_deliveryS3KeyPrefix :: Lens' PutConformancePack (Maybe Text)

-- | Location of file containing the template body
--   (<tt>s3://bucketname/prefix</tt>). The uri must point to the
--   conformance pack template (max size: 300 KB) that is located in an
--   Amazon S3 bucket in the same region as the conformance pack.
--   
--   You must have access to read Amazon S3 bucket.
putConformancePack_templateS3Uri :: Lens' PutConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
putConformancePack_conformancePackInputParameters :: Lens' PutConformancePack (Maybe [ConformancePackInputParameter])

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
--   
--   You can only use a YAML template with one resource type, that is,
--   config rule and a remediation action.
putConformancePack_templateBody :: Lens' PutConformancePack (Maybe Text)

-- | Name of the conformance pack you want to create.
putConformancePack_conformancePackName :: Lens' PutConformancePack Text

-- | <i>See:</i> <a>newPutConformancePackResponse</a> smart constructor.
data PutConformancePackResponse
PutConformancePackResponse' :: Maybe Text -> Int -> PutConformancePackResponse

-- | ARN of the conformance pack.
[$sel:conformancePackArn:PutConformancePackResponse'] :: PutConformancePackResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutConformancePackResponse'] :: PutConformancePackResponse -> Int

-- | Create a value of <a>PutConformancePackResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackArn:PutConformancePackResponse'</a>,
--   <a>putConformancePackResponse_conformancePackArn</a> - ARN of the
--   conformance pack.
--   
--   <a>$sel:httpStatus:PutConformancePackResponse'</a>,
--   <a>putConformancePackResponse_httpStatus</a> - The response's http
--   status code.
newPutConformancePackResponse :: Int -> PutConformancePackResponse

-- | ARN of the conformance pack.
putConformancePackResponse_conformancePackArn :: Lens' PutConformancePackResponse (Maybe Text)

-- | The response's http status code.
putConformancePackResponse_httpStatus :: Lens' PutConformancePackResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutConformancePack.PutConformancePack
instance GHC.Show.Show Network.AWS.Config.PutConformancePack.PutConformancePack
instance GHC.Read.Read Network.AWS.Config.PutConformancePack.PutConformancePack
instance GHC.Classes.Eq Network.AWS.Config.PutConformancePack.PutConformancePack
instance GHC.Generics.Generic Network.AWS.Config.PutConformancePack.PutConformancePackResponse
instance GHC.Show.Show Network.AWS.Config.PutConformancePack.PutConformancePackResponse
instance GHC.Read.Read Network.AWS.Config.PutConformancePack.PutConformancePackResponse
instance GHC.Classes.Eq Network.AWS.Config.PutConformancePack.PutConformancePackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutConformancePack.PutConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.PutConformancePack.PutConformancePackResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutConformancePack.PutConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.PutConformancePack.PutConformancePack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutConformancePack.PutConformancePack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutConformancePack.PutConformancePack
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutConformancePack.PutConformancePack
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutConformancePack.PutConformancePack


-- | Creates a new configuration recorder to record the selected resource
--   configurations.
--   
--   You can use this action to change the role <tt>roleARN</tt> or the
--   <tt>recordingGroup</tt> of an existing recorder. To change the role,
--   call the action on the existing configuration recorder and specify a
--   role.
--   
--   Currently, you can specify only one configuration recorder per region
--   in your account.
--   
--   If <tt>ConfigurationRecorder</tt> does not have the
--   <b>recordingGroup</b> parameter specified, the default is to record
--   all supported resource types.
module Network.AWS.Config.PutConfigurationRecorder

-- | The input for the PutConfigurationRecorder action.
--   
--   <i>See:</i> <a>newPutConfigurationRecorder</a> smart constructor.
data PutConfigurationRecorder
PutConfigurationRecorder' :: ConfigurationRecorder -> PutConfigurationRecorder

-- | The configuration recorder object that records each configuration
--   change made to the resources.
[$sel:configurationRecorder:PutConfigurationRecorder'] :: PutConfigurationRecorder -> ConfigurationRecorder

-- | Create a value of <a>PutConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorder:PutConfigurationRecorder'</a>,
--   <a>putConfigurationRecorder_configurationRecorder</a> - The
--   configuration recorder object that records each configuration change
--   made to the resources.
newPutConfigurationRecorder :: ConfigurationRecorder -> PutConfigurationRecorder

-- | The configuration recorder object that records each configuration
--   change made to the resources.
putConfigurationRecorder_configurationRecorder :: Lens' PutConfigurationRecorder ConfigurationRecorder

-- | <i>See:</i> <a>newPutConfigurationRecorderResponse</a> smart
--   constructor.
data PutConfigurationRecorderResponse
PutConfigurationRecorderResponse' :: PutConfigurationRecorderResponse

-- | Create a value of <a>PutConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutConfigurationRecorderResponse :: PutConfigurationRecorderResponse
instance GHC.Generics.Generic Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance GHC.Show.Show Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance GHC.Read.Read Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance GHC.Classes.Eq Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance GHC.Generics.Generic Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorderResponse
instance GHC.Show.Show Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorderResponse
instance GHC.Read.Read Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorderResponse
instance GHC.Classes.Eq Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorderResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutConfigurationRecorder.PutConfigurationRecorder


-- | Creates and updates the configuration aggregator with the selected
--   source accounts and regions. The source account can be individual
--   account(s) or an organization.
--   
--   <tt>accountIds</tt> that are passed will be replaced with existing
--   accounts. If you want to add additional accounts into the aggregator,
--   call <tt>DescribeAggregator</tt> to get the previous accounts and then
--   append new ones.
--   
--   Config should be enabled in source accounts and regions you want to
--   aggregate.
--   
--   If your source type is an organization, you must be signed in to the
--   management account or a registered delegated administrator and all the
--   features must be enabled in your organization. If the caller is a
--   management account, Config calls <tt>EnableAwsServiceAccess</tt> API
--   to enable integration between Config and Organizations. If the caller
--   is a registered delegated administrator, Config calls
--   <tt>ListDelegatedAdministrators</tt> API to verify whether the caller
--   is a valid delegated administrator.
--   
--   To register a delegated administrator, see <a>Register a Delegated
--   Administrator</a> in the Config developer guide.
module Network.AWS.Config.PutConfigurationAggregator

-- | <i>See:</i> <a>newPutConfigurationAggregator</a> smart constructor.
data PutConfigurationAggregator
PutConfigurationAggregator' :: Maybe OrganizationAggregationSource -> Maybe [AccountAggregationSource] -> Maybe [Tag] -> Text -> PutConfigurationAggregator

-- | An OrganizationAggregationSource object.
[$sel:organizationAggregationSource:PutConfigurationAggregator'] :: PutConfigurationAggregator -> Maybe OrganizationAggregationSource

-- | A list of AccountAggregationSource object.
[$sel:accountAggregationSources:PutConfigurationAggregator'] :: PutConfigurationAggregator -> Maybe [AccountAggregationSource]

-- | An array of tag object.
[$sel:tags:PutConfigurationAggregator'] :: PutConfigurationAggregator -> Maybe [Tag]

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:PutConfigurationAggregator'] :: PutConfigurationAggregator -> Text

-- | Create a value of <a>PutConfigurationAggregator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationAggregationSource:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_organizationAggregationSource</a> - An
--   OrganizationAggregationSource object.
--   
--   <a>$sel:accountAggregationSources:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_accountAggregationSources</a> - A list
--   of AccountAggregationSource object.
--   
--   <a>$sel:tags:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_tags</a> - An array of tag object.
--   
--   <a>$sel:configurationAggregatorName:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newPutConfigurationAggregator :: Text -> PutConfigurationAggregator

-- | An OrganizationAggregationSource object.
putConfigurationAggregator_organizationAggregationSource :: Lens' PutConfigurationAggregator (Maybe OrganizationAggregationSource)

-- | A list of AccountAggregationSource object.
putConfigurationAggregator_accountAggregationSources :: Lens' PutConfigurationAggregator (Maybe [AccountAggregationSource])

-- | An array of tag object.
putConfigurationAggregator_tags :: Lens' PutConfigurationAggregator (Maybe [Tag])

-- | The name of the configuration aggregator.
putConfigurationAggregator_configurationAggregatorName :: Lens' PutConfigurationAggregator Text

-- | <i>See:</i> <a>newPutConfigurationAggregatorResponse</a> smart
--   constructor.
data PutConfigurationAggregatorResponse
PutConfigurationAggregatorResponse' :: Maybe ConfigurationAggregator -> Int -> PutConfigurationAggregatorResponse

-- | Returns a ConfigurationAggregator object.
[$sel:configurationAggregator:PutConfigurationAggregatorResponse'] :: PutConfigurationAggregatorResponse -> Maybe ConfigurationAggregator

-- | The response's http status code.
[$sel:httpStatus:PutConfigurationAggregatorResponse'] :: PutConfigurationAggregatorResponse -> Int

-- | Create a value of <a>PutConfigurationAggregatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregator:PutConfigurationAggregatorResponse'</a>,
--   <a>putConfigurationAggregatorResponse_configurationAggregator</a> -
--   Returns a ConfigurationAggregator object.
--   
--   <a>$sel:httpStatus:PutConfigurationAggregatorResponse'</a>,
--   <a>putConfigurationAggregatorResponse_httpStatus</a> - The response's
--   http status code.
newPutConfigurationAggregatorResponse :: Int -> PutConfigurationAggregatorResponse

-- | Returns a ConfigurationAggregator object.
putConfigurationAggregatorResponse_configurationAggregator :: Lens' PutConfigurationAggregatorResponse (Maybe ConfigurationAggregator)

-- | The response's http status code.
putConfigurationAggregatorResponse_httpStatus :: Lens' PutConfigurationAggregatorResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance GHC.Show.Show Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance GHC.Read.Read Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance GHC.Classes.Eq Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance GHC.Generics.Generic Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregatorResponse
instance GHC.Show.Show Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregatorResponse
instance GHC.Read.Read Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregatorResponse
instance GHC.Classes.Eq Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregatorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregatorResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutConfigurationAggregator.PutConfigurationAggregator


-- | Adds or updates an Config rule for evaluating whether your Amazon Web
--   Services resources comply with your desired configurations.
--   
--   You can use this action for custom Config rules and Config managed
--   rules. A custom Config rule is a rule that you develop and maintain.
--   An Config managed rule is a customizable, predefined rule that Config
--   provides.
--   
--   If you are adding a new custom Config rule, you must first create the
--   Lambda function that the rule invokes to evaluate your resources. When
--   you use the <tt>PutConfigRule</tt> action to add the rule to Config,
--   you must specify the Amazon Resource Name (ARN) that Lambda assigns to
--   the function. Specify the ARN for the <tt>SourceIdentifier</tt> key.
--   This key is part of the <tt>Source</tt> object, which is part of the
--   <tt>ConfigRule</tt> object.
--   
--   If you are adding an Config managed rule, specify the rule's
--   identifier for the <tt>SourceIdentifier</tt> key. To reference Config
--   managed rule identifiers, see <a>About Config managed rules</a>.
--   
--   For any new rule that you add, specify the <tt>ConfigRuleName</tt> in
--   the <tt>ConfigRule</tt> object. Do not specify the
--   <tt>ConfigRuleArn</tt> or the <tt>ConfigRuleId</tt>. These values are
--   generated by Config for new rules.
--   
--   If you are updating a rule that you added previously, you can specify
--   the rule by <tt>ConfigRuleName</tt>, <tt>ConfigRuleId</tt>, or
--   <tt>ConfigRuleArn</tt> in the <tt>ConfigRule</tt> data type that you
--   use in this request.
--   
--   The maximum number of rules that Config supports is 150.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
--   
--   For more information about developing and using Config rules, see
--   <a>Evaluating Amazon Web Services resource Configurations with
--   Config</a> in the <i>Config Developer Guide</i>.
module Network.AWS.Config.PutConfigRule

-- | <i>See:</i> <a>newPutConfigRule</a> smart constructor.
data PutConfigRule
PutConfigRule' :: Maybe [Tag] -> ConfigRule -> PutConfigRule

-- | An array of tag object.
[$sel:tags:PutConfigRule'] :: PutConfigRule -> Maybe [Tag]

-- | The rule that you want to add to your account.
[$sel:configRule:PutConfigRule'] :: PutConfigRule -> ConfigRule

-- | Create a value of <a>PutConfigRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutConfigRule'</a>, <a>putConfigRule_tags</a> - An array
--   of tag object.
--   
--   <a>$sel:configRule:PutConfigRule'</a>, <a>putConfigRule_configRule</a>
--   - The rule that you want to add to your account.
newPutConfigRule :: ConfigRule -> PutConfigRule

-- | An array of tag object.
putConfigRule_tags :: Lens' PutConfigRule (Maybe [Tag])

-- | The rule that you want to add to your account.
putConfigRule_configRule :: Lens' PutConfigRule ConfigRule

-- | <i>See:</i> <a>newPutConfigRuleResponse</a> smart constructor.
data PutConfigRuleResponse
PutConfigRuleResponse' :: PutConfigRuleResponse

-- | Create a value of <a>PutConfigRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutConfigRuleResponse :: PutConfigRuleResponse
instance GHC.Generics.Generic Network.AWS.Config.PutConfigRule.PutConfigRule
instance GHC.Show.Show Network.AWS.Config.PutConfigRule.PutConfigRule
instance GHC.Read.Read Network.AWS.Config.PutConfigRule.PutConfigRule
instance GHC.Classes.Eq Network.AWS.Config.PutConfigRule.PutConfigRule
instance GHC.Generics.Generic Network.AWS.Config.PutConfigRule.PutConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.PutConfigRule.PutConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.PutConfigRule.PutConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.PutConfigRule.PutConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutConfigRule.PutConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigRule.PutConfigRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutConfigRule.PutConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.PutConfigRule.PutConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutConfigRule.PutConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutConfigRule.PutConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutConfigRule.PutConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutConfigRule.PutConfigRule


-- | Authorizes the aggregator account and region to collect data from the
--   source account and region.
module Network.AWS.Config.PutAggregationAuthorization

-- | <i>See:</i> <a>newPutAggregationAuthorization</a> smart constructor.
data PutAggregationAuthorization
PutAggregationAuthorization' :: Maybe [Tag] -> Text -> Text -> PutAggregationAuthorization

-- | An array of tag object.
[$sel:tags:PutAggregationAuthorization'] :: PutAggregationAuthorization -> Maybe [Tag]

-- | The 12-digit account ID of the account authorized to aggregate data.
[$sel:authorizedAccountId:PutAggregationAuthorization'] :: PutAggregationAuthorization -> Text

-- | The region authorized to collect aggregated data.
[$sel:authorizedAwsRegion:PutAggregationAuthorization'] :: PutAggregationAuthorization -> Text

-- | Create a value of <a>PutAggregationAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_tags</a> - An array of tag object.
--   
--   <a>$sel:authorizedAccountId:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_authorizedAccountId</a> - The 12-digit
--   account ID of the account authorized to aggregate data.
--   
--   <a>$sel:authorizedAwsRegion:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
newPutAggregationAuthorization :: Text -> Text -> PutAggregationAuthorization

-- | An array of tag object.
putAggregationAuthorization_tags :: Lens' PutAggregationAuthorization (Maybe [Tag])

-- | The 12-digit account ID of the account authorized to aggregate data.
putAggregationAuthorization_authorizedAccountId :: Lens' PutAggregationAuthorization Text

-- | The region authorized to collect aggregated data.
putAggregationAuthorization_authorizedAwsRegion :: Lens' PutAggregationAuthorization Text

-- | <i>See:</i> <a>newPutAggregationAuthorizationResponse</a> smart
--   constructor.
data PutAggregationAuthorizationResponse
PutAggregationAuthorizationResponse' :: Maybe AggregationAuthorization -> Int -> PutAggregationAuthorizationResponse

-- | Returns an AggregationAuthorization object.
[$sel:aggregationAuthorization:PutAggregationAuthorizationResponse'] :: PutAggregationAuthorizationResponse -> Maybe AggregationAuthorization

-- | The response's http status code.
[$sel:httpStatus:PutAggregationAuthorizationResponse'] :: PutAggregationAuthorizationResponse -> Int

-- | Create a value of <a>PutAggregationAuthorizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregationAuthorization:PutAggregationAuthorizationResponse'</a>,
--   <a>putAggregationAuthorizationResponse_aggregationAuthorization</a> -
--   Returns an AggregationAuthorization object.
--   
--   <a>$sel:httpStatus:PutAggregationAuthorizationResponse'</a>,
--   <a>putAggregationAuthorizationResponse_httpStatus</a> - The response's
--   http status code.
newPutAggregationAuthorizationResponse :: Int -> PutAggregationAuthorizationResponse

-- | Returns an AggregationAuthorization object.
putAggregationAuthorizationResponse_aggregationAuthorization :: Lens' PutAggregationAuthorizationResponse (Maybe AggregationAuthorization)

-- | The response's http status code.
putAggregationAuthorizationResponse_httpStatus :: Lens' PutAggregationAuthorizationResponse Int
instance GHC.Generics.Generic Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance GHC.Show.Show Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance GHC.Read.Read Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance GHC.Classes.Eq Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance GHC.Generics.Generic Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorizationResponse
instance GHC.Show.Show Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorizationResponse
instance GHC.Read.Read Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.PutAggregationAuthorization.PutAggregationAuthorization


-- | List the tags for Config resource.
--   
--   This operation returns paginated results.
module Network.AWS.Config.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The maximum number of tags returned on each page. The limit maximum is
--   50. You cannot specify a number greater than 50. If you specify 0,
--   Config uses the default.
[$sel:limit:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The <tt>nextToken</tt> string
--   returned on a previous page that you use to get the next page of
--   results in a paginated response.
--   
--   <a>$sel:limit:ListTagsForResource'</a>,
--   <a>listTagsForResource_limit</a> - The maximum number of tags returned
--   on each page. The limit maximum is 50. You cannot specify a number
--   greater than 50. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource for which to list the tags.
--   Currently, the supported resources are <tt>ConfigRule</tt>,
--   <tt>ConfigurationAggregator</tt> and <tt>AggregatorAuthorization</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tags returned on each page. The limit maximum is
--   50. You cannot specify a number greater than 50. If you specify 0,
--   Config uses the default.
listTagsForResource_limit :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | The tags for the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Config.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Config.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Config.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Config.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Config.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.ListTagsForResource.ListTagsForResource


-- | Lists the stored queries for a single Amazon Web Services account and
--   a single Amazon Web Services Region. The default is 100.
module Network.AWS.Config.ListStoredQueries

-- | <i>See:</i> <a>newListStoredQueries</a> smart constructor.
data ListStoredQueries
ListStoredQueries' :: Maybe Text -> Maybe Natural -> ListStoredQueries

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
[$sel:nextToken:ListStoredQueries'] :: ListStoredQueries -> Maybe Text

-- | The maximum number of results to be returned with a single call.
[$sel:maxResults:ListStoredQueries'] :: ListStoredQueries -> Maybe Natural

-- | Create a value of <a>ListStoredQueries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStoredQueries'</a>,
--   <a>listStoredQueries_nextToken</a> - The nextToken string returned in
--   a previous request that you use to request the next page of results in
--   a paginated response.
--   
--   <a>$sel:maxResults:ListStoredQueries'</a>,
--   <a>listStoredQueries_maxResults</a> - The maximum number of results to
--   be returned with a single call.
newListStoredQueries :: ListStoredQueries

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
listStoredQueries_nextToken :: Lens' ListStoredQueries (Maybe Text)

-- | The maximum number of results to be returned with a single call.
listStoredQueries_maxResults :: Lens' ListStoredQueries (Maybe Natural)

-- | <i>See:</i> <a>newListStoredQueriesResponse</a> smart constructor.
data ListStoredQueriesResponse
ListStoredQueriesResponse' :: Maybe [StoredQueryMetadata] -> Maybe Text -> Int -> ListStoredQueriesResponse

-- | A list of <tt>StoredQueryMetadata</tt> objects.
[$sel:storedQueryMetadata:ListStoredQueriesResponse'] :: ListStoredQueriesResponse -> Maybe [StoredQueryMetadata]

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
[$sel:nextToken:ListStoredQueriesResponse'] :: ListStoredQueriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStoredQueriesResponse'] :: ListStoredQueriesResponse -> Int

-- | Create a value of <a>ListStoredQueriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storedQueryMetadata:ListStoredQueriesResponse'</a>,
--   <a>listStoredQueriesResponse_storedQueryMetadata</a> - A list of
--   <tt>StoredQueryMetadata</tt> objects.
--   
--   <a>$sel:nextToken:ListStoredQueries'</a>,
--   <a>listStoredQueriesResponse_nextToken</a> - If the previous paginated
--   request didn't return all of the remaining results, the response
--   object's <tt>NextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call this action again and assign
--   that token to the request object's <tt>NextToken</tt> parameter. If
--   there are no remaining results, the previous response object's
--   <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:httpStatus:ListStoredQueriesResponse'</a>,
--   <a>listStoredQueriesResponse_httpStatus</a> - The response's http
--   status code.
newListStoredQueriesResponse :: Int -> ListStoredQueriesResponse

-- | A list of <tt>StoredQueryMetadata</tt> objects.
listStoredQueriesResponse_storedQueryMetadata :: Lens' ListStoredQueriesResponse (Maybe [StoredQueryMetadata])

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listStoredQueriesResponse_nextToken :: Lens' ListStoredQueriesResponse (Maybe Text)

-- | The response's http status code.
listStoredQueriesResponse_httpStatus :: Lens' ListStoredQueriesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance GHC.Show.Show Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance GHC.Read.Read Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance GHC.Classes.Eq Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance GHC.Generics.Generic Network.AWS.Config.ListStoredQueries.ListStoredQueriesResponse
instance GHC.Show.Show Network.AWS.Config.ListStoredQueries.ListStoredQueriesResponse
instance GHC.Read.Read Network.AWS.Config.ListStoredQueries.ListStoredQueriesResponse
instance GHC.Classes.Eq Network.AWS.Config.ListStoredQueries.ListStoredQueriesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Control.DeepSeq.NFData Network.AWS.Config.ListStoredQueries.ListStoredQueriesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Control.DeepSeq.NFData Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.ListStoredQueries.ListStoredQueries
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.ListStoredQueries.ListStoredQueries


-- | Accepts a resource type and returns a list of resource identifiers for
--   the resources of that type. A resource identifier includes the
--   resource type, ID, and (if available) the custom resource name. The
--   results consist of resources that Config has discovered, including
--   those that Config is not currently recording. You can narrow the
--   results to include only resources that have specific resource IDs or a
--   resource name.
--   
--   You can specify either resource IDs or a resource name, but not both,
--   in the same request.
--   
--   The response is paginated. By default, Config lists 100 resource
--   identifiers on each page. You can customize this number with the
--   <tt>limit</tt> parameter. The response includes a <tt>nextToken</tt>
--   string. To get the next page of results, run the request again and
--   specify the string for the <tt>nextToken</tt> parameter.
--   
--   This operation returns paginated results.
module Network.AWS.Config.ListDiscoveredResources

-- | <i>See:</i> <a>newListDiscoveredResources</a> smart constructor.
data ListDiscoveredResources
ListDiscoveredResources' :: Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> ResourceType -> ListDiscoveredResources

-- | The IDs of only those resources that you want Config to list in the
--   response. If you do not specify this parameter, Config lists all
--   resources of the specified type that it has discovered.
[$sel:resourceIds:ListDiscoveredResources'] :: ListDiscoveredResources -> Maybe [Text]

-- | The custom name of only those resources that you want Config to list
--   in the response. If you do not specify this parameter, Config lists
--   all resources of the specified type that it has discovered.
[$sel:resourceName:ListDiscoveredResources'] :: ListDiscoveredResources -> Maybe Text

-- | Specifies whether Config includes deleted resources in the results. By
--   default, deleted resources are not included.
[$sel:includeDeletedResources:ListDiscoveredResources'] :: ListDiscoveredResources -> Maybe Bool

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:ListDiscoveredResources'] :: ListDiscoveredResources -> Maybe Text

-- | The maximum number of resource identifiers returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:ListDiscoveredResources'] :: ListDiscoveredResources -> Maybe Natural

-- | The type of resources that you want Config to list in the response.
[$sel:resourceType:ListDiscoveredResources'] :: ListDiscoveredResources -> ResourceType

-- | Create a value of <a>ListDiscoveredResources</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceIds</a> - The IDs of only those
--   resources that you want Config to list in the response. If you do not
--   specify this parameter, Config lists all resources of the specified
--   type that it has discovered.
--   
--   <a>$sel:resourceName:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceName</a> - The custom name of only
--   those resources that you want Config to list in the response. If you
--   do not specify this parameter, Config lists all resources of the
--   specified type that it has discovered.
--   
--   <a>$sel:includeDeletedResources:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_includeDeletedResources</a> - Specifies
--   whether Config includes deleted resources in the results. By default,
--   deleted resources are not included.
--   
--   <a>$sel:nextToken:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_limit</a> - The maximum number of resource
--   identifiers returned on each page. The default is 100. You cannot
--   specify a number greater than 100. If you specify 0, Config uses the
--   default.
--   
--   <a>$sel:resourceType:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceType</a> - The type of resources
--   that you want Config to list in the response.
newListDiscoveredResources :: ResourceType -> ListDiscoveredResources

-- | The IDs of only those resources that you want Config to list in the
--   response. If you do not specify this parameter, Config lists all
--   resources of the specified type that it has discovered.
listDiscoveredResources_resourceIds :: Lens' ListDiscoveredResources (Maybe [Text])

-- | The custom name of only those resources that you want Config to list
--   in the response. If you do not specify this parameter, Config lists
--   all resources of the specified type that it has discovered.
listDiscoveredResources_resourceName :: Lens' ListDiscoveredResources (Maybe Text)

-- | Specifies whether Config includes deleted resources in the results. By
--   default, deleted resources are not included.
listDiscoveredResources_includeDeletedResources :: Lens' ListDiscoveredResources (Maybe Bool)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listDiscoveredResources_nextToken :: Lens' ListDiscoveredResources (Maybe Text)

-- | The maximum number of resource identifiers returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
listDiscoveredResources_limit :: Lens' ListDiscoveredResources (Maybe Natural)

-- | The type of resources that you want Config to list in the response.
listDiscoveredResources_resourceType :: Lens' ListDiscoveredResources ResourceType

-- | <i>See:</i> <a>newListDiscoveredResourcesResponse</a> smart
--   constructor.
data ListDiscoveredResourcesResponse
ListDiscoveredResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Int -> ListDiscoveredResourcesResponse

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:ListDiscoveredResourcesResponse'] :: ListDiscoveredResourcesResponse -> Maybe Text

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
[$sel:resourceIdentifiers:ListDiscoveredResourcesResponse'] :: ListDiscoveredResourcesResponse -> Maybe [ResourceIdentifier]

-- | The response's http status code.
[$sel:httpStatus:ListDiscoveredResourcesResponse'] :: ListDiscoveredResourcesResponse -> Int

-- | Create a value of <a>ListDiscoveredResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResourcesResponse_nextToken</a> - The string that you
--   use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:resourceIdentifiers:ListDiscoveredResourcesResponse'</a>,
--   <a>listDiscoveredResourcesResponse_resourceIdentifiers</a> - The
--   details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
--   
--   <a>$sel:httpStatus:ListDiscoveredResourcesResponse'</a>,
--   <a>listDiscoveredResourcesResponse_httpStatus</a> - The response's
--   http status code.
newListDiscoveredResourcesResponse :: Int -> ListDiscoveredResourcesResponse

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
listDiscoveredResourcesResponse_nextToken :: Lens' ListDiscoveredResourcesResponse (Maybe Text)

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
listDiscoveredResourcesResponse_resourceIdentifiers :: Lens' ListDiscoveredResourcesResponse (Maybe [ResourceIdentifier])

-- | The response's http status code.
listDiscoveredResourcesResponse_httpStatus :: Lens' ListDiscoveredResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance GHC.Show.Show Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance GHC.Read.Read Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance GHC.Classes.Eq Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance GHC.Generics.Generic Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResourcesResponse
instance GHC.Show.Show Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResourcesResponse
instance GHC.Read.Read Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResourcesResponse
instance GHC.Classes.Eq Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Control.DeepSeq.NFData Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Data.Hashable.Class.Hashable Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Control.DeepSeq.NFData Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.ListDiscoveredResources.ListDiscoveredResources


-- | Accepts a resource type and returns a list of resource identifiers
--   that are aggregated for a specific resource type across accounts and
--   regions. A resource identifier includes the resource type, ID, (if
--   available) the custom resource name, source account, and source
--   region. You can narrow the results to include only resources that have
--   specific resource IDs, or a resource name, or source account ID, or
--   source region.
--   
--   For example, if the input consists of accountID 12345678910 and the
--   region is us-east-1 for resource type <tt>AWS::EC2::Instance</tt> then
--   the API returns all the EC2 instance identifiers of accountID
--   12345678910 and region us-east-1.
--   
--   This operation returns paginated results.
module Network.AWS.Config.ListAggregateDiscoveredResources

-- | <i>See:</i> <a>newListAggregateDiscoveredResources</a> smart
--   constructor.
data ListAggregateDiscoveredResources
ListAggregateDiscoveredResources' :: Maybe ResourceFilters -> Maybe Text -> Maybe Natural -> Text -> ResourceType -> ListAggregateDiscoveredResources

-- | Filters the results based on the <tt>ResourceFilters</tt> object.
[$sel:filters:ListAggregateDiscoveredResources'] :: ListAggregateDiscoveredResources -> Maybe ResourceFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:ListAggregateDiscoveredResources'] :: ListAggregateDiscoveredResources -> Maybe Text

-- | The maximum number of resource identifiers returned on each page. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
[$sel:limit:ListAggregateDiscoveredResources'] :: ListAggregateDiscoveredResources -> Maybe Natural

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:ListAggregateDiscoveredResources'] :: ListAggregateDiscoveredResources -> Text

-- | The type of resources that you want Config to list in the response.
[$sel:resourceType:ListAggregateDiscoveredResources'] :: ListAggregateDiscoveredResources -> ResourceType

-- | Create a value of <a>ListAggregateDiscoveredResources</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_filters</a> - Filters the results
--   based on the <tt>ResourceFilters</tt> object.
--   
--   <a>$sel:nextToken:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_limit</a> - The maximum number of
--   resource identifiers returned on each page. You cannot specify a
--   number greater than 100. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorName:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_configurationAggregatorName</a> -
--   The name of the configuration aggregator.
--   
--   <a>$sel:resourceType:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_resourceType</a> - The type of
--   resources that you want Config to list in the response.
newListAggregateDiscoveredResources :: Text -> ResourceType -> ListAggregateDiscoveredResources

-- | Filters the results based on the <tt>ResourceFilters</tt> object.
listAggregateDiscoveredResources_filters :: Lens' ListAggregateDiscoveredResources (Maybe ResourceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listAggregateDiscoveredResources_nextToken :: Lens' ListAggregateDiscoveredResources (Maybe Text)

-- | The maximum number of resource identifiers returned on each page. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
listAggregateDiscoveredResources_limit :: Lens' ListAggregateDiscoveredResources (Maybe Natural)

-- | The name of the configuration aggregator.
listAggregateDiscoveredResources_configurationAggregatorName :: Lens' ListAggregateDiscoveredResources Text

-- | The type of resources that you want Config to list in the response.
listAggregateDiscoveredResources_resourceType :: Lens' ListAggregateDiscoveredResources ResourceType

-- | <i>See:</i> <a>newListAggregateDiscoveredResourcesResponse</a> smart
--   constructor.
data ListAggregateDiscoveredResourcesResponse
ListAggregateDiscoveredResourcesResponse' :: Maybe Text -> Maybe [AggregateResourceIdentifier] -> Int -> ListAggregateDiscoveredResourcesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:ListAggregateDiscoveredResourcesResponse'] :: ListAggregateDiscoveredResourcesResponse -> Maybe Text

-- | Returns a list of <tt>ResourceIdentifiers</tt> objects.
[$sel:resourceIdentifiers:ListAggregateDiscoveredResourcesResponse'] :: ListAggregateDiscoveredResourcesResponse -> Maybe [AggregateResourceIdentifier]

-- | The response's http status code.
[$sel:httpStatus:ListAggregateDiscoveredResourcesResponse'] :: ListAggregateDiscoveredResourcesResponse -> Int

-- | Create a value of <a>ListAggregateDiscoveredResourcesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:resourceIdentifiers:ListAggregateDiscoveredResourcesResponse'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_resourceIdentifiers</a> -
--   Returns a list of <tt>ResourceIdentifiers</tt> objects.
--   
--   <a>$sel:httpStatus:ListAggregateDiscoveredResourcesResponse'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_httpStatus</a> - The
--   response's http status code.
newListAggregateDiscoveredResourcesResponse :: Int -> ListAggregateDiscoveredResourcesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listAggregateDiscoveredResourcesResponse_nextToken :: Lens' ListAggregateDiscoveredResourcesResponse (Maybe Text)

-- | Returns a list of <tt>ResourceIdentifiers</tt> objects.
listAggregateDiscoveredResourcesResponse_resourceIdentifiers :: Lens' ListAggregateDiscoveredResourcesResponse (Maybe [AggregateResourceIdentifier])

-- | The response's http status code.
listAggregateDiscoveredResourcesResponse_httpStatus :: Lens' ListAggregateDiscoveredResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance GHC.Show.Show Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance GHC.Read.Read Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance GHC.Classes.Eq Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance GHC.Generics.Generic Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResourcesResponse
instance GHC.Show.Show Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResourcesResponse
instance GHC.Read.Read Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResourcesResponse
instance GHC.Classes.Eq Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Control.DeepSeq.NFData Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Data.Hashable.Class.Hashable Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Control.DeepSeq.NFData Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.ListAggregateDiscoveredResources.ListAggregateDiscoveredResources


-- | Returns the details of a specific stored query.
module Network.AWS.Config.GetStoredQuery

-- | <i>See:</i> <a>newGetStoredQuery</a> smart constructor.
data GetStoredQuery
GetStoredQuery' :: Text -> GetStoredQuery

-- | The name of the query.
[$sel:queryName:GetStoredQuery'] :: GetStoredQuery -> Text

-- | Create a value of <a>GetStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryName:GetStoredQuery'</a>, <a>getStoredQuery_queryName</a>
--   - The name of the query.
newGetStoredQuery :: Text -> GetStoredQuery

-- | The name of the query.
getStoredQuery_queryName :: Lens' GetStoredQuery Text

-- | <i>See:</i> <a>newGetStoredQueryResponse</a> smart constructor.
data GetStoredQueryResponse
GetStoredQueryResponse' :: Maybe StoredQuery -> Int -> GetStoredQueryResponse

-- | Returns a <tt>StoredQuery</tt> object.
[$sel:storedQuery:GetStoredQueryResponse'] :: GetStoredQueryResponse -> Maybe StoredQuery

-- | The response's http status code.
[$sel:httpStatus:GetStoredQueryResponse'] :: GetStoredQueryResponse -> Int

-- | Create a value of <a>GetStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storedQuery:GetStoredQueryResponse'</a>,
--   <a>getStoredQueryResponse_storedQuery</a> - Returns a
--   <tt>StoredQuery</tt> object.
--   
--   <a>$sel:httpStatus:GetStoredQueryResponse'</a>,
--   <a>getStoredQueryResponse_httpStatus</a> - The response's http status
--   code.
newGetStoredQueryResponse :: Int -> GetStoredQueryResponse

-- | Returns a <tt>StoredQuery</tt> object.
getStoredQueryResponse_storedQuery :: Lens' GetStoredQueryResponse (Maybe StoredQuery)

-- | The response's http status code.
getStoredQueryResponse_httpStatus :: Lens' GetStoredQueryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance GHC.Show.Show Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance GHC.Read.Read Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance GHC.Classes.Eq Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance GHC.Generics.Generic Network.AWS.Config.GetStoredQuery.GetStoredQueryResponse
instance GHC.Show.Show Network.AWS.Config.GetStoredQuery.GetStoredQueryResponse
instance GHC.Read.Read Network.AWS.Config.GetStoredQuery.GetStoredQueryResponse
instance GHC.Classes.Eq Network.AWS.Config.GetStoredQuery.GetStoredQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.GetStoredQuery.GetStoredQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetStoredQuery.GetStoredQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetStoredQuery.GetStoredQuery


-- | Returns a list of <tt>ConfigurationItems</tt> for the specified
--   resource. The list contains details about each state of the resource
--   during the specified time interval. If you specified a retention
--   period to retain your <tt>ConfigurationItems</tt> between a minimum of
--   30 days and a maximum of 7 years (2557 days), Config returns the
--   <tt>ConfigurationItems</tt> for the specified retention period.
--   
--   The response is paginated. By default, Config returns a limit of 10
--   configuration items per page. You can customize this number with the
--   <tt>limit</tt> parameter. The response includes a <tt>nextToken</tt>
--   string. To get the next page of results, run the request again and
--   specify the string for the <tt>nextToken</tt> parameter.
--   
--   Each call to the API is limited to span a duration of seven days. It
--   is likely that the number of records returned is smaller than the
--   specified <tt>limit</tt>. In such cases, you can make another call,
--   using the <tt>nextToken</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetResourceConfigHistory

-- | The input for the GetResourceConfigHistory action.
--   
--   <i>See:</i> <a>newGetResourceConfigHistory</a> smart constructor.
data GetResourceConfigHistory
GetResourceConfigHistory' :: Maybe ChronologicalOrder -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe POSIX -> ResourceType -> Text -> GetResourceConfigHistory

-- | The chronological order for configuration items listed. By default,
--   the results are listed in reverse chronological order.
[$sel:chronologicalOrder:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Maybe ChronologicalOrder

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Maybe Text

-- | The maximum number of configuration items returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Maybe Natural

-- | The time stamp that indicates a later time. If not specified, current
--   time is taken.
[$sel:laterTime:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Maybe POSIX

-- | The time stamp that indicates an earlier time. If not specified, the
--   action returns paginated results that contain configuration items that
--   start when the first configuration item was recorded.
[$sel:earlierTime:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Maybe POSIX

-- | The resource type.
[$sel:resourceType:GetResourceConfigHistory'] :: GetResourceConfigHistory -> ResourceType

-- | The ID of the resource (for example., <tt>sg-xxxxxx</tt>).
[$sel:resourceId:GetResourceConfigHistory'] :: GetResourceConfigHistory -> Text

-- | Create a value of <a>GetResourceConfigHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chronologicalOrder:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_chronologicalOrder</a> - The chronological
--   order for configuration items listed. By default, the results are
--   listed in reverse chronological order.
--   
--   <a>$sel:nextToken:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_limit</a> - The maximum number of
--   configuration items returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:laterTime:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_laterTime</a> - The time stamp that
--   indicates a later time. If not specified, current time is taken.
--   
--   <a>$sel:earlierTime:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_earlierTime</a> - The time stamp that
--   indicates an earlier time. If not specified, the action returns
--   paginated results that contain configuration items that start when the
--   first configuration item was recorded.
--   
--   <a>$sel:resourceType:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_resourceType</a> - The resource type.
--   
--   <a>$sel:resourceId:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_resourceId</a> - The ID of the resource
--   (for example., <tt>sg-xxxxxx</tt>).
newGetResourceConfigHistory :: ResourceType -> Text -> GetResourceConfigHistory

-- | The chronological order for configuration items listed. By default,
--   the results are listed in reverse chronological order.
getResourceConfigHistory_chronologicalOrder :: Lens' GetResourceConfigHistory (Maybe ChronologicalOrder)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getResourceConfigHistory_nextToken :: Lens' GetResourceConfigHistory (Maybe Text)

-- | The maximum number of configuration items returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getResourceConfigHistory_limit :: Lens' GetResourceConfigHistory (Maybe Natural)

-- | The time stamp that indicates a later time. If not specified, current
--   time is taken.
getResourceConfigHistory_laterTime :: Lens' GetResourceConfigHistory (Maybe UTCTime)

-- | The time stamp that indicates an earlier time. If not specified, the
--   action returns paginated results that contain configuration items that
--   start when the first configuration item was recorded.
getResourceConfigHistory_earlierTime :: Lens' GetResourceConfigHistory (Maybe UTCTime)

-- | The resource type.
getResourceConfigHistory_resourceType :: Lens' GetResourceConfigHistory ResourceType

-- | The ID of the resource (for example., <tt>sg-xxxxxx</tt>).
getResourceConfigHistory_resourceId :: Lens' GetResourceConfigHistory Text

-- | The output for the GetResourceConfigHistory action.
--   
--   <i>See:</i> <a>newGetResourceConfigHistoryResponse</a> smart
--   constructor.
data GetResourceConfigHistoryResponse
GetResourceConfigHistoryResponse' :: Maybe Text -> Maybe [ConfigurationItem] -> Int -> GetResourceConfigHistoryResponse

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:GetResourceConfigHistoryResponse'] :: GetResourceConfigHistoryResponse -> Maybe Text

-- | A list that contains the configuration history of one or more
--   resources.
[$sel:configurationItems:GetResourceConfigHistoryResponse'] :: GetResourceConfigHistoryResponse -> Maybe [ConfigurationItem]

-- | The response's http status code.
[$sel:httpStatus:GetResourceConfigHistoryResponse'] :: GetResourceConfigHistoryResponse -> Int

-- | Create a value of <a>GetResourceConfigHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistoryResponse_nextToken</a> - The string that
--   you use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:configurationItems:GetResourceConfigHistoryResponse'</a>,
--   <a>getResourceConfigHistoryResponse_configurationItems</a> - A list
--   that contains the configuration history of one or more resources.
--   
--   <a>$sel:httpStatus:GetResourceConfigHistoryResponse'</a>,
--   <a>getResourceConfigHistoryResponse_httpStatus</a> - The response's
--   http status code.
newGetResourceConfigHistoryResponse :: Int -> GetResourceConfigHistoryResponse

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getResourceConfigHistoryResponse_nextToken :: Lens' GetResourceConfigHistoryResponse (Maybe Text)

-- | A list that contains the configuration history of one or more
--   resources.
getResourceConfigHistoryResponse_configurationItems :: Lens' GetResourceConfigHistoryResponse (Maybe [ConfigurationItem])

-- | The response's http status code.
getResourceConfigHistoryResponse_httpStatus :: Lens' GetResourceConfigHistoryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance GHC.Show.Show Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance GHC.Read.Read Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance GHC.Classes.Eq Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance GHC.Generics.Generic Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistoryResponse
instance GHC.Show.Show Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistoryResponse
instance GHC.Read.Read Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistoryResponse
instance GHC.Classes.Eq Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Control.DeepSeq.NFData Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistoryResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Control.DeepSeq.NFData Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetResourceConfigHistory.GetResourceConfigHistory


-- | Returns detailed status for each member account within an organization
--   for a given organization conformance pack.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetOrganizationConformancePackDetailedStatus

-- | <i>See:</i> <a>newGetOrganizationConformancePackDetailedStatus</a>
--   smart constructor.
data GetOrganizationConformancePackDetailedStatus
GetOrganizationConformancePackDetailedStatus' :: Maybe OrganizationResourceDetailedStatusFilters -> Maybe Text -> Maybe Natural -> Text -> GetOrganizationConformancePackDetailedStatus

-- | An <tt>OrganizationResourceDetailedStatusFilters</tt> object.
[$sel:filters:GetOrganizationConformancePackDetailedStatus'] :: GetOrganizationConformancePackDetailedStatus -> Maybe OrganizationResourceDetailedStatusFilters

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:GetOrganizationConformancePackDetailedStatus'] :: GetOrganizationConformancePackDetailedStatus -> Maybe Text

-- | The maximum number of
--   <tt>OrganizationConformancePackDetailedStatuses</tt> returned on each
--   page. If you do not specify a number, Config uses the default. The
--   default is 100.
[$sel:limit:GetOrganizationConformancePackDetailedStatus'] :: GetOrganizationConformancePackDetailedStatus -> Maybe Natural

-- | The name of organization conformance pack for which you want status
--   details for member accounts.
[$sel:organizationConformancePackName:GetOrganizationConformancePackDetailedStatus'] :: GetOrganizationConformancePackDetailedStatus -> Text

-- | Create a value of <a>GetOrganizationConformancePackDetailedStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_filters</a> - An
--   <tt>OrganizationResourceDetailedStatusFilters</tt> object.
--   
--   <a>$sel:nextToken:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:limit:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_limit</a> - The
--   maximum number of <tt>OrganizationConformancePackDetailedStatuses</tt>
--   returned on each page. If you do not specify a number, Config uses the
--   default. The default is 100.
--   
--   
--   <a>$sel:organizationConformancePackName:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_organizationConformancePackName</a>
--   - The name of organization conformance pack for which you want status
--   details for member accounts.
newGetOrganizationConformancePackDetailedStatus :: Text -> GetOrganizationConformancePackDetailedStatus

-- | An <tt>OrganizationResourceDetailedStatusFilters</tt> object.
getOrganizationConformancePackDetailedStatus_filters :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe OrganizationResourceDetailedStatusFilters)

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getOrganizationConformancePackDetailedStatus_nextToken :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe Text)

-- | The maximum number of
--   <tt>OrganizationConformancePackDetailedStatuses</tt> returned on each
--   page. If you do not specify a number, Config uses the default. The
--   default is 100.
getOrganizationConformancePackDetailedStatus_limit :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe Natural)

-- | The name of organization conformance pack for which you want status
--   details for member accounts.
getOrganizationConformancePackDetailedStatus_organizationConformancePackName :: Lens' GetOrganizationConformancePackDetailedStatus Text

-- | <i>See:</i>
--   <a>newGetOrganizationConformancePackDetailedStatusResponse</a> smart
--   constructor.
data GetOrganizationConformancePackDetailedStatusResponse
GetOrganizationConformancePackDetailedStatusResponse' :: Maybe [OrganizationConformancePackDetailedStatus] -> Maybe Text -> Int -> GetOrganizationConformancePackDetailedStatusResponse

-- | A list of <tt>OrganizationConformancePackDetailedStatus</tt> objects.
[$sel:organizationConformancePackDetailedStatuses:GetOrganizationConformancePackDetailedStatusResponse'] :: GetOrganizationConformancePackDetailedStatusResponse -> Maybe [OrganizationConformancePackDetailedStatus]

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:GetOrganizationConformancePackDetailedStatusResponse'] :: GetOrganizationConformancePackDetailedStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetOrganizationConformancePackDetailedStatusResponse'] :: GetOrganizationConformancePackDetailedStatusResponse -> Int

-- | Create a value of
--   <a>GetOrganizationConformancePackDetailedStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackDetailedStatuses:GetOrganizationConformancePackDetailedStatusResponse'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_organizationConformancePackDetailedStatuses</a>
--   - A list of <tt>OrganizationConformancePackDetailedStatus</tt>
--   objects.
--   
--   <a>$sel:nextToken:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_nextToken</a>
--   - The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:GetOrganizationConformancePackDetailedStatusResponse'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_httpStatus</a>
--   - The response's http status code.
newGetOrganizationConformancePackDetailedStatusResponse :: Int -> GetOrganizationConformancePackDetailedStatusResponse

-- | A list of <tt>OrganizationConformancePackDetailedStatus</tt> objects.
getOrganizationConformancePackDetailedStatusResponse_organizationConformancePackDetailedStatuses :: Lens' GetOrganizationConformancePackDetailedStatusResponse (Maybe [OrganizationConformancePackDetailedStatus])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getOrganizationConformancePackDetailedStatusResponse_nextToken :: Lens' GetOrganizationConformancePackDetailedStatusResponse (Maybe Text)

-- | The response's http status code.
getOrganizationConformancePackDetailedStatusResponse_httpStatus :: Lens' GetOrganizationConformancePackDetailedStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance GHC.Show.Show Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance GHC.Read.Read Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance GHC.Classes.Eq Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance GHC.Generics.Generic Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatusResponse
instance GHC.Show.Show Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatusResponse
instance GHC.Read.Read Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetOrganizationConformancePackDetailedStatus.GetOrganizationConformancePackDetailedStatus


-- | Returns detailed status for each member account within an organization
--   for a given organization config rule.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus

-- | <i>See:</i> <a>newGetOrganizationConfigRuleDetailedStatus</a> smart
--   constructor.
data GetOrganizationConfigRuleDetailedStatus
GetOrganizationConfigRuleDetailedStatus' :: Maybe StatusDetailFilters -> Maybe Text -> Maybe Natural -> Text -> GetOrganizationConfigRuleDetailedStatus

-- | A <tt>StatusDetailFilters</tt> object.
[$sel:filters:GetOrganizationConfigRuleDetailedStatus'] :: GetOrganizationConfigRuleDetailedStatus -> Maybe StatusDetailFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetOrganizationConfigRuleDetailedStatus'] :: GetOrganizationConfigRuleDetailedStatus -> Maybe Text

-- | The maximum number of <tt>OrganizationConfigRuleDetailedStatus</tt>
--   returned on each page. If you do not specify a number, Config uses the
--   default. The default is 100.
[$sel:limit:GetOrganizationConfigRuleDetailedStatus'] :: GetOrganizationConfigRuleDetailedStatus -> Maybe Natural

-- | The name of organization config rule for which you want status details
--   for member accounts.
[$sel:organizationConfigRuleName:GetOrganizationConfigRuleDetailedStatus'] :: GetOrganizationConfigRuleDetailedStatus -> Text

-- | Create a value of <a>GetOrganizationConfigRuleDetailedStatus</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_filters</a> - A
--   <tt>StatusDetailFilters</tt> object.
--   
--   <a>$sel:nextToken:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_limit</a> - The maximum
--   number of <tt>OrganizationConfigRuleDetailedStatus</tt> returned on
--   each page. If you do not specify a number, Config uses the default.
--   The default is 100.
--   
--   
--   <a>$sel:organizationConfigRuleName:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_organizationConfigRuleName</a>
--   - The name of organization config rule for which you want status
--   details for member accounts.
newGetOrganizationConfigRuleDetailedStatus :: Text -> GetOrganizationConfigRuleDetailedStatus

-- | A <tt>StatusDetailFilters</tt> object.
getOrganizationConfigRuleDetailedStatus_filters :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe StatusDetailFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getOrganizationConfigRuleDetailedStatus_nextToken :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe Text)

-- | The maximum number of <tt>OrganizationConfigRuleDetailedStatus</tt>
--   returned on each page. If you do not specify a number, Config uses the
--   default. The default is 100.
getOrganizationConfigRuleDetailedStatus_limit :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe Natural)

-- | The name of organization config rule for which you want status details
--   for member accounts.
getOrganizationConfigRuleDetailedStatus_organizationConfigRuleName :: Lens' GetOrganizationConfigRuleDetailedStatus Text

-- | <i>See:</i> <a>newGetOrganizationConfigRuleDetailedStatusResponse</a>
--   smart constructor.
data GetOrganizationConfigRuleDetailedStatusResponse
GetOrganizationConfigRuleDetailedStatusResponse' :: Maybe [MemberAccountStatus] -> Maybe Text -> Int -> GetOrganizationConfigRuleDetailedStatusResponse

-- | A list of <tt>MemberAccountStatus</tt> objects.
[$sel:organizationConfigRuleDetailedStatus:GetOrganizationConfigRuleDetailedStatusResponse'] :: GetOrganizationConfigRuleDetailedStatusResponse -> Maybe [MemberAccountStatus]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetOrganizationConfigRuleDetailedStatusResponse'] :: GetOrganizationConfigRuleDetailedStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetOrganizationConfigRuleDetailedStatusResponse'] :: GetOrganizationConfigRuleDetailedStatusResponse -> Int

-- | Create a value of
--   <a>GetOrganizationConfigRuleDetailedStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleDetailedStatus:GetOrganizationConfigRuleDetailedStatusResponse'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_organizationConfigRuleDetailedStatus</a>
--   - A list of <tt>MemberAccountStatus</tt> objects.
--   
--   <a>$sel:nextToken:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:GetOrganizationConfigRuleDetailedStatusResponse'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_httpStatus</a> -
--   The response's http status code.
newGetOrganizationConfigRuleDetailedStatusResponse :: Int -> GetOrganizationConfigRuleDetailedStatusResponse

-- | A list of <tt>MemberAccountStatus</tt> objects.
getOrganizationConfigRuleDetailedStatusResponse_organizationConfigRuleDetailedStatus :: Lens' GetOrganizationConfigRuleDetailedStatusResponse (Maybe [MemberAccountStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getOrganizationConfigRuleDetailedStatusResponse_nextToken :: Lens' GetOrganizationConfigRuleDetailedStatusResponse (Maybe Text)

-- | The response's http status code.
getOrganizationConfigRuleDetailedStatusResponse_httpStatus :: Lens' GetOrganizationConfigRuleDetailedStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance GHC.Show.Show Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance GHC.Read.Read Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance GHC.Classes.Eq Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance GHC.Generics.Generic Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatusResponse
instance GHC.Show.Show Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatusResponse
instance GHC.Read.Read Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Control.DeepSeq.NFData Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetOrganizationConfigRuleDetailedStatus.GetOrganizationConfigRuleDetailedStatus


-- | Returns the resource types, the number of each resource type, and the
--   total number of resources that Config is recording in this region for
--   your Amazon Web Services account.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify that you want all resource types.</li>
--   <li>Config returns the following:<ul><li>The resource types (EC2
--   instances, IAM users, and S3 buckets).</li><li>The number of each
--   resource type (25, 20, and 15).</li><li>The total number of all
--   resources (60).</li></ul></li>
--   </ol>
--   
--   The response is paginated. By default, Config lists 100 ResourceCount
--   objects on each page. You can customize this number with the
--   <tt>limit</tt> parameter. The response includes a <tt>nextToken</tt>
--   string. To get the next page of results, run the request again and
--   specify the string for the <tt>nextToken</tt> parameter.
--   
--   If you make a call to the GetDiscoveredResourceCounts action, you
--   might not immediately receive resource counts in the following
--   situations:
--   
--   <ul>
--   <li>You are a new Config customer.</li>
--   <li>You just enabled resource recording.</li>
--   </ul>
--   
--   It might take a few minutes for Config to record and count your
--   resources. Wait a few minutes and then retry the
--   GetDiscoveredResourceCounts action.
module Network.AWS.Config.GetDiscoveredResourceCounts

-- | <i>See:</i> <a>newGetDiscoveredResourceCounts</a> smart constructor.
data GetDiscoveredResourceCounts
GetDiscoveredResourceCounts' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> GetDiscoveredResourceCounts

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetDiscoveredResourceCounts'] :: GetDiscoveredResourceCounts -> Maybe Text

-- | The maximum number of ResourceCount objects returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:GetDiscoveredResourceCounts'] :: GetDiscoveredResourceCounts -> Maybe Natural

-- | The comma-separated list that specifies the resource types that you
--   want Config to return (for example, <tt>"AWS::EC2::Instance"</tt>,
--   <tt>"AWS::IAM::User"</tt>).
--   
--   If a value for <tt>resourceTypes</tt> is not specified, Config returns
--   all resource types that Config is recording in the region for your
--   account.
--   
--   If the configuration recorder is turned off, Config returns an empty
--   list of ResourceCount objects. If the configuration recorder is not
--   recording a specific resource type (for example, S3 buckets), that
--   resource type is not returned in the list of ResourceCount objects.
[$sel:resourceTypes:GetDiscoveredResourceCounts'] :: GetDiscoveredResourceCounts -> Maybe [Text]

-- | Create a value of <a>GetDiscoveredResourceCounts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_limit</a> - The maximum number of
--   ResourceCount objects returned on each page. The default is 100. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:resourceTypes:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_resourceTypes</a> - The comma-separated
--   list that specifies the resource types that you want Config to return
--   (for example, <tt>"AWS::EC2::Instance"</tt>,
--   <tt>"AWS::IAM::User"</tt>).
--   
--   If a value for <tt>resourceTypes</tt> is not specified, Config returns
--   all resource types that Config is recording in the region for your
--   account.
--   
--   If the configuration recorder is turned off, Config returns an empty
--   list of ResourceCount objects. If the configuration recorder is not
--   recording a specific resource type (for example, S3 buckets), that
--   resource type is not returned in the list of ResourceCount objects.
newGetDiscoveredResourceCounts :: GetDiscoveredResourceCounts

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getDiscoveredResourceCounts_nextToken :: Lens' GetDiscoveredResourceCounts (Maybe Text)

-- | The maximum number of ResourceCount objects returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getDiscoveredResourceCounts_limit :: Lens' GetDiscoveredResourceCounts (Maybe Natural)

-- | The comma-separated list that specifies the resource types that you
--   want Config to return (for example, <tt>"AWS::EC2::Instance"</tt>,
--   <tt>"AWS::IAM::User"</tt>).
--   
--   If a value for <tt>resourceTypes</tt> is not specified, Config returns
--   all resource types that Config is recording in the region for your
--   account.
--   
--   If the configuration recorder is turned off, Config returns an empty
--   list of ResourceCount objects. If the configuration recorder is not
--   recording a specific resource type (for example, S3 buckets), that
--   resource type is not returned in the list of ResourceCount objects.
getDiscoveredResourceCounts_resourceTypes :: Lens' GetDiscoveredResourceCounts (Maybe [Text])

-- | <i>See:</i> <a>newGetDiscoveredResourceCountsResponse</a> smart
--   constructor.
data GetDiscoveredResourceCountsResponse
GetDiscoveredResourceCountsResponse' :: Maybe Integer -> Maybe Text -> Maybe [ResourceCount] -> Int -> GetDiscoveredResourceCountsResponse

-- | The total number of resources that Config is recording in the region
--   for your account. If you specify resource types in the request, Config
--   returns only the total number of resources for those resource types.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets, for a total of 60 resources.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify the resource type, <tt>"AWS::EC2::Instances"</tt>, in the
--   request.</li>
--   <li>Config returns 25 for <tt>totalDiscoveredResources</tt>.</li>
--   </ol>
[$sel:totalDiscoveredResources:GetDiscoveredResourceCountsResponse'] :: GetDiscoveredResourceCountsResponse -> Maybe Integer

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:GetDiscoveredResourceCountsResponse'] :: GetDiscoveredResourceCountsResponse -> Maybe Text

-- | The list of <tt>ResourceCount</tt> objects. Each object is listed in
--   descending order by the number of resources.
[$sel:resourceCounts:GetDiscoveredResourceCountsResponse'] :: GetDiscoveredResourceCountsResponse -> Maybe [ResourceCount]

-- | The response's http status code.
[$sel:httpStatus:GetDiscoveredResourceCountsResponse'] :: GetDiscoveredResourceCountsResponse -> Int

-- | Create a value of <a>GetDiscoveredResourceCountsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:totalDiscoveredResources:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_totalDiscoveredResources</a> -
--   The total number of resources that Config is recording in the region
--   for your account. If you specify resource types in the request, Config
--   returns only the total number of resources for those resource types.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets, for a total of 60 resources.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify the resource type, <tt>"AWS::EC2::Instances"</tt>, in the
--   request.</li>
--   <li>Config returns 25 for <tt>totalDiscoveredResources</tt>.</li>
--   </ol>
--   
--   <a>$sel:nextToken:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCountsResponse_nextToken</a> - The string that
--   you use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:resourceCounts:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_resourceCounts</a> - The list
--   of <tt>ResourceCount</tt> objects. Each object is listed in descending
--   order by the number of resources.
--   
--   <a>$sel:httpStatus:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_httpStatus</a> - The response's
--   http status code.
newGetDiscoveredResourceCountsResponse :: Int -> GetDiscoveredResourceCountsResponse

-- | The total number of resources that Config is recording in the region
--   for your account. If you specify resource types in the request, Config
--   returns only the total number of resources for those resource types.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets, for a total of 60 resources.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify the resource type, <tt>"AWS::EC2::Instances"</tt>, in the
--   request.</li>
--   <li>Config returns 25 for <tt>totalDiscoveredResources</tt>.</li>
--   </ol>
getDiscoveredResourceCountsResponse_totalDiscoveredResources :: Lens' GetDiscoveredResourceCountsResponse (Maybe Integer)

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getDiscoveredResourceCountsResponse_nextToken :: Lens' GetDiscoveredResourceCountsResponse (Maybe Text)

-- | The list of <tt>ResourceCount</tt> objects. Each object is listed in
--   descending order by the number of resources.
getDiscoveredResourceCountsResponse_resourceCounts :: Lens' GetDiscoveredResourceCountsResponse (Maybe [ResourceCount])

-- | The response's http status code.
getDiscoveredResourceCountsResponse_httpStatus :: Lens' GetDiscoveredResourceCountsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance GHC.Show.Show Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance GHC.Read.Read Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance GHC.Classes.Eq Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance GHC.Generics.Generic Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCountsResponse
instance GHC.Show.Show Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCountsResponse
instance GHC.Read.Read Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCountsResponse
instance GHC.Classes.Eq Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCountsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Control.DeepSeq.NFData Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCountsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Control.DeepSeq.NFData Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetDiscoveredResourceCounts.GetDiscoveredResourceCounts


-- | Returns compliance details for the conformance pack based on the
--   cumulative compliance results of all the rules in that conformance
--   pack.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetConformancePackComplianceSummary

-- | <i>See:</i> <a>newGetConformancePackComplianceSummary</a> smart
--   constructor.
data GetConformancePackComplianceSummary
GetConformancePackComplianceSummary' :: Maybe Text -> Maybe Natural -> NonEmpty Text -> GetConformancePackComplianceSummary

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:GetConformancePackComplianceSummary'] :: GetConformancePackComplianceSummary -> Maybe Text

-- | The maximum number of conformance packs returned on each page.
[$sel:limit:GetConformancePackComplianceSummary'] :: GetConformancePackComplianceSummary -> Maybe Natural

-- | Names of conformance packs.
[$sel:conformancePackNames:GetConformancePackComplianceSummary'] :: GetConformancePackComplianceSummary -> NonEmpty Text

-- | Create a value of <a>GetConformancePackComplianceSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_nextToken</a> - The nextToken
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_limit</a> - The maximum number
--   of conformance packs returned on each page.
--   
--   <a>$sel:conformancePackNames:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_conformancePackNames</a> -
--   Names of conformance packs.
newGetConformancePackComplianceSummary :: NonEmpty Text -> GetConformancePackComplianceSummary

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getConformancePackComplianceSummary_nextToken :: Lens' GetConformancePackComplianceSummary (Maybe Text)

-- | The maximum number of conformance packs returned on each page.
getConformancePackComplianceSummary_limit :: Lens' GetConformancePackComplianceSummary (Maybe Natural)

-- | Names of conformance packs.
getConformancePackComplianceSummary_conformancePackNames :: Lens' GetConformancePackComplianceSummary (NonEmpty Text)

-- | <i>See:</i> <a>newGetConformancePackComplianceSummaryResponse</a>
--   smart constructor.
data GetConformancePackComplianceSummaryResponse
GetConformancePackComplianceSummaryResponse' :: Maybe (NonEmpty ConformancePackComplianceSummary) -> Maybe Text -> Int -> GetConformancePackComplianceSummaryResponse

-- | A list of <tt>ConformancePackComplianceSummary</tt> objects.
[$sel:conformancePackComplianceSummaryList:GetConformancePackComplianceSummaryResponse'] :: GetConformancePackComplianceSummaryResponse -> Maybe (NonEmpty ConformancePackComplianceSummary)

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:GetConformancePackComplianceSummaryResponse'] :: GetConformancePackComplianceSummaryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetConformancePackComplianceSummaryResponse'] :: GetConformancePackComplianceSummaryResponse -> Int

-- | Create a value of <a>GetConformancePackComplianceSummaryResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackComplianceSummaryList:GetConformancePackComplianceSummaryResponse'</a>,
--   <a>getConformancePackComplianceSummaryResponse_conformancePackComplianceSummaryList</a>
--   - A list of <tt>ConformancePackComplianceSummary</tt> objects.
--   
--   <a>$sel:nextToken:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummaryResponse_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:GetConformancePackComplianceSummaryResponse'</a>,
--   <a>getConformancePackComplianceSummaryResponse_httpStatus</a> - The
--   response's http status code.
newGetConformancePackComplianceSummaryResponse :: Int -> GetConformancePackComplianceSummaryResponse

-- | A list of <tt>ConformancePackComplianceSummary</tt> objects.
getConformancePackComplianceSummaryResponse_conformancePackComplianceSummaryList :: Lens' GetConformancePackComplianceSummaryResponse (Maybe (NonEmpty ConformancePackComplianceSummary))

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getConformancePackComplianceSummaryResponse_nextToken :: Lens' GetConformancePackComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getConformancePackComplianceSummaryResponse_httpStatus :: Lens' GetConformancePackComplianceSummaryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance GHC.Show.Show Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance GHC.Read.Read Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance GHC.Generics.Generic Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummaryResponse
instance GHC.Show.Show Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummaryResponse
instance GHC.Read.Read Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummaryResponse
instance GHC.Classes.Eq Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummaryResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetConformancePackComplianceSummary.GetConformancePackComplianceSummary


-- | Returns compliance details of a conformance pack for all Amazon Web
--   Services resources that are monitered by conformance pack.
module Network.AWS.Config.GetConformancePackComplianceDetails

-- | <i>See:</i> <a>newGetConformancePackComplianceDetails</a> smart
--   constructor.
data GetConformancePackComplianceDetails
GetConformancePackComplianceDetails' :: Maybe ConformancePackEvaluationFilters -> Maybe Text -> Maybe Natural -> Text -> GetConformancePackComplianceDetails

-- | A <tt>ConformancePackEvaluationFilters</tt> object.
[$sel:filters:GetConformancePackComplianceDetails'] :: GetConformancePackComplianceDetails -> Maybe ConformancePackEvaluationFilters

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:GetConformancePackComplianceDetails'] :: GetConformancePackComplianceDetails -> Maybe Text

-- | The maximum number of evaluation results returned on each page. If you
--   do no specify a number, Config uses the default. The default is 100.
[$sel:limit:GetConformancePackComplianceDetails'] :: GetConformancePackComplianceDetails -> Maybe Natural

-- | Name of the conformance pack.
[$sel:conformancePackName:GetConformancePackComplianceDetails'] :: GetConformancePackComplianceDetails -> Text

-- | Create a value of <a>GetConformancePackComplianceDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_filters</a> - A
--   <tt>ConformancePackEvaluationFilters</tt> object.
--   
--   <a>$sel:nextToken:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_limit</a> - The maximum number
--   of evaluation results returned on each page. If you do no specify a
--   number, Config uses the default. The default is 100.
--   
--   <a>$sel:conformancePackName:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_conformancePackName</a> - Name
--   of the conformance pack.
newGetConformancePackComplianceDetails :: Text -> GetConformancePackComplianceDetails

-- | A <tt>ConformancePackEvaluationFilters</tt> object.
getConformancePackComplianceDetails_filters :: Lens' GetConformancePackComplianceDetails (Maybe ConformancePackEvaluationFilters)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
getConformancePackComplianceDetails_nextToken :: Lens' GetConformancePackComplianceDetails (Maybe Text)

-- | The maximum number of evaluation results returned on each page. If you
--   do no specify a number, Config uses the default. The default is 100.
getConformancePackComplianceDetails_limit :: Lens' GetConformancePackComplianceDetails (Maybe Natural)

-- | Name of the conformance pack.
getConformancePackComplianceDetails_conformancePackName :: Lens' GetConformancePackComplianceDetails Text

-- | <i>See:</i> <a>newGetConformancePackComplianceDetailsResponse</a>
--   smart constructor.
data GetConformancePackComplianceDetailsResponse
GetConformancePackComplianceDetailsResponse' :: Maybe Text -> Maybe [ConformancePackEvaluationResult] -> Int -> Text -> GetConformancePackComplianceDetailsResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:GetConformancePackComplianceDetailsResponse'] :: GetConformancePackComplianceDetailsResponse -> Maybe Text

-- | Returns a list of <tt>ConformancePackEvaluationResult</tt> objects.
[$sel:conformancePackRuleEvaluationResults:GetConformancePackComplianceDetailsResponse'] :: GetConformancePackComplianceDetailsResponse -> Maybe [ConformancePackEvaluationResult]

-- | The response's http status code.
[$sel:httpStatus:GetConformancePackComplianceDetailsResponse'] :: GetConformancePackComplianceDetailsResponse -> Int

-- | Name of the conformance pack.
[$sel:conformancePackName:GetConformancePackComplianceDetailsResponse'] :: GetConformancePackComplianceDetailsResponse -> Text

-- | Create a value of <a>GetConformancePackComplianceDetailsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetailsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   
--   <a>$sel:conformancePackRuleEvaluationResults:GetConformancePackComplianceDetailsResponse'</a>,
--   <a>getConformancePackComplianceDetailsResponse_conformancePackRuleEvaluationResults</a>
--   - Returns a list of <tt>ConformancePackEvaluationResult</tt> objects.
--   
--   <a>$sel:httpStatus:GetConformancePackComplianceDetailsResponse'</a>,
--   <a>getConformancePackComplianceDetailsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:conformancePackName:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetailsResponse_conformancePackName</a>
--   - Name of the conformance pack.
newGetConformancePackComplianceDetailsResponse :: Int -> Text -> GetConformancePackComplianceDetailsResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
getConformancePackComplianceDetailsResponse_nextToken :: Lens' GetConformancePackComplianceDetailsResponse (Maybe Text)

-- | Returns a list of <tt>ConformancePackEvaluationResult</tt> objects.
getConformancePackComplianceDetailsResponse_conformancePackRuleEvaluationResults :: Lens' GetConformancePackComplianceDetailsResponse (Maybe [ConformancePackEvaluationResult])

-- | The response's http status code.
getConformancePackComplianceDetailsResponse_httpStatus :: Lens' GetConformancePackComplianceDetailsResponse Int

-- | Name of the conformance pack.
getConformancePackComplianceDetailsResponse_conformancePackName :: Lens' GetConformancePackComplianceDetailsResponse Text
instance GHC.Generics.Generic Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance GHC.Show.Show Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance GHC.Read.Read Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance GHC.Classes.Eq Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance GHC.Generics.Generic Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetailsResponse
instance GHC.Show.Show Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetailsResponse
instance GHC.Read.Read Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetailsResponse
instance GHC.Classes.Eq Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetailsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Control.DeepSeq.NFData Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetailsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Control.DeepSeq.NFData Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetConformancePackComplianceDetails.GetConformancePackComplianceDetails


-- | Returns the number of resources that are compliant and the number that
--   are noncompliant. You can specify one or more resource types to get
--   these numbers for each resource type. The maximum number returned is
--   100.
module Network.AWS.Config.GetComplianceSummaryByResourceType

-- | <i>See:</i> <a>newGetComplianceSummaryByResourceType</a> smart
--   constructor.
data GetComplianceSummaryByResourceType
GetComplianceSummaryByResourceType' :: Maybe [Text] -> GetComplianceSummaryByResourceType

-- | Specify one or more resource types to get the number of resources that
--   are compliant and the number that are noncompliant for each resource
--   type.
--   
--   For this request, you can specify an Amazon Web Services resource type
--   such as <tt>AWS::EC2::Instance</tt>. You can specify that the resource
--   type is an Amazon Web Services account by specifying
--   <tt>AWS::::Account</tt>.
[$sel:resourceTypes:GetComplianceSummaryByResourceType'] :: GetComplianceSummaryByResourceType -> Maybe [Text]

-- | Create a value of <a>GetComplianceSummaryByResourceType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTypes:GetComplianceSummaryByResourceType'</a>,
--   <a>getComplianceSummaryByResourceType_resourceTypes</a> - Specify one
--   or more resource types to get the number of resources that are
--   compliant and the number that are noncompliant for each resource type.
--   
--   For this request, you can specify an Amazon Web Services resource type
--   such as <tt>AWS::EC2::Instance</tt>. You can specify that the resource
--   type is an Amazon Web Services account by specifying
--   <tt>AWS::::Account</tt>.
newGetComplianceSummaryByResourceType :: GetComplianceSummaryByResourceType

-- | Specify one or more resource types to get the number of resources that
--   are compliant and the number that are noncompliant for each resource
--   type.
--   
--   For this request, you can specify an Amazon Web Services resource type
--   such as <tt>AWS::EC2::Instance</tt>. You can specify that the resource
--   type is an Amazon Web Services account by specifying
--   <tt>AWS::::Account</tt>.
getComplianceSummaryByResourceType_resourceTypes :: Lens' GetComplianceSummaryByResourceType (Maybe [Text])

-- | <i>See:</i> <a>newGetComplianceSummaryByResourceTypeResponse</a> smart
--   constructor.
data GetComplianceSummaryByResourceTypeResponse
GetComplianceSummaryByResourceTypeResponse' :: Maybe [ComplianceSummaryByResourceType] -> Int -> GetComplianceSummaryByResourceTypeResponse

-- | The number of resources that are compliant and the number that are
--   noncompliant. If one or more resource types were provided with the
--   request, the numbers are returned for each resource type. The maximum
--   number returned is 100.
[$sel:complianceSummariesByResourceType:GetComplianceSummaryByResourceTypeResponse'] :: GetComplianceSummaryByResourceTypeResponse -> Maybe [ComplianceSummaryByResourceType]

-- | The response's http status code.
[$sel:httpStatus:GetComplianceSummaryByResourceTypeResponse'] :: GetComplianceSummaryByResourceTypeResponse -> Int

-- | Create a value of <a>GetComplianceSummaryByResourceTypeResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceSummariesByResourceType:GetComplianceSummaryByResourceTypeResponse'</a>,
--   <a>getComplianceSummaryByResourceTypeResponse_complianceSummariesByResourceType</a>
--   - The number of resources that are compliant and the number that are
--   noncompliant. If one or more resource types were provided with the
--   request, the numbers are returned for each resource type. The maximum
--   number returned is 100.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryByResourceTypeResponse'</a>,
--   <a>getComplianceSummaryByResourceTypeResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceSummaryByResourceTypeResponse :: Int -> GetComplianceSummaryByResourceTypeResponse

-- | The number of resources that are compliant and the number that are
--   noncompliant. If one or more resource types were provided with the
--   request, the numbers are returned for each resource type. The maximum
--   number returned is 100.
getComplianceSummaryByResourceTypeResponse_complianceSummariesByResourceType :: Lens' GetComplianceSummaryByResourceTypeResponse (Maybe [ComplianceSummaryByResourceType])

-- | The response's http status code.
getComplianceSummaryByResourceTypeResponse_httpStatus :: Lens' GetComplianceSummaryByResourceTypeResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance GHC.Show.Show Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance GHC.Read.Read Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceTypeResponse
instance GHC.Show.Show Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceTypeResponse
instance GHC.Read.Read Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceTypeResponse
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetComplianceSummaryByResourceType.GetComplianceSummaryByResourceType


-- | Returns the number of Config rules that are compliant and
--   noncompliant, up to a maximum of 25 for each.
module Network.AWS.Config.GetComplianceSummaryByConfigRule

-- | <i>See:</i> <a>newGetComplianceSummaryByConfigRule</a> smart
--   constructor.
data GetComplianceSummaryByConfigRule
GetComplianceSummaryByConfigRule' :: GetComplianceSummaryByConfigRule

-- | Create a value of <a>GetComplianceSummaryByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetComplianceSummaryByConfigRule :: GetComplianceSummaryByConfigRule

-- | <i>See:</i> <a>newGetComplianceSummaryByConfigRuleResponse</a> smart
--   constructor.
data GetComplianceSummaryByConfigRuleResponse
GetComplianceSummaryByConfigRuleResponse' :: Maybe ComplianceSummary -> Int -> GetComplianceSummaryByConfigRuleResponse

-- | The number of Config rules that are compliant and the number that are
--   noncompliant, up to a maximum of 25 for each.
[$sel:complianceSummary:GetComplianceSummaryByConfigRuleResponse'] :: GetComplianceSummaryByConfigRuleResponse -> Maybe ComplianceSummary

-- | The response's http status code.
[$sel:httpStatus:GetComplianceSummaryByConfigRuleResponse'] :: GetComplianceSummaryByConfigRuleResponse -> Int

-- | Create a value of <a>GetComplianceSummaryByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceSummary:GetComplianceSummaryByConfigRuleResponse'</a>,
--   <a>getComplianceSummaryByConfigRuleResponse_complianceSummary</a> -
--   The number of Config rules that are compliant and the number that are
--   noncompliant, up to a maximum of 25 for each.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryByConfigRuleResponse'</a>,
--   <a>getComplianceSummaryByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceSummaryByConfigRuleResponse :: Int -> GetComplianceSummaryByConfigRuleResponse

-- | The number of Config rules that are compliant and the number that are
--   noncompliant, up to a maximum of 25 for each.
getComplianceSummaryByConfigRuleResponse_complianceSummary :: Lens' GetComplianceSummaryByConfigRuleResponse (Maybe ComplianceSummary)

-- | The response's http status code.
getComplianceSummaryByConfigRuleResponse_httpStatus :: Lens' GetComplianceSummaryByConfigRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance GHC.Show.Show Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance GHC.Read.Read Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetComplianceSummaryByConfigRule.GetComplianceSummaryByConfigRule


-- | Returns the evaluation results for the specified Amazon Web Services
--   resource. The results indicate which Config rules were used to
--   evaluate the resource, when each rule was last used, and whether the
--   resource complies with each rule.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetComplianceDetailsByResource

-- | <i>See:</i> <a>newGetComplianceDetailsByResource</a> smart
--   constructor.
data GetComplianceDetailsByResource
GetComplianceDetailsByResource' :: Maybe [ComplianceType] -> Maybe Text -> Text -> Text -> GetComplianceDetailsByResource

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
[$sel:complianceTypes:GetComplianceDetailsByResource'] :: GetComplianceDetailsByResource -> Maybe [ComplianceType]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetComplianceDetailsByResource'] :: GetComplianceDetailsByResource -> Maybe Text

-- | The type of the Amazon Web Services resource for which you want
--   compliance information.
[$sel:resourceType:GetComplianceDetailsByResource'] :: GetComplianceDetailsByResource -> Text

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information.
[$sel:resourceId:GetComplianceDetailsByResource'] :: GetComplianceDetailsByResource -> Text

-- | Create a value of <a>GetComplianceDetailsByResource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceTypes:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:resourceType:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_resourceType</a> - The type of the
--   Amazon Web Services resource for which you want compliance
--   information.
--   
--   <a>$sel:resourceId:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_resourceId</a> - The ID of the
--   Amazon Web Services resource for which you want compliance
--   information.
newGetComplianceDetailsByResource :: Text -> Text -> GetComplianceDetailsByResource

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
getComplianceDetailsByResource_complianceTypes :: Lens' GetComplianceDetailsByResource (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getComplianceDetailsByResource_nextToken :: Lens' GetComplianceDetailsByResource (Maybe Text)

-- | The type of the Amazon Web Services resource for which you want
--   compliance information.
getComplianceDetailsByResource_resourceType :: Lens' GetComplianceDetailsByResource Text

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information.
getComplianceDetailsByResource_resourceId :: Lens' GetComplianceDetailsByResource Text

-- | <i>See:</i> <a>newGetComplianceDetailsByResourceResponse</a> smart
--   constructor.
data GetComplianceDetailsByResourceResponse
GetComplianceDetailsByResourceResponse' :: Maybe [EvaluationResult] -> Maybe Text -> Int -> GetComplianceDetailsByResourceResponse

-- | Indicates whether the specified Amazon Web Services resource complies
--   each Config rule.
[$sel:evaluationResults:GetComplianceDetailsByResourceResponse'] :: GetComplianceDetailsByResourceResponse -> Maybe [EvaluationResult]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:GetComplianceDetailsByResourceResponse'] :: GetComplianceDetailsByResourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetComplianceDetailsByResourceResponse'] :: GetComplianceDetailsByResourceResponse -> Int

-- | Create a value of <a>GetComplianceDetailsByResourceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResults:GetComplianceDetailsByResourceResponse'</a>,
--   <a>getComplianceDetailsByResourceResponse_evaluationResults</a> -
--   Indicates whether the specified Amazon Web Services resource complies
--   each Config rule.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResourceResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:GetComplianceDetailsByResourceResponse'</a>,
--   <a>getComplianceDetailsByResourceResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceDetailsByResourceResponse :: Int -> GetComplianceDetailsByResourceResponse

-- | Indicates whether the specified Amazon Web Services resource complies
--   each Config rule.
getComplianceDetailsByResourceResponse_evaluationResults :: Lens' GetComplianceDetailsByResourceResponse (Maybe [EvaluationResult])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getComplianceDetailsByResourceResponse_nextToken :: Lens' GetComplianceDetailsByResourceResponse (Maybe Text)

-- | The response's http status code.
getComplianceDetailsByResourceResponse_httpStatus :: Lens' GetComplianceDetailsByResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance GHC.Show.Show Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance GHC.Read.Read Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResourceResponse
instance GHC.Show.Show Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResourceResponse
instance GHC.Read.Read Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResourceResponse
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetComplianceDetailsByResource.GetComplianceDetailsByResource


-- | Returns the evaluation results for the specified Config rule. The
--   results indicate which Amazon Web Services resources were evaluated by
--   the rule, when each resource was last evaluated, and whether each
--   resource complies with the rule.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetComplianceDetailsByConfigRule

-- | <i>See:</i> <a>newGetComplianceDetailsByConfigRule</a> smart
--   constructor.
data GetComplianceDetailsByConfigRule
GetComplianceDetailsByConfigRule' :: Maybe [ComplianceType] -> Maybe Text -> Maybe Natural -> Text -> GetComplianceDetailsByConfigRule

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
[$sel:complianceTypes:GetComplianceDetailsByConfigRule'] :: GetComplianceDetailsByConfigRule -> Maybe [ComplianceType]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetComplianceDetailsByConfigRule'] :: GetComplianceDetailsByConfigRule -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:GetComplianceDetailsByConfigRule'] :: GetComplianceDetailsByConfigRule -> Maybe Natural

-- | The name of the Config rule for which you want compliance information.
[$sel:configRuleName:GetComplianceDetailsByConfigRule'] :: GetComplianceDetailsByConfigRule -> Text

-- | Create a value of <a>GetComplianceDetailsByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceTypes:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_limit</a> - The maximum number of
--   evaluation results returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:configRuleName:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_configRuleName</a> - The name of
--   the Config rule for which you want compliance information.
newGetComplianceDetailsByConfigRule :: Text -> GetComplianceDetailsByConfigRule

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
getComplianceDetailsByConfigRule_complianceTypes :: Lens' GetComplianceDetailsByConfigRule (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getComplianceDetailsByConfigRule_nextToken :: Lens' GetComplianceDetailsByConfigRule (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getComplianceDetailsByConfigRule_limit :: Lens' GetComplianceDetailsByConfigRule (Maybe Natural)

-- | The name of the Config rule for which you want compliance information.
getComplianceDetailsByConfigRule_configRuleName :: Lens' GetComplianceDetailsByConfigRule Text

-- | <i>See:</i> <a>newGetComplianceDetailsByConfigRuleResponse</a> smart
--   constructor.
data GetComplianceDetailsByConfigRuleResponse
GetComplianceDetailsByConfigRuleResponse' :: Maybe [EvaluationResult] -> Maybe Text -> Int -> GetComplianceDetailsByConfigRuleResponse

-- | Indicates whether the Amazon Web Services resource complies with the
--   specified Config rule.
[$sel:evaluationResults:GetComplianceDetailsByConfigRuleResponse'] :: GetComplianceDetailsByConfigRuleResponse -> Maybe [EvaluationResult]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:GetComplianceDetailsByConfigRuleResponse'] :: GetComplianceDetailsByConfigRuleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetComplianceDetailsByConfigRuleResponse'] :: GetComplianceDetailsByConfigRuleResponse -> Int

-- | Create a value of <a>GetComplianceDetailsByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:evaluationResults:GetComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_evaluationResults</a> -
--   Indicates whether the Amazon Web Services resource complies with the
--   specified Config rule.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:GetComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceDetailsByConfigRuleResponse :: Int -> GetComplianceDetailsByConfigRuleResponse

-- | Indicates whether the Amazon Web Services resource complies with the
--   specified Config rule.
getComplianceDetailsByConfigRuleResponse_evaluationResults :: Lens' GetComplianceDetailsByConfigRuleResponse (Maybe [EvaluationResult])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getComplianceDetailsByConfigRuleResponse_nextToken :: Lens' GetComplianceDetailsByConfigRuleResponse (Maybe Text)

-- | The response's http status code.
getComplianceDetailsByConfigRuleResponse_httpStatus :: Lens' GetComplianceDetailsByConfigRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance GHC.Show.Show Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance GHC.Read.Read Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance GHC.Generics.Generic Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRuleResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetComplianceDetailsByConfigRule.GetComplianceDetailsByConfigRule


-- | Returns configuration item that is aggregated for your specific
--   resource in a specific source account and region.
module Network.AWS.Config.GetAggregateResourceConfig

-- | <i>See:</i> <a>newGetAggregateResourceConfig</a> smart constructor.
data GetAggregateResourceConfig
GetAggregateResourceConfig' :: Text -> AggregateResourceIdentifier -> GetAggregateResourceConfig

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:GetAggregateResourceConfig'] :: GetAggregateResourceConfig -> Text

-- | An object that identifies aggregate resource.
[$sel:resourceIdentifier:GetAggregateResourceConfig'] :: GetAggregateResourceConfig -> AggregateResourceIdentifier

-- | Create a value of <a>GetAggregateResourceConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationAggregatorName:GetAggregateResourceConfig'</a>,
--   <a>getAggregateResourceConfig_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
--   
--   <a>$sel:resourceIdentifier:GetAggregateResourceConfig'</a>,
--   <a>getAggregateResourceConfig_resourceIdentifier</a> - An object that
--   identifies aggregate resource.
newGetAggregateResourceConfig :: Text -> AggregateResourceIdentifier -> GetAggregateResourceConfig

-- | The name of the configuration aggregator.
getAggregateResourceConfig_configurationAggregatorName :: Lens' GetAggregateResourceConfig Text

-- | An object that identifies aggregate resource.
getAggregateResourceConfig_resourceIdentifier :: Lens' GetAggregateResourceConfig AggregateResourceIdentifier

-- | <i>See:</i> <a>newGetAggregateResourceConfigResponse</a> smart
--   constructor.
data GetAggregateResourceConfigResponse
GetAggregateResourceConfigResponse' :: Maybe ConfigurationItem -> Int -> GetAggregateResourceConfigResponse

-- | Returns a <tt>ConfigurationItem</tt> object.
[$sel:configurationItem:GetAggregateResourceConfigResponse'] :: GetAggregateResourceConfigResponse -> Maybe ConfigurationItem

-- | The response's http status code.
[$sel:httpStatus:GetAggregateResourceConfigResponse'] :: GetAggregateResourceConfigResponse -> Int

-- | Create a value of <a>GetAggregateResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationItem:GetAggregateResourceConfigResponse'</a>,
--   <a>getAggregateResourceConfigResponse_configurationItem</a> - Returns
--   a <tt>ConfigurationItem</tt> object.
--   
--   <a>$sel:httpStatus:GetAggregateResourceConfigResponse'</a>,
--   <a>getAggregateResourceConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetAggregateResourceConfigResponse :: Int -> GetAggregateResourceConfigResponse

-- | Returns a <tt>ConfigurationItem</tt> object.
getAggregateResourceConfigResponse_configurationItem :: Lens' GetAggregateResourceConfigResponse (Maybe ConfigurationItem)

-- | The response's http status code.
getAggregateResourceConfigResponse_httpStatus :: Lens' GetAggregateResourceConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance GHC.Show.Show Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance GHC.Read.Read Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetAggregateResourceConfig.GetAggregateResourceConfig


-- | Returns the resource counts across accounts and regions that are
--   present in your Config aggregator. You can request the resource counts
--   by providing filters and GroupByKey.
--   
--   For example, if the input contains accountID 12345678910 and region
--   us-east-1 in filters, the API returns the count of resources in
--   account ID 12345678910 and region us-east-1. If the input contains
--   ACCOUNT_ID as a GroupByKey, the API returns resource counts for all
--   source accounts that are present in your aggregator.
module Network.AWS.Config.GetAggregateDiscoveredResourceCounts

-- | <i>See:</i> <a>newGetAggregateDiscoveredResourceCounts</a> smart
--   constructor.
data GetAggregateDiscoveredResourceCounts
GetAggregateDiscoveredResourceCounts' :: Maybe ResourceCountFilters -> Maybe Text -> Maybe Natural -> Maybe ResourceCountGroupKey -> Text -> GetAggregateDiscoveredResourceCounts

-- | Filters the results based on the <tt>ResourceCountFilters</tt> object.
[$sel:filters:GetAggregateDiscoveredResourceCounts'] :: GetAggregateDiscoveredResourceCounts -> Maybe ResourceCountFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateDiscoveredResourceCounts'] :: GetAggregateDiscoveredResourceCounts -> Maybe Text

-- | The maximum number of GroupedResourceCount objects returned on each
--   page. The default is 1000. You cannot specify a number greater than
--   1000. If you specify 0, Config uses the default.
[$sel:limit:GetAggregateDiscoveredResourceCounts'] :: GetAggregateDiscoveredResourceCounts -> Maybe Natural

-- | The key to group the resource counts.
[$sel:groupByKey:GetAggregateDiscoveredResourceCounts'] :: GetAggregateDiscoveredResourceCounts -> Maybe ResourceCountGroupKey

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:GetAggregateDiscoveredResourceCounts'] :: GetAggregateDiscoveredResourceCounts -> Text

-- | Create a value of <a>GetAggregateDiscoveredResourceCounts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_filters</a> - Filters the
--   results based on the <tt>ResourceCountFilters</tt> object.
--   
--   <a>$sel:nextToken:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_limit</a> - The maximum number
--   of GroupedResourceCount objects returned on each page. The default is
--   1000. You cannot specify a number greater than 1000. If you specify 0,
--   Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_groupByKey</a> - The key to
--   group the resource counts.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateDiscoveredResourceCounts :: Text -> GetAggregateDiscoveredResourceCounts

-- | Filters the results based on the <tt>ResourceCountFilters</tt> object.
getAggregateDiscoveredResourceCounts_filters :: Lens' GetAggregateDiscoveredResourceCounts (Maybe ResourceCountFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateDiscoveredResourceCounts_nextToken :: Lens' GetAggregateDiscoveredResourceCounts (Maybe Text)

-- | The maximum number of GroupedResourceCount objects returned on each
--   page. The default is 1000. You cannot specify a number greater than
--   1000. If you specify 0, Config uses the default.
getAggregateDiscoveredResourceCounts_limit :: Lens' GetAggregateDiscoveredResourceCounts (Maybe Natural)

-- | The key to group the resource counts.
getAggregateDiscoveredResourceCounts_groupByKey :: Lens' GetAggregateDiscoveredResourceCounts (Maybe ResourceCountGroupKey)

-- | The name of the configuration aggregator.
getAggregateDiscoveredResourceCounts_configurationAggregatorName :: Lens' GetAggregateDiscoveredResourceCounts Text

-- | <i>See:</i> <a>newGetAggregateDiscoveredResourceCountsResponse</a>
--   smart constructor.
data GetAggregateDiscoveredResourceCountsResponse
GetAggregateDiscoveredResourceCountsResponse' :: Maybe [GroupedResourceCount] -> Maybe Text -> Maybe Text -> Int -> Integer -> GetAggregateDiscoveredResourceCountsResponse

-- | Returns a list of GroupedResourceCount objects.
[$sel:groupedResourceCounts:GetAggregateDiscoveredResourceCountsResponse'] :: GetAggregateDiscoveredResourceCountsResponse -> Maybe [GroupedResourceCount]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateDiscoveredResourceCountsResponse'] :: GetAggregateDiscoveredResourceCountsResponse -> Maybe Text

-- | The key passed into the request object. If <tt>GroupByKey</tt> is not
--   provided, the result will be empty.
[$sel:groupByKey:GetAggregateDiscoveredResourceCountsResponse'] :: GetAggregateDiscoveredResourceCountsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAggregateDiscoveredResourceCountsResponse'] :: GetAggregateDiscoveredResourceCountsResponse -> Int

-- | The total number of resources that are present in an aggregator with
--   the filters that you provide.
[$sel:totalDiscoveredResources:GetAggregateDiscoveredResourceCountsResponse'] :: GetAggregateDiscoveredResourceCountsResponse -> Integer

-- | Create a value of <a>GetAggregateDiscoveredResourceCountsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupedResourceCounts:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_groupedResourceCounts</a>
--   - Returns a list of GroupedResourceCount objects.
--   
--   <a>$sel:nextToken:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:groupByKey:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_groupByKey</a> - The
--   key passed into the request object. If <tt>GroupByKey</tt> is not
--   provided, the result will be empty.
--   
--   <a>$sel:httpStatus:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:totalDiscoveredResources:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_totalDiscoveredResources</a>
--   - The total number of resources that are present in an aggregator with
--   the filters that you provide.
newGetAggregateDiscoveredResourceCountsResponse :: Int -> Integer -> GetAggregateDiscoveredResourceCountsResponse

-- | Returns a list of GroupedResourceCount objects.
getAggregateDiscoveredResourceCountsResponse_groupedResourceCounts :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe [GroupedResourceCount])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateDiscoveredResourceCountsResponse_nextToken :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe Text)

-- | The key passed into the request object. If <tt>GroupByKey</tt> is not
--   provided, the result will be empty.
getAggregateDiscoveredResourceCountsResponse_groupByKey :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe Text)

-- | The response's http status code.
getAggregateDiscoveredResourceCountsResponse_httpStatus :: Lens' GetAggregateDiscoveredResourceCountsResponse Int

-- | The total number of resources that are present in an aggregator with
--   the filters that you provide.
getAggregateDiscoveredResourceCountsResponse_totalDiscoveredResources :: Lens' GetAggregateDiscoveredResourceCountsResponse Integer
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance GHC.Show.Show Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance GHC.Read.Read Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCountsResponse
instance GHC.Show.Show Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCountsResponse
instance GHC.Read.Read Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCountsResponse
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCountsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCountsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetAggregateDiscoveredResourceCounts.GetAggregateDiscoveredResourceCounts


-- | Returns the count of compliant and noncompliant conformance packs
--   across all Amazon Web Services accounts and Amazon Web Services
--   Regions in an aggregator. You can filter based on Amazon Web Services
--   account ID or Amazon Web Services Region.
--   
--   The results can return an empty result page, but if you have a
--   nextToken, the results are displayed on the next page.
module Network.AWS.Config.GetAggregateConformancePackComplianceSummary

-- | <i>See:</i> <a>newGetAggregateConformancePackComplianceSummary</a>
--   smart constructor.
data GetAggregateConformancePackComplianceSummary
GetAggregateConformancePackComplianceSummary' :: Maybe AggregateConformancePackComplianceSummaryFilters -> Maybe Text -> Maybe Natural -> Maybe AggregateConformancePackComplianceSummaryGroupKey -> Text -> GetAggregateConformancePackComplianceSummary

-- | Filters the results based on the
--   <tt>AggregateConformancePackComplianceSummaryFilters</tt> object.
[$sel:filters:GetAggregateConformancePackComplianceSummary'] :: GetAggregateConformancePackComplianceSummary -> Maybe AggregateConformancePackComplianceSummaryFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateConformancePackComplianceSummary'] :: GetAggregateConformancePackComplianceSummary -> Maybe Text

-- | The maximum number of results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
[$sel:limit:GetAggregateConformancePackComplianceSummary'] :: GetAggregateConformancePackComplianceSummary -> Maybe Natural

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
[$sel:groupByKey:GetAggregateConformancePackComplianceSummary'] :: GetAggregateConformancePackComplianceSummary -> Maybe AggregateConformancePackComplianceSummaryGroupKey

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:GetAggregateConformancePackComplianceSummary'] :: GetAggregateConformancePackComplianceSummary -> Text

-- | Create a value of <a>GetAggregateConformancePackComplianceSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_filters</a> - Filters
--   the results based on the
--   <tt>AggregateConformancePackComplianceSummaryFilters</tt> object.
--   
--   <a>$sel:nextToken:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_limit</a> - The
--   maximum number of results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_groupByKey</a> -
--   Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateConformancePackComplianceSummary :: Text -> GetAggregateConformancePackComplianceSummary

-- | Filters the results based on the
--   <tt>AggregateConformancePackComplianceSummaryFilters</tt> object.
getAggregateConformancePackComplianceSummary_filters :: Lens' GetAggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceSummaryFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConformancePackComplianceSummary_nextToken :: Lens' GetAggregateConformancePackComplianceSummary (Maybe Text)

-- | The maximum number of results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
getAggregateConformancePackComplianceSummary_limit :: Lens' GetAggregateConformancePackComplianceSummary (Maybe Natural)

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
getAggregateConformancePackComplianceSummary_groupByKey :: Lens' GetAggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceSummaryGroupKey)

-- | The name of the configuration aggregator.
getAggregateConformancePackComplianceSummary_configurationAggregatorName :: Lens' GetAggregateConformancePackComplianceSummary Text

-- | <i>See:</i>
--   <a>newGetAggregateConformancePackComplianceSummaryResponse</a> smart
--   constructor.
data GetAggregateConformancePackComplianceSummaryResponse
GetAggregateConformancePackComplianceSummaryResponse' :: Maybe Text -> Maybe [AggregateConformancePackComplianceSummary] -> Maybe Text -> Int -> GetAggregateConformancePackComplianceSummaryResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateConformancePackComplianceSummaryResponse'] :: GetAggregateConformancePackComplianceSummaryResponse -> Maybe Text

-- | Returns a list of <tt>AggregateConformancePackComplianceSummary</tt>
--   object.
[$sel:aggregateConformancePackComplianceSummaries:GetAggregateConformancePackComplianceSummaryResponse'] :: GetAggregateConformancePackComplianceSummaryResponse -> Maybe [AggregateConformancePackComplianceSummary]

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
[$sel:groupByKey:GetAggregateConformancePackComplianceSummaryResponse'] :: GetAggregateConformancePackComplianceSummaryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAggregateConformancePackComplianceSummaryResponse'] :: GetAggregateConformancePackComplianceSummaryResponse -> Int

-- | Create a value of
--   <a>GetAggregateConformancePackComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateConformancePackComplianceSummaries:GetAggregateConformancePackComplianceSummaryResponse'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_aggregateConformancePackComplianceSummaries</a>
--   - Returns a list of <tt>AggregateConformancePackComplianceSummary</tt>
--   object.
--   
--   <a>$sel:groupByKey:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_groupByKey</a>
--   - Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
--   
--   
--   <a>$sel:httpStatus:GetAggregateConformancePackComplianceSummaryResponse'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_httpStatus</a>
--   - The response's http status code.
newGetAggregateConformancePackComplianceSummaryResponse :: Int -> GetAggregateConformancePackComplianceSummaryResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConformancePackComplianceSummaryResponse_nextToken :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe Text)

-- | Returns a list of <tt>AggregateConformancePackComplianceSummary</tt>
--   object.
getAggregateConformancePackComplianceSummaryResponse_aggregateConformancePackComplianceSummaries :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe [AggregateConformancePackComplianceSummary])

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
getAggregateConformancePackComplianceSummaryResponse_groupByKey :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getAggregateConformancePackComplianceSummaryResponse_httpStatus :: Lens' GetAggregateConformancePackComplianceSummaryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance GHC.Show.Show Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance GHC.Read.Read Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummaryResponse
instance GHC.Show.Show Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummaryResponse
instance GHC.Read.Read Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummaryResponse
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetAggregateConformancePackComplianceSummary.GetAggregateConformancePackComplianceSummary


-- | Returns the number of compliant and noncompliant rules for one or more
--   accounts and regions in an aggregator.
--   
--   The results can return an empty result page, but if you have a
--   nextToken, the results are displayed on the next page.
module Network.AWS.Config.GetAggregateConfigRuleComplianceSummary

-- | <i>See:</i> <a>newGetAggregateConfigRuleComplianceSummary</a> smart
--   constructor.
data GetAggregateConfigRuleComplianceSummary
GetAggregateConfigRuleComplianceSummary' :: Maybe ConfigRuleComplianceSummaryFilters -> Maybe Text -> Maybe Natural -> Maybe ConfigRuleComplianceSummaryGroupKey -> Text -> GetAggregateConfigRuleComplianceSummary

-- | Filters the results based on the ConfigRuleComplianceSummaryFilters
--   object.
[$sel:filters:GetAggregateConfigRuleComplianceSummary'] :: GetAggregateConfigRuleComplianceSummary -> Maybe ConfigRuleComplianceSummaryFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateConfigRuleComplianceSummary'] :: GetAggregateConfigRuleComplianceSummary -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is 1000. You cannot specify a number greater than 1000. If you
--   specify 0, Config uses the default.
[$sel:limit:GetAggregateConfigRuleComplianceSummary'] :: GetAggregateConfigRuleComplianceSummary -> Maybe Natural

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
[$sel:groupByKey:GetAggregateConfigRuleComplianceSummary'] :: GetAggregateConfigRuleComplianceSummary -> Maybe ConfigRuleComplianceSummaryGroupKey

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:GetAggregateConfigRuleComplianceSummary'] :: GetAggregateConfigRuleComplianceSummary -> Text

-- | Create a value of <a>GetAggregateConfigRuleComplianceSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_filters</a> - Filters the
--   results based on the ConfigRuleComplianceSummaryFilters object.
--   
--   <a>$sel:nextToken:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is
--   1000. You cannot specify a number greater than 1000. If you specify 0,
--   Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_groupByKey</a> - Groups the
--   result based on ACCOUNT_ID or AWS_REGION.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateConfigRuleComplianceSummary :: Text -> GetAggregateConfigRuleComplianceSummary

-- | Filters the results based on the ConfigRuleComplianceSummaryFilters
--   object.
getAggregateConfigRuleComplianceSummary_filters :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe ConfigRuleComplianceSummaryFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConfigRuleComplianceSummary_nextToken :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 1000. You cannot specify a number greater than 1000. If you
--   specify 0, Config uses the default.
getAggregateConfigRuleComplianceSummary_limit :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe Natural)

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
getAggregateConfigRuleComplianceSummary_groupByKey :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe ConfigRuleComplianceSummaryGroupKey)

-- | The name of the configuration aggregator.
getAggregateConfigRuleComplianceSummary_configurationAggregatorName :: Lens' GetAggregateConfigRuleComplianceSummary Text

-- | <i>See:</i> <a>newGetAggregateConfigRuleComplianceSummaryResponse</a>
--   smart constructor.
data GetAggregateConfigRuleComplianceSummaryResponse
GetAggregateConfigRuleComplianceSummaryResponse' :: Maybe [AggregateComplianceCount] -> Maybe Text -> Maybe Text -> Int -> GetAggregateConfigRuleComplianceSummaryResponse

-- | Returns a list of AggregateComplianceCounts object.
[$sel:aggregateComplianceCounts:GetAggregateConfigRuleComplianceSummaryResponse'] :: GetAggregateConfigRuleComplianceSummaryResponse -> Maybe [AggregateComplianceCount]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateConfigRuleComplianceSummaryResponse'] :: GetAggregateConfigRuleComplianceSummaryResponse -> Maybe Text

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
[$sel:groupByKey:GetAggregateConfigRuleComplianceSummaryResponse'] :: GetAggregateConfigRuleComplianceSummaryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAggregateConfigRuleComplianceSummaryResponse'] :: GetAggregateConfigRuleComplianceSummaryResponse -> Int

-- | Create a value of
--   <a>GetAggregateConfigRuleComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregateComplianceCounts:GetAggregateConfigRuleComplianceSummaryResponse'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_aggregateComplianceCounts</a>
--   - Returns a list of AggregateComplianceCounts object.
--   
--   <a>$sel:nextToken:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:groupByKey:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_groupByKey</a> -
--   Groups the result based on ACCOUNT_ID or AWS_REGION.
--   
--   
--   <a>$sel:httpStatus:GetAggregateConfigRuleComplianceSummaryResponse'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_httpStatus</a> -
--   The response's http status code.
newGetAggregateConfigRuleComplianceSummaryResponse :: Int -> GetAggregateConfigRuleComplianceSummaryResponse

-- | Returns a list of AggregateComplianceCounts object.
getAggregateConfigRuleComplianceSummaryResponse_aggregateComplianceCounts :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe [AggregateComplianceCount])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConfigRuleComplianceSummaryResponse_nextToken :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe Text)

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
getAggregateConfigRuleComplianceSummaryResponse_groupByKey :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getAggregateConfigRuleComplianceSummaryResponse_httpStatus :: Lens' GetAggregateConfigRuleComplianceSummaryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance GHC.Show.Show Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance GHC.Read.Read Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummaryResponse
instance GHC.Show.Show Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummaryResponse
instance GHC.Read.Read Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummaryResponse
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetAggregateConfigRuleComplianceSummary.GetAggregateConfigRuleComplianceSummary


-- | Returns the evaluation results for the specified Config rule for a
--   specific resource in a rule. The results indicate which Amazon Web
--   Services resources were evaluated by the rule, when each resource was
--   last evaluated, and whether each resource complies with the rule.
--   
--   The results can return an empty result page. But if you have a
--   <tt>nextToken</tt>, the results are displayed on the next page.
--   
--   This operation returns paginated results.
module Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule

-- | <i>See:</i> <a>newGetAggregateComplianceDetailsByConfigRule</a> smart
--   constructor.
data GetAggregateComplianceDetailsByConfigRule
GetAggregateComplianceDetailsByConfigRule' :: Maybe Text -> Maybe Natural -> Maybe ComplianceType -> Text -> Text -> Text -> Text -> GetAggregateComplianceDetailsByConfigRule

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is 50. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Maybe Natural

-- | The resource compliance status.
--   
--   For the <tt>GetAggregateComplianceDetailsByConfigRuleRequest</tt> data
--   type, Config supports only the <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. Config does not support the
--   <tt>NOT_APPLICABLE</tt> and <tt>INSUFFICIENT_DATA</tt> values.
[$sel:complianceType:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Maybe ComplianceType

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Text

-- | The name of the Config rule for which you want compliance information.
[$sel:configRuleName:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Text

-- | The 12-digit account ID of the source account.
[$sel:accountId:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Text

-- | The source region from where the data is aggregated.
[$sel:awsRegion:GetAggregateComplianceDetailsByConfigRule'] :: GetAggregateComplianceDetailsByConfigRule -> Text

-- | Create a value of <a>GetAggregateComplianceDetailsByConfigRule</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is 50.
--   You cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:complianceType:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_complianceType</a> - The
--   resource compliance status.
--   
--   For the <tt>GetAggregateComplianceDetailsByConfigRuleRequest</tt> data
--   type, Config supports only the <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. Config does not support the
--   <tt>NOT_APPLICABLE</tt> and <tt>INSUFFICIENT_DATA</tt> values.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
--   
--   <a>$sel:configRuleName:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_configRuleName</a> - The
--   name of the Config rule for which you want compliance information.
--   
--   <a>$sel:accountId:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_accountId</a> - The
--   12-digit account ID of the source account.
--   
--   <a>$sel:awsRegion:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_awsRegion</a> - The
--   source region from where the data is aggregated.
newGetAggregateComplianceDetailsByConfigRule :: Text -> Text -> Text -> Text -> GetAggregateComplianceDetailsByConfigRule

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateComplianceDetailsByConfigRule_nextToken :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 50. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getAggregateComplianceDetailsByConfigRule_limit :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe Natural)

-- | The resource compliance status.
--   
--   For the <tt>GetAggregateComplianceDetailsByConfigRuleRequest</tt> data
--   type, Config supports only the <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. Config does not support the
--   <tt>NOT_APPLICABLE</tt> and <tt>INSUFFICIENT_DATA</tt> values.
getAggregateComplianceDetailsByConfigRule_complianceType :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe ComplianceType)

-- | The name of the configuration aggregator.
getAggregateComplianceDetailsByConfigRule_configurationAggregatorName :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The name of the Config rule for which you want compliance information.
getAggregateComplianceDetailsByConfigRule_configRuleName :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The 12-digit account ID of the source account.
getAggregateComplianceDetailsByConfigRule_accountId :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The source region from where the data is aggregated.
getAggregateComplianceDetailsByConfigRule_awsRegion :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | <i>See:</i>
--   <a>newGetAggregateComplianceDetailsByConfigRuleResponse</a> smart
--   constructor.
data GetAggregateComplianceDetailsByConfigRuleResponse
GetAggregateComplianceDetailsByConfigRuleResponse' :: Maybe Text -> Maybe [AggregateEvaluationResult] -> Int -> GetAggregateComplianceDetailsByConfigRuleResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:GetAggregateComplianceDetailsByConfigRuleResponse'] :: GetAggregateComplianceDetailsByConfigRuleResponse -> Maybe Text

-- | Returns an AggregateEvaluationResults object.
[$sel:aggregateEvaluationResults:GetAggregateComplianceDetailsByConfigRuleResponse'] :: GetAggregateComplianceDetailsByConfigRuleResponse -> Maybe [AggregateEvaluationResult]

-- | The response's http status code.
[$sel:httpStatus:GetAggregateComplianceDetailsByConfigRuleResponse'] :: GetAggregateComplianceDetailsByConfigRuleResponse -> Int

-- | Create a value of
--   <a>GetAggregateComplianceDetailsByConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_nextToken</a> -
--   The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateEvaluationResults:GetAggregateComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_aggregateEvaluationResults</a>
--   - Returns an AggregateEvaluationResults object.
--   
--   
--   <a>$sel:httpStatus:GetAggregateComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_httpStatus</a> -
--   The response's http status code.
newGetAggregateComplianceDetailsByConfigRuleResponse :: Int -> GetAggregateComplianceDetailsByConfigRuleResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateComplianceDetailsByConfigRuleResponse_nextToken :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse (Maybe Text)

-- | Returns an AggregateEvaluationResults object.
getAggregateComplianceDetailsByConfigRuleResponse_aggregateEvaluationResults :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse (Maybe [AggregateEvaluationResult])

-- | The response's http status code.
getAggregateComplianceDetailsByConfigRuleResponse_httpStatus :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance GHC.Show.Show Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance GHC.Read.Read Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance GHC.Generics.Generic Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRuleResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.GetAggregateComplianceDetailsByConfigRule.GetAggregateComplianceDetailsByConfigRule


-- | Returns the details of one or more retention configurations. If the
--   retention configuration name is not specified, this action returns the
--   details for all the retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeRetentionConfigurations

-- | <i>See:</i> <a>newDescribeRetentionConfigurations</a> smart
--   constructor.
data DescribeRetentionConfigurations
DescribeRetentionConfigurations' :: Maybe [Text] -> Maybe Text -> DescribeRetentionConfigurations

-- | A list of names of retention configurations for which you want
--   details. If you do not specify a name, Config returns details for all
--   the retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
[$sel:retentionConfigurationNames:DescribeRetentionConfigurations'] :: DescribeRetentionConfigurations -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeRetentionConfigurations'] :: DescribeRetentionConfigurations -> Maybe Text

-- | Create a value of <a>DescribeRetentionConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:retentionConfigurationNames:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurations_retentionConfigurationNames</a> - A
--   list of names of retention configurations for which you want details.
--   If you do not specify a name, Config returns details for all the
--   retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
--   
--   <a>$sel:nextToken:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurations_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
newDescribeRetentionConfigurations :: DescribeRetentionConfigurations

-- | A list of names of retention configurations for which you want
--   details. If you do not specify a name, Config returns details for all
--   the retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
describeRetentionConfigurations_retentionConfigurationNames :: Lens' DescribeRetentionConfigurations (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRetentionConfigurations_nextToken :: Lens' DescribeRetentionConfigurations (Maybe Text)

-- | <i>See:</i> <a>newDescribeRetentionConfigurationsResponse</a> smart
--   constructor.
data DescribeRetentionConfigurationsResponse
DescribeRetentionConfigurationsResponse' :: Maybe [RetentionConfiguration] -> Maybe Text -> Int -> DescribeRetentionConfigurationsResponse

-- | Returns a retention configuration object.
[$sel:retentionConfigurations:DescribeRetentionConfigurationsResponse'] :: DescribeRetentionConfigurationsResponse -> Maybe [RetentionConfiguration]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeRetentionConfigurationsResponse'] :: DescribeRetentionConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeRetentionConfigurationsResponse'] :: DescribeRetentionConfigurationsResponse -> Int

-- | Create a value of <a>DescribeRetentionConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:retentionConfigurations:DescribeRetentionConfigurationsResponse'</a>,
--   <a>describeRetentionConfigurationsResponse_retentionConfigurations</a>
--   - Returns a retention configuration object.
--   
--   <a>$sel:nextToken:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeRetentionConfigurationsResponse'</a>,
--   <a>describeRetentionConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRetentionConfigurationsResponse :: Int -> DescribeRetentionConfigurationsResponse

-- | Returns a retention configuration object.
describeRetentionConfigurationsResponse_retentionConfigurations :: Lens' DescribeRetentionConfigurationsResponse (Maybe [RetentionConfiguration])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRetentionConfigurationsResponse_nextToken :: Lens' DescribeRetentionConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeRetentionConfigurationsResponse_httpStatus :: Lens' DescribeRetentionConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance GHC.Show.Show Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance GHC.Read.Read Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance GHC.Classes.Eq Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance GHC.Generics.Generic Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurationsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurationsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeRetentionConfigurations.DescribeRetentionConfigurations


-- | Provides a detailed view of a Remediation Execution for a set of
--   resources including state, timestamps for when steps for the
--   remediation execution occur, and any error messages for steps that
--   have failed. When you specify the limit and the next token, you
--   receive a paginated response.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeRemediationExecutionStatus

-- | <i>See:</i> <a>newDescribeRemediationExecutionStatus</a> smart
--   constructor.
data DescribeRemediationExecutionStatus
DescribeRemediationExecutionStatus' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty ResourceKey) -> Text -> DescribeRemediationExecutionStatus

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeRemediationExecutionStatus'] :: DescribeRemediationExecutionStatus -> Maybe Text

-- | The maximum number of RemediationExecutionStatuses returned on each
--   page. The default is maximum. If you specify 0, Config uses the
--   default.
[$sel:limit:DescribeRemediationExecutionStatus'] :: DescribeRemediationExecutionStatus -> Maybe Natural

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
[$sel:resourceKeys:DescribeRemediationExecutionStatus'] :: DescribeRemediationExecutionStatus -> Maybe (NonEmpty ResourceKey)

-- | A list of Config rule names.
[$sel:configRuleName:DescribeRemediationExecutionStatus'] :: DescribeRemediationExecutionStatus -> Text

-- | Create a value of <a>DescribeRemediationExecutionStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_limit</a> - The maximum number
--   of RemediationExecutionStatuses returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceKeys:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_resourceKeys</a> - A list of
--   resource keys to be processed with the current request. Each element
--   in the list consists of the resource type and resource ID.
--   
--   <a>$sel:configRuleName:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_configRuleName</a> - A list of
--   Config rule names.
newDescribeRemediationExecutionStatus :: Text -> DescribeRemediationExecutionStatus

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRemediationExecutionStatus_nextToken :: Lens' DescribeRemediationExecutionStatus (Maybe Text)

-- | The maximum number of RemediationExecutionStatuses returned on each
--   page. The default is maximum. If you specify 0, Config uses the
--   default.
describeRemediationExecutionStatus_limit :: Lens' DescribeRemediationExecutionStatus (Maybe Natural)

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
describeRemediationExecutionStatus_resourceKeys :: Lens' DescribeRemediationExecutionStatus (Maybe (NonEmpty ResourceKey))

-- | A list of Config rule names.
describeRemediationExecutionStatus_configRuleName :: Lens' DescribeRemediationExecutionStatus Text

-- | <i>See:</i> <a>newDescribeRemediationExecutionStatusResponse</a> smart
--   constructor.
data DescribeRemediationExecutionStatusResponse
DescribeRemediationExecutionStatusResponse' :: Maybe [RemediationExecutionStatus] -> Maybe Text -> Int -> DescribeRemediationExecutionStatusResponse

-- | Returns a list of remediation execution statuses objects.
[$sel:remediationExecutionStatuses:DescribeRemediationExecutionStatusResponse'] :: DescribeRemediationExecutionStatusResponse -> Maybe [RemediationExecutionStatus]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeRemediationExecutionStatusResponse'] :: DescribeRemediationExecutionStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeRemediationExecutionStatusResponse'] :: DescribeRemediationExecutionStatusResponse -> Int

-- | Create a value of <a>DescribeRemediationExecutionStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:remediationExecutionStatuses:DescribeRemediationExecutionStatusResponse'</a>,
--   <a>describeRemediationExecutionStatusResponse_remediationExecutionStatuses</a>
--   - Returns a list of remediation execution statuses objects.
--   
--   <a>$sel:nextToken:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeRemediationExecutionStatusResponse'</a>,
--   <a>describeRemediationExecutionStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationExecutionStatusResponse :: Int -> DescribeRemediationExecutionStatusResponse

-- | Returns a list of remediation execution statuses objects.
describeRemediationExecutionStatusResponse_remediationExecutionStatuses :: Lens' DescribeRemediationExecutionStatusResponse (Maybe [RemediationExecutionStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRemediationExecutionStatusResponse_nextToken :: Lens' DescribeRemediationExecutionStatusResponse (Maybe Text)

-- | The response's http status code.
describeRemediationExecutionStatusResponse_httpStatus :: Lens' DescribeRemediationExecutionStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeRemediationExecutionStatus.DescribeRemediationExecutionStatus


-- | Returns the details of one or more remediation exceptions. A detailed
--   view of a remediation exception for a set of resources that includes
--   an explanation of an exception and the time when the exception will be
--   deleted. When you specify the limit and the next token, you receive a
--   paginated response.
--   
--   Config generates a remediation exception when a problem occurs
--   executing a remediation action to a specific resource. Remediation
--   exceptions blocks auto-remediation until the exception is cleared.
--   
--   When you specify the limit and the next token, you receive a paginated
--   response.
--   
--   Limit and next token are not applicable if you request resources in
--   batch. It is only applicable, when you request all resources.
module Network.AWS.Config.DescribeRemediationExceptions

-- | <i>See:</i> <a>newDescribeRemediationExceptions</a> smart constructor.
data DescribeRemediationExceptions
DescribeRemediationExceptions' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty RemediationExceptionResourceKey) -> Text -> DescribeRemediationExceptions

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeRemediationExceptions'] :: DescribeRemediationExceptions -> Maybe Text

-- | The maximum number of RemediationExceptionResourceKey returned on each
--   page. The default is 25. If you specify 0, Config uses the default.
[$sel:limit:DescribeRemediationExceptions'] :: DescribeRemediationExceptions -> Maybe Natural

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
[$sel:resourceKeys:DescribeRemediationExceptions'] :: DescribeRemediationExceptions -> Maybe (NonEmpty RemediationExceptionResourceKey)

-- | The name of the Config rule.
[$sel:configRuleName:DescribeRemediationExceptions'] :: DescribeRemediationExceptions -> Text

-- | Create a value of <a>DescribeRemediationExceptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_limit</a> - The maximum number of
--   RemediationExceptionResourceKey returned on each page. The default is
--   25. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceKeys:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_resourceKeys</a> - An exception list
--   of resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
--   
--   <a>$sel:configRuleName:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_configRuleName</a> - The name of the
--   Config rule.
newDescribeRemediationExceptions :: Text -> DescribeRemediationExceptions

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeRemediationExceptions_nextToken :: Lens' DescribeRemediationExceptions (Maybe Text)

-- | The maximum number of RemediationExceptionResourceKey returned on each
--   page. The default is 25. If you specify 0, Config uses the default.
describeRemediationExceptions_limit :: Lens' DescribeRemediationExceptions (Maybe Natural)

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
describeRemediationExceptions_resourceKeys :: Lens' DescribeRemediationExceptions (Maybe (NonEmpty RemediationExceptionResourceKey))

-- | The name of the Config rule.
describeRemediationExceptions_configRuleName :: Lens' DescribeRemediationExceptions Text

-- | <i>See:</i> <a>newDescribeRemediationExceptionsResponse</a> smart
--   constructor.
data DescribeRemediationExceptionsResponse
DescribeRemediationExceptionsResponse' :: Maybe Text -> Maybe [RemediationException] -> Int -> DescribeRemediationExceptionsResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeRemediationExceptionsResponse'] :: DescribeRemediationExceptionsResponse -> Maybe Text

-- | Returns a list of remediation exception objects.
[$sel:remediationExceptions:DescribeRemediationExceptionsResponse'] :: DescribeRemediationExceptionsResponse -> Maybe [RemediationException]

-- | The response's http status code.
[$sel:httpStatus:DescribeRemediationExceptionsResponse'] :: DescribeRemediationExceptionsResponse -> Int

-- | Create a value of <a>DescribeRemediationExceptionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   
--   <a>$sel:remediationExceptions:DescribeRemediationExceptionsResponse'</a>,
--   <a>describeRemediationExceptionsResponse_remediationExceptions</a> -
--   Returns a list of remediation exception objects.
--   
--   <a>$sel:httpStatus:DescribeRemediationExceptionsResponse'</a>,
--   <a>describeRemediationExceptionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationExceptionsResponse :: Int -> DescribeRemediationExceptionsResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeRemediationExceptionsResponse_nextToken :: Lens' DescribeRemediationExceptionsResponse (Maybe Text)

-- | Returns a list of remediation exception objects.
describeRemediationExceptionsResponse_remediationExceptions :: Lens' DescribeRemediationExceptionsResponse (Maybe [RemediationException])

-- | The response's http status code.
describeRemediationExceptionsResponse_httpStatus :: Lens' DescribeRemediationExceptionsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptionsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptionsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptionsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeRemediationExceptions.DescribeRemediationExceptions


-- | Returns the details of one or more remediation configurations.
module Network.AWS.Config.DescribeRemediationConfigurations

-- | <i>See:</i> <a>newDescribeRemediationConfigurations</a> smart
--   constructor.
data DescribeRemediationConfigurations
DescribeRemediationConfigurations' :: [Text] -> DescribeRemediationConfigurations

-- | A list of Config rule names of remediation configurations for which
--   you want details.
[$sel:configRuleNames:DescribeRemediationConfigurations'] :: DescribeRemediationConfigurations -> [Text]

-- | Create a value of <a>DescribeRemediationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeRemediationConfigurations'</a>,
--   <a>describeRemediationConfigurations_configRuleNames</a> - A list of
--   Config rule names of remediation configurations for which you want
--   details.
newDescribeRemediationConfigurations :: DescribeRemediationConfigurations

-- | A list of Config rule names of remediation configurations for which
--   you want details.
describeRemediationConfigurations_configRuleNames :: Lens' DescribeRemediationConfigurations [Text]

-- | <i>See:</i> <a>newDescribeRemediationConfigurationsResponse</a> smart
--   constructor.
data DescribeRemediationConfigurationsResponse
DescribeRemediationConfigurationsResponse' :: Maybe [RemediationConfiguration] -> Int -> DescribeRemediationConfigurationsResponse

-- | Returns a remediation configuration object.
[$sel:remediationConfigurations:DescribeRemediationConfigurationsResponse'] :: DescribeRemediationConfigurationsResponse -> Maybe [RemediationConfiguration]

-- | The response's http status code.
[$sel:httpStatus:DescribeRemediationConfigurationsResponse'] :: DescribeRemediationConfigurationsResponse -> Int

-- | Create a value of <a>DescribeRemediationConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:remediationConfigurations:DescribeRemediationConfigurationsResponse'</a>,
--   <a>describeRemediationConfigurationsResponse_remediationConfigurations</a>
--   - Returns a remediation configuration object.
--   
--   <a>$sel:httpStatus:DescribeRemediationConfigurationsResponse'</a>,
--   <a>describeRemediationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationConfigurationsResponse :: Int -> DescribeRemediationConfigurationsResponse

-- | Returns a remediation configuration object.
describeRemediationConfigurationsResponse_remediationConfigurations :: Lens' DescribeRemediationConfigurationsResponse (Maybe [RemediationConfiguration])

-- | The response's http status code.
describeRemediationConfigurationsResponse_httpStatus :: Lens' DescribeRemediationConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance GHC.Generics.Generic Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurationsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurationsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeRemediationConfigurations.DescribeRemediationConfigurations


-- | Returns a list of all pending aggregation requests.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribePendingAggregationRequests

-- | <i>See:</i> <a>newDescribePendingAggregationRequests</a> smart
--   constructor.
data DescribePendingAggregationRequests
DescribePendingAggregationRequests' :: Maybe Text -> Maybe Natural -> DescribePendingAggregationRequests

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribePendingAggregationRequests'] :: DescribePendingAggregationRequests -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
[$sel:limit:DescribePendingAggregationRequests'] :: DescribePendingAggregationRequests -> Maybe Natural

-- | Create a value of <a>DescribePendingAggregationRequests</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequests_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequests_limit</a> - The maximum number
--   of evaluation results returned on each page. The default is maximum.
--   If you specify 0, Config uses the default.
newDescribePendingAggregationRequests :: DescribePendingAggregationRequests

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describePendingAggregationRequests_nextToken :: Lens' DescribePendingAggregationRequests (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
describePendingAggregationRequests_limit :: Lens' DescribePendingAggregationRequests (Maybe Natural)

-- | <i>See:</i> <a>newDescribePendingAggregationRequestsResponse</a> smart
--   constructor.
data DescribePendingAggregationRequestsResponse
DescribePendingAggregationRequestsResponse' :: Maybe Text -> Maybe [PendingAggregationRequest] -> Int -> DescribePendingAggregationRequestsResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribePendingAggregationRequestsResponse'] :: DescribePendingAggregationRequestsResponse -> Maybe Text

-- | Returns a PendingAggregationRequests object.
[$sel:pendingAggregationRequests:DescribePendingAggregationRequestsResponse'] :: DescribePendingAggregationRequestsResponse -> Maybe [PendingAggregationRequest]

-- | The response's http status code.
[$sel:httpStatus:DescribePendingAggregationRequestsResponse'] :: DescribePendingAggregationRequestsResponse -> Int

-- | Create a value of <a>DescribePendingAggregationRequestsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequestsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:pendingAggregationRequests:DescribePendingAggregationRequestsResponse'</a>,
--   <a>describePendingAggregationRequestsResponse_pendingAggregationRequests</a>
--   - Returns a PendingAggregationRequests object.
--   
--   <a>$sel:httpStatus:DescribePendingAggregationRequestsResponse'</a>,
--   <a>describePendingAggregationRequestsResponse_httpStatus</a> - The
--   response's http status code.
newDescribePendingAggregationRequestsResponse :: Int -> DescribePendingAggregationRequestsResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describePendingAggregationRequestsResponse_nextToken :: Lens' DescribePendingAggregationRequestsResponse (Maybe Text)

-- | Returns a PendingAggregationRequests object.
describePendingAggregationRequestsResponse_pendingAggregationRequests :: Lens' DescribePendingAggregationRequestsResponse (Maybe [PendingAggregationRequest])

-- | The response's http status code.
describePendingAggregationRequestsResponse_httpStatus :: Lens' DescribePendingAggregationRequestsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance GHC.Show.Show Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance GHC.Read.Read Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance GHC.Classes.Eq Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance GHC.Generics.Generic Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequestsResponse
instance GHC.Show.Show Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequestsResponse
instance GHC.Read.Read Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequestsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequestsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Control.DeepSeq.NFData Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequestsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Control.DeepSeq.NFData Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribePendingAggregationRequests.DescribePendingAggregationRequests


-- | Returns a list of organization conformance packs.
--   
--   When you specify the limit and the next token, you receive a paginated
--   response.
--   
--   Limit and next token are not applicable if you specify organization
--   conformance packs names. They are only applicable, when you request
--   all the organization conformance packs.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeOrganizationConformancePacks

-- | <i>See:</i> <a>newDescribeOrganizationConformancePacks</a> smart
--   constructor.
data DescribeOrganizationConformancePacks
DescribeOrganizationConformancePacks' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeOrganizationConformancePacks

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConformancePacks'] :: DescribeOrganizationConformancePacks -> Maybe Text

-- | The maximum number of organization config packs returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
[$sel:limit:DescribeOrganizationConformancePacks'] :: DescribeOrganizationConformancePacks -> Maybe Natural

-- | The name that you assign to an organization conformance pack.
[$sel:organizationConformancePackNames:DescribeOrganizationConformancePacks'] :: DescribeOrganizationConformancePacks -> Maybe [Text]

-- | Create a value of <a>DescribeOrganizationConformancePacks</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_nextToken</a> - The nextToken
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_limit</a> - The maximum number
--   of organization config packs returned on each page. If you do no
--   specify a number, Config uses the default. The default is 100.
--   
--   
--   <a>$sel:organizationConformancePackNames:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_organizationConformancePackNames</a>
--   - The name that you assign to an organization conformance pack.
newDescribeOrganizationConformancePacks :: DescribeOrganizationConformancePacks

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePacks_nextToken :: Lens' DescribeOrganizationConformancePacks (Maybe Text)

-- | The maximum number of organization config packs returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
describeOrganizationConformancePacks_limit :: Lens' DescribeOrganizationConformancePacks (Maybe Natural)

-- | The name that you assign to an organization conformance pack.
describeOrganizationConformancePacks_organizationConformancePackNames :: Lens' DescribeOrganizationConformancePacks (Maybe [Text])

-- | <i>See:</i> <a>newDescribeOrganizationConformancePacksResponse</a>
--   smart constructor.
data DescribeOrganizationConformancePacksResponse
DescribeOrganizationConformancePacksResponse' :: Maybe [OrganizationConformancePack] -> Maybe Text -> Int -> DescribeOrganizationConformancePacksResponse

-- | Returns a list of OrganizationConformancePacks objects.
[$sel:organizationConformancePacks:DescribeOrganizationConformancePacksResponse'] :: DescribeOrganizationConformancePacksResponse -> Maybe [OrganizationConformancePack]

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConformancePacksResponse'] :: DescribeOrganizationConformancePacksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeOrganizationConformancePacksResponse'] :: DescribeOrganizationConformancePacksResponse -> Int

-- | Create a value of <a>DescribeOrganizationConformancePacksResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePacks:DescribeOrganizationConformancePacksResponse'</a>,
--   <a>describeOrganizationConformancePacksResponse_organizationConformancePacks</a>
--   - Returns a list of OrganizationConformancePacks objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacksResponse_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeOrganizationConformancePacksResponse'</a>,
--   <a>describeOrganizationConformancePacksResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConformancePacksResponse :: Int -> DescribeOrganizationConformancePacksResponse

-- | Returns a list of OrganizationConformancePacks objects.
describeOrganizationConformancePacksResponse_organizationConformancePacks :: Lens' DescribeOrganizationConformancePacksResponse (Maybe [OrganizationConformancePack])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePacksResponse_nextToken :: Lens' DescribeOrganizationConformancePacksResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConformancePacksResponse_httpStatus :: Lens' DescribeOrganizationConformancePacksResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacksResponse
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacksResponse
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacksResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeOrganizationConformancePacks.DescribeOrganizationConformancePacks


-- | Provides organization conformance pack deployment status for an
--   organization.
--   
--   The status is not considered successful until organization conformance
--   pack is successfully deployed in all the member accounts with an
--   exception of excluded accounts.
--   
--   When you specify the limit and the next token, you receive a paginated
--   response. Limit and next token are not applicable if you specify
--   organization conformance pack names. They are only applicable, when
--   you request all the organization conformance packs.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeOrganizationConformancePackStatuses

-- | <i>See:</i> <a>newDescribeOrganizationConformancePackStatuses</a>
--   smart constructor.
data DescribeOrganizationConformancePackStatuses
DescribeOrganizationConformancePackStatuses' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeOrganizationConformancePackStatuses

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConformancePackStatuses'] :: DescribeOrganizationConformancePackStatuses -> Maybe Text

-- | The maximum number of OrganizationConformancePackStatuses returned on
--   each page. If you do no specify a number, Config uses the default. The
--   default is 100.
[$sel:limit:DescribeOrganizationConformancePackStatuses'] :: DescribeOrganizationConformancePackStatuses -> Maybe Natural

-- | The names of organization conformance packs for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization conformance packs.
[$sel:organizationConformancePackNames:DescribeOrganizationConformancePackStatuses'] :: DescribeOrganizationConformancePackStatuses -> Maybe [Text]

-- | Create a value of <a>DescribeOrganizationConformancePackStatuses</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_limit</a> - The maximum
--   number of OrganizationConformancePackStatuses returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
--   
--   
--   <a>$sel:organizationConformancePackNames:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_organizationConformancePackNames</a>
--   - The names of organization conformance packs for which you want
--   status details. If you do not specify any names, Config returns
--   details for all your organization conformance packs.
newDescribeOrganizationConformancePackStatuses :: DescribeOrganizationConformancePackStatuses

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePackStatuses_nextToken :: Lens' DescribeOrganizationConformancePackStatuses (Maybe Text)

-- | The maximum number of OrganizationConformancePackStatuses returned on
--   each page. If you do no specify a number, Config uses the default. The
--   default is 100.
describeOrganizationConformancePackStatuses_limit :: Lens' DescribeOrganizationConformancePackStatuses (Maybe Natural)

-- | The names of organization conformance packs for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization conformance packs.
describeOrganizationConformancePackStatuses_organizationConformancePackNames :: Lens' DescribeOrganizationConformancePackStatuses (Maybe [Text])

-- | <i>See:</i>
--   <a>newDescribeOrganizationConformancePackStatusesResponse</a> smart
--   constructor.
data DescribeOrganizationConformancePackStatusesResponse
DescribeOrganizationConformancePackStatusesResponse' :: Maybe [OrganizationConformancePackStatus] -> Maybe Text -> Int -> DescribeOrganizationConformancePackStatusesResponse

-- | A list of <tt>OrganizationConformancePackStatus</tt> objects.
[$sel:organizationConformancePackStatuses:DescribeOrganizationConformancePackStatusesResponse'] :: DescribeOrganizationConformancePackStatusesResponse -> Maybe [OrganizationConformancePackStatus]

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConformancePackStatusesResponse'] :: DescribeOrganizationConformancePackStatusesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeOrganizationConformancePackStatusesResponse'] :: DescribeOrganizationConformancePackStatusesResponse -> Int

-- | Create a value of
--   <a>DescribeOrganizationConformancePackStatusesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackStatuses:DescribeOrganizationConformancePackStatusesResponse'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_organizationConformancePackStatuses</a>
--   - A list of <tt>OrganizationConformancePackStatus</tt> objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_nextToken</a> -
--   The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeOrganizationConformancePackStatusesResponse'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_httpStatus</a>
--   - The response's http status code.
newDescribeOrganizationConformancePackStatusesResponse :: Int -> DescribeOrganizationConformancePackStatusesResponse

-- | A list of <tt>OrganizationConformancePackStatus</tt> objects.
describeOrganizationConformancePackStatusesResponse_organizationConformancePackStatuses :: Lens' DescribeOrganizationConformancePackStatusesResponse (Maybe [OrganizationConformancePackStatus])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePackStatusesResponse_nextToken :: Lens' DescribeOrganizationConformancePackStatusesResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConformancePackStatusesResponse_httpStatus :: Lens' DescribeOrganizationConformancePackStatusesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatusesResponse
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatusesResponse
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatusesResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatusesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatusesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeOrganizationConformancePackStatuses.DescribeOrganizationConformancePackStatuses


-- | Returns a list of organization config rules.
--   
--   When you specify the limit and the next token, you receive a paginated
--   response. Limit and next token are not applicable if you specify
--   organization config rule names. It is only applicable, when you
--   request all the organization config rules.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeOrganizationConfigRules

-- | <i>See:</i> <a>newDescribeOrganizationConfigRules</a> smart
--   constructor.
data DescribeOrganizationConfigRules
DescribeOrganizationConfigRules' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeOrganizationConfigRules

-- | The names of organization config rules for which you want details. If
--   you do not specify any names, Config returns details for all your
--   organization config rules.
[$sel:organizationConfigRuleNames:DescribeOrganizationConfigRules'] :: DescribeOrganizationConfigRules -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConfigRules'] :: DescribeOrganizationConfigRules -> Maybe Text

-- | The maximum number of organization config rules returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
[$sel:limit:DescribeOrganizationConfigRules'] :: DescribeOrganizationConfigRules -> Maybe Natural

-- | Create a value of <a>DescribeOrganizationConfigRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleNames:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_organizationConfigRuleNames</a> -
--   The names of organization config rules for which you want details. If
--   you do not specify any names, Config returns details for all your
--   organization config rules.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_limit</a> - The maximum number of
--   organization config rules returned on each page. If you do no specify
--   a number, Config uses the default. The default is 100.
newDescribeOrganizationConfigRules :: DescribeOrganizationConfigRules

-- | The names of organization config rules for which you want details. If
--   you do not specify any names, Config returns details for all your
--   organization config rules.
describeOrganizationConfigRules_organizationConfigRuleNames :: Lens' DescribeOrganizationConfigRules (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRules_nextToken :: Lens' DescribeOrganizationConfigRules (Maybe Text)

-- | The maximum number of organization config rules returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
describeOrganizationConfigRules_limit :: Lens' DescribeOrganizationConfigRules (Maybe Natural)

-- | <i>See:</i> <a>newDescribeOrganizationConfigRulesResponse</a> smart
--   constructor.
data DescribeOrganizationConfigRulesResponse
DescribeOrganizationConfigRulesResponse' :: Maybe [OrganizationConfigRule] -> Maybe Text -> Int -> DescribeOrganizationConfigRulesResponse

-- | Returns a list of <tt>OrganizationConfigRule</tt> objects.
[$sel:organizationConfigRules:DescribeOrganizationConfigRulesResponse'] :: DescribeOrganizationConfigRulesResponse -> Maybe [OrganizationConfigRule]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConfigRulesResponse'] :: DescribeOrganizationConfigRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeOrganizationConfigRulesResponse'] :: DescribeOrganizationConfigRulesResponse -> Int

-- | Create a value of <a>DescribeOrganizationConfigRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRules:DescribeOrganizationConfigRulesResponse'</a>,
--   <a>describeOrganizationConfigRulesResponse_organizationConfigRules</a>
--   - Returns a list of <tt>OrganizationConfigRule</tt> objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRulesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeOrganizationConfigRulesResponse'</a>,
--   <a>describeOrganizationConfigRulesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConfigRulesResponse :: Int -> DescribeOrganizationConfigRulesResponse

-- | Returns a list of <tt>OrganizationConfigRule</tt> objects.
describeOrganizationConfigRulesResponse_organizationConfigRules :: Lens' DescribeOrganizationConfigRulesResponse (Maybe [OrganizationConfigRule])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRulesResponse_nextToken :: Lens' DescribeOrganizationConfigRulesResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConfigRulesResponse_httpStatus :: Lens' DescribeOrganizationConfigRulesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRulesResponse
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRulesResponse
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRulesResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeOrganizationConfigRules.DescribeOrganizationConfigRules


-- | Provides organization config rule deployment status for an
--   organization.
--   
--   The status is not considered successful until organization config rule
--   is successfully deployed in all the member accounts with an exception
--   of excluded accounts.
--   
--   When you specify the limit and the next token, you receive a paginated
--   response. Limit and next token are not applicable if you specify
--   organization config rule names. It is only applicable, when you
--   request all the organization config rules.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeOrganizationConfigRuleStatuses

-- | <i>See:</i> <a>newDescribeOrganizationConfigRuleStatuses</a> smart
--   constructor.
data DescribeOrganizationConfigRuleStatuses
DescribeOrganizationConfigRuleStatuses' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeOrganizationConfigRuleStatuses

-- | The names of organization config rules for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization Config rules.
[$sel:organizationConfigRuleNames:DescribeOrganizationConfigRuleStatuses'] :: DescribeOrganizationConfigRuleStatuses -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConfigRuleStatuses'] :: DescribeOrganizationConfigRuleStatuses -> Maybe Text

-- | The maximum number of <tt>OrganizationConfigRuleStatuses</tt> returned
--   on each page. If you do no specify a number, Config uses the default.
--   The default is 100.
[$sel:limit:DescribeOrganizationConfigRuleStatuses'] :: DescribeOrganizationConfigRuleStatuses -> Maybe Natural

-- | Create a value of <a>DescribeOrganizationConfigRuleStatuses</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleNames:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_organizationConfigRuleNames</a>
--   - The names of organization config rules for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization Config rules.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_limit</a> - The maximum
--   number of <tt>OrganizationConfigRuleStatuses</tt> returned on each
--   page. If you do no specify a number, Config uses the default. The
--   default is 100.
newDescribeOrganizationConfigRuleStatuses :: DescribeOrganizationConfigRuleStatuses

-- | The names of organization config rules for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization Config rules.
describeOrganizationConfigRuleStatuses_organizationConfigRuleNames :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRuleStatuses_nextToken :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe Text)

-- | The maximum number of <tt>OrganizationConfigRuleStatuses</tt> returned
--   on each page. If you do no specify a number, Config uses the default.
--   The default is 100.
describeOrganizationConfigRuleStatuses_limit :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe Natural)

-- | <i>See:</i> <a>newDescribeOrganizationConfigRuleStatusesResponse</a>
--   smart constructor.
data DescribeOrganizationConfigRuleStatusesResponse
DescribeOrganizationConfigRuleStatusesResponse' :: Maybe Text -> Maybe [OrganizationConfigRuleStatus] -> Int -> DescribeOrganizationConfigRuleStatusesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeOrganizationConfigRuleStatusesResponse'] :: DescribeOrganizationConfigRuleStatusesResponse -> Maybe Text

-- | A list of <tt>OrganizationConfigRuleStatus</tt> objects.
[$sel:organizationConfigRuleStatuses:DescribeOrganizationConfigRuleStatusesResponse'] :: DescribeOrganizationConfigRuleStatusesResponse -> Maybe [OrganizationConfigRuleStatus]

-- | The response's http status code.
[$sel:httpStatus:DescribeOrganizationConfigRuleStatusesResponse'] :: DescribeOrganizationConfigRuleStatusesResponse -> Int

-- | Create a value of
--   <a>DescribeOrganizationConfigRuleStatusesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:organizationConfigRuleStatuses:DescribeOrganizationConfigRuleStatusesResponse'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_organizationConfigRuleStatuses</a>
--   - A list of <tt>OrganizationConfigRuleStatus</tt> objects.
--   
--   
--   <a>$sel:httpStatus:DescribeOrganizationConfigRuleStatusesResponse'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConfigRuleStatusesResponse :: Int -> DescribeOrganizationConfigRuleStatusesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRuleStatusesResponse_nextToken :: Lens' DescribeOrganizationConfigRuleStatusesResponse (Maybe Text)

-- | A list of <tt>OrganizationConfigRuleStatus</tt> objects.
describeOrganizationConfigRuleStatusesResponse_organizationConfigRuleStatuses :: Lens' DescribeOrganizationConfigRuleStatusesResponse (Maybe [OrganizationConfigRuleStatus])

-- | The response's http status code.
describeOrganizationConfigRuleStatusesResponse_httpStatus :: Lens' DescribeOrganizationConfigRuleStatusesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance GHC.Generics.Generic Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatusesResponse
instance GHC.Show.Show Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatusesResponse
instance GHC.Read.Read Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatusesResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatusesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatusesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeOrganizationConfigRuleStatuses.DescribeOrganizationConfigRuleStatuses


-- | Returns details about the specified delivery channel. If a delivery
--   channel is not specified, this action returns the details of all
--   delivery channels associated with the account.
--   
--   Currently, you can specify only one delivery channel per region in
--   your account.
module Network.AWS.Config.DescribeDeliveryChannels

-- | The input for the DescribeDeliveryChannels action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannels</a> smart constructor.
data DescribeDeliveryChannels
DescribeDeliveryChannels' :: Maybe [Text] -> DescribeDeliveryChannels

-- | A list of delivery channel names.
[$sel:deliveryChannelNames:DescribeDeliveryChannels'] :: DescribeDeliveryChannels -> Maybe [Text]

-- | Create a value of <a>DescribeDeliveryChannels</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelNames:DescribeDeliveryChannels'</a>,
--   <a>describeDeliveryChannels_deliveryChannelNames</a> - A list of
--   delivery channel names.
newDescribeDeliveryChannels :: DescribeDeliveryChannels

-- | A list of delivery channel names.
describeDeliveryChannels_deliveryChannelNames :: Lens' DescribeDeliveryChannels (Maybe [Text])

-- | The output for the DescribeDeliveryChannels action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelsResponse</a> smart
--   constructor.
data DescribeDeliveryChannelsResponse
DescribeDeliveryChannelsResponse' :: Maybe [DeliveryChannel] -> Int -> DescribeDeliveryChannelsResponse

-- | A list that contains the descriptions of the specified delivery
--   channel.
[$sel:deliveryChannels:DescribeDeliveryChannelsResponse'] :: DescribeDeliveryChannelsResponse -> Maybe [DeliveryChannel]

-- | The response's http status code.
[$sel:httpStatus:DescribeDeliveryChannelsResponse'] :: DescribeDeliveryChannelsResponse -> Int

-- | Create a value of <a>DescribeDeliveryChannelsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannels:DescribeDeliveryChannelsResponse'</a>,
--   <a>describeDeliveryChannelsResponse_deliveryChannels</a> - A list that
--   contains the descriptions of the specified delivery channel.
--   
--   <a>$sel:httpStatus:DescribeDeliveryChannelsResponse'</a>,
--   <a>describeDeliveryChannelsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDeliveryChannelsResponse :: Int -> DescribeDeliveryChannelsResponse

-- | A list that contains the descriptions of the specified delivery
--   channel.
describeDeliveryChannelsResponse_deliveryChannels :: Lens' DescribeDeliveryChannelsResponse (Maybe [DeliveryChannel])

-- | The response's http status code.
describeDeliveryChannelsResponse_httpStatus :: Lens' DescribeDeliveryChannelsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance GHC.Show.Show Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance GHC.Read.Read Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance GHC.Classes.Eq Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance GHC.Generics.Generic Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannelsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannelsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannelsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeDeliveryChannels.DescribeDeliveryChannels


-- | Returns the current status of the specified delivery channel. If a
--   delivery channel is not specified, this action returns the current
--   status of all delivery channels associated with the account.
--   
--   Currently, you can specify only one delivery channel per region in
--   your account.
module Network.AWS.Config.DescribeDeliveryChannelStatus

-- | The input for the DeliveryChannelStatus action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelStatus</a> smart constructor.
data DescribeDeliveryChannelStatus
DescribeDeliveryChannelStatus' :: Maybe [Text] -> DescribeDeliveryChannelStatus

-- | A list of delivery channel names.
[$sel:deliveryChannelNames:DescribeDeliveryChannelStatus'] :: DescribeDeliveryChannelStatus -> Maybe [Text]

-- | Create a value of <a>DescribeDeliveryChannelStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelNames:DescribeDeliveryChannelStatus'</a>,
--   <a>describeDeliveryChannelStatus_deliveryChannelNames</a> - A list of
--   delivery channel names.
newDescribeDeliveryChannelStatus :: DescribeDeliveryChannelStatus

-- | A list of delivery channel names.
describeDeliveryChannelStatus_deliveryChannelNames :: Lens' DescribeDeliveryChannelStatus (Maybe [Text])

-- | The output for the DescribeDeliveryChannelStatus action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelStatusResponse</a> smart
--   constructor.
data DescribeDeliveryChannelStatusResponse
DescribeDeliveryChannelStatusResponse' :: Maybe [DeliveryChannelStatus] -> Int -> DescribeDeliveryChannelStatusResponse

-- | A list that contains the status of a specified delivery channel.
[$sel:deliveryChannelsStatus:DescribeDeliveryChannelStatusResponse'] :: DescribeDeliveryChannelStatusResponse -> Maybe [DeliveryChannelStatus]

-- | The response's http status code.
[$sel:httpStatus:DescribeDeliveryChannelStatusResponse'] :: DescribeDeliveryChannelStatusResponse -> Int

-- | Create a value of <a>DescribeDeliveryChannelStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:deliveryChannelsStatus:DescribeDeliveryChannelStatusResponse'</a>,
--   <a>describeDeliveryChannelStatusResponse_deliveryChannelsStatus</a> -
--   A list that contains the status of a specified delivery channel.
--   
--   <a>$sel:httpStatus:DescribeDeliveryChannelStatusResponse'</a>,
--   <a>describeDeliveryChannelStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDeliveryChannelStatusResponse :: Int -> DescribeDeliveryChannelStatusResponse

-- | A list that contains the status of a specified delivery channel.
describeDeliveryChannelStatusResponse_deliveryChannelsStatus :: Lens' DescribeDeliveryChannelStatusResponse (Maybe [DeliveryChannelStatus])

-- | The response's http status code.
describeDeliveryChannelStatusResponse_httpStatus :: Lens' DescribeDeliveryChannelStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance GHC.Show.Show Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance GHC.Read.Read Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeDeliveryChannelStatus.DescribeDeliveryChannelStatus


-- | Returns a list of one or more conformance packs.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConformancePacks

-- | <i>See:</i> <a>newDescribeConformancePacks</a> smart constructor.
data DescribeConformancePacks
DescribeConformancePacks' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConformancePacks

-- | Comma-separated list of conformance pack names for which you want
--   details. If you do not specify any names, Config returns details for
--   all your conformance packs.
[$sel:conformancePackNames:DescribeConformancePacks'] :: DescribeConformancePacks -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePacks'] :: DescribeConformancePacks -> Maybe Text

-- | The maximum number of conformance packs returned on each page.
[$sel:limit:DescribeConformancePacks'] :: DescribeConformancePacks -> Maybe Natural

-- | Create a value of <a>DescribeConformancePacks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackNames:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_conformancePackNames</a> - Comma-separated
--   list of conformance pack names for which you want details. If you do
--   not specify any names, Config returns details for all your conformance
--   packs.
--   
--   <a>$sel:nextToken:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_nextToken</a> - The <tt>nextToken</tt>
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_limit</a> - The maximum number of
--   conformance packs returned on each page.
newDescribeConformancePacks :: DescribeConformancePacks

-- | Comma-separated list of conformance pack names for which you want
--   details. If you do not specify any names, Config returns details for
--   all your conformance packs.
describeConformancePacks_conformancePackNames :: Lens' DescribeConformancePacks (Maybe [Text])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePacks_nextToken :: Lens' DescribeConformancePacks (Maybe Text)

-- | The maximum number of conformance packs returned on each page.
describeConformancePacks_limit :: Lens' DescribeConformancePacks (Maybe Natural)

-- | <i>See:</i> <a>newDescribeConformancePacksResponse</a> smart
--   constructor.
data DescribeConformancePacksResponse
DescribeConformancePacksResponse' :: Maybe Text -> Maybe [ConformancePackDetail] -> Int -> DescribeConformancePacksResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePacksResponse'] :: DescribeConformancePacksResponse -> Maybe Text

-- | Returns a list of <tt>ConformancePackDetail</tt> objects.
[$sel:conformancePackDetails:DescribeConformancePacksResponse'] :: DescribeConformancePacksResponse -> Maybe [ConformancePackDetail]

-- | The response's http status code.
[$sel:httpStatus:DescribeConformancePacksResponse'] :: DescribeConformancePacksResponse -> Int

-- | Create a value of <a>DescribeConformancePacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConformancePacks'</a>,
--   <a>describeConformancePacksResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:conformancePackDetails:DescribeConformancePacksResponse'</a>,
--   <a>describeConformancePacksResponse_conformancePackDetails</a> -
--   Returns a list of <tt>ConformancePackDetail</tt> objects.
--   
--   <a>$sel:httpStatus:DescribeConformancePacksResponse'</a>,
--   <a>describeConformancePacksResponse_httpStatus</a> - The response's
--   http status code.
newDescribeConformancePacksResponse :: Int -> DescribeConformancePacksResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePacksResponse_nextToken :: Lens' DescribeConformancePacksResponse (Maybe Text)

-- | Returns a list of <tt>ConformancePackDetail</tt> objects.
describeConformancePacksResponse_conformancePackDetails :: Lens' DescribeConformancePacksResponse (Maybe [ConformancePackDetail])

-- | The response's http status code.
describeConformancePacksResponse_httpStatus :: Lens' DescribeConformancePacksResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacksResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacksResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacksResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConformancePacks.DescribeConformancePacks


-- | Provides one or more conformance packs deployment status.
--   
--   If there are no conformance packs then you will see an empty result.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConformancePackStatus

-- | <i>See:</i> <a>newDescribeConformancePackStatus</a> smart constructor.
data DescribeConformancePackStatus
DescribeConformancePackStatus' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConformancePackStatus

-- | Comma-separated list of conformance pack names.
[$sel:conformancePackNames:DescribeConformancePackStatus'] :: DescribeConformancePackStatus -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePackStatus'] :: DescribeConformancePackStatus -> Maybe Text

-- | The maximum number of conformance packs status returned on each page.
[$sel:limit:DescribeConformancePackStatus'] :: DescribeConformancePackStatus -> Maybe Natural

-- | Create a value of <a>DescribeConformancePackStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackNames:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_conformancePackNames</a> -
--   Comma-separated list of conformance pack names.
--   
--   <a>$sel:nextToken:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_limit</a> - The maximum number of
--   conformance packs status returned on each page.
newDescribeConformancePackStatus :: DescribeConformancePackStatus

-- | Comma-separated list of conformance pack names.
describeConformancePackStatus_conformancePackNames :: Lens' DescribeConformancePackStatus (Maybe [Text])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackStatus_nextToken :: Lens' DescribeConformancePackStatus (Maybe Text)

-- | The maximum number of conformance packs status returned on each page.
describeConformancePackStatus_limit :: Lens' DescribeConformancePackStatus (Maybe Natural)

-- | <i>See:</i> <a>newDescribeConformancePackStatusResponse</a> smart
--   constructor.
data DescribeConformancePackStatusResponse
DescribeConformancePackStatusResponse' :: Maybe [ConformancePackStatusDetail] -> Maybe Text -> Int -> DescribeConformancePackStatusResponse

-- | A list of <tt>ConformancePackStatusDetail</tt> objects.
[$sel:conformancePackStatusDetails:DescribeConformancePackStatusResponse'] :: DescribeConformancePackStatusResponse -> Maybe [ConformancePackStatusDetail]

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePackStatusResponse'] :: DescribeConformancePackStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConformancePackStatusResponse'] :: DescribeConformancePackStatusResponse -> Int

-- | Create a value of <a>DescribeConformancePackStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackStatusDetails:DescribeConformancePackStatusResponse'</a>,
--   <a>describeConformancePackStatusResponse_conformancePackStatusDetails</a>
--   - A list of <tt>ConformancePackStatusDetail</tt> objects.
--   
--   <a>$sel:nextToken:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConformancePackStatusResponse'</a>,
--   <a>describeConformancePackStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConformancePackStatusResponse :: Int -> DescribeConformancePackStatusResponse

-- | A list of <tt>ConformancePackStatusDetail</tt> objects.
describeConformancePackStatusResponse_conformancePackStatusDetails :: Lens' DescribeConformancePackStatusResponse (Maybe [ConformancePackStatusDetail])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackStatusResponse_nextToken :: Lens' DescribeConformancePackStatusResponse (Maybe Text)

-- | The response's http status code.
describeConformancePackStatusResponse_httpStatus :: Lens' DescribeConformancePackStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConformancePackStatus.DescribeConformancePackStatus


-- | Returns compliance details for each rule in that conformance pack.
--   
--   You must provide exact rule names.
module Network.AWS.Config.DescribeConformancePackCompliance

-- | <i>See:</i> <a>newDescribeConformancePackCompliance</a> smart
--   constructor.
data DescribeConformancePackCompliance
DescribeConformancePackCompliance' :: Maybe ConformancePackComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeConformancePackCompliance

-- | A <tt>ConformancePackComplianceFilters</tt> object.
[$sel:filters:DescribeConformancePackCompliance'] :: DescribeConformancePackCompliance -> Maybe ConformancePackComplianceFilters

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePackCompliance'] :: DescribeConformancePackCompliance -> Maybe Text

-- | The maximum number of Config rules within a conformance pack are
--   returned on each page.
[$sel:limit:DescribeConformancePackCompliance'] :: DescribeConformancePackCompliance -> Maybe Natural

-- | Name of the conformance pack.
[$sel:conformancePackName:DescribeConformancePackCompliance'] :: DescribeConformancePackCompliance -> Text

-- | Create a value of <a>DescribeConformancePackCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_filters</a> - A
--   <tt>ConformancePackComplianceFilters</tt> object.
--   
--   <a>$sel:nextToken:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_limit</a> - The maximum number of
--   Config rules within a conformance pack are returned on each page.
--   
--   <a>$sel:conformancePackName:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_conformancePackName</a> - Name of
--   the conformance pack.
newDescribeConformancePackCompliance :: Text -> DescribeConformancePackCompliance

-- | A <tt>ConformancePackComplianceFilters</tt> object.
describeConformancePackCompliance_filters :: Lens' DescribeConformancePackCompliance (Maybe ConformancePackComplianceFilters)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackCompliance_nextToken :: Lens' DescribeConformancePackCompliance (Maybe Text)

-- | The maximum number of Config rules within a conformance pack are
--   returned on each page.
describeConformancePackCompliance_limit :: Lens' DescribeConformancePackCompliance (Maybe Natural)

-- | Name of the conformance pack.
describeConformancePackCompliance_conformancePackName :: Lens' DescribeConformancePackCompliance Text

-- | <i>See:</i> <a>newDescribeConformancePackComplianceResponse</a> smart
--   constructor.
data DescribeConformancePackComplianceResponse
DescribeConformancePackComplianceResponse' :: Maybe Text -> Int -> Text -> [ConformancePackRuleCompliance] -> DescribeConformancePackComplianceResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
[$sel:nextToken:DescribeConformancePackComplianceResponse'] :: DescribeConformancePackComplianceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConformancePackComplianceResponse'] :: DescribeConformancePackComplianceResponse -> Int

-- | Name of the conformance pack.
[$sel:conformancePackName:DescribeConformancePackComplianceResponse'] :: DescribeConformancePackComplianceResponse -> Text

-- | Returns a list of <tt>ConformancePackRuleCompliance</tt> objects.
[$sel:conformancePackRuleComplianceList:DescribeConformancePackComplianceResponse'] :: DescribeConformancePackComplianceResponse -> [ConformancePackRuleCompliance]

-- | Create a value of <a>DescribeConformancePackComplianceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackComplianceResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConformancePackComplianceResponse'</a>,
--   <a>describeConformancePackComplianceResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:conformancePackName:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackComplianceResponse_conformancePackName</a> -
--   Name of the conformance pack.
--   
--   
--   <a>$sel:conformancePackRuleComplianceList:DescribeConformancePackComplianceResponse'</a>,
--   <a>describeConformancePackComplianceResponse_conformancePackRuleComplianceList</a>
--   - Returns a list of <tt>ConformancePackRuleCompliance</tt> objects.
newDescribeConformancePackComplianceResponse :: Int -> Text -> DescribeConformancePackComplianceResponse

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackComplianceResponse_nextToken :: Lens' DescribeConformancePackComplianceResponse (Maybe Text)

-- | The response's http status code.
describeConformancePackComplianceResponse_httpStatus :: Lens' DescribeConformancePackComplianceResponse Int

-- | Name of the conformance pack.
describeConformancePackComplianceResponse_conformancePackName :: Lens' DescribeConformancePackComplianceResponse Text

-- | Returns a list of <tt>ConformancePackRuleCompliance</tt> objects.
describeConformancePackComplianceResponse_conformancePackRuleComplianceList :: Lens' DescribeConformancePackComplianceResponse [ConformancePackRuleCompliance]
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance GHC.Generics.Generic Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackComplianceResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackComplianceResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackComplianceResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackComplianceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackComplianceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConformancePackCompliance.DescribeConformancePackCompliance


-- | Returns the details for the specified configuration recorders. If the
--   configuration recorder is not specified, this action returns the
--   details for all configuration recorders associated with the account.
--   
--   Currently, you can specify only one configuration recorder per region
--   in your account.
module Network.AWS.Config.DescribeConfigurationRecorders

-- | The input for the DescribeConfigurationRecorders action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorders</a> smart
--   constructor.
data DescribeConfigurationRecorders
DescribeConfigurationRecorders' :: Maybe [Text] -> DescribeConfigurationRecorders

-- | A list of configuration recorder names.
[$sel:configurationRecorderNames:DescribeConfigurationRecorders'] :: DescribeConfigurationRecorders -> Maybe [Text]

-- | Create a value of <a>DescribeConfigurationRecorders</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorderNames:DescribeConfigurationRecorders'</a>,
--   <a>describeConfigurationRecorders_configurationRecorderNames</a> - A
--   list of configuration recorder names.
newDescribeConfigurationRecorders :: DescribeConfigurationRecorders

-- | A list of configuration recorder names.
describeConfigurationRecorders_configurationRecorderNames :: Lens' DescribeConfigurationRecorders (Maybe [Text])

-- | The output for the DescribeConfigurationRecorders action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecordersResponse</a> smart
--   constructor.
data DescribeConfigurationRecordersResponse
DescribeConfigurationRecordersResponse' :: Maybe [ConfigurationRecorder] -> Int -> DescribeConfigurationRecordersResponse

-- | A list that contains the descriptions of the specified configuration
--   recorders.
[$sel:configurationRecorders:DescribeConfigurationRecordersResponse'] :: DescribeConfigurationRecordersResponse -> Maybe [ConfigurationRecorder]

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationRecordersResponse'] :: DescribeConfigurationRecordersResponse -> Int

-- | Create a value of <a>DescribeConfigurationRecordersResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorders:DescribeConfigurationRecordersResponse'</a>,
--   <a>describeConfigurationRecordersResponse_configurationRecorders</a> -
--   A list that contains the descriptions of the specified configuration
--   recorders.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRecordersResponse'</a>,
--   <a>describeConfigurationRecordersResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRecordersResponse :: Int -> DescribeConfigurationRecordersResponse

-- | A list that contains the descriptions of the specified configuration
--   recorders.
describeConfigurationRecordersResponse_configurationRecorders :: Lens' DescribeConfigurationRecordersResponse (Maybe [ConfigurationRecorder])

-- | The response's http status code.
describeConfigurationRecordersResponse_httpStatus :: Lens' DescribeConfigurationRecordersResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecordersResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecordersResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecordersResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecordersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecordersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigurationRecorders.DescribeConfigurationRecorders


-- | Returns the current status of the specified configuration recorder. If
--   a configuration recorder is not specified, this action returns the
--   status of all configuration recorders associated with the account.
--   
--   Currently, you can specify only one configuration recorder per region
--   in your account.
module Network.AWS.Config.DescribeConfigurationRecorderStatus

-- | The input for the DescribeConfigurationRecorderStatus action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorderStatus</a> smart
--   constructor.
data DescribeConfigurationRecorderStatus
DescribeConfigurationRecorderStatus' :: Maybe [Text] -> DescribeConfigurationRecorderStatus

-- | The name(s) of the configuration recorder. If the name is not
--   specified, the action returns the current status of all the
--   configuration recorders associated with the account.
[$sel:configurationRecorderNames:DescribeConfigurationRecorderStatus'] :: DescribeConfigurationRecorderStatus -> Maybe [Text]

-- | Create a value of <a>DescribeConfigurationRecorderStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorderNames:DescribeConfigurationRecorderStatus'</a>,
--   <a>describeConfigurationRecorderStatus_configurationRecorderNames</a>
--   - The name(s) of the configuration recorder. If the name is not
--   specified, the action returns the current status of all the
--   configuration recorders associated with the account.
newDescribeConfigurationRecorderStatus :: DescribeConfigurationRecorderStatus

-- | The name(s) of the configuration recorder. If the name is not
--   specified, the action returns the current status of all the
--   configuration recorders associated with the account.
describeConfigurationRecorderStatus_configurationRecorderNames :: Lens' DescribeConfigurationRecorderStatus (Maybe [Text])

-- | The output for the DescribeConfigurationRecorderStatus action, in JSON
--   format.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorderStatusResponse</a>
--   smart constructor.
data DescribeConfigurationRecorderStatusResponse
DescribeConfigurationRecorderStatusResponse' :: Maybe [ConfigurationRecorderStatus] -> Int -> DescribeConfigurationRecorderStatusResponse

-- | A list that contains status of the specified recorders.
[$sel:configurationRecordersStatus:DescribeConfigurationRecorderStatusResponse'] :: DescribeConfigurationRecorderStatusResponse -> Maybe [ConfigurationRecorderStatus]

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationRecorderStatusResponse'] :: DescribeConfigurationRecorderStatusResponse -> Int

-- | Create a value of <a>DescribeConfigurationRecorderStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecordersStatus:DescribeConfigurationRecorderStatusResponse'</a>,
--   <a>describeConfigurationRecorderStatusResponse_configurationRecordersStatus</a>
--   - A list that contains status of the specified recorders.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRecorderStatusResponse'</a>,
--   <a>describeConfigurationRecorderStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRecorderStatusResponse :: Int -> DescribeConfigurationRecorderStatusResponse

-- | A list that contains status of the specified recorders.
describeConfigurationRecorderStatusResponse_configurationRecordersStatus :: Lens' DescribeConfigurationRecorderStatusResponse (Maybe [ConfigurationRecorderStatus])

-- | The response's http status code.
describeConfigurationRecorderStatusResponse_httpStatus :: Lens' DescribeConfigurationRecorderStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigurationRecorderStatus.DescribeConfigurationRecorderStatus


-- | Returns the details of one or more configuration aggregators. If the
--   configuration aggregator is not specified, this action returns the
--   details for all the configuration aggregators associated with the
--   account.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConfigurationAggregators

-- | <i>See:</i> <a>newDescribeConfigurationAggregators</a> smart
--   constructor.
data DescribeConfigurationAggregators
DescribeConfigurationAggregators' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeConfigurationAggregators

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigurationAggregators'] :: DescribeConfigurationAggregators -> Maybe Text

-- | The maximum number of configuration aggregators returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
[$sel:limit:DescribeConfigurationAggregators'] :: DescribeConfigurationAggregators -> Maybe Natural

-- | The name of the configuration aggregators.
[$sel:configurationAggregatorNames:DescribeConfigurationAggregators'] :: DescribeConfigurationAggregators -> Maybe [Text]

-- | Create a value of <a>DescribeConfigurationAggregators</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_limit</a> - The maximum number of
--   configuration aggregators returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorNames:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_configurationAggregatorNames</a> -
--   The name of the configuration aggregators.
newDescribeConfigurationAggregators :: DescribeConfigurationAggregators

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregators_nextToken :: Lens' DescribeConfigurationAggregators (Maybe Text)

-- | The maximum number of configuration aggregators returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeConfigurationAggregators_limit :: Lens' DescribeConfigurationAggregators (Maybe Natural)

-- | The name of the configuration aggregators.
describeConfigurationAggregators_configurationAggregatorNames :: Lens' DescribeConfigurationAggregators (Maybe [Text])

-- | <i>See:</i> <a>newDescribeConfigurationAggregatorsResponse</a> smart
--   constructor.
data DescribeConfigurationAggregatorsResponse
DescribeConfigurationAggregatorsResponse' :: Maybe Text -> Maybe [ConfigurationAggregator] -> Int -> DescribeConfigurationAggregatorsResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigurationAggregatorsResponse'] :: DescribeConfigurationAggregatorsResponse -> Maybe Text

-- | Returns a ConfigurationAggregators object.
[$sel:configurationAggregators:DescribeConfigurationAggregatorsResponse'] :: DescribeConfigurationAggregatorsResponse -> Maybe [ConfigurationAggregator]

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationAggregatorsResponse'] :: DescribeConfigurationAggregatorsResponse -> Int

-- | Create a value of <a>DescribeConfigurationAggregatorsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregatorsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:configurationAggregators:DescribeConfigurationAggregatorsResponse'</a>,
--   <a>describeConfigurationAggregatorsResponse_configurationAggregators</a>
--   - Returns a ConfigurationAggregators object.
--   
--   <a>$sel:httpStatus:DescribeConfigurationAggregatorsResponse'</a>,
--   <a>describeConfigurationAggregatorsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationAggregatorsResponse :: Int -> DescribeConfigurationAggregatorsResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorsResponse_nextToken :: Lens' DescribeConfigurationAggregatorsResponse (Maybe Text)

-- | Returns a ConfigurationAggregators object.
describeConfigurationAggregatorsResponse_configurationAggregators :: Lens' DescribeConfigurationAggregatorsResponse (Maybe [ConfigurationAggregator])

-- | The response's http status code.
describeConfigurationAggregatorsResponse_httpStatus :: Lens' DescribeConfigurationAggregatorsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregatorsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregatorsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregatorsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregatorsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregatorsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigurationAggregators.DescribeConfigurationAggregators


-- | Returns status information for sources within an aggregator. The
--   status includes information about the last time Config verified
--   authorization between the source account and an aggregator account. In
--   case of a failure, the status contains the related error code or
--   message.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus

-- | <i>See:</i> <a>newDescribeConfigurationAggregatorSourcesStatus</a>
--   smart constructor.
data DescribeConfigurationAggregatorSourcesStatus
DescribeConfigurationAggregatorSourcesStatus' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty AggregatedSourceStatusType) -> Text -> DescribeConfigurationAggregatorSourcesStatus

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigurationAggregatorSourcesStatus'] :: DescribeConfigurationAggregatorSourcesStatus -> Maybe Text

-- | The maximum number of AggregatorSourceStatus returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
[$sel:limit:DescribeConfigurationAggregatorSourcesStatus'] :: DescribeConfigurationAggregatorSourcesStatus -> Maybe Natural

-- | Filters the status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
[$sel:updateStatus:DescribeConfigurationAggregatorSourcesStatus'] :: DescribeConfigurationAggregatorSourcesStatus -> Maybe (NonEmpty AggregatedSourceStatusType)

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:DescribeConfigurationAggregatorSourcesStatus'] :: DescribeConfigurationAggregatorSourcesStatus -> Text

-- | Create a value of <a>DescribeConfigurationAggregatorSourcesStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_limit</a> - The
--   maximum number of AggregatorSourceStatus returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:updateStatus:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_updateStatus</a> -
--   Filters the status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeConfigurationAggregatorSourcesStatus :: Text -> DescribeConfigurationAggregatorSourcesStatus

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorSourcesStatus_nextToken :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe Text)

-- | The maximum number of AggregatorSourceStatus returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeConfigurationAggregatorSourcesStatus_limit :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe Natural)

-- | Filters the status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
describeConfigurationAggregatorSourcesStatus_updateStatus :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe (NonEmpty AggregatedSourceStatusType))

-- | The name of the configuration aggregator.
describeConfigurationAggregatorSourcesStatus_configurationAggregatorName :: Lens' DescribeConfigurationAggregatorSourcesStatus Text

-- | <i>See:</i>
--   <a>newDescribeConfigurationAggregatorSourcesStatusResponse</a> smart
--   constructor.
data DescribeConfigurationAggregatorSourcesStatusResponse
DescribeConfigurationAggregatorSourcesStatusResponse' :: Maybe [AggregatedSourceStatus] -> Maybe Text -> Int -> DescribeConfigurationAggregatorSourcesStatusResponse

-- | Returns an AggregatedSourceStatus object.
[$sel:aggregatedSourceStatusList:DescribeConfigurationAggregatorSourcesStatusResponse'] :: DescribeConfigurationAggregatorSourcesStatusResponse -> Maybe [AggregatedSourceStatus]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigurationAggregatorSourcesStatusResponse'] :: DescribeConfigurationAggregatorSourcesStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationAggregatorSourcesStatusResponse'] :: DescribeConfigurationAggregatorSourcesStatusResponse -> Int

-- | Create a value of
--   <a>DescribeConfigurationAggregatorSourcesStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregatedSourceStatusList:DescribeConfigurationAggregatorSourcesStatusResponse'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_aggregatedSourceStatusList</a>
--   - Returns an AggregatedSourceStatus object.
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeConfigurationAggregatorSourcesStatusResponse'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_httpStatus</a>
--   - The response's http status code.
newDescribeConfigurationAggregatorSourcesStatusResponse :: Int -> DescribeConfigurationAggregatorSourcesStatusResponse

-- | Returns an AggregatedSourceStatus object.
describeConfigurationAggregatorSourcesStatusResponse_aggregatedSourceStatusList :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse (Maybe [AggregatedSourceStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorSourcesStatusResponse_nextToken :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationAggregatorSourcesStatusResponse_httpStatus :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigurationAggregatorSourcesStatus.DescribeConfigurationAggregatorSourcesStatus


-- | Returns details about your Config rules.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConfigRules

-- | <i>See:</i> <a>newDescribeConfigRules</a> smart constructor.
data DescribeConfigRules
DescribeConfigRules' :: Maybe [Text] -> Maybe Text -> DescribeConfigRules

-- | The names of the Config rules for which you want details. If you do
--   not specify any names, Config returns details for all your rules.
[$sel:configRuleNames:DescribeConfigRules'] :: DescribeConfigRules -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigRules'] :: DescribeConfigRules -> Maybe Text

-- | Create a value of <a>DescribeConfigRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeConfigRules'</a>,
--   <a>describeConfigRules_configRuleNames</a> - The names of the Config
--   rules for which you want details. If you do not specify any names,
--   Config returns details for all your rules.
--   
--   <a>$sel:nextToken:DescribeConfigRules'</a>,
--   <a>describeConfigRules_nextToken</a> - The <tt>nextToken</tt> string
--   returned on a previous page that you use to get the next page of
--   results in a paginated response.
newDescribeConfigRules :: DescribeConfigRules

-- | The names of the Config rules for which you want details. If you do
--   not specify any names, Config returns details for all your rules.
describeConfigRules_configRuleNames :: Lens' DescribeConfigRules (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigRules_nextToken :: Lens' DescribeConfigRules (Maybe Text)

-- | <i>See:</i> <a>newDescribeConfigRulesResponse</a> smart constructor.
data DescribeConfigRulesResponse
DescribeConfigRulesResponse' :: Maybe [ConfigRule] -> Maybe Text -> Int -> DescribeConfigRulesResponse

-- | The details about your Config rules.
[$sel:configRules:DescribeConfigRulesResponse'] :: DescribeConfigRulesResponse -> Maybe [ConfigRule]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:DescribeConfigRulesResponse'] :: DescribeConfigRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigRulesResponse'] :: DescribeConfigRulesResponse -> Int

-- | Create a value of <a>DescribeConfigRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRules:DescribeConfigRulesResponse'</a>,
--   <a>describeConfigRulesResponse_configRules</a> - The details about
--   your Config rules.
--   
--   <a>$sel:nextToken:DescribeConfigRules'</a>,
--   <a>describeConfigRulesResponse_nextToken</a> - The string that you use
--   in a subsequent request to get the next page of results in a paginated
--   response.
--   
--   <a>$sel:httpStatus:DescribeConfigRulesResponse'</a>,
--   <a>describeConfigRulesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigRulesResponse :: Int -> DescribeConfigRulesResponse

-- | The details about your Config rules.
describeConfigRulesResponse_configRules :: Lens' DescribeConfigRulesResponse (Maybe [ConfigRule])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeConfigRulesResponse_nextToken :: Lens' DescribeConfigRulesResponse (Maybe Text)

-- | The response's http status code.
describeConfigRulesResponse_httpStatus :: Lens' DescribeConfigRulesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance GHC.Show.Show Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance GHC.Read.Read Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigRules.DescribeConfigRulesResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigRules.DescribeConfigRulesResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigRules.DescribeConfigRulesResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigRules.DescribeConfigRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigRules.DescribeConfigRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigRules.DescribeConfigRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigRules.DescribeConfigRules


-- | Returns status information for each of your Config managed rules. The
--   status includes information such as the last time Config invoked the
--   rule, the last time Config failed to invoke the rule, and the related
--   error for the last failure.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeConfigRuleEvaluationStatus

-- | <i>See:</i> <a>newDescribeConfigRuleEvaluationStatus</a> smart
--   constructor.
data DescribeConfigRuleEvaluationStatus
DescribeConfigRuleEvaluationStatus' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConfigRuleEvaluationStatus

-- | The name of the Config managed rules for which you want status
--   information. If you do not specify any names, Config returns status
--   information for all Config managed rules that you use.
[$sel:configRuleNames:DescribeConfigRuleEvaluationStatus'] :: DescribeConfigRuleEvaluationStatus -> Maybe [Text]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeConfigRuleEvaluationStatus'] :: DescribeConfigRuleEvaluationStatus -> Maybe Text

-- | The number of rule evaluation results that you want returned.
--   
--   This parameter is required if the rule limit for your account is more
--   than the default of 150 rules.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
[$sel:limit:DescribeConfigRuleEvaluationStatus'] :: DescribeConfigRuleEvaluationStatus -> Maybe Natural

-- | Create a value of <a>DescribeConfigRuleEvaluationStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_configRuleNames</a> - The name
--   of the Config managed rules for which you want status information. If
--   you do not specify any names, Config returns status information for
--   all Config managed rules that you use.
--   
--   <a>$sel:nextToken:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_limit</a> - The number of rule
--   evaluation results that you want returned.
--   
--   This parameter is required if the rule limit for your account is more
--   than the default of 150 rules.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
newDescribeConfigRuleEvaluationStatus :: DescribeConfigRuleEvaluationStatus

-- | The name of the Config managed rules for which you want status
--   information. If you do not specify any names, Config returns status
--   information for all Config managed rules that you use.
describeConfigRuleEvaluationStatus_configRuleNames :: Lens' DescribeConfigRuleEvaluationStatus (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigRuleEvaluationStatus_nextToken :: Lens' DescribeConfigRuleEvaluationStatus (Maybe Text)

-- | The number of rule evaluation results that you want returned.
--   
--   This parameter is required if the rule limit for your account is more
--   than the default of 150 rules.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
describeConfigRuleEvaluationStatus_limit :: Lens' DescribeConfigRuleEvaluationStatus (Maybe Natural)

-- | <i>See:</i> <a>newDescribeConfigRuleEvaluationStatusResponse</a> smart
--   constructor.
data DescribeConfigRuleEvaluationStatusResponse
DescribeConfigRuleEvaluationStatusResponse' :: Maybe [ConfigRuleEvaluationStatus] -> Maybe Text -> Int -> DescribeConfigRuleEvaluationStatusResponse

-- | Status information about your Config managed rules.
[$sel:configRulesEvaluationStatus:DescribeConfigRuleEvaluationStatusResponse'] :: DescribeConfigRuleEvaluationStatusResponse -> Maybe [ConfigRuleEvaluationStatus]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:DescribeConfigRuleEvaluationStatusResponse'] :: DescribeConfigRuleEvaluationStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigRuleEvaluationStatusResponse'] :: DescribeConfigRuleEvaluationStatusResponse -> Int

-- | Create a value of <a>DescribeConfigRuleEvaluationStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configRulesEvaluationStatus:DescribeConfigRuleEvaluationStatusResponse'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_configRulesEvaluationStatus</a>
--   - Status information about your Config managed rules.
--   
--   <a>$sel:nextToken:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_nextToken</a> - The
--   string that you use in a subsequent request to get the next page of
--   results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConfigRuleEvaluationStatusResponse'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigRuleEvaluationStatusResponse :: Int -> DescribeConfigRuleEvaluationStatusResponse

-- | Status information about your Config managed rules.
describeConfigRuleEvaluationStatusResponse_configRulesEvaluationStatus :: Lens' DescribeConfigRuleEvaluationStatusResponse (Maybe [ConfigRuleEvaluationStatus])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeConfigRuleEvaluationStatusResponse_nextToken :: Lens' DescribeConfigRuleEvaluationStatusResponse (Maybe Text)

-- | The response's http status code.
describeConfigRuleEvaluationStatusResponse_httpStatus :: Lens' DescribeConfigRuleEvaluationStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance GHC.Show.Show Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance GHC.Read.Read Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance GHC.Generics.Generic Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatusResponse
instance GHC.Show.Show Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatusResponse
instance GHC.Read.Read Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatusResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeConfigRuleEvaluationStatus.DescribeConfigRuleEvaluationStatus


-- | Indicates whether the specified Amazon Web Services resources are
--   compliant. If a resource is noncompliant, this action returns the
--   number of Config rules that the resource does not comply with.
--   
--   A resource is compliant if it complies with all the Config rules that
--   evaluate it. It is noncompliant if it does not comply with one or more
--   of these rules.
--   
--   If Config has no current evaluation results for the resource, it
--   returns <tt>INSUFFICIENT_DATA</tt>. This result might indicate one of
--   the following conditions about the rules that evaluate the resource:
--   
--   <ul>
--   <li>Config has never invoked an evaluation for the rule. To check
--   whether it has, use the <tt>DescribeConfigRuleEvaluationStatus</tt>
--   action to get the <tt>LastSuccessfulInvocationTime</tt> and
--   <tt>LastFailedInvocationTime</tt>.</li>
--   <li>The rule's Lambda function is failing to send evaluation results
--   to Config. Verify that the role that you assigned to your
--   configuration recorder includes the <tt>config:PutEvaluations</tt>
--   permission. If the rule is a custom rule, verify that the Lambda
--   execution role includes the <tt>config:PutEvaluations</tt>
--   permission.</li>
--   <li>The rule's Lambda function has returned <tt>NOT_APPLICABLE</tt>
--   for all evaluation results. This can occur if the resources were
--   deleted or removed from the rule's scope.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeComplianceByResource

-- | <i>See:</i> <a>newDescribeComplianceByResource</a> smart constructor.
data DescribeComplianceByResource
DescribeComplianceByResource' :: Maybe Text -> Maybe Text -> Maybe [ComplianceType] -> Maybe Text -> Maybe Natural -> DescribeComplianceByResource

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information. You can specify only one resource ID. If you
--   specify a resource ID, you must also specify a type for
--   <tt>ResourceType</tt>.
[$sel:resourceId:DescribeComplianceByResource'] :: DescribeComplianceByResource -> Maybe Text

-- | The types of Amazon Web Services resources for which you want
--   compliance information (for example, <tt>AWS::EC2::Instance</tt>). For
--   this action, you can specify that the resource type is an Amazon Web
--   Services account by specifying <tt>AWS::::Account</tt>.
[$sel:resourceType:DescribeComplianceByResource'] :: DescribeComplianceByResource -> Maybe Text

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
[$sel:complianceTypes:DescribeComplianceByResource'] :: DescribeComplianceByResource -> Maybe [ComplianceType]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeComplianceByResource'] :: DescribeComplianceByResource -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
[$sel:limit:DescribeComplianceByResource'] :: DescribeComplianceByResource -> Maybe Natural

-- | Create a value of <a>DescribeComplianceByResource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_resourceId</a> - The ID of the Amazon
--   Web Services resource for which you want compliance information. You
--   can specify only one resource ID. If you specify a resource ID, you
--   must also specify a type for <tt>ResourceType</tt>.
--   
--   <a>$sel:resourceType:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_resourceType</a> - The types of Amazon
--   Web Services resources for which you want compliance information (for
--   example, <tt>AWS::EC2::Instance</tt>). For this action, you can
--   specify that the resource type is an Amazon Web Services account by
--   specifying <tt>AWS::::Account</tt>.
--   
--   <a>$sel:complianceTypes:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
--   
--   <a>$sel:nextToken:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_limit</a> - The maximum number of
--   evaluation results returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
newDescribeComplianceByResource :: DescribeComplianceByResource

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information. You can specify only one resource ID. If you
--   specify a resource ID, you must also specify a type for
--   <tt>ResourceType</tt>.
describeComplianceByResource_resourceId :: Lens' DescribeComplianceByResource (Maybe Text)

-- | The types of Amazon Web Services resources for which you want
--   compliance information (for example, <tt>AWS::EC2::Instance</tt>). For
--   this action, you can specify that the resource type is an Amazon Web
--   Services account by specifying <tt>AWS::::Account</tt>.
describeComplianceByResource_resourceType :: Lens' DescribeComplianceByResource (Maybe Text)

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
describeComplianceByResource_complianceTypes :: Lens' DescribeComplianceByResource (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeComplianceByResource_nextToken :: Lens' DescribeComplianceByResource (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
describeComplianceByResource_limit :: Lens' DescribeComplianceByResource (Maybe Natural)

-- | <i>See:</i> <a>newDescribeComplianceByResourceResponse</a> smart
--   constructor.
data DescribeComplianceByResourceResponse
DescribeComplianceByResourceResponse' :: Maybe [ComplianceByResource] -> Maybe Text -> Int -> DescribeComplianceByResourceResponse

-- | Indicates whether the specified Amazon Web Services resource complies
--   with all of the Config rules that evaluate it.
[$sel:complianceByResources:DescribeComplianceByResourceResponse'] :: DescribeComplianceByResourceResponse -> Maybe [ComplianceByResource]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:DescribeComplianceByResourceResponse'] :: DescribeComplianceByResourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeComplianceByResourceResponse'] :: DescribeComplianceByResourceResponse -> Int

-- | Create a value of <a>DescribeComplianceByResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceByResources:DescribeComplianceByResourceResponse'</a>,
--   <a>describeComplianceByResourceResponse_complianceByResources</a> -
--   Indicates whether the specified Amazon Web Services resource complies
--   with all of the Config rules that evaluate it.
--   
--   <a>$sel:nextToken:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResourceResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeComplianceByResourceResponse'</a>,
--   <a>describeComplianceByResourceResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComplianceByResourceResponse :: Int -> DescribeComplianceByResourceResponse

-- | Indicates whether the specified Amazon Web Services resource complies
--   with all of the Config rules that evaluate it.
describeComplianceByResourceResponse_complianceByResources :: Lens' DescribeComplianceByResourceResponse (Maybe [ComplianceByResource])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeComplianceByResourceResponse_nextToken :: Lens' DescribeComplianceByResourceResponse (Maybe Text)

-- | The response's http status code.
describeComplianceByResourceResponse_httpStatus :: Lens' DescribeComplianceByResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance GHC.Show.Show Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance GHC.Read.Read Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance GHC.Classes.Eq Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance GHC.Generics.Generic Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResourceResponse
instance GHC.Show.Show Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResourceResponse
instance GHC.Read.Read Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResourceResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeComplianceByResource.DescribeComplianceByResource


-- | Indicates whether the specified Config rules are compliant. If a rule
--   is noncompliant, this action returns the number of Amazon Web Services
--   resources that do not comply with the rule.
--   
--   A rule is compliant if all of the evaluated resources comply with it.
--   It is noncompliant if any of these resources do not comply.
--   
--   If Config has no current evaluation results for the rule, it returns
--   <tt>INSUFFICIENT_DATA</tt>. This result might indicate one of the
--   following conditions:
--   
--   <ul>
--   <li>Config has never invoked an evaluation for the rule. To check
--   whether it has, use the <tt>DescribeConfigRuleEvaluationStatus</tt>
--   action to get the <tt>LastSuccessfulInvocationTime</tt> and
--   <tt>LastFailedInvocationTime</tt>.</li>
--   <li>The rule's Lambda function is failing to send evaluation results
--   to Config. Verify that the role you assigned to your configuration
--   recorder includes the <tt>config:PutEvaluations</tt> permission. If
--   the rule is a custom rule, verify that the Lambda execution role
--   includes the <tt>config:PutEvaluations</tt> permission.</li>
--   <li>The rule's Lambda function has returned <tt>NOT_APPLICABLE</tt>
--   for all evaluation results. This can occur if the resources were
--   deleted or removed from the rule's scope.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeComplianceByConfigRule

-- | <i>See:</i> <a>newDescribeComplianceByConfigRule</a> smart
--   constructor.
data DescribeComplianceByConfigRule
DescribeComplianceByConfigRule' :: Maybe [Text] -> Maybe [ComplianceType] -> Maybe Text -> DescribeComplianceByConfigRule

-- | Specify one or more Config rule names to filter the results by rule.
[$sel:configRuleNames:DescribeComplianceByConfigRule'] :: DescribeComplianceByConfigRule -> Maybe [Text]

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
[$sel:complianceTypes:DescribeComplianceByConfigRule'] :: DescribeComplianceByConfigRule -> Maybe [ComplianceType]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeComplianceByConfigRule'] :: DescribeComplianceByConfigRule -> Maybe Text

-- | Create a value of <a>DescribeComplianceByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_configRuleNames</a> - Specify one or
--   more Config rule names to filter the results by rule.
--   
--   <a>$sel:complianceTypes:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   
--   <a>$sel:nextToken:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
newDescribeComplianceByConfigRule :: DescribeComplianceByConfigRule

-- | Specify one or more Config rule names to filter the results by rule.
describeComplianceByConfigRule_configRuleNames :: Lens' DescribeComplianceByConfigRule (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
describeComplianceByConfigRule_complianceTypes :: Lens' DescribeComplianceByConfigRule (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeComplianceByConfigRule_nextToken :: Lens' DescribeComplianceByConfigRule (Maybe Text)

-- | <i>See:</i> <a>newDescribeComplianceByConfigRuleResponse</a> smart
--   constructor.
data DescribeComplianceByConfigRuleResponse
DescribeComplianceByConfigRuleResponse' :: Maybe [ComplianceByConfigRule] -> Maybe Text -> Int -> DescribeComplianceByConfigRuleResponse

-- | Indicates whether each of the specified Config rules is compliant.
[$sel:complianceByConfigRules:DescribeComplianceByConfigRuleResponse'] :: DescribeComplianceByConfigRuleResponse -> Maybe [ComplianceByConfigRule]

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
[$sel:nextToken:DescribeComplianceByConfigRuleResponse'] :: DescribeComplianceByConfigRuleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeComplianceByConfigRuleResponse'] :: DescribeComplianceByConfigRuleResponse -> Int

-- | Create a value of <a>DescribeComplianceByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceByConfigRules:DescribeComplianceByConfigRuleResponse'</a>,
--   <a>describeComplianceByConfigRuleResponse_complianceByConfigRules</a>
--   - Indicates whether each of the specified Config rules is compliant.
--   
--   <a>$sel:nextToken:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRuleResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeComplianceByConfigRuleResponse'</a>,
--   <a>describeComplianceByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComplianceByConfigRuleResponse :: Int -> DescribeComplianceByConfigRuleResponse

-- | Indicates whether each of the specified Config rules is compliant.
describeComplianceByConfigRuleResponse_complianceByConfigRules :: Lens' DescribeComplianceByConfigRuleResponse (Maybe [ComplianceByConfigRule])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeComplianceByConfigRuleResponse_nextToken :: Lens' DescribeComplianceByConfigRuleResponse (Maybe Text)

-- | The response's http status code.
describeComplianceByConfigRuleResponse_httpStatus :: Lens' DescribeComplianceByConfigRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance GHC.Show.Show Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance GHC.Read.Read Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance GHC.Classes.Eq Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance GHC.Generics.Generic Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRuleResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeComplianceByConfigRule.DescribeComplianceByConfigRule


-- | Returns a list of authorizations granted to various aggregator
--   accounts and regions.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeAggregationAuthorizations

-- | <i>See:</i> <a>newDescribeAggregationAuthorizations</a> smart
--   constructor.
data DescribeAggregationAuthorizations
DescribeAggregationAuthorizations' :: Maybe Text -> Maybe Natural -> DescribeAggregationAuthorizations

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregationAuthorizations'] :: DescribeAggregationAuthorizations -> Maybe Text

-- | The maximum number of AggregationAuthorizations returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
[$sel:limit:DescribeAggregationAuthorizations'] :: DescribeAggregationAuthorizations -> Maybe Natural

-- | Create a value of <a>DescribeAggregationAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizations_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizations_limit</a> - The maximum number of
--   AggregationAuthorizations returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
newDescribeAggregationAuthorizations :: DescribeAggregationAuthorizations

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregationAuthorizations_nextToken :: Lens' DescribeAggregationAuthorizations (Maybe Text)

-- | The maximum number of AggregationAuthorizations returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeAggregationAuthorizations_limit :: Lens' DescribeAggregationAuthorizations (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAggregationAuthorizationsResponse</a> smart
--   constructor.
data DescribeAggregationAuthorizationsResponse
DescribeAggregationAuthorizationsResponse' :: Maybe [AggregationAuthorization] -> Maybe Text -> Int -> DescribeAggregationAuthorizationsResponse

-- | Returns a list of authorizations granted to various aggregator
--   accounts and regions.
[$sel:aggregationAuthorizations:DescribeAggregationAuthorizationsResponse'] :: DescribeAggregationAuthorizationsResponse -> Maybe [AggregationAuthorization]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregationAuthorizationsResponse'] :: DescribeAggregationAuthorizationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAggregationAuthorizationsResponse'] :: DescribeAggregationAuthorizationsResponse -> Int

-- | Create a value of <a>DescribeAggregationAuthorizationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregationAuthorizations:DescribeAggregationAuthorizationsResponse'</a>,
--   <a>describeAggregationAuthorizationsResponse_aggregationAuthorizations</a>
--   - Returns a list of authorizations granted to various aggregator
--   accounts and regions.
--   
--   <a>$sel:nextToken:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeAggregationAuthorizationsResponse'</a>,
--   <a>describeAggregationAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAggregationAuthorizationsResponse :: Int -> DescribeAggregationAuthorizationsResponse

-- | Returns a list of authorizations granted to various aggregator
--   accounts and regions.
describeAggregationAuthorizationsResponse_aggregationAuthorizations :: Lens' DescribeAggregationAuthorizationsResponse (Maybe [AggregationAuthorization])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregationAuthorizationsResponse_nextToken :: Lens' DescribeAggregationAuthorizationsResponse (Maybe Text)

-- | The response's http status code.
describeAggregationAuthorizationsResponse_httpStatus :: Lens' DescribeAggregationAuthorizationsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance GHC.Show.Show Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance GHC.Read.Read Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizationsResponse
instance GHC.Show.Show Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizationsResponse
instance GHC.Read.Read Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizationsResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeAggregationAuthorizations.DescribeAggregationAuthorizations


-- | Returns a list of the conformance packs and their associated
--   compliance status with the count of compliant and noncompliant Config
--   rules within each conformance pack. Also returns the total rule count
--   which includes compliant rules, noncompliant rules, and rules that
--   cannot be evaluated due to insufficient data.
--   
--   The results can return an empty result page, but if you have a
--   <tt>nextToken</tt>, the results are displayed on the next page.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeAggregateComplianceByConformancePacks

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConformancePacks</a>
--   smart constructor.
data DescribeAggregateComplianceByConformancePacks
DescribeAggregateComplianceByConformancePacks' :: Maybe AggregateConformancePackComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeAggregateComplianceByConformancePacks

-- | Filters the result by
--   <tt>AggregateConformancePackComplianceFilters</tt> object.
[$sel:filters:DescribeAggregateComplianceByConformancePacks'] :: DescribeAggregateComplianceByConformancePacks -> Maybe AggregateConformancePackComplianceFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregateComplianceByConformancePacks'] :: DescribeAggregateComplianceByConformancePacks -> Maybe Text

-- | The maximum number of conformance packs compliance details returned on
--   each page. The default is maximum. If you specify 0, Config uses the
--   default.
[$sel:limit:DescribeAggregateComplianceByConformancePacks'] :: DescribeAggregateComplianceByConformancePacks -> Maybe Natural

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:DescribeAggregateComplianceByConformancePacks'] :: DescribeAggregateComplianceByConformancePacks -> Text

-- | Create a value of <a>DescribeAggregateComplianceByConformancePacks</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_filters</a> - Filters
--   the result by <tt>AggregateConformancePackComplianceFilters</tt>
--   object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_limit</a> - The
--   maximum number of conformance packs compliance details returned on
--   each page. The default is maximum. If you specify 0, Config uses the
--   default.
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeAggregateComplianceByConformancePacks :: Text -> DescribeAggregateComplianceByConformancePacks

-- | Filters the result by
--   <tt>AggregateConformancePackComplianceFilters</tt> object.
describeAggregateComplianceByConformancePacks_filters :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe AggregateConformancePackComplianceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConformancePacks_nextToken :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe Text)

-- | The maximum number of conformance packs compliance details returned on
--   each page. The default is maximum. If you specify 0, Config uses the
--   default.
describeAggregateComplianceByConformancePacks_limit :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe Natural)

-- | The name of the configuration aggregator.
describeAggregateComplianceByConformancePacks_configurationAggregatorName :: Lens' DescribeAggregateComplianceByConformancePacks Text

-- | <i>See:</i>
--   <a>newDescribeAggregateComplianceByConformancePacksResponse</a> smart
--   constructor.
data DescribeAggregateComplianceByConformancePacksResponse
DescribeAggregateComplianceByConformancePacksResponse' :: Maybe [AggregateComplianceByConformancePack] -> Maybe Text -> Int -> DescribeAggregateComplianceByConformancePacksResponse

-- | Returns the <tt>AggregateComplianceByConformancePack</tt> object.
[$sel:aggregateComplianceByConformancePacks:DescribeAggregateComplianceByConformancePacksResponse'] :: DescribeAggregateComplianceByConformancePacksResponse -> Maybe [AggregateComplianceByConformancePack]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregateComplianceByConformancePacksResponse'] :: DescribeAggregateComplianceByConformancePacksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAggregateComplianceByConformancePacksResponse'] :: DescribeAggregateComplianceByConformancePacksResponse -> Int

-- | Create a value of
--   <a>DescribeAggregateComplianceByConformancePacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregateComplianceByConformancePacks:DescribeAggregateComplianceByConformancePacksResponse'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_aggregateComplianceByConformancePacks</a>
--   - Returns the <tt>AggregateComplianceByConformancePack</tt> object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeAggregateComplianceByConformancePacksResponse'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_httpStatus</a>
--   - The response's http status code.
newDescribeAggregateComplianceByConformancePacksResponse :: Int -> DescribeAggregateComplianceByConformancePacksResponse

-- | Returns the <tt>AggregateComplianceByConformancePack</tt> object.
describeAggregateComplianceByConformancePacksResponse_aggregateComplianceByConformancePacks :: Lens' DescribeAggregateComplianceByConformancePacksResponse (Maybe [AggregateComplianceByConformancePack])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConformancePacksResponse_nextToken :: Lens' DescribeAggregateComplianceByConformancePacksResponse (Maybe Text)

-- | The response's http status code.
describeAggregateComplianceByConformancePacksResponse_httpStatus :: Lens' DescribeAggregateComplianceByConformancePacksResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance GHC.Show.Show Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance GHC.Read.Read Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacksResponse
instance GHC.Show.Show Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacksResponse
instance GHC.Read.Read Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacksResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeAggregateComplianceByConformancePacks.DescribeAggregateComplianceByConformancePacks


-- | Returns a list of compliant and noncompliant rules with the number of
--   resources for compliant and noncompliant rules. Does not display rules
--   that do not have compliance results.
--   
--   The results can return an empty result page, but if you have a
--   <tt>nextToken</tt>, the results are displayed on the next page.
--   
--   This operation returns paginated results.
module Network.AWS.Config.DescribeAggregateComplianceByConfigRules

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConfigRules</a> smart
--   constructor.
data DescribeAggregateComplianceByConfigRules
DescribeAggregateComplianceByConfigRules' :: Maybe ConfigRuleComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeAggregateComplianceByConfigRules

-- | Filters the results by ConfigRuleComplianceFilters object.
[$sel:filters:DescribeAggregateComplianceByConfigRules'] :: DescribeAggregateComplianceByConfigRules -> Maybe ConfigRuleComplianceFilters

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregateComplianceByConfigRules'] :: DescribeAggregateComplianceByConfigRules -> Maybe Text

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
[$sel:limit:DescribeAggregateComplianceByConfigRules'] :: DescribeAggregateComplianceByConfigRules -> Maybe Natural

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:DescribeAggregateComplianceByConfigRules'] :: DescribeAggregateComplianceByConfigRules -> Text

-- | Create a value of <a>DescribeAggregateComplianceByConfigRules</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_filters</a> - Filters the
--   results by ConfigRuleComplianceFilters object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeAggregateComplianceByConfigRules :: Text -> DescribeAggregateComplianceByConfigRules

-- | Filters the results by ConfigRuleComplianceFilters object.
describeAggregateComplianceByConfigRules_filters :: Lens' DescribeAggregateComplianceByConfigRules (Maybe ConfigRuleComplianceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConfigRules_nextToken :: Lens' DescribeAggregateComplianceByConfigRules (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
describeAggregateComplianceByConfigRules_limit :: Lens' DescribeAggregateComplianceByConfigRules (Maybe Natural)

-- | The name of the configuration aggregator.
describeAggregateComplianceByConfigRules_configurationAggregatorName :: Lens' DescribeAggregateComplianceByConfigRules Text

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConfigRulesResponse</a>
--   smart constructor.
data DescribeAggregateComplianceByConfigRulesResponse
DescribeAggregateComplianceByConfigRulesResponse' :: Maybe Text -> Maybe [AggregateComplianceByConfigRule] -> Int -> DescribeAggregateComplianceByConfigRulesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
[$sel:nextToken:DescribeAggregateComplianceByConfigRulesResponse'] :: DescribeAggregateComplianceByConfigRulesResponse -> Maybe Text

-- | Returns a list of AggregateComplianceByConfigRule object.
[$sel:aggregateComplianceByConfigRules:DescribeAggregateComplianceByConfigRulesResponse'] :: DescribeAggregateComplianceByConfigRulesResponse -> Maybe [AggregateComplianceByConfigRule]

-- | The response's http status code.
[$sel:httpStatus:DescribeAggregateComplianceByConfigRulesResponse'] :: DescribeAggregateComplianceByConfigRulesResponse -> Int

-- | Create a value of
--   <a>DescribeAggregateComplianceByConfigRulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_nextToken</a> -
--   The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateComplianceByConfigRules:DescribeAggregateComplianceByConfigRulesResponse'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_aggregateComplianceByConfigRules</a>
--   - Returns a list of AggregateComplianceByConfigRule object.
--   
--   
--   <a>$sel:httpStatus:DescribeAggregateComplianceByConfigRulesResponse'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_httpStatus</a> -
--   The response's http status code.
newDescribeAggregateComplianceByConfigRulesResponse :: Int -> DescribeAggregateComplianceByConfigRulesResponse

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConfigRulesResponse_nextToken :: Lens' DescribeAggregateComplianceByConfigRulesResponse (Maybe Text)

-- | Returns a list of AggregateComplianceByConfigRule object.
describeAggregateComplianceByConfigRulesResponse_aggregateComplianceByConfigRules :: Lens' DescribeAggregateComplianceByConfigRulesResponse (Maybe [AggregateComplianceByConfigRule])

-- | The response's http status code.
describeAggregateComplianceByConfigRulesResponse_httpStatus :: Lens' DescribeAggregateComplianceByConfigRulesResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance GHC.Show.Show Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance GHC.Read.Read Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance GHC.Generics.Generic Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRulesResponse
instance GHC.Show.Show Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRulesResponse
instance GHC.Read.Read Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRulesResponse
instance GHC.Classes.Eq Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Data.Hashable.Class.Hashable Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Control.DeepSeq.NFData Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DescribeAggregateComplianceByConfigRules.DescribeAggregateComplianceByConfigRules


-- | Schedules delivery of a configuration snapshot to the Amazon S3 bucket
--   in the specified delivery channel. After the delivery has started,
--   Config sends the following notifications using an Amazon SNS topic
--   that you have specified.
--   
--   <ul>
--   <li>Notification of the start of the delivery.</li>
--   <li>Notification of the completion of the delivery, if the delivery
--   was successfully completed.</li>
--   <li>Notification of delivery failure, if the delivery failed.</li>
--   </ul>
module Network.AWS.Config.DeliverConfigSnapshot

-- | The input for the DeliverConfigSnapshot action.
--   
--   <i>See:</i> <a>newDeliverConfigSnapshot</a> smart constructor.
data DeliverConfigSnapshot
DeliverConfigSnapshot' :: Text -> DeliverConfigSnapshot

-- | The name of the delivery channel through which the snapshot is
--   delivered.
[$sel:deliveryChannelName:DeliverConfigSnapshot'] :: DeliverConfigSnapshot -> Text

-- | Create a value of <a>DeliverConfigSnapshot</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelName:DeliverConfigSnapshot'</a>,
--   <a>deliverConfigSnapshot_deliveryChannelName</a> - The name of the
--   delivery channel through which the snapshot is delivered.
newDeliverConfigSnapshot :: Text -> DeliverConfigSnapshot

-- | The name of the delivery channel through which the snapshot is
--   delivered.
deliverConfigSnapshot_deliveryChannelName :: Lens' DeliverConfigSnapshot Text

-- | The output for the DeliverConfigSnapshot action, in JSON format.
--   
--   <i>See:</i> <a>newDeliverConfigSnapshotResponse</a> smart constructor.
data DeliverConfigSnapshotResponse
DeliverConfigSnapshotResponse' :: Maybe Text -> Int -> DeliverConfigSnapshotResponse

-- | The ID of the snapshot that is being created.
[$sel:configSnapshotId:DeliverConfigSnapshotResponse'] :: DeliverConfigSnapshotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeliverConfigSnapshotResponse'] :: DeliverConfigSnapshotResponse -> Int

-- | Create a value of <a>DeliverConfigSnapshotResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configSnapshotId:DeliverConfigSnapshotResponse'</a>,
--   <a>deliverConfigSnapshotResponse_configSnapshotId</a> - The ID of the
--   snapshot that is being created.
--   
--   <a>$sel:httpStatus:DeliverConfigSnapshotResponse'</a>,
--   <a>deliverConfigSnapshotResponse_httpStatus</a> - The response's http
--   status code.
newDeliverConfigSnapshotResponse :: Int -> DeliverConfigSnapshotResponse

-- | The ID of the snapshot that is being created.
deliverConfigSnapshotResponse_configSnapshotId :: Lens' DeliverConfigSnapshotResponse (Maybe Text)

-- | The response's http status code.
deliverConfigSnapshotResponse_httpStatus :: Lens' DeliverConfigSnapshotResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance GHC.Show.Show Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance GHC.Read.Read Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance GHC.Classes.Eq Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance GHC.Generics.Generic Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshotResponse
instance GHC.Show.Show Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshotResponse
instance GHC.Read.Read Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshotResponse
instance GHC.Classes.Eq Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshotResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Control.DeepSeq.NFData Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshotResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Control.DeepSeq.NFData Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeliverConfigSnapshot.DeliverConfigSnapshot


-- | Deletes the stored query for a single Amazon Web Services account and
--   a single Amazon Web Services Region.
module Network.AWS.Config.DeleteStoredQuery

-- | <i>See:</i> <a>newDeleteStoredQuery</a> smart constructor.
data DeleteStoredQuery
DeleteStoredQuery' :: Text -> DeleteStoredQuery

-- | The name of the query that you want to delete.
[$sel:queryName:DeleteStoredQuery'] :: DeleteStoredQuery -> Text

-- | Create a value of <a>DeleteStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryName:DeleteStoredQuery'</a>,
--   <a>deleteStoredQuery_queryName</a> - The name of the query that you
--   want to delete.
newDeleteStoredQuery :: Text -> DeleteStoredQuery

-- | The name of the query that you want to delete.
deleteStoredQuery_queryName :: Lens' DeleteStoredQuery Text

-- | <i>See:</i> <a>newDeleteStoredQueryResponse</a> smart constructor.
data DeleteStoredQueryResponse
DeleteStoredQueryResponse' :: Int -> DeleteStoredQueryResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteStoredQueryResponse'] :: DeleteStoredQueryResponse -> Int

-- | Create a value of <a>DeleteStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStoredQueryResponse'</a>,
--   <a>deleteStoredQueryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStoredQueryResponse :: Int -> DeleteStoredQueryResponse

-- | The response's http status code.
deleteStoredQueryResponse_httpStatus :: Lens' DeleteStoredQueryResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance GHC.Show.Show Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance GHC.Read.Read Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance GHC.Classes.Eq Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance GHC.Generics.Generic Network.AWS.Config.DeleteStoredQuery.DeleteStoredQueryResponse
instance GHC.Show.Show Network.AWS.Config.DeleteStoredQuery.DeleteStoredQueryResponse
instance GHC.Read.Read Network.AWS.Config.DeleteStoredQuery.DeleteStoredQueryResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteStoredQuery.DeleteStoredQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteStoredQuery.DeleteStoredQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteStoredQuery.DeleteStoredQuery


-- | Deletes the retention configuration.
module Network.AWS.Config.DeleteRetentionConfiguration

-- | <i>See:</i> <a>newDeleteRetentionConfiguration</a> smart constructor.
data DeleteRetentionConfiguration
DeleteRetentionConfiguration' :: Text -> DeleteRetentionConfiguration

-- | The name of the retention configuration to delete.
[$sel:retentionConfigurationName:DeleteRetentionConfiguration'] :: DeleteRetentionConfiguration -> Text

-- | Create a value of <a>DeleteRetentionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionConfigurationName:DeleteRetentionConfiguration'</a>,
--   <a>deleteRetentionConfiguration_retentionConfigurationName</a> - The
--   name of the retention configuration to delete.
newDeleteRetentionConfiguration :: Text -> DeleteRetentionConfiguration

-- | The name of the retention configuration to delete.
deleteRetentionConfiguration_retentionConfigurationName :: Lens' DeleteRetentionConfiguration Text

-- | <i>See:</i> <a>newDeleteRetentionConfigurationResponse</a> smart
--   constructor.
data DeleteRetentionConfigurationResponse
DeleteRetentionConfigurationResponse' :: DeleteRetentionConfigurationResponse

-- | Create a value of <a>DeleteRetentionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRetentionConfigurationResponse :: DeleteRetentionConfigurationResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance GHC.Show.Show Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance GHC.Read.Read Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance GHC.Classes.Eq Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance GHC.Generics.Generic Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfigurationResponse
instance GHC.Show.Show Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfigurationResponse
instance GHC.Read.Read Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteRetentionConfiguration.DeleteRetentionConfiguration


-- | Records the configuration state for a custom resource that has been
--   deleted. This API records a new ConfigurationItem with a
--   ResourceDeleted status. You can retrieve the ConfigurationItems
--   recorded for this resource in your Config History.
module Network.AWS.Config.DeleteResourceConfig

-- | <i>See:</i> <a>newDeleteResourceConfig</a> smart constructor.
data DeleteResourceConfig
DeleteResourceConfig' :: Text -> Text -> DeleteResourceConfig

-- | The type of the resource.
[$sel:resourceType:DeleteResourceConfig'] :: DeleteResourceConfig -> Text

-- | Unique identifier of the resource.
[$sel:resourceId:DeleteResourceConfig'] :: DeleteResourceConfig -> Text

-- | Create a value of <a>DeleteResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:DeleteResourceConfig'</a>,
--   <a>deleteResourceConfig_resourceType</a> - The type of the resource.
--   
--   <a>$sel:resourceId:DeleteResourceConfig'</a>,
--   <a>deleteResourceConfig_resourceId</a> - Unique identifier of the
--   resource.
newDeleteResourceConfig :: Text -> Text -> DeleteResourceConfig

-- | The type of the resource.
deleteResourceConfig_resourceType :: Lens' DeleteResourceConfig Text

-- | Unique identifier of the resource.
deleteResourceConfig_resourceId :: Lens' DeleteResourceConfig Text

-- | <i>See:</i> <a>newDeleteResourceConfigResponse</a> smart constructor.
data DeleteResourceConfigResponse
DeleteResourceConfigResponse' :: DeleteResourceConfigResponse

-- | Create a value of <a>DeleteResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceConfigResponse :: DeleteResourceConfigResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance GHC.Show.Show Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance GHC.Read.Read Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteResourceConfig.DeleteResourceConfig


-- | Deletes one or more remediation exceptions mentioned in the resource
--   keys.
--   
--   Config generates a remediation exception when a problem occurs
--   executing a remediation action to a specific resource. Remediation
--   exceptions blocks auto-remediation until the exception is cleared.
module Network.AWS.Config.DeleteRemediationExceptions

-- | <i>See:</i> <a>newDeleteRemediationExceptions</a> smart constructor.
data DeleteRemediationExceptions
DeleteRemediationExceptions' :: Text -> NonEmpty RemediationExceptionResourceKey -> DeleteRemediationExceptions

-- | The name of the Config rule for which you want to delete remediation
--   exception configuration.
[$sel:configRuleName:DeleteRemediationExceptions'] :: DeleteRemediationExceptions -> Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
[$sel:resourceKeys:DeleteRemediationExceptions'] :: DeleteRemediationExceptions -> NonEmpty RemediationExceptionResourceKey

-- | Create a value of <a>DeleteRemediationExceptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteRemediationExceptions'</a>,
--   <a>deleteRemediationExceptions_configRuleName</a> - The name of the
--   Config rule for which you want to delete remediation exception
--   configuration.
--   
--   <a>$sel:resourceKeys:DeleteRemediationExceptions'</a>,
--   <a>deleteRemediationExceptions_resourceKeys</a> - An exception list of
--   resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
newDeleteRemediationExceptions :: Text -> NonEmpty RemediationExceptionResourceKey -> DeleteRemediationExceptions

-- | The name of the Config rule for which you want to delete remediation
--   exception configuration.
deleteRemediationExceptions_configRuleName :: Lens' DeleteRemediationExceptions Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
deleteRemediationExceptions_resourceKeys :: Lens' DeleteRemediationExceptions (NonEmpty RemediationExceptionResourceKey)

-- | <i>See:</i> <a>newDeleteRemediationExceptionsResponse</a> smart
--   constructor.
data DeleteRemediationExceptionsResponse
DeleteRemediationExceptionsResponse' :: Maybe [FailedDeleteRemediationExceptionsBatch] -> Int -> DeleteRemediationExceptionsResponse

-- | Returns a list of failed delete remediation exceptions batch objects.
--   Each object in the batch consists of a list of failed items and
--   failure messages.
[$sel:failedBatches:DeleteRemediationExceptionsResponse'] :: DeleteRemediationExceptionsResponse -> Maybe [FailedDeleteRemediationExceptionsBatch]

-- | The response's http status code.
[$sel:httpStatus:DeleteRemediationExceptionsResponse'] :: DeleteRemediationExceptionsResponse -> Int

-- | Create a value of <a>DeleteRemediationExceptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:DeleteRemediationExceptionsResponse'</a>,
--   <a>deleteRemediationExceptionsResponse_failedBatches</a> - Returns a
--   list of failed delete remediation exceptions batch objects. Each
--   object in the batch consists of a list of failed items and failure
--   messages.
--   
--   <a>$sel:httpStatus:DeleteRemediationExceptionsResponse'</a>,
--   <a>deleteRemediationExceptionsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteRemediationExceptionsResponse :: Int -> DeleteRemediationExceptionsResponse

-- | Returns a list of failed delete remediation exceptions batch objects.
--   Each object in the batch consists of a list of failed items and
--   failure messages.
deleteRemediationExceptionsResponse_failedBatches :: Lens' DeleteRemediationExceptionsResponse (Maybe [FailedDeleteRemediationExceptionsBatch])

-- | The response's http status code.
deleteRemediationExceptionsResponse_httpStatus :: Lens' DeleteRemediationExceptionsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance GHC.Show.Show Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance GHC.Read.Read Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance GHC.Classes.Eq Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance GHC.Generics.Generic Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptionsResponse
instance GHC.Show.Show Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptionsResponse
instance GHC.Read.Read Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptionsResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteRemediationExceptions.DeleteRemediationExceptions


-- | Deletes the remediation configuration.
module Network.AWS.Config.DeleteRemediationConfiguration

-- | <i>See:</i> <a>newDeleteRemediationConfiguration</a> smart
--   constructor.
data DeleteRemediationConfiguration
DeleteRemediationConfiguration' :: Maybe Text -> Text -> DeleteRemediationConfiguration

-- | The type of a resource.
[$sel:resourceType:DeleteRemediationConfiguration'] :: DeleteRemediationConfiguration -> Maybe Text

-- | The name of the Config rule for which you want to delete remediation
--   configuration.
[$sel:configRuleName:DeleteRemediationConfiguration'] :: DeleteRemediationConfiguration -> Text

-- | Create a value of <a>DeleteRemediationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:DeleteRemediationConfiguration'</a>,
--   <a>deleteRemediationConfiguration_resourceType</a> - The type of a
--   resource.
--   
--   <a>$sel:configRuleName:DeleteRemediationConfiguration'</a>,
--   <a>deleteRemediationConfiguration_configRuleName</a> - The name of the
--   Config rule for which you want to delete remediation configuration.
newDeleteRemediationConfiguration :: Text -> DeleteRemediationConfiguration

-- | The type of a resource.
deleteRemediationConfiguration_resourceType :: Lens' DeleteRemediationConfiguration (Maybe Text)

-- | The name of the Config rule for which you want to delete remediation
--   configuration.
deleteRemediationConfiguration_configRuleName :: Lens' DeleteRemediationConfiguration Text

-- | <i>See:</i> <a>newDeleteRemediationConfigurationResponse</a> smart
--   constructor.
data DeleteRemediationConfigurationResponse
DeleteRemediationConfigurationResponse' :: Int -> DeleteRemediationConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRemediationConfigurationResponse'] :: DeleteRemediationConfigurationResponse -> Int

-- | Create a value of <a>DeleteRemediationConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRemediationConfigurationResponse'</a>,
--   <a>deleteRemediationConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteRemediationConfigurationResponse :: Int -> DeleteRemediationConfigurationResponse

-- | The response's http status code.
deleteRemediationConfigurationResponse_httpStatus :: Lens' DeleteRemediationConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance GHC.Show.Show Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance GHC.Read.Read Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance GHC.Classes.Eq Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance GHC.Generics.Generic Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfigurationResponse
instance GHC.Show.Show Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfigurationResponse
instance GHC.Read.Read Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteRemediationConfiguration.DeleteRemediationConfiguration


-- | Deletes pending authorization requests for a specified aggregator
--   account in a specified region.
module Network.AWS.Config.DeletePendingAggregationRequest

-- | <i>See:</i> <a>newDeletePendingAggregationRequest</a> smart
--   constructor.
data DeletePendingAggregationRequest
DeletePendingAggregationRequest' :: Text -> Text -> DeletePendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
[$sel:requesterAccountId:DeletePendingAggregationRequest'] :: DeletePendingAggregationRequest -> Text

-- | The region requesting to aggregate data.
[$sel:requesterAwsRegion:DeletePendingAggregationRequest'] :: DeletePendingAggregationRequest -> Text

-- | Create a value of <a>DeletePendingAggregationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requesterAccountId:DeletePendingAggregationRequest'</a>,
--   <a>deletePendingAggregationRequest_requesterAccountId</a> - The
--   12-digit account ID of the account requesting to aggregate data.
--   
--   <a>$sel:requesterAwsRegion:DeletePendingAggregationRequest'</a>,
--   <a>deletePendingAggregationRequest_requesterAwsRegion</a> - The region
--   requesting to aggregate data.
newDeletePendingAggregationRequest :: Text -> Text -> DeletePendingAggregationRequest

-- | The 12-digit account ID of the account requesting to aggregate data.
deletePendingAggregationRequest_requesterAccountId :: Lens' DeletePendingAggregationRequest Text

-- | The region requesting to aggregate data.
deletePendingAggregationRequest_requesterAwsRegion :: Lens' DeletePendingAggregationRequest Text

-- | <i>See:</i> <a>newDeletePendingAggregationRequestResponse</a> smart
--   constructor.
data DeletePendingAggregationRequestResponse
DeletePendingAggregationRequestResponse' :: DeletePendingAggregationRequestResponse

-- | Create a value of <a>DeletePendingAggregationRequestResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePendingAggregationRequestResponse :: DeletePendingAggregationRequestResponse
instance GHC.Generics.Generic Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance GHC.Show.Show Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance GHC.Read.Read Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance GHC.Classes.Eq Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance GHC.Generics.Generic Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequestResponse
instance GHC.Show.Show Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequestResponse
instance GHC.Read.Read Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequestResponse
instance GHC.Classes.Eq Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Control.DeepSeq.NFData Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequestResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Control.DeepSeq.NFData Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeletePendingAggregationRequest.DeletePendingAggregationRequest


-- | Deletes the specified organization conformance pack and all of the
--   config rules and remediation actions from all member accounts in that
--   organization.
--   
--   Only a master account or a delegated administrator account can delete
--   an organization conformance pack. When calling this API with a
--   delegated administrator, you must ensure Organizations
--   <tt>ListDelegatedAdministrator</tt> permissions are added.
--   
--   Config sets the state of a conformance pack to DELETE_IN_PROGRESS
--   until the deletion is complete. You cannot update a conformance pack
--   while it is in this state.
module Network.AWS.Config.DeleteOrganizationConformancePack

-- | <i>See:</i> <a>newDeleteOrganizationConformancePack</a> smart
--   constructor.
data DeleteOrganizationConformancePack
DeleteOrganizationConformancePack' :: Text -> DeleteOrganizationConformancePack

-- | The name of organization conformance pack that you want to delete.
[$sel:organizationConformancePackName:DeleteOrganizationConformancePack'] :: DeleteOrganizationConformancePack -> Text

-- | Create a value of <a>DeleteOrganizationConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackName:DeleteOrganizationConformancePack'</a>,
--   <a>deleteOrganizationConformancePack_organizationConformancePackName</a>
--   - The name of organization conformance pack that you want to delete.
newDeleteOrganizationConformancePack :: Text -> DeleteOrganizationConformancePack

-- | The name of organization conformance pack that you want to delete.
deleteOrganizationConformancePack_organizationConformancePackName :: Lens' DeleteOrganizationConformancePack Text

-- | <i>See:</i> <a>newDeleteOrganizationConformancePackResponse</a> smart
--   constructor.
data DeleteOrganizationConformancePackResponse
DeleteOrganizationConformancePackResponse' :: DeleteOrganizationConformancePackResponse

-- | Create a value of <a>DeleteOrganizationConformancePackResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteOrganizationConformancePackResponse :: DeleteOrganizationConformancePackResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance GHC.Show.Show Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance GHC.Read.Read Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance GHC.Classes.Eq Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance GHC.Generics.Generic Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePackResponse
instance GHC.Show.Show Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePackResponse
instance GHC.Read.Read Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePackResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePackResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteOrganizationConformancePack.DeleteOrganizationConformancePack


-- | Deletes the specified organization config rule and all of its
--   evaluation results from all member accounts in that organization.
--   
--   Only a master account and a delegated administrator account can delete
--   an organization config rule. When calling this API with a delegated
--   administrator, you must ensure Organizations
--   <tt>ListDelegatedAdministrator</tt> permissions are added.
--   
--   Config sets the state of a rule to DELETE_IN_PROGRESS until the
--   deletion is complete. You cannot update a rule while it is in this
--   state.
module Network.AWS.Config.DeleteOrganizationConfigRule

-- | <i>See:</i> <a>newDeleteOrganizationConfigRule</a> smart constructor.
data DeleteOrganizationConfigRule
DeleteOrganizationConfigRule' :: Text -> DeleteOrganizationConfigRule

-- | The name of organization config rule that you want to delete.
[$sel:organizationConfigRuleName:DeleteOrganizationConfigRule'] :: DeleteOrganizationConfigRule -> Text

-- | Create a value of <a>DeleteOrganizationConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationConfigRuleName:DeleteOrganizationConfigRule'</a>,
--   <a>deleteOrganizationConfigRule_organizationConfigRuleName</a> - The
--   name of organization config rule that you want to delete.
newDeleteOrganizationConfigRule :: Text -> DeleteOrganizationConfigRule

-- | The name of organization config rule that you want to delete.
deleteOrganizationConfigRule_organizationConfigRuleName :: Lens' DeleteOrganizationConfigRule Text

-- | <i>See:</i> <a>newDeleteOrganizationConfigRuleResponse</a> smart
--   constructor.
data DeleteOrganizationConfigRuleResponse
DeleteOrganizationConfigRuleResponse' :: DeleteOrganizationConfigRuleResponse

-- | Create a value of <a>DeleteOrganizationConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteOrganizationConfigRuleResponse :: DeleteOrganizationConfigRuleResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance GHC.Show.Show Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance GHC.Read.Read Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance GHC.Classes.Eq Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance GHC.Generics.Generic Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteOrganizationConfigRule.DeleteOrganizationConfigRule


-- | Deletes the evaluation results for the specified Config rule. You can
--   specify one Config rule per request. After you delete the evaluation
--   results, you can call the StartConfigRulesEvaluation API to start
--   evaluating your Amazon Web Services resources against the rule.
module Network.AWS.Config.DeleteEvaluationResults

-- | <i>See:</i> <a>newDeleteEvaluationResults</a> smart constructor.
data DeleteEvaluationResults
DeleteEvaluationResults' :: Text -> DeleteEvaluationResults

-- | The name of the Config rule for which you want to delete the
--   evaluation results.
[$sel:configRuleName:DeleteEvaluationResults'] :: DeleteEvaluationResults -> Text

-- | Create a value of <a>DeleteEvaluationResults</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteEvaluationResults'</a>,
--   <a>deleteEvaluationResults_configRuleName</a> - The name of the Config
--   rule for which you want to delete the evaluation results.
newDeleteEvaluationResults :: Text -> DeleteEvaluationResults

-- | The name of the Config rule for which you want to delete the
--   evaluation results.
deleteEvaluationResults_configRuleName :: Lens' DeleteEvaluationResults Text

-- | The output when you delete the evaluation results for the specified
--   Config rule.
--   
--   <i>See:</i> <a>newDeleteEvaluationResultsResponse</a> smart
--   constructor.
data DeleteEvaluationResultsResponse
DeleteEvaluationResultsResponse' :: Int -> DeleteEvaluationResultsResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteEvaluationResultsResponse'] :: DeleteEvaluationResultsResponse -> Int

-- | Create a value of <a>DeleteEvaluationResultsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEvaluationResultsResponse'</a>,
--   <a>deleteEvaluationResultsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteEvaluationResultsResponse :: Int -> DeleteEvaluationResultsResponse

-- | The response's http status code.
deleteEvaluationResultsResponse_httpStatus :: Lens' DeleteEvaluationResultsResponse Int
instance GHC.Generics.Generic Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance GHC.Show.Show Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance GHC.Read.Read Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance GHC.Classes.Eq Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance GHC.Generics.Generic Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResultsResponse
instance GHC.Show.Show Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResultsResponse
instance GHC.Read.Read Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResultsResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResultsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResultsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteEvaluationResults.DeleteEvaluationResults


-- | Deletes the delivery channel.
--   
--   Before you can delete the delivery channel, you must stop the
--   configuration recorder by using the StopConfigurationRecorder action.
module Network.AWS.Config.DeleteDeliveryChannel

-- | The input for the DeleteDeliveryChannel action. The action accepts the
--   following data, in JSON format.
--   
--   <i>See:</i> <a>newDeleteDeliveryChannel</a> smart constructor.
data DeleteDeliveryChannel
DeleteDeliveryChannel' :: Text -> DeleteDeliveryChannel

-- | The name of the delivery channel to delete.
[$sel:deliveryChannelName:DeleteDeliveryChannel'] :: DeleteDeliveryChannel -> Text

-- | Create a value of <a>DeleteDeliveryChannel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelName:DeleteDeliveryChannel'</a>,
--   <a>deleteDeliveryChannel_deliveryChannelName</a> - The name of the
--   delivery channel to delete.
newDeleteDeliveryChannel :: Text -> DeleteDeliveryChannel

-- | The name of the delivery channel to delete.
deleteDeliveryChannel_deliveryChannelName :: Lens' DeleteDeliveryChannel Text

-- | <i>See:</i> <a>newDeleteDeliveryChannelResponse</a> smart constructor.
data DeleteDeliveryChannelResponse
DeleteDeliveryChannelResponse' :: DeleteDeliveryChannelResponse

-- | Create a value of <a>DeleteDeliveryChannelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeliveryChannelResponse :: DeleteDeliveryChannelResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance GHC.Show.Show Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance GHC.Read.Read Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance GHC.Classes.Eq Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance GHC.Generics.Generic Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannelResponse
instance GHC.Show.Show Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannelResponse
instance GHC.Read.Read Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannelResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteDeliveryChannel.DeleteDeliveryChannel


-- | Deletes the specified conformance pack and all the Config rules,
--   remediation actions, and all evaluation results within that
--   conformance pack.
--   
--   Config sets the conformance pack to <tt>DELETE_IN_PROGRESS</tt> until
--   the deletion is complete. You cannot update a conformance pack while
--   it is in this state.
module Network.AWS.Config.DeleteConformancePack

-- | <i>See:</i> <a>newDeleteConformancePack</a> smart constructor.
data DeleteConformancePack
DeleteConformancePack' :: Text -> DeleteConformancePack

-- | Name of the conformance pack you want to delete.
[$sel:conformancePackName:DeleteConformancePack'] :: DeleteConformancePack -> Text

-- | Create a value of <a>DeleteConformancePack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackName:DeleteConformancePack'</a>,
--   <a>deleteConformancePack_conformancePackName</a> - Name of the
--   conformance pack you want to delete.
newDeleteConformancePack :: Text -> DeleteConformancePack

-- | Name of the conformance pack you want to delete.
deleteConformancePack_conformancePackName :: Lens' DeleteConformancePack Text

-- | <i>See:</i> <a>newDeleteConformancePackResponse</a> smart constructor.
data DeleteConformancePackResponse
DeleteConformancePackResponse' :: DeleteConformancePackResponse

-- | Create a value of <a>DeleteConformancePackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConformancePackResponse :: DeleteConformancePackResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance GHC.Show.Show Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance GHC.Read.Read Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance GHC.Classes.Eq Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance GHC.Generics.Generic Network.AWS.Config.DeleteConformancePack.DeleteConformancePackResponse
instance GHC.Show.Show Network.AWS.Config.DeleteConformancePack.DeleteConformancePackResponse
instance GHC.Read.Read Network.AWS.Config.DeleteConformancePack.DeleteConformancePackResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteConformancePack.DeleteConformancePackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConformancePack.DeleteConformancePackResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteConformancePack.DeleteConformancePack
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteConformancePack.DeleteConformancePack


-- | Deletes the configuration recorder.
--   
--   After the configuration recorder is deleted, Config will not record
--   resource configuration changes until you create a new configuration
--   recorder.
--   
--   This action does not delete the configuration information that was
--   previously recorded. You will be able to access the previously
--   recorded information by using the <tt>GetResourceConfigHistory</tt>
--   action, but you will not be able to access this information in the
--   Config console until you create a new configuration recorder.
module Network.AWS.Config.DeleteConfigurationRecorder

-- | The request object for the <tt>DeleteConfigurationRecorder</tt>
--   action.
--   
--   <i>See:</i> <a>newDeleteConfigurationRecorder</a> smart constructor.
data DeleteConfigurationRecorder
DeleteConfigurationRecorder' :: Text -> DeleteConfigurationRecorder

-- | The name of the configuration recorder to be deleted. You can retrieve
--   the name of your configuration recorder by using the
--   <tt>DescribeConfigurationRecorders</tt> action.
[$sel:configurationRecorderName:DeleteConfigurationRecorder'] :: DeleteConfigurationRecorder -> Text

-- | Create a value of <a>DeleteConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:DeleteConfigurationRecorder'</a>,
--   <a>deleteConfigurationRecorder_configurationRecorderName</a> - The
--   name of the configuration recorder to be deleted. You can retrieve the
--   name of your configuration recorder by using the
--   <tt>DescribeConfigurationRecorders</tt> action.
newDeleteConfigurationRecorder :: Text -> DeleteConfigurationRecorder

-- | The name of the configuration recorder to be deleted. You can retrieve
--   the name of your configuration recorder by using the
--   <tt>DescribeConfigurationRecorders</tt> action.
deleteConfigurationRecorder_configurationRecorderName :: Lens' DeleteConfigurationRecorder Text

-- | <i>See:</i> <a>newDeleteConfigurationRecorderResponse</a> smart
--   constructor.
data DeleteConfigurationRecorderResponse
DeleteConfigurationRecorderResponse' :: DeleteConfigurationRecorderResponse

-- | Create a value of <a>DeleteConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationRecorderResponse :: DeleteConfigurationRecorderResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance GHC.Show.Show Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance GHC.Read.Read Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorderResponse
instance GHC.Show.Show Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorderResponse
instance GHC.Read.Read Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorderResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorderResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteConfigurationRecorder.DeleteConfigurationRecorder


-- | Deletes the specified configuration aggregator and the aggregated data
--   associated with the aggregator.
module Network.AWS.Config.DeleteConfigurationAggregator

-- | <i>See:</i> <a>newDeleteConfigurationAggregator</a> smart constructor.
data DeleteConfigurationAggregator
DeleteConfigurationAggregator' :: Text -> DeleteConfigurationAggregator

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:DeleteConfigurationAggregator'] :: DeleteConfigurationAggregator -> Text

-- | Create a value of <a>DeleteConfigurationAggregator</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregatorName:DeleteConfigurationAggregator'</a>,
--   <a>deleteConfigurationAggregator_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newDeleteConfigurationAggregator :: Text -> DeleteConfigurationAggregator

-- | The name of the configuration aggregator.
deleteConfigurationAggregator_configurationAggregatorName :: Lens' DeleteConfigurationAggregator Text

-- | <i>See:</i> <a>newDeleteConfigurationAggregatorResponse</a> smart
--   constructor.
data DeleteConfigurationAggregatorResponse
DeleteConfigurationAggregatorResponse' :: DeleteConfigurationAggregatorResponse

-- | Create a value of <a>DeleteConfigurationAggregatorResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationAggregatorResponse :: DeleteConfigurationAggregatorResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance GHC.Show.Show Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance GHC.Read.Read Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregatorResponse
instance GHC.Show.Show Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregatorResponse
instance GHC.Read.Read Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregatorResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregatorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregatorResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteConfigurationAggregator.DeleteConfigurationAggregator


-- | Deletes the specified Config rule and all of its evaluation results.
--   
--   Config sets the state of a rule to <tt>DELETING</tt> until the
--   deletion is complete. You cannot update a rule while it is in this
--   state. If you make a <tt>PutConfigRule</tt> or
--   <tt>DeleteConfigRule</tt> request for the rule, you will receive a
--   <tt>ResourceInUseException</tt>.
--   
--   You can check the state of a rule by using the
--   <tt>DescribeConfigRules</tt> request.
module Network.AWS.Config.DeleteConfigRule

-- | <i>See:</i> <a>newDeleteConfigRule</a> smart constructor.
data DeleteConfigRule
DeleteConfigRule' :: Text -> DeleteConfigRule

-- | The name of the Config rule that you want to delete.
[$sel:configRuleName:DeleteConfigRule'] :: DeleteConfigRule -> Text

-- | Create a value of <a>DeleteConfigRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteConfigRule'</a>,
--   <a>deleteConfigRule_configRuleName</a> - The name of the Config rule
--   that you want to delete.
newDeleteConfigRule :: Text -> DeleteConfigRule

-- | The name of the Config rule that you want to delete.
deleteConfigRule_configRuleName :: Lens' DeleteConfigRule Text

-- | <i>See:</i> <a>newDeleteConfigRuleResponse</a> smart constructor.
data DeleteConfigRuleResponse
DeleteConfigRuleResponse' :: DeleteConfigRuleResponse

-- | Create a value of <a>DeleteConfigRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigRuleResponse :: DeleteConfigRuleResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance GHC.Show.Show Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance GHC.Read.Read Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance GHC.Generics.Generic Network.AWS.Config.DeleteConfigRule.DeleteConfigRuleResponse
instance GHC.Show.Show Network.AWS.Config.DeleteConfigRule.DeleteConfigRuleResponse
instance GHC.Read.Read Network.AWS.Config.DeleteConfigRule.DeleteConfigRuleResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteConfigRule.DeleteConfigRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigRule.DeleteConfigRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteConfigRule.DeleteConfigRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteConfigRule.DeleteConfigRule


-- | Deletes the authorization granted to the specified configuration
--   aggregator account in a specified region.
module Network.AWS.Config.DeleteAggregationAuthorization

-- | <i>See:</i> <a>newDeleteAggregationAuthorization</a> smart
--   constructor.
data DeleteAggregationAuthorization
DeleteAggregationAuthorization' :: Text -> Text -> DeleteAggregationAuthorization

-- | The 12-digit account ID of the account authorized to aggregate data.
[$sel:authorizedAccountId:DeleteAggregationAuthorization'] :: DeleteAggregationAuthorization -> Text

-- | The region authorized to collect aggregated data.
[$sel:authorizedAwsRegion:DeleteAggregationAuthorization'] :: DeleteAggregationAuthorization -> Text

-- | Create a value of <a>DeleteAggregationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizedAccountId:DeleteAggregationAuthorization'</a>,
--   <a>deleteAggregationAuthorization_authorizedAccountId</a> - The
--   12-digit account ID of the account authorized to aggregate data.
--   
--   <a>$sel:authorizedAwsRegion:DeleteAggregationAuthorization'</a>,
--   <a>deleteAggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
newDeleteAggregationAuthorization :: Text -> Text -> DeleteAggregationAuthorization

-- | The 12-digit account ID of the account authorized to aggregate data.
deleteAggregationAuthorization_authorizedAccountId :: Lens' DeleteAggregationAuthorization Text

-- | The region authorized to collect aggregated data.
deleteAggregationAuthorization_authorizedAwsRegion :: Lens' DeleteAggregationAuthorization Text

-- | <i>See:</i> <a>newDeleteAggregationAuthorizationResponse</a> smart
--   constructor.
data DeleteAggregationAuthorizationResponse
DeleteAggregationAuthorizationResponse' :: DeleteAggregationAuthorizationResponse

-- | Create a value of <a>DeleteAggregationAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAggregationAuthorizationResponse :: DeleteAggregationAuthorizationResponse
instance GHC.Generics.Generic Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance GHC.Show.Show Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance GHC.Read.Read Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance GHC.Classes.Eq Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance GHC.Generics.Generic Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorizationResponse
instance GHC.Show.Show Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorizationResponse
instance GHC.Read.Read Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.DeleteAggregationAuthorization.DeleteAggregationAuthorization


-- | Returns the <tt>BaseConfigurationItem</tt> for one or more requested
--   resources. The operation also returns a list of resources that are not
--   processed in the current request. If there are no unprocessed
--   resources, the operation returns an empty unprocessedResourceKeys
--   list.
--   
--   <ul>
--   <li>The API does not return results for deleted resources.</li>
--   <li>The API does not return any tags for the requested resources. This
--   information is filtered out of the supplementaryConfiguration section
--   of the API response.</li>
--   </ul>
module Network.AWS.Config.BatchGetResourceConfig

-- | <i>See:</i> <a>newBatchGetResourceConfig</a> smart constructor.
data BatchGetResourceConfig
BatchGetResourceConfig' :: NonEmpty ResourceKey -> BatchGetResourceConfig

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
[$sel:resourceKeys:BatchGetResourceConfig'] :: BatchGetResourceConfig -> NonEmpty ResourceKey

-- | Create a value of <a>BatchGetResourceConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceKeys:BatchGetResourceConfig'</a>,
--   <a>batchGetResourceConfig_resourceKeys</a> - A list of resource keys
--   to be processed with the current request. Each element in the list
--   consists of the resource type and resource ID.
newBatchGetResourceConfig :: NonEmpty ResourceKey -> BatchGetResourceConfig

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
batchGetResourceConfig_resourceKeys :: Lens' BatchGetResourceConfig (NonEmpty ResourceKey)

-- | <i>See:</i> <a>newBatchGetResourceConfigResponse</a> smart
--   constructor.
data BatchGetResourceConfigResponse
BatchGetResourceConfigResponse' :: Maybe [BaseConfigurationItem] -> Maybe (NonEmpty ResourceKey) -> Int -> BatchGetResourceConfigResponse

-- | A list that contains the current configuration of one or more
--   resources.
[$sel:baseConfigurationItems:BatchGetResourceConfigResponse'] :: BatchGetResourceConfigResponse -> Maybe [BaseConfigurationItem]

-- | A list of resource keys that were not processed with the current
--   response. The unprocessesResourceKeys value is in the same form as
--   ResourceKeys, so the value can be directly provided to a subsequent
--   BatchGetResourceConfig operation. If there are no unprocessed resource
--   keys, the response contains an empty unprocessedResourceKeys list.
[$sel:unprocessedResourceKeys:BatchGetResourceConfigResponse'] :: BatchGetResourceConfigResponse -> Maybe (NonEmpty ResourceKey)

-- | The response's http status code.
[$sel:httpStatus:BatchGetResourceConfigResponse'] :: BatchGetResourceConfigResponse -> Int

-- | Create a value of <a>BatchGetResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseConfigurationItems:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_baseConfigurationItems</a> - A list
--   that contains the current configuration of one or more resources.
--   
--   <a>$sel:unprocessedResourceKeys:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_unprocessedResourceKeys</a> - A list
--   of resource keys that were not processed with the current response.
--   The unprocessesResourceKeys value is in the same form as ResourceKeys,
--   so the value can be directly provided to a subsequent
--   BatchGetResourceConfig operation. If there are no unprocessed resource
--   keys, the response contains an empty unprocessedResourceKeys list.
--   
--   <a>$sel:httpStatus:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetResourceConfigResponse :: Int -> BatchGetResourceConfigResponse

-- | A list that contains the current configuration of one or more
--   resources.
batchGetResourceConfigResponse_baseConfigurationItems :: Lens' BatchGetResourceConfigResponse (Maybe [BaseConfigurationItem])

-- | A list of resource keys that were not processed with the current
--   response. The unprocessesResourceKeys value is in the same form as
--   ResourceKeys, so the value can be directly provided to a subsequent
--   BatchGetResourceConfig operation. If there are no unprocessed resource
--   keys, the response contains an empty unprocessedResourceKeys list.
batchGetResourceConfigResponse_unprocessedResourceKeys :: Lens' BatchGetResourceConfigResponse (Maybe (NonEmpty ResourceKey))

-- | The response's http status code.
batchGetResourceConfigResponse_httpStatus :: Lens' BatchGetResourceConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance GHC.Show.Show Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance GHC.Read.Read Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.BatchGetResourceConfig.BatchGetResourceConfig


-- | Returns the current configuration items for resources that are present
--   in your Config aggregator. The operation also returns a list of
--   resources that are not processed in the current request. If there are
--   no unprocessed resources, the operation returns an empty
--   <tt>unprocessedResourceIdentifiers</tt> list.
--   
--   <ul>
--   <li>The API does not return results for deleted resources.</li>
--   <li>The API does not return tags and relationships.</li>
--   </ul>
module Network.AWS.Config.BatchGetAggregateResourceConfig

-- | <i>See:</i> <a>newBatchGetAggregateResourceConfig</a> smart
--   constructor.
data BatchGetAggregateResourceConfig
BatchGetAggregateResourceConfig' :: Text -> NonEmpty AggregateResourceIdentifier -> BatchGetAggregateResourceConfig

-- | The name of the configuration aggregator.
[$sel:configurationAggregatorName:BatchGetAggregateResourceConfig'] :: BatchGetAggregateResourceConfig -> Text

-- | A list of aggregate ResourceIdentifiers objects.
[$sel:resourceIdentifiers:BatchGetAggregateResourceConfig'] :: BatchGetAggregateResourceConfig -> NonEmpty AggregateResourceIdentifier

-- | Create a value of <a>BatchGetAggregateResourceConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregatorName:BatchGetAggregateResourceConfig'</a>,
--   <a>batchGetAggregateResourceConfig_configurationAggregatorName</a> -
--   The name of the configuration aggregator.
--   
--   <a>$sel:resourceIdentifiers:BatchGetAggregateResourceConfig'</a>,
--   <a>batchGetAggregateResourceConfig_resourceIdentifiers</a> - A list of
--   aggregate ResourceIdentifiers objects.
newBatchGetAggregateResourceConfig :: Text -> NonEmpty AggregateResourceIdentifier -> BatchGetAggregateResourceConfig

-- | The name of the configuration aggregator.
batchGetAggregateResourceConfig_configurationAggregatorName :: Lens' BatchGetAggregateResourceConfig Text

-- | A list of aggregate ResourceIdentifiers objects.
batchGetAggregateResourceConfig_resourceIdentifiers :: Lens' BatchGetAggregateResourceConfig (NonEmpty AggregateResourceIdentifier)

-- | <i>See:</i> <a>newBatchGetAggregateResourceConfigResponse</a> smart
--   constructor.
data BatchGetAggregateResourceConfigResponse
BatchGetAggregateResourceConfigResponse' :: Maybe [BaseConfigurationItem] -> Maybe [AggregateResourceIdentifier] -> Int -> BatchGetAggregateResourceConfigResponse

-- | A list that contains the current configuration of one or more
--   resources.
[$sel:baseConfigurationItems:BatchGetAggregateResourceConfigResponse'] :: BatchGetAggregateResourceConfigResponse -> Maybe [BaseConfigurationItem]

-- | A list of resource identifiers that were not processed with current
--   scope. The list is empty if all the resources are processed.
[$sel:unprocessedResourceIdentifiers:BatchGetAggregateResourceConfigResponse'] :: BatchGetAggregateResourceConfigResponse -> Maybe [AggregateResourceIdentifier]

-- | The response's http status code.
[$sel:httpStatus:BatchGetAggregateResourceConfigResponse'] :: BatchGetAggregateResourceConfigResponse -> Int

-- | Create a value of <a>BatchGetAggregateResourceConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:baseConfigurationItems:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_baseConfigurationItems</a>
--   - A list that contains the current configuration of one or more
--   resources.
--   
--   
--   <a>$sel:unprocessedResourceIdentifiers:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_unprocessedResourceIdentifiers</a>
--   - A list of resource identifiers that were not processed with current
--   scope. The list is empty if all the resources are processed.
--   
--   <a>$sel:httpStatus:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_httpStatus</a> - The
--   response's http status code.
newBatchGetAggregateResourceConfigResponse :: Int -> BatchGetAggregateResourceConfigResponse

-- | A list that contains the current configuration of one or more
--   resources.
batchGetAggregateResourceConfigResponse_baseConfigurationItems :: Lens' BatchGetAggregateResourceConfigResponse (Maybe [BaseConfigurationItem])

-- | A list of resource identifiers that were not processed with current
--   scope. The list is empty if all the resources are processed.
batchGetAggregateResourceConfigResponse_unprocessedResourceIdentifiers :: Lens' BatchGetAggregateResourceConfigResponse (Maybe [AggregateResourceIdentifier])

-- | The response's http status code.
batchGetAggregateResourceConfigResponse_httpStatus :: Lens' BatchGetAggregateResourceConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance GHC.Show.Show Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance GHC.Read.Read Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance GHC.Classes.Eq Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance GHC.Generics.Generic Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfigResponse
instance GHC.Show.Show Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfigResponse
instance GHC.Read.Read Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfigResponse
instance GHC.Classes.Eq Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Control.DeepSeq.NFData Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.BatchGetAggregateResourceConfig.BatchGetAggregateResourceConfig


-- | Deletes specified tags from a resource.
module Network.AWS.Config.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   identifies the resource for which to list the tags. Currently, the
--   supported resources are <tt>ConfigRule</tt>,
--   <tt>ConfigurationAggregator</tt> and <tt>AggregatorAuthorization</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.Config.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Config.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Config.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Config.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Config.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Config.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Config.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Config.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Config.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Config.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Config.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Config.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Config.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Config.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Config.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Config.UntagResource.UntagResource


module Network.AWS.Config.Lens

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describePendingAggregationRequests_nextToken :: Lens' DescribePendingAggregationRequests (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
describePendingAggregationRequests_limit :: Lens' DescribePendingAggregationRequests (Maybe Natural)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describePendingAggregationRequestsResponse_nextToken :: Lens' DescribePendingAggregationRequestsResponse (Maybe Text)

-- | Returns a PendingAggregationRequests object.
describePendingAggregationRequestsResponse_pendingAggregationRequests :: Lens' DescribePendingAggregationRequestsResponse (Maybe [PendingAggregationRequest])

-- | The response's http status code.
describePendingAggregationRequestsResponse_httpStatus :: Lens' DescribePendingAggregationRequestsResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRemediationExecutionStatus_nextToken :: Lens' DescribeRemediationExecutionStatus (Maybe Text)

-- | The maximum number of RemediationExecutionStatuses returned on each
--   page. The default is maximum. If you specify 0, Config uses the
--   default.
describeRemediationExecutionStatus_limit :: Lens' DescribeRemediationExecutionStatus (Maybe Natural)

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
describeRemediationExecutionStatus_resourceKeys :: Lens' DescribeRemediationExecutionStatus (Maybe (NonEmpty ResourceKey))

-- | A list of Config rule names.
describeRemediationExecutionStatus_configRuleName :: Lens' DescribeRemediationExecutionStatus Text

-- | Returns a list of remediation execution statuses objects.
describeRemediationExecutionStatusResponse_remediationExecutionStatuses :: Lens' DescribeRemediationExecutionStatusResponse (Maybe [RemediationExecutionStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRemediationExecutionStatusResponse_nextToken :: Lens' DescribeRemediationExecutionStatusResponse (Maybe Text)

-- | The response's http status code.
describeRemediationExecutionStatusResponse_httpStatus :: Lens' DescribeRemediationExecutionStatusResponse Int

-- | The chronological order for configuration items listed. By default,
--   the results are listed in reverse chronological order.
getResourceConfigHistory_chronologicalOrder :: Lens' GetResourceConfigHistory (Maybe ChronologicalOrder)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getResourceConfigHistory_nextToken :: Lens' GetResourceConfigHistory (Maybe Text)

-- | The maximum number of configuration items returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getResourceConfigHistory_limit :: Lens' GetResourceConfigHistory (Maybe Natural)

-- | The time stamp that indicates a later time. If not specified, current
--   time is taken.
getResourceConfigHistory_laterTime :: Lens' GetResourceConfigHistory (Maybe UTCTime)

-- | The time stamp that indicates an earlier time. If not specified, the
--   action returns paginated results that contain configuration items that
--   start when the first configuration item was recorded.
getResourceConfigHistory_earlierTime :: Lens' GetResourceConfigHistory (Maybe UTCTime)

-- | The resource type.
getResourceConfigHistory_resourceType :: Lens' GetResourceConfigHistory ResourceType

-- | The ID of the resource (for example., <tt>sg-xxxxxx</tt>).
getResourceConfigHistory_resourceId :: Lens' GetResourceConfigHistory Text

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getResourceConfigHistoryResponse_nextToken :: Lens' GetResourceConfigHistoryResponse (Maybe Text)

-- | A list that contains the configuration history of one or more
--   resources.
getResourceConfigHistoryResponse_configurationItems :: Lens' GetResourceConfigHistoryResponse (Maybe [ConfigurationItem])

-- | The response's http status code.
getResourceConfigHistoryResponse_httpStatus :: Lens' GetResourceConfigHistoryResponse Int

-- | The name of the query.
getStoredQuery_queryName :: Lens' GetStoredQuery Text

-- | Returns a <tt>StoredQuery</tt> object.
getStoredQueryResponse_storedQuery :: Lens' GetStoredQueryResponse (Maybe StoredQuery)

-- | The response's http status code.
getStoredQueryResponse_httpStatus :: Lens' GetStoredQueryResponse Int

-- | The name of the configuration aggregator.
getAggregateResourceConfig_configurationAggregatorName :: Lens' GetAggregateResourceConfig Text

-- | An object that identifies aggregate resource.
getAggregateResourceConfig_resourceIdentifier :: Lens' GetAggregateResourceConfig AggregateResourceIdentifier

-- | Returns a <tt>ConfigurationItem</tt> object.
getAggregateResourceConfigResponse_configurationItem :: Lens' GetAggregateResourceConfigResponse (Maybe ConfigurationItem)

-- | The response's http status code.
getAggregateResourceConfigResponse_httpStatus :: Lens' GetAggregateResourceConfigResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregators_nextToken :: Lens' DescribeConfigurationAggregators (Maybe Text)

-- | The maximum number of configuration aggregators returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeConfigurationAggregators_limit :: Lens' DescribeConfigurationAggregators (Maybe Natural)

-- | The name of the configuration aggregators.
describeConfigurationAggregators_configurationAggregatorNames :: Lens' DescribeConfigurationAggregators (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorsResponse_nextToken :: Lens' DescribeConfigurationAggregatorsResponse (Maybe Text)

-- | Returns a ConfigurationAggregators object.
describeConfigurationAggregatorsResponse_configurationAggregators :: Lens' DescribeConfigurationAggregatorsResponse (Maybe [ConfigurationAggregator])

-- | The response's http status code.
describeConfigurationAggregatorsResponse_httpStatus :: Lens' DescribeConfigurationAggregatorsResponse Int

-- | Specify one or more Config rule names to filter the results by rule.
describeComplianceByConfigRule_configRuleNames :: Lens' DescribeComplianceByConfigRule (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
describeComplianceByConfigRule_complianceTypes :: Lens' DescribeComplianceByConfigRule (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeComplianceByConfigRule_nextToken :: Lens' DescribeComplianceByConfigRule (Maybe Text)

-- | Indicates whether each of the specified Config rules is compliant.
describeComplianceByConfigRuleResponse_complianceByConfigRules :: Lens' DescribeComplianceByConfigRuleResponse (Maybe [ComplianceByConfigRule])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeComplianceByConfigRuleResponse_nextToken :: Lens' DescribeComplianceByConfigRuleResponse (Maybe Text)

-- | The response's http status code.
describeComplianceByConfigRuleResponse_httpStatus :: Lens' DescribeComplianceByConfigRuleResponse Int

-- | A list of names of retention configurations for which you want
--   details. If you do not specify a name, Config returns details for all
--   the retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
describeRetentionConfigurations_retentionConfigurationNames :: Lens' DescribeRetentionConfigurations (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRetentionConfigurations_nextToken :: Lens' DescribeRetentionConfigurations (Maybe Text)

-- | Returns a retention configuration object.
describeRetentionConfigurationsResponse_retentionConfigurations :: Lens' DescribeRetentionConfigurationsResponse (Maybe [RetentionConfiguration])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeRetentionConfigurationsResponse_nextToken :: Lens' DescribeRetentionConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeRetentionConfigurationsResponse_httpStatus :: Lens' DescribeRetentionConfigurationsResponse Int

-- | The name of the recorder object that records each configuration change
--   made to the resources.
stopConfigurationRecorder_configurationRecorderName :: Lens' StopConfigurationRecorder Text

-- | Filters the results based on the ConfigRuleComplianceSummaryFilters
--   object.
getAggregateConfigRuleComplianceSummary_filters :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe ConfigRuleComplianceSummaryFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConfigRuleComplianceSummary_nextToken :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 1000. You cannot specify a number greater than 1000. If you
--   specify 0, Config uses the default.
getAggregateConfigRuleComplianceSummary_limit :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe Natural)

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
getAggregateConfigRuleComplianceSummary_groupByKey :: Lens' GetAggregateConfigRuleComplianceSummary (Maybe ConfigRuleComplianceSummaryGroupKey)

-- | The name of the configuration aggregator.
getAggregateConfigRuleComplianceSummary_configurationAggregatorName :: Lens' GetAggregateConfigRuleComplianceSummary Text

-- | Returns a list of AggregateComplianceCounts object.
getAggregateConfigRuleComplianceSummaryResponse_aggregateComplianceCounts :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe [AggregateComplianceCount])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConfigRuleComplianceSummaryResponse_nextToken :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe Text)

-- | Groups the result based on ACCOUNT_ID or AWS_REGION.
getAggregateConfigRuleComplianceSummaryResponse_groupByKey :: Lens' GetAggregateConfigRuleComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getAggregateConfigRuleComplianceSummaryResponse_httpStatus :: Lens' GetAggregateConfigRuleComplianceSummaryResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tags returned on each page. The limit maximum is
--   50. You cannot specify a number greater than 50. If you specify 0,
--   Config uses the default.
listTagsForResource_limit :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
batchGetResourceConfig_resourceKeys :: Lens' BatchGetResourceConfig (NonEmpty ResourceKey)

-- | A list that contains the current configuration of one or more
--   resources.
batchGetResourceConfigResponse_baseConfigurationItems :: Lens' BatchGetResourceConfigResponse (Maybe [BaseConfigurationItem])

-- | A list of resource keys that were not processed with the current
--   response. The unprocessesResourceKeys value is in the same form as
--   ResourceKeys, so the value can be directly provided to a subsequent
--   BatchGetResourceConfig operation. If there are no unprocessed resource
--   keys, the response contains an empty unprocessedResourceKeys list.
batchGetResourceConfigResponse_unprocessedResourceKeys :: Lens' BatchGetResourceConfigResponse (Maybe (NonEmpty ResourceKey))

-- | The response's http status code.
batchGetResourceConfigResponse_httpStatus :: Lens' BatchGetResourceConfigResponse Int

-- | The names of the Config rules for which you want details. If you do
--   not specify any names, Config returns details for all your rules.
describeConfigRules_configRuleNames :: Lens' DescribeConfigRules (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigRules_nextToken :: Lens' DescribeConfigRules (Maybe Text)

-- | The details about your Config rules.
describeConfigRulesResponse_configRules :: Lens' DescribeConfigRulesResponse (Maybe [ConfigRule])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeConfigRulesResponse_nextToken :: Lens' DescribeConfigRulesResponse (Maybe Text)

-- | The response's http status code.
describeConfigRulesResponse_httpStatus :: Lens' DescribeConfigRulesResponse Int

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
putRetentionConfiguration_retentionPeriodInDays :: Lens' PutRetentionConfiguration Natural

-- | Returns a retention configuration object.
putRetentionConfigurationResponse_retentionConfiguration :: Lens' PutRetentionConfigurationResponse (Maybe RetentionConfiguration)

-- | The response's http status code.
putRetentionConfigurationResponse_httpStatus :: Lens' PutRetentionConfigurationResponse Int

-- | Filters the result by
--   <tt>AggregateConformancePackComplianceFilters</tt> object.
describeAggregateComplianceByConformancePacks_filters :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe AggregateConformancePackComplianceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConformancePacks_nextToken :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe Text)

-- | The maximum number of conformance packs compliance details returned on
--   each page. The default is maximum. If you specify 0, Config uses the
--   default.
describeAggregateComplianceByConformancePacks_limit :: Lens' DescribeAggregateComplianceByConformancePacks (Maybe Natural)

-- | The name of the configuration aggregator.
describeAggregateComplianceByConformancePacks_configurationAggregatorName :: Lens' DescribeAggregateComplianceByConformancePacks Text

-- | Returns the <tt>AggregateComplianceByConformancePack</tt> object.
describeAggregateComplianceByConformancePacksResponse_aggregateComplianceByConformancePacks :: Lens' DescribeAggregateComplianceByConformancePacksResponse (Maybe [AggregateComplianceByConformancePack])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConformancePacksResponse_nextToken :: Lens' DescribeAggregateComplianceByConformancePacksResponse (Maybe Text)

-- | The response's http status code.
describeAggregateComplianceByConformancePacksResponse_httpStatus :: Lens' DescribeAggregateComplianceByConformancePacksResponse Int

-- | An <tt>OrganizationResourceDetailedStatusFilters</tt> object.
getOrganizationConformancePackDetailedStatus_filters :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe OrganizationResourceDetailedStatusFilters)

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getOrganizationConformancePackDetailedStatus_nextToken :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe Text)

-- | The maximum number of
--   <tt>OrganizationConformancePackDetailedStatuses</tt> returned on each
--   page. If you do not specify a number, Config uses the default. The
--   default is 100.
getOrganizationConformancePackDetailedStatus_limit :: Lens' GetOrganizationConformancePackDetailedStatus (Maybe Natural)

-- | The name of organization conformance pack for which you want status
--   details for member accounts.
getOrganizationConformancePackDetailedStatus_organizationConformancePackName :: Lens' GetOrganizationConformancePackDetailedStatus Text

-- | A list of <tt>OrganizationConformancePackDetailedStatus</tt> objects.
getOrganizationConformancePackDetailedStatusResponse_organizationConformancePackDetailedStatuses :: Lens' GetOrganizationConformancePackDetailedStatusResponse (Maybe [OrganizationConformancePackDetailedStatus])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getOrganizationConformancePackDetailedStatusResponse_nextToken :: Lens' GetOrganizationConformancePackDetailedStatusResponse (Maybe Text)

-- | The response's http status code.
getOrganizationConformancePackDetailedStatusResponse_httpStatus :: Lens' GetOrganizationConformancePackDetailedStatusResponse Int

-- | Filters the results by ConfigRuleComplianceFilters object.
describeAggregateComplianceByConfigRules_filters :: Lens' DescribeAggregateComplianceByConfigRules (Maybe ConfigRuleComplianceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConfigRules_nextToken :: Lens' DescribeAggregateComplianceByConfigRules (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
describeAggregateComplianceByConfigRules_limit :: Lens' DescribeAggregateComplianceByConfigRules (Maybe Natural)

-- | The name of the configuration aggregator.
describeAggregateComplianceByConfigRules_configurationAggregatorName :: Lens' DescribeAggregateComplianceByConfigRules Text

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregateComplianceByConfigRulesResponse_nextToken :: Lens' DescribeAggregateComplianceByConfigRulesResponse (Maybe Text)

-- | Returns a list of AggregateComplianceByConfigRule object.
describeAggregateComplianceByConfigRulesResponse_aggregateComplianceByConfigRules :: Lens' DescribeAggregateComplianceByConfigRulesResponse (Maybe [AggregateComplianceByConfigRule])

-- | The response's http status code.
describeAggregateComplianceByConfigRulesResponse_httpStatus :: Lens' DescribeAggregateComplianceByConfigRulesResponse Int

-- | The name of the Config rule for which you want to delete the
--   evaluation results.
deleteEvaluationResults_configRuleName :: Lens' DeleteEvaluationResults Text

-- | The response's http status code.
deleteEvaluationResultsResponse_httpStatus :: Lens' DeleteEvaluationResultsResponse Int

-- | An array of tag object.
putConfigRule_tags :: Lens' PutConfigRule (Maybe [Tag])

-- | The rule that you want to add to your account.
putConfigRule_configRule :: Lens' PutConfigRule ConfigRule

-- | A <tt>ConformancePackEvaluationFilters</tt> object.
getConformancePackComplianceDetails_filters :: Lens' GetConformancePackComplianceDetails (Maybe ConformancePackEvaluationFilters)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
getConformancePackComplianceDetails_nextToken :: Lens' GetConformancePackComplianceDetails (Maybe Text)

-- | The maximum number of evaluation results returned on each page. If you
--   do no specify a number, Config uses the default. The default is 100.
getConformancePackComplianceDetails_limit :: Lens' GetConformancePackComplianceDetails (Maybe Natural)

-- | Name of the conformance pack.
getConformancePackComplianceDetails_conformancePackName :: Lens' GetConformancePackComplianceDetails Text

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
getConformancePackComplianceDetailsResponse_nextToken :: Lens' GetConformancePackComplianceDetailsResponse (Maybe Text)

-- | Returns a list of <tt>ConformancePackEvaluationResult</tt> objects.
getConformancePackComplianceDetailsResponse_conformancePackRuleEvaluationResults :: Lens' GetConformancePackComplianceDetailsResponse (Maybe [ConformancePackEvaluationResult])

-- | The response's http status code.
getConformancePackComplianceDetailsResponse_httpStatus :: Lens' GetConformancePackComplianceDetailsResponse Int

-- | Name of the conformance pack.
getConformancePackComplianceDetailsResponse_conformancePackName :: Lens' GetConformancePackComplianceDetailsResponse Text

-- | The name of the Config rule that you want to delete.
deleteConfigRule_configRuleName :: Lens' DeleteConfigRule Text

-- | The name of the retention configuration to delete.
deleteRetentionConfiguration_retentionConfigurationName :: Lens' DeleteRetentionConfiguration Text

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
listStoredQueries_nextToken :: Lens' ListStoredQueries (Maybe Text)

-- | The maximum number of results to be returned with a single call.
listStoredQueries_maxResults :: Lens' ListStoredQueries (Maybe Natural)

-- | A list of <tt>StoredQueryMetadata</tt> objects.
listStoredQueriesResponse_storedQueryMetadata :: Lens' ListStoredQueriesResponse (Maybe [StoredQueryMetadata])

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listStoredQueriesResponse_nextToken :: Lens' ListStoredQueriesResponse (Maybe Text)

-- | The response's http status code.
listStoredQueriesResponse_httpStatus :: Lens' ListStoredQueriesResponse Int

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
selectResourceConfig_nextToken :: Lens' SelectResourceConfig (Maybe Text)

-- | The maximum number of query results returned on each page.
selectResourceConfig_limit :: Lens' SelectResourceConfig (Maybe Natural)

-- | The SQL query <tt>SELECT</tt> command.
selectResourceConfig_expression :: Lens' SelectResourceConfig Text

-- | Returns the results for the SQL query.
selectResourceConfigResponse_results :: Lens' SelectResourceConfigResponse (Maybe [Text])

-- | Returns the <tt>QueryInfo</tt> object.
selectResourceConfigResponse_queryInfo :: Lens' SelectResourceConfigResponse (Maybe QueryInfo)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
selectResourceConfigResponse_nextToken :: Lens' SelectResourceConfigResponse (Maybe Text)

-- | The response's http status code.
selectResourceConfigResponse_httpStatus :: Lens' SelectResourceConfigResponse Int

-- | Filters the results based on the <tt>ResourceFilters</tt> object.
listAggregateDiscoveredResources_filters :: Lens' ListAggregateDiscoveredResources (Maybe ResourceFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listAggregateDiscoveredResources_nextToken :: Lens' ListAggregateDiscoveredResources (Maybe Text)

-- | The maximum number of resource identifiers returned on each page. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
listAggregateDiscoveredResources_limit :: Lens' ListAggregateDiscoveredResources (Maybe Natural)

-- | The name of the configuration aggregator.
listAggregateDiscoveredResources_configurationAggregatorName :: Lens' ListAggregateDiscoveredResources Text

-- | The type of resources that you want Config to list in the response.
listAggregateDiscoveredResources_resourceType :: Lens' ListAggregateDiscoveredResources ResourceType

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listAggregateDiscoveredResourcesResponse_nextToken :: Lens' ListAggregateDiscoveredResourcesResponse (Maybe Text)

-- | Returns a list of <tt>ResourceIdentifiers</tt> objects.
listAggregateDiscoveredResourcesResponse_resourceIdentifiers :: Lens' ListAggregateDiscoveredResourcesResponse (Maybe [AggregateResourceIdentifier])

-- | The response's http status code.
listAggregateDiscoveredResourcesResponse_httpStatus :: Lens' ListAggregateDiscoveredResourcesResponse Int

-- | The names of organization config rules for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization Config rules.
describeOrganizationConfigRuleStatuses_organizationConfigRuleNames :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRuleStatuses_nextToken :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe Text)

-- | The maximum number of <tt>OrganizationConfigRuleStatuses</tt> returned
--   on each page. If you do no specify a number, Config uses the default.
--   The default is 100.
describeOrganizationConfigRuleStatuses_limit :: Lens' DescribeOrganizationConfigRuleStatuses (Maybe Natural)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRuleStatusesResponse_nextToken :: Lens' DescribeOrganizationConfigRuleStatusesResponse (Maybe Text)

-- | A list of <tt>OrganizationConfigRuleStatus</tt> objects.
describeOrganizationConfigRuleStatusesResponse_organizationConfigRuleStatuses :: Lens' DescribeOrganizationConfigRuleStatusesResponse (Maybe [OrganizationConfigRuleStatus])

-- | The response's http status code.
describeOrganizationConfigRuleStatusesResponse_httpStatus :: Lens' DescribeOrganizationConfigRuleStatusesResponse Int

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePackStatuses_nextToken :: Lens' DescribeOrganizationConformancePackStatuses (Maybe Text)

-- | The maximum number of OrganizationConformancePackStatuses returned on
--   each page. If you do no specify a number, Config uses the default. The
--   default is 100.
describeOrganizationConformancePackStatuses_limit :: Lens' DescribeOrganizationConformancePackStatuses (Maybe Natural)

-- | The names of organization conformance packs for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization conformance packs.
describeOrganizationConformancePackStatuses_organizationConformancePackNames :: Lens' DescribeOrganizationConformancePackStatuses (Maybe [Text])

-- | A list of <tt>OrganizationConformancePackStatus</tt> objects.
describeOrganizationConformancePackStatusesResponse_organizationConformancePackStatuses :: Lens' DescribeOrganizationConformancePackStatusesResponse (Maybe [OrganizationConformancePackStatus])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePackStatusesResponse_nextToken :: Lens' DescribeOrganizationConformancePackStatusesResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConformancePackStatusesResponse_httpStatus :: Lens' DescribeOrganizationConformancePackStatusesResponse Int

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
getComplianceDetailsByResource_complianceTypes :: Lens' GetComplianceDetailsByResource (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getComplianceDetailsByResource_nextToken :: Lens' GetComplianceDetailsByResource (Maybe Text)

-- | The type of the Amazon Web Services resource for which you want
--   compliance information.
getComplianceDetailsByResource_resourceType :: Lens' GetComplianceDetailsByResource Text

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information.
getComplianceDetailsByResource_resourceId :: Lens' GetComplianceDetailsByResource Text

-- | Indicates whether the specified Amazon Web Services resource complies
--   each Config rule.
getComplianceDetailsByResourceResponse_evaluationResults :: Lens' GetComplianceDetailsByResourceResponse (Maybe [EvaluationResult])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getComplianceDetailsByResourceResponse_nextToken :: Lens' GetComplianceDetailsByResourceResponse (Maybe Text)

-- | The response's http status code.
getComplianceDetailsByResourceResponse_httpStatus :: Lens' GetComplianceDetailsByResourceResponse Int

-- | The 12-digit account ID of the account requesting to aggregate data.
deletePendingAggregationRequest_requesterAccountId :: Lens' DeletePendingAggregationRequest Text

-- | The region requesting to aggregate data.
deletePendingAggregationRequest_requesterAwsRegion :: Lens' DeletePendingAggregationRequest Text

-- | The name of the delivery channel through which the snapshot is
--   delivered.
deliverConfigSnapshot_deliveryChannelName :: Lens' DeliverConfigSnapshot Text

-- | The ID of the snapshot that is being created.
deliverConfigSnapshotResponse_configSnapshotId :: Lens' DeliverConfigSnapshotResponse (Maybe Text)

-- | The response's http status code.
deliverConfigSnapshotResponse_httpStatus :: Lens' DeliverConfigSnapshotResponse Int

-- | The name of the configuration aggregator.
batchGetAggregateResourceConfig_configurationAggregatorName :: Lens' BatchGetAggregateResourceConfig Text

-- | A list of aggregate ResourceIdentifiers objects.
batchGetAggregateResourceConfig_resourceIdentifiers :: Lens' BatchGetAggregateResourceConfig (NonEmpty AggregateResourceIdentifier)

-- | A list that contains the current configuration of one or more
--   resources.
batchGetAggregateResourceConfigResponse_baseConfigurationItems :: Lens' BatchGetAggregateResourceConfigResponse (Maybe [BaseConfigurationItem])

-- | A list of resource identifiers that were not processed with current
--   scope. The list is empty if all the resources are processed.
batchGetAggregateResourceConfigResponse_unprocessedResourceIdentifiers :: Lens' BatchGetAggregateResourceConfigResponse (Maybe [AggregateResourceIdentifier])

-- | The response's http status code.
batchGetAggregateResourceConfigResponse_httpStatus :: Lens' BatchGetAggregateResourceConfigResponse Int

-- | The name of the Config managed rules for which you want status
--   information. If you do not specify any names, Config returns status
--   information for all Config managed rules that you use.
describeConfigRuleEvaluationStatus_configRuleNames :: Lens' DescribeConfigRuleEvaluationStatus (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigRuleEvaluationStatus_nextToken :: Lens' DescribeConfigRuleEvaluationStatus (Maybe Text)

-- | The number of rule evaluation results that you want returned.
--   
--   This parameter is required if the rule limit for your account is more
--   than the default of 150 rules.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
describeConfigRuleEvaluationStatus_limit :: Lens' DescribeConfigRuleEvaluationStatus (Maybe Natural)

-- | Status information about your Config managed rules.
describeConfigRuleEvaluationStatusResponse_configRulesEvaluationStatus :: Lens' DescribeConfigRuleEvaluationStatusResponse (Maybe [ConfigRuleEvaluationStatus])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeConfigRuleEvaluationStatusResponse_nextToken :: Lens' DescribeConfigRuleEvaluationStatusResponse (Maybe Text)

-- | The response's http status code.
describeConfigRuleEvaluationStatusResponse_httpStatus :: Lens' DescribeConfigRuleEvaluationStatusResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getDiscoveredResourceCounts_nextToken :: Lens' GetDiscoveredResourceCounts (Maybe Text)

-- | The maximum number of ResourceCount objects returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getDiscoveredResourceCounts_limit :: Lens' GetDiscoveredResourceCounts (Maybe Natural)

-- | The comma-separated list that specifies the resource types that you
--   want Config to return (for example, <tt>"AWS::EC2::Instance"</tt>,
--   <tt>"AWS::IAM::User"</tt>).
--   
--   If a value for <tt>resourceTypes</tt> is not specified, Config returns
--   all resource types that Config is recording in the region for your
--   account.
--   
--   If the configuration recorder is turned off, Config returns an empty
--   list of ResourceCount objects. If the configuration recorder is not
--   recording a specific resource type (for example, S3 buckets), that
--   resource type is not returned in the list of ResourceCount objects.
getDiscoveredResourceCounts_resourceTypes :: Lens' GetDiscoveredResourceCounts (Maybe [Text])

-- | The total number of resources that Config is recording in the region
--   for your account. If you specify resource types in the request, Config
--   returns only the total number of resources for those resource types.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets, for a total of 60 resources.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify the resource type, <tt>"AWS::EC2::Instances"</tt>, in the
--   request.</li>
--   <li>Config returns 25 for <tt>totalDiscoveredResources</tt>.</li>
--   </ol>
getDiscoveredResourceCountsResponse_totalDiscoveredResources :: Lens' GetDiscoveredResourceCountsResponse (Maybe Integer)

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getDiscoveredResourceCountsResponse_nextToken :: Lens' GetDiscoveredResourceCountsResponse (Maybe Text)

-- | The list of <tt>ResourceCount</tt> objects. Each object is listed in
--   descending order by the number of resources.
getDiscoveredResourceCountsResponse_resourceCounts :: Lens' GetDiscoveredResourceCountsResponse (Maybe [ResourceCount])

-- | The response's http status code.
getDiscoveredResourceCountsResponse_httpStatus :: Lens' GetDiscoveredResourceCountsResponse Int

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeRemediationExceptions_nextToken :: Lens' DescribeRemediationExceptions (Maybe Text)

-- | The maximum number of RemediationExceptionResourceKey returned on each
--   page. The default is 25. If you specify 0, Config uses the default.
describeRemediationExceptions_limit :: Lens' DescribeRemediationExceptions (Maybe Natural)

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
describeRemediationExceptions_resourceKeys :: Lens' DescribeRemediationExceptions (Maybe (NonEmpty RemediationExceptionResourceKey))

-- | The name of the Config rule.
describeRemediationExceptions_configRuleName :: Lens' DescribeRemediationExceptions Text

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeRemediationExceptionsResponse_nextToken :: Lens' DescribeRemediationExceptionsResponse (Maybe Text)

-- | Returns a list of remediation exception objects.
describeRemediationExceptionsResponse_remediationExceptions :: Lens' DescribeRemediationExceptionsResponse (Maybe [RemediationException])

-- | The response's http status code.
describeRemediationExceptionsResponse_httpStatus :: Lens' DescribeRemediationExceptionsResponse Int

-- | The name of organization conformance pack that you want to delete.
deleteOrganizationConformancePack_organizationConformancePackName :: Lens' DeleteOrganizationConformancePack Text

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
putOrganizationConfigRule_organizationManagedRuleMetadata :: Lens' PutOrganizationConfigRule (Maybe OrganizationManagedRuleMetadata)

-- | A comma-separated list of accounts that you want to exclude from an
--   organization config rule.
putOrganizationConfigRule_excludedAccounts :: Lens' PutOrganizationConfigRule (Maybe [Text])

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
putOrganizationConfigRule_organizationCustomRuleMetadata :: Lens' PutOrganizationConfigRule (Maybe OrganizationCustomRuleMetadata)

-- | The name that you assign to an organization config rule.
putOrganizationConfigRule_organizationConfigRuleName :: Lens' PutOrganizationConfigRule Text

-- | The Amazon Resource Name (ARN) of an organization config rule.
putOrganizationConfigRuleResponse_organizationConfigRuleArn :: Lens' PutOrganizationConfigRuleResponse (Maybe Text)

-- | The response's http status code.
putOrganizationConfigRuleResponse_httpStatus :: Lens' PutOrganizationConfigRuleResponse Int

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional. If used, it must be prefixed with
--   <tt>awsconfigconforms</tt>.
putOrganizationConformancePack_deliveryS3Bucket :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
putOrganizationConformancePack_deliveryS3KeyPrefix :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | Location of file containing the template body. The uri must point to
--   the conformance pack template (max size: 300 KB).
--   
--   You must have access to read Amazon S3 bucket.
putOrganizationConformancePack_templateS3Uri :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
putOrganizationConformancePack_conformancePackInputParameters :: Lens' PutOrganizationConformancePack (Maybe [ConformancePackInputParameter])

-- | A list of Amazon Web Services accounts to be excluded from an
--   organization conformance pack while deploying a conformance pack.
putOrganizationConformancePack_excludedAccounts :: Lens' PutOrganizationConformancePack (Maybe [Text])

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
putOrganizationConformancePack_templateBody :: Lens' PutOrganizationConformancePack (Maybe Text)

-- | Name of the organization conformance pack you want to create.
putOrganizationConformancePack_organizationConformancePackName :: Lens' PutOrganizationConformancePack Text

-- | ARN of the organization conformance pack.
putOrganizationConformancePackResponse_organizationConformancePackArn :: Lens' PutOrganizationConformancePackResponse (Maybe Text)

-- | The response's http status code.
putOrganizationConformancePackResponse_httpStatus :: Lens' PutOrganizationConformancePackResponse Int

-- | The name of organization config rule that you want to delete.
deleteOrganizationConfigRule_organizationConfigRuleName :: Lens' DeleteOrganizationConfigRule Text

-- | Name of the resource.
putResourceConfig_resourceName :: Lens' PutResourceConfig (Maybe Text)

-- | Tags associated with the resource.
putResourceConfig_tags :: Lens' PutResourceConfig (Maybe (HashMap Text Text))

-- | The type of the resource. The custom resource type must be registered
--   with CloudFormation.
--   
--   You cannot use the organization names “amzn”, “amazon”, “alexa”,
--   “custom” with custom resource types. It is the first part of the
--   ResourceType up to the first ::.
putResourceConfig_resourceType :: Lens' PutResourceConfig Text

-- | Version of the schema registered for the ResourceType in
--   CloudFormation.
putResourceConfig_schemaVersionId :: Lens' PutResourceConfig Text

-- | Unique identifier of the resource.
putResourceConfig_resourceId :: Lens' PutResourceConfig Text

-- | The configuration object of the resource in valid JSON format. It must
--   match the schema registered with CloudFormation.
--   
--   The configuration JSON must not exceed 64 KB.
putResourceConfig_configuration :: Lens' PutResourceConfig Text

-- | The list of names of Config rules that you want to run evaluations
--   for.
startConfigRulesEvaluation_configRuleNames :: Lens' StartConfigRulesEvaluation (Maybe (NonEmpty Text))

-- | The response's http status code.
startConfigRulesEvaluationResponse_httpStatus :: Lens' StartConfigRulesEvaluationResponse Int

-- | The names of organization config rules for which you want details. If
--   you do not specify any names, Config returns details for all your
--   organization config rules.
describeOrganizationConfigRules_organizationConfigRuleNames :: Lens' DescribeOrganizationConfigRules (Maybe [Text])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRules_nextToken :: Lens' DescribeOrganizationConfigRules (Maybe Text)

-- | The maximum number of organization config rules returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
describeOrganizationConfigRules_limit :: Lens' DescribeOrganizationConfigRules (Maybe Natural)

-- | Returns a list of <tt>OrganizationConfigRule</tt> objects.
describeOrganizationConfigRulesResponse_organizationConfigRules :: Lens' DescribeOrganizationConfigRulesResponse (Maybe [OrganizationConfigRule])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeOrganizationConfigRulesResponse_nextToken :: Lens' DescribeOrganizationConfigRulesResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConfigRulesResponse_httpStatus :: Lens' DescribeOrganizationConfigRulesResponse Int

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
selectAggregateResourceConfig_nextToken :: Lens' SelectAggregateResourceConfig (Maybe Text)

-- | The maximum number of query results returned on each page.
selectAggregateResourceConfig_limit :: Lens' SelectAggregateResourceConfig (Maybe Natural)

-- | The maximum number of query results returned on each page. Config also
--   allows the Limit request parameter.
selectAggregateResourceConfig_maxResults :: Lens' SelectAggregateResourceConfig (Maybe Natural)

-- | The SQL query SELECT command.
selectAggregateResourceConfig_expression :: Lens' SelectAggregateResourceConfig Text

-- | The name of the configuration aggregator.
selectAggregateResourceConfig_configurationAggregatorName :: Lens' SelectAggregateResourceConfig Text

-- | Returns the results for the SQL query.
selectAggregateResourceConfigResponse_results :: Lens' SelectAggregateResourceConfigResponse (Maybe [Text])

-- | Undocumented member.
selectAggregateResourceConfigResponse_queryInfo :: Lens' SelectAggregateResourceConfigResponse (Maybe QueryInfo)

-- | The nextToken string returned in a previous request that you use to
--   request the next page of results in a paginated response.
selectAggregateResourceConfigResponse_nextToken :: Lens' SelectAggregateResourceConfigResponse (Maybe Text)

-- | The response's http status code.
selectAggregateResourceConfigResponse_httpStatus :: Lens' SelectAggregateResourceConfigResponse Int

-- | The ID of the Amazon Web Services resource for which you want
--   compliance information. You can specify only one resource ID. If you
--   specify a resource ID, you must also specify a type for
--   <tt>ResourceType</tt>.
describeComplianceByResource_resourceId :: Lens' DescribeComplianceByResource (Maybe Text)

-- | The types of Amazon Web Services resources for which you want
--   compliance information (for example, <tt>AWS::EC2::Instance</tt>). For
--   this action, you can specify that the resource type is an Amazon Web
--   Services account by specifying <tt>AWS::::Account</tt>.
describeComplianceByResource_resourceType :: Lens' DescribeComplianceByResource (Maybe Text)

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
describeComplianceByResource_complianceTypes :: Lens' DescribeComplianceByResource (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeComplianceByResource_nextToken :: Lens' DescribeComplianceByResource (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
describeComplianceByResource_limit :: Lens' DescribeComplianceByResource (Maybe Natural)

-- | Indicates whether the specified Amazon Web Services resource complies
--   with all of the Config rules that evaluate it.
describeComplianceByResourceResponse_complianceByResources :: Lens' DescribeComplianceByResourceResponse (Maybe [ComplianceByResource])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
describeComplianceByResourceResponse_nextToken :: Lens' DescribeComplianceByResourceResponse (Maybe Text)

-- | The response's http status code.
describeComplianceByResourceResponse_httpStatus :: Lens' DescribeComplianceByResourceResponse Int

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePacks_nextToken :: Lens' DescribeOrganizationConformancePacks (Maybe Text)

-- | The maximum number of organization config packs returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
describeOrganizationConformancePacks_limit :: Lens' DescribeOrganizationConformancePacks (Maybe Natural)

-- | The name that you assign to an organization conformance pack.
describeOrganizationConformancePacks_organizationConformancePackNames :: Lens' DescribeOrganizationConformancePacks (Maybe [Text])

-- | Returns a list of OrganizationConformancePacks objects.
describeOrganizationConformancePacksResponse_organizationConformancePacks :: Lens' DescribeOrganizationConformancePacksResponse (Maybe [OrganizationConformancePack])

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
describeOrganizationConformancePacksResponse_nextToken :: Lens' DescribeOrganizationConformancePacksResponse (Maybe Text)

-- | The response's http status code.
describeOrganizationConformancePacksResponse_httpStatus :: Lens' DescribeOrganizationConformancePacksResponse Int

-- | The type of the resource.
deleteResourceConfig_resourceType :: Lens' DeleteResourceConfig Text

-- | Unique identifier of the resource.
deleteResourceConfig_resourceId :: Lens' DeleteResourceConfig Text

-- | The assessments that the Lambda function performs. Each evaluation
--   identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that invokes the Lambda function.
putEvaluations_evaluations :: Lens' PutEvaluations (Maybe [Evaluation])

-- | Use this parameter to specify a test run for <tt>PutEvaluations</tt>.
--   You can verify whether your Lambda function will deliver evaluation
--   results to Config. No updates occur to your existing evaluations, and
--   evaluation results are not sent to Config.
--   
--   When <tt>TestMode</tt> is <tt>true</tt>, <tt>PutEvaluations</tt>
--   doesn't require a valid value for the <tt>ResultToken</tt> parameter,
--   but the value cannot be null.
putEvaluations_testMode :: Lens' PutEvaluations (Maybe Bool)

-- | An encrypted token that associates an evaluation with an Config rule.
--   Identifies the rule and the event that triggered the evaluation.
putEvaluations_resultToken :: Lens' PutEvaluations Text

-- | Requests that failed because of a client or server error.
putEvaluationsResponse_failedEvaluations :: Lens' PutEvaluationsResponse (Maybe [Evaluation])

-- | The response's http status code.
putEvaluationsResponse_httpStatus :: Lens' PutEvaluationsResponse Int

-- | A list of configuration recorder names.
describeConfigurationRecorders_configurationRecorderNames :: Lens' DescribeConfigurationRecorders (Maybe [Text])

-- | A list that contains the descriptions of the specified configuration
--   recorders.
describeConfigurationRecordersResponse_configurationRecorders :: Lens' DescribeConfigurationRecordersResponse (Maybe [ConfigurationRecorder])

-- | The response's http status code.
describeConfigurationRecordersResponse_httpStatus :: Lens' DescribeConfigurationRecordersResponse Int

-- | A <tt>ConformancePackComplianceFilters</tt> object.
describeConformancePackCompliance_filters :: Lens' DescribeConformancePackCompliance (Maybe ConformancePackComplianceFilters)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackCompliance_nextToken :: Lens' DescribeConformancePackCompliance (Maybe Text)

-- | The maximum number of Config rules within a conformance pack are
--   returned on each page.
describeConformancePackCompliance_limit :: Lens' DescribeConformancePackCompliance (Maybe Natural)

-- | Name of the conformance pack.
describeConformancePackCompliance_conformancePackName :: Lens' DescribeConformancePackCompliance Text

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackComplianceResponse_nextToken :: Lens' DescribeConformancePackComplianceResponse (Maybe Text)

-- | The response's http status code.
describeConformancePackComplianceResponse_httpStatus :: Lens' DescribeConformancePackComplianceResponse Int

-- | Name of the conformance pack.
describeConformancePackComplianceResponse_conformancePackName :: Lens' DescribeConformancePackComplianceResponse Text

-- | Returns a list of <tt>ConformancePackRuleCompliance</tt> objects.
describeConformancePackComplianceResponse_conformancePackRuleComplianceList :: Lens' DescribeConformancePackComplianceResponse [ConformancePackRuleCompliance]

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateComplianceDetailsByConfigRule_nextToken :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 50. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getAggregateComplianceDetailsByConfigRule_limit :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe Natural)

-- | The resource compliance status.
--   
--   For the <tt>GetAggregateComplianceDetailsByConfigRuleRequest</tt> data
--   type, Config supports only the <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. Config does not support the
--   <tt>NOT_APPLICABLE</tt> and <tt>INSUFFICIENT_DATA</tt> values.
getAggregateComplianceDetailsByConfigRule_complianceType :: Lens' GetAggregateComplianceDetailsByConfigRule (Maybe ComplianceType)

-- | The name of the configuration aggregator.
getAggregateComplianceDetailsByConfigRule_configurationAggregatorName :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The name of the Config rule for which you want compliance information.
getAggregateComplianceDetailsByConfigRule_configRuleName :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The 12-digit account ID of the source account.
getAggregateComplianceDetailsByConfigRule_accountId :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The source region from where the data is aggregated.
getAggregateComplianceDetailsByConfigRule_awsRegion :: Lens' GetAggregateComplianceDetailsByConfigRule Text

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateComplianceDetailsByConfigRuleResponse_nextToken :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse (Maybe Text)

-- | Returns an AggregateEvaluationResults object.
getAggregateComplianceDetailsByConfigRuleResponse_aggregateEvaluationResults :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse (Maybe [AggregateEvaluationResult])

-- | The response's http status code.
getAggregateComplianceDetailsByConfigRuleResponse_httpStatus :: Lens' GetAggregateComplianceDetailsByConfigRuleResponse Int

-- | Filters the results based on the <tt>ResourceCountFilters</tt> object.
getAggregateDiscoveredResourceCounts_filters :: Lens' GetAggregateDiscoveredResourceCounts (Maybe ResourceCountFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateDiscoveredResourceCounts_nextToken :: Lens' GetAggregateDiscoveredResourceCounts (Maybe Text)

-- | The maximum number of GroupedResourceCount objects returned on each
--   page. The default is 1000. You cannot specify a number greater than
--   1000. If you specify 0, Config uses the default.
getAggregateDiscoveredResourceCounts_limit :: Lens' GetAggregateDiscoveredResourceCounts (Maybe Natural)

-- | The key to group the resource counts.
getAggregateDiscoveredResourceCounts_groupByKey :: Lens' GetAggregateDiscoveredResourceCounts (Maybe ResourceCountGroupKey)

-- | The name of the configuration aggregator.
getAggregateDiscoveredResourceCounts_configurationAggregatorName :: Lens' GetAggregateDiscoveredResourceCounts Text

-- | Returns a list of GroupedResourceCount objects.
getAggregateDiscoveredResourceCountsResponse_groupedResourceCounts :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe [GroupedResourceCount])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateDiscoveredResourceCountsResponse_nextToken :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe Text)

-- | The key passed into the request object. If <tt>GroupByKey</tt> is not
--   provided, the result will be empty.
getAggregateDiscoveredResourceCountsResponse_groupByKey :: Lens' GetAggregateDiscoveredResourceCountsResponse (Maybe Text)

-- | The response's http status code.
getAggregateDiscoveredResourceCountsResponse_httpStatus :: Lens' GetAggregateDiscoveredResourceCountsResponse Int

-- | The total number of resources that are present in an aggregator with
--   the filters that you provide.
getAggregateDiscoveredResourceCountsResponse_totalDiscoveredResources :: Lens' GetAggregateDiscoveredResourceCountsResponse Integer

-- | Filters the results based on the
--   <tt>AggregateConformancePackComplianceSummaryFilters</tt> object.
getAggregateConformancePackComplianceSummary_filters :: Lens' GetAggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceSummaryFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConformancePackComplianceSummary_nextToken :: Lens' GetAggregateConformancePackComplianceSummary (Maybe Text)

-- | The maximum number of results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
getAggregateConformancePackComplianceSummary_limit :: Lens' GetAggregateConformancePackComplianceSummary (Maybe Natural)

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
getAggregateConformancePackComplianceSummary_groupByKey :: Lens' GetAggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceSummaryGroupKey)

-- | The name of the configuration aggregator.
getAggregateConformancePackComplianceSummary_configurationAggregatorName :: Lens' GetAggregateConformancePackComplianceSummary Text

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getAggregateConformancePackComplianceSummaryResponse_nextToken :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe Text)

-- | Returns a list of <tt>AggregateConformancePackComplianceSummary</tt>
--   object.
getAggregateConformancePackComplianceSummaryResponse_aggregateConformancePackComplianceSummaries :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe [AggregateConformancePackComplianceSummary])

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
getAggregateConformancePackComplianceSummaryResponse_groupByKey :: Lens' GetAggregateConformancePackComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getAggregateConformancePackComplianceSummaryResponse_httpStatus :: Lens' GetAggregateConformancePackComplianceSummaryResponse Int

-- | The name of the recorder object that records each configuration change
--   made to the resources.
startConfigurationRecorder_configurationRecorderName :: Lens' StartConfigurationRecorder Text

-- | Comma-separated list of conformance pack names for which you want
--   details. If you do not specify any names, Config returns details for
--   all your conformance packs.
describeConformancePacks_conformancePackNames :: Lens' DescribeConformancePacks (Maybe [Text])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePacks_nextToken :: Lens' DescribeConformancePacks (Maybe Text)

-- | The maximum number of conformance packs returned on each page.
describeConformancePacks_limit :: Lens' DescribeConformancePacks (Maybe Natural)

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePacksResponse_nextToken :: Lens' DescribeConformancePacksResponse (Maybe Text)

-- | Returns a list of <tt>ConformancePackDetail</tt> objects.
describeConformancePacksResponse_conformancePackDetails :: Lens' DescribeConformancePacksResponse (Maybe [ConformancePackDetail])

-- | The response's http status code.
describeConformancePacksResponse_httpStatus :: Lens' DescribeConformancePacksResponse Int

-- | The name of the Config rule.
putExternalEvaluation_configRuleName :: Lens' PutExternalEvaluation Text

-- | An <tt>ExternalEvaluation</tt> object that provides details about
--   compliance.
putExternalEvaluation_externalEvaluation :: Lens' PutExternalEvaluation ExternalEvaluation

-- | The response's http status code.
putExternalEvaluationResponse_httpStatus :: Lens' PutExternalEvaluationResponse Int

-- | The name of the Config rule for which you want to delete remediation
--   exception configuration.
deleteRemediationExceptions_configRuleName :: Lens' DeleteRemediationExceptions Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
deleteRemediationExceptions_resourceKeys :: Lens' DeleteRemediationExceptions (NonEmpty RemediationExceptionResourceKey)

-- | Returns a list of failed delete remediation exceptions batch objects.
--   Each object in the batch consists of a list of failed items and
--   failure messages.
deleteRemediationExceptionsResponse_failedBatches :: Lens' DeleteRemediationExceptionsResponse (Maybe [FailedDeleteRemediationExceptionsBatch])

-- | The response's http status code.
deleteRemediationExceptionsResponse_httpStatus :: Lens' DeleteRemediationExceptionsResponse Int

-- | The message contains an explanation of the exception.
putRemediationExceptions_message :: Lens' PutRemediationExceptions (Maybe Text)

-- | The exception is automatically deleted after the expiration date.
putRemediationExceptions_expirationTime :: Lens' PutRemediationExceptions (Maybe UTCTime)

-- | The name of the Config rule for which you want to create remediation
--   exception.
putRemediationExceptions_configRuleName :: Lens' PutRemediationExceptions Text

-- | An exception list of resource exception keys to be processed with the
--   current request. Config adds exception for each resource key. For
--   example, Config adds 3 exceptions for 3 resource keys.
putRemediationExceptions_resourceKeys :: Lens' PutRemediationExceptions (NonEmpty RemediationExceptionResourceKey)

-- | Returns a list of failed remediation exceptions batch objects. Each
--   object in the batch consists of a list of failed items and failure
--   messages.
putRemediationExceptionsResponse_failedBatches :: Lens' PutRemediationExceptionsResponse (Maybe [FailedRemediationExceptionBatch])

-- | The response's http status code.
putRemediationExceptionsResponse_httpStatus :: Lens' PutRemediationExceptionsResponse Int

-- | A <tt>StatusDetailFilters</tt> object.
getOrganizationConfigRuleDetailedStatus_filters :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe StatusDetailFilters)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getOrganizationConfigRuleDetailedStatus_nextToken :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe Text)

-- | The maximum number of <tt>OrganizationConfigRuleDetailedStatus</tt>
--   returned on each page. If you do not specify a number, Config uses the
--   default. The default is 100.
getOrganizationConfigRuleDetailedStatus_limit :: Lens' GetOrganizationConfigRuleDetailedStatus (Maybe Natural)

-- | The name of organization config rule for which you want status details
--   for member accounts.
getOrganizationConfigRuleDetailedStatus_organizationConfigRuleName :: Lens' GetOrganizationConfigRuleDetailedStatus Text

-- | A list of <tt>MemberAccountStatus</tt> objects.
getOrganizationConfigRuleDetailedStatusResponse_organizationConfigRuleDetailedStatus :: Lens' GetOrganizationConfigRuleDetailedStatusResponse (Maybe [MemberAccountStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getOrganizationConfigRuleDetailedStatusResponse_nextToken :: Lens' GetOrganizationConfigRuleDetailedStatusResponse (Maybe Text)

-- | The response's http status code.
getOrganizationConfigRuleDetailedStatusResponse_httpStatus :: Lens' GetOrganizationConfigRuleDetailedStatusResponse Int

-- | A list of remediation configuration objects.
putRemediationConfigurations_remediationConfigurations :: Lens' PutRemediationConfigurations [RemediationConfiguration]

-- | Returns a list of failed remediation batch objects.
putRemediationConfigurationsResponse_failedBatches :: Lens' PutRemediationConfigurationsResponse (Maybe [FailedRemediationBatch])

-- | The response's http status code.
putRemediationConfigurationsResponse_httpStatus :: Lens' PutRemediationConfigurationsResponse Int

-- | Name of the conformance pack you want to delete.
deleteConformancePack_conformancePackName :: Lens' DeleteConformancePack Text

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
putConformancePack_deliveryS3Bucket :: Lens' PutConformancePack (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
putConformancePack_deliveryS3KeyPrefix :: Lens' PutConformancePack (Maybe Text)

-- | Location of file containing the template body
--   (<tt>s3://bucketname/prefix</tt>). The uri must point to the
--   conformance pack template (max size: 300 KB) that is located in an
--   Amazon S3 bucket in the same region as the conformance pack.
--   
--   You must have access to read Amazon S3 bucket.
putConformancePack_templateS3Uri :: Lens' PutConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
putConformancePack_conformancePackInputParameters :: Lens' PutConformancePack (Maybe [ConformancePackInputParameter])

-- | A string containing full conformance pack template body. Structure
--   containing the template body with a minimum length of 1 byte and a
--   maximum length of 51,200 bytes.
--   
--   You can only use a YAML template with one resource type, that is,
--   config rule and a remediation action.
putConformancePack_templateBody :: Lens' PutConformancePack (Maybe Text)

-- | Name of the conformance pack you want to create.
putConformancePack_conformancePackName :: Lens' PutConformancePack Text

-- | ARN of the conformance pack.
putConformancePackResponse_conformancePackArn :: Lens' PutConformancePackResponse (Maybe Text)

-- | The response's http status code.
putConformancePackResponse_httpStatus :: Lens' PutConformancePackResponse Int

-- | The list of names of Config rules that you want to run remediation
--   execution for.
startRemediationExecution_configRuleName :: Lens' StartRemediationExecution Text

-- | A list of resource keys to be processed with the current request. Each
--   element in the list consists of the resource type and resource ID.
startRemediationExecution_resourceKeys :: Lens' StartRemediationExecution (NonEmpty ResourceKey)

-- | Returns a failure message. For example, the resource is already
--   compliant.
startRemediationExecutionResponse_failureMessage :: Lens' StartRemediationExecutionResponse (Maybe Text)

-- | For resources that have failed to start execution, the API returns a
--   resource key object.
startRemediationExecutionResponse_failedItems :: Lens' StartRemediationExecutionResponse (Maybe (NonEmpty ResourceKey))

-- | The response's http status code.
startRemediationExecutionResponse_httpStatus :: Lens' StartRemediationExecutionResponse Int

-- | Comma-separated list of conformance pack names.
describeConformancePackStatus_conformancePackNames :: Lens' DescribeConformancePackStatus (Maybe [Text])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackStatus_nextToken :: Lens' DescribeConformancePackStatus (Maybe Text)

-- | The maximum number of conformance packs status returned on each page.
describeConformancePackStatus_limit :: Lens' DescribeConformancePackStatus (Maybe Natural)

-- | A list of <tt>ConformancePackStatusDetail</tt> objects.
describeConformancePackStatusResponse_conformancePackStatusDetails :: Lens' DescribeConformancePackStatusResponse (Maybe [ConformancePackStatusDetail])

-- | The <tt>nextToken</tt> string returned in a previous request that you
--   use to request the next page of results in a paginated response.
describeConformancePackStatusResponse_nextToken :: Lens' DescribeConformancePackStatusResponse (Maybe Text)

-- | The response's http status code.
describeConformancePackStatusResponse_httpStatus :: Lens' DescribeConformancePackStatusResponse Int

-- | The number of Config rules that are compliant and the number that are
--   noncompliant, up to a maximum of 25 for each.
getComplianceSummaryByConfigRuleResponse_complianceSummary :: Lens' GetComplianceSummaryByConfigRuleResponse (Maybe ComplianceSummary)

-- | The response's http status code.
getComplianceSummaryByConfigRuleResponse_httpStatus :: Lens' GetComplianceSummaryByConfigRuleResponse Int

-- | A list of <tt>Tags</tt> object.
putStoredQuery_tags :: Lens' PutStoredQuery (Maybe [Tag])

-- | A list of <tt>StoredQuery</tt> objects. The mandatory fields are
--   <tt>QueryName</tt> and <tt>Expression</tt>.
--   
--   When you are creating a query, you must provide a query name and an
--   expression. When you are updating a query, you must provide a query
--   name but updating the description is optional.
putStoredQuery_storedQuery :: Lens' PutStoredQuery StoredQuery

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
putStoredQueryResponse_queryArn :: Lens' PutStoredQueryResponse (Maybe Text)

-- | The response's http status code.
putStoredQueryResponse_httpStatus :: Lens' PutStoredQueryResponse Int

-- | An OrganizationAggregationSource object.
putConfigurationAggregator_organizationAggregationSource :: Lens' PutConfigurationAggregator (Maybe OrganizationAggregationSource)

-- | A list of AccountAggregationSource object.
putConfigurationAggregator_accountAggregationSources :: Lens' PutConfigurationAggregator (Maybe [AccountAggregationSource])

-- | An array of tag object.
putConfigurationAggregator_tags :: Lens' PutConfigurationAggregator (Maybe [Tag])

-- | The name of the configuration aggregator.
putConfigurationAggregator_configurationAggregatorName :: Lens' PutConfigurationAggregator Text

-- | Returns a ConfigurationAggregator object.
putConfigurationAggregatorResponse_configurationAggregator :: Lens' PutConfigurationAggregatorResponse (Maybe ConfigurationAggregator)

-- | The response's http status code.
putConfigurationAggregatorResponse_httpStatus :: Lens' PutConfigurationAggregatorResponse Int

-- | The name of the query that you want to delete.
deleteStoredQuery_queryName :: Lens' DeleteStoredQuery Text

-- | The response's http status code.
deleteStoredQueryResponse_httpStatus :: Lens' DeleteStoredQueryResponse Int

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | An array of tag object.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | The name of the configuration aggregator.
deleteConfigurationAggregator_configurationAggregatorName :: Lens' DeleteConfigurationAggregator Text

-- | The name(s) of the configuration recorder. If the name is not
--   specified, the action returns the current status of all the
--   configuration recorders associated with the account.
describeConfigurationRecorderStatus_configurationRecorderNames :: Lens' DescribeConfigurationRecorderStatus (Maybe [Text])

-- | A list that contains status of the specified recorders.
describeConfigurationRecorderStatusResponse_configurationRecordersStatus :: Lens' DescribeConfigurationRecorderStatusResponse (Maybe [ConfigurationRecorderStatus])

-- | The response's http status code.
describeConfigurationRecorderStatusResponse_httpStatus :: Lens' DescribeConfigurationRecorderStatusResponse Int

-- | The configuration recorder object that records each configuration
--   change made to the resources.
putConfigurationRecorder_configurationRecorder :: Lens' PutConfigurationRecorder ConfigurationRecorder

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The name of the configuration recorder to be deleted. You can retrieve
--   the name of your configuration recorder by using the
--   <tt>DescribeConfigurationRecorders</tt> action.
deleteConfigurationRecorder_configurationRecorderName :: Lens' DeleteConfigurationRecorder Text

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getConformancePackComplianceSummary_nextToken :: Lens' GetConformancePackComplianceSummary (Maybe Text)

-- | The maximum number of conformance packs returned on each page.
getConformancePackComplianceSummary_limit :: Lens' GetConformancePackComplianceSummary (Maybe Natural)

-- | Names of conformance packs.
getConformancePackComplianceSummary_conformancePackNames :: Lens' GetConformancePackComplianceSummary (NonEmpty Text)

-- | A list of <tt>ConformancePackComplianceSummary</tt> objects.
getConformancePackComplianceSummaryResponse_conformancePackComplianceSummaryList :: Lens' GetConformancePackComplianceSummaryResponse (Maybe (NonEmpty ConformancePackComplianceSummary))

-- | The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
getConformancePackComplianceSummaryResponse_nextToken :: Lens' GetConformancePackComplianceSummaryResponse (Maybe Text)

-- | The response's http status code.
getConformancePackComplianceSummaryResponse_httpStatus :: Lens' GetConformancePackComplianceSummaryResponse Int

-- | Specify one or more resource types to get the number of resources that
--   are compliant and the number that are noncompliant for each resource
--   type.
--   
--   For this request, you can specify an Amazon Web Services resource type
--   such as <tt>AWS::EC2::Instance</tt>. You can specify that the resource
--   type is an Amazon Web Services account by specifying
--   <tt>AWS::::Account</tt>.
getComplianceSummaryByResourceType_resourceTypes :: Lens' GetComplianceSummaryByResourceType (Maybe [Text])

-- | The number of resources that are compliant and the number that are
--   noncompliant. If one or more resource types were provided with the
--   request, the numbers are returned for each resource type. The maximum
--   number returned is 100.
getComplianceSummaryByResourceTypeResponse_complianceSummariesByResourceType :: Lens' GetComplianceSummaryByResourceTypeResponse (Maybe [ComplianceSummaryByResourceType])

-- | The response's http status code.
getComplianceSummaryByResourceTypeResponse_httpStatus :: Lens' GetComplianceSummaryByResourceTypeResponse Int

-- | A list of delivery channel names.
describeDeliveryChannelStatus_deliveryChannelNames :: Lens' DescribeDeliveryChannelStatus (Maybe [Text])

-- | A list that contains the status of a specified delivery channel.
describeDeliveryChannelStatusResponse_deliveryChannelsStatus :: Lens' DescribeDeliveryChannelStatusResponse (Maybe [DeliveryChannelStatus])

-- | The response's http status code.
describeDeliveryChannelStatusResponse_httpStatus :: Lens' DescribeDeliveryChannelStatusResponse Int

-- | The configuration delivery channel object that delivers the
--   configuration information to an Amazon S3 bucket and to an Amazon SNS
--   topic.
putDeliveryChannel_deliveryChannel :: Lens' PutDeliveryChannel DeliveryChannel

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
getComplianceDetailsByConfigRule_complianceTypes :: Lens' GetComplianceDetailsByConfigRule (Maybe [ComplianceType])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
getComplianceDetailsByConfigRule_nextToken :: Lens' GetComplianceDetailsByConfigRule (Maybe Text)

-- | The maximum number of evaluation results returned on each page. The
--   default is 10. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
getComplianceDetailsByConfigRule_limit :: Lens' GetComplianceDetailsByConfigRule (Maybe Natural)

-- | The name of the Config rule for which you want compliance information.
getComplianceDetailsByConfigRule_configRuleName :: Lens' GetComplianceDetailsByConfigRule Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   specified Config rule.
getComplianceDetailsByConfigRuleResponse_evaluationResults :: Lens' GetComplianceDetailsByConfigRuleResponse (Maybe [EvaluationResult])

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
getComplianceDetailsByConfigRuleResponse_nextToken :: Lens' GetComplianceDetailsByConfigRuleResponse (Maybe Text)

-- | The response's http status code.
getComplianceDetailsByConfigRuleResponse_httpStatus :: Lens' GetComplianceDetailsByConfigRuleResponse Int

-- | The 12-digit account ID of the account authorized to aggregate data.
deleteAggregationAuthorization_authorizedAccountId :: Lens' DeleteAggregationAuthorization Text

-- | The region authorized to collect aggregated data.
deleteAggregationAuthorization_authorizedAwsRegion :: Lens' DeleteAggregationAuthorization Text

-- | The name of the delivery channel to delete.
deleteDeliveryChannel_deliveryChannelName :: Lens' DeleteDeliveryChannel Text

-- | The type of a resource.
deleteRemediationConfiguration_resourceType :: Lens' DeleteRemediationConfiguration (Maybe Text)

-- | The name of the Config rule for which you want to delete remediation
--   configuration.
deleteRemediationConfiguration_configRuleName :: Lens' DeleteRemediationConfiguration Text

-- | The response's http status code.
deleteRemediationConfigurationResponse_httpStatus :: Lens' DeleteRemediationConfigurationResponse Int

-- | An array of tag object.
putAggregationAuthorization_tags :: Lens' PutAggregationAuthorization (Maybe [Tag])

-- | The 12-digit account ID of the account authorized to aggregate data.
putAggregationAuthorization_authorizedAccountId :: Lens' PutAggregationAuthorization Text

-- | The region authorized to collect aggregated data.
putAggregationAuthorization_authorizedAwsRegion :: Lens' PutAggregationAuthorization Text

-- | Returns an AggregationAuthorization object.
putAggregationAuthorizationResponse_aggregationAuthorization :: Lens' PutAggregationAuthorizationResponse (Maybe AggregationAuthorization)

-- | The response's http status code.
putAggregationAuthorizationResponse_httpStatus :: Lens' PutAggregationAuthorizationResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorSourcesStatus_nextToken :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe Text)

-- | The maximum number of AggregatorSourceStatus returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeConfigurationAggregatorSourcesStatus_limit :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe Natural)

-- | Filters the status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
describeConfigurationAggregatorSourcesStatus_updateStatus :: Lens' DescribeConfigurationAggregatorSourcesStatus (Maybe (NonEmpty AggregatedSourceStatusType))

-- | The name of the configuration aggregator.
describeConfigurationAggregatorSourcesStatus_configurationAggregatorName :: Lens' DescribeConfigurationAggregatorSourcesStatus Text

-- | Returns an AggregatedSourceStatus object.
describeConfigurationAggregatorSourcesStatusResponse_aggregatedSourceStatusList :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse (Maybe [AggregatedSourceStatus])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeConfigurationAggregatorSourcesStatusResponse_nextToken :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationAggregatorSourcesStatusResponse_httpStatus :: Lens' DescribeConfigurationAggregatorSourcesStatusResponse Int

-- | The IDs of only those resources that you want Config to list in the
--   response. If you do not specify this parameter, Config lists all
--   resources of the specified type that it has discovered.
listDiscoveredResources_resourceIds :: Lens' ListDiscoveredResources (Maybe [Text])

-- | The custom name of only those resources that you want Config to list
--   in the response. If you do not specify this parameter, Config lists
--   all resources of the specified type that it has discovered.
listDiscoveredResources_resourceName :: Lens' ListDiscoveredResources (Maybe Text)

-- | Specifies whether Config includes deleted resources in the results. By
--   default, deleted resources are not included.
listDiscoveredResources_includeDeletedResources :: Lens' ListDiscoveredResources (Maybe Bool)

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
listDiscoveredResources_nextToken :: Lens' ListDiscoveredResources (Maybe Text)

-- | The maximum number of resource identifiers returned on each page. The
--   default is 100. You cannot specify a number greater than 100. If you
--   specify 0, Config uses the default.
listDiscoveredResources_limit :: Lens' ListDiscoveredResources (Maybe Natural)

-- | The type of resources that you want Config to list in the response.
listDiscoveredResources_resourceType :: Lens' ListDiscoveredResources ResourceType

-- | The string that you use in a subsequent request to get the next page
--   of results in a paginated response.
listDiscoveredResourcesResponse_nextToken :: Lens' ListDiscoveredResourcesResponse (Maybe Text)

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
listDiscoveredResourcesResponse_resourceIdentifiers :: Lens' ListDiscoveredResourcesResponse (Maybe [ResourceIdentifier])

-- | The response's http status code.
listDiscoveredResourcesResponse_httpStatus :: Lens' ListDiscoveredResourcesResponse Int

-- | A list of Config rule names of remediation configurations for which
--   you want details.
describeRemediationConfigurations_configRuleNames :: Lens' DescribeRemediationConfigurations [Text]

-- | Returns a remediation configuration object.
describeRemediationConfigurationsResponse_remediationConfigurations :: Lens' DescribeRemediationConfigurationsResponse (Maybe [RemediationConfiguration])

-- | The response's http status code.
describeRemediationConfigurationsResponse_httpStatus :: Lens' DescribeRemediationConfigurationsResponse Int

-- | A list of delivery channel names.
describeDeliveryChannels_deliveryChannelNames :: Lens' DescribeDeliveryChannels (Maybe [Text])

-- | A list that contains the descriptions of the specified delivery
--   channel.
describeDeliveryChannelsResponse_deliveryChannels :: Lens' DescribeDeliveryChannelsResponse (Maybe [DeliveryChannel])

-- | The response's http status code.
describeDeliveryChannelsResponse_httpStatus :: Lens' DescribeDeliveryChannelsResponse Int

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregationAuthorizations_nextToken :: Lens' DescribeAggregationAuthorizations (Maybe Text)

-- | The maximum number of AggregationAuthorizations returned on each page.
--   The default is maximum. If you specify 0, Config uses the default.
describeAggregationAuthorizations_limit :: Lens' DescribeAggregationAuthorizations (Maybe Natural)

-- | Returns a list of authorizations granted to various aggregator
--   accounts and regions.
describeAggregationAuthorizationsResponse_aggregationAuthorizations :: Lens' DescribeAggregationAuthorizationsResponse (Maybe [AggregationAuthorization])

-- | The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
describeAggregationAuthorizationsResponse_nextToken :: Lens' DescribeAggregationAuthorizationsResponse (Maybe Text)

-- | The response's http status code.
describeAggregationAuthorizationsResponse_httpStatus :: Lens' DescribeAggregationAuthorizationsResponse Int

-- | The source regions being aggregated.
accountAggregationSource_awsRegions :: Lens' AccountAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
accountAggregationSource_allAwsRegions :: Lens' AccountAggregationSource (Maybe Bool)

-- | The 12-digit account ID of the account being aggregated.
accountAggregationSource_accountIds :: Lens' AccountAggregationSource (NonEmpty Text)

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
aggregateComplianceByConfigRule_compliance :: Lens' AggregateComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
aggregateComplianceByConfigRule_configRuleName :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateComplianceByConfigRule_accountId :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The source region from where the data is aggregated.
aggregateComplianceByConfigRule_awsRegion :: Lens' AggregateComplianceByConfigRule (Maybe Text)

-- | The compliance status of the conformance pack.
aggregateComplianceByConformancePack_compliance :: Lens' AggregateComplianceByConformancePack (Maybe AggregateConformancePackCompliance)

-- | The name of the conformance pack.
aggregateComplianceByConformancePack_conformancePackName :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateComplianceByConformancePack_accountId :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateComplianceByConformancePack_awsRegion :: Lens' AggregateComplianceByConformancePack (Maybe Text)

-- | The 12-digit account ID or region based on the GroupByKey value.
aggregateComplianceCount_groupName :: Lens' AggregateComplianceCount (Maybe Text)

-- | The number of compliant and noncompliant Config rules.
aggregateComplianceCount_complianceSummary :: Lens' AggregateComplianceCount (Maybe ComplianceSummary)

-- | Total number of compliant rules, noncompliant rules, and the rules
--   that do not have any applicable resources to evaluate upon resulting
--   in insufficient data.
aggregateConformancePackCompliance_totalRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of compliant Config Rules.
aggregateConformancePackCompliance_compliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The number of noncompliant Config Rules.
aggregateConformancePackCompliance_nonCompliantRuleCount :: Lens' AggregateConformancePackCompliance (Maybe Int)

-- | The compliance status of the conformance pack.
aggregateConformancePackCompliance_complianceType :: Lens' AggregateConformancePackCompliance (Maybe ConformancePackComplianceType)

-- | Number of compliant conformance packs.
aggregateConformancePackComplianceCount_compliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)

-- | Number of noncompliant conformance packs.
aggregateConformancePackComplianceCount_nonCompliantConformancePackCount :: Lens' AggregateConformancePackComplianceCount (Maybe Int)

-- | The name of the conformance pack.
aggregateConformancePackComplianceFilters_conformancePackName :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceFilters_accountId :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | The compliance status of the conformance pack.
aggregateConformancePackComplianceFilters_complianceType :: Lens' AggregateConformancePackComplianceFilters (Maybe ConformancePackComplianceType)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceFilters_awsRegion :: Lens' AggregateConformancePackComplianceFilters (Maybe Text)

-- | Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
aggregateConformancePackComplianceSummary_groupName :: Lens' AggregateConformancePackComplianceSummary (Maybe Text)

-- | Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
aggregateConformancePackComplianceSummary_complianceSummary :: Lens' AggregateConformancePackComplianceSummary (Maybe AggregateConformancePackComplianceCount)

-- | The 12-digit Amazon Web Services account ID of the source account.
aggregateConformancePackComplianceSummaryFilters_accountId :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)

-- | The source Amazon Web Services Region from where the data is
--   aggregated.
aggregateConformancePackComplianceSummaryFilters_awsRegion :: Lens' AggregateConformancePackComplianceSummaryFilters (Maybe Text)

-- | Uniquely identifies the evaluation result.
aggregateEvaluationResult_evaluationResultIdentifier :: Lens' AggregateEvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the agrregate evaluation
--   determined the compliance.
aggregateEvaluationResult_annotation :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
aggregateEvaluationResult_configRuleInvokedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the aggregate evaluation result.
aggregateEvaluationResult_resultRecordedTime :: Lens' AggregateEvaluationResult (Maybe UTCTime)

-- | The 12-digit account ID of the source account.
aggregateEvaluationResult_accountId :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The resource compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
aggregateEvaluationResult_complianceType :: Lens' AggregateEvaluationResult (Maybe ComplianceType)

-- | The source region from where the data is aggregated.
aggregateEvaluationResult_awsRegion :: Lens' AggregateEvaluationResult (Maybe Text)

-- | The name of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceName :: Lens' AggregateResourceIdentifier (Maybe Text)

-- | The 12-digit account ID of the source account.
aggregateResourceIdentifier_sourceAccountId :: Lens' AggregateResourceIdentifier Text

-- | The source region where data is aggregated.
aggregateResourceIdentifier_sourceRegion :: Lens' AggregateResourceIdentifier Text

-- | The ID of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceId :: Lens' AggregateResourceIdentifier Text

-- | The type of the Amazon Web Services resource.
aggregateResourceIdentifier_resourceType :: Lens' AggregateResourceIdentifier ResourceType

-- | The error code that Config returned when the source account
--   aggregation last failed.
aggregatedSourceStatus_lastErrorCode :: Lens' AggregatedSourceStatus (Maybe Text)

-- | Filters the last updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
aggregatedSourceStatus_lastUpdateStatus :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceStatusType)

-- | The source account or an organization.
aggregatedSourceStatus_sourceType :: Lens' AggregatedSourceStatus (Maybe AggregatedSourceType)

-- | The source account ID or an organization.
aggregatedSourceStatus_sourceId :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The message indicating that the source account aggregation failed due
--   to an error.
aggregatedSourceStatus_lastErrorMessage :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The region authorized to collect aggregated data.
aggregatedSourceStatus_awsRegion :: Lens' AggregatedSourceStatus (Maybe Text)

-- | The time of the last update.
aggregatedSourceStatus_lastUpdateTime :: Lens' AggregatedSourceStatus (Maybe UTCTime)

-- | The time stamp when the aggregation authorization was created.
aggregationAuthorization_creationTime :: Lens' AggregationAuthorization (Maybe UTCTime)

-- | The region authorized to collect aggregated data.
aggregationAuthorization_authorizedAwsRegion :: Lens' AggregationAuthorization (Maybe Text)

-- | The Amazon Resource Name (ARN) of the aggregation object.
aggregationAuthorization_aggregationAuthorizationArn :: Lens' AggregationAuthorization (Maybe Text)

-- | The 12-digit account ID of the account authorized to aggregate data.
aggregationAuthorization_authorizedAccountId :: Lens' AggregationAuthorization (Maybe Text)

-- | The ID of the resource (for example., sg-xxxxxx).
baseConfigurationItem_resourceId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
baseConfigurationItem_resourceType :: Lens' BaseConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
baseConfigurationItem_configurationStateId :: Lens' BaseConfigurationItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource.
baseConfigurationItem_arn :: Lens' BaseConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
baseConfigurationItem_resourceName :: Lens' BaseConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
baseConfigurationItem_resourceCreationTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
baseConfigurationItem_configurationItemStatus :: Lens' BaseConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
baseConfigurationItem_configurationItemCaptureTime :: Lens' BaseConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
baseConfigurationItem_accountId :: Lens' BaseConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
baseConfigurationItem_supplementaryConfiguration :: Lens' BaseConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
baseConfigurationItem_availabilityZone :: Lens' BaseConfigurationItem (Maybe Text)

-- | The version number of the resource configuration.
baseConfigurationItem_version :: Lens' BaseConfigurationItem (Maybe Text)

-- | The region where the resource resides.
baseConfigurationItem_awsRegion :: Lens' BaseConfigurationItem (Maybe Text)

-- | The description of the resource configuration.
baseConfigurationItem_configuration :: Lens' BaseConfigurationItem (Maybe Text)

-- | The number of Amazon Web Services resources or Config rules that cause
--   a result of <tt>NON_COMPLIANT</tt>, up to a maximum number.
compliance_complianceContributorCount :: Lens' Compliance (Maybe ComplianceContributorCount)

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
compliance_complianceType :: Lens' Compliance (Maybe ComplianceType)

-- | Indicates whether the Config rule is compliant.
complianceByConfigRule_compliance :: Lens' ComplianceByConfigRule (Maybe Compliance)

-- | The name of the Config rule.
complianceByConfigRule_configRuleName :: Lens' ComplianceByConfigRule (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceId :: Lens' ComplianceByResource (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
complianceByResource_resourceType :: Lens' ComplianceByResource (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with all
--   of the Config rules that evaluated it.
complianceByResource_compliance :: Lens' ComplianceByResource (Maybe Compliance)

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item.
complianceContributorCount_cappedCount :: Lens' ComplianceContributorCount (Maybe Int)

-- | Indicates whether the maximum count is reached.
complianceContributorCount_capExceeded :: Lens' ComplianceContributorCount (Maybe Bool)

-- | The time that Config created the compliance summary.
complianceSummary_complianceSummaryTimestamp :: Lens' ComplianceSummary (Maybe UTCTime)

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_compliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)

-- | The number of Config rules or Amazon Web Services resources that are
--   noncompliant, up to a maximum of 25 for rules and 100 for resources.
complianceSummary_nonCompliantResourceCount :: Lens' ComplianceSummary (Maybe ComplianceContributorCount)

-- | The type of Amazon Web Services resource.
complianceSummaryByResourceType_resourceType :: Lens' ComplianceSummaryByResourceType (Maybe Text)

-- | The number of Amazon Web Services resources that are compliant or
--   noncompliant, up to a maximum of 100 for each.
complianceSummaryByResourceType_complianceSummary :: Lens' ComplianceSummaryByResourceType (Maybe ComplianceSummary)

-- | The error code from the last attempted delivery.
configExportDeliveryInfo_lastErrorCode :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time of the last attempted delivery.
configExportDeliveryInfo_lastAttemptTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | The time of the last successful delivery.
configExportDeliveryInfo_lastSuccessfulTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
configExportDeliveryInfo_lastStatus :: Lens' ConfigExportDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configExportDeliveryInfo_lastErrorMessage :: Lens' ConfigExportDeliveryInfo (Maybe Text)

-- | The time that the next delivery occurs.
configExportDeliveryInfo_nextDeliveryTime :: Lens' ConfigExportDeliveryInfo (Maybe UTCTime)

-- | A string, in JSON format, that is passed to the Config rule Lambda
--   function.
configRule_inputParameters :: Lens' ConfigRule (Maybe Text)

-- | The name that you assign to the Config rule. The name is required if
--   you are adding a new rule.
configRule_configRuleName :: Lens' ConfigRule (Maybe Text)

-- | Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
configRule_createdBy :: Lens' ConfigRule (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You can specify a value for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
configRule_maximumExecutionFrequency :: Lens' ConfigRule (Maybe MaximumExecutionFrequency)

-- | The ID of the Config rule.
configRule_configRuleId :: Lens' ConfigRule (Maybe Text)

-- | Defines which resources can trigger an evaluation for the rule. The
--   scope can include one or more resource types, a combination of one
--   resource type and one resource ID, or a combination of a tag key and
--   value. Specify a scope to constrain the resources that can trigger an
--   evaluation for the rule. If you do not specify a scope, evaluations
--   are triggered when any resource in the recording group changes.
--   
--   The scope can be empty.
configRule_scope :: Lens' ConfigRule (Maybe Scope)

-- | Indicates whether the Config rule is active or is currently being
--   deleted by Config. It can also indicate the evaluation status for the
--   Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
configRule_configRuleState :: Lens' ConfigRule (Maybe ConfigRuleState)

-- | The description that you provide for the Config rule.
configRule_description :: Lens' ConfigRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRule_configRuleArn :: Lens' ConfigRule (Maybe Text)

-- | Provides the rule owner (Amazon Web Services or customer), the rule
--   identifier, and the notifications that cause the function to evaluate
--   your Amazon Web Services resources.
configRule_source :: Lens' ConfigRule Source

-- | The name of the Config rule.
configRuleComplianceFilters_configRuleName :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The 12-digit account ID of the source account.
configRuleComplianceFilters_accountId :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The rule compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
configRuleComplianceFilters_complianceType :: Lens' ConfigRuleComplianceFilters (Maybe ComplianceType)

-- | The source region where the data is aggregated.
configRuleComplianceFilters_awsRegion :: Lens' ConfigRuleComplianceFilters (Maybe Text)

-- | The 12-digit account ID of the source account.
configRuleComplianceSummaryFilters_accountId :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)

-- | The source region where the data is aggregated.
configRuleComplianceSummaryFilters_awsRegion :: Lens' ConfigRuleComplianceSummaryFilters (Maybe Text)

-- | The error code that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorCode :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to evaluate your Amazon Web Services
--   resources against the rule.
configRuleEvaluationStatus_lastFailedEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you first activated the Config rule.
configRuleEvaluationStatus_firstActivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that Config last successfully evaluated your Amazon Web
--   Services resources against the rule.
configRuleEvaluationStatus_lastSuccessfulEvaluationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The time that you last turned off the Config rule.
configRuleEvaluationStatus_lastDeactivatedTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The name of the Config rule.
configRuleEvaluationStatus_configRuleName :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The error message that Config returned when the rule last failed.
configRuleEvaluationStatus_lastErrorMessage :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The ID of the Config rule.
configRuleEvaluationStatus_configRuleId :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The time that Config last failed to invoke the Config rule to evaluate
--   your Amazon Web Services resources.
configRuleEvaluationStatus_lastFailedInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | Indicates whether Config has evaluated your resources against the rule
--   at least once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
configRuleEvaluationStatus_firstEvaluationStarted :: Lens' ConfigRuleEvaluationStatus (Maybe Bool)

-- | The time that Config last successfully invoked the Config rule to
--   evaluate your Amazon Web Services resources.
configRuleEvaluationStatus_lastSuccessfulInvocationTime :: Lens' ConfigRuleEvaluationStatus (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Config rule.
configRuleEvaluationStatus_configRuleArn :: Lens' ConfigRuleEvaluationStatus (Maybe Text)

-- | The frequency with which Config delivers configuration snapshots.
configSnapshotDeliveryProperties_deliveryFrequency :: Lens' ConfigSnapshotDeliveryProperties (Maybe MaximumExecutionFrequency)

-- | The error code from the last attempted delivery.
configStreamDeliveryInfo_lastErrorCode :: Lens' ConfigStreamDeliveryInfo (Maybe Text)

-- | The time from the last status change.
configStreamDeliveryInfo_lastStatusChangeTime :: Lens' ConfigStreamDeliveryInfo (Maybe UTCTime)

-- | Status of the last attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
configStreamDeliveryInfo_lastStatus :: Lens' ConfigStreamDeliveryInfo (Maybe DeliveryStatus)

-- | The error message from the last attempted delivery.
configStreamDeliveryInfo_lastErrorMessage :: Lens' ConfigStreamDeliveryInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the aggregator.
configurationAggregator_configurationAggregatorArn :: Lens' ConfigurationAggregator (Maybe Text)

-- | The time stamp when the configuration aggregator was created.
configurationAggregator_creationTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides an organization and list of regions to be aggregated.
configurationAggregator_organizationAggregationSource :: Lens' ConfigurationAggregator (Maybe OrganizationAggregationSource)

-- | The time of the last update.
configurationAggregator_lastUpdatedTime :: Lens' ConfigurationAggregator (Maybe UTCTime)

-- | Provides a list of source accounts and regions to be aggregated.
configurationAggregator_accountAggregationSources :: Lens' ConfigurationAggregator (Maybe [AccountAggregationSource])

-- | Amazon Web Services service that created the configuration aggregator.
configurationAggregator_createdBy :: Lens' ConfigurationAggregator (Maybe Text)

-- | The name of the aggregator.
configurationAggregator_configurationAggregatorName :: Lens' ConfigurationAggregator (Maybe Text)

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
configurationItem_resourceId :: Lens' ConfigurationItem (Maybe Text)

-- | The type of Amazon Web Services resource.
configurationItem_resourceType :: Lens' ConfigurationItem (Maybe ResourceType)

-- | An identifier that indicates the ordering of the configuration items
--   of a resource.
configurationItem_configurationStateId :: Lens' ConfigurationItem (Maybe Text)

-- | Amazon Resource Name (ARN) associated with the resource.
configurationItem_arn :: Lens' ConfigurationItem (Maybe Text)

-- | The custom name of the resource, if available.
configurationItem_resourceName :: Lens' ConfigurationItem (Maybe Text)

-- | The time stamp when the resource was created.
configurationItem_resourceCreationTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
configurationItem_configurationItemStatus :: Lens' ConfigurationItem (Maybe ConfigurationItemStatus)

-- | The time when the configuration recording was initiated.
configurationItem_configurationItemCaptureTime :: Lens' ConfigurationItem (Maybe UTCTime)

-- | The 12-digit Amazon Web Services account ID associated with the
--   resource.
configurationItem_accountId :: Lens' ConfigurationItem (Maybe Text)

-- | Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the
--   <tt>configuration</tt> parameter.
configurationItem_supplementaryConfiguration :: Lens' ConfigurationItem (Maybe (HashMap Text Text))

-- | The Availability Zone associated with the resource.
configurationItem_availabilityZone :: Lens' ConfigurationItem (Maybe Text)

-- | A list of related Amazon Web Services resources.
configurationItem_relationships :: Lens' ConfigurationItem (Maybe [Relationship])

-- | The version number of the resource configuration.
configurationItem_version :: Lens' ConfigurationItem (Maybe Text)

-- | The region where the resource resides.
configurationItem_awsRegion :: Lens' ConfigurationItem (Maybe Text)

-- | A list of CloudTrail event IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
configurationItem_relatedEvents :: Lens' ConfigurationItem (Maybe [Text])

-- | The description of the resource configuration.
configurationItem_configuration :: Lens' ConfigurationItem (Maybe Text)

-- | Unique MD5 hash that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
configurationItem_configurationItemMD5Hash :: Lens' ConfigurationItem (Maybe Text)

-- | A mapping of key value tags associated with the resource.
configurationItem_tags :: Lens' ConfigurationItem (Maybe (HashMap Text Text))

-- | The name of the recorder. By default, Config automatically assigns the
--   name "default" when creating the configuration recorder. You cannot
--   change the assigned name.
configurationRecorder_name :: Lens' ConfigurationRecorder (Maybe Text)

-- | Specifies the types of Amazon Web Services resources for which Config
--   records configuration changes.
configurationRecorder_recordingGroup :: Lens' ConfigurationRecorder (Maybe RecordingGroup)

-- | Amazon Resource Name (ARN) of the IAM role used to describe the Amazon
--   Web Services resources associated with the account.
configurationRecorder_roleARN :: Lens' ConfigurationRecorder (Maybe Text)

-- | The error code indicating that the recording failed.
configurationRecorderStatus_lastErrorCode :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last stopped.
configurationRecorderStatus_lastStopTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | The time when the status was last changed.
configurationRecorderStatus_lastStatusChangeTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | Specifies whether or not the recorder is currently recording.
configurationRecorderStatus_recording :: Lens' ConfigurationRecorderStatus (Maybe Bool)

-- | The last (previous) status of the recorder.
configurationRecorderStatus_lastStatus :: Lens' ConfigurationRecorderStatus (Maybe RecorderStatus)

-- | The message indicating that the recording failed due to an error.
configurationRecorderStatus_lastErrorMessage :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The name of the configuration recorder.
configurationRecorderStatus_name :: Lens' ConfigurationRecorderStatus (Maybe Text)

-- | The time the recorder was last started.
configurationRecorderStatus_lastStartTime :: Lens' ConfigurationRecorderStatus (Maybe UTCTime)

-- | Filters the results by Config rule names.
conformancePackComplianceFilters_configRuleNames :: Lens' ConformancePackComplianceFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackComplianceFilters_complianceType :: Lens' ConformancePackComplianceFilters (Maybe ConformancePackComplianceType)

-- | The name of the conformance pack name.
conformancePackComplianceSummary_conformancePackName :: Lens' ConformancePackComplianceSummary Text

-- | The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackComplianceSummary_conformancePackComplianceStatus :: Lens' ConformancePackComplianceSummary ConformancePackComplianceType

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
conformancePackDetail_deliveryS3Bucket :: Lens' ConformancePackDetail (Maybe Text)

-- | The prefix for the Amazon S3 bucket.
--   
--   This field is optional.
conformancePackDetail_deliveryS3KeyPrefix :: Lens' ConformancePackDetail (Maybe Text)

-- | Amazon Web Services service that created the conformance pack.
conformancePackDetail_createdBy :: Lens' ConformancePackDetail (Maybe Text)

-- | Last time when conformation pack update was requested.
conformancePackDetail_lastUpdateRequestedTime :: Lens' ConformancePackDetail (Maybe UTCTime)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
conformancePackDetail_conformancePackInputParameters :: Lens' ConformancePackDetail (Maybe [ConformancePackInputParameter])

-- | Name of the conformance pack.
conformancePackDetail_conformancePackName :: Lens' ConformancePackDetail Text

-- | Amazon Resource Name (ARN) of the conformance pack.
conformancePackDetail_conformancePackArn :: Lens' ConformancePackDetail Text

-- | ID of the conformance pack.
conformancePackDetail_conformancePackId :: Lens' ConformancePackDetail Text

-- | Filters the results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
conformancePackEvaluationFilters_resourceIds :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
conformancePackEvaluationFilters_resourceType :: Lens' ConformancePackEvaluationFilters (Maybe Text)

-- | Filters the results by Config rule names.
conformancePackEvaluationFilters_configRuleNames :: Lens' ConformancePackEvaluationFilters (Maybe [Text])

-- | Filters the results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationFilters_complianceType :: Lens' ConformancePackEvaluationFilters (Maybe ConformancePackComplianceType)

-- | Supplementary information about how the evaluation determined the
--   compliance.
conformancePackEvaluationResult_annotation :: Lens' ConformancePackEvaluationResult (Maybe Text)

-- | The compliance type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
conformancePackEvaluationResult_complianceType :: Lens' ConformancePackEvaluationResult ConformancePackComplianceType

-- | Undocumented member.
conformancePackEvaluationResult_evaluationResultIdentifier :: Lens' ConformancePackEvaluationResult EvaluationResultIdentifier

-- | The time when Config rule evaluated Amazon Web Services resource.
conformancePackEvaluationResult_configRuleInvokedTime :: Lens' ConformancePackEvaluationResult UTCTime

-- | The time when Config recorded the evaluation result.
conformancePackEvaluationResult_resultRecordedTime :: Lens' ConformancePackEvaluationResult UTCTime

-- | One part of a key-value pair.
conformancePackInputParameter_parameterName :: Lens' ConformancePackInputParameter Text

-- | Another part of the key-value pair.
conformancePackInputParameter_parameterValue :: Lens' ConformancePackInputParameter Text

-- | Controls for the conformance pack. A control is a process to prevent
--   or detect problems while meeting objectives. A control can align with
--   a specific compliance regime or map to internal controls defined by an
--   organization.
conformancePackRuleCompliance_controls :: Lens' ConformancePackRuleCompliance (Maybe [Text])

-- | Name of the config rule.
conformancePackRuleCompliance_configRuleName :: Lens' ConformancePackRuleCompliance (Maybe Text)

-- | Compliance of the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
conformancePackRuleCompliance_complianceType :: Lens' ConformancePackRuleCompliance (Maybe ConformancePackComplianceType)

-- | The reason of conformance pack creation failure.
conformancePackStatusDetail_conformancePackStatusReason :: Lens' ConformancePackStatusDetail (Maybe Text)

-- | Last time when conformation pack creation and update was successful.
conformancePackStatusDetail_lastUpdateCompletedTime :: Lens' ConformancePackStatusDetail (Maybe UTCTime)

-- | Name of the conformance pack.
conformancePackStatusDetail_conformancePackName :: Lens' ConformancePackStatusDetail Text

-- | ID of the conformance pack.
conformancePackStatusDetail_conformancePackId :: Lens' ConformancePackStatusDetail Text

-- | Amazon Resource Name (ARN) of comformance pack.
conformancePackStatusDetail_conformancePackArn :: Lens' ConformancePackStatusDetail Text

-- | Indicates deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
conformancePackStatusDetail_conformancePackState :: Lens' ConformancePackStatusDetail ConformancePackState

-- | Amazon Resource Name (ARN) of CloudFormation stack.
conformancePackStatusDetail_stackArn :: Lens' ConformancePackStatusDetail Text

-- | Last time when conformation pack creation and update was requested.
conformancePackStatusDetail_lastUpdateRequestedTime :: Lens' ConformancePackStatusDetail UTCTime

-- | The prefix for the specified Amazon S3 bucket.
deliveryChannel_s3KeyPrefix :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config
--   sends notifications about configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
deliveryChannel_snsTopicARN :: Lens' DeliveryChannel (Maybe Text)

-- | The name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
deliveryChannel_name :: Lens' DeliveryChannel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS )
--   KMS key (KMS key) used to encrypt objects delivered by Config. Must
--   belong to the same Region as the destination S3 bucket.
deliveryChannel_s3KmsKeyArn :: Lens' DeliveryChannel (Maybe Text)

-- | The options for how often Config delivers configuration snapshots to
--   the Amazon S3 bucket.
deliveryChannel_configSnapshotDeliveryProperties :: Lens' DeliveryChannel (Maybe ConfigSnapshotDeliveryProperties)

-- | The name of the Amazon S3 bucket to which Config delivers
--   configuration snapshots and configuration history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
deliveryChannel_s3BucketName :: Lens' DeliveryChannel (Maybe Text)

-- | A list containing the status of the delivery of the snapshot to the
--   specified Amazon S3 bucket.
deliveryChannelStatus_configSnapshotDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | A list containing the status of the delivery of the configuration
--   stream notification to the specified Amazon SNS topic.
deliveryChannelStatus_configStreamDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigStreamDeliveryInfo)

-- | A list that contains the status of the delivery of the configuration
--   history to the specified Amazon S3 bucket.
deliveryChannelStatus_configHistoryDeliveryInfo :: Lens' DeliveryChannelStatus (Maybe ConfigExportDeliveryInfo)

-- | The name of the delivery channel.
deliveryChannelStatus_name :: Lens' DeliveryChannelStatus (Maybe Text)

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluation_annotation :: Lens' Evaluation (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluation_complianceResourceType :: Lens' Evaluation Text

-- | The ID of the Amazon Web Services resource that was evaluated.
evaluation_complianceResourceId :: Lens' Evaluation Text

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that it was evaluated against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
evaluation_complianceType :: Lens' Evaluation ComplianceType

-- | The time of the event in Config that triggered the evaluation. For
--   event-based evaluations, the time indicates when Config created the
--   configuration item that triggered the evaluation. For periodic
--   evaluations, the time indicates when Config triggered the evaluation
--   at the frequency that you specified (for example, every 24 hours).
evaluation_orderingTimestamp :: Lens' Evaluation UTCTime

-- | Uniquely identifies the evaluation result.
evaluationResult_evaluationResultIdentifier :: Lens' EvaluationResult (Maybe EvaluationResultIdentifier)

-- | Supplementary information about how the evaluation determined the
--   compliance.
evaluationResult_annotation :: Lens' EvaluationResult (Maybe Text)

-- | The time when the Config rule evaluated the Amazon Web Services
--   resource.
evaluationResult_configRuleInvokedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | The time when Config recorded the evaluation result.
evaluationResult_resultRecordedTime :: Lens' EvaluationResult (Maybe UTCTime)

-- | An encrypted token that associates an evaluation with an Config rule.
--   The token identifies the rule, the Amazon Web Services resource being
--   evaluated, and the event that triggered the evaluation.
evaluationResult_resultToken :: Lens' EvaluationResult (Maybe Text)

-- | Indicates whether the Amazon Web Services resource complies with the
--   Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
evaluationResult_complianceType :: Lens' EvaluationResult (Maybe ComplianceType)

-- | Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
evaluationResultIdentifier_evaluationResultQualifier :: Lens' EvaluationResultIdentifier (Maybe EvaluationResultQualifier)

-- | The time of the event that triggered the evaluation of your Amazon Web
--   Services resources. The time can indicate when Config delivered a
--   configuration item change notification, or it can indicate when Config
--   delivered the configuration snapshot, depending on which event
--   triggered the evaluation.
evaluationResultIdentifier_orderingTimestamp :: Lens' EvaluationResultIdentifier (Maybe UTCTime)

-- | The ID of the evaluated Amazon Web Services resource.
evaluationResultQualifier_resourceId :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The type of Amazon Web Services resource that was evaluated.
evaluationResultQualifier_resourceType :: Lens' EvaluationResultQualifier (Maybe Text)

-- | The name of the Config rule that was used in the evaluation.
evaluationResultQualifier_configRuleName :: Lens' EvaluationResultQualifier (Maybe Text)

-- | A SsmControls object.
executionControls_ssmControls :: Lens' ExecutionControls (Maybe SsmControls)

-- | Supplementary information about the reason of compliance. For example,
--   this task was completed on a specific date.
externalEvaluation_annotation :: Lens' ExternalEvaluation (Maybe Text)

-- | The evaluated compliance resource type. Config accepts
--   <tt>AWS::::Account</tt> resource type.
externalEvaluation_complianceResourceType :: Lens' ExternalEvaluation Text

-- | The evaluated compliance resource ID. Config accepts only Amazon Web
--   Services account ID.
externalEvaluation_complianceResourceId :: Lens' ExternalEvaluation Text

-- | The compliance of the Amazon Web Services resource. The valid values
--   are <tt>COMPLIANT, NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
externalEvaluation_complianceType :: Lens' ExternalEvaluation ComplianceType

-- | The time when the compliance was recorded.
externalEvaluation_orderingTimestamp :: Lens' ExternalEvaluation UTCTime

-- | Returns a failure message for delete remediation exception. For
--   example, Config creates an exception due to an internal error.
failedDeleteRemediationExceptionsBatch_failureMessage :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedDeleteRemediationExceptionsBatch_failedItems :: Lens' FailedDeleteRemediationExceptionsBatch (Maybe (NonEmpty RemediationExceptionResourceKey))

-- | Returns a failure message. For example, the resource is already
--   compliant.
failedRemediationBatch_failureMessage :: Lens' FailedRemediationBatch (Maybe Text)

-- | Returns remediation configurations of the failed items.
failedRemediationBatch_failedItems :: Lens' FailedRemediationBatch (Maybe [RemediationConfiguration])

-- | Returns a failure message. For example, the auto-remediation has
--   failed.
failedRemediationExceptionBatch_failureMessage :: Lens' FailedRemediationExceptionBatch (Maybe Text)

-- | Returns remediation exception resource key object of the failed items.
failedRemediationExceptionBatch_failedItems :: Lens' FailedRemediationExceptionBatch (Maybe [RemediationException])

-- | Name of the field.
fieldInfo_name :: Lens' FieldInfo (Maybe Text)

-- | The name of the group that can be region, account ID, or resource
--   type. For example, region1, region2 if the region was chosen as
--   <tt>GroupByKey</tt>.
groupedResourceCount_groupName :: Lens' GroupedResourceCount Text

-- | The number of resources in the group.
groupedResourceCount_resourceCount :: Lens' GroupedResourceCount Integer

-- | An error code that is returned when config rule creation or deletion
--   failed in the member account.
memberAccountStatus_errorCode :: Lens' MemberAccountStatus (Maybe Text)

-- | An error message indicating that config rule account creation or
--   deletion has failed due to an error in the member account.
memberAccountStatus_errorMessage :: Lens' MemberAccountStatus (Maybe Text)

-- | The timestamp of the last status update.
memberAccountStatus_lastUpdateTime :: Lens' MemberAccountStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
memberAccountStatus_accountId :: Lens' MemberAccountStatus Text

-- | The name of config rule deployed in the member account.
memberAccountStatus_configRuleName :: Lens' MemberAccountStatus Text

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
memberAccountStatus_memberAccountRuleStatus :: Lens' MemberAccountStatus MemberAccountRuleStatus

-- | The source regions being aggregated.
organizationAggregationSource_awsRegions :: Lens' OrganizationAggregationSource (Maybe (NonEmpty Text))

-- | If true, aggregate existing Config regions and future regions.
organizationAggregationSource_allAwsRegions :: Lens' OrganizationAggregationSource (Maybe Bool)

-- | ARN of the IAM role used to retrieve Amazon Web Services Organization
--   details associated with the aggregator account.
organizationAggregationSource_roleArn :: Lens' OrganizationAggregationSource Text

-- | An <tt>OrganizationManagedRuleMetadata</tt> object.
organizationConfigRule_organizationManagedRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationManagedRuleMetadata)

-- | A comma-separated list of accounts excluded from organization config
--   rule.
organizationConfigRule_excludedAccounts :: Lens' OrganizationConfigRule (Maybe [Text])

-- | An <tt>OrganizationCustomRuleMetadata</tt> object.
organizationConfigRule_organizationCustomRuleMetadata :: Lens' OrganizationConfigRule (Maybe OrganizationCustomRuleMetadata)

-- | The timestamp of the last update.
organizationConfigRule_lastUpdateTime :: Lens' OrganizationConfigRule (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRule_organizationConfigRuleName :: Lens' OrganizationConfigRule Text

-- | Amazon Resource Name (ARN) of organization config rule.
organizationConfigRule_organizationConfigRuleArn :: Lens' OrganizationConfigRule Text

-- | An error code that is returned when organization config rule creation
--   or deletion has failed.
organizationConfigRuleStatus_errorCode :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | An error message indicating that organization config rule creation or
--   deletion failed due to an error.
organizationConfigRuleStatus_errorMessage :: Lens' OrganizationConfigRuleStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConfigRuleStatus_lastUpdateTime :: Lens' OrganizationConfigRuleStatus (Maybe UTCTime)

-- | The name that you assign to organization config rule.
organizationConfigRuleStatus_organizationConfigRuleName :: Lens' OrganizationConfigRuleStatus Text

-- | Indicates deployment status of an organization config rule. When
--   master account calls PutOrganizationConfigRule action for the first
--   time, config rule status is created in all the member accounts. When
--   master account calls PutOrganizationConfigRule action for the second
--   time, config rule status is updated in all the member accounts.
--   Additionally, config rule status is updated when one or more member
--   accounts join or leave an organization. Config rule status is deleted
--   when the master account deletes OrganizationConfigRule in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
organizationConfigRuleStatus_organizationRuleStatus :: Lens' OrganizationConfigRuleStatus OrganizationRuleStatus

-- | The name of the Amazon S3 bucket where Config stores conformance pack
--   templates.
--   
--   This field is optional.
organizationConformancePack_deliveryS3Bucket :: Lens' OrganizationConformancePack (Maybe Text)

-- | Any folder structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
organizationConformancePack_deliveryS3KeyPrefix :: Lens' OrganizationConformancePack (Maybe Text)

-- | A list of <tt>ConformancePackInputParameter</tt> objects.
organizationConformancePack_conformancePackInputParameters :: Lens' OrganizationConformancePack (Maybe [ConformancePackInputParameter])

-- | A comma-separated list of accounts excluded from organization
--   conformance pack.
organizationConformancePack_excludedAccounts :: Lens' OrganizationConformancePack (Maybe [Text])

-- | The name you assign to an organization conformance pack.
organizationConformancePack_organizationConformancePackName :: Lens' OrganizationConformancePack Text

-- | Amazon Resource Name (ARN) of organization conformance pack.
organizationConformancePack_organizationConformancePackArn :: Lens' OrganizationConformancePack Text

-- | Last time when organization conformation pack was updated.
organizationConformancePack_lastUpdateTime :: Lens' OrganizationConformancePack UTCTime

-- | An error code that is returned when conformance pack creation or
--   deletion failed in the member account.
organizationConformancePackDetailedStatus_errorCode :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | An error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
organizationConformancePackDetailedStatus_errorMessage :: Lens' OrganizationConformancePackDetailedStatus (Maybe Text)

-- | The timestamp of the last status update.
organizationConformancePackDetailedStatus_lastUpdateTime :: Lens' OrganizationConformancePackDetailedStatus (Maybe UTCTime)

-- | The 12-digit account ID of a member account.
organizationConformancePackDetailedStatus_accountId :: Lens' OrganizationConformancePackDetailedStatus Text

-- | The name of conformance pack deployed in the member account.
organizationConformancePackDetailedStatus_conformancePackName :: Lens' OrganizationConformancePackDetailedStatus Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationConformancePackDetailedStatus_status :: Lens' OrganizationConformancePackDetailedStatus OrganizationResourceDetailedStatus

-- | An error code that is returned when organization conformance pack
--   creation or deletion has failed in a member account.
organizationConformancePackStatus_errorCode :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | An error message indicating that organization conformance pack
--   creation or deletion failed due to an error.
organizationConformancePackStatus_errorMessage :: Lens' OrganizationConformancePackStatus (Maybe Text)

-- | The timestamp of the last update.
organizationConformancePackStatus_lastUpdateTime :: Lens' OrganizationConformancePackStatus (Maybe UTCTime)

-- | The name that you assign to organization conformance pack.
organizationConformancePackStatus_organizationConformancePackName :: Lens' OrganizationConformancePackStatus Text

-- | Indicates deployment status of an organization conformance pack. When
--   master account calls PutOrganizationConformancePack for the first
--   time, conformance pack status is created in all the member accounts.
--   When master account calls PutOrganizationConformancePack for the
--   second time, conformance pack status is updated in all the member
--   accounts. Additionally, conformance pack status is updated when one or
--   more member accounts join or leave an organization. Conformance pack
--   status is deleted when the master account deletes
--   OrganizationConformancePack in all the member accounts and disables
--   service access for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
organizationConformancePackStatus_status :: Lens' OrganizationConformancePackStatus OrganizationResourceStatus

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationCustomRuleMetadata_inputParameters :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceIdScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationCustomRuleMetadata_tagValueScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   Your custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationCustomRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationCustomRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationCustomRuleMetadata_tagKeyScope :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationCustomRuleMetadata_resourceTypesScope :: Lens' OrganizationCustomRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationCustomRuleMetadata_description :: Lens' OrganizationCustomRuleMetadata (Maybe Text)

-- | The lambda function ARN.
organizationCustomRuleMetadata_lambdaFunctionArn :: Lens' OrganizationCustomRuleMetadata Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes :: Lens' OrganizationCustomRuleMetadata [OrganizationConfigRuleTriggerType]

-- | A string, in JSON format, that is passed to organization config rule
--   Lambda function.
organizationManagedRuleMetadata_inputParameters :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The ID of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceIdScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
organizationManagedRuleMetadata_tagValueScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The maximum frequency with which Config runs evaluations for a rule.
--   You are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
organizationManagedRuleMetadata_maximumExecutionFrequency :: Lens' OrganizationManagedRuleMetadata (Maybe MaximumExecutionFrequency)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
organizationManagedRuleMetadata_tagKeyScope :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | The type of the Amazon Web Services resource that was evaluated.
organizationManagedRuleMetadata_resourceTypesScope :: Lens' OrganizationManagedRuleMetadata (Maybe [Text])

-- | The description that you provide for organization config rule.
organizationManagedRuleMetadata_description :: Lens' OrganizationManagedRuleMetadata (Maybe Text)

-- | For organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
organizationManagedRuleMetadata_ruleIdentifier :: Lens' OrganizationManagedRuleMetadata Text

-- | Indicates deployment status for conformance pack in a member account.
--   When master account calls <tt>PutOrganizationConformancePack</tt>
--   action for the first time, conformance pack status is created in the
--   member account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
organizationResourceDetailedStatusFilters_status :: Lens' OrganizationResourceDetailedStatusFilters (Maybe OrganizationResourceDetailedStatus)

-- | The 12-digit account ID of the member account within an organization.
organizationResourceDetailedStatusFilters_accountId :: Lens' OrganizationResourceDetailedStatusFilters (Maybe Text)

-- | The 12-digit account ID of the account requesting to aggregate data.
pendingAggregationRequest_requesterAccountId :: Lens' PendingAggregationRequest (Maybe Text)

-- | The region requesting to aggregate data.
pendingAggregationRequest_requesterAwsRegion :: Lens' PendingAggregationRequest (Maybe Text)

-- | Returns a <tt>FieldInfo</tt> object.
queryInfo_selectFields :: Lens' QueryInfo (Maybe [FieldInfo])

-- | Specifies whether Config records configuration changes for every
--   supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
recordingGroup_allSupported :: Lens' RecordingGroup (Maybe Bool)

-- | Specifies whether Config includes all supported types of global
--   resources (for example, IAM resources) with the resources that it
--   records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
recordingGroup_includeGlobalResourceTypes :: Lens' RecordingGroup (Maybe Bool)

-- | A comma-separated list that specifies the types of Amazon Web Services
--   resources for which Config records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
recordingGroup_resourceTypes :: Lens' RecordingGroup (Maybe [ResourceType])

-- | The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
relationship_resourceId :: Lens' Relationship (Maybe Text)

-- | The resource type of the related resource.
relationship_resourceType :: Lens' Relationship (Maybe ResourceType)

-- | The custom name of the related resource, if available.
relationship_resourceName :: Lens' Relationship (Maybe Text)

-- | The type of relationship with the related resource.
relationship_relationshipName :: Lens' Relationship (Maybe Text)

-- | The type of a resource.
remediationConfiguration_resourceType :: Lens' RemediationConfiguration (Maybe Text)

-- | Amazon Resource Name (ARN) of remediation configuration.
remediationConfiguration_arn :: Lens' RemediationConfiguration (Maybe Text)

-- | The remediation is triggered automatically.
remediationConfiguration_automatic :: Lens' RemediationConfiguration (Maybe Bool)

-- | Name of the service that owns the service linked rule, if applicable.
remediationConfiguration_createdByService :: Lens' RemediationConfiguration (Maybe Text)

-- | Maximum time in seconds that Config runs auto-remediation. If you do
--   not select a number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
remediationConfiguration_retryAttemptSeconds :: Lens' RemediationConfiguration (Maybe Natural)

-- | An ExecutionControls object.
remediationConfiguration_executionControls :: Lens' RemediationConfiguration (Maybe ExecutionControls)

-- | An object of the RemediationParameterValue.
remediationConfiguration_parameters :: Lens' RemediationConfiguration (Maybe (HashMap Text RemediationParameterValue))

-- | The maximum number of failed attempts for auto-remediation. If you do
--   not select a number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
remediationConfiguration_maximumAutomaticAttempts :: Lens' RemediationConfiguration (Maybe Natural)

-- | Version of the target. For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
remediationConfiguration_targetVersion :: Lens' RemediationConfiguration (Maybe Text)

-- | The name of the Config rule.
remediationConfiguration_configRuleName :: Lens' RemediationConfiguration Text

-- | The type of the target. Target executes remediation. For example, SSM
--   document.
remediationConfiguration_targetType :: Lens' RemediationConfiguration RemediationTargetType

-- | Target ID is the name of the public document.
remediationConfiguration_targetId :: Lens' RemediationConfiguration Text

-- | An explanation of an remediation exception.
remediationException_message :: Lens' RemediationException (Maybe Text)

-- | The time when the remediation exception will be deleted.
remediationException_expirationTime :: Lens' RemediationException (Maybe UTCTime)

-- | The name of the Config rule.
remediationException_configRuleName :: Lens' RemediationException Text

-- | The type of a resource.
remediationException_resourceType :: Lens' RemediationException Text

-- | The ID of the resource (for example., sg-xxxxxx).
remediationException_resourceId :: Lens' RemediationException Text

-- | The ID of the resource (for example., sg-xxxxxx).
remediationExceptionResourceKey_resourceId :: Lens' RemediationExceptionResourceKey (Maybe Text)

-- | The type of a resource.
remediationExceptionResourceKey_resourceType :: Lens' RemediationExceptionResourceKey (Maybe Text)

-- | ENUM of the values.
remediationExecutionStatus_state :: Lens' RemediationExecutionStatus (Maybe RemediationExecutionState)

-- | The time when the remediation execution was last updated.
remediationExecutionStatus_lastUpdatedTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)

-- | Undocumented member.
remediationExecutionStatus_resourceKey :: Lens' RemediationExecutionStatus (Maybe ResourceKey)

-- | Details of every step.
remediationExecutionStatus_stepDetails :: Lens' RemediationExecutionStatus (Maybe [RemediationExecutionStep])

-- | Start time when the remediation was executed.
remediationExecutionStatus_invocationTime :: Lens' RemediationExecutionStatus (Maybe UTCTime)

-- | The valid status of the step.
remediationExecutionStep_state :: Lens' RemediationExecutionStep (Maybe RemediationExecutionStepState)

-- | The time when the step started.
remediationExecutionStep_startTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | The details of the step.
remediationExecutionStep_name :: Lens' RemediationExecutionStep (Maybe Text)

-- | The time when the step stopped.
remediationExecutionStep_stopTime :: Lens' RemediationExecutionStep (Maybe UTCTime)

-- | An error message if the step was interrupted during execution.
remediationExecutionStep_errorMessage :: Lens' RemediationExecutionStep (Maybe Text)

-- | The value is static and does not change at run-time.
remediationParameterValue_staticValue :: Lens' RemediationParameterValue (Maybe StaticValue)

-- | The value is dynamic and changes at run-time.
remediationParameterValue_resourceValue :: Lens' RemediationParameterValue (Maybe ResourceValue)

-- | The resource type (for example, <tt>"AWS::EC2::Instance"</tt>).
resourceCount_resourceType :: Lens' ResourceCount (Maybe ResourceType)

-- | The number of resources.
resourceCount_count :: Lens' ResourceCount (Maybe Integer)

-- | The type of the Amazon Web Services resource.
resourceCountFilters_resourceType :: Lens' ResourceCountFilters (Maybe ResourceType)

-- | The 12-digit ID of the account.
resourceCountFilters_accountId :: Lens' ResourceCountFilters (Maybe Text)

-- | The region where the account is located.
resourceCountFilters_region :: Lens' ResourceCountFilters (Maybe Text)

-- | The ID of the resource.
resourceFilters_resourceId :: Lens' ResourceFilters (Maybe Text)

-- | The name of the resource.
resourceFilters_resourceName :: Lens' ResourceFilters (Maybe Text)

-- | The 12-digit source account ID.
resourceFilters_accountId :: Lens' ResourceFilters (Maybe Text)

-- | The source region.
resourceFilters_region :: Lens' ResourceFilters (Maybe Text)

-- | The ID of the resource (for example, <tt>sg-xxxxxx</tt>).
resourceIdentifier_resourceId :: Lens' ResourceIdentifier (Maybe Text)

-- | The type of resource.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe ResourceType)

-- | The custom name of the resource (if available).
resourceIdentifier_resourceName :: Lens' ResourceIdentifier (Maybe Text)

-- | The time that the resource was deleted.
resourceIdentifier_resourceDeletionTime :: Lens' ResourceIdentifier (Maybe UTCTime)

-- | The resource type.
resourceKey_resourceType :: Lens' ResourceKey ResourceType

-- | The ID of the resource (for example., sg-xxxxxx).
resourceKey_resourceId :: Lens' ResourceKey Text

-- | The value is a resource ID.
resourceValue_value :: Lens' ResourceValue ResourceValueType

-- | The name of the retention configuration object.
retentionConfiguration_name :: Lens' RetentionConfiguration Text

-- | Number of days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
retentionConfiguration_retentionPeriodInDays :: Lens' RetentionConfiguration Natural

-- | The resource types of only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. You can only specify
--   one type if you also specify a resource ID for
--   <tt>ComplianceResourceId</tt>.
scope_complianceResourceTypes :: Lens' Scope (Maybe [Text])

-- | The ID of the only Amazon Web Services resource that you want to
--   trigger an evaluation for the rule. If you specify a resource ID, you
--   must specify one resource type for <tt>ComplianceResourceTypes</tt>.
scope_complianceResourceId :: Lens' Scope (Maybe Text)

-- | The tag value applied to only those Amazon Web Services resources that
--   you want to trigger an evaluation for the rule. If you specify a value
--   for <tt>TagValue</tt>, you must also specify a value for
--   <tt>TagKey</tt>.
scope_tagValue :: Lens' Scope (Maybe Text)

-- | The tag key that is applied to only those Amazon Web Services
--   resources that you want to trigger an evaluation for the rule.
scope_tagKey :: Lens' Scope (Maybe Text)

-- | Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
source_sourceDetails :: Lens' Source (Maybe [SourceDetail])

-- | Indicates whether Amazon Web Services or the customer owns and manages
--   the Config rule.
source_owner :: Lens' Source Owner

-- | For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
source_sourceIdentifier :: Lens' Source Text

-- | The type of notification that triggers Config to run an evaluation for
--   a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
sourceDetail_messageType :: Lens' SourceDetail (Maybe MessageType)

-- | The frequency at which you want Config to run evaluations for a custom
--   rule with a periodic trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
sourceDetail_maximumExecutionFrequency :: Lens' SourceDetail (Maybe MaximumExecutionFrequency)

-- | The source of the event, such as an Amazon Web Services service, that
--   triggers Config to evaluate your Amazon Web Services resources.
sourceDetail_eventSource :: Lens' SourceDetail (Maybe EventSource)

-- | The maximum percentage of remediation actions allowed to run in
--   parallel on the non-compliant resources for that specific rule. You
--   can specify a percentage, such as 10%. The default value is 10.
ssmControls_concurrentExecutionRatePercentage :: Lens' SsmControls (Maybe Natural)

-- | The percentage of errors that are allowed before SSM stops running
--   automations on non-compliant resources for that specific rule. You can
--   specify a percentage of errors, for example 10%. If you do not
--   specifiy a percentage, the default is 50%. For example, if you set the
--   ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops
--   running the automations when the fifth error is received.
ssmControls_errorPercentage :: Lens' SsmControls (Maybe Natural)

-- | A list of values. For example, the ARN of the assumed role.
staticValue_values :: Lens' StaticValue [Text]

-- | Indicates deployment status for config rule in the member account.
--   When master account calls <tt>PutOrganizationConfigRule</tt> action
--   for the first time, config rule status is created in the member
--   account. When master account calls <tt>PutOrganizationConfigRule</tt>
--   action for the second time, config rule status is updated in the
--   member account. Config rule status is deleted when the master account
--   deletes <tt>OrganizationConfigRule</tt> and disables service access
--   for <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
statusDetailFilters_memberAccountRuleStatus :: Lens' StatusDetailFilters (Maybe MemberAccountRuleStatus)

-- | The 12-digit account ID of the member account within an organization.
statusDetailFilters_accountId :: Lens' StatusDetailFilters (Maybe Text)

-- | The ID of the query.
storedQuery_queryId :: Lens' StoredQuery (Maybe Text)

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQuery_queryArn :: Lens' StoredQuery (Maybe Text)

-- | The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
storedQuery_expression :: Lens' StoredQuery (Maybe Text)

-- | A unique description for the query.
storedQuery_description :: Lens' StoredQuery (Maybe Text)

-- | The name of the query.
storedQuery_queryName :: Lens' StoredQuery Text

-- | A unique description for the query.
storedQueryMetadata_description :: Lens' StoredQueryMetadata (Maybe Text)

-- | The ID of the query.
storedQueryMetadata_queryId :: Lens' StoredQueryMetadata Text

-- | Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
storedQueryMetadata_queryArn :: Lens' StoredQueryMetadata Text

-- | The name of the query.
storedQueryMetadata_queryName :: Lens' StoredQueryMetadata Text

-- | The optional part of a key-value pair that make up a tag. A value acts
--   as a descriptor within a tag category (key).
tag_value :: Lens' Tag (Maybe Text)

-- | One part of a key-value pair that make up a tag. A key is a general
--   label that acts like a category for more specific tag values.
tag_key :: Lens' Tag (Maybe Text)


module Network.AWS.Config.Waiters


-- | Derived from API version <tt>2014-11-12</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Config
--   
--   Config provides a way to keep track of the configurations of all the
--   Amazon Web Services resources associated with your Amazon Web Services
--   account. You can use Config to get the current and historical
--   configurations of each Amazon Web Services resource and also to get
--   information about the relationship between the resources. An Amazon
--   Web Services resource can be an Amazon Compute Cloud (Amazon EC2)
--   instance, an Elastic Block Store (EBS) volume, an elastic network
--   Interface (ENI), or a security group. For a complete list of resources
--   currently supported by Config, see <a>Supported Amazon Web Services
--   resources</a>.
--   
--   You can access and manage Config through the Amazon Web Services
--   Management Console, the Amazon Web Services Command Line Interface
--   (Amazon Web Services CLI), the Config API, or the Amazon Web Services
--   SDKs for Config. This reference guide contains documentation for the
--   Config API and the Amazon Web Services CLI commands that you can use
--   to manage Config. The Config API uses the Signature Version 4 protocol
--   for signing requests. For more information about how to sign a request
--   with this protocol, see <a>Signature Version 4 Signing Process</a>.
--   For detailed information about Config features and their associated
--   actions or commands, as well as how to work with Amazon Web Services
--   Management Console, see <a>What Is Config</a> in the <i>Config
--   Developer Guide</i>.
module Network.AWS.Config

-- | API version <tt>2014-11-12</tt> of the Amazon Config SDK
--   configuration.
defaultService :: Service

-- | You specified an Config rule without a remediation configuration.
_NoSuchRemediationConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified time range is not valid. The earlier time is not
--   chronologically before the later time.
_InvalidTimeRangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config organization conformance pack that you passed in the filter
--   does not exist.
--   
--   For DeleteOrganizationConformancePack, you tried to delete an
--   organization conformance pack that does not exist.
_NoSuchOrganizationConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon SNS topic does not exist.
_InvalidSNSTopicARNException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config throws an exception if the recording group does not contain a
--   valid list of resource types. Invalid values might also be incorrectly
--   formatted.
_InvalidRecordingGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The syntax of the query is incorrect.
_InvalidExpressionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Organization is no longer available.
_NoAvailableOrganizationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested action is not valid.
--   
--   For PutStoredQuery, you will see this exception if there are missing
--   required fields or if the input value fails the validation, or if you
--   are trying to create more than 300 queries.
--   
--   For GetStoredQuery, ListStoredQuery, and DeleteStoredQuery you will
--   see this exception if there are missing required fields or if the
--   input value fails the validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | For <tt>PutConfigurationAggregator</tt> API, you can see this
--   exception for the following reasons:
--   
--   <ul>
--   <li>No permission to call <tt>EnableAWSServiceAccess</tt> API</li>
--   <li>The configuration aggregator cannot be updated because your Amazon
--   Web Services Organization management account or the delegated
--   administrator role changed. Delete this aggregator and create a new
--   one with the current Amazon Web Services Organization.</li>
--   <li>The configuration aggregator is associated with a previous Amazon
--   Web Services Organization and Config cannot aggregate data with
--   current Amazon Web Services Organization. Delete this aggregator and
--   create a new one with the current Amazon Web Services
--   Organization.</li>
--   <li>You are not a registered delegated administrator for Config with
--   permissions to call <tt>ListDelegatedAdministrators</tt> API. Ensure
--   that the management account registers delagated administrator for
--   Config service principle name before the delegated administrator
--   creates an aggregator.</li>
--   </ul>
--   
--   For all <tt>OrganizationConfigRule</tt> and
--   <tt>OrganizationConformancePack</tt> APIs, Config throws an exception
--   if APIs are called from member accounts. All APIs must be called from
--   organization master account.
_OrganizationAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a configuration aggregator that does not exist.
_NoSuchConfigurationAggregatorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided a null or empty role ARN.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration item size is outside the allowable range.
_OversizedConfigurationItemException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two users are trying to modify the same query at the same time. Wait
--   for a moment and try again.
_ResourceConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot delete the delivery channel you specified because the
--   configuration recorder is running.
_LastDeliveryChannelDeleteFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a template that is not valid or supported.
_ConformancePackTemplateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You tried to delete a remediation exception that does not exist.
_NoSuchRemediationExceptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified limit is outside the allowable range.
_InvalidLimitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (6) of the number of organization
--   conformance packs in an account (6 conformance pack with 25 Config
--   rules per pack per account).
_MaxNumberOfOrganizationConformancePacksExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delivery channel name is not valid.
_InvalidDeliveryChannelNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of tags you can use. You have
--   more than 50 tags.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon KMS Key ARN is not valid.
_InvalidS3KmsKeyArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the specified parameters are invalid. Verify that your
--   parameters are valid and try again.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified <tt>ResultToken</tt> is invalid.
_InvalidResultTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config rule that you passed in the filter does not exist.
_NoSuchConfigRuleInConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You specified one or more organization config rules that do not exist.
_NoSuchOrganizationConfigRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a delivery channel that does not exist.
_NoSuchDeliveryChannelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more Config rules in the request are invalid. Verify that the
--   rule names are correct and try again.
_NoSuchConfigRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You specified one or more conformance packs that do not exist.
_NoSuchConformancePackException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a retention configuration that does not exist.
_NoSuchRetentionConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Remediation action is in progress. You can either cancel execution in
--   Amazon Web Services Systems Manager or wait and try again later.
_RemediationInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Config resource cannot be created because your organization does not
--   have all features enabled.
_OrganizationAllFeaturesNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates one of the following errors:
--   
--   <ul>
--   <li>For PutConfigRule, the rule cannot be created because the IAM role
--   assigned to Config lacks permissions to perform the config:Put*
--   action.</li>
--   <li>For PutConfigRule, the Lambda function cannot be invoked. Check
--   the function ARN, and check the function's permissions.</li>
--   <li>For PutOrganizationConfigRule, organization config rule cannot be
--   created because you do not have permissions to call IAM
--   <tt>GetRole</tt> action or create a service linked role.</li>
--   <li>For PutConformancePack and PutOrganizationConformancePack, a
--   conformance pack cannot be created because you do not have
--   permissions:<ul><li>To call IAM <tt>GetRole</tt> action or create a
--   service linked role.</li><li>To read Amazon S3 bucket.</li></ul></li>
--   </ul>
_InsufficientPermissionsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a resource that is either unknown or has not been
--   discovered.
_ResourceNotDiscoveredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified next token is invalid. Specify the <tt>nextToken</tt>
--   string that was returned in the previous response to get the next page
--   of results.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed to add the retention configuration because a retention
--   configuration with that name already exists.
_MaxNumberOfRetentionConfigurationsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (6) of the number of conformance packs in
--   an account (6 conformance pack with 25 Config rules per pack).
_MaxNumberOfConformancePacksExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed to add the Config rule because the account already contains the
--   maximum number of 150 rules. Consider deleting any deactivated rules
--   before you add new rules.
_MaxNumberOfConfigRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There are no configuration recorders available to provide the role
--   needed to describe your resources. Create a configuration recorder.
_NoAvailableConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon S3 bucket does not exist.
_NoSuchBucketException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit (100,000) of active custom resource types
--   in your account. Delete unused resources using
--   <tt>DeleteResourceConfig</tt>.
_MaxActiveResourcesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no delivery channel available to record configurations.
_NoAvailableDeliveryChannelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a template that is not valid or supported.
_OrganizationConformancePackTemplateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided a configuration recorder name that is not valid.
_InvalidConfigurationRecorderNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no configuration recorder running.
_NoRunningConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of recorders you can create.
_MaxNumberOfConfigurationRecordersExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your Amazon S3 bucket policy does not permit Config to write to it.
_InsufficientDeliveryPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of delivery channels you can
--   create.
_MaxNumberOfDeliveryChannelsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit of the number of organization config rules
--   you can create.
_MaxNumberOfOrganizationConfigRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a resource that does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a configuration recorder that does not exist.
_NoSuchConfigurationRecorderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon S3 key prefix is not valid.
_InvalidS3KeyPrefixException :: AsError a => Getting (First ServiceError) a ServiceError

-- | For <tt>StartConfigRulesEvaluation</tt> API, this exception is thrown
--   if an evaluation is in progress or if you call the
--   StartConfigRulesEvaluation API more than once per minute.
--   
--   For <tt>PutConfigurationAggregator</tt> API, this exception is thrown
--   if the number of accounts and aggregators exceeds the limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You see this exception in the following cases:
--   
--   <ul>
--   <li>For DeleteConfigRule, Config is deleting this rule. Try your
--   request again later.</li>
--   <li>For DeleteConfigRule, the rule is deleting your evaluation
--   results. Try your request again later.</li>
--   <li>For DeleteConfigRule, a remediation action is associated with the
--   rule and Config cannot delete this rule. Delete the remediation action
--   associated with the rule before deleting the rule and try your request
--   again later.</li>
--   <li>For PutConfigOrganizationRule, organization config rule deletion
--   is in progress. Try your request again later.</li>
--   <li>For DeleteOrganizationConfigRule, organization config rule
--   creation is in progress. Try your request again later.</li>
--   <li>For PutConformancePack and PutOrganizationConformancePack, a
--   conformance pack creation, update, and deletion is in progress. Try
--   your request again later.</li>
--   <li>For DeleteConformancePack, a conformance pack creation, update,
--   and deletion is in progress. Try your request again later.</li>
--   </ul>
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribePendingAggregationRequests</a> smart
--   constructor.
data DescribePendingAggregationRequests
DescribePendingAggregationRequests' :: Maybe Text -> Maybe Natural -> DescribePendingAggregationRequests

-- | Create a value of <a>DescribePendingAggregationRequests</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequests_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequests_limit</a> - The maximum number
--   of evaluation results returned on each page. The default is maximum.
--   If you specify 0, Config uses the default.
newDescribePendingAggregationRequests :: DescribePendingAggregationRequests

-- | <i>See:</i> <a>newDescribePendingAggregationRequestsResponse</a> smart
--   constructor.
data DescribePendingAggregationRequestsResponse
DescribePendingAggregationRequestsResponse' :: Maybe Text -> Maybe [PendingAggregationRequest] -> Int -> DescribePendingAggregationRequestsResponse

-- | Create a value of <a>DescribePendingAggregationRequestsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePendingAggregationRequests'</a>,
--   <a>describePendingAggregationRequestsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:pendingAggregationRequests:DescribePendingAggregationRequestsResponse'</a>,
--   <a>describePendingAggregationRequestsResponse_pendingAggregationRequests</a>
--   - Returns a PendingAggregationRequests object.
--   
--   <a>$sel:httpStatus:DescribePendingAggregationRequestsResponse'</a>,
--   <a>describePendingAggregationRequestsResponse_httpStatus</a> - The
--   response's http status code.
newDescribePendingAggregationRequestsResponse :: Int -> DescribePendingAggregationRequestsResponse

-- | <i>See:</i> <a>newDescribeRemediationExecutionStatus</a> smart
--   constructor.
data DescribeRemediationExecutionStatus
DescribeRemediationExecutionStatus' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty ResourceKey) -> Text -> DescribeRemediationExecutionStatus

-- | Create a value of <a>DescribeRemediationExecutionStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_limit</a> - The maximum number
--   of RemediationExecutionStatuses returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceKeys:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_resourceKeys</a> - A list of
--   resource keys to be processed with the current request. Each element
--   in the list consists of the resource type and resource ID.
--   
--   <a>$sel:configRuleName:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatus_configRuleName</a> - A list of
--   Config rule names.
newDescribeRemediationExecutionStatus :: Text -> DescribeRemediationExecutionStatus

-- | <i>See:</i> <a>newDescribeRemediationExecutionStatusResponse</a> smart
--   constructor.
data DescribeRemediationExecutionStatusResponse
DescribeRemediationExecutionStatusResponse' :: Maybe [RemediationExecutionStatus] -> Maybe Text -> Int -> DescribeRemediationExecutionStatusResponse

-- | Create a value of <a>DescribeRemediationExecutionStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:remediationExecutionStatuses:DescribeRemediationExecutionStatusResponse'</a>,
--   <a>describeRemediationExecutionStatusResponse_remediationExecutionStatuses</a>
--   - Returns a list of remediation execution statuses objects.
--   
--   <a>$sel:nextToken:DescribeRemediationExecutionStatus'</a>,
--   <a>describeRemediationExecutionStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeRemediationExecutionStatusResponse'</a>,
--   <a>describeRemediationExecutionStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationExecutionStatusResponse :: Int -> DescribeRemediationExecutionStatusResponse

-- | The input for the GetResourceConfigHistory action.
--   
--   <i>See:</i> <a>newGetResourceConfigHistory</a> smart constructor.
data GetResourceConfigHistory
GetResourceConfigHistory' :: Maybe ChronologicalOrder -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe POSIX -> ResourceType -> Text -> GetResourceConfigHistory

-- | Create a value of <a>GetResourceConfigHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chronologicalOrder:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_chronologicalOrder</a> - The chronological
--   order for configuration items listed. By default, the results are
--   listed in reverse chronological order.
--   
--   <a>$sel:nextToken:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_limit</a> - The maximum number of
--   configuration items returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:laterTime:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_laterTime</a> - The time stamp that
--   indicates a later time. If not specified, current time is taken.
--   
--   <a>$sel:earlierTime:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_earlierTime</a> - The time stamp that
--   indicates an earlier time. If not specified, the action returns
--   paginated results that contain configuration items that start when the
--   first configuration item was recorded.
--   
--   <a>$sel:resourceType:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_resourceType</a> - The resource type.
--   
--   <a>$sel:resourceId:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistory_resourceId</a> - The ID of the resource
--   (for example., <tt>sg-xxxxxx</tt>).
newGetResourceConfigHistory :: ResourceType -> Text -> GetResourceConfigHistory

-- | The output for the GetResourceConfigHistory action.
--   
--   <i>See:</i> <a>newGetResourceConfigHistoryResponse</a> smart
--   constructor.
data GetResourceConfigHistoryResponse
GetResourceConfigHistoryResponse' :: Maybe Text -> Maybe [ConfigurationItem] -> Int -> GetResourceConfigHistoryResponse

-- | Create a value of <a>GetResourceConfigHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetResourceConfigHistory'</a>,
--   <a>getResourceConfigHistoryResponse_nextToken</a> - The string that
--   you use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:configurationItems:GetResourceConfigHistoryResponse'</a>,
--   <a>getResourceConfigHistoryResponse_configurationItems</a> - A list
--   that contains the configuration history of one or more resources.
--   
--   <a>$sel:httpStatus:GetResourceConfigHistoryResponse'</a>,
--   <a>getResourceConfigHistoryResponse_httpStatus</a> - The response's
--   http status code.
newGetResourceConfigHistoryResponse :: Int -> GetResourceConfigHistoryResponse

-- | <i>See:</i> <a>newGetStoredQuery</a> smart constructor.
data GetStoredQuery
GetStoredQuery' :: Text -> GetStoredQuery

-- | Create a value of <a>GetStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryName:GetStoredQuery'</a>, <a>getStoredQuery_queryName</a>
--   - The name of the query.
newGetStoredQuery :: Text -> GetStoredQuery

-- | <i>See:</i> <a>newGetStoredQueryResponse</a> smart constructor.
data GetStoredQueryResponse
GetStoredQueryResponse' :: Maybe StoredQuery -> Int -> GetStoredQueryResponse

-- | Create a value of <a>GetStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storedQuery:GetStoredQueryResponse'</a>,
--   <a>getStoredQueryResponse_storedQuery</a> - Returns a
--   <tt>StoredQuery</tt> object.
--   
--   <a>$sel:httpStatus:GetStoredQueryResponse'</a>,
--   <a>getStoredQueryResponse_httpStatus</a> - The response's http status
--   code.
newGetStoredQueryResponse :: Int -> GetStoredQueryResponse

-- | <i>See:</i> <a>newGetAggregateResourceConfig</a> smart constructor.
data GetAggregateResourceConfig
GetAggregateResourceConfig' :: Text -> AggregateResourceIdentifier -> GetAggregateResourceConfig

-- | Create a value of <a>GetAggregateResourceConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationAggregatorName:GetAggregateResourceConfig'</a>,
--   <a>getAggregateResourceConfig_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
--   
--   <a>$sel:resourceIdentifier:GetAggregateResourceConfig'</a>,
--   <a>getAggregateResourceConfig_resourceIdentifier</a> - An object that
--   identifies aggregate resource.
newGetAggregateResourceConfig :: Text -> AggregateResourceIdentifier -> GetAggregateResourceConfig

-- | <i>See:</i> <a>newGetAggregateResourceConfigResponse</a> smart
--   constructor.
data GetAggregateResourceConfigResponse
GetAggregateResourceConfigResponse' :: Maybe ConfigurationItem -> Int -> GetAggregateResourceConfigResponse

-- | Create a value of <a>GetAggregateResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationItem:GetAggregateResourceConfigResponse'</a>,
--   <a>getAggregateResourceConfigResponse_configurationItem</a> - Returns
--   a <tt>ConfigurationItem</tt> object.
--   
--   <a>$sel:httpStatus:GetAggregateResourceConfigResponse'</a>,
--   <a>getAggregateResourceConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetAggregateResourceConfigResponse :: Int -> GetAggregateResourceConfigResponse

-- | <i>See:</i> <a>newDescribeConfigurationAggregators</a> smart
--   constructor.
data DescribeConfigurationAggregators
DescribeConfigurationAggregators' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeConfigurationAggregators

-- | Create a value of <a>DescribeConfigurationAggregators</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_limit</a> - The maximum number of
--   configuration aggregators returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorNames:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregators_configurationAggregatorNames</a> -
--   The name of the configuration aggregators.
newDescribeConfigurationAggregators :: DescribeConfigurationAggregators

-- | <i>See:</i> <a>newDescribeConfigurationAggregatorsResponse</a> smart
--   constructor.
data DescribeConfigurationAggregatorsResponse
DescribeConfigurationAggregatorsResponse' :: Maybe Text -> Maybe [ConfigurationAggregator] -> Int -> DescribeConfigurationAggregatorsResponse

-- | Create a value of <a>DescribeConfigurationAggregatorsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregators'</a>,
--   <a>describeConfigurationAggregatorsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:configurationAggregators:DescribeConfigurationAggregatorsResponse'</a>,
--   <a>describeConfigurationAggregatorsResponse_configurationAggregators</a>
--   - Returns a ConfigurationAggregators object.
--   
--   <a>$sel:httpStatus:DescribeConfigurationAggregatorsResponse'</a>,
--   <a>describeConfigurationAggregatorsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationAggregatorsResponse :: Int -> DescribeConfigurationAggregatorsResponse

-- | <i>See:</i> <a>newDescribeComplianceByConfigRule</a> smart
--   constructor.
data DescribeComplianceByConfigRule
DescribeComplianceByConfigRule' :: Maybe [Text] -> Maybe [ComplianceType] -> Maybe Text -> DescribeComplianceByConfigRule

-- | Create a value of <a>DescribeComplianceByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_configRuleNames</a> - Specify one or
--   more Config rule names to filter the results by rule.
--   
--   <a>$sel:complianceTypes:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   
--   <a>$sel:nextToken:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
newDescribeComplianceByConfigRule :: DescribeComplianceByConfigRule

-- | <i>See:</i> <a>newDescribeComplianceByConfigRuleResponse</a> smart
--   constructor.
data DescribeComplianceByConfigRuleResponse
DescribeComplianceByConfigRuleResponse' :: Maybe [ComplianceByConfigRule] -> Maybe Text -> Int -> DescribeComplianceByConfigRuleResponse

-- | Create a value of <a>DescribeComplianceByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceByConfigRules:DescribeComplianceByConfigRuleResponse'</a>,
--   <a>describeComplianceByConfigRuleResponse_complianceByConfigRules</a>
--   - Indicates whether each of the specified Config rules is compliant.
--   
--   <a>$sel:nextToken:DescribeComplianceByConfigRule'</a>,
--   <a>describeComplianceByConfigRuleResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeComplianceByConfigRuleResponse'</a>,
--   <a>describeComplianceByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComplianceByConfigRuleResponse :: Int -> DescribeComplianceByConfigRuleResponse

-- | <i>See:</i> <a>newDescribeRetentionConfigurations</a> smart
--   constructor.
data DescribeRetentionConfigurations
DescribeRetentionConfigurations' :: Maybe [Text] -> Maybe Text -> DescribeRetentionConfigurations

-- | Create a value of <a>DescribeRetentionConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:retentionConfigurationNames:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurations_retentionConfigurationNames</a> - A
--   list of names of retention configurations for which you want details.
--   If you do not specify a name, Config returns details for all the
--   retention configurations for that account.
--   
--   Currently, Config supports only one retention configuration per region
--   in your account.
--   
--   <a>$sel:nextToken:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurations_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
newDescribeRetentionConfigurations :: DescribeRetentionConfigurations

-- | <i>See:</i> <a>newDescribeRetentionConfigurationsResponse</a> smart
--   constructor.
data DescribeRetentionConfigurationsResponse
DescribeRetentionConfigurationsResponse' :: Maybe [RetentionConfiguration] -> Maybe Text -> Int -> DescribeRetentionConfigurationsResponse

-- | Create a value of <a>DescribeRetentionConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:retentionConfigurations:DescribeRetentionConfigurationsResponse'</a>,
--   <a>describeRetentionConfigurationsResponse_retentionConfigurations</a>
--   - Returns a retention configuration object.
--   
--   <a>$sel:nextToken:DescribeRetentionConfigurations'</a>,
--   <a>describeRetentionConfigurationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeRetentionConfigurationsResponse'</a>,
--   <a>describeRetentionConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRetentionConfigurationsResponse :: Int -> DescribeRetentionConfigurationsResponse

-- | The input for the StopConfigurationRecorder action.
--   
--   <i>See:</i> <a>newStopConfigurationRecorder</a> smart constructor.
data StopConfigurationRecorder
StopConfigurationRecorder' :: Text -> StopConfigurationRecorder

-- | Create a value of <a>StopConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:StopConfigurationRecorder'</a>,
--   <a>stopConfigurationRecorder_configurationRecorderName</a> - The name
--   of the recorder object that records each configuration change made to
--   the resources.
newStopConfigurationRecorder :: Text -> StopConfigurationRecorder

-- | <i>See:</i> <a>newStopConfigurationRecorderResponse</a> smart
--   constructor.
data StopConfigurationRecorderResponse
StopConfigurationRecorderResponse' :: StopConfigurationRecorderResponse

-- | Create a value of <a>StopConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStopConfigurationRecorderResponse :: StopConfigurationRecorderResponse

-- | <i>See:</i> <a>newGetAggregateConfigRuleComplianceSummary</a> smart
--   constructor.
data GetAggregateConfigRuleComplianceSummary
GetAggregateConfigRuleComplianceSummary' :: Maybe ConfigRuleComplianceSummaryFilters -> Maybe Text -> Maybe Natural -> Maybe ConfigRuleComplianceSummaryGroupKey -> Text -> GetAggregateConfigRuleComplianceSummary

-- | Create a value of <a>GetAggregateConfigRuleComplianceSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_filters</a> - Filters the
--   results based on the ConfigRuleComplianceSummaryFilters object.
--   
--   <a>$sel:nextToken:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is
--   1000. You cannot specify a number greater than 1000. If you specify 0,
--   Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_groupByKey</a> - Groups the
--   result based on ACCOUNT_ID or AWS_REGION.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummary_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateConfigRuleComplianceSummary :: Text -> GetAggregateConfigRuleComplianceSummary

-- | <i>See:</i> <a>newGetAggregateConfigRuleComplianceSummaryResponse</a>
--   smart constructor.
data GetAggregateConfigRuleComplianceSummaryResponse
GetAggregateConfigRuleComplianceSummaryResponse' :: Maybe [AggregateComplianceCount] -> Maybe Text -> Maybe Text -> Int -> GetAggregateConfigRuleComplianceSummaryResponse

-- | Create a value of
--   <a>GetAggregateConfigRuleComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregateComplianceCounts:GetAggregateConfigRuleComplianceSummaryResponse'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_aggregateComplianceCounts</a>
--   - Returns a list of AggregateComplianceCounts object.
--   
--   <a>$sel:nextToken:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:groupByKey:GetAggregateConfigRuleComplianceSummary'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_groupByKey</a> -
--   Groups the result based on ACCOUNT_ID or AWS_REGION.
--   
--   
--   <a>$sel:httpStatus:GetAggregateConfigRuleComplianceSummaryResponse'</a>,
--   <a>getAggregateConfigRuleComplianceSummaryResponse_httpStatus</a> -
--   The response's http status code.
newGetAggregateConfigRuleComplianceSummaryResponse :: Int -> GetAggregateConfigRuleComplianceSummaryResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The <tt>nextToken</tt> string
--   returned on a previous page that you use to get the next page of
--   results in a paginated response.
--   
--   <a>$sel:limit:ListTagsForResource'</a>,
--   <a>listTagsForResource_limit</a> - The maximum number of tags returned
--   on each page. The limit maximum is 50. You cannot specify a number
--   greater than 50. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource for which to list the tags.
--   Currently, the supported resources are <tt>ConfigRule</tt>,
--   <tt>ConfigurationAggregator</tt> and <tt>AggregatorAuthorization</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newBatchGetResourceConfig</a> smart constructor.
data BatchGetResourceConfig
BatchGetResourceConfig' :: NonEmpty ResourceKey -> BatchGetResourceConfig

-- | Create a value of <a>BatchGetResourceConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceKeys:BatchGetResourceConfig'</a>,
--   <a>batchGetResourceConfig_resourceKeys</a> - A list of resource keys
--   to be processed with the current request. Each element in the list
--   consists of the resource type and resource ID.
newBatchGetResourceConfig :: NonEmpty ResourceKey -> BatchGetResourceConfig

-- | <i>See:</i> <a>newBatchGetResourceConfigResponse</a> smart
--   constructor.
data BatchGetResourceConfigResponse
BatchGetResourceConfigResponse' :: Maybe [BaseConfigurationItem] -> Maybe (NonEmpty ResourceKey) -> Int -> BatchGetResourceConfigResponse

-- | Create a value of <a>BatchGetResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseConfigurationItems:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_baseConfigurationItems</a> - A list
--   that contains the current configuration of one or more resources.
--   
--   <a>$sel:unprocessedResourceKeys:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_unprocessedResourceKeys</a> - A list
--   of resource keys that were not processed with the current response.
--   The unprocessesResourceKeys value is in the same form as ResourceKeys,
--   so the value can be directly provided to a subsequent
--   BatchGetResourceConfig operation. If there are no unprocessed resource
--   keys, the response contains an empty unprocessedResourceKeys list.
--   
--   <a>$sel:httpStatus:BatchGetResourceConfigResponse'</a>,
--   <a>batchGetResourceConfigResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetResourceConfigResponse :: Int -> BatchGetResourceConfigResponse

-- | <i>See:</i> <a>newDescribeConfigRules</a> smart constructor.
data DescribeConfigRules
DescribeConfigRules' :: Maybe [Text] -> Maybe Text -> DescribeConfigRules

-- | Create a value of <a>DescribeConfigRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeConfigRules'</a>,
--   <a>describeConfigRules_configRuleNames</a> - The names of the Config
--   rules for which you want details. If you do not specify any names,
--   Config returns details for all your rules.
--   
--   <a>$sel:nextToken:DescribeConfigRules'</a>,
--   <a>describeConfigRules_nextToken</a> - The <tt>nextToken</tt> string
--   returned on a previous page that you use to get the next page of
--   results in a paginated response.
newDescribeConfigRules :: DescribeConfigRules

-- | <i>See:</i> <a>newDescribeConfigRulesResponse</a> smart constructor.
data DescribeConfigRulesResponse
DescribeConfigRulesResponse' :: Maybe [ConfigRule] -> Maybe Text -> Int -> DescribeConfigRulesResponse

-- | Create a value of <a>DescribeConfigRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRules:DescribeConfigRulesResponse'</a>,
--   <a>describeConfigRulesResponse_configRules</a> - The details about
--   your Config rules.
--   
--   <a>$sel:nextToken:DescribeConfigRules'</a>,
--   <a>describeConfigRulesResponse_nextToken</a> - The string that you use
--   in a subsequent request to get the next page of results in a paginated
--   response.
--   
--   <a>$sel:httpStatus:DescribeConfigRulesResponse'</a>,
--   <a>describeConfigRulesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigRulesResponse :: Int -> DescribeConfigRulesResponse

-- | <i>See:</i> <a>newPutRetentionConfiguration</a> smart constructor.
data PutRetentionConfiguration
PutRetentionConfiguration' :: Natural -> PutRetentionConfiguration

-- | Create a value of <a>PutRetentionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriodInDays:PutRetentionConfiguration'</a>,
--   <a>putRetentionConfiguration_retentionPeriodInDays</a> - Number of
--   days Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
newPutRetentionConfiguration :: Natural -> PutRetentionConfiguration

-- | <i>See:</i> <a>newPutRetentionConfigurationResponse</a> smart
--   constructor.
data PutRetentionConfigurationResponse
PutRetentionConfigurationResponse' :: Maybe RetentionConfiguration -> Int -> PutRetentionConfigurationResponse

-- | Create a value of <a>PutRetentionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionConfiguration:PutRetentionConfigurationResponse'</a>,
--   <a>putRetentionConfigurationResponse_retentionConfiguration</a> -
--   Returns a retention configuration object.
--   
--   <a>$sel:httpStatus:PutRetentionConfigurationResponse'</a>,
--   <a>putRetentionConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newPutRetentionConfigurationResponse :: Int -> PutRetentionConfigurationResponse

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConformancePacks</a>
--   smart constructor.
data DescribeAggregateComplianceByConformancePacks
DescribeAggregateComplianceByConformancePacks' :: Maybe AggregateConformancePackComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeAggregateComplianceByConformancePacks

-- | Create a value of <a>DescribeAggregateComplianceByConformancePacks</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_filters</a> - Filters
--   the result by <tt>AggregateConformancePackComplianceFilters</tt>
--   object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_limit</a> - The
--   maximum number of conformance packs compliance details returned on
--   each page. The default is maximum. If you specify 0, Config uses the
--   default.
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacks_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeAggregateComplianceByConformancePacks :: Text -> DescribeAggregateComplianceByConformancePacks

-- | <i>See:</i>
--   <a>newDescribeAggregateComplianceByConformancePacksResponse</a> smart
--   constructor.
data DescribeAggregateComplianceByConformancePacksResponse
DescribeAggregateComplianceByConformancePacksResponse' :: Maybe [AggregateComplianceByConformancePack] -> Maybe Text -> Int -> DescribeAggregateComplianceByConformancePacksResponse

-- | Create a value of
--   <a>DescribeAggregateComplianceByConformancePacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregateComplianceByConformancePacks:DescribeAggregateComplianceByConformancePacksResponse'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_aggregateComplianceByConformancePacks</a>
--   - Returns the <tt>AggregateComplianceByConformancePack</tt> object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConformancePacks'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeAggregateComplianceByConformancePacksResponse'</a>,
--   <a>describeAggregateComplianceByConformancePacksResponse_httpStatus</a>
--   - The response's http status code.
newDescribeAggregateComplianceByConformancePacksResponse :: Int -> DescribeAggregateComplianceByConformancePacksResponse

-- | <i>See:</i> <a>newGetOrganizationConformancePackDetailedStatus</a>
--   smart constructor.
data GetOrganizationConformancePackDetailedStatus
GetOrganizationConformancePackDetailedStatus' :: Maybe OrganizationResourceDetailedStatusFilters -> Maybe Text -> Maybe Natural -> Text -> GetOrganizationConformancePackDetailedStatus

-- | Create a value of <a>GetOrganizationConformancePackDetailedStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_filters</a> - An
--   <tt>OrganizationResourceDetailedStatusFilters</tt> object.
--   
--   <a>$sel:nextToken:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:limit:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_limit</a> - The
--   maximum number of <tt>OrganizationConformancePackDetailedStatuses</tt>
--   returned on each page. If you do not specify a number, Config uses the
--   default. The default is 100.
--   
--   
--   <a>$sel:organizationConformancePackName:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatus_organizationConformancePackName</a>
--   - The name of organization conformance pack for which you want status
--   details for member accounts.
newGetOrganizationConformancePackDetailedStatus :: Text -> GetOrganizationConformancePackDetailedStatus

-- | <i>See:</i>
--   <a>newGetOrganizationConformancePackDetailedStatusResponse</a> smart
--   constructor.
data GetOrganizationConformancePackDetailedStatusResponse
GetOrganizationConformancePackDetailedStatusResponse' :: Maybe [OrganizationConformancePackDetailedStatus] -> Maybe Text -> Int -> GetOrganizationConformancePackDetailedStatusResponse

-- | Create a value of
--   <a>GetOrganizationConformancePackDetailedStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackDetailedStatuses:GetOrganizationConformancePackDetailedStatusResponse'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_organizationConformancePackDetailedStatuses</a>
--   - A list of <tt>OrganizationConformancePackDetailedStatus</tt>
--   objects.
--   
--   <a>$sel:nextToken:GetOrganizationConformancePackDetailedStatus'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_nextToken</a>
--   - The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:GetOrganizationConformancePackDetailedStatusResponse'</a>,
--   <a>getOrganizationConformancePackDetailedStatusResponse_httpStatus</a>
--   - The response's http status code.
newGetOrganizationConformancePackDetailedStatusResponse :: Int -> GetOrganizationConformancePackDetailedStatusResponse

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConfigRules</a> smart
--   constructor.
data DescribeAggregateComplianceByConfigRules
DescribeAggregateComplianceByConfigRules' :: Maybe ConfigRuleComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeAggregateComplianceByConfigRules

-- | Create a value of <a>DescribeAggregateComplianceByConfigRules</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_filters</a> - Filters the
--   results by ConfigRuleComplianceFilters object.
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRules_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeAggregateComplianceByConfigRules :: Text -> DescribeAggregateComplianceByConfigRules

-- | <i>See:</i> <a>newDescribeAggregateComplianceByConfigRulesResponse</a>
--   smart constructor.
data DescribeAggregateComplianceByConfigRulesResponse
DescribeAggregateComplianceByConfigRulesResponse' :: Maybe Text -> Maybe [AggregateComplianceByConfigRule] -> Int -> DescribeAggregateComplianceByConfigRulesResponse

-- | Create a value of
--   <a>DescribeAggregateComplianceByConfigRulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAggregateComplianceByConfigRules'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_nextToken</a> -
--   The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateComplianceByConfigRules:DescribeAggregateComplianceByConfigRulesResponse'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_aggregateComplianceByConfigRules</a>
--   - Returns a list of AggregateComplianceByConfigRule object.
--   
--   
--   <a>$sel:httpStatus:DescribeAggregateComplianceByConfigRulesResponse'</a>,
--   <a>describeAggregateComplianceByConfigRulesResponse_httpStatus</a> -
--   The response's http status code.
newDescribeAggregateComplianceByConfigRulesResponse :: Int -> DescribeAggregateComplianceByConfigRulesResponse

-- | <i>See:</i> <a>newDeleteEvaluationResults</a> smart constructor.
data DeleteEvaluationResults
DeleteEvaluationResults' :: Text -> DeleteEvaluationResults

-- | Create a value of <a>DeleteEvaluationResults</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteEvaluationResults'</a>,
--   <a>deleteEvaluationResults_configRuleName</a> - The name of the Config
--   rule for which you want to delete the evaluation results.
newDeleteEvaluationResults :: Text -> DeleteEvaluationResults

-- | The output when you delete the evaluation results for the specified
--   Config rule.
--   
--   <i>See:</i> <a>newDeleteEvaluationResultsResponse</a> smart
--   constructor.
data DeleteEvaluationResultsResponse
DeleteEvaluationResultsResponse' :: Int -> DeleteEvaluationResultsResponse

-- | Create a value of <a>DeleteEvaluationResultsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteEvaluationResultsResponse'</a>,
--   <a>deleteEvaluationResultsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteEvaluationResultsResponse :: Int -> DeleteEvaluationResultsResponse

-- | <i>See:</i> <a>newPutConfigRule</a> smart constructor.
data PutConfigRule
PutConfigRule' :: Maybe [Tag] -> ConfigRule -> PutConfigRule

-- | Create a value of <a>PutConfigRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutConfigRule'</a>, <a>putConfigRule_tags</a> - An array
--   of tag object.
--   
--   <a>$sel:configRule:PutConfigRule'</a>, <a>putConfigRule_configRule</a>
--   - The rule that you want to add to your account.
newPutConfigRule :: ConfigRule -> PutConfigRule

-- | <i>See:</i> <a>newPutConfigRuleResponse</a> smart constructor.
data PutConfigRuleResponse
PutConfigRuleResponse' :: PutConfigRuleResponse

-- | Create a value of <a>PutConfigRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutConfigRuleResponse :: PutConfigRuleResponse

-- | <i>See:</i> <a>newGetConformancePackComplianceDetails</a> smart
--   constructor.
data GetConformancePackComplianceDetails
GetConformancePackComplianceDetails' :: Maybe ConformancePackEvaluationFilters -> Maybe Text -> Maybe Natural -> Text -> GetConformancePackComplianceDetails

-- | Create a value of <a>GetConformancePackComplianceDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_filters</a> - A
--   <tt>ConformancePackEvaluationFilters</tt> object.
--   
--   <a>$sel:nextToken:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_limit</a> - The maximum number
--   of evaluation results returned on each page. If you do no specify a
--   number, Config uses the default. The default is 100.
--   
--   <a>$sel:conformancePackName:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetails_conformancePackName</a> - Name
--   of the conformance pack.
newGetConformancePackComplianceDetails :: Text -> GetConformancePackComplianceDetails

-- | <i>See:</i> <a>newGetConformancePackComplianceDetailsResponse</a>
--   smart constructor.
data GetConformancePackComplianceDetailsResponse
GetConformancePackComplianceDetailsResponse' :: Maybe Text -> Maybe [ConformancePackEvaluationResult] -> Int -> Text -> GetConformancePackComplianceDetailsResponse

-- | Create a value of <a>GetConformancePackComplianceDetailsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetailsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   
--   <a>$sel:conformancePackRuleEvaluationResults:GetConformancePackComplianceDetailsResponse'</a>,
--   <a>getConformancePackComplianceDetailsResponse_conformancePackRuleEvaluationResults</a>
--   - Returns a list of <tt>ConformancePackEvaluationResult</tt> objects.
--   
--   <a>$sel:httpStatus:GetConformancePackComplianceDetailsResponse'</a>,
--   <a>getConformancePackComplianceDetailsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:conformancePackName:GetConformancePackComplianceDetails'</a>,
--   <a>getConformancePackComplianceDetailsResponse_conformancePackName</a>
--   - Name of the conformance pack.
newGetConformancePackComplianceDetailsResponse :: Int -> Text -> GetConformancePackComplianceDetailsResponse

-- | <i>See:</i> <a>newDeleteConfigRule</a> smart constructor.
data DeleteConfigRule
DeleteConfigRule' :: Text -> DeleteConfigRule

-- | Create a value of <a>DeleteConfigRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteConfigRule'</a>,
--   <a>deleteConfigRule_configRuleName</a> - The name of the Config rule
--   that you want to delete.
newDeleteConfigRule :: Text -> DeleteConfigRule

-- | <i>See:</i> <a>newDeleteConfigRuleResponse</a> smart constructor.
data DeleteConfigRuleResponse
DeleteConfigRuleResponse' :: DeleteConfigRuleResponse

-- | Create a value of <a>DeleteConfigRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigRuleResponse :: DeleteConfigRuleResponse

-- | <i>See:</i> <a>newDeleteRetentionConfiguration</a> smart constructor.
data DeleteRetentionConfiguration
DeleteRetentionConfiguration' :: Text -> DeleteRetentionConfiguration

-- | Create a value of <a>DeleteRetentionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionConfigurationName:DeleteRetentionConfiguration'</a>,
--   <a>deleteRetentionConfiguration_retentionConfigurationName</a> - The
--   name of the retention configuration to delete.
newDeleteRetentionConfiguration :: Text -> DeleteRetentionConfiguration

-- | <i>See:</i> <a>newDeleteRetentionConfigurationResponse</a> smart
--   constructor.
data DeleteRetentionConfigurationResponse
DeleteRetentionConfigurationResponse' :: DeleteRetentionConfigurationResponse

-- | Create a value of <a>DeleteRetentionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRetentionConfigurationResponse :: DeleteRetentionConfigurationResponse

-- | <i>See:</i> <a>newListStoredQueries</a> smart constructor.
data ListStoredQueries
ListStoredQueries' :: Maybe Text -> Maybe Natural -> ListStoredQueries

-- | Create a value of <a>ListStoredQueries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStoredQueries'</a>,
--   <a>listStoredQueries_nextToken</a> - The nextToken string returned in
--   a previous request that you use to request the next page of results in
--   a paginated response.
--   
--   <a>$sel:maxResults:ListStoredQueries'</a>,
--   <a>listStoredQueries_maxResults</a> - The maximum number of results to
--   be returned with a single call.
newListStoredQueries :: ListStoredQueries

-- | <i>See:</i> <a>newListStoredQueriesResponse</a> smart constructor.
data ListStoredQueriesResponse
ListStoredQueriesResponse' :: Maybe [StoredQueryMetadata] -> Maybe Text -> Int -> ListStoredQueriesResponse

-- | Create a value of <a>ListStoredQueriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storedQueryMetadata:ListStoredQueriesResponse'</a>,
--   <a>listStoredQueriesResponse_storedQueryMetadata</a> - A list of
--   <tt>StoredQueryMetadata</tt> objects.
--   
--   <a>$sel:nextToken:ListStoredQueries'</a>,
--   <a>listStoredQueriesResponse_nextToken</a> - If the previous paginated
--   request didn't return all of the remaining results, the response
--   object's <tt>NextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call this action again and assign
--   that token to the request object's <tt>NextToken</tt> parameter. If
--   there are no remaining results, the previous response object's
--   <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:httpStatus:ListStoredQueriesResponse'</a>,
--   <a>listStoredQueriesResponse_httpStatus</a> - The response's http
--   status code.
newListStoredQueriesResponse :: Int -> ListStoredQueriesResponse

-- | <i>See:</i> <a>newSelectResourceConfig</a> smart constructor.
data SelectResourceConfig
SelectResourceConfig' :: Maybe Text -> Maybe Natural -> Text -> SelectResourceConfig

-- | Create a value of <a>SelectResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_nextToken</a> - The <tt>nextToken</tt> string
--   returned in a previous request that you use to request the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_limit</a> - The maximum number of query
--   results returned on each page.
--   
--   <a>$sel:expression:SelectResourceConfig'</a>,
--   <a>selectResourceConfig_expression</a> - The SQL query <tt>SELECT</tt>
--   command.
newSelectResourceConfig :: Text -> SelectResourceConfig

-- | <i>See:</i> <a>newSelectResourceConfigResponse</a> smart constructor.
data SelectResourceConfigResponse
SelectResourceConfigResponse' :: Maybe [Text] -> Maybe QueryInfo -> Maybe Text -> Int -> SelectResourceConfigResponse

-- | Create a value of <a>SelectResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:results:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_results</a> - Returns the results for
--   the SQL query.
--   
--   <a>$sel:queryInfo:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_queryInfo</a> - Returns the
--   <tt>QueryInfo</tt> object.
--   
--   <a>$sel:nextToken:SelectResourceConfig'</a>,
--   <a>selectResourceConfigResponse_nextToken</a> - The <tt>nextToken</tt>
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:httpStatus:SelectResourceConfigResponse'</a>,
--   <a>selectResourceConfigResponse_httpStatus</a> - The response's http
--   status code.
newSelectResourceConfigResponse :: Int -> SelectResourceConfigResponse

-- | <i>See:</i> <a>newListAggregateDiscoveredResources</a> smart
--   constructor.
data ListAggregateDiscoveredResources
ListAggregateDiscoveredResources' :: Maybe ResourceFilters -> Maybe Text -> Maybe Natural -> Text -> ResourceType -> ListAggregateDiscoveredResources

-- | Create a value of <a>ListAggregateDiscoveredResources</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_filters</a> - Filters the results
--   based on the <tt>ResourceFilters</tt> object.
--   
--   <a>$sel:nextToken:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_limit</a> - The maximum number of
--   resource identifiers returned on each page. You cannot specify a
--   number greater than 100. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:configurationAggregatorName:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_configurationAggregatorName</a> -
--   The name of the configuration aggregator.
--   
--   <a>$sel:resourceType:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResources_resourceType</a> - The type of
--   resources that you want Config to list in the response.
newListAggregateDiscoveredResources :: Text -> ResourceType -> ListAggregateDiscoveredResources

-- | <i>See:</i> <a>newListAggregateDiscoveredResourcesResponse</a> smart
--   constructor.
data ListAggregateDiscoveredResourcesResponse
ListAggregateDiscoveredResourcesResponse' :: Maybe Text -> Maybe [AggregateResourceIdentifier] -> Int -> ListAggregateDiscoveredResourcesResponse

-- | Create a value of <a>ListAggregateDiscoveredResourcesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAggregateDiscoveredResources'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:resourceIdentifiers:ListAggregateDiscoveredResourcesResponse'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_resourceIdentifiers</a> -
--   Returns a list of <tt>ResourceIdentifiers</tt> objects.
--   
--   <a>$sel:httpStatus:ListAggregateDiscoveredResourcesResponse'</a>,
--   <a>listAggregateDiscoveredResourcesResponse_httpStatus</a> - The
--   response's http status code.
newListAggregateDiscoveredResourcesResponse :: Int -> ListAggregateDiscoveredResourcesResponse

-- | <i>See:</i> <a>newDescribeOrganizationConfigRuleStatuses</a> smart
--   constructor.
data DescribeOrganizationConfigRuleStatuses
DescribeOrganizationConfigRuleStatuses' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeOrganizationConfigRuleStatuses

-- | Create a value of <a>DescribeOrganizationConfigRuleStatuses</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleNames:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_organizationConfigRuleNames</a>
--   - The names of organization config rules for which you want status
--   details. If you do not specify any names, Config returns details for
--   all your organization Config rules.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatuses_limit</a> - The maximum
--   number of <tt>OrganizationConfigRuleStatuses</tt> returned on each
--   page. If you do no specify a number, Config uses the default. The
--   default is 100.
newDescribeOrganizationConfigRuleStatuses :: DescribeOrganizationConfigRuleStatuses

-- | <i>See:</i> <a>newDescribeOrganizationConfigRuleStatusesResponse</a>
--   smart constructor.
data DescribeOrganizationConfigRuleStatusesResponse
DescribeOrganizationConfigRuleStatusesResponse' :: Maybe Text -> Maybe [OrganizationConfigRuleStatus] -> Int -> DescribeOrganizationConfigRuleStatusesResponse

-- | Create a value of
--   <a>DescribeOrganizationConfigRuleStatusesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRuleStatuses'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:organizationConfigRuleStatuses:DescribeOrganizationConfigRuleStatusesResponse'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_organizationConfigRuleStatuses</a>
--   - A list of <tt>OrganizationConfigRuleStatus</tt> objects.
--   
--   
--   <a>$sel:httpStatus:DescribeOrganizationConfigRuleStatusesResponse'</a>,
--   <a>describeOrganizationConfigRuleStatusesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConfigRuleStatusesResponse :: Int -> DescribeOrganizationConfigRuleStatusesResponse

-- | <i>See:</i> <a>newDescribeOrganizationConformancePackStatuses</a>
--   smart constructor.
data DescribeOrganizationConformancePackStatuses
DescribeOrganizationConformancePackStatuses' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeOrganizationConformancePackStatuses

-- | Create a value of <a>DescribeOrganizationConformancePackStatuses</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_limit</a> - The maximum
--   number of OrganizationConformancePackStatuses returned on each page.
--   If you do no specify a number, Config uses the default. The default is
--   100.
--   
--   
--   <a>$sel:organizationConformancePackNames:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatuses_organizationConformancePackNames</a>
--   - The names of organization conformance packs for which you want
--   status details. If you do not specify any names, Config returns
--   details for all your organization conformance packs.
newDescribeOrganizationConformancePackStatuses :: DescribeOrganizationConformancePackStatuses

-- | <i>See:</i>
--   <a>newDescribeOrganizationConformancePackStatusesResponse</a> smart
--   constructor.
data DescribeOrganizationConformancePackStatusesResponse
DescribeOrganizationConformancePackStatusesResponse' :: Maybe [OrganizationConformancePackStatus] -> Maybe Text -> Int -> DescribeOrganizationConformancePackStatusesResponse

-- | Create a value of
--   <a>DescribeOrganizationConformancePackStatusesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackStatuses:DescribeOrganizationConformancePackStatusesResponse'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_organizationConformancePackStatuses</a>
--   - A list of <tt>OrganizationConformancePackStatus</tt> objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePackStatuses'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_nextToken</a> -
--   The nextToken string returned on a previous page that you use to get
--   the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeOrganizationConformancePackStatusesResponse'</a>,
--   <a>describeOrganizationConformancePackStatusesResponse_httpStatus</a>
--   - The response's http status code.
newDescribeOrganizationConformancePackStatusesResponse :: Int -> DescribeOrganizationConformancePackStatusesResponse

-- | <i>See:</i> <a>newGetComplianceDetailsByResource</a> smart
--   constructor.
data GetComplianceDetailsByResource
GetComplianceDetailsByResource' :: Maybe [ComplianceType] -> Maybe Text -> Text -> Text -> GetComplianceDetailsByResource

-- | Create a value of <a>GetComplianceDetailsByResource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceTypes:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:resourceType:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_resourceType</a> - The type of the
--   Amazon Web Services resource for which you want compliance
--   information.
--   
--   <a>$sel:resourceId:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResource_resourceId</a> - The ID of the
--   Amazon Web Services resource for which you want compliance
--   information.
newGetComplianceDetailsByResource :: Text -> Text -> GetComplianceDetailsByResource

-- | <i>See:</i> <a>newGetComplianceDetailsByResourceResponse</a> smart
--   constructor.
data GetComplianceDetailsByResourceResponse
GetComplianceDetailsByResourceResponse' :: Maybe [EvaluationResult] -> Maybe Text -> Int -> GetComplianceDetailsByResourceResponse

-- | Create a value of <a>GetComplianceDetailsByResourceResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResults:GetComplianceDetailsByResourceResponse'</a>,
--   <a>getComplianceDetailsByResourceResponse_evaluationResults</a> -
--   Indicates whether the specified Amazon Web Services resource complies
--   each Config rule.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByResource'</a>,
--   <a>getComplianceDetailsByResourceResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:GetComplianceDetailsByResourceResponse'</a>,
--   <a>getComplianceDetailsByResourceResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceDetailsByResourceResponse :: Int -> GetComplianceDetailsByResourceResponse

-- | <i>See:</i> <a>newDeletePendingAggregationRequest</a> smart
--   constructor.
data DeletePendingAggregationRequest
DeletePendingAggregationRequest' :: Text -> Text -> DeletePendingAggregationRequest

-- | Create a value of <a>DeletePendingAggregationRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requesterAccountId:DeletePendingAggregationRequest'</a>,
--   <a>deletePendingAggregationRequest_requesterAccountId</a> - The
--   12-digit account ID of the account requesting to aggregate data.
--   
--   <a>$sel:requesterAwsRegion:DeletePendingAggregationRequest'</a>,
--   <a>deletePendingAggregationRequest_requesterAwsRegion</a> - The region
--   requesting to aggregate data.
newDeletePendingAggregationRequest :: Text -> Text -> DeletePendingAggregationRequest

-- | <i>See:</i> <a>newDeletePendingAggregationRequestResponse</a> smart
--   constructor.
data DeletePendingAggregationRequestResponse
DeletePendingAggregationRequestResponse' :: DeletePendingAggregationRequestResponse

-- | Create a value of <a>DeletePendingAggregationRequestResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePendingAggregationRequestResponse :: DeletePendingAggregationRequestResponse

-- | The input for the DeliverConfigSnapshot action.
--   
--   <i>See:</i> <a>newDeliverConfigSnapshot</a> smart constructor.
data DeliverConfigSnapshot
DeliverConfigSnapshot' :: Text -> DeliverConfigSnapshot

-- | Create a value of <a>DeliverConfigSnapshot</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelName:DeliverConfigSnapshot'</a>,
--   <a>deliverConfigSnapshot_deliveryChannelName</a> - The name of the
--   delivery channel through which the snapshot is delivered.
newDeliverConfigSnapshot :: Text -> DeliverConfigSnapshot

-- | The output for the DeliverConfigSnapshot action, in JSON format.
--   
--   <i>See:</i> <a>newDeliverConfigSnapshotResponse</a> smart constructor.
data DeliverConfigSnapshotResponse
DeliverConfigSnapshotResponse' :: Maybe Text -> Int -> DeliverConfigSnapshotResponse

-- | Create a value of <a>DeliverConfigSnapshotResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configSnapshotId:DeliverConfigSnapshotResponse'</a>,
--   <a>deliverConfigSnapshotResponse_configSnapshotId</a> - The ID of the
--   snapshot that is being created.
--   
--   <a>$sel:httpStatus:DeliverConfigSnapshotResponse'</a>,
--   <a>deliverConfigSnapshotResponse_httpStatus</a> - The response's http
--   status code.
newDeliverConfigSnapshotResponse :: Int -> DeliverConfigSnapshotResponse

-- | <i>See:</i> <a>newBatchGetAggregateResourceConfig</a> smart
--   constructor.
data BatchGetAggregateResourceConfig
BatchGetAggregateResourceConfig' :: Text -> NonEmpty AggregateResourceIdentifier -> BatchGetAggregateResourceConfig

-- | Create a value of <a>BatchGetAggregateResourceConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregatorName:BatchGetAggregateResourceConfig'</a>,
--   <a>batchGetAggregateResourceConfig_configurationAggregatorName</a> -
--   The name of the configuration aggregator.
--   
--   <a>$sel:resourceIdentifiers:BatchGetAggregateResourceConfig'</a>,
--   <a>batchGetAggregateResourceConfig_resourceIdentifiers</a> - A list of
--   aggregate ResourceIdentifiers objects.
newBatchGetAggregateResourceConfig :: Text -> NonEmpty AggregateResourceIdentifier -> BatchGetAggregateResourceConfig

-- | <i>See:</i> <a>newBatchGetAggregateResourceConfigResponse</a> smart
--   constructor.
data BatchGetAggregateResourceConfigResponse
BatchGetAggregateResourceConfigResponse' :: Maybe [BaseConfigurationItem] -> Maybe [AggregateResourceIdentifier] -> Int -> BatchGetAggregateResourceConfigResponse

-- | Create a value of <a>BatchGetAggregateResourceConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:baseConfigurationItems:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_baseConfigurationItems</a>
--   - A list that contains the current configuration of one or more
--   resources.
--   
--   
--   <a>$sel:unprocessedResourceIdentifiers:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_unprocessedResourceIdentifiers</a>
--   - A list of resource identifiers that were not processed with current
--   scope. The list is empty if all the resources are processed.
--   
--   <a>$sel:httpStatus:BatchGetAggregateResourceConfigResponse'</a>,
--   <a>batchGetAggregateResourceConfigResponse_httpStatus</a> - The
--   response's http status code.
newBatchGetAggregateResourceConfigResponse :: Int -> BatchGetAggregateResourceConfigResponse

-- | <i>See:</i> <a>newDescribeConfigRuleEvaluationStatus</a> smart
--   constructor.
data DescribeConfigRuleEvaluationStatus
DescribeConfigRuleEvaluationStatus' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConfigRuleEvaluationStatus

-- | Create a value of <a>DescribeConfigRuleEvaluationStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_configRuleNames</a> - The name
--   of the Config managed rules for which you want status information. If
--   you do not specify any names, Config returns status information for
--   all Config managed rules that you use.
--   
--   <a>$sel:nextToken:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatus_limit</a> - The number of rule
--   evaluation results that you want returned.
--   
--   This parameter is required if the rule limit for your account is more
--   than the default of 150 rules.
--   
--   For information about requesting a rule limit increase, see <a>Config
--   Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.
newDescribeConfigRuleEvaluationStatus :: DescribeConfigRuleEvaluationStatus

-- | <i>See:</i> <a>newDescribeConfigRuleEvaluationStatusResponse</a> smart
--   constructor.
data DescribeConfigRuleEvaluationStatusResponse
DescribeConfigRuleEvaluationStatusResponse' :: Maybe [ConfigRuleEvaluationStatus] -> Maybe Text -> Int -> DescribeConfigRuleEvaluationStatusResponse

-- | Create a value of <a>DescribeConfigRuleEvaluationStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configRulesEvaluationStatus:DescribeConfigRuleEvaluationStatusResponse'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_configRulesEvaluationStatus</a>
--   - Status information about your Config managed rules.
--   
--   <a>$sel:nextToken:DescribeConfigRuleEvaluationStatus'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_nextToken</a> - The
--   string that you use in a subsequent request to get the next page of
--   results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConfigRuleEvaluationStatusResponse'</a>,
--   <a>describeConfigRuleEvaluationStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigRuleEvaluationStatusResponse :: Int -> DescribeConfigRuleEvaluationStatusResponse

-- | <i>See:</i> <a>newGetDiscoveredResourceCounts</a> smart constructor.
data GetDiscoveredResourceCounts
GetDiscoveredResourceCounts' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> GetDiscoveredResourceCounts

-- | Create a value of <a>GetDiscoveredResourceCounts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_limit</a> - The maximum number of
--   ResourceCount objects returned on each page. The default is 100. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:resourceTypes:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCounts_resourceTypes</a> - The comma-separated
--   list that specifies the resource types that you want Config to return
--   (for example, <tt>"AWS::EC2::Instance"</tt>,
--   <tt>"AWS::IAM::User"</tt>).
--   
--   If a value for <tt>resourceTypes</tt> is not specified, Config returns
--   all resource types that Config is recording in the region for your
--   account.
--   
--   If the configuration recorder is turned off, Config returns an empty
--   list of ResourceCount objects. If the configuration recorder is not
--   recording a specific resource type (for example, S3 buckets), that
--   resource type is not returned in the list of ResourceCount objects.
newGetDiscoveredResourceCounts :: GetDiscoveredResourceCounts

-- | <i>See:</i> <a>newGetDiscoveredResourceCountsResponse</a> smart
--   constructor.
data GetDiscoveredResourceCountsResponse
GetDiscoveredResourceCountsResponse' :: Maybe Integer -> Maybe Text -> Maybe [ResourceCount] -> Int -> GetDiscoveredResourceCountsResponse

-- | Create a value of <a>GetDiscoveredResourceCountsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:totalDiscoveredResources:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_totalDiscoveredResources</a> -
--   The total number of resources that Config is recording in the region
--   for your account. If you specify resource types in the request, Config
--   returns only the total number of resources for those resource types.
--   
--   <b>Example</b>
--   
--   <ol>
--   <li>Config is recording three resource types in the US East (Ohio)
--   Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3
--   buckets, for a total of 60 resources.</li>
--   <li>You make a call to the <tt>GetDiscoveredResourceCounts</tt> action
--   and specify the resource type, <tt>"AWS::EC2::Instances"</tt>, in the
--   request.</li>
--   <li>Config returns 25 for <tt>totalDiscoveredResources</tt>.</li>
--   </ol>
--   
--   <a>$sel:nextToken:GetDiscoveredResourceCounts'</a>,
--   <a>getDiscoveredResourceCountsResponse_nextToken</a> - The string that
--   you use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:resourceCounts:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_resourceCounts</a> - The list
--   of <tt>ResourceCount</tt> objects. Each object is listed in descending
--   order by the number of resources.
--   
--   <a>$sel:httpStatus:GetDiscoveredResourceCountsResponse'</a>,
--   <a>getDiscoveredResourceCountsResponse_httpStatus</a> - The response's
--   http status code.
newGetDiscoveredResourceCountsResponse :: Int -> GetDiscoveredResourceCountsResponse

-- | <i>See:</i> <a>newDescribeRemediationExceptions</a> smart constructor.
data DescribeRemediationExceptions
DescribeRemediationExceptions' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty RemediationExceptionResourceKey) -> Text -> DescribeRemediationExceptions

-- | Create a value of <a>DescribeRemediationExceptions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_limit</a> - The maximum number of
--   RemediationExceptionResourceKey returned on each page. The default is
--   25. If you specify 0, Config uses the default.
--   
--   <a>$sel:resourceKeys:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_resourceKeys</a> - An exception list
--   of resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
--   
--   <a>$sel:configRuleName:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptions_configRuleName</a> - The name of the
--   Config rule.
newDescribeRemediationExceptions :: Text -> DescribeRemediationExceptions

-- | <i>See:</i> <a>newDescribeRemediationExceptionsResponse</a> smart
--   constructor.
data DescribeRemediationExceptionsResponse
DescribeRemediationExceptionsResponse' :: Maybe Text -> Maybe [RemediationException] -> Int -> DescribeRemediationExceptionsResponse

-- | Create a value of <a>DescribeRemediationExceptionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRemediationExceptions'</a>,
--   <a>describeRemediationExceptionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   
--   <a>$sel:remediationExceptions:DescribeRemediationExceptionsResponse'</a>,
--   <a>describeRemediationExceptionsResponse_remediationExceptions</a> -
--   Returns a list of remediation exception objects.
--   
--   <a>$sel:httpStatus:DescribeRemediationExceptionsResponse'</a>,
--   <a>describeRemediationExceptionsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationExceptionsResponse :: Int -> DescribeRemediationExceptionsResponse

-- | <i>See:</i> <a>newDeleteOrganizationConformancePack</a> smart
--   constructor.
data DeleteOrganizationConformancePack
DeleteOrganizationConformancePack' :: Text -> DeleteOrganizationConformancePack

-- | Create a value of <a>DeleteOrganizationConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackName:DeleteOrganizationConformancePack'</a>,
--   <a>deleteOrganizationConformancePack_organizationConformancePackName</a>
--   - The name of organization conformance pack that you want to delete.
newDeleteOrganizationConformancePack :: Text -> DeleteOrganizationConformancePack

-- | <i>See:</i> <a>newDeleteOrganizationConformancePackResponse</a> smart
--   constructor.
data DeleteOrganizationConformancePackResponse
DeleteOrganizationConformancePackResponse' :: DeleteOrganizationConformancePackResponse

-- | Create a value of <a>DeleteOrganizationConformancePackResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteOrganizationConformancePackResponse :: DeleteOrganizationConformancePackResponse

-- | <i>See:</i> <a>newPutOrganizationConfigRule</a> smart constructor.
data PutOrganizationConfigRule
PutOrganizationConfigRule' :: Maybe OrganizationManagedRuleMetadata -> Maybe [Text] -> Maybe OrganizationCustomRuleMetadata -> Text -> PutOrganizationConfigRule

-- | Create a value of <a>PutOrganizationConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationManagedRuleMetadata:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationManagedRuleMetadata</a> - An
--   <tt>OrganizationManagedRuleMetadata</tt> object.
--   
--   <a>$sel:excludedAccounts:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_excludedAccounts</a> - A comma-separated
--   list of accounts that you want to exclude from an organization config
--   rule.
--   
--   <a>$sel:organizationCustomRuleMetadata:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationCustomRuleMetadata</a> - An
--   <tt>OrganizationCustomRuleMetadata</tt> object.
--   
--   <a>$sel:organizationConfigRuleName:PutOrganizationConfigRule'</a>,
--   <a>putOrganizationConfigRule_organizationConfigRuleName</a> - The name
--   that you assign to an organization config rule.
newPutOrganizationConfigRule :: Text -> PutOrganizationConfigRule

-- | <i>See:</i> <a>newPutOrganizationConfigRuleResponse</a> smart
--   constructor.
data PutOrganizationConfigRuleResponse
PutOrganizationConfigRuleResponse' :: Maybe Text -> Int -> PutOrganizationConfigRuleResponse

-- | Create a value of <a>PutOrganizationConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleArn:PutOrganizationConfigRuleResponse'</a>,
--   <a>putOrganizationConfigRuleResponse_organizationConfigRuleArn</a> -
--   The Amazon Resource Name (ARN) of an organization config rule.
--   
--   <a>$sel:httpStatus:PutOrganizationConfigRuleResponse'</a>,
--   <a>putOrganizationConfigRuleResponse_httpStatus</a> - The response's
--   http status code.
newPutOrganizationConfigRuleResponse :: Int -> PutOrganizationConfigRuleResponse

-- | <i>See:</i> <a>newPutOrganizationConformancePack</a> smart
--   constructor.
data PutOrganizationConformancePack
PutOrganizationConformancePack' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe [Text] -> Maybe Text -> Text -> PutOrganizationConformancePack

-- | Create a value of <a>PutOrganizationConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_deliveryS3Bucket</a> - The name of
--   the Amazon S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional. If used, it must be prefixed with
--   <tt>awsconfigconforms</tt>.
--   
--   <a>$sel:deliveryS3KeyPrefix:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_deliveryS3KeyPrefix</a> - The prefix
--   for the Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:templateS3Uri:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_templateS3Uri</a> - Location of file
--   containing the template body. The uri must point to the conformance
--   pack template (max size: 300 KB).
--   
--   You must have access to read Amazon S3 bucket.
--   
--   
--   <a>$sel:conformancePackInputParameters:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_conformancePackInputParameters</a> -
--   A list of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:excludedAccounts:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_excludedAccounts</a> - A list of
--   Amazon Web Services accounts to be excluded from an organization
--   conformance pack while deploying a conformance pack.
--   
--   <a>$sel:templateBody:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_templateBody</a> - A string
--   containing full conformance pack template body. Structure containing
--   the template body with a minimum length of 1 byte and a maximum length
--   of 51,200 bytes.
--   
--   
--   <a>$sel:organizationConformancePackName:PutOrganizationConformancePack'</a>,
--   <a>putOrganizationConformancePack_organizationConformancePackName</a>
--   - Name of the organization conformance pack you want to create.
newPutOrganizationConformancePack :: Text -> PutOrganizationConformancePack

-- | <i>See:</i> <a>newPutOrganizationConformancePackResponse</a> smart
--   constructor.
data PutOrganizationConformancePackResponse
PutOrganizationConformancePackResponse' :: Maybe Text -> Int -> PutOrganizationConformancePackResponse

-- | Create a value of <a>PutOrganizationConformancePackResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePackArn:PutOrganizationConformancePackResponse'</a>,
--   <a>putOrganizationConformancePackResponse_organizationConformancePackArn</a>
--   - ARN of the organization conformance pack.
--   
--   <a>$sel:httpStatus:PutOrganizationConformancePackResponse'</a>,
--   <a>putOrganizationConformancePackResponse_httpStatus</a> - The
--   response's http status code.
newPutOrganizationConformancePackResponse :: Int -> PutOrganizationConformancePackResponse

-- | <i>See:</i> <a>newDeleteOrganizationConfigRule</a> smart constructor.
data DeleteOrganizationConfigRule
DeleteOrganizationConfigRule' :: Text -> DeleteOrganizationConfigRule

-- | Create a value of <a>DeleteOrganizationConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationConfigRuleName:DeleteOrganizationConfigRule'</a>,
--   <a>deleteOrganizationConfigRule_organizationConfigRuleName</a> - The
--   name of organization config rule that you want to delete.
newDeleteOrganizationConfigRule :: Text -> DeleteOrganizationConfigRule

-- | <i>See:</i> <a>newDeleteOrganizationConfigRuleResponse</a> smart
--   constructor.
data DeleteOrganizationConfigRuleResponse
DeleteOrganizationConfigRuleResponse' :: DeleteOrganizationConfigRuleResponse

-- | Create a value of <a>DeleteOrganizationConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteOrganizationConfigRuleResponse :: DeleteOrganizationConfigRuleResponse

-- | <i>See:</i> <a>newPutResourceConfig</a> smart constructor.
data PutResourceConfig
PutResourceConfig' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> PutResourceConfig

-- | Create a value of <a>PutResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceName</a> - Name of the resource.
--   
--   <a>$sel:tags:PutResourceConfig'</a>, <a>putResourceConfig_tags</a> -
--   Tags associated with the resource.
--   
--   <a>$sel:resourceType:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceType</a> - The type of the resource. The
--   custom resource type must be registered with CloudFormation.
--   
--   You cannot use the organization names “amzn”, “amazon”, “alexa”,
--   “custom” with custom resource types. It is the first part of the
--   ResourceType up to the first ::.
--   
--   <a>$sel:schemaVersionId:PutResourceConfig'</a>,
--   <a>putResourceConfig_schemaVersionId</a> - Version of the schema
--   registered for the ResourceType in CloudFormation.
--   
--   <a>$sel:resourceId:PutResourceConfig'</a>,
--   <a>putResourceConfig_resourceId</a> - Unique identifier of the
--   resource.
--   
--   <a>$sel:configuration:PutResourceConfig'</a>,
--   <a>putResourceConfig_configuration</a> - The configuration object of
--   the resource in valid JSON format. It must match the schema registered
--   with CloudFormation.
--   
--   The configuration JSON must not exceed 64 KB.
newPutResourceConfig :: Text -> Text -> Text -> Text -> PutResourceConfig

-- | <i>See:</i> <a>newPutResourceConfigResponse</a> smart constructor.
data PutResourceConfigResponse
PutResourceConfigResponse' :: PutResourceConfigResponse

-- | Create a value of <a>PutResourceConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutResourceConfigResponse :: PutResourceConfigResponse

-- | <i>See:</i> <a>newStartConfigRulesEvaluation</a> smart constructor.
data StartConfigRulesEvaluation
StartConfigRulesEvaluation' :: Maybe (NonEmpty Text) -> StartConfigRulesEvaluation

-- | Create a value of <a>StartConfigRulesEvaluation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:StartConfigRulesEvaluation'</a>,
--   <a>startConfigRulesEvaluation_configRuleNames</a> - The list of names
--   of Config rules that you want to run evaluations for.
newStartConfigRulesEvaluation :: StartConfigRulesEvaluation

-- | The output when you start the evaluation for the specified Config
--   rule.
--   
--   <i>See:</i> <a>newStartConfigRulesEvaluationResponse</a> smart
--   constructor.
data StartConfigRulesEvaluationResponse
StartConfigRulesEvaluationResponse' :: Int -> StartConfigRulesEvaluationResponse

-- | Create a value of <a>StartConfigRulesEvaluationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartConfigRulesEvaluationResponse'</a>,
--   <a>startConfigRulesEvaluationResponse_httpStatus</a> - The response's
--   http status code.
newStartConfigRulesEvaluationResponse :: Int -> StartConfigRulesEvaluationResponse

-- | <i>See:</i> <a>newDescribeOrganizationConfigRules</a> smart
--   constructor.
data DescribeOrganizationConfigRules
DescribeOrganizationConfigRules' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeOrganizationConfigRules

-- | Create a value of <a>DescribeOrganizationConfigRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleNames:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_organizationConfigRuleNames</a> -
--   The names of organization config rules for which you want details. If
--   you do not specify any names, Config returns details for all your
--   organization config rules.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRules_limit</a> - The maximum number of
--   organization config rules returned on each page. If you do no specify
--   a number, Config uses the default. The default is 100.
newDescribeOrganizationConfigRules :: DescribeOrganizationConfigRules

-- | <i>See:</i> <a>newDescribeOrganizationConfigRulesResponse</a> smart
--   constructor.
data DescribeOrganizationConfigRulesResponse
DescribeOrganizationConfigRulesResponse' :: Maybe [OrganizationConfigRule] -> Maybe Text -> Int -> DescribeOrganizationConfigRulesResponse

-- | Create a value of <a>DescribeOrganizationConfigRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRules:DescribeOrganizationConfigRulesResponse'</a>,
--   <a>describeOrganizationConfigRulesResponse_organizationConfigRules</a>
--   - Returns a list of <tt>OrganizationConfigRule</tt> objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConfigRules'</a>,
--   <a>describeOrganizationConfigRulesResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeOrganizationConfigRulesResponse'</a>,
--   <a>describeOrganizationConfigRulesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConfigRulesResponse :: Int -> DescribeOrganizationConfigRulesResponse

-- | <i>See:</i> <a>newSelectAggregateResourceConfig</a> smart constructor.
data SelectAggregateResourceConfig
SelectAggregateResourceConfig' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> Text -> SelectAggregateResourceConfig

-- | Create a value of <a>SelectAggregateResourceConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_nextToken</a> - The nextToken string
--   returned in a previous request that you use to request the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_limit</a> - The maximum number of
--   query results returned on each page.
--   
--   <a>$sel:maxResults:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_maxResults</a> - The maximum number
--   of query results returned on each page. Config also allows the Limit
--   request parameter.
--   
--   <a>$sel:expression:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_expression</a> - The SQL query SELECT
--   command.
--   
--   
--   <a>$sel:configurationAggregatorName:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfig_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newSelectAggregateResourceConfig :: Text -> Text -> SelectAggregateResourceConfig

-- | <i>See:</i> <a>newSelectAggregateResourceConfigResponse</a> smart
--   constructor.
data SelectAggregateResourceConfigResponse
SelectAggregateResourceConfigResponse' :: Maybe [Text] -> Maybe QueryInfo -> Maybe Text -> Int -> SelectAggregateResourceConfigResponse

-- | Create a value of <a>SelectAggregateResourceConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:results:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_results</a> - Returns the
--   results for the SQL query.
--   
--   <a>$sel:queryInfo:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_queryInfo</a> - Undocumented
--   member.
--   
--   <a>$sel:nextToken:SelectAggregateResourceConfig'</a>,
--   <a>selectAggregateResourceConfigResponse_nextToken</a> - The nextToken
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:httpStatus:SelectAggregateResourceConfigResponse'</a>,
--   <a>selectAggregateResourceConfigResponse_httpStatus</a> - The
--   response's http status code.
newSelectAggregateResourceConfigResponse :: Int -> SelectAggregateResourceConfigResponse

-- | <i>See:</i> <a>newDescribeComplianceByResource</a> smart constructor.
data DescribeComplianceByResource
DescribeComplianceByResource' :: Maybe Text -> Maybe Text -> Maybe [ComplianceType] -> Maybe Text -> Maybe Natural -> DescribeComplianceByResource

-- | Create a value of <a>DescribeComplianceByResource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_resourceId</a> - The ID of the Amazon
--   Web Services resource for which you want compliance information. You
--   can specify only one resource ID. If you specify a resource ID, you
--   must also specify a type for <tt>ResourceType</tt>.
--   
--   <a>$sel:resourceType:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_resourceType</a> - The types of Amazon
--   Web Services resources for which you want compliance information (for
--   example, <tt>AWS::EC2::Instance</tt>). For this action, you can
--   specify that the resource type is an Amazon Web Services account by
--   specifying <tt>AWS::::Account</tt>.
--   
--   <a>$sel:complianceTypes:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
--   
--   <a>$sel:nextToken:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResource_limit</a> - The maximum number of
--   evaluation results returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
newDescribeComplianceByResource :: DescribeComplianceByResource

-- | <i>See:</i> <a>newDescribeComplianceByResourceResponse</a> smart
--   constructor.
data DescribeComplianceByResourceResponse
DescribeComplianceByResourceResponse' :: Maybe [ComplianceByResource] -> Maybe Text -> Int -> DescribeComplianceByResourceResponse

-- | Create a value of <a>DescribeComplianceByResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceByResources:DescribeComplianceByResourceResponse'</a>,
--   <a>describeComplianceByResourceResponse_complianceByResources</a> -
--   Indicates whether the specified Amazon Web Services resource complies
--   with all of the Config rules that evaluate it.
--   
--   <a>$sel:nextToken:DescribeComplianceByResource'</a>,
--   <a>describeComplianceByResourceResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeComplianceByResourceResponse'</a>,
--   <a>describeComplianceByResourceResponse_httpStatus</a> - The
--   response's http status code.
newDescribeComplianceByResourceResponse :: Int -> DescribeComplianceByResourceResponse

-- | <i>See:</i> <a>newDescribeOrganizationConformancePacks</a> smart
--   constructor.
data DescribeOrganizationConformancePacks
DescribeOrganizationConformancePacks' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> DescribeOrganizationConformancePacks

-- | Create a value of <a>DescribeOrganizationConformancePacks</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_nextToken</a> - The nextToken
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_limit</a> - The maximum number
--   of organization config packs returned on each page. If you do no
--   specify a number, Config uses the default. The default is 100.
--   
--   
--   <a>$sel:organizationConformancePackNames:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacks_organizationConformancePackNames</a>
--   - The name that you assign to an organization conformance pack.
newDescribeOrganizationConformancePacks :: DescribeOrganizationConformancePacks

-- | <i>See:</i> <a>newDescribeOrganizationConformancePacksResponse</a>
--   smart constructor.
data DescribeOrganizationConformancePacksResponse
DescribeOrganizationConformancePacksResponse' :: Maybe [OrganizationConformancePack] -> Maybe Text -> Int -> DescribeOrganizationConformancePacksResponse

-- | Create a value of <a>DescribeOrganizationConformancePacksResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConformancePacks:DescribeOrganizationConformancePacksResponse'</a>,
--   <a>describeOrganizationConformancePacksResponse_organizationConformancePacks</a>
--   - Returns a list of OrganizationConformancePacks objects.
--   
--   <a>$sel:nextToken:DescribeOrganizationConformancePacks'</a>,
--   <a>describeOrganizationConformancePacksResponse_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeOrganizationConformancePacksResponse'</a>,
--   <a>describeOrganizationConformancePacksResponse_httpStatus</a> - The
--   response's http status code.
newDescribeOrganizationConformancePacksResponse :: Int -> DescribeOrganizationConformancePacksResponse

-- | <i>See:</i> <a>newDeleteResourceConfig</a> smart constructor.
data DeleteResourceConfig
DeleteResourceConfig' :: Text -> Text -> DeleteResourceConfig

-- | Create a value of <a>DeleteResourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:DeleteResourceConfig'</a>,
--   <a>deleteResourceConfig_resourceType</a> - The type of the resource.
--   
--   <a>$sel:resourceId:DeleteResourceConfig'</a>,
--   <a>deleteResourceConfig_resourceId</a> - Unique identifier of the
--   resource.
newDeleteResourceConfig :: Text -> Text -> DeleteResourceConfig

-- | <i>See:</i> <a>newDeleteResourceConfigResponse</a> smart constructor.
data DeleteResourceConfigResponse
DeleteResourceConfigResponse' :: DeleteResourceConfigResponse

-- | Create a value of <a>DeleteResourceConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceConfigResponse :: DeleteResourceConfigResponse

-- | <i>See:</i> <a>newPutEvaluations</a> smart constructor.
data PutEvaluations
PutEvaluations' :: Maybe [Evaluation] -> Maybe Bool -> Text -> PutEvaluations

-- | Create a value of <a>PutEvaluations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluations:PutEvaluations'</a>,
--   <a>putEvaluations_evaluations</a> - The assessments that the Lambda
--   function performs. Each evaluation identifies an Amazon Web Services
--   resource and indicates whether it complies with the Config rule that
--   invokes the Lambda function.
--   
--   <a>$sel:testMode:PutEvaluations'</a>, <a>putEvaluations_testMode</a> -
--   Use this parameter to specify a test run for <tt>PutEvaluations</tt>.
--   You can verify whether your Lambda function will deliver evaluation
--   results to Config. No updates occur to your existing evaluations, and
--   evaluation results are not sent to Config.
--   
--   When <tt>TestMode</tt> is <tt>true</tt>, <tt>PutEvaluations</tt>
--   doesn't require a valid value for the <tt>ResultToken</tt> parameter,
--   but the value cannot be null.
--   
--   <a>$sel:resultToken:PutEvaluations'</a>,
--   <a>putEvaluations_resultToken</a> - An encrypted token that associates
--   an evaluation with an Config rule. Identifies the rule and the event
--   that triggered the evaluation.
newPutEvaluations :: Text -> PutEvaluations

-- | <i>See:</i> <a>newPutEvaluationsResponse</a> smart constructor.
data PutEvaluationsResponse
PutEvaluationsResponse' :: Maybe [Evaluation] -> Int -> PutEvaluationsResponse

-- | Create a value of <a>PutEvaluationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEvaluations:PutEvaluationsResponse'</a>,
--   <a>putEvaluationsResponse_failedEvaluations</a> - Requests that failed
--   because of a client or server error.
--   
--   <a>$sel:httpStatus:PutEvaluationsResponse'</a>,
--   <a>putEvaluationsResponse_httpStatus</a> - The response's http status
--   code.
newPutEvaluationsResponse :: Int -> PutEvaluationsResponse

-- | The input for the DescribeConfigurationRecorders action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorders</a> smart
--   constructor.
data DescribeConfigurationRecorders
DescribeConfigurationRecorders' :: Maybe [Text] -> DescribeConfigurationRecorders

-- | Create a value of <a>DescribeConfigurationRecorders</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorderNames:DescribeConfigurationRecorders'</a>,
--   <a>describeConfigurationRecorders_configurationRecorderNames</a> - A
--   list of configuration recorder names.
newDescribeConfigurationRecorders :: DescribeConfigurationRecorders

-- | The output for the DescribeConfigurationRecorders action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecordersResponse</a> smart
--   constructor.
data DescribeConfigurationRecordersResponse
DescribeConfigurationRecordersResponse' :: Maybe [ConfigurationRecorder] -> Int -> DescribeConfigurationRecordersResponse

-- | Create a value of <a>DescribeConfigurationRecordersResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorders:DescribeConfigurationRecordersResponse'</a>,
--   <a>describeConfigurationRecordersResponse_configurationRecorders</a> -
--   A list that contains the descriptions of the specified configuration
--   recorders.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRecordersResponse'</a>,
--   <a>describeConfigurationRecordersResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRecordersResponse :: Int -> DescribeConfigurationRecordersResponse

-- | <i>See:</i> <a>newDescribeConformancePackCompliance</a> smart
--   constructor.
data DescribeConformancePackCompliance
DescribeConformancePackCompliance' :: Maybe ConformancePackComplianceFilters -> Maybe Text -> Maybe Natural -> Text -> DescribeConformancePackCompliance

-- | Create a value of <a>DescribeConformancePackCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_filters</a> - A
--   <tt>ConformancePackComplianceFilters</tt> object.
--   
--   <a>$sel:nextToken:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_limit</a> - The maximum number of
--   Config rules within a conformance pack are returned on each page.
--   
--   <a>$sel:conformancePackName:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackCompliance_conformancePackName</a> - Name of
--   the conformance pack.
newDescribeConformancePackCompliance :: Text -> DescribeConformancePackCompliance

-- | <i>See:</i> <a>newDescribeConformancePackComplianceResponse</a> smart
--   constructor.
data DescribeConformancePackComplianceResponse
DescribeConformancePackComplianceResponse' :: Maybe Text -> Int -> Text -> [ConformancePackRuleCompliance] -> DescribeConformancePackComplianceResponse

-- | Create a value of <a>DescribeConformancePackComplianceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackComplianceResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConformancePackComplianceResponse'</a>,
--   <a>describeConformancePackComplianceResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:conformancePackName:DescribeConformancePackCompliance'</a>,
--   <a>describeConformancePackComplianceResponse_conformancePackName</a> -
--   Name of the conformance pack.
--   
--   
--   <a>$sel:conformancePackRuleComplianceList:DescribeConformancePackComplianceResponse'</a>,
--   <a>describeConformancePackComplianceResponse_conformancePackRuleComplianceList</a>
--   - Returns a list of <tt>ConformancePackRuleCompliance</tt> objects.
newDescribeConformancePackComplianceResponse :: Int -> Text -> DescribeConformancePackComplianceResponse

-- | <i>See:</i> <a>newGetAggregateComplianceDetailsByConfigRule</a> smart
--   constructor.
data GetAggregateComplianceDetailsByConfigRule
GetAggregateComplianceDetailsByConfigRule' :: Maybe Text -> Maybe Natural -> Maybe ComplianceType -> Text -> Text -> Text -> Text -> GetAggregateComplianceDetailsByConfigRule

-- | Create a value of <a>GetAggregateComplianceDetailsByConfigRule</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_limit</a> - The maximum
--   number of evaluation results returned on each page. The default is 50.
--   You cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:complianceType:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_complianceType</a> - The
--   resource compliance status.
--   
--   For the <tt>GetAggregateComplianceDetailsByConfigRuleRequest</tt> data
--   type, Config supports only the <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. Config does not support the
--   <tt>NOT_APPLICABLE</tt> and <tt>INSUFFICIENT_DATA</tt> values.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
--   
--   <a>$sel:configRuleName:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_configRuleName</a> - The
--   name of the Config rule for which you want compliance information.
--   
--   <a>$sel:accountId:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_accountId</a> - The
--   12-digit account ID of the source account.
--   
--   <a>$sel:awsRegion:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRule_awsRegion</a> - The
--   source region from where the data is aggregated.
newGetAggregateComplianceDetailsByConfigRule :: Text -> Text -> Text -> Text -> GetAggregateComplianceDetailsByConfigRule

-- | <i>See:</i>
--   <a>newGetAggregateComplianceDetailsByConfigRuleResponse</a> smart
--   constructor.
data GetAggregateComplianceDetailsByConfigRuleResponse
GetAggregateComplianceDetailsByConfigRuleResponse' :: Maybe Text -> Maybe [AggregateEvaluationResult] -> Int -> GetAggregateComplianceDetailsByConfigRuleResponse

-- | Create a value of
--   <a>GetAggregateComplianceDetailsByConfigRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateComplianceDetailsByConfigRule'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_nextToken</a> -
--   The <tt>nextToken</tt> string returned on a previous page that you use
--   to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateEvaluationResults:GetAggregateComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_aggregateEvaluationResults</a>
--   - Returns an AggregateEvaluationResults object.
--   
--   
--   <a>$sel:httpStatus:GetAggregateComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getAggregateComplianceDetailsByConfigRuleResponse_httpStatus</a> -
--   The response's http status code.
newGetAggregateComplianceDetailsByConfigRuleResponse :: Int -> GetAggregateComplianceDetailsByConfigRuleResponse

-- | <i>See:</i> <a>newGetAggregateDiscoveredResourceCounts</a> smart
--   constructor.
data GetAggregateDiscoveredResourceCounts
GetAggregateDiscoveredResourceCounts' :: Maybe ResourceCountFilters -> Maybe Text -> Maybe Natural -> Maybe ResourceCountGroupKey -> Text -> GetAggregateDiscoveredResourceCounts

-- | Create a value of <a>GetAggregateDiscoveredResourceCounts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_filters</a> - Filters the
--   results based on the <tt>ResourceCountFilters</tt> object.
--   
--   <a>$sel:nextToken:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_limit</a> - The maximum number
--   of GroupedResourceCount objects returned on each page. The default is
--   1000. You cannot specify a number greater than 1000. If you specify 0,
--   Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_groupByKey</a> - The key to
--   group the resource counts.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCounts_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateDiscoveredResourceCounts :: Text -> GetAggregateDiscoveredResourceCounts

-- | <i>See:</i> <a>newGetAggregateDiscoveredResourceCountsResponse</a>
--   smart constructor.
data GetAggregateDiscoveredResourceCountsResponse
GetAggregateDiscoveredResourceCountsResponse' :: Maybe [GroupedResourceCount] -> Maybe Text -> Maybe Text -> Int -> Integer -> GetAggregateDiscoveredResourceCountsResponse

-- | Create a value of <a>GetAggregateDiscoveredResourceCountsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupedResourceCounts:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_groupedResourceCounts</a>
--   - Returns a list of GroupedResourceCount objects.
--   
--   <a>$sel:nextToken:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:groupByKey:GetAggregateDiscoveredResourceCounts'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_groupByKey</a> - The
--   key passed into the request object. If <tt>GroupByKey</tt> is not
--   provided, the result will be empty.
--   
--   <a>$sel:httpStatus:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:totalDiscoveredResources:GetAggregateDiscoveredResourceCountsResponse'</a>,
--   <a>getAggregateDiscoveredResourceCountsResponse_totalDiscoveredResources</a>
--   - The total number of resources that are present in an aggregator with
--   the filters that you provide.
newGetAggregateDiscoveredResourceCountsResponse :: Int -> Integer -> GetAggregateDiscoveredResourceCountsResponse

-- | <i>See:</i> <a>newGetAggregateConformancePackComplianceSummary</a>
--   smart constructor.
data GetAggregateConformancePackComplianceSummary
GetAggregateConformancePackComplianceSummary' :: Maybe AggregateConformancePackComplianceSummaryFilters -> Maybe Text -> Maybe Natural -> Maybe AggregateConformancePackComplianceSummaryGroupKey -> Text -> GetAggregateConformancePackComplianceSummary

-- | Create a value of <a>GetAggregateConformancePackComplianceSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_filters</a> - Filters
--   the results based on the
--   <tt>AggregateConformancePackComplianceSummaryFilters</tt> object.
--   
--   <a>$sel:nextToken:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_limit</a> - The
--   maximum number of results returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
--   
--   <a>$sel:groupByKey:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_groupByKey</a> -
--   Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
--   
--   
--   <a>$sel:configurationAggregatorName:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummary_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newGetAggregateConformancePackComplianceSummary :: Text -> GetAggregateConformancePackComplianceSummary

-- | <i>See:</i>
--   <a>newGetAggregateConformancePackComplianceSummaryResponse</a> smart
--   constructor.
data GetAggregateConformancePackComplianceSummaryResponse
GetAggregateConformancePackComplianceSummaryResponse' :: Maybe Text -> Maybe [AggregateConformancePackComplianceSummary] -> Maybe Text -> Int -> GetAggregateConformancePackComplianceSummaryResponse

-- | Create a value of
--   <a>GetAggregateConformancePackComplianceSummaryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:aggregateConformancePackComplianceSummaries:GetAggregateConformancePackComplianceSummaryResponse'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_aggregateConformancePackComplianceSummaries</a>
--   - Returns a list of <tt>AggregateConformancePackComplianceSummary</tt>
--   object.
--   
--   <a>$sel:groupByKey:GetAggregateConformancePackComplianceSummary'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_groupByKey</a>
--   - Groups the result based on Amazon Web Services account ID or Amazon
--   Web Services Region.
--   
--   
--   <a>$sel:httpStatus:GetAggregateConformancePackComplianceSummaryResponse'</a>,
--   <a>getAggregateConformancePackComplianceSummaryResponse_httpStatus</a>
--   - The response's http status code.
newGetAggregateConformancePackComplianceSummaryResponse :: Int -> GetAggregateConformancePackComplianceSummaryResponse

-- | The input for the StartConfigurationRecorder action.
--   
--   <i>See:</i> <a>newStartConfigurationRecorder</a> smart constructor.
data StartConfigurationRecorder
StartConfigurationRecorder' :: Text -> StartConfigurationRecorder

-- | Create a value of <a>StartConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:StartConfigurationRecorder'</a>,
--   <a>startConfigurationRecorder_configurationRecorderName</a> - The name
--   of the recorder object that records each configuration change made to
--   the resources.
newStartConfigurationRecorder :: Text -> StartConfigurationRecorder

-- | <i>See:</i> <a>newStartConfigurationRecorderResponse</a> smart
--   constructor.
data StartConfigurationRecorderResponse
StartConfigurationRecorderResponse' :: StartConfigurationRecorderResponse

-- | Create a value of <a>StartConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartConfigurationRecorderResponse :: StartConfigurationRecorderResponse

-- | <i>See:</i> <a>newDescribeConformancePacks</a> smart constructor.
data DescribeConformancePacks
DescribeConformancePacks' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConformancePacks

-- | Create a value of <a>DescribeConformancePacks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackNames:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_conformancePackNames</a> - Comma-separated
--   list of conformance pack names for which you want details. If you do
--   not specify any names, Config returns details for all your conformance
--   packs.
--   
--   <a>$sel:nextToken:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_nextToken</a> - The <tt>nextToken</tt>
--   string returned in a previous request that you use to request the next
--   page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePacks'</a>,
--   <a>describeConformancePacks_limit</a> - The maximum number of
--   conformance packs returned on each page.
newDescribeConformancePacks :: DescribeConformancePacks

-- | <i>See:</i> <a>newDescribeConformancePacksResponse</a> smart
--   constructor.
data DescribeConformancePacksResponse
DescribeConformancePacksResponse' :: Maybe Text -> Maybe [ConformancePackDetail] -> Int -> DescribeConformancePacksResponse

-- | Create a value of <a>DescribeConformancePacksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConformancePacks'</a>,
--   <a>describeConformancePacksResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:conformancePackDetails:DescribeConformancePacksResponse'</a>,
--   <a>describeConformancePacksResponse_conformancePackDetails</a> -
--   Returns a list of <tt>ConformancePackDetail</tt> objects.
--   
--   <a>$sel:httpStatus:DescribeConformancePacksResponse'</a>,
--   <a>describeConformancePacksResponse_httpStatus</a> - The response's
--   http status code.
newDescribeConformancePacksResponse :: Int -> DescribeConformancePacksResponse

-- | <i>See:</i> <a>newPutExternalEvaluation</a> smart constructor.
data PutExternalEvaluation
PutExternalEvaluation' :: Text -> ExternalEvaluation -> PutExternalEvaluation

-- | Create a value of <a>PutExternalEvaluation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:PutExternalEvaluation'</a>,
--   <a>putExternalEvaluation_configRuleName</a> - The name of the Config
--   rule.
--   
--   <a>$sel:externalEvaluation:PutExternalEvaluation'</a>,
--   <a>putExternalEvaluation_externalEvaluation</a> - An
--   <tt>ExternalEvaluation</tt> object that provides details about
--   compliance.
newPutExternalEvaluation :: Text -> ExternalEvaluation -> PutExternalEvaluation

-- | <i>See:</i> <a>newPutExternalEvaluationResponse</a> smart constructor.
data PutExternalEvaluationResponse
PutExternalEvaluationResponse' :: Int -> PutExternalEvaluationResponse

-- | Create a value of <a>PutExternalEvaluationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutExternalEvaluationResponse'</a>,
--   <a>putExternalEvaluationResponse_httpStatus</a> - The response's http
--   status code.
newPutExternalEvaluationResponse :: Int -> PutExternalEvaluationResponse

-- | <i>See:</i> <a>newDeleteRemediationExceptions</a> smart constructor.
data DeleteRemediationExceptions
DeleteRemediationExceptions' :: Text -> NonEmpty RemediationExceptionResourceKey -> DeleteRemediationExceptions

-- | Create a value of <a>DeleteRemediationExceptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:DeleteRemediationExceptions'</a>,
--   <a>deleteRemediationExceptions_configRuleName</a> - The name of the
--   Config rule for which you want to delete remediation exception
--   configuration.
--   
--   <a>$sel:resourceKeys:DeleteRemediationExceptions'</a>,
--   <a>deleteRemediationExceptions_resourceKeys</a> - An exception list of
--   resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
newDeleteRemediationExceptions :: Text -> NonEmpty RemediationExceptionResourceKey -> DeleteRemediationExceptions

-- | <i>See:</i> <a>newDeleteRemediationExceptionsResponse</a> smart
--   constructor.
data DeleteRemediationExceptionsResponse
DeleteRemediationExceptionsResponse' :: Maybe [FailedDeleteRemediationExceptionsBatch] -> Int -> DeleteRemediationExceptionsResponse

-- | Create a value of <a>DeleteRemediationExceptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:DeleteRemediationExceptionsResponse'</a>,
--   <a>deleteRemediationExceptionsResponse_failedBatches</a> - Returns a
--   list of failed delete remediation exceptions batch objects. Each
--   object in the batch consists of a list of failed items and failure
--   messages.
--   
--   <a>$sel:httpStatus:DeleteRemediationExceptionsResponse'</a>,
--   <a>deleteRemediationExceptionsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteRemediationExceptionsResponse :: Int -> DeleteRemediationExceptionsResponse

-- | <i>See:</i> <a>newPutRemediationExceptions</a> smart constructor.
data PutRemediationExceptions
PutRemediationExceptions' :: Maybe Text -> Maybe POSIX -> Text -> NonEmpty RemediationExceptionResourceKey -> PutRemediationExceptions

-- | Create a value of <a>PutRemediationExceptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_message</a> - The message contains an
--   explanation of the exception.
--   
--   <a>$sel:expirationTime:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_expirationTime</a> - The exception is
--   automatically deleted after the expiration date.
--   
--   <a>$sel:configRuleName:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_configRuleName</a> - The name of the
--   Config rule for which you want to create remediation exception.
--   
--   <a>$sel:resourceKeys:PutRemediationExceptions'</a>,
--   <a>putRemediationExceptions_resourceKeys</a> - An exception list of
--   resource exception keys to be processed with the current request.
--   Config adds exception for each resource key. For example, Config adds
--   3 exceptions for 3 resource keys.
newPutRemediationExceptions :: Text -> NonEmpty RemediationExceptionResourceKey -> PutRemediationExceptions

-- | <i>See:</i> <a>newPutRemediationExceptionsResponse</a> smart
--   constructor.
data PutRemediationExceptionsResponse
PutRemediationExceptionsResponse' :: Maybe [FailedRemediationExceptionBatch] -> Int -> PutRemediationExceptionsResponse

-- | Create a value of <a>PutRemediationExceptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:PutRemediationExceptionsResponse'</a>,
--   <a>putRemediationExceptionsResponse_failedBatches</a> - Returns a list
--   of failed remediation exceptions batch objects. Each object in the
--   batch consists of a list of failed items and failure messages.
--   
--   <a>$sel:httpStatus:PutRemediationExceptionsResponse'</a>,
--   <a>putRemediationExceptionsResponse_httpStatus</a> - The response's
--   http status code.
newPutRemediationExceptionsResponse :: Int -> PutRemediationExceptionsResponse

-- | <i>See:</i> <a>newGetOrganizationConfigRuleDetailedStatus</a> smart
--   constructor.
data GetOrganizationConfigRuleDetailedStatus
GetOrganizationConfigRuleDetailedStatus' :: Maybe StatusDetailFilters -> Maybe Text -> Maybe Natural -> Text -> GetOrganizationConfigRuleDetailedStatus

-- | Create a value of <a>GetOrganizationConfigRuleDetailedStatus</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_filters</a> - A
--   <tt>StatusDetailFilters</tt> object.
--   
--   <a>$sel:nextToken:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_limit</a> - The maximum
--   number of <tt>OrganizationConfigRuleDetailedStatus</tt> returned on
--   each page. If you do not specify a number, Config uses the default.
--   The default is 100.
--   
--   
--   <a>$sel:organizationConfigRuleName:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatus_organizationConfigRuleName</a>
--   - The name of organization config rule for which you want status
--   details for member accounts.
newGetOrganizationConfigRuleDetailedStatus :: Text -> GetOrganizationConfigRuleDetailedStatus

-- | <i>See:</i> <a>newGetOrganizationConfigRuleDetailedStatusResponse</a>
--   smart constructor.
data GetOrganizationConfigRuleDetailedStatusResponse
GetOrganizationConfigRuleDetailedStatusResponse' :: Maybe [MemberAccountStatus] -> Maybe Text -> Int -> GetOrganizationConfigRuleDetailedStatusResponse

-- | Create a value of
--   <a>GetOrganizationConfigRuleDetailedStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:organizationConfigRuleDetailedStatus:GetOrganizationConfigRuleDetailedStatusResponse'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_organizationConfigRuleDetailedStatus</a>
--   - A list of <tt>MemberAccountStatus</tt> objects.
--   
--   <a>$sel:nextToken:GetOrganizationConfigRuleDetailedStatus'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:GetOrganizationConfigRuleDetailedStatusResponse'</a>,
--   <a>getOrganizationConfigRuleDetailedStatusResponse_httpStatus</a> -
--   The response's http status code.
newGetOrganizationConfigRuleDetailedStatusResponse :: Int -> GetOrganizationConfigRuleDetailedStatusResponse

-- | <i>See:</i> <a>newPutRemediationConfigurations</a> smart constructor.
data PutRemediationConfigurations
PutRemediationConfigurations' :: [RemediationConfiguration] -> PutRemediationConfigurations

-- | Create a value of <a>PutRemediationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remediationConfigurations:PutRemediationConfigurations'</a>,
--   <a>putRemediationConfigurations_remediationConfigurations</a> - A list
--   of remediation configuration objects.
newPutRemediationConfigurations :: PutRemediationConfigurations

-- | <i>See:</i> <a>newPutRemediationConfigurationsResponse</a> smart
--   constructor.
data PutRemediationConfigurationsResponse
PutRemediationConfigurationsResponse' :: Maybe [FailedRemediationBatch] -> Int -> PutRemediationConfigurationsResponse

-- | Create a value of <a>PutRemediationConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedBatches:PutRemediationConfigurationsResponse'</a>,
--   <a>putRemediationConfigurationsResponse_failedBatches</a> - Returns a
--   list of failed remediation batch objects.
--   
--   <a>$sel:httpStatus:PutRemediationConfigurationsResponse'</a>,
--   <a>putRemediationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newPutRemediationConfigurationsResponse :: Int -> PutRemediationConfigurationsResponse

-- | <i>See:</i> <a>newDeleteConformancePack</a> smart constructor.
data DeleteConformancePack
DeleteConformancePack' :: Text -> DeleteConformancePack

-- | Create a value of <a>DeleteConformancePack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackName:DeleteConformancePack'</a>,
--   <a>deleteConformancePack_conformancePackName</a> - Name of the
--   conformance pack you want to delete.
newDeleteConformancePack :: Text -> DeleteConformancePack

-- | <i>See:</i> <a>newDeleteConformancePackResponse</a> smart constructor.
data DeleteConformancePackResponse
DeleteConformancePackResponse' :: DeleteConformancePackResponse

-- | Create a value of <a>DeleteConformancePackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConformancePackResponse :: DeleteConformancePackResponse

-- | <i>See:</i> <a>newPutConformancePack</a> smart constructor.
data PutConformancePack
PutConformancePack' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe Text -> Text -> PutConformancePack

-- | Create a value of <a>PutConformancePack</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:PutConformancePack'</a>,
--   <a>putConformancePack_deliveryS3Bucket</a> - The name of the Amazon S3
--   bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:PutConformancePack'</a>,
--   <a>putConformancePack_deliveryS3KeyPrefix</a> - The prefix for the
--   Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:templateS3Uri:PutConformancePack'</a>,
--   <a>putConformancePack_templateS3Uri</a> - Location of file containing
--   the template body (<tt>s3://bucketname/prefix</tt>). The uri must
--   point to the conformance pack template (max size: 300 KB) that is
--   located in an Amazon S3 bucket in the same region as the conformance
--   pack.
--   
--   You must have access to read Amazon S3 bucket.
--   
--   <a>$sel:conformancePackInputParameters:PutConformancePack'</a>,
--   <a>putConformancePack_conformancePackInputParameters</a> - A list of
--   <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:templateBody:PutConformancePack'</a>,
--   <a>putConformancePack_templateBody</a> - A string containing full
--   conformance pack template body. Structure containing the template body
--   with a minimum length of 1 byte and a maximum length of 51,200 bytes.
--   
--   You can only use a YAML template with one resource type, that is,
--   config rule and a remediation action.
--   
--   <a>$sel:conformancePackName:PutConformancePack'</a>,
--   <a>putConformancePack_conformancePackName</a> - Name of the
--   conformance pack you want to create.
newPutConformancePack :: Text -> PutConformancePack

-- | <i>See:</i> <a>newPutConformancePackResponse</a> smart constructor.
data PutConformancePackResponse
PutConformancePackResponse' :: Maybe Text -> Int -> PutConformancePackResponse

-- | Create a value of <a>PutConformancePackResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackArn:PutConformancePackResponse'</a>,
--   <a>putConformancePackResponse_conformancePackArn</a> - ARN of the
--   conformance pack.
--   
--   <a>$sel:httpStatus:PutConformancePackResponse'</a>,
--   <a>putConformancePackResponse_httpStatus</a> - The response's http
--   status code.
newPutConformancePackResponse :: Int -> PutConformancePackResponse

-- | <i>See:</i> <a>newStartRemediationExecution</a> smart constructor.
data StartRemediationExecution
StartRemediationExecution' :: Text -> NonEmpty ResourceKey -> StartRemediationExecution

-- | Create a value of <a>StartRemediationExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:StartRemediationExecution'</a>,
--   <a>startRemediationExecution_configRuleName</a> - The list of names of
--   Config rules that you want to run remediation execution for.
--   
--   <a>$sel:resourceKeys:StartRemediationExecution'</a>,
--   <a>startRemediationExecution_resourceKeys</a> - A list of resource
--   keys to be processed with the current request. Each element in the
--   list consists of the resource type and resource ID.
newStartRemediationExecution :: Text -> NonEmpty ResourceKey -> StartRemediationExecution

-- | <i>See:</i> <a>newStartRemediationExecutionResponse</a> smart
--   constructor.
data StartRemediationExecutionResponse
StartRemediationExecutionResponse' :: Maybe Text -> Maybe (NonEmpty ResourceKey) -> Int -> StartRemediationExecutionResponse

-- | Create a value of <a>StartRemediationExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_failureMessage</a> - Returns a
--   failure message. For example, the resource is already compliant.
--   
--   <a>$sel:failedItems:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_failedItems</a> - For resources
--   that have failed to start execution, the API returns a resource key
--   object.
--   
--   <a>$sel:httpStatus:StartRemediationExecutionResponse'</a>,
--   <a>startRemediationExecutionResponse_httpStatus</a> - The response's
--   http status code.
newStartRemediationExecutionResponse :: Int -> StartRemediationExecutionResponse

-- | <i>See:</i> <a>newDescribeConformancePackStatus</a> smart constructor.
data DescribeConformancePackStatus
DescribeConformancePackStatus' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> DescribeConformancePackStatus

-- | Create a value of <a>DescribeConformancePackStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackNames:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_conformancePackNames</a> -
--   Comma-separated list of conformance pack names.
--   
--   <a>$sel:nextToken:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatus_limit</a> - The maximum number of
--   conformance packs status returned on each page.
newDescribeConformancePackStatus :: DescribeConformancePackStatus

-- | <i>See:</i> <a>newDescribeConformancePackStatusResponse</a> smart
--   constructor.
data DescribeConformancePackStatusResponse
DescribeConformancePackStatusResponse' :: Maybe [ConformancePackStatusDetail] -> Maybe Text -> Int -> DescribeConformancePackStatusResponse

-- | Create a value of <a>DescribeConformancePackStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackStatusDetails:DescribeConformancePackStatusResponse'</a>,
--   <a>describeConformancePackStatusResponse_conformancePackStatusDetails</a>
--   - A list of <tt>ConformancePackStatusDetail</tt> objects.
--   
--   <a>$sel:nextToken:DescribeConformancePackStatus'</a>,
--   <a>describeConformancePackStatusResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned in a previous request that you use
--   to request the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeConformancePackStatusResponse'</a>,
--   <a>describeConformancePackStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConformancePackStatusResponse :: Int -> DescribeConformancePackStatusResponse

-- | <i>See:</i> <a>newGetComplianceSummaryByConfigRule</a> smart
--   constructor.
data GetComplianceSummaryByConfigRule
GetComplianceSummaryByConfigRule' :: GetComplianceSummaryByConfigRule

-- | Create a value of <a>GetComplianceSummaryByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetComplianceSummaryByConfigRule :: GetComplianceSummaryByConfigRule

-- | <i>See:</i> <a>newGetComplianceSummaryByConfigRuleResponse</a> smart
--   constructor.
data GetComplianceSummaryByConfigRuleResponse
GetComplianceSummaryByConfigRuleResponse' :: Maybe ComplianceSummary -> Int -> GetComplianceSummaryByConfigRuleResponse

-- | Create a value of <a>GetComplianceSummaryByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceSummary:GetComplianceSummaryByConfigRuleResponse'</a>,
--   <a>getComplianceSummaryByConfigRuleResponse_complianceSummary</a> -
--   The number of Config rules that are compliant and the number that are
--   noncompliant, up to a maximum of 25 for each.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryByConfigRuleResponse'</a>,
--   <a>getComplianceSummaryByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceSummaryByConfigRuleResponse :: Int -> GetComplianceSummaryByConfigRuleResponse

-- | <i>See:</i> <a>newPutStoredQuery</a> smart constructor.
data PutStoredQuery
PutStoredQuery' :: Maybe [Tag] -> StoredQuery -> PutStoredQuery

-- | Create a value of <a>PutStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutStoredQuery'</a>, <a>putStoredQuery_tags</a> - A list
--   of <tt>Tags</tt> object.
--   
--   <a>$sel:storedQuery:PutStoredQuery'</a>,
--   <a>putStoredQuery_storedQuery</a> - A list of <tt>StoredQuery</tt>
--   objects. The mandatory fields are <tt>QueryName</tt> and
--   <tt>Expression</tt>.
--   
--   When you are creating a query, you must provide a query name and an
--   expression. When you are updating a query, you must provide a query
--   name but updating the description is optional.
newPutStoredQuery :: StoredQuery -> PutStoredQuery

-- | <i>See:</i> <a>newPutStoredQueryResponse</a> smart constructor.
data PutStoredQueryResponse
PutStoredQueryResponse' :: Maybe Text -> Int -> PutStoredQueryResponse

-- | Create a value of <a>PutStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryArn:PutStoredQueryResponse'</a>,
--   <a>putStoredQueryResponse_queryArn</a> - Amazon Resource Name (ARN) of
--   the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:httpStatus:PutStoredQueryResponse'</a>,
--   <a>putStoredQueryResponse_httpStatus</a> - The response's http status
--   code.
newPutStoredQueryResponse :: Int -> PutStoredQueryResponse

-- | <i>See:</i> <a>newPutConfigurationAggregator</a> smart constructor.
data PutConfigurationAggregator
PutConfigurationAggregator' :: Maybe OrganizationAggregationSource -> Maybe [AccountAggregationSource] -> Maybe [Tag] -> Text -> PutConfigurationAggregator

-- | Create a value of <a>PutConfigurationAggregator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationAggregationSource:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_organizationAggregationSource</a> - An
--   OrganizationAggregationSource object.
--   
--   <a>$sel:accountAggregationSources:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_accountAggregationSources</a> - A list
--   of AccountAggregationSource object.
--   
--   <a>$sel:tags:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_tags</a> - An array of tag object.
--   
--   <a>$sel:configurationAggregatorName:PutConfigurationAggregator'</a>,
--   <a>putConfigurationAggregator_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newPutConfigurationAggregator :: Text -> PutConfigurationAggregator

-- | <i>See:</i> <a>newPutConfigurationAggregatorResponse</a> smart
--   constructor.
data PutConfigurationAggregatorResponse
PutConfigurationAggregatorResponse' :: Maybe ConfigurationAggregator -> Int -> PutConfigurationAggregatorResponse

-- | Create a value of <a>PutConfigurationAggregatorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregator:PutConfigurationAggregatorResponse'</a>,
--   <a>putConfigurationAggregatorResponse_configurationAggregator</a> -
--   Returns a ConfigurationAggregator object.
--   
--   <a>$sel:httpStatus:PutConfigurationAggregatorResponse'</a>,
--   <a>putConfigurationAggregatorResponse_httpStatus</a> - The response's
--   http status code.
newPutConfigurationAggregatorResponse :: Int -> PutConfigurationAggregatorResponse

-- | <i>See:</i> <a>newDeleteStoredQuery</a> smart constructor.
data DeleteStoredQuery
DeleteStoredQuery' :: Text -> DeleteStoredQuery

-- | Create a value of <a>DeleteStoredQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryName:DeleteStoredQuery'</a>,
--   <a>deleteStoredQuery_queryName</a> - The name of the query that you
--   want to delete.
newDeleteStoredQuery :: Text -> DeleteStoredQuery

-- | <i>See:</i> <a>newDeleteStoredQueryResponse</a> smart constructor.
data DeleteStoredQueryResponse
DeleteStoredQueryResponse' :: Int -> DeleteStoredQueryResponse

-- | Create a value of <a>DeleteStoredQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStoredQueryResponse'</a>,
--   <a>deleteStoredQueryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStoredQueryResponse :: Int -> DeleteStoredQueryResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are
--   <tt>ConfigRule</tt>, <tt>ConfigurationAggregator</tt> and
--   <tt>AggregatorAuthorization</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - An array of
--   tag object.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newDeleteConfigurationAggregator</a> smart constructor.
data DeleteConfigurationAggregator
DeleteConfigurationAggregator' :: Text -> DeleteConfigurationAggregator

-- | Create a value of <a>DeleteConfigurationAggregator</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationAggregatorName:DeleteConfigurationAggregator'</a>,
--   <a>deleteConfigurationAggregator_configurationAggregatorName</a> - The
--   name of the configuration aggregator.
newDeleteConfigurationAggregator :: Text -> DeleteConfigurationAggregator

-- | <i>See:</i> <a>newDeleteConfigurationAggregatorResponse</a> smart
--   constructor.
data DeleteConfigurationAggregatorResponse
DeleteConfigurationAggregatorResponse' :: DeleteConfigurationAggregatorResponse

-- | Create a value of <a>DeleteConfigurationAggregatorResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationAggregatorResponse :: DeleteConfigurationAggregatorResponse

-- | The input for the DescribeConfigurationRecorderStatus action.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorderStatus</a> smart
--   constructor.
data DescribeConfigurationRecorderStatus
DescribeConfigurationRecorderStatus' :: Maybe [Text] -> DescribeConfigurationRecorderStatus

-- | Create a value of <a>DescribeConfigurationRecorderStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecorderNames:DescribeConfigurationRecorderStatus'</a>,
--   <a>describeConfigurationRecorderStatus_configurationRecorderNames</a>
--   - The name(s) of the configuration recorder. If the name is not
--   specified, the action returns the current status of all the
--   configuration recorders associated with the account.
newDescribeConfigurationRecorderStatus :: DescribeConfigurationRecorderStatus

-- | The output for the DescribeConfigurationRecorderStatus action, in JSON
--   format.
--   
--   <i>See:</i> <a>newDescribeConfigurationRecorderStatusResponse</a>
--   smart constructor.
data DescribeConfigurationRecorderStatusResponse
DescribeConfigurationRecorderStatusResponse' :: Maybe [ConfigurationRecorderStatus] -> Int -> DescribeConfigurationRecorderStatusResponse

-- | Create a value of <a>DescribeConfigurationRecorderStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:configurationRecordersStatus:DescribeConfigurationRecorderStatusResponse'</a>,
--   <a>describeConfigurationRecorderStatusResponse_configurationRecordersStatus</a>
--   - A list that contains status of the specified recorders.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRecorderStatusResponse'</a>,
--   <a>describeConfigurationRecorderStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRecorderStatusResponse :: Int -> DescribeConfigurationRecorderStatusResponse

-- | The input for the PutConfigurationRecorder action.
--   
--   <i>See:</i> <a>newPutConfigurationRecorder</a> smart constructor.
data PutConfigurationRecorder
PutConfigurationRecorder' :: ConfigurationRecorder -> PutConfigurationRecorder

-- | Create a value of <a>PutConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorder:PutConfigurationRecorder'</a>,
--   <a>putConfigurationRecorder_configurationRecorder</a> - The
--   configuration recorder object that records each configuration change
--   made to the resources.
newPutConfigurationRecorder :: ConfigurationRecorder -> PutConfigurationRecorder

-- | <i>See:</i> <a>newPutConfigurationRecorderResponse</a> smart
--   constructor.
data PutConfigurationRecorderResponse
PutConfigurationRecorderResponse' :: PutConfigurationRecorderResponse

-- | Create a value of <a>PutConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutConfigurationRecorderResponse :: PutConfigurationRecorderResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   identifies the resource for which to list the tags. Currently, the
--   supported resources are <tt>ConfigRule</tt>,
--   <tt>ConfigurationAggregator</tt> and <tt>AggregatorAuthorization</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | The request object for the <tt>DeleteConfigurationRecorder</tt>
--   action.
--   
--   <i>See:</i> <a>newDeleteConfigurationRecorder</a> smart constructor.
data DeleteConfigurationRecorder
DeleteConfigurationRecorder' :: Text -> DeleteConfigurationRecorder

-- | Create a value of <a>DeleteConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRecorderName:DeleteConfigurationRecorder'</a>,
--   <a>deleteConfigurationRecorder_configurationRecorderName</a> - The
--   name of the configuration recorder to be deleted. You can retrieve the
--   name of your configuration recorder by using the
--   <tt>DescribeConfigurationRecorders</tt> action.
newDeleteConfigurationRecorder :: Text -> DeleteConfigurationRecorder

-- | <i>See:</i> <a>newDeleteConfigurationRecorderResponse</a> smart
--   constructor.
data DeleteConfigurationRecorderResponse
DeleteConfigurationRecorderResponse' :: DeleteConfigurationRecorderResponse

-- | Create a value of <a>DeleteConfigurationRecorderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteConfigurationRecorderResponse :: DeleteConfigurationRecorderResponse

-- | <i>See:</i> <a>newGetConformancePackComplianceSummary</a> smart
--   constructor.
data GetConformancePackComplianceSummary
GetConformancePackComplianceSummary' :: Maybe Text -> Maybe Natural -> NonEmpty Text -> GetConformancePackComplianceSummary

-- | Create a value of <a>GetConformancePackComplianceSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_nextToken</a> - The nextToken
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_limit</a> - The maximum number
--   of conformance packs returned on each page.
--   
--   <a>$sel:conformancePackNames:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummary_conformancePackNames</a> -
--   Names of conformance packs.
newGetConformancePackComplianceSummary :: NonEmpty Text -> GetConformancePackComplianceSummary

-- | <i>See:</i> <a>newGetConformancePackComplianceSummaryResponse</a>
--   smart constructor.
data GetConformancePackComplianceSummaryResponse
GetConformancePackComplianceSummaryResponse' :: Maybe (NonEmpty ConformancePackComplianceSummary) -> Maybe Text -> Int -> GetConformancePackComplianceSummaryResponse

-- | Create a value of <a>GetConformancePackComplianceSummaryResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackComplianceSummaryList:GetConformancePackComplianceSummaryResponse'</a>,
--   <a>getConformancePackComplianceSummaryResponse_conformancePackComplianceSummaryList</a>
--   - A list of <tt>ConformancePackComplianceSummary</tt> objects.
--   
--   <a>$sel:nextToken:GetConformancePackComplianceSummary'</a>,
--   <a>getConformancePackComplianceSummaryResponse_nextToken</a> - The
--   nextToken string returned on a previous page that you use to get the
--   next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:GetConformancePackComplianceSummaryResponse'</a>,
--   <a>getConformancePackComplianceSummaryResponse_httpStatus</a> - The
--   response's http status code.
newGetConformancePackComplianceSummaryResponse :: Int -> GetConformancePackComplianceSummaryResponse

-- | <i>See:</i> <a>newGetComplianceSummaryByResourceType</a> smart
--   constructor.
data GetComplianceSummaryByResourceType
GetComplianceSummaryByResourceType' :: Maybe [Text] -> GetComplianceSummaryByResourceType

-- | Create a value of <a>GetComplianceSummaryByResourceType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceTypes:GetComplianceSummaryByResourceType'</a>,
--   <a>getComplianceSummaryByResourceType_resourceTypes</a> - Specify one
--   or more resource types to get the number of resources that are
--   compliant and the number that are noncompliant for each resource type.
--   
--   For this request, you can specify an Amazon Web Services resource type
--   such as <tt>AWS::EC2::Instance</tt>. You can specify that the resource
--   type is an Amazon Web Services account by specifying
--   <tt>AWS::::Account</tt>.
newGetComplianceSummaryByResourceType :: GetComplianceSummaryByResourceType

-- | <i>See:</i> <a>newGetComplianceSummaryByResourceTypeResponse</a> smart
--   constructor.
data GetComplianceSummaryByResourceTypeResponse
GetComplianceSummaryByResourceTypeResponse' :: Maybe [ComplianceSummaryByResourceType] -> Int -> GetComplianceSummaryByResourceTypeResponse

-- | Create a value of <a>GetComplianceSummaryByResourceTypeResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:complianceSummariesByResourceType:GetComplianceSummaryByResourceTypeResponse'</a>,
--   <a>getComplianceSummaryByResourceTypeResponse_complianceSummariesByResourceType</a>
--   - The number of resources that are compliant and the number that are
--   noncompliant. If one or more resource types were provided with the
--   request, the numbers are returned for each resource type. The maximum
--   number returned is 100.
--   
--   <a>$sel:httpStatus:GetComplianceSummaryByResourceTypeResponse'</a>,
--   <a>getComplianceSummaryByResourceTypeResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceSummaryByResourceTypeResponse :: Int -> GetComplianceSummaryByResourceTypeResponse

-- | The input for the DeliveryChannelStatus action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelStatus</a> smart constructor.
data DescribeDeliveryChannelStatus
DescribeDeliveryChannelStatus' :: Maybe [Text] -> DescribeDeliveryChannelStatus

-- | Create a value of <a>DescribeDeliveryChannelStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelNames:DescribeDeliveryChannelStatus'</a>,
--   <a>describeDeliveryChannelStatus_deliveryChannelNames</a> - A list of
--   delivery channel names.
newDescribeDeliveryChannelStatus :: DescribeDeliveryChannelStatus

-- | The output for the DescribeDeliveryChannelStatus action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelStatusResponse</a> smart
--   constructor.
data DescribeDeliveryChannelStatusResponse
DescribeDeliveryChannelStatusResponse' :: Maybe [DeliveryChannelStatus] -> Int -> DescribeDeliveryChannelStatusResponse

-- | Create a value of <a>DescribeDeliveryChannelStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:deliveryChannelsStatus:DescribeDeliveryChannelStatusResponse'</a>,
--   <a>describeDeliveryChannelStatusResponse_deliveryChannelsStatus</a> -
--   A list that contains the status of a specified delivery channel.
--   
--   <a>$sel:httpStatus:DescribeDeliveryChannelStatusResponse'</a>,
--   <a>describeDeliveryChannelStatusResponse_httpStatus</a> - The
--   response's http status code.
newDescribeDeliveryChannelStatusResponse :: Int -> DescribeDeliveryChannelStatusResponse

-- | The input for the PutDeliveryChannel action.
--   
--   <i>See:</i> <a>newPutDeliveryChannel</a> smart constructor.
data PutDeliveryChannel
PutDeliveryChannel' :: DeliveryChannel -> PutDeliveryChannel

-- | Create a value of <a>PutDeliveryChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannel:PutDeliveryChannel'</a>,
--   <a>putDeliveryChannel_deliveryChannel</a> - The configuration delivery
--   channel object that delivers the configuration information to an
--   Amazon S3 bucket and to an Amazon SNS topic.
newPutDeliveryChannel :: DeliveryChannel -> PutDeliveryChannel

-- | <i>See:</i> <a>newPutDeliveryChannelResponse</a> smart constructor.
data PutDeliveryChannelResponse
PutDeliveryChannelResponse' :: PutDeliveryChannelResponse

-- | Create a value of <a>PutDeliveryChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutDeliveryChannelResponse :: PutDeliveryChannelResponse

-- | <i>See:</i> <a>newGetComplianceDetailsByConfigRule</a> smart
--   constructor.
data GetComplianceDetailsByConfigRule
GetComplianceDetailsByConfigRule' :: Maybe [ComplianceType] -> Maybe Text -> Maybe Natural -> Text -> GetComplianceDetailsByConfigRule

-- | Create a value of <a>GetComplianceDetailsByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceTypes:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_complianceTypes</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_limit</a> - The maximum number of
--   evaluation results returned on each page. The default is 10. You
--   cannot specify a number greater than 100. If you specify 0, Config
--   uses the default.
--   
--   <a>$sel:configRuleName:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRule_configRuleName</a> - The name of
--   the Config rule for which you want compliance information.
newGetComplianceDetailsByConfigRule :: Text -> GetComplianceDetailsByConfigRule

-- | <i>See:</i> <a>newGetComplianceDetailsByConfigRuleResponse</a> smart
--   constructor.
data GetComplianceDetailsByConfigRuleResponse
GetComplianceDetailsByConfigRuleResponse' :: Maybe [EvaluationResult] -> Maybe Text -> Int -> GetComplianceDetailsByConfigRuleResponse

-- | Create a value of <a>GetComplianceDetailsByConfigRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:evaluationResults:GetComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_evaluationResults</a> -
--   Indicates whether the Amazon Web Services resource complies with the
--   specified Config rule.
--   
--   <a>$sel:nextToken:GetComplianceDetailsByConfigRule'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_nextToken</a> - The string
--   that you use in a subsequent request to get the next page of results
--   in a paginated response.
--   
--   <a>$sel:httpStatus:GetComplianceDetailsByConfigRuleResponse'</a>,
--   <a>getComplianceDetailsByConfigRuleResponse_httpStatus</a> - The
--   response's http status code.
newGetComplianceDetailsByConfigRuleResponse :: Int -> GetComplianceDetailsByConfigRuleResponse

-- | <i>See:</i> <a>newDeleteAggregationAuthorization</a> smart
--   constructor.
data DeleteAggregationAuthorization
DeleteAggregationAuthorization' :: Text -> Text -> DeleteAggregationAuthorization

-- | Create a value of <a>DeleteAggregationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizedAccountId:DeleteAggregationAuthorization'</a>,
--   <a>deleteAggregationAuthorization_authorizedAccountId</a> - The
--   12-digit account ID of the account authorized to aggregate data.
--   
--   <a>$sel:authorizedAwsRegion:DeleteAggregationAuthorization'</a>,
--   <a>deleteAggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
newDeleteAggregationAuthorization :: Text -> Text -> DeleteAggregationAuthorization

-- | <i>See:</i> <a>newDeleteAggregationAuthorizationResponse</a> smart
--   constructor.
data DeleteAggregationAuthorizationResponse
DeleteAggregationAuthorizationResponse' :: DeleteAggregationAuthorizationResponse

-- | Create a value of <a>DeleteAggregationAuthorizationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAggregationAuthorizationResponse :: DeleteAggregationAuthorizationResponse

-- | The input for the DeleteDeliveryChannel action. The action accepts the
--   following data, in JSON format.
--   
--   <i>See:</i> <a>newDeleteDeliveryChannel</a> smart constructor.
data DeleteDeliveryChannel
DeleteDeliveryChannel' :: Text -> DeleteDeliveryChannel

-- | Create a value of <a>DeleteDeliveryChannel</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelName:DeleteDeliveryChannel'</a>,
--   <a>deleteDeliveryChannel_deliveryChannelName</a> - The name of the
--   delivery channel to delete.
newDeleteDeliveryChannel :: Text -> DeleteDeliveryChannel

-- | <i>See:</i> <a>newDeleteDeliveryChannelResponse</a> smart constructor.
data DeleteDeliveryChannelResponse
DeleteDeliveryChannelResponse' :: DeleteDeliveryChannelResponse

-- | Create a value of <a>DeleteDeliveryChannelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeliveryChannelResponse :: DeleteDeliveryChannelResponse

-- | <i>See:</i> <a>newDeleteRemediationConfiguration</a> smart
--   constructor.
data DeleteRemediationConfiguration
DeleteRemediationConfiguration' :: Maybe Text -> Text -> DeleteRemediationConfiguration

-- | Create a value of <a>DeleteRemediationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:DeleteRemediationConfiguration'</a>,
--   <a>deleteRemediationConfiguration_resourceType</a> - The type of a
--   resource.
--   
--   <a>$sel:configRuleName:DeleteRemediationConfiguration'</a>,
--   <a>deleteRemediationConfiguration_configRuleName</a> - The name of the
--   Config rule for which you want to delete remediation configuration.
newDeleteRemediationConfiguration :: Text -> DeleteRemediationConfiguration

-- | <i>See:</i> <a>newDeleteRemediationConfigurationResponse</a> smart
--   constructor.
data DeleteRemediationConfigurationResponse
DeleteRemediationConfigurationResponse' :: Int -> DeleteRemediationConfigurationResponse

-- | Create a value of <a>DeleteRemediationConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRemediationConfigurationResponse'</a>,
--   <a>deleteRemediationConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteRemediationConfigurationResponse :: Int -> DeleteRemediationConfigurationResponse

-- | <i>See:</i> <a>newPutAggregationAuthorization</a> smart constructor.
data PutAggregationAuthorization
PutAggregationAuthorization' :: Maybe [Tag] -> Text -> Text -> PutAggregationAuthorization

-- | Create a value of <a>PutAggregationAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_tags</a> - An array of tag object.
--   
--   <a>$sel:authorizedAccountId:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_authorizedAccountId</a> - The 12-digit
--   account ID of the account authorized to aggregate data.
--   
--   <a>$sel:authorizedAwsRegion:PutAggregationAuthorization'</a>,
--   <a>putAggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
newPutAggregationAuthorization :: Text -> Text -> PutAggregationAuthorization

-- | <i>See:</i> <a>newPutAggregationAuthorizationResponse</a> smart
--   constructor.
data PutAggregationAuthorizationResponse
PutAggregationAuthorizationResponse' :: Maybe AggregationAuthorization -> Int -> PutAggregationAuthorizationResponse

-- | Create a value of <a>PutAggregationAuthorizationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregationAuthorization:PutAggregationAuthorizationResponse'</a>,
--   <a>putAggregationAuthorizationResponse_aggregationAuthorization</a> -
--   Returns an AggregationAuthorization object.
--   
--   <a>$sel:httpStatus:PutAggregationAuthorizationResponse'</a>,
--   <a>putAggregationAuthorizationResponse_httpStatus</a> - The response's
--   http status code.
newPutAggregationAuthorizationResponse :: Int -> PutAggregationAuthorizationResponse

-- | <i>See:</i> <a>newDescribeConfigurationAggregatorSourcesStatus</a>
--   smart constructor.
data DescribeConfigurationAggregatorSourcesStatus
DescribeConfigurationAggregatorSourcesStatus' :: Maybe Text -> Maybe Natural -> Maybe (NonEmpty AggregatedSourceStatusType) -> Text -> DescribeConfigurationAggregatorSourcesStatus

-- | Create a value of <a>DescribeConfigurationAggregatorSourcesStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_limit</a> - The
--   maximum number of AggregatorSourceStatus returned on each page. The
--   default is maximum. If you specify 0, Config uses the default.
--   
--   
--   <a>$sel:updateStatus:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_updateStatus</a> -
--   Filters the status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
--   
--   
--   <a>$sel:configurationAggregatorName:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatus_configurationAggregatorName</a>
--   - The name of the configuration aggregator.
newDescribeConfigurationAggregatorSourcesStatus :: Text -> DescribeConfigurationAggregatorSourcesStatus

-- | <i>See:</i>
--   <a>newDescribeConfigurationAggregatorSourcesStatusResponse</a> smart
--   constructor.
data DescribeConfigurationAggregatorSourcesStatusResponse
DescribeConfigurationAggregatorSourcesStatusResponse' :: Maybe [AggregatedSourceStatus] -> Maybe Text -> Int -> DescribeConfigurationAggregatorSourcesStatusResponse

-- | Create a value of
--   <a>DescribeConfigurationAggregatorSourcesStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregatedSourceStatusList:DescribeConfigurationAggregatorSourcesStatusResponse'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_aggregatedSourceStatusList</a>
--   - Returns an AggregatedSourceStatus object.
--   
--   <a>$sel:nextToken:DescribeConfigurationAggregatorSourcesStatus'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_nextToken</a>
--   - The <tt>nextToken</tt> string returned on a previous page that you
--   use to get the next page of results in a paginated response.
--   
--   
--   <a>$sel:httpStatus:DescribeConfigurationAggregatorSourcesStatusResponse'</a>,
--   <a>describeConfigurationAggregatorSourcesStatusResponse_httpStatus</a>
--   - The response's http status code.
newDescribeConfigurationAggregatorSourcesStatusResponse :: Int -> DescribeConfigurationAggregatorSourcesStatusResponse

-- | <i>See:</i> <a>newListDiscoveredResources</a> smart constructor.
data ListDiscoveredResources
ListDiscoveredResources' :: Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> ResourceType -> ListDiscoveredResources

-- | Create a value of <a>ListDiscoveredResources</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceIds</a> - The IDs of only those
--   resources that you want Config to list in the response. If you do not
--   specify this parameter, Config lists all resources of the specified
--   type that it has discovered.
--   
--   <a>$sel:resourceName:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceName</a> - The custom name of only
--   those resources that you want Config to list in the response. If you
--   do not specify this parameter, Config lists all resources of the
--   specified type that it has discovered.
--   
--   <a>$sel:includeDeletedResources:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_includeDeletedResources</a> - Specifies
--   whether Config includes deleted resources in the results. By default,
--   deleted resources are not included.
--   
--   <a>$sel:nextToken:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_nextToken</a> - The <tt>nextToken</tt>
--   string returned on a previous page that you use to get the next page
--   of results in a paginated response.
--   
--   <a>$sel:limit:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_limit</a> - The maximum number of resource
--   identifiers returned on each page. The default is 100. You cannot
--   specify a number greater than 100. If you specify 0, Config uses the
--   default.
--   
--   <a>$sel:resourceType:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResources_resourceType</a> - The type of resources
--   that you want Config to list in the response.
newListDiscoveredResources :: ResourceType -> ListDiscoveredResources

-- | <i>See:</i> <a>newListDiscoveredResourcesResponse</a> smart
--   constructor.
data ListDiscoveredResourcesResponse
ListDiscoveredResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Int -> ListDiscoveredResourcesResponse

-- | Create a value of <a>ListDiscoveredResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDiscoveredResources'</a>,
--   <a>listDiscoveredResourcesResponse_nextToken</a> - The string that you
--   use in a subsequent request to get the next page of results in a
--   paginated response.
--   
--   <a>$sel:resourceIdentifiers:ListDiscoveredResourcesResponse'</a>,
--   <a>listDiscoveredResourcesResponse_resourceIdentifiers</a> - The
--   details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
--   
--   <a>$sel:httpStatus:ListDiscoveredResourcesResponse'</a>,
--   <a>listDiscoveredResourcesResponse_httpStatus</a> - The response's
--   http status code.
newListDiscoveredResourcesResponse :: Int -> ListDiscoveredResourcesResponse

-- | <i>See:</i> <a>newDescribeRemediationConfigurations</a> smart
--   constructor.
data DescribeRemediationConfigurations
DescribeRemediationConfigurations' :: [Text] -> DescribeRemediationConfigurations

-- | Create a value of <a>DescribeRemediationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:DescribeRemediationConfigurations'</a>,
--   <a>describeRemediationConfigurations_configRuleNames</a> - A list of
--   Config rule names of remediation configurations for which you want
--   details.
newDescribeRemediationConfigurations :: DescribeRemediationConfigurations

-- | <i>See:</i> <a>newDescribeRemediationConfigurationsResponse</a> smart
--   constructor.
data DescribeRemediationConfigurationsResponse
DescribeRemediationConfigurationsResponse' :: Maybe [RemediationConfiguration] -> Int -> DescribeRemediationConfigurationsResponse

-- | Create a value of <a>DescribeRemediationConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:remediationConfigurations:DescribeRemediationConfigurationsResponse'</a>,
--   <a>describeRemediationConfigurationsResponse_remediationConfigurations</a>
--   - Returns a remediation configuration object.
--   
--   <a>$sel:httpStatus:DescribeRemediationConfigurationsResponse'</a>,
--   <a>describeRemediationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeRemediationConfigurationsResponse :: Int -> DescribeRemediationConfigurationsResponse

-- | The input for the DescribeDeliveryChannels action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannels</a> smart constructor.
data DescribeDeliveryChannels
DescribeDeliveryChannels' :: Maybe [Text] -> DescribeDeliveryChannels

-- | Create a value of <a>DescribeDeliveryChannels</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannelNames:DescribeDeliveryChannels'</a>,
--   <a>describeDeliveryChannels_deliveryChannelNames</a> - A list of
--   delivery channel names.
newDescribeDeliveryChannels :: DescribeDeliveryChannels

-- | The output for the DescribeDeliveryChannels action.
--   
--   <i>See:</i> <a>newDescribeDeliveryChannelsResponse</a> smart
--   constructor.
data DescribeDeliveryChannelsResponse
DescribeDeliveryChannelsResponse' :: Maybe [DeliveryChannel] -> Int -> DescribeDeliveryChannelsResponse

-- | Create a value of <a>DescribeDeliveryChannelsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryChannels:DescribeDeliveryChannelsResponse'</a>,
--   <a>describeDeliveryChannelsResponse_deliveryChannels</a> - A list that
--   contains the descriptions of the specified delivery channel.
--   
--   <a>$sel:httpStatus:DescribeDeliveryChannelsResponse'</a>,
--   <a>describeDeliveryChannelsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDeliveryChannelsResponse :: Int -> DescribeDeliveryChannelsResponse

-- | <i>See:</i> <a>newDescribeAggregationAuthorizations</a> smart
--   constructor.
data DescribeAggregationAuthorizations
DescribeAggregationAuthorizations' :: Maybe Text -> Maybe Natural -> DescribeAggregationAuthorizations

-- | Create a value of <a>DescribeAggregationAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizations_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:limit:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizations_limit</a> - The maximum number of
--   AggregationAuthorizations returned on each page. The default is
--   maximum. If you specify 0, Config uses the default.
newDescribeAggregationAuthorizations :: DescribeAggregationAuthorizations

-- | <i>See:</i> <a>newDescribeAggregationAuthorizationsResponse</a> smart
--   constructor.
data DescribeAggregationAuthorizationsResponse
DescribeAggregationAuthorizationsResponse' :: Maybe [AggregationAuthorization] -> Maybe Text -> Int -> DescribeAggregationAuthorizationsResponse

-- | Create a value of <a>DescribeAggregationAuthorizationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:aggregationAuthorizations:DescribeAggregationAuthorizationsResponse'</a>,
--   <a>describeAggregationAuthorizationsResponse_aggregationAuthorizations</a>
--   - Returns a list of authorizations granted to various aggregator
--   accounts and regions.
--   
--   <a>$sel:nextToken:DescribeAggregationAuthorizations'</a>,
--   <a>describeAggregationAuthorizationsResponse_nextToken</a> - The
--   <tt>nextToken</tt> string returned on a previous page that you use to
--   get the next page of results in a paginated response.
--   
--   <a>$sel:httpStatus:DescribeAggregationAuthorizationsResponse'</a>,
--   <a>describeAggregationAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAggregationAuthorizationsResponse :: Int -> DescribeAggregationAuthorizationsResponse
newtype AggregateConformancePackComplianceSummaryGroupKey
AggregateConformancePackComplianceSummaryGroupKey' :: Text -> AggregateConformancePackComplianceSummaryGroupKey
[fromAggregateConformancePackComplianceSummaryGroupKey] :: AggregateConformancePackComplianceSummaryGroupKey -> Text
pattern AggregateConformancePackComplianceSummaryGroupKey_ACCOUNT_ID :: AggregateConformancePackComplianceSummaryGroupKey
pattern AggregateConformancePackComplianceSummaryGroupKey_AWS_REGION :: AggregateConformancePackComplianceSummaryGroupKey
newtype AggregatedSourceStatusType
AggregatedSourceStatusType' :: Text -> AggregatedSourceStatusType
[fromAggregatedSourceStatusType] :: AggregatedSourceStatusType -> Text
pattern AggregatedSourceStatusType_FAILED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_OUTDATED :: AggregatedSourceStatusType
pattern AggregatedSourceStatusType_SUCCEEDED :: AggregatedSourceStatusType
newtype AggregatedSourceType
AggregatedSourceType' :: Text -> AggregatedSourceType
[fromAggregatedSourceType] :: AggregatedSourceType -> Text
pattern AggregatedSourceType_ACCOUNT :: AggregatedSourceType
pattern AggregatedSourceType_ORGANIZATION :: AggregatedSourceType
newtype ChronologicalOrder
ChronologicalOrder' :: Text -> ChronologicalOrder
[fromChronologicalOrder] :: ChronologicalOrder -> Text
pattern ChronologicalOrder_Forward :: ChronologicalOrder
pattern ChronologicalOrder_Reverse :: ChronologicalOrder
newtype ComplianceType
ComplianceType' :: Text -> ComplianceType
[fromComplianceType] :: ComplianceType -> Text
pattern ComplianceType_COMPLIANT :: ComplianceType
pattern ComplianceType_INSUFFICIENT_DATA :: ComplianceType
pattern ComplianceType_NON_COMPLIANT :: ComplianceType
pattern ComplianceType_NOT_APPLICABLE :: ComplianceType
newtype ConfigRuleComplianceSummaryGroupKey
ConfigRuleComplianceSummaryGroupKey' :: Text -> ConfigRuleComplianceSummaryGroupKey
[fromConfigRuleComplianceSummaryGroupKey] :: ConfigRuleComplianceSummaryGroupKey -> Text
pattern ConfigRuleComplianceSummaryGroupKey_ACCOUNT_ID :: ConfigRuleComplianceSummaryGroupKey
pattern ConfigRuleComplianceSummaryGroupKey_AWS_REGION :: ConfigRuleComplianceSummaryGroupKey
newtype ConfigRuleState
ConfigRuleState' :: Text -> ConfigRuleState
[fromConfigRuleState] :: ConfigRuleState -> Text
pattern ConfigRuleState_ACTIVE :: ConfigRuleState
pattern ConfigRuleState_DELETING :: ConfigRuleState
pattern ConfigRuleState_DELETING_RESULTS :: ConfigRuleState
pattern ConfigRuleState_EVALUATING :: ConfigRuleState
newtype ConfigurationItemStatus
ConfigurationItemStatus' :: Text -> ConfigurationItemStatus
[fromConfigurationItemStatus] :: ConfigurationItemStatus -> Text
pattern ConfigurationItemStatus_OK :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeleted :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDeletedNotRecorded :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceDiscovered :: ConfigurationItemStatus
pattern ConfigurationItemStatus_ResourceNotRecorded :: ConfigurationItemStatus
newtype ConformancePackComplianceType
ConformancePackComplianceType' :: Text -> ConformancePackComplianceType
[fromConformancePackComplianceType] :: ConformancePackComplianceType -> Text
pattern ConformancePackComplianceType_COMPLIANT :: ConformancePackComplianceType
pattern ConformancePackComplianceType_INSUFFICIENT_DATA :: ConformancePackComplianceType
pattern ConformancePackComplianceType_NON_COMPLIANT :: ConformancePackComplianceType
newtype ConformancePackState
ConformancePackState' :: Text -> ConformancePackState
[fromConformancePackState] :: ConformancePackState -> Text
pattern ConformancePackState_CREATE_COMPLETE :: ConformancePackState
pattern ConformancePackState_CREATE_FAILED :: ConformancePackState
pattern ConformancePackState_CREATE_IN_PROGRESS :: ConformancePackState
pattern ConformancePackState_DELETE_FAILED :: ConformancePackState
pattern ConformancePackState_DELETE_IN_PROGRESS :: ConformancePackState
newtype DeliveryStatus
DeliveryStatus' :: Text -> DeliveryStatus
[fromDeliveryStatus] :: DeliveryStatus -> Text
pattern DeliveryStatus_Failure :: DeliveryStatus
pattern DeliveryStatus_Not_Applicable :: DeliveryStatus
pattern DeliveryStatus_Success :: DeliveryStatus
newtype EventSource
EventSource' :: Text -> EventSource
[fromEventSource] :: EventSource -> Text
pattern EventSource_Aws_config :: EventSource
newtype MaximumExecutionFrequency
MaximumExecutionFrequency' :: Text -> MaximumExecutionFrequency
[fromMaximumExecutionFrequency] :: MaximumExecutionFrequency -> Text
pattern MaximumExecutionFrequency_One_Hour :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Six_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Three_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_Twelve_Hours :: MaximumExecutionFrequency
pattern MaximumExecutionFrequency_TwentyFour_Hours :: MaximumExecutionFrequency
newtype MemberAccountRuleStatus
MemberAccountRuleStatus' :: Text -> MemberAccountRuleStatus
[fromMemberAccountRuleStatus] :: MemberAccountRuleStatus -> Text
pattern MemberAccountRuleStatus_CREATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_CREATE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_DELETE_SUCCESSFUL :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_FAILED :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_IN_PROGRESS :: MemberAccountRuleStatus
pattern MemberAccountRuleStatus_UPDATE_SUCCESSFUL :: MemberAccountRuleStatus
newtype MessageType
MessageType' :: Text -> MessageType
[fromMessageType] :: MessageType -> Text
pattern MessageType_ConfigurationItemChangeNotification :: MessageType
pattern MessageType_ConfigurationSnapshotDeliveryCompleted :: MessageType
pattern MessageType_OversizedConfigurationItemChangeNotification :: MessageType
pattern MessageType_ScheduledNotification :: MessageType
newtype OrganizationConfigRuleTriggerType
OrganizationConfigRuleTriggerType' :: Text -> OrganizationConfigRuleTriggerType
[fromOrganizationConfigRuleTriggerType] :: OrganizationConfigRuleTriggerType -> Text
pattern OrganizationConfigRuleTriggerType_ConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_OversizedConfigurationItemChangeNotification :: OrganizationConfigRuleTriggerType
pattern OrganizationConfigRuleTriggerType_ScheduledNotification :: OrganizationConfigRuleTriggerType
newtype OrganizationResourceDetailedStatus
OrganizationResourceDetailedStatus' :: Text -> OrganizationResourceDetailedStatus
[fromOrganizationResourceDetailedStatus] :: OrganizationResourceDetailedStatus -> Text
pattern OrganizationResourceDetailedStatus_CREATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_CREATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_DELETE_SUCCESSFUL :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_FAILED :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_IN_PROGRESS :: OrganizationResourceDetailedStatus
pattern OrganizationResourceDetailedStatus_UPDATE_SUCCESSFUL :: OrganizationResourceDetailedStatus
newtype OrganizationResourceStatus
OrganizationResourceStatus' :: Text -> OrganizationResourceStatus
[fromOrganizationResourceStatus] :: OrganizationResourceStatus -> Text
pattern OrganizationResourceStatus_CREATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_CREATE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_DELETE_SUCCESSFUL :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_FAILED :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_IN_PROGRESS :: OrganizationResourceStatus
pattern OrganizationResourceStatus_UPDATE_SUCCESSFUL :: OrganizationResourceStatus
newtype OrganizationRuleStatus
OrganizationRuleStatus' :: Text -> OrganizationRuleStatus
[fromOrganizationRuleStatus] :: OrganizationRuleStatus -> Text
pattern OrganizationRuleStatus_CREATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_CREATE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_DELETE_SUCCESSFUL :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_FAILED :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_IN_PROGRESS :: OrganizationRuleStatus
pattern OrganizationRuleStatus_UPDATE_SUCCESSFUL :: OrganizationRuleStatus
newtype Owner
Owner' :: Text -> Owner
[fromOwner] :: Owner -> Text
pattern Owner_AWS :: Owner
pattern Owner_CUSTOM_LAMBDA :: Owner
newtype RecorderStatus
RecorderStatus' :: Text -> RecorderStatus
[fromRecorderStatus] :: RecorderStatus -> Text
pattern RecorderStatus_Failure :: RecorderStatus
pattern RecorderStatus_Pending :: RecorderStatus
pattern RecorderStatus_Success :: RecorderStatus
newtype RemediationExecutionState
RemediationExecutionState' :: Text -> RemediationExecutionState
[fromRemediationExecutionState] :: RemediationExecutionState -> Text
pattern RemediationExecutionState_FAILED :: RemediationExecutionState
pattern RemediationExecutionState_IN_PROGRESS :: RemediationExecutionState
pattern RemediationExecutionState_QUEUED :: RemediationExecutionState
pattern RemediationExecutionState_SUCCEEDED :: RemediationExecutionState
newtype RemediationExecutionStepState
RemediationExecutionStepState' :: Text -> RemediationExecutionStepState
[fromRemediationExecutionStepState] :: RemediationExecutionStepState -> Text
pattern RemediationExecutionStepState_FAILED :: RemediationExecutionStepState
pattern RemediationExecutionStepState_PENDING :: RemediationExecutionStepState
pattern RemediationExecutionStepState_SUCCEEDED :: RemediationExecutionStepState
newtype RemediationTargetType
RemediationTargetType' :: Text -> RemediationTargetType
[fromRemediationTargetType] :: RemediationTargetType -> Text
pattern RemediationTargetType_SSM_DOCUMENT :: RemediationTargetType
newtype ResourceCountGroupKey
ResourceCountGroupKey' :: Text -> ResourceCountGroupKey
[fromResourceCountGroupKey] :: ResourceCountGroupKey -> Text
pattern ResourceCountGroupKey_ACCOUNT_ID :: ResourceCountGroupKey
pattern ResourceCountGroupKey_AWS_REGION :: ResourceCountGroupKey
pattern ResourceCountGroupKey_RESOURCE_TYPE :: ResourceCountGroupKey
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_AWS__ACM__Certificate :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Api :: ResourceType
pattern ResourceType_AWS__ApiGatewayV2__Stage :: ResourceType
pattern ResourceType_AWS__ApiGateway__RestApi :: ResourceType
pattern ResourceType_AWS__ApiGateway__Stage :: ResourceType
pattern ResourceType_AWS__AutoScaling__AutoScalingGroup :: ResourceType
pattern ResourceType_AWS__AutoScaling__LaunchConfiguration :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScalingPolicy :: ResourceType
pattern ResourceType_AWS__AutoScaling__ScheduledAction :: ResourceType
pattern ResourceType_AWS__Backup__BackupPlan :: ResourceType
pattern ResourceType_AWS__Backup__BackupSelection :: ResourceType
pattern ResourceType_AWS__Backup__BackupVault :: ResourceType
pattern ResourceType_AWS__Backup__RecoveryPoint :: ResourceType
pattern ResourceType_AWS__CloudFormation__Stack :: ResourceType
pattern ResourceType_AWS__CloudFront__Distribution :: ResourceType
pattern ResourceType_AWS__CloudFront__StreamingDistribution :: ResourceType
pattern ResourceType_AWS__CloudTrail__Trail :: ResourceType
pattern ResourceType_AWS__CloudWatch__Alarm :: ResourceType
pattern ResourceType_AWS__CodeBuild__Project :: ResourceType
pattern ResourceType_AWS__CodePipeline__Pipeline :: ResourceType
pattern ResourceType_AWS__Config__ConformancePackCompliance :: ResourceType
pattern ResourceType_AWS__Config__ResourceCompliance :: ResourceType
pattern ResourceType_AWS__DynamoDB__Table :: ResourceType
pattern ResourceType_AWS__EC2__CustomerGateway :: ResourceType
pattern ResourceType_AWS__EC2__EIP :: ResourceType
pattern ResourceType_AWS__EC2__EgressOnlyInternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__FlowLog :: ResourceType
pattern ResourceType_AWS__EC2__Host :: ResourceType
pattern ResourceType_AWS__EC2__Instance :: ResourceType
pattern ResourceType_AWS__EC2__InternetGateway :: ResourceType
pattern ResourceType_AWS__EC2__NatGateway :: ResourceType
pattern ResourceType_AWS__EC2__NetworkAcl :: ResourceType
pattern ResourceType_AWS__EC2__NetworkInterface :: ResourceType
pattern ResourceType_AWS__EC2__RegisteredHAInstance :: ResourceType
pattern ResourceType_AWS__EC2__RouteTable :: ResourceType
pattern ResourceType_AWS__EC2__SecurityGroup :: ResourceType
pattern ResourceType_AWS__EC2__Subnet :: ResourceType
pattern ResourceType_AWS__EC2__VPC :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpoint :: ResourceType
pattern ResourceType_AWS__EC2__VPCEndpointService :: ResourceType
pattern ResourceType_AWS__EC2__VPCPeeringConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNConnection :: ResourceType
pattern ResourceType_AWS__EC2__VPNGateway :: ResourceType
pattern ResourceType_AWS__EC2__Volume :: ResourceType
pattern ResourceType_AWS__ECR__Repository :: ResourceType
pattern ResourceType_AWS__ECS__Cluster :: ResourceType
pattern ResourceType_AWS__ECS__Service :: ResourceType
pattern ResourceType_AWS__ECS__TaskDefinition :: ResourceType
pattern ResourceType_AWS__EFS__AccessPoint :: ResourceType
pattern ResourceType_AWS__EFS__FileSystem :: ResourceType
pattern ResourceType_AWS__EKS__Cluster :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Application :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__ApplicationVersion :: ResourceType
pattern ResourceType_AWS__ElasticBeanstalk__Environment :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancingV2__LoadBalancer :: ResourceType
pattern ResourceType_AWS__ElasticLoadBalancing__LoadBalancer :: ResourceType
pattern ResourceType_AWS__Elasticsearch__Domain :: ResourceType
pattern ResourceType_AWS__IAM__Group :: ResourceType
pattern ResourceType_AWS__IAM__Policy :: ResourceType
pattern ResourceType_AWS__IAM__Role :: ResourceType
pattern ResourceType_AWS__IAM__User :: ResourceType
pattern ResourceType_AWS__KMS__Key :: ResourceType
pattern ResourceType_AWS__Lambda__Function :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__Firewall :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__FirewallPolicy :: ResourceType
pattern ResourceType_AWS__NetworkFirewall__RuleGroup :: ResourceType
pattern ResourceType_AWS__OpenSearch__Domain :: ResourceType
pattern ResourceType_AWS__QLDB__Ledger :: ResourceType
pattern ResourceType_AWS__RDS__DBCluster :: ResourceType
pattern ResourceType_AWS__RDS__DBClusterSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBInstance :: ResourceType
pattern ResourceType_AWS__RDS__DBSecurityGroup :: ResourceType
pattern ResourceType_AWS__RDS__DBSnapshot :: ResourceType
pattern ResourceType_AWS__RDS__DBSubnetGroup :: ResourceType
pattern ResourceType_AWS__RDS__EventSubscription :: ResourceType
pattern ResourceType_AWS__Redshift__Cluster :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterParameterGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSecurityGroup :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSnapshot :: ResourceType
pattern ResourceType_AWS__Redshift__ClusterSubnetGroup :: ResourceType
pattern ResourceType_AWS__Redshift__EventSubscription :: ResourceType
pattern ResourceType_AWS__S3__AccountPublicAccessBlock :: ResourceType
pattern ResourceType_AWS__S3__Bucket :: ResourceType
pattern ResourceType_AWS__SNS__Topic :: ResourceType
pattern ResourceType_AWS__SQS__Queue :: ResourceType
pattern ResourceType_AWS__SSM__AssociationCompliance :: ResourceType
pattern ResourceType_AWS__SSM__FileData :: ResourceType
pattern ResourceType_AWS__SSM__ManagedInstanceInventory :: ResourceType
pattern ResourceType_AWS__SSM__PatchCompliance :: ResourceType
pattern ResourceType_AWS__SecretsManager__Secret :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__CloudFormationProvisionedProduct :: ResourceType
pattern ResourceType_AWS__ServiceCatalog__Portfolio :: ResourceType
pattern ResourceType_AWS__ShieldRegional__Protection :: ResourceType
pattern ResourceType_AWS__Shield__Protection :: ResourceType
pattern ResourceType_AWS__WAFRegional__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAFRegional__Rule :: ResourceType
pattern ResourceType_AWS__WAFRegional__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFRegional__WebACL :: ResourceType
pattern ResourceType_AWS__WAF__RateBasedRule :: ResourceType
pattern ResourceType_AWS__WAF__Rule :: ResourceType
pattern ResourceType_AWS__WAF__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAF__WebACL :: ResourceType
pattern ResourceType_AWS__WAFv2__IPSet :: ResourceType
pattern ResourceType_AWS__WAFv2__ManagedRuleSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RegexPatternSet :: ResourceType
pattern ResourceType_AWS__WAFv2__RuleGroup :: ResourceType
pattern ResourceType_AWS__WAFv2__WebACL :: ResourceType
pattern ResourceType_AWS__XRay__EncryptionConfig :: ResourceType
newtype ResourceValueType
ResourceValueType' :: Text -> ResourceValueType
[fromResourceValueType] :: ResourceValueType -> Text
pattern ResourceValueType_RESOURCE_ID :: ResourceValueType

-- | A collection of accounts and regions.
--   
--   <i>See:</i> <a>newAccountAggregationSource</a> smart constructor.
data AccountAggregationSource
AccountAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> AccountAggregationSource

-- | Create a value of <a>AccountAggregationSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_awsRegions</a> - The source regions being
--   aggregated.
--   
--   <a>$sel:allAwsRegions:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_allAwsRegions</a> - If true, aggregate
--   existing Config regions and future regions.
--   
--   <a>$sel:accountIds:AccountAggregationSource'</a>,
--   <a>accountAggregationSource_accountIds</a> - The 12-digit account ID
--   of the account being aggregated.
newAccountAggregationSource :: NonEmpty Text -> AccountAggregationSource

-- | Indicates whether an Config rule is compliant based on account ID,
--   region, compliance, and rule name.
--   
--   A rule is compliant if all of the resources that the rule evaluated
--   comply with it. It is noncompliant if any of these resources do not
--   comply.
--   
--   <i>See:</i> <a>newAggregateComplianceByConfigRule</a> smart
--   constructor.
data AggregateComplianceByConfigRule
AggregateComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConfigRule

-- | Create a value of <a>AggregateComplianceByConfigRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_compliance</a> - Indicates whether
--   an Amazon Web Services resource or Config rule is compliant and
--   provides the number of contributors that affect the compliance.
--   
--   <a>$sel:configRuleName:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_configRuleName</a> - The name of
--   the Config rule.
--   
--   <a>$sel:accountId:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConfigRule'</a>,
--   <a>aggregateComplianceByConfigRule_awsRegion</a> - The source region
--   from where the data is aggregated.
newAggregateComplianceByConfigRule :: AggregateComplianceByConfigRule

-- | Provides aggregate compliance of the conformance pack. Indicates
--   whether a conformance pack is compliant based on the name of the
--   conformance pack, account ID, and region.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateComplianceByConformancePack</a> smart
--   constructor.
data AggregateComplianceByConformancePack
AggregateComplianceByConformancePack' :: Maybe AggregateConformancePackCompliance -> Maybe Text -> Maybe Text -> Maybe Text -> AggregateComplianceByConformancePack

-- | Create a value of <a>AggregateComplianceByConformancePack</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_compliance</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:conformancePackName:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_conformancePackName</a> - The
--   name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_accountId</a> - The 12-digit
--   Amazon Web Services account ID of the source account.
--   
--   <a>$sel:awsRegion:AggregateComplianceByConformancePack'</a>,
--   <a>aggregateComplianceByConformancePack_awsRegion</a> - The source
--   Amazon Web Services Region from where the data is aggregated.
newAggregateComplianceByConformancePack :: AggregateComplianceByConformancePack

-- | Returns the number of compliant and noncompliant rules for one or more
--   accounts and regions in an aggregator.
--   
--   <i>See:</i> <a>newAggregateComplianceCount</a> smart constructor.
data AggregateComplianceCount
AggregateComplianceCount' :: Maybe Text -> Maybe ComplianceSummary -> AggregateComplianceCount

-- | Create a value of <a>AggregateComplianceCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_groupName</a> - The 12-digit account ID or
--   region based on the GroupByKey value.
--   
--   <a>$sel:complianceSummary:AggregateComplianceCount'</a>,
--   <a>aggregateComplianceCount_complianceSummary</a> - The number of
--   compliant and noncompliant Config rules.
newAggregateComplianceCount :: AggregateComplianceCount

-- | Provides the number of compliant and noncompliant rules within a
--   conformance pack. Also provides the compliance status of the
--   conformance pack and the total rule count which includes compliant
--   rules, noncompliant rules, and rules that cannot be evaluated due to
--   insufficient data.
--   
--   A conformance pack is compliant if all of the rules in a conformance
--   packs are compliant. It is noncompliant if any of the rules are not
--   compliant. The compliance status of a conformance pack is
--   INSUFFICIENT_DATA only if all rules within a conformance pack cannot
--   be evaluated due to insufficient data. If some of the rules in a
--   conformance pack are compliant but the compliance status of other
--   rules in that same conformance pack is INSUFFICIENT_DATA, the
--   conformance pack shows compliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackCompliance</a> smart
--   constructor.
data AggregateConformancePackCompliance
AggregateConformancePackCompliance' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe ConformancePackComplianceType -> AggregateConformancePackCompliance

-- | Create a value of <a>AggregateConformancePackCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_totalRuleCount</a> - Total
--   number of compliant rules, noncompliant rules, and the rules that do
--   not have any applicable resources to evaluate upon resulting in
--   insufficient data.
--   
--   <a>$sel:compliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_compliantRuleCount</a> - The
--   number of compliant Config Rules.
--   
--   <a>$sel:nonCompliantRuleCount:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_nonCompliantRuleCount</a> - The
--   number of noncompliant Config Rules.
--   
--   <a>$sel:complianceType:AggregateConformancePackCompliance'</a>,
--   <a>aggregateConformancePackCompliance_complianceType</a> - The
--   compliance status of the conformance pack.
newAggregateConformancePackCompliance :: AggregateConformancePackCompliance

-- | The number of conformance packs that are compliant and noncompliant.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceCount</a> smart
--   constructor.
data AggregateConformancePackComplianceCount
AggregateConformancePackComplianceCount' :: Maybe Int -> Maybe Int -> AggregateConformancePackComplianceCount

-- | Create a value of <a>AggregateConformancePackComplianceCount</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:compliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_compliantConformancePackCount</a>
--   - Number of compliant conformance packs.
--   
--   
--   <a>$sel:nonCompliantConformancePackCount:AggregateConformancePackComplianceCount'</a>,
--   <a>aggregateConformancePackComplianceCount_nonCompliantConformancePackCount</a>
--   - Number of noncompliant conformance packs.
newAggregateConformancePackComplianceCount :: AggregateConformancePackComplianceCount

-- | Filters the conformance packs based on an account ID, region,
--   compliance type, and the name of the conformance pack.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceFilters</a> smart
--   constructor.
data AggregateConformancePackComplianceFilters
AggregateConformancePackComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ConformancePackComplianceType -> Maybe Text -> AggregateConformancePackComplianceFilters

-- | Create a value of <a>AggregateConformancePackComplianceFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:conformancePackName:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_conformancePackName</a> -
--   The name of the conformance pack.
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_accountId</a> - The
--   12-digit Amazon Web Services account ID of the source account.
--   
--   <a>$sel:complianceType:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_complianceType</a> - The
--   compliance status of the conformance pack.
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceFilters'</a>,
--   <a>aggregateConformancePackComplianceFilters_awsRegion</a> - The
--   source Amazon Web Services Region from where the data is aggregated.
newAggregateConformancePackComplianceFilters :: AggregateConformancePackComplianceFilters

-- | Provides a summary of compliance based on either account ID or region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummary</a> smart
--   constructor.
data AggregateConformancePackComplianceSummary
AggregateConformancePackComplianceSummary' :: Maybe Text -> Maybe AggregateConformancePackComplianceCount -> AggregateConformancePackComplianceSummary

-- | Create a value of <a>AggregateConformancePackComplianceSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_groupName</a> - Groups
--   the result based on Amazon Web Services account ID or Amazon Web
--   Services Region.
--   
--   
--   <a>$sel:complianceSummary:AggregateConformancePackComplianceSummary'</a>,
--   <a>aggregateConformancePackComplianceSummary_complianceSummary</a> -
--   Returns an <tt>AggregateConformancePackComplianceCount</tt> object.
newAggregateConformancePackComplianceSummary :: AggregateConformancePackComplianceSummary

-- | Filters the results based on account ID and region.
--   
--   <i>See:</i> <a>newAggregateConformancePackComplianceSummaryFilters</a>
--   smart constructor.
data AggregateConformancePackComplianceSummaryFilters
AggregateConformancePackComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> AggregateConformancePackComplianceSummaryFilters

-- | Create a value of
--   <a>AggregateConformancePackComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:accountId:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_accountId</a> -
--   The 12-digit Amazon Web Services account ID of the source account.
--   
--   
--   <a>$sel:awsRegion:AggregateConformancePackComplianceSummaryFilters'</a>,
--   <a>aggregateConformancePackComplianceSummaryFilters_awsRegion</a> -
--   The source Amazon Web Services Region from where the data is
--   aggregated.
newAggregateConformancePackComplianceSummaryFilters :: AggregateConformancePackComplianceSummaryFilters

-- | The details of an Config evaluation for an account ID and region in an
--   aggregator. Provides the Amazon Web Services resource that was
--   evaluated, the compliance of the resource, related time stamps, and
--   supplementary information.
--   
--   <i>See:</i> <a>newAggregateEvaluationResult</a> smart constructor.
data AggregateEvaluationResult
AggregateEvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> AggregateEvaluationResult

-- | Create a value of <a>AggregateEvaluationResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_annotation</a> - Supplementary
--   information about how the agrregate evaluation determined the
--   compliance.
--   
--   <a>$sel:configRuleInvokedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_configRuleInvokedTime</a> - The time when
--   the Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_resultRecordedTime</a> - The time when
--   Config recorded the aggregate evaluation result.
--   
--   <a>$sel:accountId:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_complianceType</a> - The resource
--   compliance status.
--   
--   For the <tt>AggregationEvaluationResult</tt> data type, Config
--   supports only the <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   Config does not support the <tt>NOT_APPLICABLE</tt> and
--   <tt>INSUFFICIENT_DATA</tt> value.
--   
--   <a>$sel:awsRegion:AggregateEvaluationResult'</a>,
--   <a>aggregateEvaluationResult_awsRegion</a> - The source region from
--   where the data is aggregated.
newAggregateEvaluationResult :: AggregateEvaluationResult

-- | The details that identify a resource that is collected by Config
--   aggregator, including the resource type, ID, (if available) the custom
--   resource name, the source account, and source region.
--   
--   <i>See:</i> <a>newAggregateResourceIdentifier</a> smart constructor.
data AggregateResourceIdentifier
AggregateResourceIdentifier' :: Maybe Text -> Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | Create a value of <a>AggregateResourceIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceName</a> - The name of the
--   Amazon Web Services resource.
--   
--   <a>$sel:sourceAccountId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceAccountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:sourceRegion:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_sourceRegion</a> - The source region
--   where data is aggregated.
--   
--   <a>$sel:resourceId:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceId</a> - The ID of the Amazon
--   Web Services resource.
--   
--   <a>$sel:resourceType:AggregateResourceIdentifier'</a>,
--   <a>aggregateResourceIdentifier_resourceType</a> - The type of the
--   Amazon Web Services resource.
newAggregateResourceIdentifier :: Text -> Text -> Text -> ResourceType -> AggregateResourceIdentifier

-- | The current sync status between the source and the aggregator account.
--   
--   <i>See:</i> <a>newAggregatedSourceStatus</a> smart constructor.
data AggregatedSourceStatus
AggregatedSourceStatus' :: Maybe Text -> Maybe AggregatedSourceStatusType -> Maybe AggregatedSourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> AggregatedSourceStatus

-- | Create a value of <a>AggregatedSourceStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorCode</a> - The error code that
--   Config returned when the source account aggregation last failed.
--   
--   <a>$sel:lastUpdateStatus:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateStatus</a> - Filters the last
--   updated status type.
--   
--   <ul>
--   <li>Valid value FAILED indicates errors while moving data.</li>
--   <li>Valid value SUCCEEDED indicates the data was successfully
--   moved.</li>
--   <li>Valid value OUTDATED indicates the data is not the most
--   recent.</li>
--   </ul>
--   
--   <a>$sel:sourceType:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceType</a> - The source account or an
--   organization.
--   
--   <a>$sel:sourceId:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_sourceId</a> - The source account ID or an
--   organization.
--   
--   <a>$sel:lastErrorMessage:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastErrorMessage</a> - The message
--   indicating that the source account aggregation failed due to an error.
--   
--   <a>$sel:awsRegion:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_awsRegion</a> - The region authorized to
--   collect aggregated data.
--   
--   <a>$sel:lastUpdateTime:AggregatedSourceStatus'</a>,
--   <a>aggregatedSourceStatus_lastUpdateTime</a> - The time of the last
--   update.
newAggregatedSourceStatus :: AggregatedSourceStatus

-- | An object that represents the authorizations granted to aggregator
--   accounts and regions.
--   
--   <i>See:</i> <a>newAggregationAuthorization</a> smart constructor.
data AggregationAuthorization
AggregationAuthorization' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> AggregationAuthorization

-- | Create a value of <a>AggregationAuthorization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_creationTime</a> - The time stamp when the
--   aggregation authorization was created.
--   
--   <a>$sel:authorizedAwsRegion:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAwsRegion</a> - The region
--   authorized to collect aggregated data.
--   
--   <a>$sel:aggregationAuthorizationArn:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_aggregationAuthorizationArn</a> - The
--   Amazon Resource Name (ARN) of the aggregation object.
--   
--   <a>$sel:authorizedAccountId:AggregationAuthorization'</a>,
--   <a>aggregationAuthorization_authorizedAccountId</a> - The 12-digit
--   account ID of the account authorized to aggregate data.
newAggregationAuthorization :: AggregationAuthorization

-- | The detailed configuration of a specified resource.
--   
--   <i>See:</i> <a>newBaseConfigurationItem</a> smart constructor.
data BaseConfigurationItem
BaseConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BaseConfigurationItem

-- | Create a value of <a>BaseConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_arn</a> - The Amazon Resource Name (ARN) of
--   the resource.
--   
--   <a>$sel:resourceName:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_resourceCreationTime</a> - The time stamp
--   when the resource was created.
--   
--   <a>$sel:configurationItemStatus:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemStatus</a> - The
--   configuration item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configurationItemCaptureTime</a> - The time
--   when the configuration recording was initiated.
--   
--   <a>$sel:accountId:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_accountId</a> - The 12-digit Amazon Web
--   Services account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_supplementaryConfiguration</a> -
--   Configuration attributes that Config returns for certain resource
--   types to supplement the information returned for the configuration
--   parameter.
--   
--   <a>$sel:availabilityZone:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:version:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_version</a> - The version number of the
--   resource configuration.
--   
--   <a>$sel:awsRegion:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:configuration:BaseConfigurationItem'</a>,
--   <a>baseConfigurationItem_configuration</a> - The description of the
--   resource configuration.
newBaseConfigurationItem :: BaseConfigurationItem

-- | Indicates whether an Amazon Web Services resource or Config rule is
--   compliant and provides the number of contributors that affect the
--   compliance.
--   
--   <i>See:</i> <a>newCompliance</a> smart constructor.
data Compliance
Compliance' :: Maybe ComplianceContributorCount -> Maybe ComplianceType -> Compliance

-- | Create a value of <a>Compliance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceContributorCount:Compliance'</a>,
--   <a>compliance_complianceContributorCount</a> - The number of Amazon
--   Web Services resources or Config rules that cause a result of
--   <tt>NON_COMPLIANT</tt>, up to a maximum number.
--   
--   <a>$sel:complianceType:Compliance'</a>,
--   <a>compliance_complianceType</a> - Indicates whether an Amazon Web
--   Services resource or Config rule is compliant.
--   
--   A resource is compliant if it complies with all of the Config rules
--   that evaluate it. A resource is noncompliant if it does not comply
--   with one or more of these rules.
--   
--   A rule is compliant if all of the resources that the rule evaluates
--   comply with it. A rule is noncompliant if any of these resources do
--   not comply.
--   
--   Config returns the <tt>INSUFFICIENT_DATA</tt> value when no evaluation
--   results are available for the Amazon Web Services resource or Config
--   rule.
--   
--   For the <tt>Compliance</tt> data type, Config supports only
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt> values. Config does not support the
--   <tt>NOT_APPLICABLE</tt> value for the <tt>Compliance</tt> data type.
newCompliance :: Compliance

-- | Indicates whether an Config rule is compliant. A rule is compliant if
--   all of the resources that the rule evaluated comply with it. A rule is
--   noncompliant if any of these resources do not comply.
--   
--   <i>See:</i> <a>newComplianceByConfigRule</a> smart constructor.
data ComplianceByConfigRule
ComplianceByConfigRule' :: Maybe Compliance -> Maybe Text -> ComplianceByConfigRule

-- | Create a value of <a>ComplianceByConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compliance:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_compliance</a> - Indicates whether the
--   Config rule is compliant.
--   
--   <a>$sel:configRuleName:ComplianceByConfigRule'</a>,
--   <a>complianceByConfigRule_configRuleName</a> - The name of the Config
--   rule.
newComplianceByConfigRule :: ComplianceByConfigRule

-- | Indicates whether an Amazon Web Services resource that is evaluated
--   according to one or more Config rules is compliant. A resource is
--   compliant if it complies with all of the rules that evaluate it. A
--   resource is noncompliant if it does not comply with one or more of
--   these rules.
--   
--   <i>See:</i> <a>newComplianceByResource</a> smart constructor.
data ComplianceByResource
ComplianceByResource' :: Maybe Text -> Maybe Text -> Maybe Compliance -> ComplianceByResource

-- | Create a value of <a>ComplianceByResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:resourceType:ComplianceByResource'</a>,
--   <a>complianceByResource_resourceType</a> - The type of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:compliance:ComplianceByResource'</a>,
--   <a>complianceByResource_compliance</a> - Indicates whether the Amazon
--   Web Services resource complies with all of the Config rules that
--   evaluated it.
newComplianceByResource :: ComplianceByResource

-- | The number of Amazon Web Services resources or Config rules
--   responsible for the current compliance of the item, up to a maximum
--   number.
--   
--   <i>See:</i> <a>newComplianceContributorCount</a> smart constructor.
data ComplianceContributorCount
ComplianceContributorCount' :: Maybe Int -> Maybe Bool -> ComplianceContributorCount

-- | Create a value of <a>ComplianceContributorCount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cappedCount:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_cappedCount</a> - The number of Amazon
--   Web Services resources or Config rules responsible for the current
--   compliance of the item.
--   
--   <a>$sel:capExceeded:ComplianceContributorCount'</a>,
--   <a>complianceContributorCount_capExceeded</a> - Indicates whether the
--   maximum count is reached.
newComplianceContributorCount :: ComplianceContributorCount

-- | The number of Config rules or Amazon Web Services resources that are
--   compliant and noncompliant.
--   
--   <i>See:</i> <a>newComplianceSummary</a> smart constructor.
data ComplianceSummary
ComplianceSummary' :: Maybe POSIX -> Maybe ComplianceContributorCount -> Maybe ComplianceContributorCount -> ComplianceSummary

-- | Create a value of <a>ComplianceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceSummaryTimestamp:ComplianceSummary'</a>,
--   <a>complianceSummary_complianceSummaryTimestamp</a> - The time that
--   Config created the compliance summary.
--   
--   <a>$sel:compliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_compliantResourceCount</a> - The number of Config
--   rules or Amazon Web Services resources that are compliant, up to a
--   maximum of 25 for rules and 100 for resources.
--   
--   <a>$sel:nonCompliantResourceCount:ComplianceSummary'</a>,
--   <a>complianceSummary_nonCompliantResourceCount</a> - The number of
--   Config rules or Amazon Web Services resources that are noncompliant,
--   up to a maximum of 25 for rules and 100 for resources.
newComplianceSummary :: ComplianceSummary

-- | The number of Amazon Web Services resources of a specific type that
--   are compliant or noncompliant, up to a maximum of 100 for each.
--   
--   <i>See:</i> <a>newComplianceSummaryByResourceType</a> smart
--   constructor.
data ComplianceSummaryByResourceType
ComplianceSummaryByResourceType' :: Maybe Text -> Maybe ComplianceSummary -> ComplianceSummaryByResourceType

-- | Create a value of <a>ComplianceSummaryByResourceType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_resourceType</a> - The type of
--   Amazon Web Services resource.
--   
--   <a>$sel:complianceSummary:ComplianceSummaryByResourceType'</a>,
--   <a>complianceSummaryByResourceType_complianceSummary</a> - The number
--   of Amazon Web Services resources that are compliant or noncompliant,
--   up to a maximum of 100 for each.
newComplianceSummaryByResourceType :: ComplianceSummaryByResourceType

-- | Provides status of the delivery of the snapshot or the configuration
--   history to the specified Amazon S3 bucket. Also provides the status of
--   notifications about the Amazon S3 delivery to the specified Amazon SNS
--   topic.
--   
--   <i>See:</i> <a>newConfigExportDeliveryInfo</a> smart constructor.
data ConfigExportDeliveryInfo
ConfigExportDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> Maybe POSIX -> ConfigExportDeliveryInfo

-- | Create a value of <a>ConfigExportDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastAttemptTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastAttemptTime</a> - The time of the last
--   attempted delivery.
--   
--   <a>$sel:lastSuccessfulTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastSuccessfulTime</a> - The time of the
--   last successful delivery.
--   
--   <a>$sel:lastStatus:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <a>$sel:lastErrorMessage:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
--   
--   <a>$sel:nextDeliveryTime:ConfigExportDeliveryInfo'</a>,
--   <a>configExportDeliveryInfo_nextDeliveryTime</a> - The time that the
--   next delivery occurs.
newConfigExportDeliveryInfo :: ConfigExportDeliveryInfo

-- | An Config rule represents an Lambda function that you create for a
--   custom rule or a predefined function for an Config managed rule. The
--   function evaluates configuration items to assess whether your Amazon
--   Web Services resources comply with your desired configurations. This
--   function can run when Config detects a configuration change to an
--   Amazon Web Services resource and at a periodic frequency that you
--   choose (for example, every 24 hours).
--   
--   You can use the Amazon Web Services CLI and Amazon Web Services SDKs
--   if you want to create a rule that triggers evaluations for your
--   resources when Config delivers the configuration snapshot. For more
--   information, see ConfigSnapshotDeliveryProperties.
--   
--   For more information about developing and using Config rules, see
--   <a>Evaluating Amazon Web Services resource Configurations with
--   Config</a> in the <i>Config Developer Guide</i>.
--   
--   <i>See:</i> <a>newConfigRule</a> smart constructor.
data ConfigRule
ConfigRule' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe Scope -> Maybe ConfigRuleState -> Maybe Text -> Maybe Text -> Source -> ConfigRule

-- | Create a value of <a>ConfigRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:ConfigRule'</a>,
--   <a>configRule_inputParameters</a> - A string, in JSON format, that is
--   passed to the Config rule Lambda function.
--   
--   <a>$sel:configRuleName:ConfigRule'</a>,
--   <a>configRule_configRuleName</a> - The name that you assign to the
--   Config rule. The name is required if you are adding a new rule.
--   
--   <a>$sel:createdBy:ConfigRule'</a>, <a>configRule_createdBy</a> -
--   Service principal name of the service that created the rule.
--   
--   The field is populated only if the service linked rule is created by a
--   service. The field is empty if you create your own rule.
--   
--   <a>$sel:maximumExecutionFrequency:ConfigRule'</a>,
--   <a>configRule_maximumExecutionFrequency</a> - The maximum frequency
--   with which Config runs evaluations for a rule. You can specify a value
--   for <tt>MaximumExecutionFrequency</tt> when:
--   
--   <ul>
--   <li>You are using an Config managed rule that is triggered at a
--   periodic frequency.</li>
--   <li>Your custom rule is triggered when Config delivers the
--   configuration snapshot. For more information, see
--   ConfigSnapshotDeliveryProperties.</li>
--   </ul>
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:configRuleId:ConfigRule'</a>, <a>configRule_configRuleId</a> -
--   The ID of the Config rule.
--   
--   <a>$sel:scope:ConfigRule'</a>, <a>configRule_scope</a> - Defines which
--   resources can trigger an evaluation for the rule. The scope can
--   include one or more resource types, a combination of one resource type
--   and one resource ID, or a combination of a tag key and value. Specify
--   a scope to constrain the resources that can trigger an evaluation for
--   the rule. If you do not specify a scope, evaluations are triggered
--   when any resource in the recording group changes.
--   
--   The scope can be empty.
--   
--   <a>$sel:configRuleState:ConfigRule'</a>,
--   <a>configRule_configRuleState</a> - Indicates whether the Config rule
--   is active or is currently being deleted by Config. It can also
--   indicate the evaluation status for the Config rule.
--   
--   Config sets the state of the rule to <tt>EVALUATING</tt> temporarily
--   after you use the <tt>StartConfigRulesEvaluation</tt> request to
--   evaluate your resources against the Config rule.
--   
--   Config sets the state of the rule to <tt>DELETING_RESULTS</tt>
--   temporarily after you use the <tt>DeleteEvaluationResults</tt> request
--   to delete the current evaluation results for the Config rule.
--   
--   Config temporarily sets the state of a rule to <tt>DELETING</tt> after
--   you use the <tt>DeleteConfigRule</tt> request to delete the rule.
--   After Config deletes the rule, the rule and all of its evaluations are
--   erased and are no longer available.
--   
--   <a>$sel:description:ConfigRule'</a>, <a>configRule_description</a> -
--   The description that you provide for the Config rule.
--   
--   <a>$sel:configRuleArn:ConfigRule'</a>, <a>configRule_configRuleArn</a>
--   - The Amazon Resource Name (ARN) of the Config rule.
--   
--   <a>$sel:source:ConfigRule'</a>, <a>configRule_source</a> - Provides
--   the rule owner (Amazon Web Services or customer), the rule identifier,
--   and the notifications that cause the function to evaluate your Amazon
--   Web Services resources.
newConfigRule :: Source -> ConfigRule

-- | Filters the compliance results based on account ID, region, compliance
--   type, and rule name.
--   
--   <i>See:</i> <a>newConfigRuleComplianceFilters</a> smart constructor.
data ConfigRuleComplianceFilters
ConfigRuleComplianceFilters' :: Maybe Text -> Maybe Text -> Maybe ComplianceType -> Maybe Text -> ConfigRuleComplianceFilters

-- | Create a value of <a>ConfigRuleComplianceFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleName:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:accountId:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_accountId</a> - The 12-digit account ID
--   of the source account.
--   
--   <a>$sel:complianceType:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_complianceType</a> - The rule
--   compliance status.
--   
--   For the <tt>ConfigRuleComplianceFilters</tt> data type, Config
--   supports only <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>. Config
--   does not support the <tt>NOT_APPLICABLE</tt> and the
--   <tt>INSUFFICIENT_DATA</tt> values.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceFilters'</a>,
--   <a>configRuleComplianceFilters_awsRegion</a> - The source region where
--   the data is aggregated.
newConfigRuleComplianceFilters :: ConfigRuleComplianceFilters

-- | Filters the results based on the account IDs and regions.
--   
--   <i>See:</i> <a>newConfigRuleComplianceSummaryFilters</a> smart
--   constructor.
data ConfigRuleComplianceSummaryFilters
ConfigRuleComplianceSummaryFilters' :: Maybe Text -> Maybe Text -> ConfigRuleComplianceSummaryFilters

-- | Create a value of <a>ConfigRuleComplianceSummaryFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_accountId</a> - The 12-digit
--   account ID of the source account.
--   
--   <a>$sel:awsRegion:ConfigRuleComplianceSummaryFilters'</a>,
--   <a>configRuleComplianceSummaryFilters_awsRegion</a> - The source
--   region where the data is aggregated.
newConfigRuleComplianceSummaryFilters :: ConfigRuleComplianceSummaryFilters

-- | Status information for your Config managed rules. The status includes
--   information such as the last time the rule ran, the last time it
--   failed, and the related error for the last failure.
--   
--   This action does not return status information about custom Config
--   rules.
--   
--   <i>See:</i> <a>newConfigRuleEvaluationStatus</a> smart constructor.
data ConfigRuleEvaluationStatus
ConfigRuleEvaluationStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Bool -> Maybe POSIX -> Maybe Text -> ConfigRuleEvaluationStatus

-- | Create a value of <a>ConfigRuleEvaluationStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorCode</a> - The error code that
--   Config returned when the rule last failed.
--   
--   <a>$sel:lastFailedEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedEvaluationTime</a> - The time
--   that Config last failed to evaluate your Amazon Web Services resources
--   against the rule.
--   
--   <a>$sel:firstActivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstActivatedTime</a> - The time that
--   you first activated the Config rule.
--   
--   <a>$sel:lastSuccessfulEvaluationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulEvaluationTime</a> - The
--   time that Config last successfully evaluated your Amazon Web Services
--   resources against the rule.
--   
--   <a>$sel:lastDeactivatedTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastDeactivatedTime</a> - The time that
--   you last turned off the Config rule.
--   
--   <a>$sel:configRuleName:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:lastErrorMessage:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastErrorMessage</a> - The error message
--   that Config returned when the rule last failed.
--   
--   <a>$sel:configRuleId:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleId</a> - The ID of the Config
--   rule.
--   
--   <a>$sel:lastFailedInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastFailedInvocationTime</a> - The time
--   that Config last failed to invoke the Config rule to evaluate your
--   Amazon Web Services resources.
--   
--   <a>$sel:firstEvaluationStarted:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_firstEvaluationStarted</a> - Indicates
--   whether Config has evaluated your resources against the rule at least
--   once.
--   
--   <ul>
--   <li><tt>true</tt> - Config has evaluated your Amazon Web Services
--   resources against the rule at least once.</li>
--   <li><tt>false</tt> - Config has not once finished evaluating your
--   Amazon Web Services resources against the rule.</li>
--   </ul>
--   
--   <a>$sel:lastSuccessfulInvocationTime:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_lastSuccessfulInvocationTime</a> - The
--   time that Config last successfully invoked the Config rule to evaluate
--   your Amazon Web Services resources.
--   
--   <a>$sel:configRuleArn:ConfigRuleEvaluationStatus'</a>,
--   <a>configRuleEvaluationStatus_configRuleArn</a> - The Amazon Resource
--   Name (ARN) of the Config rule.
newConfigRuleEvaluationStatus :: ConfigRuleEvaluationStatus

-- | Provides options for how often Config delivers configuration snapshots
--   to the Amazon S3 bucket in your delivery channel.
--   
--   The frequency for a rule that triggers evaluations for your resources
--   when Config delivers the configuration snapshot is set by one of two
--   values, depending on which is less frequent:
--   
--   <ul>
--   <li>The value for the <tt>deliveryFrequency</tt> parameter within the
--   delivery channel configuration, which sets how often Config delivers
--   configuration snapshots. This value also sets how often Config invokes
--   evaluations for Config rules.</li>
--   <li>The value for the <tt>MaximumExecutionFrequency</tt> parameter,
--   which sets the maximum frequency with which Config invokes evaluations
--   for the rule. For more information, see ConfigRule.</li>
--   </ul>
--   
--   If the <tt>deliveryFrequency</tt> value is less frequent than the
--   <tt>MaximumExecutionFrequency</tt> value for a rule, Config invokes
--   the rule only as often as the <tt>deliveryFrequency</tt> value.
--   
--   <ol>
--   <li>For example, you want your rule to run evaluations when Config
--   delivers the configuration snapshot.</li>
--   <li>You specify the <tt>MaximumExecutionFrequency</tt> value for
--   <tt>Six_Hours</tt>.</li>
--   <li>You then specify the delivery channel <tt>deliveryFrequency</tt>
--   value for <tt>TwentyFour_Hours</tt>.</li>
--   <li>Because the value for <tt>deliveryFrequency</tt> is less frequent
--   than <tt>MaximumExecutionFrequency</tt>, Config invokes evaluations
--   for the rule every 24 hours.</li>
--   </ol>
--   
--   You should set the <tt>MaximumExecutionFrequency</tt> value to be at
--   least as frequent as the <tt>deliveryFrequency</tt> value. You can
--   view the <tt>deliveryFrequency</tt> value by using the
--   <tt>DescribeDeliveryChannnels</tt> action.
--   
--   To update the <tt>deliveryFrequency</tt> with which Config delivers
--   your configuration snapshots, use the <tt>PutDeliveryChannel</tt>
--   action.
--   
--   <i>See:</i> <a>newConfigSnapshotDeliveryProperties</a> smart
--   constructor.
data ConfigSnapshotDeliveryProperties
ConfigSnapshotDeliveryProperties' :: Maybe MaximumExecutionFrequency -> ConfigSnapshotDeliveryProperties

-- | Create a value of <a>ConfigSnapshotDeliveryProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryFrequency:ConfigSnapshotDeliveryProperties'</a>,
--   <a>configSnapshotDeliveryProperties_deliveryFrequency</a> - The
--   frequency with which Config delivers configuration snapshots.
newConfigSnapshotDeliveryProperties :: ConfigSnapshotDeliveryProperties

-- | A list that contains the status of the delivery of the configuration
--   stream notification to the Amazon SNS topic.
--   
--   <i>See:</i> <a>newConfigStreamDeliveryInfo</a> smart constructor.
data ConfigStreamDeliveryInfo
ConfigStreamDeliveryInfo' :: Maybe Text -> Maybe POSIX -> Maybe DeliveryStatus -> Maybe Text -> ConfigStreamDeliveryInfo

-- | Create a value of <a>ConfigStreamDeliveryInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorCode</a> - The error code from
--   the last attempted delivery.
--   
--   <a>$sel:lastStatusChangeTime:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatusChangeTime</a> - The time from
--   the last status change.
--   
--   <a>$sel:lastStatus:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastStatus</a> - Status of the last
--   attempted delivery.
--   
--   <b>Note</b> Providing an SNS topic on a <a>DeliveryChannel</a> for
--   Config is optional. If the SNS delivery is turned off, the last status
--   will be <b>Not_Applicable</b>.
--   
--   <a>$sel:lastErrorMessage:ConfigStreamDeliveryInfo'</a>,
--   <a>configStreamDeliveryInfo_lastErrorMessage</a> - The error message
--   from the last attempted delivery.
newConfigStreamDeliveryInfo :: ConfigStreamDeliveryInfo

-- | The details about the configuration aggregator, including information
--   about source accounts, regions, and metadata of the aggregator.
--   
--   <i>See:</i> <a>newConfigurationAggregator</a> smart constructor.
data ConfigurationAggregator
ConfigurationAggregator' :: Maybe Text -> Maybe POSIX -> Maybe OrganizationAggregationSource -> Maybe POSIX -> Maybe [AccountAggregationSource] -> Maybe Text -> Maybe Text -> ConfigurationAggregator

-- | Create a value of <a>ConfigurationAggregator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationAggregatorArn:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorArn</a> - The Amazon
--   Resource Name (ARN) of the aggregator.
--   
--   <a>$sel:creationTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_creationTime</a> - The time stamp when the
--   configuration aggregator was created.
--   
--   <a>$sel:organizationAggregationSource:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_organizationAggregationSource</a> -
--   Provides an organization and list of regions to be aggregated.
--   
--   <a>$sel:lastUpdatedTime:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_lastUpdatedTime</a> - The time of the last
--   update.
--   
--   <a>$sel:accountAggregationSources:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_accountAggregationSources</a> - Provides a
--   list of source accounts and regions to be aggregated.
--   
--   <a>$sel:createdBy:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_createdBy</a> - Amazon Web Services service
--   that created the configuration aggregator.
--   
--   <a>$sel:configurationAggregatorName:ConfigurationAggregator'</a>,
--   <a>configurationAggregator_configurationAggregatorName</a> - The name
--   of the aggregator.
newConfigurationAggregator :: ConfigurationAggregator

-- | A list that contains detailed configurations of a specified resource.
--   
--   <i>See:</i> <a>newConfigurationItem</a> smart constructor.
data ConfigurationItem
ConfigurationItem' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ConfigurationItemStatus -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [Relationship] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ConfigurationItem

-- | Create a value of <a>ConfigurationItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ConfigurationItem'</a>,
--   <a>configurationItem_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ConfigurationItem'</a>,
--   <a>configurationItem_resourceType</a> - The type of Amazon Web
--   Services resource.
--   
--   <a>$sel:configurationStateId:ConfigurationItem'</a>,
--   <a>configurationItem_configurationStateId</a> - An identifier that
--   indicates the ordering of the configuration items of a resource.
--   
--   <a>$sel:arn:ConfigurationItem'</a>, <a>configurationItem_arn</a> -
--   Amazon Resource Name (ARN) associated with the resource.
--   
--   <a>$sel:resourceName:ConfigurationItem'</a>,
--   <a>configurationItem_resourceName</a> - The custom name of the
--   resource, if available.
--   
--   <a>$sel:resourceCreationTime:ConfigurationItem'</a>,
--   <a>configurationItem_resourceCreationTime</a> - The time stamp when
--   the resource was created.
--   
--   <a>$sel:configurationItemStatus:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemStatus</a> - The configuration
--   item status. The valid values are:
--   
--   <ul>
--   <li>OK – The resource configuration has been updated</li>
--   <li>ResourceDiscovered – The resource was newly discovered</li>
--   <li>ResourceNotRecorded – The resource was discovered but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   <li>ResourceDeleted – The resource was deleted</li>
--   <li>ResourceDeletedNotRecorded – The resource was deleted but its
--   configuration was not recorded since the recorder excludes the
--   recording of resources of this type</li>
--   </ul>
--   
--   The CIs do not incur any cost.
--   
--   <a>$sel:configurationItemCaptureTime:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemCaptureTime</a> - The time when
--   the configuration recording was initiated.
--   
--   <a>$sel:accountId:ConfigurationItem'</a>,
--   <a>configurationItem_accountId</a> - The 12-digit Amazon Web Services
--   account ID associated with the resource.
--   
--   <a>$sel:supplementaryConfiguration:ConfigurationItem'</a>,
--   <a>configurationItem_supplementaryConfiguration</a> - Configuration
--   attributes that Config returns for certain resource types to
--   supplement the information returned for the <tt>configuration</tt>
--   parameter.
--   
--   <a>$sel:availabilityZone:ConfigurationItem'</a>,
--   <a>configurationItem_availabilityZone</a> - The Availability Zone
--   associated with the resource.
--   
--   <a>$sel:relationships:ConfigurationItem'</a>,
--   <a>configurationItem_relationships</a> - A list of related Amazon Web
--   Services resources.
--   
--   <a>$sel:version:ConfigurationItem'</a>,
--   <a>configurationItem_version</a> - The version number of the resource
--   configuration.
--   
--   <a>$sel:awsRegion:ConfigurationItem'</a>,
--   <a>configurationItem_awsRegion</a> - The region where the resource
--   resides.
--   
--   <a>$sel:relatedEvents:ConfigurationItem'</a>,
--   <a>configurationItem_relatedEvents</a> - A list of CloudTrail event
--   IDs.
--   
--   A populated field indicates that the current configuration was
--   initiated by the events recorded in the CloudTrail log. For more
--   information about CloudTrail, see <a>What Is CloudTrail</a>.
--   
--   An empty field indicates that the current configuration was not
--   initiated by any event. As of Version 1.3, the relatedEvents field is
--   empty. You can access the <a>LookupEvents API</a> in the <i>CloudTrail
--   API Reference</i> to retrieve the events for the resource.
--   
--   <a>$sel:configuration:ConfigurationItem'</a>,
--   <a>configurationItem_configuration</a> - The description of the
--   resource configuration.
--   
--   <a>$sel:configurationItemMD5Hash:ConfigurationItem'</a>,
--   <a>configurationItem_configurationItemMD5Hash</a> - Unique MD5 hash
--   that represents the configuration item's state.
--   
--   You can use MD5 hash to compare the states of two or more
--   configuration items that are associated with the same resource.
--   
--   <a>$sel:tags:ConfigurationItem'</a>, <a>configurationItem_tags</a> - A
--   mapping of key value tags associated with the resource.
newConfigurationItem :: ConfigurationItem

-- | An object that represents the recording of configuration changes of an
--   Amazon Web Services resource.
--   
--   <i>See:</i> <a>newConfigurationRecorder</a> smart constructor.
data ConfigurationRecorder
ConfigurationRecorder' :: Maybe Text -> Maybe RecordingGroup -> Maybe Text -> ConfigurationRecorder

-- | Create a value of <a>ConfigurationRecorder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_name</a> - The name of the recorder. By
--   default, Config automatically assigns the name "default" when creating
--   the configuration recorder. You cannot change the assigned name.
--   
--   <a>$sel:recordingGroup:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_recordingGroup</a> - Specifies the types of
--   Amazon Web Services resources for which Config records configuration
--   changes.
--   
--   <a>$sel:roleARN:ConfigurationRecorder'</a>,
--   <a>configurationRecorder_roleARN</a> - Amazon Resource Name (ARN) of
--   the IAM role used to describe the Amazon Web Services resources
--   associated with the account.
newConfigurationRecorder :: ConfigurationRecorder

-- | The current status of the configuration recorder.
--   
--   <i>See:</i> <a>newConfigurationRecorderStatus</a> smart constructor.
data ConfigurationRecorderStatus
ConfigurationRecorderStatus' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Bool -> Maybe RecorderStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> ConfigurationRecorderStatus

-- | Create a value of <a>ConfigurationRecorderStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastErrorCode:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorCode</a> - The error code
--   indicating that the recording failed.
--   
--   <a>$sel:lastStopTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStopTime</a> - The time the
--   recorder was last stopped.
--   
--   <a>$sel:lastStatusChangeTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatusChangeTime</a> - The time
--   when the status was last changed.
--   
--   <a>$sel:recording:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_recording</a> - Specifies whether or
--   not the recorder is currently recording.
--   
--   <a>$sel:lastStatus:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStatus</a> - The last (previous)
--   status of the recorder.
--   
--   <a>$sel:lastErrorMessage:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastErrorMessage</a> - The message
--   indicating that the recording failed due to an error.
--   
--   <a>$sel:name:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_name</a> - The name of the
--   configuration recorder.
--   
--   <a>$sel:lastStartTime:ConfigurationRecorderStatus'</a>,
--   <a>configurationRecorderStatus_lastStartTime</a> - The time the
--   recorder was last started.
newConfigurationRecorderStatus :: ConfigurationRecorderStatus

-- | Filters the conformance pack by compliance types and Config rule
--   names.
--   
--   <i>See:</i> <a>newConformancePackComplianceFilters</a> smart
--   constructor.
data ConformancePackComplianceFilters
ConformancePackComplianceFilters' :: Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackComplianceFilters

-- | Create a value of <a>ConformancePackComplianceFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configRuleNames:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackComplianceFilters'</a>,
--   <a>conformancePackComplianceFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackComplianceFilters :: ConformancePackComplianceFilters

-- | Summary includes the name and status of the conformance pack.
--   
--   <i>See:</i> <a>newConformancePackComplianceSummary</a> smart
--   constructor.
data ConformancePackComplianceSummary
ConformancePackComplianceSummary' :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | Create a value of <a>ConformancePackComplianceSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackName:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackName</a> - The name
--   of the conformance pack name.
--   
--   
--   <a>$sel:conformancePackComplianceStatus:ConformancePackComplianceSummary'</a>,
--   <a>conformancePackComplianceSummary_conformancePackComplianceStatus</a>
--   - The status of the conformance pack. The allowed values are
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt> and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackComplianceSummary :: Text -> ConformancePackComplianceType -> ConformancePackComplianceSummary

-- | Returns details of a conformance pack. A conformance pack is a
--   collection of Config rules and remediation actions that can be easily
--   deployed in an account and a region.
--   
--   <i>See:</i> <a>newConformancePackDetail</a> smart constructor.
data ConformancePackDetail
ConformancePackDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe [ConformancePackInputParameter] -> Text -> Text -> Text -> ConformancePackDetail

-- | Create a value of <a>ConformancePackDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3Bucket</a> - The name of the Amazon
--   S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_deliveryS3KeyPrefix</a> - The prefix for the
--   Amazon S3 bucket.
--   
--   This field is optional.
--   
--   <a>$sel:createdBy:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_createdBy</a> - Amazon Web Services service
--   that created the conformance pack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_lastUpdateRequestedTime</a> - Last time when
--   conformation pack update was requested.
--   
--   <a>$sel:conformancePackInputParameters:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackInputParameters</a> - A list
--   of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:conformancePackName:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackArn</a> - Amazon Resource Name
--   (ARN) of the conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackDetail'</a>,
--   <a>conformancePackDetail_conformancePackId</a> - ID of the conformance
--   pack.
newConformancePackDetail :: Text -> Text -> Text -> ConformancePackDetail

-- | Filters a conformance pack by Config rule names, compliance types,
--   Amazon Web Services resource types, and resource IDs.
--   
--   <i>See:</i> <a>newConformancePackEvaluationFilters</a> smart
--   constructor.
data ConformancePackEvaluationFilters
ConformancePackEvaluationFilters' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe ConformancePackComplianceType -> ConformancePackEvaluationFilters

-- | Create a value of <a>ConformancePackEvaluationFilters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceIds</a> - Filters the
--   results by resource IDs.
--   
--   This is valid only when you provide resource type. If there is no
--   resource type, you will see an error.
--   
--   <a>$sel:resourceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_resourceType</a> - Filters the
--   results by the resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:configRuleNames:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_configRuleNames</a> - Filters the
--   results by Config rule names.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationFilters'</a>,
--   <a>conformancePackEvaluationFilters_complianceType</a> - Filters the
--   results by compliance.
--   
--   The allowed values are <tt>COMPLIANT</tt> and <tt>NON_COMPLIANT</tt>.
--   <tt>INSUFFICIENT_DATA</tt> is not supported.
newConformancePackEvaluationFilters :: ConformancePackEvaluationFilters

-- | The details of a conformance pack evaluation. Provides Config rule and
--   Amazon Web Services resource type that was evaluated, the compliance
--   of the conformance pack, related time stamps, and supplementary
--   information.
--   
--   <i>See:</i> <a>newConformancePackEvaluationResult</a> smart
--   constructor.
data ConformancePackEvaluationResult
ConformancePackEvaluationResult' :: Maybe Text -> ConformancePackComplianceType -> EvaluationResultIdentifier -> POSIX -> POSIX -> ConformancePackEvaluationResult

-- | Create a value of <a>ConformancePackEvaluationResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_annotation</a> - Supplementary
--   information about how the evaluation determined the compliance.
--   
--   <a>$sel:complianceType:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_complianceType</a> - The compliance
--   type. The allowed values are <tt>COMPLIANT</tt> and
--   <tt>NON_COMPLIANT</tt>. <tt>INSUFFICIENT_DATA</tt> is not supported.
--   
--   
--   <a>$sel:evaluationResultIdentifier:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_evaluationResultIdentifier</a> -
--   Undocumented member.
--   
--   <a>$sel:configRuleInvokedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_configRuleInvokedTime</a> - The
--   time when Config rule evaluated Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:ConformancePackEvaluationResult'</a>,
--   <a>conformancePackEvaluationResult_resultRecordedTime</a> - The time
--   when Config recorded the evaluation result.
newConformancePackEvaluationResult :: ConformancePackComplianceType -> EvaluationResultIdentifier -> UTCTime -> UTCTime -> ConformancePackEvaluationResult

-- | Input parameters in the form of key-value pairs for the conformance
--   pack, both of which you define. Keys can have a maximum character
--   length of 255 characters, and values can have a maximum length of 4096
--   characters.
--   
--   <i>See:</i> <a>newConformancePackInputParameter</a> smart constructor.
data ConformancePackInputParameter
ConformancePackInputParameter' :: Text -> Text -> ConformancePackInputParameter

-- | Create a value of <a>ConformancePackInputParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterName:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterName</a> - One part of a
--   key-value pair.
--   
--   <a>$sel:parameterValue:ConformancePackInputParameter'</a>,
--   <a>conformancePackInputParameter_parameterValue</a> - Another part of
--   the key-value pair.
newConformancePackInputParameter :: Text -> Text -> ConformancePackInputParameter

-- | Compliance information of one or more Config rules within a
--   conformance pack. You can filter using Config rule names and
--   compliance types.
--   
--   <i>See:</i> <a>newConformancePackRuleCompliance</a> smart constructor.
data ConformancePackRuleCompliance
ConformancePackRuleCompliance' :: Maybe [Text] -> Maybe Text -> Maybe ConformancePackComplianceType -> ConformancePackRuleCompliance

-- | Create a value of <a>ConformancePackRuleCompliance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controls:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_controls</a> - Controls for the
--   conformance pack. A control is a process to prevent or detect problems
--   while meeting objectives. A control can align with a specific
--   compliance regime or map to internal controls defined by an
--   organization.
--   
--   <a>$sel:configRuleName:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_configRuleName</a> - Name of the
--   config rule.
--   
--   <a>$sel:complianceType:ConformancePackRuleCompliance'</a>,
--   <a>conformancePackRuleCompliance_complianceType</a> - Compliance of
--   the Config rule.
--   
--   The allowed values are <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>INSUFFICIENT_DATA</tt>.
newConformancePackRuleCompliance :: ConformancePackRuleCompliance

-- | Status details of a conformance pack.
--   
--   <i>See:</i> <a>newConformancePackStatusDetail</a> smart constructor.
data ConformancePackStatusDetail
ConformancePackStatusDetail' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> ConformancePackState -> Text -> POSIX -> ConformancePackStatusDetail

-- | Create a value of <a>ConformancePackStatusDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conformancePackStatusReason:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackStatusReason</a> - The
--   reason of conformance pack creation failure.
--   
--   <a>$sel:lastUpdateCompletedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateCompletedTime</a> - Last time
--   when conformation pack creation and update was successful.
--   
--   <a>$sel:conformancePackName:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackName</a> - Name of the
--   conformance pack.
--   
--   <a>$sel:conformancePackId:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackId</a> - ID of the
--   conformance pack.
--   
--   <a>$sel:conformancePackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackArn</a> - Amazon
--   Resource Name (ARN) of comformance pack.
--   
--   <a>$sel:conformancePackState:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_conformancePackState</a> - Indicates
--   deployment status of conformance pack.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li>CREATE_IN_PROGRESS when a conformance pack creation is in progress
--   for an account.</li>
--   <li>CREATE_COMPLETE when a conformance pack has been successfully
--   created in your account.</li>
--   <li>CREATE_FAILED when a conformance pack creation failed in your
--   account.</li>
--   <li>DELETE_IN_PROGRESS when a conformance pack deletion is in
--   progress.</li>
--   <li>DELETE_FAILED when a conformance pack deletion failed in your
--   account.</li>
--   </ul>
--   
--   <a>$sel:stackArn:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_stackArn</a> - Amazon Resource Name
--   (ARN) of CloudFormation stack.
--   
--   <a>$sel:lastUpdateRequestedTime:ConformancePackStatusDetail'</a>,
--   <a>conformancePackStatusDetail_lastUpdateRequestedTime</a> - Last time
--   when conformation pack creation and update was requested.
newConformancePackStatusDetail :: Text -> Text -> Text -> ConformancePackState -> Text -> UTCTime -> ConformancePackStatusDetail

-- | The channel through which Config delivers notifications and updated
--   configuration states.
--   
--   <i>See:</i> <a>newDeliveryChannel</a> smart constructor.
data DeliveryChannel
DeliveryChannel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigSnapshotDeliveryProperties -> Maybe Text -> DeliveryChannel

-- | Create a value of <a>DeliveryChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KeyPrefix</a> - The prefix for the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:snsTopicARN:DeliveryChannel'</a>,
--   <a>deliveryChannel_snsTopicARN</a> - The Amazon Resource Name (ARN) of
--   the Amazon SNS topic to which Config sends notifications about
--   configuration changes.
--   
--   If you choose a topic from another account, the topic must have
--   policies that grant access permissions to Config. For more
--   information, see <a>Permissions for the Amazon SNS Topic</a> in the
--   Config Developer Guide.
--   
--   <a>$sel:name:DeliveryChannel'</a>, <a>deliveryChannel_name</a> - The
--   name of the delivery channel. By default, Config assigns the name
--   "default" when creating the delivery channel. To change the delivery
--   channel name, you must use the DeleteDeliveryChannel action to delete
--   your current delivery channel, and then you must use the
--   PutDeliveryChannel command to create a delivery channel that has the
--   desired name.
--   
--   <a>$sel:s3KmsKeyArn:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3KmsKeyArn</a> - The Amazon Resource Name (ARN) of
--   the Key Management Service (KMS ) KMS key (KMS key) used to encrypt
--   objects delivered by Config. Must belong to the same Region as the
--   destination S3 bucket.
--   
--   <a>$sel:configSnapshotDeliveryProperties:DeliveryChannel'</a>,
--   <a>deliveryChannel_configSnapshotDeliveryProperties</a> - The options
--   for how often Config delivers configuration snapshots to the Amazon S3
--   bucket.
--   
--   <a>$sel:s3BucketName:DeliveryChannel'</a>,
--   <a>deliveryChannel_s3BucketName</a> - The name of the Amazon S3 bucket
--   to which Config delivers configuration snapshots and configuration
--   history files.
--   
--   If you specify a bucket that belongs to another Amazon Web Services
--   account, that bucket must have policies that grant access permissions
--   to Config. For more information, see <a>Permissions for the Amazon S3
--   Bucket</a> in the Config Developer Guide.
newDeliveryChannel :: DeliveryChannel

-- | The status of a specified delivery channel.
--   
--   Valid values: <tt>Success</tt> | <tt>Failure</tt>
--   
--   <i>See:</i> <a>newDeliveryChannelStatus</a> smart constructor.
data DeliveryChannelStatus
DeliveryChannelStatus' :: Maybe ConfigExportDeliveryInfo -> Maybe ConfigStreamDeliveryInfo -> Maybe ConfigExportDeliveryInfo -> Maybe Text -> DeliveryChannelStatus

-- | Create a value of <a>DeliveryChannelStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configSnapshotDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configSnapshotDeliveryInfo</a> - A list
--   containing the status of the delivery of the snapshot to the specified
--   Amazon S3 bucket.
--   
--   <a>$sel:configStreamDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configStreamDeliveryInfo</a> - A list
--   containing the status of the delivery of the configuration stream
--   notification to the specified Amazon SNS topic.
--   
--   <a>$sel:configHistoryDeliveryInfo:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_configHistoryDeliveryInfo</a> - A list that
--   contains the status of the delivery of the configuration history to
--   the specified Amazon S3 bucket.
--   
--   <a>$sel:name:DeliveryChannelStatus'</a>,
--   <a>deliveryChannelStatus_name</a> - The name of the delivery channel.
newDeliveryChannelStatus :: DeliveryChannelStatus

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> Evaluation

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:Evaluation'</a>, <a>evaluation_annotation</a> -
--   Supplementary information about how the evaluation determined the
--   compliance.
--   
--   <a>$sel:complianceResourceType:Evaluation'</a>,
--   <a>evaluation_complianceResourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceResourceId:Evaluation'</a>,
--   <a>evaluation_complianceResourceId</a> - The ID of the Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:complianceType:Evaluation'</a>,
--   <a>evaluation_complianceType</a> - Indicates whether the Amazon Web
--   Services resource complies with the Config rule that it was evaluated
--   against.
--   
--   For the <tt>Evaluation</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for this data type.
--   
--   Similarly, Config does not accept <tt>INSUFFICIENT_DATA</tt> as the
--   value for <tt>ComplianceType</tt> from a <tt>PutEvaluations</tt>
--   request. For example, an Lambda function for a custom Config rule
--   cannot pass an <tt>INSUFFICIENT_DATA</tt> value to Config.
--   
--   <a>$sel:orderingTimestamp:Evaluation'</a>,
--   <a>evaluation_orderingTimestamp</a> - The time of the event in Config
--   that triggered the evaluation. For event-based evaluations, the time
--   indicates when Config created the configuration item that triggered
--   the evaluation. For periodic evaluations, the time indicates when
--   Config triggered the evaluation at the frequency that you specified
--   (for example, every 24 hours).
newEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> Evaluation

-- | The details of an Config evaluation. Provides the Amazon Web Services
--   resource that was evaluated, the compliance of the resource, related
--   time stamps, and supplementary information.
--   
--   <i>See:</i> <a>newEvaluationResult</a> smart constructor.
data EvaluationResult
EvaluationResult' :: Maybe EvaluationResultIdentifier -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ComplianceType -> EvaluationResult

-- | Create a value of <a>EvaluationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultIdentifier:EvaluationResult'</a>,
--   <a>evaluationResult_evaluationResultIdentifier</a> - Uniquely
--   identifies the evaluation result.
--   
--   <a>$sel:annotation:EvaluationResult'</a>,
--   <a>evaluationResult_annotation</a> - Supplementary information about
--   how the evaluation determined the compliance.
--   
--   <a>$sel:configRuleInvokedTime:EvaluationResult'</a>,
--   <a>evaluationResult_configRuleInvokedTime</a> - The time when the
--   Config rule evaluated the Amazon Web Services resource.
--   
--   <a>$sel:resultRecordedTime:EvaluationResult'</a>,
--   <a>evaluationResult_resultRecordedTime</a> - The time when Config
--   recorded the evaluation result.
--   
--   <a>$sel:resultToken:EvaluationResult'</a>,
--   <a>evaluationResult_resultToken</a> - An encrypted token that
--   associates an evaluation with an Config rule. The token identifies the
--   rule, the Amazon Web Services resource being evaluated, and the event
--   that triggered the evaluation.
--   
--   <a>$sel:complianceType:EvaluationResult'</a>,
--   <a>evaluationResult_complianceType</a> - Indicates whether the Amazon
--   Web Services resource complies with the Config rule that evaluated it.
--   
--   For the <tt>EvaluationResult</tt> data type, Config supports only the
--   <tt>COMPLIANT</tt>, <tt>NON_COMPLIANT</tt>, and
--   <tt>NOT_APPLICABLE</tt> values. Config does not support the
--   <tt>INSUFFICIENT_DATA</tt> value for the <tt>EvaluationResult</tt>
--   data type.
newEvaluationResult :: EvaluationResult

-- | Uniquely identifies an evaluation result.
--   
--   <i>See:</i> <a>newEvaluationResultIdentifier</a> smart constructor.
data EvaluationResultIdentifier
EvaluationResultIdentifier' :: Maybe EvaluationResultQualifier -> Maybe POSIX -> EvaluationResultIdentifier

-- | Create a value of <a>EvaluationResultIdentifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluationResultQualifier:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_evaluationResultQualifier</a> -
--   Identifies an Config rule used to evaluate an Amazon Web Services
--   resource, and provides the type and ID of the evaluated resource.
--   
--   <a>$sel:orderingTimestamp:EvaluationResultIdentifier'</a>,
--   <a>evaluationResultIdentifier_orderingTimestamp</a> - The time of the
--   event that triggered the evaluation of your Amazon Web Services
--   resources. The time can indicate when Config delivered a configuration
--   item change notification, or it can indicate when Config delivered the
--   configuration snapshot, depending on which event triggered the
--   evaluation.
newEvaluationResultIdentifier :: EvaluationResultIdentifier

-- | Identifies an Config rule that evaluated an Amazon Web Services
--   resource, and provides the type and ID of the resource that the rule
--   evaluated.
--   
--   <i>See:</i> <a>newEvaluationResultQualifier</a> smart constructor.
data EvaluationResultQualifier
EvaluationResultQualifier' :: Maybe Text -> Maybe Text -> Maybe Text -> EvaluationResultQualifier

-- | Create a value of <a>EvaluationResultQualifier</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceId</a> - The ID of the evaluated
--   Amazon Web Services resource.
--   
--   <a>$sel:resourceType:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_resourceType</a> - The type of Amazon Web
--   Services resource that was evaluated.
--   
--   <a>$sel:configRuleName:EvaluationResultQualifier'</a>,
--   <a>evaluationResultQualifier_configRuleName</a> - The name of the
--   Config rule that was used in the evaluation.
newEvaluationResultQualifier :: EvaluationResultQualifier

-- | The controls that Config uses for executing remediations.
--   
--   <i>See:</i> <a>newExecutionControls</a> smart constructor.
data ExecutionControls
ExecutionControls' :: Maybe SsmControls -> ExecutionControls

-- | Create a value of <a>ExecutionControls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ssmControls:ExecutionControls'</a>,
--   <a>executionControls_ssmControls</a> - A SsmControls object.
newExecutionControls :: ExecutionControls

-- | Identifies an Amazon Web Services resource and indicates whether it
--   complies with the Config rule that it was evaluated against.
--   
--   <i>See:</i> <a>newExternalEvaluation</a> smart constructor.
data ExternalEvaluation
ExternalEvaluation' :: Maybe Text -> Text -> Text -> ComplianceType -> POSIX -> ExternalEvaluation

-- | Create a value of <a>ExternalEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:annotation:ExternalEvaluation'</a>,
--   <a>externalEvaluation_annotation</a> - Supplementary information about
--   the reason of compliance. For example, this task was completed on a
--   specific date.
--   
--   <a>$sel:complianceResourceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceType</a> - The evaluated
--   compliance resource type. Config accepts <tt>AWS::::Account</tt>
--   resource type.
--   
--   <a>$sel:complianceResourceId:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceResourceId</a> - The evaluated
--   compliance resource ID. Config accepts only Amazon Web Services
--   account ID.
--   
--   <a>$sel:complianceType:ExternalEvaluation'</a>,
--   <a>externalEvaluation_complianceType</a> - The compliance of the
--   Amazon Web Services resource. The valid values are <tt>COMPLIANT,
--   NON_COMPLIANT, </tt> and <tt>NOT_APPLICABLE</tt>.
--   
--   <a>$sel:orderingTimestamp:ExternalEvaluation'</a>,
--   <a>externalEvaluation_orderingTimestamp</a> - The time when the
--   compliance was recorded.
newExternalEvaluation :: Text -> Text -> ComplianceType -> UTCTime -> ExternalEvaluation

-- | List of each of the failed delete remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedDeleteRemediationExceptionsBatch</a> smart
--   constructor.
data FailedDeleteRemediationExceptionsBatch
FailedDeleteRemediationExceptionsBatch' :: Maybe Text -> Maybe (NonEmpty RemediationExceptionResourceKey) -> FailedDeleteRemediationExceptionsBatch

-- | Create a value of <a>FailedDeleteRemediationExceptionsBatch</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failureMessage</a> - Returns
--   a failure message for delete remediation exception. For example,
--   Config creates an exception due to an internal error.
--   
--   <a>$sel:failedItems:FailedDeleteRemediationExceptionsBatch'</a>,
--   <a>failedDeleteRemediationExceptionsBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedDeleteRemediationExceptionsBatch :: FailedDeleteRemediationExceptionsBatch

-- | List of each of the failed remediations with specific reasons.
--   
--   <i>See:</i> <a>newFailedRemediationBatch</a> smart constructor.
data FailedRemediationBatch
FailedRemediationBatch' :: Maybe Text -> Maybe [RemediationConfiguration] -> FailedRemediationBatch

-- | Create a value of <a>FailedRemediationBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failureMessage</a> - Returns a failure
--   message. For example, the resource is already compliant.
--   
--   <a>$sel:failedItems:FailedRemediationBatch'</a>,
--   <a>failedRemediationBatch_failedItems</a> - Returns remediation
--   configurations of the failed items.
newFailedRemediationBatch :: FailedRemediationBatch

-- | List of each of the failed remediation exceptions with specific
--   reasons.
--   
--   <i>See:</i> <a>newFailedRemediationExceptionBatch</a> smart
--   constructor.
data FailedRemediationExceptionBatch
FailedRemediationExceptionBatch' :: Maybe Text -> Maybe [RemediationException] -> FailedRemediationExceptionBatch

-- | Create a value of <a>FailedRemediationExceptionBatch</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failureMessage</a> - Returns a
--   failure message. For example, the auto-remediation has failed.
--   
--   <a>$sel:failedItems:FailedRemediationExceptionBatch'</a>,
--   <a>failedRemediationExceptionBatch_failedItems</a> - Returns
--   remediation exception resource key object of the failed items.
newFailedRemediationExceptionBatch :: FailedRemediationExceptionBatch

-- | Details about the fields such as name of the field.
--   
--   <i>See:</i> <a>newFieldInfo</a> smart constructor.
data FieldInfo
FieldInfo' :: Maybe Text -> FieldInfo

-- | Create a value of <a>FieldInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:FieldInfo'</a>, <a>fieldInfo_name</a> - Name of the
--   field.
newFieldInfo :: FieldInfo

-- | The count of resources that are grouped by the group name.
--   
--   <i>See:</i> <a>newGroupedResourceCount</a> smart constructor.
data GroupedResourceCount
GroupedResourceCount' :: Text -> Integer -> GroupedResourceCount

-- | Create a value of <a>GroupedResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_groupName</a> - The name of the group that can
--   be region, account ID, or resource type. For example, region1, region2
--   if the region was chosen as <tt>GroupByKey</tt>.
--   
--   <a>$sel:resourceCount:GroupedResourceCount'</a>,
--   <a>groupedResourceCount_resourceCount</a> - The number of resources in
--   the group.
newGroupedResourceCount :: Text -> Integer -> GroupedResourceCount

-- | Organization config rule creation or deletion status in each member
--   account. This includes the name of the rule, the status, error code
--   and error message when the rule creation or deletion failed.
--   
--   <i>See:</i> <a>newMemberAccountStatus</a> smart constructor.
data MemberAccountStatus
MemberAccountStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | Create a value of <a>MemberAccountStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorCode</a> - An error code that is returned
--   when config rule creation or deletion failed in the member account.
--   
--   <a>$sel:errorMessage:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_errorMessage</a> - An error message indicating
--   that config rule account creation or deletion has failed due to an
--   error in the member account.
--   
--   <a>$sel:lastUpdateTime:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_lastUpdateTime</a> - The timestamp of the last
--   status update.
--   
--   <a>$sel:accountId:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_accountId</a> - The 12-digit account ID of a
--   member account.
--   
--   <a>$sel:configRuleName:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_configRuleName</a> - The name of config rule
--   deployed in the member account.
--   
--   <a>$sel:memberAccountRuleStatus:MemberAccountStatus'</a>,
--   <a>memberAccountStatus_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
newMemberAccountStatus :: Text -> Text -> MemberAccountRuleStatus -> MemberAccountStatus

-- | This object contains regions to set up the aggregator and an IAM role
--   to retrieve organization details.
--   
--   <i>See:</i> <a>newOrganizationAggregationSource</a> smart constructor.
data OrganizationAggregationSource
OrganizationAggregationSource' :: Maybe (NonEmpty Text) -> Maybe Bool -> Text -> OrganizationAggregationSource

-- | Create a value of <a>OrganizationAggregationSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_awsRegions</a> - The source regions
--   being aggregated.
--   
--   <a>$sel:allAwsRegions:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_allAwsRegions</a> - If true,
--   aggregate existing Config regions and future regions.
--   
--   <a>$sel:roleArn:OrganizationAggregationSource'</a>,
--   <a>organizationAggregationSource_roleArn</a> - ARN of the IAM role
--   used to retrieve Amazon Web Services Organization details associated
--   with the aggregator account.
newOrganizationAggregationSource :: Text -> OrganizationAggregationSource

-- | An organization config rule that has information about config rules
--   that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConfigRule</a> smart constructor.
data OrganizationConfigRule
OrganizationConfigRule' :: Maybe OrganizationManagedRuleMetadata -> Maybe [Text] -> Maybe OrganizationCustomRuleMetadata -> Maybe POSIX -> Text -> Text -> OrganizationConfigRule

-- | Create a value of <a>OrganizationConfigRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:organizationManagedRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationManagedRuleMetadata</a> - An
--   <tt>OrganizationManagedRuleMetadata</tt> object.
--   
--   <a>$sel:excludedAccounts:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_excludedAccounts</a> - A comma-separated
--   list of accounts excluded from organization config rule.
--   
--   <a>$sel:organizationCustomRuleMetadata:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationCustomRuleMetadata</a> - An
--   <tt>OrganizationCustomRuleMetadata</tt> object.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_lastUpdateTime</a> - The timestamp of the
--   last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleName</a> - The name
--   that you assign to organization config rule.
--   
--   <a>$sel:organizationConfigRuleArn:OrganizationConfigRule'</a>,
--   <a>organizationConfigRule_organizationConfigRuleArn</a> - Amazon
--   Resource Name (ARN) of organization config rule.
newOrganizationConfigRule :: Text -> Text -> OrganizationConfigRule

-- | Returns the status for an organization config rule in an organization.
--   
--   <i>See:</i> <a>newOrganizationConfigRuleStatus</a> smart constructor.
data OrganizationConfigRuleStatus
OrganizationConfigRuleStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | Create a value of <a>OrganizationConfigRuleStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorCode</a> - An error code that is
--   returned when organization config rule creation or deletion has
--   failed.
--   
--   <a>$sel:errorMessage:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_errorMessage</a> - An error message
--   indicating that organization config rule creation or deletion failed
--   due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_lastUpdateTime</a> - The timestamp of
--   the last update.
--   
--   <a>$sel:organizationConfigRuleName:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationConfigRuleName</a> - The
--   name that you assign to organization config rule.
--   
--   <a>$sel:organizationRuleStatus:OrganizationConfigRuleStatus'</a>,
--   <a>organizationConfigRuleStatus_organizationRuleStatus</a> - Indicates
--   deployment status of an organization config rule. When master account
--   calls PutOrganizationConfigRule action for the first time, config rule
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConfigRule action for the second time, config
--   rule status is updated in all the member accounts. Additionally,
--   config rule status is updated when one or more member accounts join or
--   leave an organization. Config rule status is deleted when the master
--   account deletes OrganizationConfigRule in all the member accounts and
--   disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization config rule
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization config rule creation
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization config rule deletion
--   failed in one or more member accounts within that organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization config rule
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization config rule has
--   been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization config rule
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization config rule update
--   failed in one or more member accounts within that organization.</li>
--   </ul>
newOrganizationConfigRuleStatus :: Text -> OrganizationRuleStatus -> OrganizationConfigRuleStatus

-- | An organization conformance pack that has information about
--   conformance packs that Config creates in member accounts.
--   
--   <i>See:</i> <a>newOrganizationConformancePack</a> smart constructor.
data OrganizationConformancePack
OrganizationConformancePack' :: Maybe Text -> Maybe Text -> Maybe [ConformancePackInputParameter] -> Maybe [Text] -> Text -> Text -> POSIX -> OrganizationConformancePack

-- | Create a value of <a>OrganizationConformancePack</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryS3Bucket:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3Bucket</a> - The name of the
--   Amazon S3 bucket where Config stores conformance pack templates.
--   
--   This field is optional.
--   
--   <a>$sel:deliveryS3KeyPrefix:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_deliveryS3KeyPrefix</a> - Any folder
--   structure you want to add to an Amazon S3 bucket.
--   
--   This field is optional.
--   
--   
--   <a>$sel:conformancePackInputParameters:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_conformancePackInputParameters</a> - A
--   list of <tt>ConformancePackInputParameter</tt> objects.
--   
--   <a>$sel:excludedAccounts:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_excludedAccounts</a> - A
--   comma-separated list of accounts excluded from organization
--   conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackName</a> -
--   The name you assign to an organization conformance pack.
--   
--   
--   <a>$sel:organizationConformancePackArn:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_organizationConformancePackArn</a> -
--   Amazon Resource Name (ARN) of organization conformance pack.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePack'</a>,
--   <a>organizationConformancePack_lastUpdateTime</a> - Last time when
--   organization conformation pack was updated.
newOrganizationConformancePack :: Text -> Text -> UTCTime -> OrganizationConformancePack

-- | Organization conformance pack creation or deletion status in each
--   member account. This includes the name of the conformance pack, the
--   status, error code and error message when the conformance pack
--   creation or deletion failed.
--   
--   <i>See:</i> <a>newOrganizationConformancePackDetailedStatus</a> smart
--   constructor.
data OrganizationConformancePackDetailedStatus
OrganizationConformancePackDetailedStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | Create a value of <a>OrganizationConformancePackDetailedStatus</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorCode</a> - An error
--   code that is returned when conformance pack creation or deletion
--   failed in the member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_errorMessage</a> - An
--   error message indicating that conformance pack account creation or
--   deletion has failed due to an error in the member account.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_lastUpdateTime</a> - The
--   timestamp of the last status update.
--   
--   <a>$sel:accountId:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_accountId</a> - The
--   12-digit account ID of a member account.
--   
--   
--   <a>$sel:conformancePackName:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_conformancePackName</a> -
--   The name of conformance pack deployed in the member account.
--   
--   <a>$sel:status:OrganizationConformancePackDetailedStatus'</a>,
--   <a>organizationConformancePackDetailedStatus_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
newOrganizationConformancePackDetailedStatus :: Text -> Text -> OrganizationResourceDetailedStatus -> OrganizationConformancePackDetailedStatus

-- | Returns the status for an organization conformance pack in an
--   organization.
--   
--   <i>See:</i> <a>newOrganizationConformancePackStatus</a> smart
--   constructor.
data OrganizationConformancePackStatus
OrganizationConformancePackStatus' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | Create a value of <a>OrganizationConformancePackStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorCode</a> - An error code
--   that is returned when organization conformance pack creation or
--   deletion has failed in a member account.
--   
--   <a>$sel:errorMessage:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_errorMessage</a> - An error
--   message indicating that organization conformance pack creation or
--   deletion failed due to an error.
--   
--   <a>$sel:lastUpdateTime:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_lastUpdateTime</a> - The
--   timestamp of the last update.
--   
--   
--   <a>$sel:organizationConformancePackName:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_organizationConformancePackName</a>
--   - The name that you assign to organization conformance pack.
--   
--   <a>$sel:status:OrganizationConformancePackStatus'</a>,
--   <a>organizationConformancePackStatus_status</a> - Indicates deployment
--   status of an organization conformance pack. When master account calls
--   PutOrganizationConformancePack for the first time, conformance pack
--   status is created in all the member accounts. When master account
--   calls PutOrganizationConformancePack for the second time, conformance
--   pack status is updated in all the member accounts. Additionally,
--   conformance pack status is updated when one or more member accounts
--   join or leave an organization. Conformance pack status is deleted when
--   the master account deletes OrganizationConformancePack in all the
--   member accounts and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully created in all the member accounts.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when an organization conformance pack
--   creation is in progress.</li>
--   <li><tt>CREATE_FAILED</tt> when an organization conformance pack
--   creation failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_FAILED</tt> when an organization conformance pack
--   deletion failed in one or more member accounts within that
--   organization.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when an organization conformance pack
--   deletion is in progress.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully deleted from all the member accounts.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when an organization conformance pack
--   has been successfully updated in all the member accounts.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when an organization conformance pack
--   update is in progress.</li>
--   <li><tt>UPDATE_FAILED</tt> when an organization conformance pack
--   update failed in one or more member accounts within that
--   organization.</li>
--   </ul>
newOrganizationConformancePackStatus :: Text -> OrganizationResourceStatus -> OrganizationConformancePackStatus

-- | An object that specifies organization custom rule metadata such as
--   resource type, resource ID of Amazon Web Services resource, Lambda
--   function ARN, and organization trigger types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic.
--   
--   <i>See:</i> <a>newOrganizationCustomRuleMetadata</a> smart
--   constructor.
data OrganizationCustomRuleMetadata
OrganizationCustomRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> [OrganizationConfigRuleTriggerType] -> OrganizationCustomRuleMetadata

-- | Create a value of <a>OrganizationCustomRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. Your
--   custom rule is triggered when Config delivers the configuration
--   snapshot. For more information, see ConfigSnapshotDeliveryProperties.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_resourceTypesScope</a> - The type of
--   the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:lambdaFunctionArn:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_lambdaFunctionArn</a> - The lambda
--   function ARN.
--   
--   
--   <a>$sel:organizationConfigRuleTriggerTypes:OrganizationCustomRuleMetadata'</a>,
--   <a>organizationCustomRuleMetadata_organizationConfigRuleTriggerTypes</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   </ul>
newOrganizationCustomRuleMetadata :: Text -> OrganizationCustomRuleMetadata

-- | An object that specifies organization managed rule metadata such as
--   resource type and ID of Amazon Web Services resource along with the
--   rule identifier. It also provides the frequency with which you want
--   Config to run evaluations for the rule if the trigger type is
--   periodic.
--   
--   <i>See:</i> <a>newOrganizationManagedRuleMetadata</a> smart
--   constructor.
data OrganizationManagedRuleMetadata
OrganizationManagedRuleMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaximumExecutionFrequency -> Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> OrganizationManagedRuleMetadata

-- | Create a value of <a>OrganizationManagedRuleMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParameters:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_inputParameters</a> - A string, in
--   JSON format, that is passed to organization config rule Lambda
--   function.
--   
--   <a>$sel:resourceIdScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceIdScope</a> - The ID of the
--   Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:tagValueScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagValueScope</a> - The optional
--   part of a key-value pair that make up a tag. A value acts as a
--   descriptor within a tag category (key).
--   
--   
--   <a>$sel:maximumExecutionFrequency:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_maximumExecutionFrequency</a> - The
--   maximum frequency with which Config runs evaluations for a rule. You
--   are using an Config managed rule that is triggered at a periodic
--   frequency.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   <a>$sel:tagKeyScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_tagKeyScope</a> - One part of a
--   key-value pair that make up a tag. A key is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:resourceTypesScope:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_resourceTypesScope</a> - The type
--   of the Amazon Web Services resource that was evaluated.
--   
--   <a>$sel:description:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_description</a> - The description
--   that you provide for organization config rule.
--   
--   <a>$sel:ruleIdentifier:OrganizationManagedRuleMetadata'</a>,
--   <a>organizationManagedRuleMetadata_ruleIdentifier</a> - For
--   organization config managed rules, a predefined identifier from a
--   list. For example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To
--   reference a managed rule, see <a>Using Config managed rules</a>.
newOrganizationManagedRuleMetadata :: Text -> OrganizationManagedRuleMetadata

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization conformance pack.
--   
--   <i>See:</i> <a>newOrganizationResourceDetailedStatusFilters</a> smart
--   constructor.
data OrganizationResourceDetailedStatusFilters
OrganizationResourceDetailedStatusFilters' :: Maybe OrganizationResourceDetailedStatus -> Maybe Text -> OrganizationResourceDetailedStatusFilters

-- | Create a value of <a>OrganizationResourceDetailedStatusFilters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_status</a> - Indicates
--   deployment status for conformance pack in a member account. When
--   master account calls <tt>PutOrganizationConformancePack</tt> action
--   for the first time, conformance pack status is created in the member
--   account. When master account calls
--   <tt>PutOrganizationConformancePack</tt> action for the second time,
--   conformance pack status is updated in the member account. Conformance
--   pack status is deleted when the master account deletes
--   <tt>OrganizationConformancePack</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the conformance pack to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when conformance pack has been created
--   in the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when conformance pack is being created
--   in the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when conformance pack creation has failed
--   in the member account.</li>
--   <li><tt>DELETE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when conformance pack is being deleted
--   in the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when conformance pack has been deleted
--   in the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when conformance pack has been updated
--   in the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when conformance pack is being updated
--   in the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when conformance pack deletion has failed
--   in the member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:OrganizationResourceDetailedStatusFilters'</a>,
--   <a>organizationResourceDetailedStatusFilters_accountId</a> - The
--   12-digit account ID of the member account within an organization.
newOrganizationResourceDetailedStatusFilters :: OrganizationResourceDetailedStatusFilters

-- | An object that represents the account ID and region of an aggregator
--   account that is requesting authorization but is not yet authorized.
--   
--   <i>See:</i> <a>newPendingAggregationRequest</a> smart constructor.
data PendingAggregationRequest
PendingAggregationRequest' :: Maybe Text -> Maybe Text -> PendingAggregationRequest

-- | Create a value of <a>PendingAggregationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requesterAccountId:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAccountId</a> - The 12-digit
--   account ID of the account requesting to aggregate data.
--   
--   <a>$sel:requesterAwsRegion:PendingAggregationRequest'</a>,
--   <a>pendingAggregationRequest_requesterAwsRegion</a> - The region
--   requesting to aggregate data.
newPendingAggregationRequest :: PendingAggregationRequest

-- | Details about the query.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe [FieldInfo] -> QueryInfo

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectFields:QueryInfo'</a>, <a>queryInfo_selectFields</a> -
--   Returns a <tt>FieldInfo</tt> object.
newQueryInfo :: QueryInfo

-- | Specifies the types of Amazon Web Services resource for which Config
--   records configuration changes.
--   
--   In the recording group, you specify whether all supported types or
--   specific types of resources are recorded.
--   
--   By default, Config records configuration changes for all supported
--   types of regional resources that Config discovers in the region in
--   which it is running. Regional resources are tied to a region and can
--   be used only in that region. Examples of regional resources are EC2
--   instances and EBS volumes.
--   
--   You can also have Config record configuration changes for supported
--   types of global resources (for example, IAM resources). Global
--   resources are not tied to an individual region and can be used in all
--   regions.
--   
--   The configuration details for any global resource are the same in all
--   regions. If you customize Config in multiple regions to record global
--   resources, it will create multiple configuration items each time a
--   global resource changes: one configuration item for each region. These
--   configuration items will contain identical data. To prevent duplicate
--   configuration items, you should consider customizing Config in only
--   one region to record global resources, unless you want the
--   configuration items to be available in multiple regions.
--   
--   If you don't want Config to record all resources, you can specify
--   which types of resources it will record with the
--   <tt>resourceTypes</tt> parameter.
--   
--   For a list of supported resource types, see <a>Supported Resource
--   Types</a>.
--   
--   For more information, see <a>Selecting Which Resources Config
--   Records</a>.
--   
--   <i>See:</i> <a>newRecordingGroup</a> smart constructor.
data RecordingGroup
RecordingGroup' :: Maybe Bool -> Maybe Bool -> Maybe [ResourceType] -> RecordingGroup

-- | Create a value of <a>RecordingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allSupported:RecordingGroup'</a>,
--   <a>recordingGroup_allSupported</a> - Specifies whether Config records
--   configuration changes for every supported type of regional resource.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of regional resource, it starts recording resources of that
--   type automatically.
--   
--   If you set this option to <tt>true</tt>, you cannot enumerate a list
--   of <tt>resourceTypes</tt>.
--   
--   <a>$sel:includeGlobalResourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_includeGlobalResourceTypes</a> - Specifies whether
--   Config includes all supported types of global resources (for example,
--   IAM resources) with the resources that it records.
--   
--   Before you can set this option to <tt>true</tt>, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>true</tt>, when Config adds support for
--   a new type of global resource, it starts recording resources of that
--   type automatically.
--   
--   The configuration details for any global resource are the same in all
--   regions. To prevent duplicate configuration items, you should consider
--   customizing Config in only one region to record global resources.
--   
--   <a>$sel:resourceTypes:RecordingGroup'</a>,
--   <a>recordingGroup_resourceTypes</a> - A comma-separated list that
--   specifies the types of Amazon Web Services resources for which Config
--   records configuration changes (for example,
--   <tt>AWS::EC2::Instance</tt> or <tt>AWS::CloudTrail::Trail</tt>).
--   
--   To record all configuration changes, you must set the
--   <tt>allSupported</tt> option to <tt>true</tt>.
--   
--   If you set this option to <tt>false</tt>, when Config adds support for
--   a new type of resource, it will not record resources of that type
--   unless you manually add that type to your recording group.
--   
--   For a list of valid <tt>resourceTypes</tt> values, see the
--   __resourceType Value__ column in <a>Supported Amazon Web Services
--   resource Types</a>.
newRecordingGroup :: RecordingGroup

-- | The relationship of the related resource to the main resource.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Relationship

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:Relationship'</a>, <a>relationship_resourceId</a> -
--   The ID of the related resource (for example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:Relationship'</a>,
--   <a>relationship_resourceType</a> - The resource type of the related
--   resource.
--   
--   <a>$sel:resourceName:Relationship'</a>,
--   <a>relationship_resourceName</a> - The custom name of the related
--   resource, if available.
--   
--   <a>$sel:relationshipName:Relationship'</a>,
--   <a>relationship_relationshipName</a> - The type of relationship with
--   the related resource.
newRelationship :: Relationship

-- | An object that represents the details about the remediation
--   configuration that includes the remediation action, parameters, and
--   data to execute the action.
--   
--   <i>See:</i> <a>newRemediationConfiguration</a> smart constructor.
data RemediationConfiguration
RemediationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe ExecutionControls -> Maybe (HashMap Text RemediationParameterValue) -> Maybe Natural -> Maybe Text -> Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | Create a value of <a>RemediationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_resourceType</a> - The type of a resource.
--   
--   <a>$sel:arn:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_arn</a> - Amazon Resource Name (ARN) of
--   remediation configuration.
--   
--   <a>$sel:automatic:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_automatic</a> - The remediation is
--   triggered automatically.
--   
--   <a>$sel:createdByService:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_createdByService</a> - Name of the service
--   that owns the service linked rule, if applicable.
--   
--   <a>$sel:retryAttemptSeconds:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_retryAttemptSeconds</a> - Maximum time in
--   seconds that Config runs auto-remediation. If you do not select a
--   number, the default is 60 seconds.
--   
--   For example, if you specify RetryAttemptSeconds as 50 seconds and
--   MaximumAutomaticAttempts as 5, Config will run auto-remediations 5
--   times within 50 seconds before throwing an exception.
--   
--   <a>$sel:executionControls:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_executionControls</a> - An
--   ExecutionControls object.
--   
--   <a>$sel:parameters:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_parameters</a> - An object of the
--   RemediationParameterValue.
--   
--   <a>$sel:maximumAutomaticAttempts:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_maximumAutomaticAttempts</a> - The maximum
--   number of failed attempts for auto-remediation. If you do not select a
--   number, the default is 5.
--   
--   For example, if you specify MaximumAutomaticAttempts as 5 with
--   RetryAttemptSeconds as 50 seconds, Config will put a
--   RemediationException on your behalf for the failing resource after the
--   5th failed attempt within 50 seconds.
--   
--   <a>$sel:targetVersion:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetVersion</a> - Version of the target.
--   For example, version of the SSM document.
--   
--   If you make backward incompatible changes to the SSM document, you
--   must call PutRemediationConfiguration API again to ensure the
--   remediations can run.
--   
--   <a>$sel:configRuleName:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_configRuleName</a> - The name of the
--   Config rule.
--   
--   <a>$sel:targetType:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetType</a> - The type of the target.
--   Target executes remediation. For example, SSM document.
--   
--   <a>$sel:targetId:RemediationConfiguration'</a>,
--   <a>remediationConfiguration_targetId</a> - Target ID is the name of
--   the public document.
newRemediationConfiguration :: Text -> RemediationTargetType -> Text -> RemediationConfiguration

-- | An object that represents the details about the remediation exception.
--   The details include the rule name, an explanation of an exception, the
--   time when the exception will be deleted, the resource ID, and resource
--   type.
--   
--   <i>See:</i> <a>newRemediationException</a> smart constructor.
data RemediationException
RemediationException' :: Maybe Text -> Maybe POSIX -> Text -> Text -> Text -> RemediationException

-- | Create a value of <a>RemediationException</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:RemediationException'</a>,
--   <a>remediationException_message</a> - An explanation of an remediation
--   exception.
--   
--   <a>$sel:expirationTime:RemediationException'</a>,
--   <a>remediationException_expirationTime</a> - The time when the
--   remediation exception will be deleted.
--   
--   <a>$sel:configRuleName:RemediationException'</a>,
--   <a>remediationException_configRuleName</a> - The name of the Config
--   rule.
--   
--   <a>$sel:resourceType:RemediationException'</a>,
--   <a>remediationException_resourceType</a> - The type of a resource.
--   
--   <a>$sel:resourceId:RemediationException'</a>,
--   <a>remediationException_resourceId</a> - The ID of the resource (for
--   example., sg-xxxxxx).
newRemediationException :: Text -> Text -> Text -> RemediationException

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newRemediationExceptionResourceKey</a> smart
--   constructor.
data RemediationExceptionResourceKey
RemediationExceptionResourceKey' :: Maybe Text -> Maybe Text -> RemediationExceptionResourceKey

-- | Create a value of <a>RemediationExceptionResourceKey</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceId</a> - The ID of the
--   resource (for example., sg-xxxxxx).
--   
--   <a>$sel:resourceType:RemediationExceptionResourceKey'</a>,
--   <a>remediationExceptionResourceKey_resourceType</a> - The type of a
--   resource.
newRemediationExceptionResourceKey :: RemediationExceptionResourceKey

-- | Provides details of the current status of the invoked remediation
--   action for that resource.
--   
--   <i>See:</i> <a>newRemediationExecutionStatus</a> smart constructor.
data RemediationExecutionStatus
RemediationExecutionStatus' :: Maybe RemediationExecutionState -> Maybe POSIX -> Maybe ResourceKey -> Maybe [RemediationExecutionStep] -> Maybe POSIX -> RemediationExecutionStatus

-- | Create a value of <a>RemediationExecutionStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_state</a> - ENUM of the values.
--   
--   <a>$sel:lastUpdatedTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_lastUpdatedTime</a> - The time when the
--   remediation execution was last updated.
--   
--   <a>$sel:resourceKey:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_resourceKey</a> - Undocumented member.
--   
--   <a>$sel:stepDetails:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_stepDetails</a> - Details of every step.
--   
--   <a>$sel:invocationTime:RemediationExecutionStatus'</a>,
--   <a>remediationExecutionStatus_invocationTime</a> - Start time when the
--   remediation was executed.
newRemediationExecutionStatus :: RemediationExecutionStatus

-- | Name of the step from the SSM document.
--   
--   <i>See:</i> <a>newRemediationExecutionStep</a> smart constructor.
data RemediationExecutionStep
RemediationExecutionStep' :: Maybe RemediationExecutionStepState -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> RemediationExecutionStep

-- | Create a value of <a>RemediationExecutionStep</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_state</a> - The valid status of the step.
--   
--   <a>$sel:startTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_startTime</a> - The time when the step
--   started.
--   
--   <a>$sel:name:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_name</a> - The details of the step.
--   
--   <a>$sel:stopTime:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_stopTime</a> - The time when the step
--   stopped.
--   
--   <a>$sel:errorMessage:RemediationExecutionStep'</a>,
--   <a>remediationExecutionStep_errorMessage</a> - An error message if the
--   step was interrupted during execution.
newRemediationExecutionStep :: RemediationExecutionStep

-- | The value is either a dynamic (resource) value or a static value. You
--   must select either a dynamic value or a static value.
--   
--   <i>See:</i> <a>newRemediationParameterValue</a> smart constructor.
data RemediationParameterValue
RemediationParameterValue' :: Maybe StaticValue -> Maybe ResourceValue -> RemediationParameterValue

-- | Create a value of <a>RemediationParameterValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:staticValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_staticValue</a> - The value is static and
--   does not change at run-time.
--   
--   <a>$sel:resourceValue:RemediationParameterValue'</a>,
--   <a>remediationParameterValue_resourceValue</a> - The value is dynamic
--   and changes at run-time.
newRemediationParameterValue :: RemediationParameterValue

-- | An object that contains the resource type and the number of resources.
--   
--   <i>See:</i> <a>newResourceCount</a> smart constructor.
data ResourceCount
ResourceCount' :: Maybe ResourceType -> Maybe Integer -> ResourceCount

-- | Create a value of <a>ResourceCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCount'</a>,
--   <a>resourceCount_resourceType</a> - The resource type (for example,
--   <tt>"AWS::EC2::Instance"</tt>).
--   
--   <a>$sel:count:ResourceCount'</a>, <a>resourceCount_count</a> - The
--   number of resources.
newResourceCount :: ResourceCount

-- | Filters the resource count based on account ID, region, and resource
--   type.
--   
--   <i>See:</i> <a>newResourceCountFilters</a> smart constructor.
data ResourceCountFilters
ResourceCountFilters' :: Maybe ResourceType -> Maybe Text -> Maybe Text -> ResourceCountFilters

-- | Create a value of <a>ResourceCountFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_resourceType</a> - The type of the Amazon Web
--   Services resource.
--   
--   <a>$sel:accountId:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_accountId</a> - The 12-digit ID of the
--   account.
--   
--   <a>$sel:region:ResourceCountFilters'</a>,
--   <a>resourceCountFilters_region</a> - The region where the account is
--   located.
newResourceCountFilters :: ResourceCountFilters

-- | Filters the results by resource account ID, region, resource ID, and
--   resource name.
--   
--   <i>See:</i> <a>newResourceFilters</a> smart constructor.
data ResourceFilters
ResourceFilters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResourceFilters

-- | Create a value of <a>ResourceFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceFilters'</a>,
--   <a>resourceFilters_resourceId</a> - The ID of the resource.
--   
--   <a>$sel:resourceName:ResourceFilters'</a>,
--   <a>resourceFilters_resourceName</a> - The name of the resource.
--   
--   <a>$sel:accountId:ResourceFilters'</a>,
--   <a>resourceFilters_accountId</a> - The 12-digit source account ID.
--   
--   <a>$sel:region:ResourceFilters'</a>, <a>resourceFilters_region</a> -
--   The source region.
newResourceFilters :: ResourceFilters

-- | The details that identify a resource that is discovered by Config,
--   including the resource type, ID, and (if available) the custom
--   resource name.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe POSIX -> ResourceIdentifier

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceId</a> - The ID of the resource (for
--   example, <tt>sg-xxxxxx</tt>).
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The type of resource.
--   
--   <a>$sel:resourceName:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceName</a> - The custom name of the
--   resource (if available).
--   
--   <a>$sel:resourceDeletionTime:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceDeletionTime</a> - The time that the
--   resource was deleted.
newResourceIdentifier :: ResourceIdentifier

-- | The details that identify a resource within Config, including the
--   resource type and resource ID.
--   
--   <i>See:</i> <a>newResourceKey</a> smart constructor.
data ResourceKey
ResourceKey' :: ResourceType -> Text -> ResourceKey

-- | Create a value of <a>ResourceKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceKey'</a>, <a>resourceKey_resourceType</a>
--   - The resource type.
--   
--   <a>$sel:resourceId:ResourceKey'</a>, <a>resourceKey_resourceId</a> -
--   The ID of the resource (for example., sg-xxxxxx).
newResourceKey :: ResourceType -> Text -> ResourceKey

-- | The dynamic value of the resource.
--   
--   <i>See:</i> <a>newResourceValue</a> smart constructor.
data ResourceValue
ResourceValue' :: ResourceValueType -> ResourceValue

-- | Create a value of <a>ResourceValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceValue'</a>, <a>resourceValue_value</a> - The
--   value is a resource ID.
newResourceValue :: ResourceValueType -> ResourceValue

-- | An object with the name of the retention configuration and the
--   retention period in days. The object stores the configuration for data
--   retention in Config.
--   
--   <i>See:</i> <a>newRetentionConfiguration</a> smart constructor.
data RetentionConfiguration
RetentionConfiguration' :: Text -> Natural -> RetentionConfiguration

-- | Create a value of <a>RetentionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_name</a> - The name of the retention
--   configuration object.
--   
--   <a>$sel:retentionPeriodInDays:RetentionConfiguration'</a>,
--   <a>retentionConfiguration_retentionPeriodInDays</a> - Number of days
--   Config stores your historical information.
--   
--   Currently, only applicable to the configuration item history.
newRetentionConfiguration :: Text -> Natural -> RetentionConfiguration

-- | Defines which resources trigger an evaluation for an Config rule. The
--   scope can include one or more resource types, a combination of a tag
--   key and value, or a combination of one resource type and one resource
--   ID. Specify a scope to constrain which resources trigger an evaluation
--   for a rule. Otherwise, evaluations for the rule are triggered when any
--   resource in your recording group changes in configuration.
--   
--   <i>See:</i> <a>newScope</a> smart constructor.
data Scope
Scope' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Scope

-- | Create a value of <a>Scope</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:complianceResourceTypes:Scope'</a>,
--   <a>scope_complianceResourceTypes</a> - The resource types of only
--   those Amazon Web Services resources that you want to trigger an
--   evaluation for the rule. You can only specify one type if you also
--   specify a resource ID for <tt>ComplianceResourceId</tt>.
--   
--   <a>$sel:complianceResourceId:Scope'</a>,
--   <a>scope_complianceResourceId</a> - The ID of the only Amazon Web
--   Services resource that you want to trigger an evaluation for the rule.
--   If you specify a resource ID, you must specify one resource type for
--   <tt>ComplianceResourceTypes</tt>.
--   
--   <a>$sel:tagValue:Scope'</a>, <a>scope_tagValue</a> - The tag value
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule. If you specify a value for
--   <tt>TagValue</tt>, you must also specify a value for <tt>TagKey</tt>.
--   
--   <a>$sel:tagKey:Scope'</a>, <a>scope_tagKey</a> - The tag key that is
--   applied to only those Amazon Web Services resources that you want to
--   trigger an evaluation for the rule.
newScope :: Scope

-- | Provides the Config rule owner (Amazon Web Services or customer), the
--   rule identifier, and the events that trigger the evaluation of your
--   Amazon Web Services resources.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe [SourceDetail] -> Owner -> Text -> Source

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceDetails:Source'</a>, <a>source_sourceDetails</a> -
--   Provides the source and type of the event that causes Config to
--   evaluate your Amazon Web Services resources.
--   
--   <a>$sel:owner:Source'</a>, <a>source_owner</a> - Indicates whether
--   Amazon Web Services or the customer owns and manages the Config rule.
--   
--   <a>$sel:sourceIdentifier:Source'</a>, <a>source_sourceIdentifier</a> -
--   For Config managed rules, a predefined identifier from a list. For
--   example, <tt>IAM_PASSWORD_POLICY</tt> is a managed rule. To reference
--   a managed rule, see <a>Using Config managed rules</a>.
--   
--   For custom rules, the identifier is the Amazon Resource Name (ARN) of
--   the rule's Lambda function, such as
--   <tt>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</tt>.
newSource :: Owner -> Text -> Source

-- | Provides the source and the message types that trigger Config to
--   evaluate your Amazon Web Services resources against a rule. It also
--   provides the frequency with which you want Config to run evaluations
--   for the rule if the trigger type is periodic. You can specify the
--   parameter values for <tt>SourceDetail</tt> only for custom rules.
--   
--   <i>See:</i> <a>newSourceDetail</a> smart constructor.
data SourceDetail
SourceDetail' :: Maybe MessageType -> Maybe MaximumExecutionFrequency -> Maybe EventSource -> SourceDetail

-- | Create a value of <a>SourceDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageType:SourceDetail'</a>, <a>sourceDetail_messageType</a>
--   - The type of notification that triggers Config to run an evaluation
--   for a rule. You can specify the following notification types:
--   
--   <ul>
--   <li><tt>ConfigurationItemChangeNotification</tt> - Triggers an
--   evaluation when Config delivers a configuration item as a result of a
--   resource change.</li>
--   <li><tt>OversizedConfigurationItemChangeNotification</tt> - Triggers
--   an evaluation when Config delivers an oversized configuration item.
--   Config may generate this notification type when a resource changes and
--   the notification exceeds the maximum size allowed by Amazon SNS.</li>
--   <li><tt>ScheduledNotification</tt> - Triggers a periodic evaluation at
--   the frequency specified for <tt>MaximumExecutionFrequency</tt>.</li>
--   <li><tt>ConfigurationSnapshotDeliveryCompleted</tt> - Triggers a
--   periodic evaluation when Config delivers a configuration
--   snapshot.</li>
--   </ul>
--   
--   If you want your custom rule to be triggered by configuration changes,
--   specify two SourceDetail objects, one for
--   <tt>ConfigurationItemChangeNotification</tt> and one for
--   <tt>OversizedConfigurationItemChangeNotification</tt>.
--   
--   <a>$sel:maximumExecutionFrequency:SourceDetail'</a>,
--   <a>sourceDetail_maximumExecutionFrequency</a> - The frequency at which
--   you want Config to run evaluations for a custom rule with a periodic
--   trigger. If you specify a value for
--   <tt>MaximumExecutionFrequency</tt>, then <tt>MessageType</tt> must use
--   the <tt>ScheduledNotification</tt> value.
--   
--   By default, rules with a periodic trigger are evaluated every 24
--   hours. To change the frequency, specify a valid value for the
--   <tt>MaximumExecutionFrequency</tt> parameter.
--   
--   Based on the valid value you choose, Config runs evaluations once for
--   each valid value. For example, if you choose <tt>Three_Hours</tt>,
--   Config runs evaluations once every three hours. In this case,
--   <tt>Three_Hours</tt> is the frequency of this rule.
--   
--   <a>$sel:eventSource:SourceDetail'</a>, <a>sourceDetail_eventSource</a>
--   - The source of the event, such as an Amazon Web Services service,
--   that triggers Config to evaluate your Amazon Web Services resources.
newSourceDetail :: SourceDetail

-- | Amazon Web Services Systems Manager (SSM) specific remediation
--   controls.
--   
--   <i>See:</i> <a>newSsmControls</a> smart constructor.
data SsmControls
SsmControls' :: Maybe Natural -> Maybe Natural -> SsmControls

-- | Create a value of <a>SsmControls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentExecutionRatePercentage:SsmControls'</a>,
--   <a>ssmControls_concurrentExecutionRatePercentage</a> - The maximum
--   percentage of remediation actions allowed to run in parallel on the
--   non-compliant resources for that specific rule. You can specify a
--   percentage, such as 10%. The default value is 10.
--   
--   <a>$sel:errorPercentage:SsmControls'</a>,
--   <a>ssmControls_errorPercentage</a> - The percentage of errors that are
--   allowed before SSM stops running automations on non-compliant
--   resources for that specific rule. You can specify a percentage of
--   errors, for example 10%. If you do not specifiy a percentage, the
--   default is 50%. For example, if you set the ErrorPercentage to 40% for
--   10 non-compliant resources, then SSM stops running the automations
--   when the fifth error is received.
newSsmControls :: SsmControls

-- | The static value of the resource.
--   
--   <i>See:</i> <a>newStaticValue</a> smart constructor.
data StaticValue
StaticValue' :: [Text] -> StaticValue

-- | Create a value of <a>StaticValue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:StaticValue'</a>, <a>staticValue_values</a> - A list of
--   values. For example, the ARN of the assumed role.
newStaticValue :: StaticValue

-- | Status filter object to filter results based on specific member
--   account ID or status type for an organization config rule.
--   
--   <i>See:</i> <a>newStatusDetailFilters</a> smart constructor.
data StatusDetailFilters
StatusDetailFilters' :: Maybe MemberAccountRuleStatus -> Maybe Text -> StatusDetailFilters

-- | Create a value of <a>StatusDetailFilters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberAccountRuleStatus:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_memberAccountRuleStatus</a> - Indicates
--   deployment status for config rule in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the first
--   time, config rule status is created in the member account. When master
--   account calls <tt>PutOrganizationConfigRule</tt> action for the second
--   time, config rule status is updated in the member account. Config rule
--   status is deleted when the master account deletes
--   <tt>OrganizationConfigRule</tt> and disables service access for
--   <tt>config-multiaccountsetup.amazonaws.com</tt>.
--   
--   Config sets the state of the rule to:
--   
--   <ul>
--   <li><tt>CREATE_SUCCESSFUL</tt> when config rule has been created in
--   the member account.</li>
--   <li><tt>CREATE_IN_PROGRESS</tt> when config rule is being created in
--   the member account.</li>
--   <li><tt>CREATE_FAILED</tt> when config rule creation has failed in the
--   member account.</li>
--   <li><tt>DELETE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   <li><tt>DELETE_IN_PROGRESS</tt> when config rule is being deleted in
--   the member account.</li>
--   <li><tt>DELETE_SUCCESSFUL</tt> when config rule has been deleted in
--   the member account.</li>
--   <li><tt>UPDATE_SUCCESSFUL</tt> when config rule has been updated in
--   the member account.</li>
--   <li><tt>UPDATE_IN_PROGRESS</tt> when config rule is being updated in
--   the member account.</li>
--   <li><tt>UPDATE_FAILED</tt> when config rule deletion has failed in the
--   member account.</li>
--   </ul>
--   
--   <a>$sel:accountId:StatusDetailFilters'</a>,
--   <a>statusDetailFilters_accountId</a> - The 12-digit account ID of the
--   member account within an organization.
newStatusDetailFilters :: StatusDetailFilters

-- | Provides the details of a stored query.
--   
--   <i>See:</i> <a>newStoredQuery</a> smart constructor.
data StoredQuery
StoredQuery' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> StoredQuery

-- | Create a value of <a>StoredQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StoredQuery'</a>, <a>storedQuery_queryId</a> - The ID
--   of the query.
--   
--   <a>$sel:queryArn:StoredQuery'</a>, <a>storedQuery_queryArn</a> -
--   Amazon Resource Name (ARN) of the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:expression:StoredQuery'</a>, <a>storedQuery_expression</a> -
--   The expression of the query. For example, <tt>SELECT resourceId,
--   resourceType,
--   supplementaryConfiguration.BucketVersioningConfiguration.status WHERE
--   resourceType = 'AWS::S3::Bucket' AND
--   supplementaryConfiguration.BucketVersioningConfiguration.status =
--   'Off'.</tt>
--   
--   <a>$sel:description:StoredQuery'</a>, <a>storedQuery_description</a> -
--   A unique description for the query.
--   
--   <a>$sel:queryName:StoredQuery'</a>, <a>storedQuery_queryName</a> - The
--   name of the query.
newStoredQuery :: Text -> StoredQuery

-- | Returns details of a specific query.
--   
--   <i>See:</i> <a>newStoredQueryMetadata</a> smart constructor.
data StoredQueryMetadata
StoredQueryMetadata' :: Maybe Text -> Text -> Text -> Text -> StoredQueryMetadata

-- | Create a value of <a>StoredQueryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_description</a> - A unique description for the
--   query.
--   
--   <a>$sel:queryId:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryId</a> - The ID of the query.
--   
--   <a>$sel:queryArn:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryArn</a> - Amazon Resource Name (ARN) of
--   the query. For example,
--   arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
--   
--   <a>$sel:queryName:StoredQueryMetadata'</a>,
--   <a>storedQueryMetadata_queryName</a> - The name of the query.
newStoredQueryMetadata :: Text -> Text -> Text -> StoredQueryMetadata

-- | The tags for the resource. The metadata that you apply to a resource
--   to help you categorize and organize them. Each tag consists of a key
--   and an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that make up a tag. A value acts as a descriptor within
--   a tag category (key).
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that make up a tag. A key is a general label that acts like a category
--   for more specific tag values.
newTag :: Tag
