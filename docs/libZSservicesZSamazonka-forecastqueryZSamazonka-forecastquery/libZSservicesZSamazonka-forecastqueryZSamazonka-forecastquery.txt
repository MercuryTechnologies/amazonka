-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-forecastqueryZSamazonka-forecastquery
@version 2.0


module Amazonka.ForecastQuery.Types.DataPoint

-- | The forecast value for a specific date. Part of the Forecast object.
--   
--   <i>See:</i> <a>newDataPoint</a> smart constructor.
data DataPoint
DataPoint' :: Maybe Double -> Maybe Text -> DataPoint

-- | The forecast value.
[$sel:value:DataPoint'] :: DataPoint -> Maybe Double

-- | The timestamp of the specific forecast.
[$sel:timestamp:DataPoint'] :: DataPoint -> Maybe Text

-- | Create a value of <a>DataPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DataPoint'</a>, <a>dataPoint_value</a> - The forecast
--   value.
--   
--   <a>$sel:timestamp:DataPoint'</a>, <a>dataPoint_timestamp</a> - The
--   timestamp of the specific forecast.
newDataPoint :: DataPoint

-- | The forecast value.
dataPoint_value :: Lens' DataPoint (Maybe Double)

-- | The timestamp of the specific forecast.
dataPoint_timestamp :: Lens' DataPoint (Maybe Text)
instance GHC.Generics.Generic Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance GHC.Show.Show Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance GHC.Read.Read Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance GHC.Classes.Eq Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance Data.Hashable.Class.Hashable Amazonka.ForecastQuery.Types.DataPoint.DataPoint
instance Control.DeepSeq.NFData Amazonka.ForecastQuery.Types.DataPoint.DataPoint


module Amazonka.ForecastQuery.Types.Forecast

-- | Provides information about a forecast. Returned as part of the
--   QueryForecast response.
--   
--   <i>See:</i> <a>newForecast</a> smart constructor.
data Forecast
Forecast' :: Maybe (HashMap Text [DataPoint]) -> Forecast

-- | The forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
[$sel:predictions:Forecast'] :: Forecast -> Maybe (HashMap Text [DataPoint])

-- | Create a value of <a>Forecast</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictions:Forecast'</a>, <a>forecast_predictions</a> - The
--   forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
newForecast :: Forecast

-- | The forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
forecast_predictions :: Lens' Forecast (Maybe (HashMap Text [DataPoint]))
instance GHC.Generics.Generic Amazonka.ForecastQuery.Types.Forecast.Forecast
instance GHC.Show.Show Amazonka.ForecastQuery.Types.Forecast.Forecast
instance GHC.Read.Read Amazonka.ForecastQuery.Types.Forecast.Forecast
instance GHC.Classes.Eq Amazonka.ForecastQuery.Types.Forecast.Forecast
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ForecastQuery.Types.Forecast.Forecast
instance Data.Hashable.Class.Hashable Amazonka.ForecastQuery.Types.Forecast.Forecast
instance Control.DeepSeq.NFData Amazonka.ForecastQuery.Types.Forecast.Forecast


module Amazonka.ForecastQuery.Types

-- | API version <tt>2018-06-26</tt> of the Amazon Forecast Query Service
--   SDK configuration.
defaultService :: Service

-- | The token is not valid. Tokens expire after 24 hours.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value is invalid or is too long.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can't find that resource. Check the information that you've
--   provided and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second has been exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The forecast value for a specific date. Part of the Forecast object.
--   
--   <i>See:</i> <a>newDataPoint</a> smart constructor.
data DataPoint
DataPoint' :: Maybe Double -> Maybe Text -> DataPoint

-- | The forecast value.
[$sel:value:DataPoint'] :: DataPoint -> Maybe Double

-- | The timestamp of the specific forecast.
[$sel:timestamp:DataPoint'] :: DataPoint -> Maybe Text

-- | Create a value of <a>DataPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DataPoint'</a>, <a>dataPoint_value</a> - The forecast
--   value.
--   
--   <a>$sel:timestamp:DataPoint'</a>, <a>dataPoint_timestamp</a> - The
--   timestamp of the specific forecast.
newDataPoint :: DataPoint

-- | The forecast value.
dataPoint_value :: Lens' DataPoint (Maybe Double)

-- | The timestamp of the specific forecast.
dataPoint_timestamp :: Lens' DataPoint (Maybe Text)

-- | Provides information about a forecast. Returned as part of the
--   QueryForecast response.
--   
--   <i>See:</i> <a>newForecast</a> smart constructor.
data Forecast
Forecast' :: Maybe (HashMap Text [DataPoint]) -> Forecast

-- | The forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
[$sel:predictions:Forecast'] :: Forecast -> Maybe (HashMap Text [DataPoint])

-- | Create a value of <a>Forecast</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictions:Forecast'</a>, <a>forecast_predictions</a> - The
--   forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
newForecast :: Forecast

-- | The forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
forecast_predictions :: Lens' Forecast (Maybe (HashMap Text [DataPoint]))


-- | Retrieves a forecast for a single item, filtered by the supplied
--   criteria.
--   
--   The criteria is a key-value pair. The key is either <tt>item_id</tt>
--   (or the equivalent non-timestamp, non-target field) from the
--   <tt>TARGET_TIME_SERIES</tt> dataset, or one of the forecast dimensions
--   specified as part of the <tt>FeaturizationConfig</tt> object.
--   
--   By default, <tt>QueryForecast</tt> returns the complete date range for
--   the filtered forecast. You can request a specific date range.
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
--   
--   The forecasts generated by Amazon Forecast are in the same timezone as
--   the dataset that was used to create the predictor.
module Amazonka.ForecastQuery.QueryForecast

-- | <i>See:</i> <a>newQueryForecast</a> smart constructor.
data QueryForecast
QueryForecast' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> HashMap Text Text -> QueryForecast

-- | The end date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T20:00:00.
[$sel:endDate:QueryForecast'] :: QueryForecast -> Maybe Text

-- | The start date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T08:00:00.
[$sel:startDate:QueryForecast'] :: QueryForecast -> Maybe Text

-- | If the result of the previous request was truncated, the response
--   includes a <tt>NextToken</tt>. To retrieve the next set of results,
--   use the token in the next request. Tokens expire after 24 hours.
[$sel:nextToken:QueryForecast'] :: QueryForecast -> Maybe Text

-- | The Amazon Resource Name (ARN) of the forecast to query.
[$sel:forecastArn:QueryForecast'] :: QueryForecast -> Text

-- | The filtering criteria to apply when retrieving the forecast. For
--   example, to get the forecast for <tt>client_21</tt> in the electricity
--   usage dataset, specify the following:
--   
--   <pre>
--   {"item_id" : "client_21"}
--   </pre>
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
[$sel:filters:QueryForecast'] :: QueryForecast -> HashMap Text Text

-- | Create a value of <a>QueryForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endDate:QueryForecast'</a>, <a>queryForecast_endDate</a> - The
--   end date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T20:00:00.
--   
--   <a>$sel:startDate:QueryForecast'</a>, <a>queryForecast_startDate</a> -
--   The start date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T08:00:00.
--   
--   <a>$sel:nextToken:QueryForecast'</a>, <a>queryForecast_nextToken</a> -
--   If the result of the previous request was truncated, the response
--   includes a <tt>NextToken</tt>. To retrieve the next set of results,
--   use the token in the next request. Tokens expire after 24 hours.
--   
--   <a>$sel:forecastArn:QueryForecast'</a>,
--   <a>queryForecast_forecastArn</a> - The Amazon Resource Name (ARN) of
--   the forecast to query.
--   
--   <a>$sel:filters:QueryForecast'</a>, <a>queryForecast_filters</a> - The
--   filtering criteria to apply when retrieving the forecast. For example,
--   to get the forecast for <tt>client_21</tt> in the electricity usage
--   dataset, specify the following:
--   
--   <pre>
--   {"item_id" : "client_21"}
--   </pre>
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
newQueryForecast :: Text -> QueryForecast

-- | The end date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T20:00:00.
queryForecast_endDate :: Lens' QueryForecast (Maybe Text)

-- | The start date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T08:00:00.
queryForecast_startDate :: Lens' QueryForecast (Maybe Text)

-- | If the result of the previous request was truncated, the response
--   includes a <tt>NextToken</tt>. To retrieve the next set of results,
--   use the token in the next request. Tokens expire after 24 hours.
queryForecast_nextToken :: Lens' QueryForecast (Maybe Text)

-- | The Amazon Resource Name (ARN) of the forecast to query.
queryForecast_forecastArn :: Lens' QueryForecast Text

-- | The filtering criteria to apply when retrieving the forecast. For
--   example, to get the forecast for <tt>client_21</tt> in the electricity
--   usage dataset, specify the following:
--   
--   <pre>
--   {"item_id" : "client_21"}
--   </pre>
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
queryForecast_filters :: Lens' QueryForecast (HashMap Text Text)

-- | <i>See:</i> <a>newQueryForecastResponse</a> smart constructor.
data QueryForecastResponse
QueryForecastResponse' :: Maybe Forecast -> Int -> QueryForecastResponse

-- | The forecast.
[$sel:forecast:QueryForecastResponse'] :: QueryForecastResponse -> Maybe Forecast

-- | The response's http status code.
[$sel:httpStatus:QueryForecastResponse'] :: QueryForecastResponse -> Int

-- | Create a value of <a>QueryForecastResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forecast:QueryForecastResponse'</a>,
--   <a>queryForecastResponse_forecast</a> - The forecast.
--   
--   <a>$sel:httpStatus:QueryForecastResponse'</a>,
--   <a>queryForecastResponse_httpStatus</a> - The response's http status
--   code.
newQueryForecastResponse :: Int -> QueryForecastResponse

-- | The forecast.
queryForecastResponse_forecast :: Lens' QueryForecastResponse (Maybe Forecast)

-- | The response's http status code.
queryForecastResponse_httpStatus :: Lens' QueryForecastResponse Int
instance GHC.Generics.Generic Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance GHC.Show.Show Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance GHC.Read.Read Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance GHC.Classes.Eq Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance GHC.Generics.Generic Amazonka.ForecastQuery.QueryForecast.QueryForecastResponse
instance GHC.Show.Show Amazonka.ForecastQuery.QueryForecast.QueryForecastResponse
instance GHC.Read.Read Amazonka.ForecastQuery.QueryForecast.QueryForecastResponse
instance GHC.Classes.Eq Amazonka.ForecastQuery.QueryForecast.QueryForecastResponse
instance Amazonka.Types.AWSRequest Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Control.DeepSeq.NFData Amazonka.ForecastQuery.QueryForecast.QueryForecastResponse
instance Data.Hashable.Class.Hashable Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Control.DeepSeq.NFData Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Amazonka.Data.Headers.ToHeaders Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Amazonka.Data.Path.ToPath Amazonka.ForecastQuery.QueryForecast.QueryForecast
instance Amazonka.Data.Query.ToQuery Amazonka.ForecastQuery.QueryForecast.QueryForecast


module Amazonka.ForecastQuery.Lens

-- | The end date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T20:00:00.
queryForecast_endDate :: Lens' QueryForecast (Maybe Text)

-- | The start date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T08:00:00.
queryForecast_startDate :: Lens' QueryForecast (Maybe Text)

-- | If the result of the previous request was truncated, the response
--   includes a <tt>NextToken</tt>. To retrieve the next set of results,
--   use the token in the next request. Tokens expire after 24 hours.
queryForecast_nextToken :: Lens' QueryForecast (Maybe Text)

-- | The Amazon Resource Name (ARN) of the forecast to query.
queryForecast_forecastArn :: Lens' QueryForecast Text

-- | The filtering criteria to apply when retrieving the forecast. For
--   example, to get the forecast for <tt>client_21</tt> in the electricity
--   usage dataset, specify the following:
--   
--   <pre>
--   {"item_id" : "client_21"}
--   </pre>
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
queryForecast_filters :: Lens' QueryForecast (HashMap Text Text)

-- | The forecast.
queryForecastResponse_forecast :: Lens' QueryForecastResponse (Maybe Forecast)

-- | The response's http status code.
queryForecastResponse_httpStatus :: Lens' QueryForecastResponse Int

-- | The forecast value.
dataPoint_value :: Lens' DataPoint (Maybe Double)

-- | The timestamp of the specific forecast.
dataPoint_timestamp :: Lens' DataPoint (Maybe Text)

-- | The forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
forecast_predictions :: Lens' Forecast (Maybe (HashMap Text [DataPoint]))


module Amazonka.ForecastQuery.Waiters


-- | Derived from API version <tt>2018-06-26</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Provides APIs for creating and managing Amazon Forecast resources.
module Amazonka.ForecastQuery

-- | API version <tt>2018-06-26</tt> of the Amazon Forecast Query Service
--   SDK configuration.
defaultService :: Service

-- | The token is not valid. Tokens expire after 24 hours.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value is invalid or is too long.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can't find that resource. Check the information that you've
--   provided and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second has been exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newQueryForecast</a> smart constructor.
data QueryForecast
QueryForecast' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> HashMap Text Text -> QueryForecast

-- | Create a value of <a>QueryForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endDate:QueryForecast'</a>, <a>queryForecast_endDate</a> - The
--   end date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T20:00:00.
--   
--   <a>$sel:startDate:QueryForecast'</a>, <a>queryForecast_startDate</a> -
--   The start date for the forecast. Specify the date using this format:
--   yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example,
--   2015-01-01T08:00:00.
--   
--   <a>$sel:nextToken:QueryForecast'</a>, <a>queryForecast_nextToken</a> -
--   If the result of the previous request was truncated, the response
--   includes a <tt>NextToken</tt>. To retrieve the next set of results,
--   use the token in the next request. Tokens expire after 24 hours.
--   
--   <a>$sel:forecastArn:QueryForecast'</a>,
--   <a>queryForecast_forecastArn</a> - The Amazon Resource Name (ARN) of
--   the forecast to query.
--   
--   <a>$sel:filters:QueryForecast'</a>, <a>queryForecast_filters</a> - The
--   filtering criteria to apply when retrieving the forecast. For example,
--   to get the forecast for <tt>client_21</tt> in the electricity usage
--   dataset, specify the following:
--   
--   <pre>
--   {"item_id" : "client_21"}
--   </pre>
--   
--   To get the full forecast, use the <a>CreateForecastExportJob</a>
--   operation.
newQueryForecast :: Text -> QueryForecast

-- | <i>See:</i> <a>newQueryForecastResponse</a> smart constructor.
data QueryForecastResponse
QueryForecastResponse' :: Maybe Forecast -> Int -> QueryForecastResponse

-- | Create a value of <a>QueryForecastResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forecast:QueryForecastResponse'</a>,
--   <a>queryForecastResponse_forecast</a> - The forecast.
--   
--   <a>$sel:httpStatus:QueryForecastResponse'</a>,
--   <a>queryForecastResponse_httpStatus</a> - The response's http status
--   code.
newQueryForecastResponse :: Int -> QueryForecastResponse

-- | The forecast value for a specific date. Part of the Forecast object.
--   
--   <i>See:</i> <a>newDataPoint</a> smart constructor.
data DataPoint
DataPoint' :: Maybe Double -> Maybe Text -> DataPoint

-- | Create a value of <a>DataPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DataPoint'</a>, <a>dataPoint_value</a> - The forecast
--   value.
--   
--   <a>$sel:timestamp:DataPoint'</a>, <a>dataPoint_timestamp</a> - The
--   timestamp of the specific forecast.
newDataPoint :: DataPoint

-- | Provides information about a forecast. Returned as part of the
--   QueryForecast response.
--   
--   <i>See:</i> <a>newForecast</a> smart constructor.
data Forecast
Forecast' :: Maybe (HashMap Text [DataPoint]) -> Forecast

-- | Create a value of <a>Forecast</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predictions:Forecast'</a>, <a>forecast_predictions</a> - The
--   forecast.
--   
--   The <i>string</i> of the string-to-array map is one of the following
--   values:
--   
--   <ul>
--   <li>p10</li>
--   <li>p50</li>
--   <li>p90</li>
--   </ul>
newForecast :: Forecast
