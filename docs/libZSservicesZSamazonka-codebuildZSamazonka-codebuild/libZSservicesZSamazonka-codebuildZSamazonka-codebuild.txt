-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codebuildZSamazonka-codebuild
@version 2.0


module Amazonka.CodeBuild.Types.ArtifactNamespace
newtype ArtifactNamespace
ArtifactNamespace' :: Text -> ArtifactNamespace
[fromArtifactNamespace] :: ArtifactNamespace -> Text
pattern ArtifactNamespace_BUILD_ID :: ArtifactNamespace
pattern ArtifactNamespace_NONE :: ArtifactNamespace
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance GHC.Read.Read Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace
instance GHC.Show.Show Amazonka.CodeBuild.Types.ArtifactNamespace.ArtifactNamespace


module Amazonka.CodeBuild.Types.ArtifactPackaging
newtype ArtifactPackaging
ArtifactPackaging' :: Text -> ArtifactPackaging
[fromArtifactPackaging] :: ArtifactPackaging -> Text
pattern ArtifactPackaging_NONE :: ArtifactPackaging
pattern ArtifactPackaging_ZIP :: ArtifactPackaging
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance GHC.Read.Read Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging
instance GHC.Show.Show Amazonka.CodeBuild.Types.ArtifactPackaging.ArtifactPackaging


module Amazonka.CodeBuild.Types.ArtifactsType
newtype ArtifactsType
ArtifactsType' :: Text -> ArtifactsType
[fromArtifactsType] :: ArtifactsType -> Text
pattern ArtifactsType_CODEPIPELINE :: ArtifactsType
pattern ArtifactsType_NO_ARTIFACTS :: ArtifactsType
pattern ArtifactsType_S3 :: ArtifactsType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ArtifactsType.ArtifactsType


module Amazonka.CodeBuild.Types.AuthType
newtype AuthType
AuthType' :: Text -> AuthType
[fromAuthType] :: AuthType -> Text
pattern AuthType_BASIC_AUTH :: AuthType
pattern AuthType_OAUTH :: AuthType
pattern AuthType_PERSONAL_ACCESS_TOKEN :: AuthType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.AuthType.AuthType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.AuthType.AuthType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.AuthType.AuthType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.AuthType.AuthType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.AuthType.AuthType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.AuthType.AuthType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.AuthType.AuthType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.AuthType.AuthType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.AuthType.AuthType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.AuthType.AuthType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.AuthType.AuthType
instance GHC.Read.Read Amazonka.CodeBuild.Types.AuthType.AuthType
instance GHC.Show.Show Amazonka.CodeBuild.Types.AuthType.AuthType


module Amazonka.CodeBuild.Types.BatchReportModeType
newtype BatchReportModeType
BatchReportModeType' :: Text -> BatchReportModeType
[fromBatchReportModeType] :: BatchReportModeType -> Text
pattern BatchReportModeType_REPORT_AGGREGATED_BATCH :: BatchReportModeType
pattern BatchReportModeType_REPORT_INDIVIDUAL_BUILDS :: BatchReportModeType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance GHC.Read.Read Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType
instance GHC.Show.Show Amazonka.CodeBuild.Types.BatchReportModeType.BatchReportModeType


module Amazonka.CodeBuild.Types.BatchRestrictions

-- | Specifies restrictions for the batch build.
--   
--   <i>See:</i> <a>newBatchRestrictions</a> smart constructor.
data BatchRestrictions
BatchRestrictions' :: Maybe Int -> Maybe [Text] -> BatchRestrictions

-- | Specifies the maximum number of builds allowed.
[$sel:maximumBuildsAllowed:BatchRestrictions'] :: BatchRestrictions -> Maybe Int

-- | An array of strings that specify the compute types that are allowed
--   for the batch build. See <a>Build environment compute types</a> in the
--   <i>CodeBuild User Guide</i> for these values.
[$sel:computeTypesAllowed:BatchRestrictions'] :: BatchRestrictions -> Maybe [Text]

-- | Create a value of <a>BatchRestrictions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumBuildsAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_maximumBuildsAllowed</a> - Specifies the maximum
--   number of builds allowed.
--   
--   <a>$sel:computeTypesAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_computeTypesAllowed</a> - An array of strings
--   that specify the compute types that are allowed for the batch build.
--   See <a>Build environment compute types</a> in the <i>CodeBuild User
--   Guide</i> for these values.
newBatchRestrictions :: BatchRestrictions

-- | Specifies the maximum number of builds allowed.
batchRestrictions_maximumBuildsAllowed :: Lens' BatchRestrictions (Maybe Int)

-- | An array of strings that specify the compute types that are allowed
--   for the batch build. See <a>Build environment compute types</a> in the
--   <i>CodeBuild User Guide</i> for these values.
batchRestrictions_computeTypesAllowed :: Lens' BatchRestrictions (Maybe [Text])
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance GHC.Show.Show Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance GHC.Read.Read Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BatchRestrictions.BatchRestrictions


module Amazonka.CodeBuild.Types.BucketOwnerAccess

-- | Specifies the bucket owner's access for objects that another account
--   uploads to their Amazon S3 bucket. By default, only the account that
--   uploads the objects to the bucket has access to these objects. This
--   property allows you to give the bucket owner access to these objects.
--   
--   To use this property, your CodeBuild service role must have the
--   <tt>s3:PutBucketAcl</tt> permission. This permission allows CodeBuild
--   to modify the access control list for the bucket.
--   
--   This property can be one of the following values:
--   
--   <ul>
--   <li><i>NONE</i> The bucket owner does not have access to the objects.
--   This is the default.</li>
--   <li><i>READ_ONLY</i> The bucket owner has read-only access to the
--   objects. The uploading account retains ownership of the objects.</li>
--   <li><i>FULL</i> The bucket owner has full access to the objects.
--   Object ownership is determined by the following criteria:<ul><li>If
--   the bucket is configured with the <b>Bucket owner preferred</b>
--   setting, the bucket owner owns the objects. The uploading account will
--   have object access as specified by the bucket's
--   policy.</li><li>Otherwise, the uploading account retains ownership of
--   the objects.</li></ul>For more information about Amazon S3 object
--   ownership, see <a>Controlling ownership of uploaded objects using S3
--   Object Ownership</a> in the <i>Amazon Simple Storage Service User
--   Guide</i>.</li>
--   </ul>
newtype BucketOwnerAccess
BucketOwnerAccess' :: Text -> BucketOwnerAccess
[fromBucketOwnerAccess] :: BucketOwnerAccess -> Text
pattern BucketOwnerAccess_FULL :: BucketOwnerAccess
pattern BucketOwnerAccess_NONE :: BucketOwnerAccess
pattern BucketOwnerAccess_READ_ONLY :: BucketOwnerAccess
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance GHC.Read.Read Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess
instance GHC.Show.Show Amazonka.CodeBuild.Types.BucketOwnerAccess.BucketOwnerAccess


module Amazonka.CodeBuild.Types.BuildArtifacts

-- | Information about build output artifacts.
--   
--   <i>See:</i> <a>newBuildArtifacts</a> smart constructor.
data BuildArtifacts
BuildArtifacts' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe BucketOwnerAccess -> BuildArtifacts

-- | Information about the location of the build artifacts.
[$sel:location:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | The MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
[$sel:md5sum:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | Information that tells you if encryption for build artifacts is
--   disabled.
[$sel:encryptionDisabled:BuildArtifacts'] :: BuildArtifacts -> Maybe Bool

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
[$sel:overrideArtifactName:BuildArtifacts'] :: BuildArtifacts -> Maybe Bool

-- | An identifier for this artifact definition.
[$sel:artifactIdentifier:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
[$sel:sha256sum:BuildArtifacts'] :: BuildArtifacts -> Maybe Text
[$sel:bucketOwnerAccess:BuildArtifacts'] :: BuildArtifacts -> Maybe BucketOwnerAccess

-- | Create a value of <a>BuildArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:BuildArtifacts'</a>, <a>buildArtifacts_location</a> -
--   Information about the location of the build artifacts.
--   
--   <a>$sel:md5sum:BuildArtifacts'</a>, <a>buildArtifacts_md5sum</a> - The
--   MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:encryptionDisabled:BuildArtifacts'</a>,
--   <a>buildArtifacts_encryptionDisabled</a> - Information that tells you
--   if encryption for build artifacts is disabled.
--   
--   <a>$sel:overrideArtifactName:BuildArtifacts'</a>,
--   <a>buildArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:BuildArtifacts'</a>,
--   <a>buildArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:sha256sum:BuildArtifacts'</a>, <a>buildArtifacts_sha256sum</a>
--   - The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:bucketOwnerAccess:BuildArtifacts'</a>,
--   <a>buildArtifacts_bucketOwnerAccess</a> - Undocumented member.
newBuildArtifacts :: BuildArtifacts

-- | Information about the location of the build artifacts.
buildArtifacts_location :: Lens' BuildArtifacts (Maybe Text)

-- | The MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_md5sum :: Lens' BuildArtifacts (Maybe Text)

-- | Information that tells you if encryption for build artifacts is
--   disabled.
buildArtifacts_encryptionDisabled :: Lens' BuildArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
buildArtifacts_overrideArtifactName :: Lens' BuildArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
buildArtifacts_artifactIdentifier :: Lens' BuildArtifacts (Maybe Text)

-- | The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_sha256sum :: Lens' BuildArtifacts (Maybe Text)

-- | Undocumented member.
buildArtifacts_bucketOwnerAccess :: Lens' BuildArtifacts (Maybe BucketOwnerAccess)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildArtifacts.BuildArtifacts


module Amazonka.CodeBuild.Types.BuildBatchPhaseType
newtype BuildBatchPhaseType
BuildBatchPhaseType' :: Text -> BuildBatchPhaseType
[fromBuildBatchPhaseType] :: BuildBatchPhaseType -> Text
pattern BuildBatchPhaseType_COMBINE_ARTIFACTS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_DOWNLOAD_BATCHSPEC :: BuildBatchPhaseType
pattern BuildBatchPhaseType_FAILED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_IN_PROGRESS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_STOPPED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUBMITTED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUCCEEDED :: BuildBatchPhaseType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildBatchPhaseType.BuildBatchPhaseType


module Amazonka.CodeBuild.Types.BuildNotDeleted

-- | Information about a build that could not be successfully deleted.
--   
--   <i>See:</i> <a>newBuildNotDeleted</a> smart constructor.
data BuildNotDeleted
BuildNotDeleted' :: Maybe Text -> Maybe Text -> BuildNotDeleted

-- | The ID of the build that could not be successfully deleted.
[$sel:id:BuildNotDeleted'] :: BuildNotDeleted -> Maybe Text

-- | Additional information about the build that could not be successfully
--   deleted.
[$sel:statusCode:BuildNotDeleted'] :: BuildNotDeleted -> Maybe Text

-- | Create a value of <a>BuildNotDeleted</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:BuildNotDeleted'</a>, <a>buildNotDeleted_id</a> - The ID of
--   the build that could not be successfully deleted.
--   
--   <a>$sel:statusCode:BuildNotDeleted'</a>,
--   <a>buildNotDeleted_statusCode</a> - Additional information about the
--   build that could not be successfully deleted.
newBuildNotDeleted :: BuildNotDeleted

-- | The ID of the build that could not be successfully deleted.
buildNotDeleted_id :: Lens' BuildNotDeleted (Maybe Text)

-- | Additional information about the build that could not be successfully
--   deleted.
buildNotDeleted_statusCode :: Lens' BuildNotDeleted (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildNotDeleted.BuildNotDeleted


module Amazonka.CodeBuild.Types.BuildPhaseType
newtype BuildPhaseType
BuildPhaseType' :: Text -> BuildPhaseType
[fromBuildPhaseType] :: BuildPhaseType -> Text
pattern BuildPhaseType_BUILD :: BuildPhaseType
pattern BuildPhaseType_COMPLETED :: BuildPhaseType
pattern BuildPhaseType_DOWNLOAD_SOURCE :: BuildPhaseType
pattern BuildPhaseType_FINALIZING :: BuildPhaseType
pattern BuildPhaseType_INSTALL :: BuildPhaseType
pattern BuildPhaseType_POST_BUILD :: BuildPhaseType
pattern BuildPhaseType_PRE_BUILD :: BuildPhaseType
pattern BuildPhaseType_PROVISIONING :: BuildPhaseType
pattern BuildPhaseType_QUEUED :: BuildPhaseType
pattern BuildPhaseType_SUBMITTED :: BuildPhaseType
pattern BuildPhaseType_UPLOAD_ARTIFACTS :: BuildPhaseType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildPhaseType.BuildPhaseType


module Amazonka.CodeBuild.Types.BuildStatusConfig

-- | Contains information that defines how the CodeBuild build project
--   reports the build status to the source provider.
--   
--   <i>See:</i> <a>newBuildStatusConfig</a> smart constructor.
data BuildStatusConfig
BuildStatusConfig' :: Maybe Text -> Maybe Text -> BuildStatusConfig

-- | Specifies the context of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
[$sel:context:BuildStatusConfig'] :: BuildStatusConfig -> Maybe Text

-- | Specifies the target url of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
[$sel:targetUrl:BuildStatusConfig'] :: BuildStatusConfig -> Maybe Text

-- | Create a value of <a>BuildStatusConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_context</a> - Specifies the context of the build
--   status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
--   
--   <a>$sel:targetUrl:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_targetUrl</a> - Specifies the target url of the
--   build status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
newBuildStatusConfig :: BuildStatusConfig

-- | Specifies the context of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
buildStatusConfig_context :: Lens' BuildStatusConfig (Maybe Text)

-- | Specifies the target url of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
buildStatusConfig_targetUrl :: Lens' BuildStatusConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BuildStatusConfig.BuildStatusConfig


module Amazonka.CodeBuild.Types.CacheMode
newtype CacheMode
CacheMode' :: Text -> CacheMode
[fromCacheMode] :: CacheMode -> Text
pattern CacheMode_LOCAL_CUSTOM_CACHE :: CacheMode
pattern CacheMode_LOCAL_DOCKER_LAYER_CACHE :: CacheMode
pattern CacheMode_LOCAL_SOURCE_CACHE :: CacheMode
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance GHC.Read.Read Amazonka.CodeBuild.Types.CacheMode.CacheMode
instance GHC.Show.Show Amazonka.CodeBuild.Types.CacheMode.CacheMode


module Amazonka.CodeBuild.Types.CacheType
newtype CacheType
CacheType' :: Text -> CacheType
[fromCacheType] :: CacheType -> Text
pattern CacheType_LOCAL :: CacheType
pattern CacheType_NO_CACHE :: CacheType
pattern CacheType_S3 :: CacheType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.CacheType.CacheType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.CacheType.CacheType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.CacheType.CacheType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.CacheType.CacheType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.CacheType.CacheType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.CacheType.CacheType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CacheType.CacheType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CacheType.CacheType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CacheType.CacheType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.CacheType.CacheType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CacheType.CacheType
instance GHC.Read.Read Amazonka.CodeBuild.Types.CacheType.CacheType
instance GHC.Show.Show Amazonka.CodeBuild.Types.CacheType.CacheType


module Amazonka.CodeBuild.Types.CodeCoverage

-- | Contains code coverage report information.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverage</a> smart constructor.
data CodeCoverage
CodeCoverage' :: Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Text -> CodeCoverage

-- | The date and time that the tests were run.
[$sel:expired:CodeCoverage'] :: CodeCoverage -> Maybe POSIX

-- | The number of conditional branches that are not covered by your tests.
[$sel:branchesMissed:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The number of lines that are not covered by your tests.
[$sel:linesMissed:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The path of the test report file.
[$sel:filePath:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | The number of conditional branches that are covered by your tests.
[$sel:branchesCovered:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The number of lines that are covered by your tests.
[$sel:linesCovered:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The percentage of branches that are covered by your tests.
[$sel:branchCoveragePercentage:CodeCoverage'] :: CodeCoverage -> Maybe Double

-- | The identifier of the code coverage report.
[$sel:id:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | The percentage of lines that are covered by your tests.
[$sel:lineCoveragePercentage:CodeCoverage'] :: CodeCoverage -> Maybe Double

-- | The ARN of the report.
[$sel:reportARN:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | Create a value of <a>CodeCoverage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expired:CodeCoverage'</a>, <a>codeCoverage_expired</a> - The
--   date and time that the tests were run.
--   
--   <a>$sel:branchesMissed:CodeCoverage'</a>,
--   <a>codeCoverage_branchesMissed</a> - The number of conditional
--   branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverage'</a>, <a>codeCoverage_linesMissed</a>
--   - The number of lines that are not covered by your tests.
--   
--   <a>$sel:filePath:CodeCoverage'</a>, <a>codeCoverage_filePath</a> - The
--   path of the test report file.
--   
--   <a>$sel:branchesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_branchesCovered</a> - The number of conditional
--   branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_linesCovered</a> - The number of lines that are
--   covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_branchCoveragePercentage</a> - The percentage of
--   branches that are covered by your tests.
--   
--   <a>$sel:id:CodeCoverage'</a>, <a>codeCoverage_id</a> - The identifier
--   of the code coverage report.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_lineCoveragePercentage</a> - The percentage of lines
--   that are covered by your tests.
--   
--   <a>$sel:reportARN:CodeCoverage'</a>, <a>codeCoverage_reportARN</a> -
--   The ARN of the report.
newCodeCoverage :: CodeCoverage

-- | The date and time that the tests were run.
codeCoverage_expired :: Lens' CodeCoverage (Maybe UTCTime)

-- | The number of conditional branches that are not covered by your tests.
codeCoverage_branchesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverage_linesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The path of the test report file.
codeCoverage_filePath :: Lens' CodeCoverage (Maybe Text)

-- | The number of conditional branches that are covered by your tests.
codeCoverage_branchesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverage_linesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverage_branchCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The identifier of the code coverage report.
codeCoverage_id :: Lens' CodeCoverage (Maybe Text)

-- | The percentage of lines that are covered by your tests.
codeCoverage_lineCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The ARN of the report.
codeCoverage_reportARN :: Lens' CodeCoverage (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance GHC.Show.Show Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance GHC.Read.Read Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CodeCoverage.CodeCoverage


module Amazonka.CodeBuild.Types.CodeCoverageReportSummary

-- | Contains a summary of a code coverage report.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverageReportSummary</a> smart constructor.
data CodeCoverageReportSummary
CodeCoverageReportSummary' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Double -> CodeCoverageReportSummary

-- | The number of conditional branches that are not covered by your tests.
[$sel:branchesMissed:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of lines that are not covered by your tests.
[$sel:linesMissed:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of conditional branches that are covered by your tests.
[$sel:branchesCovered:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of lines that are covered by your tests.
[$sel:linesCovered:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The percentage of branches that are covered by your tests.
[$sel:branchCoveragePercentage:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Double

-- | The percentage of lines that are covered by your tests.
[$sel:lineCoveragePercentage:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Double

-- | Create a value of <a>CodeCoverageReportSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesMissed</a> - The number of
--   conditional branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesMissed</a> - The number of lines
--   that are not covered by your tests.
--   
--   <a>$sel:branchesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesCovered</a> - The number of
--   conditional branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesCovered</a> - The number of lines
--   that are covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchCoveragePercentage</a> - The
--   percentage of branches that are covered by your tests.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_lineCoveragePercentage</a> - The
--   percentage of lines that are covered by your tests.
newCodeCoverageReportSummary :: CodeCoverageReportSummary

-- | The number of conditional branches that are not covered by your tests.
codeCoverageReportSummary_branchesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverageReportSummary_linesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of conditional branches that are covered by your tests.
codeCoverageReportSummary_branchesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverageReportSummary_linesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverageReportSummary_branchCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)

-- | The percentage of lines that are covered by your tests.
codeCoverageReportSummary_lineCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance GHC.Show.Show Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance GHC.Read.Read Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CodeCoverageReportSummary.CodeCoverageReportSummary


module Amazonka.CodeBuild.Types.ComputeType
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_BUILD_GENERAL1_2XLARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_LARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_MEDIUM :: ComputeType
pattern ComputeType_BUILD_GENERAL1_SMALL :: ComputeType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ComputeType.ComputeType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ComputeType.ComputeType


module Amazonka.CodeBuild.Types.CredentialProviderType
newtype CredentialProviderType
CredentialProviderType' :: Text -> CredentialProviderType
[fromCredentialProviderType] :: CredentialProviderType -> Text
pattern CredentialProviderType_SECRETS_MANAGER :: CredentialProviderType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance GHC.Read.Read Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType
instance GHC.Show.Show Amazonka.CodeBuild.Types.CredentialProviderType.CredentialProviderType


module Amazonka.CodeBuild.Types.DebugSession

-- | Contains information about the debug session for a build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
--   
--   <i>See:</i> <a>newDebugSession</a> smart constructor.
data DebugSession
DebugSession' :: Maybe Bool -> Maybe Text -> DebugSession

-- | Specifies if session debugging is enabled for this build.
[$sel:sessionEnabled:DebugSession'] :: DebugSession -> Maybe Bool

-- | Contains the identifier of the Session Manager session used for the
--   build. To work with the paused build, you open this session to
--   examine, control, and resume the build.
[$sel:sessionTarget:DebugSession'] :: DebugSession -> Maybe Text

-- | Create a value of <a>DebugSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionEnabled:DebugSession'</a>,
--   <a>debugSession_sessionEnabled</a> - Specifies if session debugging is
--   enabled for this build.
--   
--   <a>$sel:sessionTarget:DebugSession'</a>,
--   <a>debugSession_sessionTarget</a> - Contains the identifier of the
--   Session Manager session used for the build. To work with the paused
--   build, you open this session to examine, control, and resume the
--   build.
newDebugSession :: DebugSession

-- | Specifies if session debugging is enabled for this build.
debugSession_sessionEnabled :: Lens' DebugSession (Maybe Bool)

-- | Contains the identifier of the Session Manager session used for the
--   build. To work with the paused build, you open this session to
--   examine, control, and resume the build.
debugSession_sessionTarget :: Lens' DebugSession (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance GHC.Show.Show Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance GHC.Read.Read Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.DebugSession.DebugSession
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.DebugSession.DebugSession


module Amazonka.CodeBuild.Types.EnvironmentImage

-- | Information about a Docker image that is managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentImage</a> smart constructor.
data EnvironmentImage
EnvironmentImage' :: Maybe [Text] -> Maybe Text -> Maybe Text -> EnvironmentImage

-- | A list of environment image versions.
[$sel:versions:EnvironmentImage'] :: EnvironmentImage -> Maybe [Text]

-- | The name of the Docker image.
[$sel:name:EnvironmentImage'] :: EnvironmentImage -> Maybe Text

-- | The description of the Docker image.
[$sel:description:EnvironmentImage'] :: EnvironmentImage -> Maybe Text

-- | Create a value of <a>EnvironmentImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versions:EnvironmentImage'</a>,
--   <a>environmentImage_versions</a> - A list of environment image
--   versions.
--   
--   <a>$sel:name:EnvironmentImage'</a>, <a>environmentImage_name</a> - The
--   name of the Docker image.
--   
--   <a>$sel:description:EnvironmentImage'</a>,
--   <a>environmentImage_description</a> - The description of the Docker
--   image.
newEnvironmentImage :: EnvironmentImage

-- | A list of environment image versions.
environmentImage_versions :: Lens' EnvironmentImage (Maybe [Text])

-- | The name of the Docker image.
environmentImage_name :: Lens' EnvironmentImage (Maybe Text)

-- | The description of the Docker image.
environmentImage_description :: Lens' EnvironmentImage (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentImage.EnvironmentImage


module Amazonka.CodeBuild.Types.EnvironmentType
newtype EnvironmentType
EnvironmentType' :: Text -> EnvironmentType
[fromEnvironmentType] :: EnvironmentType -> Text
pattern EnvironmentType_ARM_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_GPU_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_SERVER_2019_CONTAINER :: EnvironmentType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentType.EnvironmentType


module Amazonka.CodeBuild.Types.EnvironmentVariableType
newtype EnvironmentVariableType
EnvironmentVariableType' :: Text -> EnvironmentVariableType
[fromEnvironmentVariableType] :: EnvironmentVariableType -> Text
pattern EnvironmentVariableType_PARAMETER_STORE :: EnvironmentVariableType
pattern EnvironmentVariableType_PLAINTEXT :: EnvironmentVariableType
pattern EnvironmentVariableType_SECRETS_MANAGER :: EnvironmentVariableType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentVariableType.EnvironmentVariableType


module Amazonka.CodeBuild.Types.EnvironmentVariable

-- | Information about an environment variable for a build project or a
--   build.
--   
--   <i>See:</i> <a>newEnvironmentVariable</a> smart constructor.
data EnvironmentVariable
EnvironmentVariable' :: Maybe EnvironmentVariableType -> Text -> Text -> EnvironmentVariable

-- | The type of environment variable. Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
[$sel:type':EnvironmentVariable'] :: EnvironmentVariable -> Maybe EnvironmentVariableType

-- | The name or key of the environment variable.
[$sel:name:EnvironmentVariable'] :: EnvironmentVariable -> Text

-- | The value of the environment variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
[$sel:value:EnvironmentVariable'] :: EnvironmentVariable -> Text

-- | Create a value of <a>EnvironmentVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EnvironmentVariable'</a>,
--   <a>environmentVariable_type</a> - The type of environment variable.
--   Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:name:EnvironmentVariable'</a>, <a>environmentVariable_name</a>
--   - The name or key of the environment variable.
--   
--   <a>$sel:value:EnvironmentVariable'</a>,
--   <a>environmentVariable_value</a> - The value of the environment
--   variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
newEnvironmentVariable :: Text -> Text -> EnvironmentVariable

-- | The type of environment variable. Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
environmentVariable_type :: Lens' EnvironmentVariable (Maybe EnvironmentVariableType)

-- | The name or key of the environment variable.
environmentVariable_name :: Lens' EnvironmentVariable Text

-- | The value of the environment variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
environmentVariable_value :: Lens' EnvironmentVariable Text
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.EnvironmentVariable.EnvironmentVariable


module Amazonka.CodeBuild.Types.ExportedEnvironmentVariable

-- | Contains information about an exported environment variable.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   During a build, the value of a variable is available starting with the
--   <tt>install</tt> phase. It can be updated between the start of the
--   <tt>install</tt> phase and the end of the <tt>post_build</tt> phase.
--   After the <tt>post_build</tt> phase ends, the value of exported
--   variables cannot change.
--   
--   <i>See:</i> <a>newExportedEnvironmentVariable</a> smart constructor.
data ExportedEnvironmentVariable
ExportedEnvironmentVariable' :: Maybe Text -> Maybe Text -> ExportedEnvironmentVariable

-- | The value assigned to the exported environment variable.
[$sel:value:ExportedEnvironmentVariable'] :: ExportedEnvironmentVariable -> Maybe Text

-- | The name of the exported environment variable.
[$sel:name:ExportedEnvironmentVariable'] :: ExportedEnvironmentVariable -> Maybe Text

-- | Create a value of <a>ExportedEnvironmentVariable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_value</a> - The value assigned to the
--   exported environment variable.
--   
--   <a>$sel:name:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_name</a> - The name of the exported
--   environment variable.
newExportedEnvironmentVariable :: ExportedEnvironmentVariable

-- | The value assigned to the exported environment variable.
exportedEnvironmentVariable_value :: Lens' ExportedEnvironmentVariable (Maybe Text)

-- | The name of the exported environment variable.
exportedEnvironmentVariable_name :: Lens' ExportedEnvironmentVariable (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance GHC.Show.Show Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance GHC.Read.Read Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ExportedEnvironmentVariable.ExportedEnvironmentVariable


module Amazonka.CodeBuild.Types.FileSystemType
newtype FileSystemType
FileSystemType' :: Text -> FileSystemType
[fromFileSystemType] :: FileSystemType -> Text
pattern FileSystemType_EFS :: FileSystemType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance GHC.Read.Read Amazonka.CodeBuild.Types.FileSystemType.FileSystemType
instance GHC.Show.Show Amazonka.CodeBuild.Types.FileSystemType.FileSystemType


module Amazonka.CodeBuild.Types.GitSubmodulesConfig

-- | Information about the Git submodules configuration for an CodeBuild
--   build project.
--   
--   <i>See:</i> <a>newGitSubmodulesConfig</a> smart constructor.
data GitSubmodulesConfig
GitSubmodulesConfig' :: Bool -> GitSubmodulesConfig

-- | Set to true to fetch Git submodules for your CodeBuild build project.
[$sel:fetchSubmodules:GitSubmodulesConfig'] :: GitSubmodulesConfig -> Bool

-- | Create a value of <a>GitSubmodulesConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchSubmodules:GitSubmodulesConfig'</a>,
--   <a>gitSubmodulesConfig_fetchSubmodules</a> - Set to true to fetch Git
--   submodules for your CodeBuild build project.
newGitSubmodulesConfig :: Bool -> GitSubmodulesConfig

-- | Set to true to fetch Git submodules for your CodeBuild build project.
gitSubmodulesConfig_fetchSubmodules :: Lens' GitSubmodulesConfig Bool
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.GitSubmodulesConfig.GitSubmodulesConfig


module Amazonka.CodeBuild.Types.ImagePullCredentialsType
newtype ImagePullCredentialsType
ImagePullCredentialsType' :: Text -> ImagePullCredentialsType
[fromImagePullCredentialsType] :: ImagePullCredentialsType -> Text
pattern ImagePullCredentialsType_CODEBUILD :: ImagePullCredentialsType
pattern ImagePullCredentialsType_SERVICE_ROLE :: ImagePullCredentialsType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ImagePullCredentialsType.ImagePullCredentialsType


module Amazonka.CodeBuild.Types.LanguageType
newtype LanguageType
LanguageType' :: Text -> LanguageType
[fromLanguageType] :: LanguageType -> Text
pattern LanguageType_ANDROID :: LanguageType
pattern LanguageType_BASE :: LanguageType
pattern LanguageType_DOCKER :: LanguageType
pattern LanguageType_DOTNET :: LanguageType
pattern LanguageType_GOLANG :: LanguageType
pattern LanguageType_JAVA :: LanguageType
pattern LanguageType_NODE_JS :: LanguageType
pattern LanguageType_PHP :: LanguageType
pattern LanguageType_PYTHON :: LanguageType
pattern LanguageType_RUBY :: LanguageType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance GHC.Read.Read Amazonka.CodeBuild.Types.LanguageType.LanguageType
instance GHC.Show.Show Amazonka.CodeBuild.Types.LanguageType.LanguageType


module Amazonka.CodeBuild.Types.EnvironmentLanguage

-- | A set of Docker images that are related by programming language and
--   are managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentLanguage</a> smart constructor.
data EnvironmentLanguage
EnvironmentLanguage' :: Maybe [EnvironmentImage] -> Maybe LanguageType -> EnvironmentLanguage

-- | The list of Docker images that are related by the specified
--   programming language.
[$sel:images:EnvironmentLanguage'] :: EnvironmentLanguage -> Maybe [EnvironmentImage]

-- | The programming language for the Docker images.
[$sel:language:EnvironmentLanguage'] :: EnvironmentLanguage -> Maybe LanguageType

-- | Create a value of <a>EnvironmentLanguage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:images:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_images</a> - The list of Docker images that are
--   related by the specified programming language.
--   
--   <a>$sel:language:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_language</a> - The programming language for the
--   Docker images.
newEnvironmentLanguage :: EnvironmentLanguage

-- | The list of Docker images that are related by the specified
--   programming language.
environmentLanguage_images :: Lens' EnvironmentLanguage (Maybe [EnvironmentImage])

-- | The programming language for the Docker images.
environmentLanguage_language :: Lens' EnvironmentLanguage (Maybe LanguageType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentLanguage.EnvironmentLanguage


module Amazonka.CodeBuild.Types.LogsConfigStatusType
newtype LogsConfigStatusType
LogsConfigStatusType' :: Text -> LogsConfigStatusType
[fromLogsConfigStatusType] :: LogsConfigStatusType -> Text
pattern LogsConfigStatusType_DISABLED :: LogsConfigStatusType
pattern LogsConfigStatusType_ENABLED :: LogsConfigStatusType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance GHC.Read.Read Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType
instance GHC.Show.Show Amazonka.CodeBuild.Types.LogsConfigStatusType.LogsConfigStatusType


module Amazonka.CodeBuild.Types.CloudWatchLogsConfig

-- | Information about CloudWatch Logs for a build project.
--   
--   <i>See:</i> <a>newCloudWatchLogsConfig</a> smart constructor.
data CloudWatchLogsConfig
CloudWatchLogsConfig' :: Maybe Text -> Maybe Text -> LogsConfigStatusType -> CloudWatchLogsConfig

-- | The group name of the logs in CloudWatch Logs. For more information,
--   see <a>Working with Log Groups and Log Streams</a>.
[$sel:groupName:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> Maybe Text

-- | The prefix of the stream name of the CloudWatch Logs. For more
--   information, see <a>Working with Log Groups and Log Streams</a>.
[$sel:streamName:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> Maybe Text

-- | The current status of the logs in CloudWatch Logs for a build project.
--   Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
[$sel:status:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> LogsConfigStatusType

-- | Create a value of <a>CloudWatchLogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_groupName</a> - The group name of the logs in
--   CloudWatch Logs. For more information, see <a>Working with Log Groups
--   and Log Streams</a>.
--   
--   <a>$sel:streamName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_streamName</a> - The prefix of the stream name
--   of the CloudWatch Logs. For more information, see <a>Working with Log
--   Groups and Log Streams</a>.
--   
--   <a>$sel:status:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_status</a> - The current status of the logs in
--   CloudWatch Logs for a build project. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
newCloudWatchLogsConfig :: LogsConfigStatusType -> CloudWatchLogsConfig

-- | The group name of the logs in CloudWatch Logs. For more information,
--   see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_groupName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The prefix of the stream name of the CloudWatch Logs. For more
--   information, see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_streamName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The current status of the logs in CloudWatch Logs for a build project.
--   Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
cloudWatchLogsConfig_status :: Lens' CloudWatchLogsConfig LogsConfigStatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.CloudWatchLogsConfig.CloudWatchLogsConfig


module Amazonka.CodeBuild.Types.NetworkInterface

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> NetworkInterface

-- | The ID of the subnet.
[$sel:subnetId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The ID of the network interface.
[$sel:networkInterfaceId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:NetworkInterface'</a>,
--   <a>networkInterface_subnetId</a> - The ID of the subnet.
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
newNetworkInterface :: NetworkInterface

-- | The ID of the subnet.
networkInterface_subnetId :: Lens' NetworkInterface (Maybe Text)

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance GHC.Show.Show Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance GHC.Read.Read Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.NetworkInterface.NetworkInterface


module Amazonka.CodeBuild.Types.PhaseContext

-- | Additional information about a build phase that has an error. You can
--   use this information for troubleshooting.
--   
--   <i>See:</i> <a>newPhaseContext</a> smart constructor.
data PhaseContext
PhaseContext' :: Maybe Text -> Maybe Text -> PhaseContext

-- | An explanation of the build phase's context. This might include a
--   command ID and an exit code.
[$sel:message:PhaseContext'] :: PhaseContext -> Maybe Text

-- | The status code for the context of the build phase.
[$sel:statusCode:PhaseContext'] :: PhaseContext -> Maybe Text

-- | Create a value of <a>PhaseContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:PhaseContext'</a>, <a>phaseContext_message</a> - An
--   explanation of the build phase's context. This might include a command
--   ID and an exit code.
--   
--   <a>$sel:statusCode:PhaseContext'</a>, <a>phaseContext_statusCode</a> -
--   The status code for the context of the build phase.
newPhaseContext :: PhaseContext

-- | An explanation of the build phase's context. This might include a
--   command ID and an exit code.
phaseContext_message :: Lens' PhaseContext (Maybe Text)

-- | The status code for the context of the build phase.
phaseContext_statusCode :: Lens' PhaseContext (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance GHC.Show.Show Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance GHC.Read.Read Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.PhaseContext.PhaseContext
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.PhaseContext.PhaseContext


module Amazonka.CodeBuild.Types.PlatformType
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_AMAZON_LINUX :: PlatformType
pattern PlatformType_DEBIAN :: PlatformType
pattern PlatformType_UBUNTU :: PlatformType
pattern PlatformType_WINDOWS_SERVER :: PlatformType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance GHC.Read.Read Amazonka.CodeBuild.Types.PlatformType.PlatformType
instance GHC.Show.Show Amazonka.CodeBuild.Types.PlatformType.PlatformType


module Amazonka.CodeBuild.Types.EnvironmentPlatform

-- | A set of Docker images that are related by platform and are managed by
--   CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentPlatform</a> smart constructor.
data EnvironmentPlatform
EnvironmentPlatform' :: Maybe PlatformType -> Maybe [EnvironmentLanguage] -> EnvironmentPlatform

-- | The platform's name.
[$sel:platform:EnvironmentPlatform'] :: EnvironmentPlatform -> Maybe PlatformType

-- | The list of programming languages that are available for the specified
--   platform.
[$sel:languages:EnvironmentPlatform'] :: EnvironmentPlatform -> Maybe [EnvironmentLanguage]

-- | Create a value of <a>EnvironmentPlatform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_platform</a> - The platform's name.
--   
--   <a>$sel:languages:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_languages</a> - The list of programming
--   languages that are available for the specified platform.
newEnvironmentPlatform :: EnvironmentPlatform

-- | The platform's name.
environmentPlatform_platform :: Lens' EnvironmentPlatform (Maybe PlatformType)

-- | The list of programming languages that are available for the specified
--   platform.
environmentPlatform_languages :: Lens' EnvironmentPlatform (Maybe [EnvironmentLanguage])
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance GHC.Show.Show Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance GHC.Read.Read Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.EnvironmentPlatform.EnvironmentPlatform


module Amazonka.CodeBuild.Types.ProjectArtifacts

-- | Information about the build output artifacts for the build project.
--   
--   <i>See:</i> <a>newProjectArtifacts</a> smart constructor.
data ProjectArtifacts
ProjectArtifacts' :: Maybe ArtifactPackaging -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe BucketOwnerAccess -> Maybe ArtifactNamespace -> ArtifactsType -> ProjectArtifacts

-- | The type of build output artifact to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
[$sel:packaging:ProjectArtifacts'] :: ProjectArtifacts -> Maybe ArtifactPackaging

-- | Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
[$sel:path:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Information about the build output artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
[$sel:location:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
[$sel:name:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Set to true if you do not want your output artifacts encrypted. This
--   option is valid only if your artifacts type is Amazon S3. If this is
--   set with another artifacts type, an invalidInputException is thrown.
[$sel:encryptionDisabled:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Bool

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
[$sel:overrideArtifactName:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Bool

-- | An identifier for this artifact definition.
[$sel:artifactIdentifier:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text
[$sel:bucketOwnerAccess:ProjectArtifacts'] :: ProjectArtifacts -> Maybe BucketOwnerAccess

-- | Along with <tt>path</tt> and <tt>name</tt>, the pattern that CodeBuild
--   uses to determine the name and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
[$sel:namespaceType:ProjectArtifacts'] :: ProjectArtifacts -> Maybe ArtifactNamespace

-- | The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
[$sel:type':ProjectArtifacts'] :: ProjectArtifacts -> ArtifactsType

-- | Create a value of <a>ProjectArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:ProjectArtifacts'</a>,
--   <a>projectArtifacts_packaging</a> - The type of build output artifact
--   to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
--   
--   <a>$sel:path:ProjectArtifacts'</a>, <a>projectArtifacts_path</a> -
--   Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
--   
--   <a>$sel:location:ProjectArtifacts'</a>,
--   <a>projectArtifacts_location</a> - Information about the build output
--   artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
--   
--   <a>$sel:name:ProjectArtifacts'</a>, <a>projectArtifacts_name</a> -
--   Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
--   
--   <a>$sel:encryptionDisabled:ProjectArtifacts'</a>,
--   <a>projectArtifacts_encryptionDisabled</a> - Set to true if you do not
--   want your output artifacts encrypted. This option is valid only if
--   your artifacts type is Amazon S3. If this is set with another
--   artifacts type, an invalidInputException is thrown.
--   
--   <a>$sel:overrideArtifactName:ProjectArtifacts'</a>,
--   <a>projectArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:ProjectArtifacts'</a>,
--   <a>projectArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:bucketOwnerAccess:ProjectArtifacts'</a>,
--   <a>projectArtifacts_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:namespaceType:ProjectArtifacts'</a>,
--   <a>projectArtifacts_namespaceType</a> - Along with <tt>path</tt> and
--   <tt>name</tt>, the pattern that CodeBuild uses to determine the name
--   and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
--   
--   <a>$sel:type':ProjectArtifacts'</a>, <a>projectArtifacts_type</a> -
--   The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
newProjectArtifacts :: ArtifactsType -> ProjectArtifacts

-- | The type of build output artifact to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
projectArtifacts_packaging :: Lens' ProjectArtifacts (Maybe ArtifactPackaging)

-- | Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
projectArtifacts_path :: Lens' ProjectArtifacts (Maybe Text)

-- | Information about the build output artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
projectArtifacts_location :: Lens' ProjectArtifacts (Maybe Text)

-- | Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
projectArtifacts_name :: Lens' ProjectArtifacts (Maybe Text)

-- | Set to true if you do not want your output artifacts encrypted. This
--   option is valid only if your artifacts type is Amazon S3. If this is
--   set with another artifacts type, an invalidInputException is thrown.
projectArtifacts_encryptionDisabled :: Lens' ProjectArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
projectArtifacts_overrideArtifactName :: Lens' ProjectArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
projectArtifacts_artifactIdentifier :: Lens' ProjectArtifacts (Maybe Text)

-- | Undocumented member.
projectArtifacts_bucketOwnerAccess :: Lens' ProjectArtifacts (Maybe BucketOwnerAccess)

-- | Along with <tt>path</tt> and <tt>name</tt>, the pattern that CodeBuild
--   uses to determine the name and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
projectArtifacts_namespaceType :: Lens' ProjectArtifacts (Maybe ArtifactNamespace)

-- | The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
projectArtifacts_type :: Lens' ProjectArtifacts ArtifactsType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectArtifacts.ProjectArtifacts


module Amazonka.CodeBuild.Types.ProjectBadge

-- | Information about the build badge for the build project.
--   
--   <i>See:</i> <a>newProjectBadge</a> smart constructor.
data ProjectBadge
ProjectBadge' :: Maybe Bool -> Maybe Text -> ProjectBadge

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
[$sel:badgeEnabled:ProjectBadge'] :: ProjectBadge -> Maybe Bool

-- | The publicly-accessible URL through which you can access the build
--   badge for your project.
[$sel:badgeRequestUrl:ProjectBadge'] :: ProjectBadge -> Maybe Text

-- | Create a value of <a>ProjectBadge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:badgeEnabled:ProjectBadge'</a>,
--   <a>projectBadge_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:badgeRequestUrl:ProjectBadge'</a>,
--   <a>projectBadge_badgeRequestUrl</a> - The publicly-accessible URL
--   through which you can access the build badge for your project.
newProjectBadge :: ProjectBadge

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
projectBadge_badgeEnabled :: Lens' ProjectBadge (Maybe Bool)

-- | The publicly-accessible URL through which you can access the build
--   badge for your project.
projectBadge_badgeRequestUrl :: Lens' ProjectBadge (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectBadge.ProjectBadge


module Amazonka.CodeBuild.Types.ProjectBuildBatchConfig

-- | Contains configuration information about a batch build project.
--   
--   <i>See:</i> <a>newProjectBuildBatchConfig</a> smart constructor.
data ProjectBuildBatchConfig
ProjectBuildBatchConfig' :: Maybe Bool -> Maybe Int -> Maybe BatchRestrictions -> Maybe BatchReportModeType -> Maybe Text -> ProjectBuildBatchConfig

-- | Specifies if the build artifacts for the batch build should be
--   combined into a single artifact location.
[$sel:combineArtifacts:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Bool

-- | Specifies the maximum amount of time, in minutes, that the batch build
--   must be completed in.
[$sel:timeoutInMins:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Int

-- | A <tt>BatchRestrictions</tt> object that specifies the restrictions
--   for the batch build.
[$sel:restrictions:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe BatchRestrictions

-- | Specifies how build status reports are sent to the source provider for
--   the batch build. This property is only used when the source provider
--   for your project is Bitbucket, GitHub, or GitHub Enterprise, and your
--   project is configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
[$sel:batchReportMode:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe BatchReportModeType

-- | Specifies the service role ARN for the batch build project.
[$sel:serviceRole:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Text

-- | Create a value of <a>ProjectBuildBatchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:combineArtifacts:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_combineArtifacts</a> - Specifies if the
--   build artifacts for the batch build should be combined into a single
--   artifact location.
--   
--   <a>$sel:timeoutInMins:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_timeoutInMins</a> - Specifies the maximum
--   amount of time, in minutes, that the batch build must be completed in.
--   
--   <a>$sel:restrictions:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_restrictions</a> - A
--   <tt>BatchRestrictions</tt> object that specifies the restrictions for
--   the batch build.
--   
--   <a>$sel:batchReportMode:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_batchReportMode</a> - Specifies how build
--   status reports are sent to the source provider for the batch build.
--   This property is only used when the source provider for your project
--   is Bitbucket, GitHub, or GitHub Enterprise, and your project is
--   configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
--   
--   <a>$sel:serviceRole:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_serviceRole</a> - Specifies the service
--   role ARN for the batch build project.
newProjectBuildBatchConfig :: ProjectBuildBatchConfig

-- | Specifies if the build artifacts for the batch build should be
--   combined into a single artifact location.
projectBuildBatchConfig_combineArtifacts :: Lens' ProjectBuildBatchConfig (Maybe Bool)

-- | Specifies the maximum amount of time, in minutes, that the batch build
--   must be completed in.
projectBuildBatchConfig_timeoutInMins :: Lens' ProjectBuildBatchConfig (Maybe Int)

-- | A <tt>BatchRestrictions</tt> object that specifies the restrictions
--   for the batch build.
projectBuildBatchConfig_restrictions :: Lens' ProjectBuildBatchConfig (Maybe BatchRestrictions)

-- | Specifies how build status reports are sent to the source provider for
--   the batch build. This property is only used when the source provider
--   for your project is Bitbucket, GitHub, or GitHub Enterprise, and your
--   project is configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
projectBuildBatchConfig_batchReportMode :: Lens' ProjectBuildBatchConfig (Maybe BatchReportModeType)

-- | Specifies the service role ARN for the batch build project.
projectBuildBatchConfig_serviceRole :: Lens' ProjectBuildBatchConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectBuildBatchConfig.ProjectBuildBatchConfig


module Amazonka.CodeBuild.Types.ProjectCache

-- | Information about the cache for the build project.
--   
--   <i>See:</i> <a>newProjectCache</a> smart constructor.
data ProjectCache
ProjectCache' :: Maybe Text -> Maybe [CacheMode] -> CacheType -> ProjectCache

-- | Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
[$sel:location:ProjectCache'] :: ProjectCache -> Maybe Text

-- | An array of strings that specify the local cache modes. You can use
--   one or more local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
[$sel:modes:ProjectCache'] :: ProjectCache -> Maybe [CacheMode]

-- | The type of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
[$sel:type':ProjectCache'] :: ProjectCache -> CacheType

-- | Create a value of <a>ProjectCache</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectCache'</a>, <a>projectCache_location</a> -
--   Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
--   
--   <a>$sel:modes:ProjectCache'</a>, <a>projectCache_modes</a> - An array
--   of strings that specify the local cache modes. You can use one or more
--   local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ProjectCache'</a>, <a>projectCache_type</a> - The type
--   of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
newProjectCache :: CacheType -> ProjectCache

-- | Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
projectCache_location :: Lens' ProjectCache (Maybe Text)

-- | An array of strings that specify the local cache modes. You can use
--   one or more local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
projectCache_modes :: Lens' ProjectCache (Maybe [CacheMode])

-- | The type of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
projectCache_type :: Lens' ProjectCache CacheType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectCache.ProjectCache
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectCache.ProjectCache


module Amazonka.CodeBuild.Types.ProjectFileSystemLocation

-- | Information about a file system created by Amazon Elastic File System
--   (EFS). For more information, see <a>What Is Amazon Elastic File
--   System?</a>
--   
--   <i>See:</i> <a>newProjectFileSystemLocation</a> smart constructor.
data ProjectFileSystemLocation
ProjectFileSystemLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FileSystemType -> Maybe Text -> ProjectFileSystemLocation

-- | A string that specifies the location of the file system created by
--   Amazon EFS. Its format is <tt>efs-dns-name:/directory-path</tt>. You
--   can find the DNS name of file system when you view it in the Amazon
--   EFS console. The directory path is a path to a directory in the file
--   system that CodeBuild mounts. For example, if the DNS name of a file
--   system is <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its
--   mount directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
[$sel:location:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The name used to access a file system created by Amazon EFS. CodeBuild
--   creates an environment variable by appending the <tt>identifier</tt>
--   in all capital letters to <tt>CODEBUILD_</tt>. For example, if you
--   specify <tt>my_efs</tt> for <tt>identifier</tt>, a new environment
--   variable is create named <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
[$sel:identifier:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The mount options for a file system created by Amazon EFS. The default
--   mount options used by CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
[$sel:mountOptions:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The type of the file system. The one supported type is <tt>EFS</tt>.
[$sel:type':ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe FileSystemType

-- | The location in the container where you mount the file system.
[$sel:mountPoint:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | Create a value of <a>ProjectFileSystemLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_location</a> - A string that specifies
--   the location of the file system created by Amazon EFS. Its format is
--   <tt>efs-dns-name:/directory-path</tt>. You can find the DNS name of
--   file system when you view it in the Amazon EFS console. The directory
--   path is a path to a directory in the file system that CodeBuild
--   mounts. For example, if the DNS name of a file system is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its mount
--   directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
--   
--   <a>$sel:identifier:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_identifier</a> - The name used to access
--   a file system created by Amazon EFS. CodeBuild creates an environment
--   variable by appending the <tt>identifier</tt> in all capital letters
--   to <tt>CODEBUILD_</tt>. For example, if you specify <tt>my_efs</tt>
--   for <tt>identifier</tt>, a new environment variable is create named
--   <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
--   
--   <a>$sel:mountOptions:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountOptions</a> - The mount options for
--   a file system created by Amazon EFS. The default mount options used by
--   CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
--   
--   <a>$sel:type':ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_type</a> - The type of the file system.
--   The one supported type is <tt>EFS</tt>.
--   
--   <a>$sel:mountPoint:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountPoint</a> - The location in the
--   container where you mount the file system.
newProjectFileSystemLocation :: ProjectFileSystemLocation

-- | A string that specifies the location of the file system created by
--   Amazon EFS. Its format is <tt>efs-dns-name:/directory-path</tt>. You
--   can find the DNS name of file system when you view it in the Amazon
--   EFS console. The directory path is a path to a directory in the file
--   system that CodeBuild mounts. For example, if the DNS name of a file
--   system is <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its
--   mount directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
projectFileSystemLocation_location :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The name used to access a file system created by Amazon EFS. CodeBuild
--   creates an environment variable by appending the <tt>identifier</tt>
--   in all capital letters to <tt>CODEBUILD_</tt>. For example, if you
--   specify <tt>my_efs</tt> for <tt>identifier</tt>, a new environment
--   variable is create named <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
projectFileSystemLocation_identifier :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The mount options for a file system created by Amazon EFS. The default
--   mount options used by CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
projectFileSystemLocation_mountOptions :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The type of the file system. The one supported type is <tt>EFS</tt>.
projectFileSystemLocation_type :: Lens' ProjectFileSystemLocation (Maybe FileSystemType)

-- | The location in the container where you mount the file system.
projectFileSystemLocation_mountPoint :: Lens' ProjectFileSystemLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectFileSystemLocation.ProjectFileSystemLocation


module Amazonka.CodeBuild.Types.ProjectSortByType
newtype ProjectSortByType
ProjectSortByType' :: Text -> ProjectSortByType
[fromProjectSortByType] :: ProjectSortByType -> Text
pattern ProjectSortByType_CREATED_TIME :: ProjectSortByType
pattern ProjectSortByType_LAST_MODIFIED_TIME :: ProjectSortByType
pattern ProjectSortByType_NAME :: ProjectSortByType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectSortByType.ProjectSortByType


module Amazonka.CodeBuild.Types.ProjectSourceVersion

-- | A source identifier and its corresponding version.
--   
--   <i>See:</i> <a>newProjectSourceVersion</a> smart constructor.
data ProjectSourceVersion
ProjectSourceVersion' :: Text -> Text -> ProjectSourceVersion

-- | An identifier for a source in the build project. The identifier can
--   only contain alphanumeric characters and underscores, and must be less
--   than 128 characters in length.
[$sel:sourceIdentifier:ProjectSourceVersion'] :: ProjectSourceVersion -> Text

-- | The source version for the corresponding source identifier. If
--   specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:ProjectSourceVersion'] :: ProjectSourceVersion -> Text

-- | Create a value of <a>ProjectSourceVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceIdentifier:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceIdentifier</a> - An identifier for a
--   source in the build project. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
--   
--   <a>$sel:sourceVersion:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceVersion</a> - The source version for the
--   corresponding source identifier. If specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
newProjectSourceVersion :: Text -> Text -> ProjectSourceVersion

-- | An identifier for a source in the build project. The identifier can
--   only contain alphanumeric characters and underscores, and must be less
--   than 128 characters in length.
projectSourceVersion_sourceIdentifier :: Lens' ProjectSourceVersion Text

-- | The source version for the corresponding source identifier. If
--   specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
projectSourceVersion_sourceVersion :: Lens' ProjectSourceVersion Text
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectSourceVersion.ProjectSourceVersion


module Amazonka.CodeBuild.Types.ProjectVisibilityType

-- | Specifies the visibility of the project's builds. Possible values are:
--   
--   <ul>
--   <li><i>PUBLIC_READ</i> The project builds are visible to the
--   public.</li>
--   <li><i>PRIVATE</i> The project builds are not visible to the
--   public.</li>
--   </ul>
newtype ProjectVisibilityType
ProjectVisibilityType' :: Text -> ProjectVisibilityType
[fromProjectVisibilityType] :: ProjectVisibilityType -> Text
pattern ProjectVisibilityType_PRIVATE :: ProjectVisibilityType
pattern ProjectVisibilityType_PUBLIC_READ :: ProjectVisibilityType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectVisibilityType.ProjectVisibilityType


module Amazonka.CodeBuild.Types.RegistryCredential

-- | Information about credentials that provide access to a private Docker
--   registry. When this is set:
--   
--   <ul>
--   <li><tt>imagePullCredentialsType</tt> must be set to
--   <tt>SERVICE_ROLE</tt>.</li>
--   <li>images cannot be curated or an Amazon ECR image.</li>
--   </ul>
--   
--   For more information, see <a>Private Registry with Secrets Manager
--   Sample for CodeBuild</a>.
--   
--   <i>See:</i> <a>newRegistryCredential</a> smart constructor.
data RegistryCredential
RegistryCredential' :: Text -> CredentialProviderType -> RegistryCredential

-- | The Amazon Resource Name (ARN) or name of credentials created using
--   Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
[$sel:credential:RegistryCredential'] :: RegistryCredential -> Text

-- | The service that created the credentials to access a private Docker
--   registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.
[$sel:credentialProvider:RegistryCredential'] :: RegistryCredential -> CredentialProviderType

-- | Create a value of <a>RegistryCredential</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credential:RegistryCredential'</a>,
--   <a>registryCredential_credential</a> - The Amazon Resource Name (ARN)
--   or name of credentials created using Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
--   
--   <a>$sel:credentialProvider:RegistryCredential'</a>,
--   <a>registryCredential_credentialProvider</a> - The service that
--   created the credentials to access a private Docker registry. The valid
--   value, SECRETS_MANAGER, is for Secrets Manager.
newRegistryCredential :: Text -> CredentialProviderType -> RegistryCredential

-- | The Amazon Resource Name (ARN) or name of credentials created using
--   Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
registryCredential_credential :: Lens' RegistryCredential Text

-- | The service that created the credentials to access a private Docker
--   registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.
registryCredential_credentialProvider :: Lens' RegistryCredential CredentialProviderType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance GHC.Show.Show Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance GHC.Read.Read Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.RegistryCredential.RegistryCredential


module Amazonka.CodeBuild.Types.ProjectEnvironment

-- | Information about the build environment of the build project.
--   
--   <i>See:</i> <a>newProjectEnvironment</a> smart constructor.
data ProjectEnvironment
ProjectEnvironment' :: Maybe ImagePullCredentialsType -> Maybe Bool -> Maybe RegistryCredential -> Maybe Text -> Maybe [EnvironmentVariable] -> EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
[$sel:imagePullCredentialsType:ProjectEnvironment'] :: ProjectEnvironment -> Maybe ImagePullCredentialsType

-- | Enables running the Docker daemon inside a Docker container. Set to
--   true only if the build project is used to build Docker images.
--   Otherwise, a build that attempts to interact with the Docker daemon
--   fails. The default setting is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
[$sel:privilegedMode:ProjectEnvironment'] :: ProjectEnvironment -> Maybe Bool

-- | The credentials for access to a private registry.
[$sel:registryCredential:ProjectEnvironment'] :: ProjectEnvironment -> Maybe RegistryCredential

-- | The ARN of the Amazon S3 bucket, path prefix, and object key that
--   contains the PEM-encoded certificate for the build project. For more
--   information, see <a>certificate</a> in the <i>CodeBuild User
--   Guide</i>.
[$sel:certificate:ProjectEnvironment'] :: ProjectEnvironment -> Maybe Text

-- | A set of environment variables to make available to builds for this
--   build project.
[$sel:environmentVariables:ProjectEnvironment'] :: ProjectEnvironment -> Maybe [EnvironmentVariable]

-- | The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
[$sel:type':ProjectEnvironment'] :: ProjectEnvironment -> EnvironmentType

-- | The image tag or image digest that identifies the Docker image to use
--   for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
[$sel:image:ProjectEnvironment'] :: ProjectEnvironment -> Text

-- | Information about the compute resources the build project uses.
--   Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
[$sel:computeType:ProjectEnvironment'] :: ProjectEnvironment -> ComputeType

-- | Create a value of <a>ProjectEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePullCredentialsType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_imagePullCredentialsType</a> - The type of
--   credentials CodeBuild uses to pull images in your build. There are two
--   valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
--   
--   <a>$sel:privilegedMode:ProjectEnvironment'</a>,
--   <a>projectEnvironment_privilegedMode</a> - Enables running the Docker
--   daemon inside a Docker container. Set to true only if the build
--   project is used to build Docker images. Otherwise, a build that
--   attempts to interact with the Docker daemon fails. The default setting
--   is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   <a>$sel:registryCredential:ProjectEnvironment'</a>,
--   <a>projectEnvironment_registryCredential</a> - The credentials for
--   access to a private registry.
--   
--   <a>$sel:certificate:ProjectEnvironment'</a>,
--   <a>projectEnvironment_certificate</a> - The ARN of the Amazon S3
--   bucket, path prefix, and object key that contains the PEM-encoded
--   certificate for the build project. For more information, see
--   <a>certificate</a> in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:environmentVariables:ProjectEnvironment'</a>,
--   <a>projectEnvironment_environmentVariables</a> - A set of environment
--   variables to make available to builds for this build project.
--   
--   <a>$sel:type':ProjectEnvironment'</a>, <a>projectEnvironment_type</a>
--   - The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:image:ProjectEnvironment'</a>, <a>projectEnvironment_image</a>
--   - The image tag or image digest that identifies the Docker image to
--   use for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:computeType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_computeType</a> - Information about the compute
--   resources the build project uses. Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
newProjectEnvironment :: EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
projectEnvironment_imagePullCredentialsType :: Lens' ProjectEnvironment (Maybe ImagePullCredentialsType)

-- | Enables running the Docker daemon inside a Docker container. Set to
--   true only if the build project is used to build Docker images.
--   Otherwise, a build that attempts to interact with the Docker daemon
--   fails. The default setting is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
projectEnvironment_privilegedMode :: Lens' ProjectEnvironment (Maybe Bool)

-- | The credentials for access to a private registry.
projectEnvironment_registryCredential :: Lens' ProjectEnvironment (Maybe RegistryCredential)

-- | The ARN of the Amazon S3 bucket, path prefix, and object key that
--   contains the PEM-encoded certificate for the build project. For more
--   information, see <a>certificate</a> in the <i>CodeBuild User
--   Guide</i>.
projectEnvironment_certificate :: Lens' ProjectEnvironment (Maybe Text)

-- | A set of environment variables to make available to builds for this
--   build project.
projectEnvironment_environmentVariables :: Lens' ProjectEnvironment (Maybe [EnvironmentVariable])

-- | The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
projectEnvironment_type :: Lens' ProjectEnvironment EnvironmentType

-- | The image tag or image digest that identifies the Docker image to use
--   for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
projectEnvironment_image :: Lens' ProjectEnvironment Text

-- | Information about the compute resources the build project uses.
--   Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
projectEnvironment_computeType :: Lens' ProjectEnvironment ComputeType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectEnvironment.ProjectEnvironment


module Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType
newtype ReportCodeCoverageSortByType
ReportCodeCoverageSortByType' :: Text -> ReportCodeCoverageSortByType
[fromReportCodeCoverageSortByType] :: ReportCodeCoverageSortByType -> Text
pattern ReportCodeCoverageSortByType_FILE_PATH :: ReportCodeCoverageSortByType
pattern ReportCodeCoverageSortByType_LINE_COVERAGE_PERCENTAGE :: ReportCodeCoverageSortByType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportCodeCoverageSortByType.ReportCodeCoverageSortByType


module Amazonka.CodeBuild.Types.ReportExportConfigType
newtype ReportExportConfigType
ReportExportConfigType' :: Text -> ReportExportConfigType
[fromReportExportConfigType] :: ReportExportConfigType -> Text
pattern ReportExportConfigType_NO_EXPORT :: ReportExportConfigType
pattern ReportExportConfigType_S3 :: ReportExportConfigType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportExportConfigType.ReportExportConfigType


module Amazonka.CodeBuild.Types.ReportGroupSortByType
newtype ReportGroupSortByType
ReportGroupSortByType' :: Text -> ReportGroupSortByType
[fromReportGroupSortByType] :: ReportGroupSortByType -> Text
pattern ReportGroupSortByType_CREATED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_LAST_MODIFIED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_NAME :: ReportGroupSortByType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportGroupSortByType.ReportGroupSortByType


module Amazonka.CodeBuild.Types.ReportGroupStatusType
newtype ReportGroupStatusType
ReportGroupStatusType' :: Text -> ReportGroupStatusType
[fromReportGroupStatusType] :: ReportGroupStatusType -> Text
pattern ReportGroupStatusType_ACTIVE :: ReportGroupStatusType
pattern ReportGroupStatusType_DELETING :: ReportGroupStatusType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportGroupStatusType.ReportGroupStatusType


module Amazonka.CodeBuild.Types.ReportGroupTrendFieldType
newtype ReportGroupTrendFieldType
ReportGroupTrendFieldType' :: Text -> ReportGroupTrendFieldType
[fromReportGroupTrendFieldType] :: ReportGroupTrendFieldType -> Text
pattern ReportGroupTrendFieldType_BRANCHES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCHES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCH_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_DURATION :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINE_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_PASS_RATE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_TOTAL :: ReportGroupTrendFieldType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportGroupTrendFieldType.ReportGroupTrendFieldType


module Amazonka.CodeBuild.Types.ReportGroupTrendStats

-- | Contains trend statistics for a set of reports. The actual values
--   depend on the type of trend being collected. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportGroupTrendStats</a> smart constructor.
data ReportGroupTrendStats
ReportGroupTrendStats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReportGroupTrendStats

-- | Contains the maximum value analyzed.
[$sel:max:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Contains the average of all values analyzed.
[$sel:average:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Contains the minimum value analyzed.
[$sel:min:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Create a value of <a>ReportGroupTrendStats</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_max</a> - Contains the maximum value
--   analyzed.
--   
--   <a>$sel:average:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_average</a> - Contains the average of all
--   values analyzed.
--   
--   <a>$sel:min:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_min</a> - Contains the minimum value
--   analyzed.
newReportGroupTrendStats :: ReportGroupTrendStats

-- | Contains the maximum value analyzed.
reportGroupTrendStats_max :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the average of all values analyzed.
reportGroupTrendStats_average :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the minimum value analyzed.
reportGroupTrendStats_min :: Lens' ReportGroupTrendStats (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportGroupTrendStats.ReportGroupTrendStats


module Amazonka.CodeBuild.Types.ReportPackagingType
newtype ReportPackagingType
ReportPackagingType' :: Text -> ReportPackagingType
[fromReportPackagingType] :: ReportPackagingType -> Text
pattern ReportPackagingType_NONE :: ReportPackagingType
pattern ReportPackagingType_ZIP :: ReportPackagingType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportPackagingType.ReportPackagingType


module Amazonka.CodeBuild.Types.ReportStatusType
newtype ReportStatusType
ReportStatusType' :: Text -> ReportStatusType
[fromReportStatusType] :: ReportStatusType -> Text
pattern ReportStatusType_DELETING :: ReportStatusType
pattern ReportStatusType_FAILED :: ReportStatusType
pattern ReportStatusType_GENERATING :: ReportStatusType
pattern ReportStatusType_INCOMPLETE :: ReportStatusType
pattern ReportStatusType_SUCCEEDED :: ReportStatusType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportStatusType.ReportStatusType


module Amazonka.CodeBuild.Types.ReportFilter

-- | A filter used to return reports with the status specified by the input
--   <tt>status</tt> parameter.
--   
--   <i>See:</i> <a>newReportFilter</a> smart constructor.
data ReportFilter
ReportFilter' :: Maybe ReportStatusType -> ReportFilter

-- | The status used to filter reports. You can filter using one status
--   only.
[$sel:status:ReportFilter'] :: ReportFilter -> Maybe ReportStatusType

-- | Create a value of <a>ReportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportFilter'</a>, <a>reportFilter_status</a> - The
--   status used to filter reports. You can filter using one status only.
newReportFilter :: ReportFilter

-- | The status used to filter reports. You can filter using one status
--   only.
reportFilter_status :: Lens' ReportFilter (Maybe ReportStatusType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportFilter.ReportFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportFilter.ReportFilter


module Amazonka.CodeBuild.Types.ReportType
newtype ReportType
ReportType' :: Text -> ReportType
[fromReportType] :: ReportType -> Text
pattern ReportType_CODE_COVERAGE :: ReportType
pattern ReportType_TEST :: ReportType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ReportType.ReportType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ReportType.ReportType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportType.ReportType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ReportType.ReportType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ReportType.ReportType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ReportType.ReportType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportType.ReportType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportType.ReportType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportType.ReportType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ReportType.ReportType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportType.ReportType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportType.ReportType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportType.ReportType


module Amazonka.CodeBuild.Types.ReportWithRawData

-- | Contains the unmodified data for the report. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportWithRawData</a> smart constructor.
data ReportWithRawData
ReportWithRawData' :: Maybe Text -> Maybe Text -> ReportWithRawData

-- | The value of the requested data field from the report.
[$sel:data':ReportWithRawData'] :: ReportWithRawData -> Maybe Text

-- | The ARN of the report.
[$sel:reportArn:ReportWithRawData'] :: ReportWithRawData -> Maybe Text

-- | Create a value of <a>ReportWithRawData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ReportWithRawData'</a>, <a>reportWithRawData_data</a> -
--   The value of the requested data field from the report.
--   
--   <a>$sel:reportArn:ReportWithRawData'</a>,
--   <a>reportWithRawData_reportArn</a> - The ARN of the report.
newReportWithRawData :: ReportWithRawData

-- | The value of the requested data field from the report.
reportWithRawData_data :: Lens' ReportWithRawData (Maybe Text)

-- | The ARN of the report.
reportWithRawData_reportArn :: Lens' ReportWithRawData (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportWithRawData.ReportWithRawData


module Amazonka.CodeBuild.Types.ResolvedArtifact

-- | Represents a resolved build artifact. A resolved artifact is an
--   artifact that is built and deployed to the destination, such as Amazon
--   S3.
--   
--   <i>See:</i> <a>newResolvedArtifact</a> smart constructor.
data ResolvedArtifact
ResolvedArtifact' :: Maybe Text -> Maybe Text -> Maybe ArtifactsType -> ResolvedArtifact

-- | The location of the artifact.
[$sel:location:ResolvedArtifact'] :: ResolvedArtifact -> Maybe Text

-- | The identifier of the artifact.
[$sel:identifier:ResolvedArtifact'] :: ResolvedArtifact -> Maybe Text

-- | Specifies the type of artifact.
[$sel:type':ResolvedArtifact'] :: ResolvedArtifact -> Maybe ArtifactsType

-- | Create a value of <a>ResolvedArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_location</a> - The location of the artifact.
--   
--   <a>$sel:identifier:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_identifier</a> - The identifier of the artifact.
--   
--   <a>$sel:type':ResolvedArtifact'</a>, <a>resolvedArtifact_type</a> -
--   Specifies the type of artifact.
newResolvedArtifact :: ResolvedArtifact

-- | The location of the artifact.
resolvedArtifact_location :: Lens' ResolvedArtifact (Maybe Text)

-- | The identifier of the artifact.
resolvedArtifact_identifier :: Lens' ResolvedArtifact (Maybe Text)

-- | Specifies the type of artifact.
resolvedArtifact_type :: Lens' ResolvedArtifact (Maybe ArtifactsType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance GHC.Show.Show Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance GHC.Read.Read Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ResolvedArtifact.ResolvedArtifact


module Amazonka.CodeBuild.Types.RetryBuildBatchType
newtype RetryBuildBatchType
RetryBuildBatchType' :: Text -> RetryBuildBatchType
[fromRetryBuildBatchType] :: RetryBuildBatchType -> Text
pattern RetryBuildBatchType_RETRY_ALL_BUILDS :: RetryBuildBatchType
pattern RetryBuildBatchType_RETRY_FAILED_BUILDS :: RetryBuildBatchType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance GHC.Read.Read Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType
instance GHC.Show.Show Amazonka.CodeBuild.Types.RetryBuildBatchType.RetryBuildBatchType


module Amazonka.CodeBuild.Types.S3LogsConfig

-- | Information about S3 logs for a build project.
--   
--   <i>See:</i> <a>newS3LogsConfig</a> smart constructor.
data S3LogsConfig
S3LogsConfig' :: Maybe Text -> Maybe Bool -> Maybe BucketOwnerAccess -> LogsConfigStatusType -> S3LogsConfig

-- | The ARN of an S3 bucket and the path prefix for S3 logs. If your
--   Amazon S3 bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
[$sel:location:S3LogsConfig'] :: S3LogsConfig -> Maybe Text

-- | Set to true if you do not want your S3 build log output encrypted. By
--   default S3 build logs are encrypted.
[$sel:encryptionDisabled:S3LogsConfig'] :: S3LogsConfig -> Maybe Bool
[$sel:bucketOwnerAccess:S3LogsConfig'] :: S3LogsConfig -> Maybe BucketOwnerAccess

-- | The current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
[$sel:status:S3LogsConfig'] :: S3LogsConfig -> LogsConfigStatusType

-- | Create a value of <a>S3LogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3LogsConfig'</a>, <a>s3LogsConfig_location</a> - The
--   ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3
--   bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
--   
--   <a>$sel:encryptionDisabled:S3LogsConfig'</a>,
--   <a>s3LogsConfig_encryptionDisabled</a> - Set to true if you do not
--   want your S3 build log output encrypted. By default S3 build logs are
--   encrypted.
--   
--   <a>$sel:bucketOwnerAccess:S3LogsConfig'</a>,
--   <a>s3LogsConfig_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:status:S3LogsConfig'</a>, <a>s3LogsConfig_status</a> - The
--   current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
newS3LogsConfig :: LogsConfigStatusType -> S3LogsConfig

-- | The ARN of an S3 bucket and the path prefix for S3 logs. If your
--   Amazon S3 bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
s3LogsConfig_location :: Lens' S3LogsConfig (Maybe Text)

-- | Set to true if you do not want your S3 build log output encrypted. By
--   default S3 build logs are encrypted.
s3LogsConfig_encryptionDisabled :: Lens' S3LogsConfig (Maybe Bool)

-- | Undocumented member.
s3LogsConfig_bucketOwnerAccess :: Lens' S3LogsConfig (Maybe BucketOwnerAccess)

-- | The current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
s3LogsConfig_status :: Lens' S3LogsConfig LogsConfigStatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.S3LogsConfig.S3LogsConfig


module Amazonka.CodeBuild.Types.LogsLocation

-- | Information about build logs in CloudWatch Logs.
--   
--   <i>See:</i> <a>newLogsLocation</a> smart constructor.
data LogsLocation
LogsLocation' :: Maybe Text -> Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LogsLocation

-- | The URL to an individual build log in CloudWatch Logs.
[$sel:deepLink:LogsLocation'] :: LogsLocation -> Maybe Text

-- | Information about S3 logs for a build project.
[$sel:s3Logs:LogsLocation'] :: LogsLocation -> Maybe S3LogsConfig

-- | Information about CloudWatch Logs for a build project.
[$sel:cloudWatchLogs:LogsLocation'] :: LogsLocation -> Maybe CloudWatchLogsConfig

-- | The URL to a build log in an S3 bucket.
[$sel:s3DeepLink:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
[$sel:s3LogsArn:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The ARN of CloudWatch Logs for a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
[$sel:cloudWatchLogsArn:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The name of the CloudWatch Logs group for the build logs.
[$sel:groupName:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The name of the CloudWatch Logs stream for the build logs.
[$sel:streamName:LogsLocation'] :: LogsLocation -> Maybe Text

-- | Create a value of <a>LogsLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deepLink:LogsLocation'</a>, <a>logsLocation_deepLink</a> - The
--   URL to an individual build log in CloudWatch Logs.
--   
--   <a>$sel:s3Logs:LogsLocation'</a>, <a>logsLocation_s3Logs</a> -
--   Information about S3 logs for a build project.
--   
--   <a>$sel:cloudWatchLogs:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project.
--   
--   <a>$sel:s3DeepLink:LogsLocation'</a>, <a>logsLocation_s3DeepLink</a> -
--   The URL to a build log in an S3 bucket.
--   
--   <a>$sel:s3LogsArn:LogsLocation'</a>, <a>logsLocation_s3LogsArn</a> -
--   The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
--   
--   <a>$sel:cloudWatchLogsArn:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogsArn</a> - The ARN of CloudWatch Logs for
--   a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
--   
--   <a>$sel:groupName:LogsLocation'</a>, <a>logsLocation_groupName</a> -
--   The name of the CloudWatch Logs group for the build logs.
--   
--   <a>$sel:streamName:LogsLocation'</a>, <a>logsLocation_streamName</a> -
--   The name of the CloudWatch Logs stream for the build logs.
newLogsLocation :: LogsLocation

-- | The URL to an individual build log in CloudWatch Logs.
logsLocation_deepLink :: Lens' LogsLocation (Maybe Text)

-- | Information about S3 logs for a build project.
logsLocation_s3Logs :: Lens' LogsLocation (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project.
logsLocation_cloudWatchLogs :: Lens' LogsLocation (Maybe CloudWatchLogsConfig)

-- | The URL to a build log in an S3 bucket.
logsLocation_s3DeepLink :: Lens' LogsLocation (Maybe Text)

-- | The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
logsLocation_s3LogsArn :: Lens' LogsLocation (Maybe Text)

-- | The ARN of CloudWatch Logs for a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
logsLocation_cloudWatchLogsArn :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs group for the build logs.
logsLocation_groupName :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs stream for the build logs.
logsLocation_streamName :: Lens' LogsLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance GHC.Show.Show Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance GHC.Read.Read Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.LogsLocation.LogsLocation
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.LogsLocation.LogsLocation


module Amazonka.CodeBuild.Types.LogsConfig

-- | Information about logs for a build project. These can be logs in
--   CloudWatch Logs, built in a specified S3 bucket, or both.
--   
--   <i>See:</i> <a>newLogsConfig</a> smart constructor.
data LogsConfig
LogsConfig' :: Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> LogsConfig

-- | Information about logs built to an S3 bucket for a build project. S3
--   logs are not enabled by default.
[$sel:s3Logs:LogsConfig'] :: LogsConfig -> Maybe S3LogsConfig

-- | Information about CloudWatch Logs for a build project. CloudWatch Logs
--   are enabled by default.
[$sel:cloudWatchLogs:LogsConfig'] :: LogsConfig -> Maybe CloudWatchLogsConfig

-- | Create a value of <a>LogsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:LogsConfig'</a>, <a>logsConfig_s3Logs</a> - Information
--   about logs built to an S3 bucket for a build project. S3 logs are not
--   enabled by default.
--   
--   <a>$sel:cloudWatchLogs:LogsConfig'</a>,
--   <a>logsConfig_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project. CloudWatch Logs are enabled by default.
newLogsConfig :: LogsConfig

-- | Information about logs built to an S3 bucket for a build project. S3
--   logs are not enabled by default.
logsConfig_s3Logs :: Lens' LogsConfig (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project. CloudWatch Logs
--   are enabled by default.
logsConfig_cloudWatchLogs :: Lens' LogsConfig (Maybe CloudWatchLogsConfig)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.LogsConfig.LogsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.LogsConfig.LogsConfig


module Amazonka.CodeBuild.Types.S3ReportExportConfig

-- | Information about the S3 bucket where the raw data of a report are
--   exported.
--   
--   <i>See:</i> <a>newS3ReportExportConfig</a> smart constructor.
data S3ReportExportConfig
S3ReportExportConfig' :: Maybe ReportPackagingType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> S3ReportExportConfig

-- | The type of build output artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
[$sel:packaging:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe ReportPackagingType

-- | The path to the exported report's raw data results.
[$sel:path:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | The name of the S3 bucket where the raw data of a report are exported.
[$sel:bucket:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | The Amazon Web Services account identifier of the owner of the Amazon
--   S3 bucket. This allows report data to be exported to an Amazon S3
--   bucket that is owned by an account other than the account running the
--   build.
[$sel:bucketOwner:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | A boolean value that specifies if the results of a report are
--   encrypted.
[$sel:encryptionDisabled:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Bool

-- | The encryption key for the report's encrypted raw data.
[$sel:encryptionKey:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | Create a value of <a>S3ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_packaging</a> - The type of build output
--   artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
--   
--   <a>$sel:path:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_path</a> - The path to the exported report's
--   raw data results.
--   
--   <a>$sel:bucket:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucket</a> - The name of the S3 bucket where
--   the raw data of a report are exported.
--   
--   <a>$sel:bucketOwner:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucketOwner</a> - The Amazon Web Services
--   account identifier of the owner of the Amazon S3 bucket. This allows
--   report data to be exported to an Amazon S3 bucket that is owned by an
--   account other than the account running the build.
--   
--   <a>$sel:encryptionDisabled:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionDisabled</a> - A boolean value that
--   specifies if the results of a report are encrypted.
--   
--   <a>$sel:encryptionKey:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionKey</a> - The encryption key for the
--   report's encrypted raw data.
newS3ReportExportConfig :: S3ReportExportConfig

-- | The type of build output artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
s3ReportExportConfig_packaging :: Lens' S3ReportExportConfig (Maybe ReportPackagingType)

-- | The path to the exported report's raw data results.
s3ReportExportConfig_path :: Lens' S3ReportExportConfig (Maybe Text)

-- | The name of the S3 bucket where the raw data of a report are exported.
s3ReportExportConfig_bucket :: Lens' S3ReportExportConfig (Maybe Text)

-- | The Amazon Web Services account identifier of the owner of the Amazon
--   S3 bucket. This allows report data to be exported to an Amazon S3
--   bucket that is owned by an account other than the account running the
--   build.
s3ReportExportConfig_bucketOwner :: Lens' S3ReportExportConfig (Maybe Text)

-- | A boolean value that specifies if the results of a report are
--   encrypted.
s3ReportExportConfig_encryptionDisabled :: Lens' S3ReportExportConfig (Maybe Bool)

-- | The encryption key for the report's encrypted raw data.
s3ReportExportConfig_encryptionKey :: Lens' S3ReportExportConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.S3ReportExportConfig.S3ReportExportConfig


module Amazonka.CodeBuild.Types.ReportExportConfig

-- | Information about the location where the run of a report is exported.
--   
--   <i>See:</i> <a>newReportExportConfig</a> smart constructor.
data ReportExportConfig
ReportExportConfig' :: Maybe ReportExportConfigType -> Maybe S3ReportExportConfig -> ReportExportConfig

-- | The export configuration type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
[$sel:exportConfigType:ReportExportConfig'] :: ReportExportConfig -> Maybe ReportExportConfigType

-- | A <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
[$sel:s3Destination:ReportExportConfig'] :: ReportExportConfig -> Maybe S3ReportExportConfig

-- | Create a value of <a>ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportConfigType:ReportExportConfig'</a>,
--   <a>reportExportConfig_exportConfigType</a> - The export configuration
--   type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
--   
--   <a>$sel:s3Destination:ReportExportConfig'</a>,
--   <a>reportExportConfig_s3Destination</a> - A
--   <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
newReportExportConfig :: ReportExportConfig

-- | The export configuration type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
reportExportConfig_exportConfigType :: Lens' ReportExportConfig (Maybe ReportExportConfigType)

-- | A <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
reportExportConfig_s3Destination :: Lens' ReportExportConfig (Maybe S3ReportExportConfig)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ReportExportConfig.ReportExportConfig


module Amazonka.CodeBuild.Types.ServerType
newtype ServerType
ServerType' :: Text -> ServerType
[fromServerType] :: ServerType -> Text
pattern ServerType_BITBUCKET :: ServerType
pattern ServerType_GITHUB :: ServerType
pattern ServerType_GITHUB_ENTERPRISE :: ServerType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.ServerType.ServerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.ServerType.ServerType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ServerType.ServerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.ServerType.ServerType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.ServerType.ServerType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.ServerType.ServerType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ServerType.ServerType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ServerType.ServerType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ServerType.ServerType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.ServerType.ServerType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ServerType.ServerType
instance GHC.Read.Read Amazonka.CodeBuild.Types.ServerType.ServerType
instance GHC.Show.Show Amazonka.CodeBuild.Types.ServerType.ServerType


module Amazonka.CodeBuild.Types.SharedResourceSortByType
newtype SharedResourceSortByType
SharedResourceSortByType' :: Text -> SharedResourceSortByType
[fromSharedResourceSortByType] :: SharedResourceSortByType -> Text
pattern SharedResourceSortByType_ARN :: SharedResourceSortByType
pattern SharedResourceSortByType_MODIFIED_TIME :: SharedResourceSortByType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance GHC.Read.Read Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType
instance GHC.Show.Show Amazonka.CodeBuild.Types.SharedResourceSortByType.SharedResourceSortByType


module Amazonka.CodeBuild.Types.SortOrderType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_ASCENDING :: SortOrderType
pattern SortOrderType_DESCENDING :: SortOrderType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance GHC.Read.Read Amazonka.CodeBuild.Types.SortOrderType.SortOrderType
instance GHC.Show.Show Amazonka.CodeBuild.Types.SortOrderType.SortOrderType


module Amazonka.CodeBuild.Types.SourceAuthType
newtype SourceAuthType
SourceAuthType' :: Text -> SourceAuthType
[fromSourceAuthType] :: SourceAuthType -> Text
pattern SourceAuthType_OAUTH :: SourceAuthType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance GHC.Read.Read Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType
instance GHC.Show.Show Amazonka.CodeBuild.Types.SourceAuthType.SourceAuthType


module Amazonka.CodeBuild.Types.SourceAuth

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <i>See:</i> <a>newSourceAuth</a> smart constructor.
data SourceAuth
SourceAuth' :: Maybe Text -> SourceAuthType -> SourceAuth

-- | The resource value that applies to the specified authorization type.
[$sel:resource:SourceAuth'] :: SourceAuth -> Maybe Text

-- | This data type is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
[$sel:type':SourceAuth'] :: SourceAuth -> SourceAuthType

-- | Create a value of <a>SourceAuth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:SourceAuth'</a>, <a>sourceAuth_resource</a> - The
--   resource value that applies to the specified authorization type.
--   
--   <a>$sel:type':SourceAuth'</a>, <a>sourceAuth_type</a> - This data type
--   is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
newSourceAuth :: SourceAuthType -> SourceAuth

-- | The resource value that applies to the specified authorization type.
sourceAuth_resource :: Lens' SourceAuth (Maybe Text)

-- | This data type is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
sourceAuth_type :: Lens' SourceAuth SourceAuthType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance GHC.Show.Show Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance GHC.Read.Read Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SourceAuth.SourceAuth
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.SourceAuth.SourceAuth


module Amazonka.CodeBuild.Types.SourceCredentialsInfo

-- | Information about the credentials for a GitHub, GitHub Enterprise, or
--   Bitbucket repository.
--   
--   <i>See:</i> <a>newSourceCredentialsInfo</a> smart constructor.
data SourceCredentialsInfo
SourceCredentialsInfo' :: Maybe Text -> Maybe ServerType -> Maybe AuthType -> SourceCredentialsInfo

-- | The Amazon Resource Name (ARN) of the token.
[$sel:arn:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe Text

-- | The type of source provider. The valid options are GITHUB,
--   GITHUB_ENTERPRISE, or BITBUCKET.
[$sel:serverType:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe ServerType

-- | The type of authentication used by the credentials. Valid options are
--   OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.
[$sel:authType:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe AuthType

-- | Create a value of <a>SourceCredentialsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_arn</a> - The Amazon Resource Name (ARN) of
--   the token.
--   
--   <a>$sel:serverType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_serverType</a> - The type of source provider.
--   The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.
--   
--   <a>$sel:authType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_authType</a> - The type of authentication
--   used by the credentials. Valid options are OAUTH, BASIC_AUTH, or
--   PERSONAL_ACCESS_TOKEN.
newSourceCredentialsInfo :: SourceCredentialsInfo

-- | The Amazon Resource Name (ARN) of the token.
sourceCredentialsInfo_arn :: Lens' SourceCredentialsInfo (Maybe Text)

-- | The type of source provider. The valid options are GITHUB,
--   GITHUB_ENTERPRISE, or BITBUCKET.
sourceCredentialsInfo_serverType :: Lens' SourceCredentialsInfo (Maybe ServerType)

-- | The type of authentication used by the credentials. Valid options are
--   OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.
sourceCredentialsInfo_authType :: Lens' SourceCredentialsInfo (Maybe AuthType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance GHC.Show.Show Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance GHC.Read.Read Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SourceCredentialsInfo.SourceCredentialsInfo


module Amazonka.CodeBuild.Types.SourceType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_BITBUCKET :: SourceType
pattern SourceType_CODECOMMIT :: SourceType
pattern SourceType_CODEPIPELINE :: SourceType
pattern SourceType_GITHUB :: SourceType
pattern SourceType_GITHUB_ENTERPRISE :: SourceType
pattern SourceType_NO_SOURCE :: SourceType
pattern SourceType_S3 :: SourceType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.SourceType.SourceType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.SourceType.SourceType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.SourceType.SourceType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.SourceType.SourceType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.SourceType.SourceType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.SourceType.SourceType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.SourceType.SourceType
instance GHC.Read.Read Amazonka.CodeBuild.Types.SourceType.SourceType
instance GHC.Show.Show Amazonka.CodeBuild.Types.SourceType.SourceType


module Amazonka.CodeBuild.Types.ProjectSource

-- | Information about the build input source code for the build project.
--   
--   <i>See:</i> <a>newProjectSource</a> smart constructor.
data ProjectSource
ProjectSource' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe SourceAuth -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe GitSubmodulesConfig -> Maybe BuildStatusConfig -> SourceType -> ProjectSource

-- | Set to true to report the status of a build's start and finish to your
--   source provider. This option is valid only when your source provider
--   is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use
--   a different source provider, an <tt>invalidInputException</tt> is
--   thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
[$sel:reportBuildStatus:ProjectSource'] :: ProjectSource -> Maybe Bool

-- | Enable this flag to ignore SSL warnings while connecting to the
--   project source code.
[$sel:insecureSsl:ProjectSource'] :: ProjectSource -> Maybe Bool

-- | Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
[$sel:location:ProjectSource'] :: ProjectSource -> Maybe Text

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
[$sel:auth:ProjectSource'] :: ProjectSource -> Maybe SourceAuth

-- | The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
[$sel:buildspec:ProjectSource'] :: ProjectSource -> Maybe Text

-- | An identifier for this project source. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
[$sel:sourceIdentifier:ProjectSource'] :: ProjectSource -> Maybe Text

-- | Information about the Git clone depth for the build project.
[$sel:gitCloneDepth:ProjectSource'] :: ProjectSource -> Maybe Natural

-- | Information about the Git submodules configuration for the build
--   project.
[$sel:gitSubmodulesConfig:ProjectSource'] :: ProjectSource -> Maybe GitSubmodulesConfig

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
[$sel:buildStatusConfig:ProjectSource'] :: ProjectSource -> Maybe BuildStatusConfig

-- | The type of repository that contains the source code to be built.
--   Valid values include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
[$sel:type':ProjectSource'] :: ProjectSource -> SourceType

-- | Create a value of <a>ProjectSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportBuildStatus:ProjectSource'</a>,
--   <a>projectSource_reportBuildStatus</a> - Set to true to report the
--   status of a build's start and finish to your source provider. This
--   option is valid only when your source provider is GitHub, GitHub
--   Enterprise, or Bitbucket. If this is set and you use a different
--   source provider, an <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
--   
--   <a>$sel:insecureSsl:ProjectSource'</a>,
--   <a>projectSource_insecureSsl</a> - Enable this flag to ignore SSL
--   warnings while connecting to the project source code.
--   
--   <a>$sel:location:ProjectSource'</a>, <a>projectSource_location</a> -
--   Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
--   
--   <a>$sel:auth:ProjectSource'</a>, <a>projectSource_auth</a> -
--   Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <a>$sel:buildspec:ProjectSource'</a>, <a>projectSource_buildspec</a> -
--   The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:sourceIdentifier:ProjectSource'</a>,
--   <a>projectSource_sourceIdentifier</a> - An identifier for this project
--   source. The identifier can only contain alphanumeric characters and
--   underscores, and must be less than 128 characters in length.
--   
--   <a>$sel:gitCloneDepth:ProjectSource'</a>,
--   <a>projectSource_gitCloneDepth</a> - Information about the Git clone
--   depth for the build project.
--   
--   <a>$sel:gitSubmodulesConfig:ProjectSource'</a>,
--   <a>projectSource_gitSubmodulesConfig</a> - Information about the Git
--   submodules configuration for the build project.
--   
--   <a>$sel:buildStatusConfig:ProjectSource'</a>,
--   <a>projectSource_buildStatusConfig</a> - Contains information that
--   defines how the build project reports the build status to the source
--   provider. This option is only used when the source provider is
--   <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or <tt>BITBUCKET</tt>.
--   
--   <a>$sel:type':ProjectSource'</a>, <a>projectSource_type</a> - The type
--   of repository that contains the source code to be built. Valid values
--   include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
newProjectSource :: SourceType -> ProjectSource

-- | Set to true to report the status of a build's start and finish to your
--   source provider. This option is valid only when your source provider
--   is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use
--   a different source provider, an <tt>invalidInputException</tt> is
--   thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
projectSource_reportBuildStatus :: Lens' ProjectSource (Maybe Bool)

-- | Enable this flag to ignore SSL warnings while connecting to the
--   project source code.
projectSource_insecureSsl :: Lens' ProjectSource (Maybe Bool)

-- | Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
projectSource_location :: Lens' ProjectSource (Maybe Text)

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
projectSource_auth :: Lens' ProjectSource (Maybe SourceAuth)

-- | The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
projectSource_buildspec :: Lens' ProjectSource (Maybe Text)

-- | An identifier for this project source. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
projectSource_sourceIdentifier :: Lens' ProjectSource (Maybe Text)

-- | Information about the Git clone depth for the build project.
projectSource_gitCloneDepth :: Lens' ProjectSource (Maybe Natural)

-- | Information about the Git submodules configuration for the build
--   project.
projectSource_gitSubmodulesConfig :: Lens' ProjectSource (Maybe GitSubmodulesConfig)

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
projectSource_buildStatusConfig :: Lens' ProjectSource (Maybe BuildStatusConfig)

-- | The type of repository that contains the source code to be built.
--   Valid values include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
projectSource_type :: Lens' ProjectSource SourceType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance GHC.Show.Show Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance GHC.Read.Read Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ProjectSource.ProjectSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.ProjectSource.ProjectSource


module Amazonka.CodeBuild.Types.StatusType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_FAILED :: StatusType
pattern StatusType_FAULT :: StatusType
pattern StatusType_IN_PROGRESS :: StatusType
pattern StatusType_STOPPED :: StatusType
pattern StatusType_SUCCEEDED :: StatusType
pattern StatusType_TIMED_OUT :: StatusType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.StatusType.StatusType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.StatusType.StatusType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.StatusType.StatusType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.StatusType.StatusType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.StatusType.StatusType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.StatusType.StatusType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.StatusType.StatusType
instance GHC.Read.Read Amazonka.CodeBuild.Types.StatusType.StatusType
instance GHC.Show.Show Amazonka.CodeBuild.Types.StatusType.StatusType


module Amazonka.CodeBuild.Types.BuildSummary

-- | Contains summary information about a batch build group.
--   
--   <i>See:</i> <a>newBuildSummary</a> smart constructor.
data BuildSummary
BuildSummary' :: Maybe [ResolvedArtifact] -> Maybe ResolvedArtifact -> Maybe Text -> Maybe StatusType -> Maybe POSIX -> BuildSummary

-- | An array of <tt>ResolvedArtifact</tt> objects that represents the
--   secondary build artifacts for the build group.
[$sel:secondaryArtifacts:BuildSummary'] :: BuildSummary -> Maybe [ResolvedArtifact]

-- | A <tt>ResolvedArtifact</tt> object that represents the primary build
--   artifacts for the build group.
[$sel:primaryArtifact:BuildSummary'] :: BuildSummary -> Maybe ResolvedArtifact

-- | The batch build ARN.
[$sel:arn:BuildSummary'] :: BuildSummary -> Maybe Text

-- | The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
[$sel:buildStatus:BuildSummary'] :: BuildSummary -> Maybe StatusType

-- | When the build was started, expressed in Unix time format.
[$sel:requestedOn:BuildSummary'] :: BuildSummary -> Maybe POSIX

-- | Create a value of <a>BuildSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:BuildSummary'</a>,
--   <a>buildSummary_secondaryArtifacts</a> - An array of
--   <tt>ResolvedArtifact</tt> objects that represents the secondary build
--   artifacts for the build group.
--   
--   <a>$sel:primaryArtifact:BuildSummary'</a>,
--   <a>buildSummary_primaryArtifact</a> - A <tt>ResolvedArtifact</tt>
--   object that represents the primary build artifacts for the build
--   group.
--   
--   <a>$sel:arn:BuildSummary'</a>, <a>buildSummary_arn</a> - The batch
--   build ARN.
--   
--   <a>$sel:buildStatus:BuildSummary'</a>, <a>buildSummary_buildStatus</a>
--   - The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
--   
--   <a>$sel:requestedOn:BuildSummary'</a>, <a>buildSummary_requestedOn</a>
--   - When the build was started, expressed in Unix time format.
newBuildSummary :: BuildSummary

-- | An array of <tt>ResolvedArtifact</tt> objects that represents the
--   secondary build artifacts for the build group.
buildSummary_secondaryArtifacts :: Lens' BuildSummary (Maybe [ResolvedArtifact])

-- | A <tt>ResolvedArtifact</tt> object that represents the primary build
--   artifacts for the build group.
buildSummary_primaryArtifact :: Lens' BuildSummary (Maybe ResolvedArtifact)

-- | The batch build ARN.
buildSummary_arn :: Lens' BuildSummary (Maybe Text)

-- | The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
buildSummary_buildStatus :: Lens' BuildSummary (Maybe StatusType)

-- | When the build was started, expressed in Unix time format.
buildSummary_requestedOn :: Lens' BuildSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildSummary.BuildSummary
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildSummary.BuildSummary


module Amazonka.CodeBuild.Types.BuildGroup

-- | Contains information about a batch build build group. Build groups are
--   used to combine builds that can run in parallel, while still being
--   able to set dependencies on other build groups.
--   
--   <i>See:</i> <a>newBuildGroup</a> smart constructor.
data BuildGroup
BuildGroup' :: Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe BuildSummary -> Maybe [BuildSummary] -> BuildGroup

-- | Contains the identifier of the build group.
[$sel:identifier:BuildGroup'] :: BuildGroup -> Maybe Text

-- | An array of strings that contain the identifiers of the build groups
--   that this build group depends on.
[$sel:dependsOn:BuildGroup'] :: BuildGroup -> Maybe [Text]

-- | Specifies if failures in this build group can be ignored.
[$sel:ignoreFailure:BuildGroup'] :: BuildGroup -> Maybe Bool

-- | A <tt>BuildSummary</tt> object that contains a summary of the current
--   build group.
[$sel:currentBuildSummary:BuildGroup'] :: BuildGroup -> Maybe BuildSummary

-- | An array of <tt>BuildSummary</tt> objects that contain summaries of
--   previous build groups.
[$sel:priorBuildSummaryList:BuildGroup'] :: BuildGroup -> Maybe [BuildSummary]

-- | Create a value of <a>BuildGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:BuildGroup'</a>, <a>buildGroup_identifier</a> -
--   Contains the identifier of the build group.
--   
--   <a>$sel:dependsOn:BuildGroup'</a>, <a>buildGroup_dependsOn</a> - An
--   array of strings that contain the identifiers of the build groups that
--   this build group depends on.
--   
--   <a>$sel:ignoreFailure:BuildGroup'</a>, <a>buildGroup_ignoreFailure</a>
--   - Specifies if failures in this build group can be ignored.
--   
--   <a>$sel:currentBuildSummary:BuildGroup'</a>,
--   <a>buildGroup_currentBuildSummary</a> - A <tt>BuildSummary</tt> object
--   that contains a summary of the current build group.
--   
--   <a>$sel:priorBuildSummaryList:BuildGroup'</a>,
--   <a>buildGroup_priorBuildSummaryList</a> - An array of
--   <tt>BuildSummary</tt> objects that contain summaries of previous build
--   groups.
newBuildGroup :: BuildGroup

-- | Contains the identifier of the build group.
buildGroup_identifier :: Lens' BuildGroup (Maybe Text)

-- | An array of strings that contain the identifiers of the build groups
--   that this build group depends on.
buildGroup_dependsOn :: Lens' BuildGroup (Maybe [Text])

-- | Specifies if failures in this build group can be ignored.
buildGroup_ignoreFailure :: Lens' BuildGroup (Maybe Bool)

-- | A <tt>BuildSummary</tt> object that contains a summary of the current
--   build group.
buildGroup_currentBuildSummary :: Lens' BuildGroup (Maybe BuildSummary)

-- | An array of <tt>BuildSummary</tt> objects that contain summaries of
--   previous build groups.
buildGroup_priorBuildSummaryList :: Lens' BuildGroup (Maybe [BuildSummary])
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildGroup.BuildGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildGroup.BuildGroup


module Amazonka.CodeBuild.Types.BuildPhase

-- | Information about a stage for a build.
--   
--   <i>See:</i> <a>newBuildPhase</a> smart constructor.
data BuildPhase
BuildPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildPhaseType -> Maybe POSIX -> Maybe Integer -> BuildPhase

-- | Additional information about a build phase, especially to help
--   troubleshoot a failed build.
[$sel:contexts:BuildPhase'] :: BuildPhase -> Maybe [PhaseContext]

-- | When the build phase started, expressed in Unix time format.
[$sel:startTime:BuildPhase'] :: BuildPhase -> Maybe POSIX

-- | The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
[$sel:phaseStatus:BuildPhase'] :: BuildPhase -> Maybe StatusType

-- | The name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
[$sel:phaseType:BuildPhase'] :: BuildPhase -> Maybe BuildPhaseType

-- | When the build phase ended, expressed in Unix time format.
[$sel:endTime:BuildPhase'] :: BuildPhase -> Maybe POSIX

-- | How long, in seconds, between the starting and ending times of the
--   build's phase.
[$sel:durationInSeconds:BuildPhase'] :: BuildPhase -> Maybe Integer

-- | Create a value of <a>BuildPhase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildPhase'</a>, <a>buildPhase_contexts</a> -
--   Additional information about a build phase, especially to help
--   troubleshoot a failed build.
--   
--   <a>$sel:startTime:BuildPhase'</a>, <a>buildPhase_startTime</a> - When
--   the build phase started, expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildPhase'</a>, <a>buildPhase_phaseStatus</a> -
--   The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildPhase'</a>, <a>buildPhase_phaseType</a> - The
--   name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildPhase'</a>, <a>buildPhase_endTime</a> - When the
--   build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildPhase'</a>,
--   <a>buildPhase_durationInSeconds</a> - How long, in seconds, between
--   the starting and ending times of the build's phase.
newBuildPhase :: BuildPhase

-- | Additional information about a build phase, especially to help
--   troubleshoot a failed build.
buildPhase_contexts :: Lens' BuildPhase (Maybe [PhaseContext])

-- | When the build phase started, expressed in Unix time format.
buildPhase_startTime :: Lens' BuildPhase (Maybe UTCTime)

-- | The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildPhase_phaseStatus :: Lens' BuildPhase (Maybe StatusType)

-- | The name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
buildPhase_phaseType :: Lens' BuildPhase (Maybe BuildPhaseType)

-- | When the build phase ended, expressed in Unix time format.
buildPhase_endTime :: Lens' BuildPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   build's phase.
buildPhase_durationInSeconds :: Lens' BuildPhase (Maybe Integer)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildPhase.BuildPhase
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildPhase.BuildPhase


module Amazonka.CodeBuild.Types.BuildBatchPhase

-- | Contains information about a stage for a batch build.
--   
--   <i>See:</i> <a>newBuildBatchPhase</a> smart constructor.
data BuildBatchPhase
BuildBatchPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildBatchPhaseType -> Maybe POSIX -> Maybe Integer -> BuildBatchPhase

-- | Additional information about the batch build phase. Especially to help
--   troubleshoot a failed batch build.
[$sel:contexts:BuildBatchPhase'] :: BuildBatchPhase -> Maybe [PhaseContext]

-- | When the batch build phase started, expressed in Unix time format.
[$sel:startTime:BuildBatchPhase'] :: BuildBatchPhase -> Maybe POSIX

-- | The current status of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
[$sel:phaseStatus:BuildBatchPhase'] :: BuildBatchPhase -> Maybe StatusType

-- | The name of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
[$sel:phaseType:BuildBatchPhase'] :: BuildBatchPhase -> Maybe BuildBatchPhaseType

-- | When the batch build phase ended, expressed in Unix time format.
[$sel:endTime:BuildBatchPhase'] :: BuildBatchPhase -> Maybe POSIX

-- | How long, in seconds, between the starting and ending times of the
--   batch build's phase.
[$sel:durationInSeconds:BuildBatchPhase'] :: BuildBatchPhase -> Maybe Integer

-- | Create a value of <a>BuildBatchPhase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildBatchPhase'</a>, <a>buildBatchPhase_contexts</a>
--   - Additional information about the batch build phase. Especially to
--   help troubleshoot a failed batch build.
--   
--   <a>$sel:startTime:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_startTime</a> - When the batch build phase started,
--   expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseStatus</a> - The current status of the batch
--   build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseType</a> - The name of the batch build phase.
--   Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildBatchPhase'</a>, <a>buildBatchPhase_endTime</a> -
--   When the batch build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_durationInSeconds</a> - How long, in seconds,
--   between the starting and ending times of the batch build's phase.
newBuildBatchPhase :: BuildBatchPhase

-- | Additional information about the batch build phase. Especially to help
--   troubleshoot a failed batch build.
buildBatchPhase_contexts :: Lens' BuildBatchPhase (Maybe [PhaseContext])

-- | When the batch build phase started, expressed in Unix time format.
buildBatchPhase_startTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | The current status of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildBatchPhase_phaseStatus :: Lens' BuildBatchPhase (Maybe StatusType)

-- | The name of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
buildBatchPhase_phaseType :: Lens' BuildBatchPhase (Maybe BuildBatchPhaseType)

-- | When the batch build phase ended, expressed in Unix time format.
buildBatchPhase_endTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   batch build's phase.
buildBatchPhase_durationInSeconds :: Lens' BuildBatchPhase (Maybe Integer)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildBatchPhase.BuildBatchPhase


module Amazonka.CodeBuild.Types.BuildBatchFilter

-- | Specifies filters when retrieving batch builds.
--   
--   <i>See:</i> <a>newBuildBatchFilter</a> smart constructor.
data BuildBatchFilter
BuildBatchFilter' :: Maybe StatusType -> BuildBatchFilter

-- | The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
[$sel:status:BuildBatchFilter'] :: BuildBatchFilter -> Maybe StatusType

-- | Create a value of <a>BuildBatchFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BuildBatchFilter'</a>, <a>buildBatchFilter_status</a> -
--   The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
newBuildBatchFilter :: BuildBatchFilter

-- | The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
buildBatchFilter_status :: Lens' BuildBatchFilter (Maybe StatusType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.BuildBatchFilter.BuildBatchFilter


module Amazonka.CodeBuild.Types.Tag

-- | A tag, consisting of a key and a value.
--   
--   This tag is available for use by Amazon Web Services services that
--   support tags in CodeBuild.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
newTag :: Tag

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.Tag.Tag
instance GHC.Show.Show Amazonka.CodeBuild.Types.Tag.Tag
instance GHC.Read.Read Amazonka.CodeBuild.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.Tag.Tag


module Amazonka.CodeBuild.Types.ReportGroup

-- | A series of reports. Each report contains information about the
--   results from running a series of test cases. You specify the test
--   cases for a report group in the buildspec for a build project using
--   one or more paths to the test case files.
--   
--   <i>See:</i> <a>newReportGroup</a> smart constructor.
data ReportGroup
ReportGroup' :: Maybe ReportGroupStatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ReportType -> Maybe POSIX -> Maybe ReportExportConfig -> Maybe [Tag] -> ReportGroup

-- | The status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
[$sel:status:ReportGroup'] :: ReportGroup -> Maybe ReportGroupStatusType

-- | The ARN of the <tt>ReportGroup</tt>.
[$sel:arn:ReportGroup'] :: ReportGroup -> Maybe Text

-- | The date and time this <tt>ReportGroup</tt> was created.
[$sel:created:ReportGroup'] :: ReportGroup -> Maybe POSIX

-- | The name of the <tt>ReportGroup</tt>.
[$sel:name:ReportGroup'] :: ReportGroup -> Maybe Text

-- | The type of the <tt>ReportGroup</tt>. This can be one of the following
--   values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
[$sel:type':ReportGroup'] :: ReportGroup -> Maybe ReportType

-- | The date and time this <tt>ReportGroup</tt> was last modified.
[$sel:lastModified:ReportGroup'] :: ReportGroup -> Maybe POSIX

-- | Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
[$sel:exportConfig:ReportGroup'] :: ReportGroup -> Maybe ReportExportConfig

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
[$sel:tags:ReportGroup'] :: ReportGroup -> Maybe [Tag]

-- | Create a value of <a>ReportGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportGroup'</a>, <a>reportGroup_status</a> - The
--   status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
--   
--   <a>$sel:arn:ReportGroup'</a>, <a>reportGroup_arn</a> - The ARN of the
--   <tt>ReportGroup</tt>.
--   
--   <a>$sel:created:ReportGroup'</a>, <a>reportGroup_created</a> - The
--   date and time this <tt>ReportGroup</tt> was created.
--   
--   <a>$sel:name:ReportGroup'</a>, <a>reportGroup_name</a> - The name of
--   the <tt>ReportGroup</tt>.
--   
--   <a>$sel:type':ReportGroup'</a>, <a>reportGroup_type</a> - The type of
--   the <tt>ReportGroup</tt>. This can be one of the following values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
--   
--   <a>$sel:lastModified:ReportGroup'</a>, <a>reportGroup_lastModified</a>
--   - The date and time this <tt>ReportGroup</tt> was last modified.
--   
--   <a>$sel:exportConfig:ReportGroup'</a>, <a>reportGroup_exportConfig</a>
--   - Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
--   
--   <a>$sel:tags:ReportGroup'</a>, <a>reportGroup_tags</a> - A list of tag
--   key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
newReportGroup :: ReportGroup

-- | The status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
reportGroup_status :: Lens' ReportGroup (Maybe ReportGroupStatusType)

-- | The ARN of the <tt>ReportGroup</tt>.
reportGroup_arn :: Lens' ReportGroup (Maybe Text)

-- | The date and time this <tt>ReportGroup</tt> was created.
reportGroup_created :: Lens' ReportGroup (Maybe UTCTime)

-- | The name of the <tt>ReportGroup</tt>.
reportGroup_name :: Lens' ReportGroup (Maybe Text)

-- | The type of the <tt>ReportGroup</tt>. This can be one of the following
--   values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
reportGroup_type :: Lens' ReportGroup (Maybe ReportType)

-- | The date and time this <tt>ReportGroup</tt> was last modified.
reportGroup_lastModified :: Lens' ReportGroup (Maybe UTCTime)

-- | Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
reportGroup_exportConfig :: Lens' ReportGroup (Maybe ReportExportConfig)

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
reportGroup_tags :: Lens' ReportGroup (Maybe [Tag])
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance GHC.Show.Show Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance GHC.Read.Read Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.ReportGroup.ReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.ReportGroup.ReportGroup


module Amazonka.CodeBuild.Types.TestCase

-- | Information about a test case created using a framework such as NUnit
--   or Cucumber. A test case might be a unit test or a configuration test.
--   
--   <i>See:</i> <a>newTestCase</a> smart constructor.
data TestCase
TestCase' :: Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> TestCase

-- | The number of nanoseconds it took to run this test case.
[$sel:durationInNanoSeconds:TestCase'] :: TestCase -> Maybe Integer

-- | The status returned by the test case after it was run. Valid statuses
--   are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>,
--   <tt>SKIPPED</tt>, and <tt>UNKNOWN</tt>.
[$sel:status:TestCase'] :: TestCase -> Maybe Text

-- | The date and time a test case expires. A test case expires 30 days
--   after it is created. An expired test case is not available to view in
--   CodeBuild.
[$sel:expired:TestCase'] :: TestCase -> Maybe POSIX

-- | A string that is applied to a series of related test cases. CodeBuild
--   generates the prefix. The prefix depends on the framework used to
--   generate the tests.
[$sel:prefix:TestCase'] :: TestCase -> Maybe Text

-- | The name of the test case.
[$sel:name:TestCase'] :: TestCase -> Maybe Text

-- | The path to the raw data file that contains the test result.
[$sel:testRawDataPath:TestCase'] :: TestCase -> Maybe Text

-- | A message associated with a test case. For example, an error message
--   or stack trace.
[$sel:message:TestCase'] :: TestCase -> Maybe Text

-- | The ARN of the report to which the test case belongs.
[$sel:reportArn:TestCase'] :: TestCase -> Maybe Text

-- | Create a value of <a>TestCase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInNanoSeconds:TestCase'</a>,
--   <a>testCase_durationInNanoSeconds</a> - The number of nanoseconds it
--   took to run this test case.
--   
--   <a>$sel:status:TestCase'</a>, <a>testCase_status</a> - The status
--   returned by the test case after it was run. Valid statuses are
--   <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>, <tt>SKIPPED</tt>,
--   and <tt>UNKNOWN</tt>.
--   
--   <a>$sel:expired:TestCase'</a>, <a>testCase_expired</a> - The date and
--   time a test case expires. A test case expires 30 days after it is
--   created. An expired test case is not available to view in CodeBuild.
--   
--   <a>$sel:prefix:TestCase'</a>, <a>testCase_prefix</a> - A string that
--   is applied to a series of related test cases. CodeBuild generates the
--   prefix. The prefix depends on the framework used to generate the
--   tests.
--   
--   <a>$sel:name:TestCase'</a>, <a>testCase_name</a> - The name of the
--   test case.
--   
--   <a>$sel:testRawDataPath:TestCase'</a>, <a>testCase_testRawDataPath</a>
--   - The path to the raw data file that contains the test result.
--   
--   <a>$sel:message:TestCase'</a>, <a>testCase_message</a> - A message
--   associated with a test case. For example, an error message or stack
--   trace.
--   
--   <a>$sel:reportArn:TestCase'</a>, <a>testCase_reportArn</a> - The ARN
--   of the report to which the test case belongs.
newTestCase :: TestCase

-- | The number of nanoseconds it took to run this test case.
testCase_durationInNanoSeconds :: Lens' TestCase (Maybe Integer)

-- | The status returned by the test case after it was run. Valid statuses
--   are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>,
--   <tt>SKIPPED</tt>, and <tt>UNKNOWN</tt>.
testCase_status :: Lens' TestCase (Maybe Text)

-- | The date and time a test case expires. A test case expires 30 days
--   after it is created. An expired test case is not available to view in
--   CodeBuild.
testCase_expired :: Lens' TestCase (Maybe UTCTime)

-- | A string that is applied to a series of related test cases. CodeBuild
--   generates the prefix. The prefix depends on the framework used to
--   generate the tests.
testCase_prefix :: Lens' TestCase (Maybe Text)

-- | The name of the test case.
testCase_name :: Lens' TestCase (Maybe Text)

-- | The path to the raw data file that contains the test result.
testCase_testRawDataPath :: Lens' TestCase (Maybe Text)

-- | A message associated with a test case. For example, an error message
--   or stack trace.
testCase_message :: Lens' TestCase (Maybe Text)

-- | The ARN of the report to which the test case belongs.
testCase_reportArn :: Lens' TestCase (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.TestCase.TestCase
instance GHC.Show.Show Amazonka.CodeBuild.Types.TestCase.TestCase
instance GHC.Read.Read Amazonka.CodeBuild.Types.TestCase.TestCase
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.TestCase.TestCase
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.TestCase.TestCase
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.TestCase.TestCase
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.TestCase.TestCase


module Amazonka.CodeBuild.Types.TestCaseFilter

-- | A filter used to return specific types of test cases. In order to pass
--   the filter, the report must meet all of the filter properties.
--   
--   <i>See:</i> <a>newTestCaseFilter</a> smart constructor.
data TestCaseFilter
TestCaseFilter' :: Maybe Text -> Maybe Text -> TestCaseFilter

-- | The status used to filter test cases. A <tt>TestCaseFilter</tt> can
--   have one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
[$sel:status:TestCaseFilter'] :: TestCaseFilter -> Maybe Text

-- | A keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
[$sel:keyword:TestCaseFilter'] :: TestCaseFilter -> Maybe Text

-- | Create a value of <a>TestCaseFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseFilter'</a>, <a>testCaseFilter_status</a> - The
--   status used to filter test cases. A <tt>TestCaseFilter</tt> can have
--   one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
--   
--   <a>$sel:keyword:TestCaseFilter'</a>, <a>testCaseFilter_keyword</a> - A
--   keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
newTestCaseFilter :: TestCaseFilter

-- | The status used to filter test cases. A <tt>TestCaseFilter</tt> can
--   have one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
testCaseFilter_status :: Lens' TestCaseFilter (Maybe Text)

-- | A keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
testCaseFilter_keyword :: Lens' TestCaseFilter (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance GHC.Show.Show Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance GHC.Read.Read Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.TestCaseFilter.TestCaseFilter


module Amazonka.CodeBuild.Types.TestReportSummary

-- | Information about a test report.
--   
--   <i>See:</i> <a>newTestReportSummary</a> smart constructor.
data TestReportSummary
TestReportSummary' :: Int -> HashMap Text Int -> Integer -> TestReportSummary

-- | The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
[$sel:total:TestReportSummary'] :: TestReportSummary -> Int

-- | A map that contains the number of each type of status returned by the
--   test results in this <tt>TestReportSummary</tt>.
[$sel:statusCounts:TestReportSummary'] :: TestReportSummary -> HashMap Text Int

-- | The number of nanoseconds it took to run all of the test cases in this
--   report.
[$sel:durationInNanoSeconds:TestReportSummary'] :: TestReportSummary -> Integer

-- | Create a value of <a>TestReportSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TestReportSummary'</a>, <a>testReportSummary_total</a> -
--   The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
--   
--   <a>$sel:statusCounts:TestReportSummary'</a>,
--   <a>testReportSummary_statusCounts</a> - A map that contains the number
--   of each type of status returned by the test results in this
--   <tt>TestReportSummary</tt>.
--   
--   <a>$sel:durationInNanoSeconds:TestReportSummary'</a>,
--   <a>testReportSummary_durationInNanoSeconds</a> - The number of
--   nanoseconds it took to run all of the test cases in this report.
newTestReportSummary :: Int -> Integer -> TestReportSummary

-- | The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
testReportSummary_total :: Lens' TestReportSummary Int

-- | A map that contains the number of each type of status returned by the
--   test results in this <tt>TestReportSummary</tt>.
testReportSummary_statusCounts :: Lens' TestReportSummary (HashMap Text Int)

-- | The number of nanoseconds it took to run all of the test cases in this
--   report.
testReportSummary_durationInNanoSeconds :: Lens' TestReportSummary Integer
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance GHC.Show.Show Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance GHC.Read.Read Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.TestReportSummary.TestReportSummary


module Amazonka.CodeBuild.Types.Report

-- | Information about the results from running a series of test cases
--   during the run of a build project. The test cases are specified in the
--   buildspec for the build project using one or more paths to the test
--   case files. You can specify any type of tests you want, such as unit
--   tests, integration tests, and functional tests.
--   
--   <i>See:</i> <a>newReport</a> smart constructor.
data Report
Report' :: Maybe Text -> Maybe ReportStatusType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CodeCoverageReportSummary -> Maybe TestReportSummary -> Maybe ReportType -> Maybe ReportExportConfig -> Report

-- | The ARN of the report group associated with this report.
[$sel:reportGroupArn:Report'] :: Report -> Maybe Text

-- | The status of this report.
[$sel:status:Report'] :: Report -> Maybe ReportStatusType

-- | The date and time a report expires. A report expires 30 days after it
--   is created. An expired report is not available to view in CodeBuild.
[$sel:expired:Report'] :: Report -> Maybe POSIX

-- | The ARN of the build run that generated this report.
[$sel:executionId:Report'] :: Report -> Maybe Text

-- | A boolean that specifies if this report run is truncated. The list of
--   test cases is truncated after the maximum number of test cases is
--   reached.
[$sel:truncated:Report'] :: Report -> Maybe Bool

-- | The ARN of the report run.
[$sel:arn:Report'] :: Report -> Maybe Text

-- | The date and time this report run occurred.
[$sel:created:Report'] :: Report -> Maybe POSIX

-- | The name of the report that was run.
[$sel:name:Report'] :: Report -> Maybe Text

-- | A <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
[$sel:codeCoverageSummary:Report'] :: Report -> Maybe CodeCoverageReportSummary

-- | A <tt>TestReportSummary</tt> object that contains information about
--   this test report.
[$sel:testSummary:Report'] :: Report -> Maybe TestReportSummary

-- | The type of the report that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
[$sel:type':Report'] :: Report -> Maybe ReportType

-- | Information about where the raw data used to generate this report was
--   exported.
[$sel:exportConfig:Report'] :: Report -> Maybe ReportExportConfig

-- | Create a value of <a>Report</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroupArn:Report'</a>, <a>report_reportGroupArn</a> - The
--   ARN of the report group associated with this report.
--   
--   <a>$sel:status:Report'</a>, <a>report_status</a> - The status of this
--   report.
--   
--   <a>$sel:expired:Report'</a>, <a>report_expired</a> - The date and time
--   a report expires. A report expires 30 days after it is created. An
--   expired report is not available to view in CodeBuild.
--   
--   <a>$sel:executionId:Report'</a>, <a>report_executionId</a> - The ARN
--   of the build run that generated this report.
--   
--   <a>$sel:truncated:Report'</a>, <a>report_truncated</a> - A boolean
--   that specifies if this report run is truncated. The list of test cases
--   is truncated after the maximum number of test cases is reached.
--   
--   <a>$sel:arn:Report'</a>, <a>report_arn</a> - The ARN of the report
--   run.
--   
--   <a>$sel:created:Report'</a>, <a>report_created</a> - The date and time
--   this report run occurred.
--   
--   <a>$sel:name:Report'</a>, <a>report_name</a> - The name of the report
--   that was run.
--   
--   <a>$sel:codeCoverageSummary:Report'</a>,
--   <a>report_codeCoverageSummary</a> - A
--   <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
--   
--   <a>$sel:testSummary:Report'</a>, <a>report_testSummary</a> - A
--   <tt>TestReportSummary</tt> object that contains information about this
--   test report.
--   
--   <a>$sel:type':Report'</a>, <a>report_type</a> - The type of the report
--   that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
--   
--   <a>$sel:exportConfig:Report'</a>, <a>report_exportConfig</a> -
--   Information about where the raw data used to generate this report was
--   exported.
newReport :: Report

-- | The ARN of the report group associated with this report.
report_reportGroupArn :: Lens' Report (Maybe Text)

-- | The status of this report.
report_status :: Lens' Report (Maybe ReportStatusType)

-- | The date and time a report expires. A report expires 30 days after it
--   is created. An expired report is not available to view in CodeBuild.
report_expired :: Lens' Report (Maybe UTCTime)

-- | The ARN of the build run that generated this report.
report_executionId :: Lens' Report (Maybe Text)

-- | A boolean that specifies if this report run is truncated. The list of
--   test cases is truncated after the maximum number of test cases is
--   reached.
report_truncated :: Lens' Report (Maybe Bool)

-- | The ARN of the report run.
report_arn :: Lens' Report (Maybe Text)

-- | The date and time this report run occurred.
report_created :: Lens' Report (Maybe UTCTime)

-- | The name of the report that was run.
report_name :: Lens' Report (Maybe Text)

-- | A <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
report_codeCoverageSummary :: Lens' Report (Maybe CodeCoverageReportSummary)

-- | A <tt>TestReportSummary</tt> object that contains information about
--   this test report.
report_testSummary :: Lens' Report (Maybe TestReportSummary)

-- | The type of the report that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
report_type :: Lens' Report (Maybe ReportType)

-- | Information about where the raw data used to generate this report was
--   exported.
report_exportConfig :: Lens' Report (Maybe ReportExportConfig)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.Report.Report
instance GHC.Show.Show Amazonka.CodeBuild.Types.Report.Report
instance GHC.Read.Read Amazonka.CodeBuild.Types.Report.Report
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.Report.Report
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.Report.Report
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.Report.Report
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.Report.Report


module Amazonka.CodeBuild.Types.VpcConfig

-- | Information about the VPC configuration that CodeBuild accesses.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> VpcConfig

-- | A list of one or more security groups IDs in your Amazon VPC.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | The ID of the Amazon VPC.
[$sel:vpcId:VpcConfig'] :: VpcConfig -> Maybe Text

-- | A list of one or more subnet IDs in your Amazon VPC.
[$sel:subnets:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of one or more security
--   groups IDs in your Amazon VPC.
--   
--   <a>$sel:vpcId:VpcConfig'</a>, <a>vpcConfig_vpcId</a> - The ID of the
--   Amazon VPC.
--   
--   <a>$sel:subnets:VpcConfig'</a>, <a>vpcConfig_subnets</a> - A list of
--   one or more subnet IDs in your Amazon VPC.
newVpcConfig :: VpcConfig

-- | A list of one or more security groups IDs in your Amazon VPC.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The ID of the Amazon VPC.
vpcConfig_vpcId :: Lens' VpcConfig (Maybe Text)

-- | A list of one or more subnet IDs in your Amazon VPC.
vpcConfig_subnets :: Lens' VpcConfig (Maybe [Text])
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance GHC.Show.Show Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance GHC.Read.Read Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.VpcConfig.VpcConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.VpcConfig.VpcConfig


module Amazonka.CodeBuild.Types.BuildBatch

-- | Contains information about a batch build.
--   
--   <i>See:</i> <a>newBuildBatch</a> smart constructor.
data BuildBatch
BuildBatch' :: Maybe [BuildBatchPhase] -> Maybe [BuildArtifacts] -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe StatusType -> Maybe Text -> Maybe Integer -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe [BuildGroup] -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe LogsConfig -> Maybe Text -> Maybe Bool -> BuildBatch

-- | An array of <tt>BuildBatchPhase</tt> objects the specify the phases of
--   the batch build.
[$sel:phases:BuildBatch'] :: BuildBatch -> Maybe [BuildBatchPhase]

-- | An array of <tt>BuildArtifacts</tt> objects the define the build
--   artifacts for this batch build.
[$sel:secondaryArtifacts:BuildBatch'] :: BuildBatch -> Maybe [BuildArtifacts]

-- | Specifies the maximum amount of time, in minutes, that the build in a
--   batch must be completed in.
[$sel:buildTimeoutInMinutes:BuildBatch'] :: BuildBatch -> Maybe Int

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
[$sel:debugSessionEnabled:BuildBatch'] :: BuildBatch -> Maybe Bool

-- | The ARN of the batch build.
[$sel:arn:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The date and time that the batch build started.
[$sel:startTime:BuildBatch'] :: BuildBatch -> Maybe POSIX

-- | A <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
[$sel:artifacts:BuildBatch'] :: BuildBatch -> Maybe BuildArtifacts
[$sel:environment:BuildBatch'] :: BuildBatch -> Maybe ProjectEnvironment

-- | The entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
[$sel:initiator:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
[$sel:secondarySourceVersions:BuildBatch'] :: BuildBatch -> Maybe [ProjectSourceVersion]

-- | The status of the batch build.
[$sel:buildBatchStatus:BuildBatch'] :: BuildBatch -> Maybe StatusType

-- | The current phase of the batch build.
[$sel:currentPhase:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The number of the batch build. For each project, the
--   <tt>buildBatchNumber</tt> of its first batch build is <tt>1</tt>. The
--   <tt>buildBatchNumber</tt> of each subsequent batch build is
--   incremented by <tt>1</tt>. If a batch build is deleted, the
--   <tt>buildBatchNumber</tt> of other batch builds does not change.
[$sel:buildBatchNumber:BuildBatch'] :: BuildBatch -> Maybe Integer

-- | Specifies the amount of time, in minutes, that the batch build is
--   allowed to be queued before it times out.
[$sel:queuedTimeoutInMinutes:BuildBatch'] :: BuildBatch -> Maybe Int
[$sel:cache:BuildBatch'] :: BuildBatch -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects that define the sources for
--   the batch build.
[$sel:secondarySources:BuildBatch'] :: BuildBatch -> Maybe [ProjectSource]

-- | The identifier of the version of the source code to be built.
[$sel:sourceVersion:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The identifier of the resolved version of this batch build's source
--   code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
[$sel:resolvedSourceVersion:BuildBatch'] :: BuildBatch -> Maybe Text
[$sel:vpcConfig:BuildBatch'] :: BuildBatch -> Maybe VpcConfig

-- | The date and time that the batch build ended.
[$sel:endTime:BuildBatch'] :: BuildBatch -> Maybe POSIX

-- | The name of the batch build project.
[$sel:projectName:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
[$sel:buildGroups:BuildBatch'] :: BuildBatch -> Maybe [BuildGroup]
[$sel:source:BuildBatch'] :: BuildBatch -> Maybe ProjectSource

-- | The identifier of the batch build.
[$sel:id:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for the batch
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:BuildBatch'] :: BuildBatch -> Maybe [ProjectFileSystemLocation]
[$sel:buildBatchConfig:BuildBatch'] :: BuildBatch -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:BuildBatch'] :: BuildBatch -> Maybe Text
[$sel:logConfig:BuildBatch'] :: BuildBatch -> Maybe LogsConfig

-- | The name of a service role used for builds in the batch.
[$sel:serviceRole:BuildBatch'] :: BuildBatch -> Maybe Text

-- | Indicates if the batch build is complete.
[$sel:complete:BuildBatch'] :: BuildBatch -> Maybe Bool

-- | Create a value of <a>BuildBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:BuildBatch'</a>, <a>buildBatch_phases</a> - An array of
--   <tt>BuildBatchPhase</tt> objects the specify the phases of the batch
--   build.
--   
--   <a>$sel:secondaryArtifacts:BuildBatch'</a>,
--   <a>buildBatch_secondaryArtifacts</a> - An array of
--   <tt>BuildArtifacts</tt> objects the define the build artifacts for
--   this batch build.
--   
--   <a>$sel:buildTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_buildTimeoutInMinutes</a> - Specifies the maximum amount
--   of time, in minutes, that the build in a batch must be completed in.
--   
--   <a>$sel:debugSessionEnabled:BuildBatch'</a>,
--   <a>buildBatch_debugSessionEnabled</a> - Specifies if session debugging
--   is enabled for this batch build. For more information, see <a>Viewing
--   a running build in Session Manager</a>. Batch session debugging is not
--   supported for matrix batch builds.
--   
--   <a>$sel:arn:BuildBatch'</a>, <a>buildBatch_arn</a> - The ARN of the
--   batch build.
--   
--   <a>$sel:startTime:BuildBatch'</a>, <a>buildBatch_startTime</a> - The
--   date and time that the batch build started.
--   
--   <a>$sel:artifacts:BuildBatch'</a>, <a>buildBatch_artifacts</a> - A
--   <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
--   
--   <a>$sel:environment:BuildBatch'</a>, <a>buildBatch_environment</a> -
--   Undocumented member.
--   
--   <a>$sel:initiator:BuildBatch'</a>, <a>buildBatch_initiator</a> - The
--   entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:secondarySourceVersions:BuildBatch'</a>,
--   <a>buildBatch_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:buildBatchStatus:BuildBatch'</a>,
--   <a>buildBatch_buildBatchStatus</a> - The status of the batch build.
--   
--   <a>$sel:currentPhase:BuildBatch'</a>, <a>buildBatch_currentPhase</a> -
--   The current phase of the batch build.
--   
--   <a>$sel:buildBatchNumber:BuildBatch'</a>,
--   <a>buildBatch_buildBatchNumber</a> - The number of the batch build.
--   For each project, the <tt>buildBatchNumber</tt> of its first batch
--   build is <tt>1</tt>. The <tt>buildBatchNumber</tt> of each subsequent
--   batch build is incremented by <tt>1</tt>. If a batch build is deleted,
--   the <tt>buildBatchNumber</tt> of other batch builds does not change.
--   
--   <a>$sel:queuedTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_queuedTimeoutInMinutes</a> - Specifies the amount of
--   time, in minutes, that the batch build is allowed to be queued before
--   it times out.
--   
--   <a>$sel:cache:BuildBatch'</a>, <a>buildBatch_cache</a> - Undocumented
--   member.
--   
--   <a>$sel:secondarySources:BuildBatch'</a>,
--   <a>buildBatch_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects that define the sources for the batch
--   build.
--   
--   <a>$sel:sourceVersion:BuildBatch'</a>, <a>buildBatch_sourceVersion</a>
--   - The identifier of the version of the source code to be built.
--   
--   <a>$sel:resolvedSourceVersion:BuildBatch'</a>,
--   <a>buildBatch_resolvedSourceVersion</a> - The identifier of the
--   resolved version of this batch build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:BuildBatch'</a>, <a>buildBatch_vpcConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:endTime:BuildBatch'</a>, <a>buildBatch_endTime</a> - The date
--   and time that the batch build ended.
--   
--   <a>$sel:projectName:BuildBatch'</a>, <a>buildBatch_projectName</a> -
--   The name of the batch build project.
--   
--   <a>$sel:buildGroups:BuildBatch'</a>, <a>buildBatch_buildGroups</a> -
--   An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
--   
--   <a>$sel:source:BuildBatch'</a>, <a>buildBatch_source</a> -
--   Undocumented member.
--   
--   <a>$sel:id:BuildBatch'</a>, <a>buildBatch_id</a> - The identifier of
--   the batch build.
--   
--   <a>$sel:fileSystemLocations:BuildBatch'</a>,
--   <a>buildBatch_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for the batch build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:BuildBatch'</a>,
--   <a>buildBatch_buildBatchConfig</a> - Undocumented member.
--   
--   <a>$sel:encryptionKey:BuildBatch'</a>, <a>buildBatch_encryptionKey</a>
--   - The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:logConfig:BuildBatch'</a>, <a>buildBatch_logConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceRole:BuildBatch'</a>, <a>buildBatch_serviceRole</a> -
--   The name of a service role used for builds in the batch.
--   
--   <a>$sel:complete:BuildBatch'</a>, <a>buildBatch_complete</a> -
--   Indicates if the batch build is complete.
newBuildBatch :: BuildBatch

-- | An array of <tt>BuildBatchPhase</tt> objects the specify the phases of
--   the batch build.
buildBatch_phases :: Lens' BuildBatch (Maybe [BuildBatchPhase])

-- | An array of <tt>BuildArtifacts</tt> objects the define the build
--   artifacts for this batch build.
buildBatch_secondaryArtifacts :: Lens' BuildBatch (Maybe [BuildArtifacts])

-- | Specifies the maximum amount of time, in minutes, that the build in a
--   batch must be completed in.
buildBatch_buildTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
buildBatch_debugSessionEnabled :: Lens' BuildBatch (Maybe Bool)

-- | The ARN of the batch build.
buildBatch_arn :: Lens' BuildBatch (Maybe Text)

-- | The date and time that the batch build started.
buildBatch_startTime :: Lens' BuildBatch (Maybe UTCTime)

-- | A <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
buildBatch_artifacts :: Lens' BuildBatch (Maybe BuildArtifacts)

-- | Undocumented member.
buildBatch_environment :: Lens' BuildBatch (Maybe ProjectEnvironment)

-- | The entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
buildBatch_initiator :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
buildBatch_secondarySourceVersions :: Lens' BuildBatch (Maybe [ProjectSourceVersion])

-- | The status of the batch build.
buildBatch_buildBatchStatus :: Lens' BuildBatch (Maybe StatusType)

-- | The current phase of the batch build.
buildBatch_currentPhase :: Lens' BuildBatch (Maybe Text)

-- | The number of the batch build. For each project, the
--   <tt>buildBatchNumber</tt> of its first batch build is <tt>1</tt>. The
--   <tt>buildBatchNumber</tt> of each subsequent batch build is
--   incremented by <tt>1</tt>. If a batch build is deleted, the
--   <tt>buildBatchNumber</tt> of other batch builds does not change.
buildBatch_buildBatchNumber :: Lens' BuildBatch (Maybe Integer)

-- | Specifies the amount of time, in minutes, that the batch build is
--   allowed to be queued before it times out.
buildBatch_queuedTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Undocumented member.
buildBatch_cache :: Lens' BuildBatch (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects that define the sources for
--   the batch build.
buildBatch_secondarySources :: Lens' BuildBatch (Maybe [ProjectSource])

-- | The identifier of the version of the source code to be built.
buildBatch_sourceVersion :: Lens' BuildBatch (Maybe Text)

-- | The identifier of the resolved version of this batch build's source
--   code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
buildBatch_resolvedSourceVersion :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_vpcConfig :: Lens' BuildBatch (Maybe VpcConfig)

-- | The date and time that the batch build ended.
buildBatch_endTime :: Lens' BuildBatch (Maybe UTCTime)

-- | The name of the batch build project.
buildBatch_projectName :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
buildBatch_buildGroups :: Lens' BuildBatch (Maybe [BuildGroup])

-- | Undocumented member.
buildBatch_source :: Lens' BuildBatch (Maybe ProjectSource)

-- | The identifier of the batch build.
buildBatch_id :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for the batch
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
buildBatch_fileSystemLocations :: Lens' BuildBatch (Maybe [ProjectFileSystemLocation])

-- | Undocumented member.
buildBatch_buildBatchConfig :: Lens' BuildBatch (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
buildBatch_encryptionKey :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_logConfig :: Lens' BuildBatch (Maybe LogsConfig)

-- | The name of a service role used for builds in the batch.
buildBatch_serviceRole :: Lens' BuildBatch (Maybe Text)

-- | Indicates if the batch build is complete.
buildBatch_complete :: Lens' BuildBatch (Maybe Bool)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance GHC.Show.Show Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance GHC.Read.Read Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.BuildBatch.BuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.BuildBatch.BuildBatch


module Amazonka.CodeBuild.Types.Build

-- | Information about a build.
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe [BuildPhase] -> Maybe Bool -> Maybe [BuildArtifacts] -> Maybe Text -> Maybe [ExportedEnvironmentVariable] -> Maybe Integer -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe NetworkInterface -> Maybe [ProjectSourceVersion] -> Maybe Text -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe DebugSession -> Maybe Text -> Maybe Text -> Maybe LogsLocation -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe StatusType -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Build

-- | Information about all previous build phases that are complete and
--   information about any current build phase that is not yet complete.
[$sel:phases:Build'] :: Build -> Maybe [BuildPhase]

-- | Whether the build is complete. True if complete; otherwise, false.
[$sel:buildComplete:Build'] :: Build -> Maybe Bool

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifacts:Build'] :: Build -> Maybe [BuildArtifacts]

-- | The Amazon Resource Name (ARN) of the build.
[$sel:arn:Build'] :: Build -> Maybe Text

-- | A list of exported environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
[$sel:exportedEnvironmentVariables:Build'] :: Build -> Maybe [ExportedEnvironmentVariable]

-- | The number of the build. For each project, the <tt>buildNumber</tt> of
--   its first build is <tt>1</tt>. The <tt>buildNumber</tt> of each
--   subsequent build is incremented by <tt>1</tt>. If a build is deleted,
--   the <tt>buildNumber</tt> of other builds does not change.
[$sel:buildNumber:Build'] :: Build -> Maybe Integer

-- | When the build process started, expressed in Unix time format.
[$sel:startTime:Build'] :: Build -> Maybe POSIX

-- | Information about the output artifacts for the build.
[$sel:artifacts:Build'] :: Build -> Maybe BuildArtifacts

-- | Information about the build environment for this build.
[$sel:environment:Build'] :: Build -> Maybe ProjectEnvironment

-- | The entity that started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
[$sel:initiator:Build'] :: Build -> Maybe Text

-- | Describes a network interface.
[$sel:networkInterface:Build'] :: Build -> Maybe NetworkInterface

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
[$sel:secondarySourceVersions:Build'] :: Build -> Maybe [ProjectSourceVersion]

-- | The current build phase.
[$sel:currentPhase:Build'] :: Build -> Maybe Text

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:Build'] :: Build -> Maybe Int

-- | Information about the cache for the build.
[$sel:cache:Build'] :: Build -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:Build'] :: Build -> Maybe [ProjectSource]

-- | Contains information about the debug session for this build.
[$sel:debugSession:Build'] :: Build -> Maybe DebugSession

-- | Any version identifier for the version of the source code to be built.
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:Build'] :: Build -> Maybe Text

-- | The ARN of the batch build that this build is a member of, if
--   applicable.
[$sel:buildBatchArn:Build'] :: Build -> Maybe Text

-- | Information about the build's logs in CloudWatch Logs.
[$sel:logs:Build'] :: Build -> Maybe LogsLocation

-- | An identifier for the version of this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
[$sel:resolvedSourceVersion:Build'] :: Build -> Maybe Text

-- | If your CodeBuild project accesses resources in an Amazon VPC, you
--   provide this parameter that identifies the VPC ID and the list of
--   security group IDs and subnet IDs. The security groups and subnets
--   must belong to the same VPC. You must provide at least one security
--   group and one subnet ID.
[$sel:vpcConfig:Build'] :: Build -> Maybe VpcConfig

-- | When the build process ended, expressed in Unix time format.
[$sel:endTime:Build'] :: Build -> Maybe POSIX

-- | The name of the CodeBuild project.
[$sel:projectName:Build'] :: Build -> Maybe Text

-- | The current status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
[$sel:buildStatus:Build'] :: Build -> Maybe StatusType

-- | Information about the source code to be built.
[$sel:source:Build'] :: Build -> Maybe ProjectSource

-- | The unique ID for the build.
[$sel:id:Build'] :: Build -> Maybe Text

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:Build'] :: Build -> Maybe [ProjectFileSystemLocation]

-- | An array of the ARNs associated with this build's reports.
[$sel:reportArns:Build'] :: Build -> Maybe [Text]

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:Build'] :: Build -> Maybe Text

-- | The name of a service role used for this build.
[$sel:serviceRole:Build'] :: Build -> Maybe Text

-- | How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
[$sel:timeoutInMinutes:Build'] :: Build -> Maybe Int

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:Build'</a>, <a>build_phases</a> - Information about all
--   previous build phases that are complete and information about any
--   current build phase that is not yet complete.
--   
--   <a>$sel:buildComplete:Build'</a>, <a>build_buildComplete</a> - Whether
--   the build is complete. True if complete; otherwise, false.
--   
--   <a>$sel:secondaryArtifacts:Build'</a>, <a>build_secondaryArtifacts</a>
--   - An array of <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:arn:Build'</a>, <a>build_arn</a> - The Amazon Resource Name
--   (ARN) of the build.
--   
--   <a>$sel:exportedEnvironmentVariables:Build'</a>,
--   <a>build_exportedEnvironmentVariables</a> - A list of exported
--   environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   <a>$sel:buildNumber:Build'</a>, <a>build_buildNumber</a> - The number
--   of the build. For each project, the <tt>buildNumber</tt> of its first
--   build is <tt>1</tt>. The <tt>buildNumber</tt> of each subsequent build
--   is incremented by <tt>1</tt>. If a build is deleted, the
--   <tt>buildNumber</tt> of other builds does not change.
--   
--   <a>$sel:startTime:Build'</a>, <a>build_startTime</a> - When the build
--   process started, expressed in Unix time format.
--   
--   <a>$sel:artifacts:Build'</a>, <a>build_artifacts</a> - Information
--   about the output artifacts for the build.
--   
--   <a>$sel:environment:Build'</a>, <a>build_environment</a> - Information
--   about the build environment for this build.
--   
--   <a>$sel:initiator:Build'</a>, <a>build_initiator</a> - The entity that
--   started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:networkInterface:Build'</a>, <a>build_networkInterface</a> -
--   Describes a network interface.
--   
--   <a>$sel:secondarySourceVersions:Build'</a>,
--   <a>build_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:currentPhase:Build'</a>, <a>build_currentPhase</a> - The
--   current build phase.
--   
--   <a>$sel:queuedTimeoutInMinutes:Build'</a>,
--   <a>build_queuedTimeoutInMinutes</a> - The number of minutes a build is
--   allowed to be queued before it times out.
--   
--   <a>$sel:cache:Build'</a>, <a>build_cache</a> - Information about the
--   cache for the build.
--   
--   <a>$sel:secondarySources:Build'</a>, <a>build_secondarySources</a> -
--   An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:debugSession:Build'</a>, <a>build_debugSession</a> - Contains
--   information about the debug session for this build.
--   
--   <a>$sel:sourceVersion:Build'</a>, <a>build_sourceVersion</a> - Any
--   version identifier for the version of the source code to be built. If
--   <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildBatchArn:Build'</a>, <a>build_buildBatchArn</a> - The ARN
--   of the batch build that this build is a member of, if applicable.
--   
--   <a>$sel:logs:Build'</a>, <a>build_logs</a> - Information about the
--   build's logs in CloudWatch Logs.
--   
--   <a>$sel:resolvedSourceVersion:Build'</a>,
--   <a>build_resolvedSourceVersion</a> - An identifier for the version of
--   this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:Build'</a>, <a>build_vpcConfig</a> - If your
--   CodeBuild project accesses resources in an Amazon VPC, you provide
--   this parameter that identifies the VPC ID and the list of security
--   group IDs and subnet IDs. The security groups and subnets must belong
--   to the same VPC. You must provide at least one security group and one
--   subnet ID.
--   
--   <a>$sel:endTime:Build'</a>, <a>build_endTime</a> - When the build
--   process ended, expressed in Unix time format.
--   
--   <a>$sel:projectName:Build'</a>, <a>build_projectName</a> - The name of
--   the CodeBuild project.
--   
--   <a>$sel:buildStatus:Build'</a>, <a>build_buildStatus</a> - The current
--   status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
--   
--   <a>$sel:source:Build'</a>, <a>build_source</a> - Information about the
--   source code to be built.
--   
--   <a>$sel:id:Build'</a>, <a>build_id</a> - The unique ID for the build.
--   
--   <a>$sel:fileSystemLocations:Build'</a>,
--   <a>build_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:reportArns:Build'</a>, <a>build_reportArns</a> - An array of
--   the ARNs associated with this build's reports.
--   
--   <a>$sel:encryptionKey:Build'</a>, <a>build_encryptionKey</a> - The Key
--   Management Service customer master key (CMK) to be used for encrypting
--   the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:serviceRole:Build'</a>, <a>build_serviceRole</a> - The name of
--   a service role used for this build.
--   
--   <a>$sel:timeoutInMinutes:Build'</a>, <a>build_timeoutInMinutes</a> -
--   How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
newBuild :: Build

-- | Information about all previous build phases that are complete and
--   information about any current build phase that is not yet complete.
build_phases :: Lens' Build (Maybe [BuildPhase])

-- | Whether the build is complete. True if complete; otherwise, false.
build_buildComplete :: Lens' Build (Maybe Bool)

-- | An array of <tt>ProjectArtifacts</tt> objects.
build_secondaryArtifacts :: Lens' Build (Maybe [BuildArtifacts])

-- | The Amazon Resource Name (ARN) of the build.
build_arn :: Lens' Build (Maybe Text)

-- | A list of exported environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
build_exportedEnvironmentVariables :: Lens' Build (Maybe [ExportedEnvironmentVariable])

-- | The number of the build. For each project, the <tt>buildNumber</tt> of
--   its first build is <tt>1</tt>. The <tt>buildNumber</tt> of each
--   subsequent build is incremented by <tt>1</tt>. If a build is deleted,
--   the <tt>buildNumber</tt> of other builds does not change.
build_buildNumber :: Lens' Build (Maybe Integer)

-- | When the build process started, expressed in Unix time format.
build_startTime :: Lens' Build (Maybe UTCTime)

-- | Information about the output artifacts for the build.
build_artifacts :: Lens' Build (Maybe BuildArtifacts)

-- | Information about the build environment for this build.
build_environment :: Lens' Build (Maybe ProjectEnvironment)

-- | The entity that started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
build_initiator :: Lens' Build (Maybe Text)

-- | Describes a network interface.
build_networkInterface :: Lens' Build (Maybe NetworkInterface)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
build_secondarySourceVersions :: Lens' Build (Maybe [ProjectSourceVersion])

-- | The current build phase.
build_currentPhase :: Lens' Build (Maybe Text)

-- | The number of minutes a build is allowed to be queued before it times
--   out.
build_queuedTimeoutInMinutes :: Lens' Build (Maybe Int)

-- | Information about the cache for the build.
build_cache :: Lens' Build (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
build_secondarySources :: Lens' Build (Maybe [ProjectSource])

-- | Contains information about the debug session for this build.
build_debugSession :: Lens' Build (Maybe DebugSession)

-- | Any version identifier for the version of the source code to be built.
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
build_sourceVersion :: Lens' Build (Maybe Text)

-- | The ARN of the batch build that this build is a member of, if
--   applicable.
build_buildBatchArn :: Lens' Build (Maybe Text)

-- | Information about the build's logs in CloudWatch Logs.
build_logs :: Lens' Build (Maybe LogsLocation)

-- | An identifier for the version of this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
build_resolvedSourceVersion :: Lens' Build (Maybe Text)

-- | If your CodeBuild project accesses resources in an Amazon VPC, you
--   provide this parameter that identifies the VPC ID and the list of
--   security group IDs and subnet IDs. The security groups and subnets
--   must belong to the same VPC. You must provide at least one security
--   group and one subnet ID.
build_vpcConfig :: Lens' Build (Maybe VpcConfig)

-- | When the build process ended, expressed in Unix time format.
build_endTime :: Lens' Build (Maybe UTCTime)

-- | The name of the CodeBuild project.
build_projectName :: Lens' Build (Maybe Text)

-- | The current status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
build_buildStatus :: Lens' Build (Maybe StatusType)

-- | Information about the source code to be built.
build_source :: Lens' Build (Maybe ProjectSource)

-- | The unique ID for the build.
build_id :: Lens' Build (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
build_fileSystemLocations :: Lens' Build (Maybe [ProjectFileSystemLocation])

-- | An array of the ARNs associated with this build's reports.
build_reportArns :: Lens' Build (Maybe [Text])

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
build_encryptionKey :: Lens' Build (Maybe Text)

-- | The name of a service role used for this build.
build_serviceRole :: Lens' Build (Maybe Text)

-- | How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
build_timeoutInMinutes :: Lens' Build (Maybe Int)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.Build.Build
instance GHC.Show.Show Amazonka.CodeBuild.Types.Build.Build
instance GHC.Read.Read Amazonka.CodeBuild.Types.Build.Build
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.Build.Build
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.Build.Build
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.Build.Build
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.Build.Build


module Amazonka.CodeBuild.Types.WebhookBuildType
newtype WebhookBuildType
WebhookBuildType' :: Text -> WebhookBuildType
[fromWebhookBuildType] :: WebhookBuildType -> Text
pattern WebhookBuildType_BUILD :: WebhookBuildType
pattern WebhookBuildType_BUILD_BATCH :: WebhookBuildType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance GHC.Read.Read Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType
instance GHC.Show.Show Amazonka.CodeBuild.Types.WebhookBuildType.WebhookBuildType


module Amazonka.CodeBuild.Types.WebhookFilterType
newtype WebhookFilterType
WebhookFilterType' :: Text -> WebhookFilterType
[fromWebhookFilterType] :: WebhookFilterType -> Text
pattern WebhookFilterType_ACTOR_ACCOUNT_ID :: WebhookFilterType
pattern WebhookFilterType_BASE_REF :: WebhookFilterType
pattern WebhookFilterType_COMMIT_MESSAGE :: WebhookFilterType
pattern WebhookFilterType_EVENT :: WebhookFilterType
pattern WebhookFilterType_FILE_PATH :: WebhookFilterType
pattern WebhookFilterType_HEAD_REF :: WebhookFilterType
instance Amazonka.Data.XML.ToXML Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.XML.FromXML Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.Log.ToLog Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.Text.ToText Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Amazonka.Data.Text.FromText Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance GHC.Classes.Ord Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance GHC.Read.Read Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType
instance GHC.Show.Show Amazonka.CodeBuild.Types.WebhookFilterType.WebhookFilterType


module Amazonka.CodeBuild.Types.WebhookFilter

-- | A filter used to determine which webhooks trigger a build.
--   
--   <i>See:</i> <a>newWebhookFilter</a> smart constructor.
data WebhookFilter
WebhookFilter' :: Maybe Bool -> WebhookFilterType -> Text -> WebhookFilter

-- | Used to indicate that the <tt>pattern</tt> determines which webhook
--   events do not trigger a build. If true, then a webhook event that does
--   not match the <tt>pattern</tt> triggers a build. If false, then a
--   webhook event that matches the <tt>pattern</tt> triggers a build.
[$sel:excludeMatchedPattern:WebhookFilter'] :: WebhookFilter -> Maybe Bool

-- | The type of webhook filter. There are six webhook filter types:
--   <tt>EVENT</tt>, <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>,
--   <tt>BASE_REF</tt>, <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
[$sel:type':WebhookFilter'] :: WebhookFilter -> WebhookFilterType

-- | For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
[$sel:pattern':WebhookFilter'] :: WebhookFilter -> Text

-- | Create a value of <a>WebhookFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeMatchedPattern:WebhookFilter'</a>,
--   <a>webhookFilter_excludeMatchedPattern</a> - Used to indicate that the
--   <tt>pattern</tt> determines which webhook events do not trigger a
--   build. If true, then a webhook event that does not match the
--   <tt>pattern</tt> triggers a build. If false, then a webhook event that
--   matches the <tt>pattern</tt> triggers a build.
--   
--   <a>$sel:type':WebhookFilter'</a>, <a>webhookFilter_type</a> - The type
--   of webhook filter. There are six webhook filter types: <tt>EVENT</tt>,
--   <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>, <tt>BASE_REF</tt>,
--   <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
--   
--   <a>$sel:pattern':WebhookFilter'</a>, <a>webhookFilter_pattern</a> -
--   For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
newWebhookFilter :: WebhookFilterType -> Text -> WebhookFilter

-- | Used to indicate that the <tt>pattern</tt> determines which webhook
--   events do not trigger a build. If true, then a webhook event that does
--   not match the <tt>pattern</tt> triggers a build. If false, then a
--   webhook event that matches the <tt>pattern</tt> triggers a build.
webhookFilter_excludeMatchedPattern :: Lens' WebhookFilter (Maybe Bool)

-- | The type of webhook filter. There are six webhook filter types:
--   <tt>EVENT</tt>, <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>,
--   <tt>BASE_REF</tt>, <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
webhookFilter_type :: Lens' WebhookFilter WebhookFilterType

-- | For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
webhookFilter_pattern :: Lens' WebhookFilter Text
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance GHC.Show.Show Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance GHC.Read.Read Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.Types.WebhookFilter.WebhookFilter


module Amazonka.CodeBuild.Types.Webhook

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
--   
--   <i>See:</i> <a>newWebhook</a> smart constructor.
data Webhook
Webhook' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [[WebhookFilter]] -> Maybe Text -> Maybe WebhookBuildType -> Webhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
[$sel:branchFilter:Webhook'] :: Webhook -> Maybe Text

-- | A timestamp that indicates the last time a repository's secret token
--   was modified.
[$sel:lastModifiedSecret:Webhook'] :: Webhook -> Maybe POSIX

-- | The URL to the webhook.
[$sel:url:Webhook'] :: Webhook -> Maybe Text

-- | The secret token of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
[$sel:secret:Webhook'] :: Webhook -> Maybe Text

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
[$sel:filterGroups:Webhook'] :: Webhook -> Maybe [[WebhookFilter]]

-- | The CodeBuild endpoint where webhook events are sent.
[$sel:payloadUrl:Webhook'] :: Webhook -> Maybe Text

-- | Specifies the type of build this webhook will trigger.
[$sel:buildType:Webhook'] :: Webhook -> Maybe WebhookBuildType

-- | Create a value of <a>Webhook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:Webhook'</a>, <a>webhook_branchFilter</a> - A
--   regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:lastModifiedSecret:Webhook'</a>,
--   <a>webhook_lastModifiedSecret</a> - A timestamp that indicates the
--   last time a repository's secret token was modified.
--   
--   <a>$sel:url:Webhook'</a>, <a>webhook_url</a> - The URL to the webhook.
--   
--   <a>$sel:secret:Webhook'</a>, <a>webhook_secret</a> - The secret token
--   of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
--   
--   <a>$sel:filterGroups:Webhook'</a>, <a>webhook_filterGroups</a> - An
--   array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
--   
--   <a>$sel:payloadUrl:Webhook'</a>, <a>webhook_payloadUrl</a> - The
--   CodeBuild endpoint where webhook events are sent.
--   
--   <a>$sel:buildType:Webhook'</a>, <a>webhook_buildType</a> - Specifies
--   the type of build this webhook will trigger.
newWebhook :: Webhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
webhook_branchFilter :: Lens' Webhook (Maybe Text)

-- | A timestamp that indicates the last time a repository's secret token
--   was modified.
webhook_lastModifiedSecret :: Lens' Webhook (Maybe UTCTime)

-- | The URL to the webhook.
webhook_url :: Lens' Webhook (Maybe Text)

-- | The secret token of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
webhook_secret :: Lens' Webhook (Maybe Text)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
webhook_filterGroups :: Lens' Webhook (Maybe [[WebhookFilter]])

-- | The CodeBuild endpoint where webhook events are sent.
webhook_payloadUrl :: Lens' Webhook (Maybe Text)

-- | Specifies the type of build this webhook will trigger.
webhook_buildType :: Lens' Webhook (Maybe WebhookBuildType)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.Webhook.Webhook
instance GHC.Show.Show Amazonka.CodeBuild.Types.Webhook.Webhook
instance GHC.Read.Read Amazonka.CodeBuild.Types.Webhook.Webhook
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.Webhook.Webhook
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.Webhook.Webhook
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.Webhook.Webhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.Webhook.Webhook


module Amazonka.CodeBuild.Types.Project

-- | Information about a build project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe [ProjectArtifacts] -> Maybe Text -> Maybe Text -> Maybe ProjectArtifacts -> Maybe ProjectEnvironment -> Maybe POSIX -> Maybe Int -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe Text -> Maybe ProjectSource -> Maybe ProjectBadge -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe POSIX -> Maybe ProjectVisibilityType -> Maybe Webhook -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Project

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifacts:Project'] :: Project -> Maybe [ProjectArtifacts]

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
[$sel:resourceAccessRole:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) of the build project.
[$sel:arn:Project'] :: Project -> Maybe Text

-- | Information about the build output artifacts for the build project.
[$sel:artifacts:Project'] :: Project -> Maybe ProjectArtifacts

-- | Information about the build environment for this build project.
[$sel:environment:Project'] :: Project -> Maybe ProjectEnvironment

-- | When the build project was created, expressed in Unix time format.
[$sel:created:Project'] :: Project -> Maybe POSIX

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
[$sel:concurrentBuildLimit:Project'] :: Project -> Maybe Int

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
[$sel:secondarySourceVersions:Project'] :: Project -> Maybe [ProjectSourceVersion]

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:Project'] :: Project -> Maybe Natural

-- | Information about the cache for the build project.
[$sel:cache:Project'] :: Project -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:Project'] :: Project -> Maybe [ProjectSource]

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:Project'] :: Project -> Maybe Text

-- | The name of the build project.
[$sel:name:Project'] :: Project -> Maybe Text

-- | Information about the VPC configuration that CodeBuild accesses.
[$sel:vpcConfig:Project'] :: Project -> Maybe VpcConfig

-- | Contains the project identifier used with the public build APIs.
[$sel:publicProjectAlias:Project'] :: Project -> Maybe Text

-- | Information about the build input source code for this build project.
[$sel:source:Project'] :: Project -> Maybe ProjectSource

-- | Information about the build badge for the build project.
[$sel:badge:Project'] :: Project -> Maybe ProjectBadge

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
[$sel:logsConfig:Project'] :: Project -> Maybe LogsConfig

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:Project'] :: Project -> Maybe [ProjectFileSystemLocation]

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
[$sel:buildBatchConfig:Project'] :: Project -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
[$sel:encryptionKey:Project'] :: Project -> Maybe Text

-- | When the build project's settings were last modified, expressed in
--   Unix time format.
[$sel:lastModified:Project'] :: Project -> Maybe POSIX
[$sel:projectVisibility:Project'] :: Project -> Maybe ProjectVisibilityType

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
[$sel:webhook:Project'] :: Project -> Maybe Webhook

-- | A description that makes the build project easy to identify.
[$sel:description:Project'] :: Project -> Maybe Text

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
[$sel:serviceRole:Project'] :: Project -> Maybe Text

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
[$sel:tags:Project'] :: Project -> Maybe [Tag]

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
[$sel:timeoutInMinutes:Project'] :: Project -> Maybe Natural

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:Project'</a>,
--   <a>project_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:resourceAccessRole:Project'</a>,
--   <a>project_resourceAccessRole</a> - The ARN of the IAM role that
--   enables CodeBuild to access the CloudWatch Logs and Amazon S3
--   artifacts for the project's builds.
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The Amazon Resource
--   Name (ARN) of the build project.
--   
--   <a>$sel:artifacts:Project'</a>, <a>project_artifacts</a> - Information
--   about the build output artifacts for the build project.
--   
--   <a>$sel:environment:Project'</a>, <a>project_environment</a> -
--   Information about the build environment for this build project.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the build
--   project was created, expressed in Unix time format.
--   
--   <a>$sel:concurrentBuildLimit:Project'</a>,
--   <a>project_concurrentBuildLimit</a> - The maximum number of concurrent
--   builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   <a>$sel:secondarySourceVersions:Project'</a>,
--   <a>project_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
--   
--   <a>$sel:queuedTimeoutInMinutes:Project'</a>,
--   <a>project_queuedTimeoutInMinutes</a> - The number of minutes a build
--   is allowed to be queued before it times out.
--   
--   <a>$sel:cache:Project'</a>, <a>project_cache</a> - Information about
--   the cache for the build project.
--   
--   <a>$sel:secondarySources:Project'</a>, <a>project_secondarySources</a>
--   - An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:Project'</a>, <a>project_sourceVersion</a> - A
--   version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The name of the build
--   project.
--   
--   <a>$sel:vpcConfig:Project'</a>, <a>project_vpcConfig</a> - Information
--   about the VPC configuration that CodeBuild accesses.
--   
--   <a>$sel:publicProjectAlias:Project'</a>,
--   <a>project_publicProjectAlias</a> - Contains the project identifier
--   used with the public build APIs.
--   
--   <a>$sel:source:Project'</a>, <a>project_source</a> - Information about
--   the build input source code for this build project.
--   
--   <a>$sel:badge:Project'</a>, <a>project_badge</a> - Information about
--   the build badge for the build project.
--   
--   <a>$sel:logsConfig:Project'</a>, <a>project_logsConfig</a> -
--   Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:Project'</a>,
--   <a>project_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:Project'</a>, <a>project_buildBatchConfig</a>
--   - A ProjectBuildBatchConfig object that defines the batch build
--   options for the project.
--   
--   <a>$sel:encryptionKey:Project'</a>, <a>project_encryptionKey</a> - The
--   Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
--   
--   <a>$sel:lastModified:Project'</a>, <a>project_lastModified</a> - When
--   the build project's settings were last modified, expressed in Unix
--   time format.
--   
--   <a>$sel:projectVisibility:Project'</a>,
--   <a>project_projectVisibility</a> - Undocumented member.
--   
--   <a>$sel:webhook:Project'</a>, <a>project_webhook</a> - Information
--   about a webhook that connects repository events to a build project in
--   CodeBuild.
--   
--   <a>$sel:description:Project'</a>, <a>project_description</a> - A
--   description that makes the build project easy to identify.
--   
--   <a>$sel:serviceRole:Project'</a>, <a>project_serviceRole</a> - The ARN
--   of the IAM role that enables CodeBuild to interact with dependent
--   Amazon Web Services services on behalf of the Amazon Web Services
--   account.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - A list of tag key and
--   value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:Project'</a>, <a>project_timeoutInMinutes</a>
--   - How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
newProject :: Project

-- | An array of <tt>ProjectArtifacts</tt> objects.
project_secondaryArtifacts :: Lens' Project (Maybe [ProjectArtifacts])

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
project_resourceAccessRole :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
project_arn :: Lens' Project (Maybe Text)

-- | Information about the build output artifacts for the build project.
project_artifacts :: Lens' Project (Maybe ProjectArtifacts)

-- | Information about the build environment for this build project.
project_environment :: Lens' Project (Maybe ProjectEnvironment)

-- | When the build project was created, expressed in Unix time format.
project_created :: Lens' Project (Maybe UTCTime)

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
project_concurrentBuildLimit :: Lens' Project (Maybe Int)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
project_secondarySourceVersions :: Lens' Project (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
project_queuedTimeoutInMinutes :: Lens' Project (Maybe Natural)

-- | Information about the cache for the build project.
project_cache :: Lens' Project (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
project_secondarySources :: Lens' Project (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
project_sourceVersion :: Lens' Project (Maybe Text)

-- | The name of the build project.
project_name :: Lens' Project (Maybe Text)

-- | Information about the VPC configuration that CodeBuild accesses.
project_vpcConfig :: Lens' Project (Maybe VpcConfig)

-- | Contains the project identifier used with the public build APIs.
project_publicProjectAlias :: Lens' Project (Maybe Text)

-- | Information about the build input source code for this build project.
project_source :: Lens' Project (Maybe ProjectSource)

-- | Information about the build badge for the build project.
project_badge :: Lens' Project (Maybe ProjectBadge)

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
project_logsConfig :: Lens' Project (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
project_fileSystemLocations :: Lens' Project (Maybe [ProjectFileSystemLocation])

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
project_buildBatchConfig :: Lens' Project (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
project_encryptionKey :: Lens' Project (Maybe Text)

-- | When the build project's settings were last modified, expressed in
--   Unix time format.
project_lastModified :: Lens' Project (Maybe UTCTime)

-- | Undocumented member.
project_projectVisibility :: Lens' Project (Maybe ProjectVisibilityType)

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
project_webhook :: Lens' Project (Maybe Webhook)

-- | A description that makes the build project easy to identify.
project_description :: Lens' Project (Maybe Text)

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
project_serviceRole :: Lens' Project (Maybe Text)

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
project_tags :: Lens' Project (Maybe [Tag])

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
project_timeoutInMinutes :: Lens' Project (Maybe Natural)
instance GHC.Generics.Generic Amazonka.CodeBuild.Types.Project.Project
instance GHC.Show.Show Amazonka.CodeBuild.Types.Project.Project
instance GHC.Read.Read Amazonka.CodeBuild.Types.Project.Project
instance GHC.Classes.Eq Amazonka.CodeBuild.Types.Project.Project
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeBuild.Types.Project.Project
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.Types.Project.Project
instance Control.DeepSeq.NFData Amazonka.CodeBuild.Types.Project.Project


module Amazonka.CodeBuild.Types

-- | API version <tt>2016-10-06</tt> of the Amazon CodeBuild SDK
--   configuration.
defaultService :: Service

-- | The specified Amazon Web Services resource cannot be created, because
--   an Amazon Web Services resource with the same settings already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a problem with the underlying OAuth provider.
_OAuthProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An Amazon Web Services service limit was exceeded for the calling
--   Amazon Web Services account.
_AccountLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input value that was provided is not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Web Services resource cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ArtifactNamespace
ArtifactNamespace' :: Text -> ArtifactNamespace
[fromArtifactNamespace] :: ArtifactNamespace -> Text
pattern ArtifactNamespace_BUILD_ID :: ArtifactNamespace
pattern ArtifactNamespace_NONE :: ArtifactNamespace
newtype ArtifactPackaging
ArtifactPackaging' :: Text -> ArtifactPackaging
[fromArtifactPackaging] :: ArtifactPackaging -> Text
pattern ArtifactPackaging_NONE :: ArtifactPackaging
pattern ArtifactPackaging_ZIP :: ArtifactPackaging
newtype ArtifactsType
ArtifactsType' :: Text -> ArtifactsType
[fromArtifactsType] :: ArtifactsType -> Text
pattern ArtifactsType_CODEPIPELINE :: ArtifactsType
pattern ArtifactsType_NO_ARTIFACTS :: ArtifactsType
pattern ArtifactsType_S3 :: ArtifactsType
newtype AuthType
AuthType' :: Text -> AuthType
[fromAuthType] :: AuthType -> Text
pattern AuthType_BASIC_AUTH :: AuthType
pattern AuthType_OAUTH :: AuthType
pattern AuthType_PERSONAL_ACCESS_TOKEN :: AuthType
newtype BatchReportModeType
BatchReportModeType' :: Text -> BatchReportModeType
[fromBatchReportModeType] :: BatchReportModeType -> Text
pattern BatchReportModeType_REPORT_AGGREGATED_BATCH :: BatchReportModeType
pattern BatchReportModeType_REPORT_INDIVIDUAL_BUILDS :: BatchReportModeType

-- | Specifies the bucket owner's access for objects that another account
--   uploads to their Amazon S3 bucket. By default, only the account that
--   uploads the objects to the bucket has access to these objects. This
--   property allows you to give the bucket owner access to these objects.
--   
--   To use this property, your CodeBuild service role must have the
--   <tt>s3:PutBucketAcl</tt> permission. This permission allows CodeBuild
--   to modify the access control list for the bucket.
--   
--   This property can be one of the following values:
--   
--   <ul>
--   <li><i>NONE</i> The bucket owner does not have access to the objects.
--   This is the default.</li>
--   <li><i>READ_ONLY</i> The bucket owner has read-only access to the
--   objects. The uploading account retains ownership of the objects.</li>
--   <li><i>FULL</i> The bucket owner has full access to the objects.
--   Object ownership is determined by the following criteria:<ul><li>If
--   the bucket is configured with the <b>Bucket owner preferred</b>
--   setting, the bucket owner owns the objects. The uploading account will
--   have object access as specified by the bucket's
--   policy.</li><li>Otherwise, the uploading account retains ownership of
--   the objects.</li></ul>For more information about Amazon S3 object
--   ownership, see <a>Controlling ownership of uploaded objects using S3
--   Object Ownership</a> in the <i>Amazon Simple Storage Service User
--   Guide</i>.</li>
--   </ul>
newtype BucketOwnerAccess
BucketOwnerAccess' :: Text -> BucketOwnerAccess
[fromBucketOwnerAccess] :: BucketOwnerAccess -> Text
pattern BucketOwnerAccess_FULL :: BucketOwnerAccess
pattern BucketOwnerAccess_NONE :: BucketOwnerAccess
pattern BucketOwnerAccess_READ_ONLY :: BucketOwnerAccess
newtype BuildBatchPhaseType
BuildBatchPhaseType' :: Text -> BuildBatchPhaseType
[fromBuildBatchPhaseType] :: BuildBatchPhaseType -> Text
pattern BuildBatchPhaseType_COMBINE_ARTIFACTS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_DOWNLOAD_BATCHSPEC :: BuildBatchPhaseType
pattern BuildBatchPhaseType_FAILED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_IN_PROGRESS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_STOPPED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUBMITTED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUCCEEDED :: BuildBatchPhaseType
newtype BuildPhaseType
BuildPhaseType' :: Text -> BuildPhaseType
[fromBuildPhaseType] :: BuildPhaseType -> Text
pattern BuildPhaseType_BUILD :: BuildPhaseType
pattern BuildPhaseType_COMPLETED :: BuildPhaseType
pattern BuildPhaseType_DOWNLOAD_SOURCE :: BuildPhaseType
pattern BuildPhaseType_FINALIZING :: BuildPhaseType
pattern BuildPhaseType_INSTALL :: BuildPhaseType
pattern BuildPhaseType_POST_BUILD :: BuildPhaseType
pattern BuildPhaseType_PRE_BUILD :: BuildPhaseType
pattern BuildPhaseType_PROVISIONING :: BuildPhaseType
pattern BuildPhaseType_QUEUED :: BuildPhaseType
pattern BuildPhaseType_SUBMITTED :: BuildPhaseType
pattern BuildPhaseType_UPLOAD_ARTIFACTS :: BuildPhaseType
newtype CacheMode
CacheMode' :: Text -> CacheMode
[fromCacheMode] :: CacheMode -> Text
pattern CacheMode_LOCAL_CUSTOM_CACHE :: CacheMode
pattern CacheMode_LOCAL_DOCKER_LAYER_CACHE :: CacheMode
pattern CacheMode_LOCAL_SOURCE_CACHE :: CacheMode
newtype CacheType
CacheType' :: Text -> CacheType
[fromCacheType] :: CacheType -> Text
pattern CacheType_LOCAL :: CacheType
pattern CacheType_NO_CACHE :: CacheType
pattern CacheType_S3 :: CacheType
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_BUILD_GENERAL1_2XLARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_LARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_MEDIUM :: ComputeType
pattern ComputeType_BUILD_GENERAL1_SMALL :: ComputeType
newtype CredentialProviderType
CredentialProviderType' :: Text -> CredentialProviderType
[fromCredentialProviderType] :: CredentialProviderType -> Text
pattern CredentialProviderType_SECRETS_MANAGER :: CredentialProviderType
newtype EnvironmentType
EnvironmentType' :: Text -> EnvironmentType
[fromEnvironmentType] :: EnvironmentType -> Text
pattern EnvironmentType_ARM_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_GPU_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_SERVER_2019_CONTAINER :: EnvironmentType
newtype EnvironmentVariableType
EnvironmentVariableType' :: Text -> EnvironmentVariableType
[fromEnvironmentVariableType] :: EnvironmentVariableType -> Text
pattern EnvironmentVariableType_PARAMETER_STORE :: EnvironmentVariableType
pattern EnvironmentVariableType_PLAINTEXT :: EnvironmentVariableType
pattern EnvironmentVariableType_SECRETS_MANAGER :: EnvironmentVariableType
newtype FileSystemType
FileSystemType' :: Text -> FileSystemType
[fromFileSystemType] :: FileSystemType -> Text
pattern FileSystemType_EFS :: FileSystemType
newtype ImagePullCredentialsType
ImagePullCredentialsType' :: Text -> ImagePullCredentialsType
[fromImagePullCredentialsType] :: ImagePullCredentialsType -> Text
pattern ImagePullCredentialsType_CODEBUILD :: ImagePullCredentialsType
pattern ImagePullCredentialsType_SERVICE_ROLE :: ImagePullCredentialsType
newtype LanguageType
LanguageType' :: Text -> LanguageType
[fromLanguageType] :: LanguageType -> Text
pattern LanguageType_ANDROID :: LanguageType
pattern LanguageType_BASE :: LanguageType
pattern LanguageType_DOCKER :: LanguageType
pattern LanguageType_DOTNET :: LanguageType
pattern LanguageType_GOLANG :: LanguageType
pattern LanguageType_JAVA :: LanguageType
pattern LanguageType_NODE_JS :: LanguageType
pattern LanguageType_PHP :: LanguageType
pattern LanguageType_PYTHON :: LanguageType
pattern LanguageType_RUBY :: LanguageType
newtype LogsConfigStatusType
LogsConfigStatusType' :: Text -> LogsConfigStatusType
[fromLogsConfigStatusType] :: LogsConfigStatusType -> Text
pattern LogsConfigStatusType_DISABLED :: LogsConfigStatusType
pattern LogsConfigStatusType_ENABLED :: LogsConfigStatusType
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_AMAZON_LINUX :: PlatformType
pattern PlatformType_DEBIAN :: PlatformType
pattern PlatformType_UBUNTU :: PlatformType
pattern PlatformType_WINDOWS_SERVER :: PlatformType
newtype ProjectSortByType
ProjectSortByType' :: Text -> ProjectSortByType
[fromProjectSortByType] :: ProjectSortByType -> Text
pattern ProjectSortByType_CREATED_TIME :: ProjectSortByType
pattern ProjectSortByType_LAST_MODIFIED_TIME :: ProjectSortByType
pattern ProjectSortByType_NAME :: ProjectSortByType

-- | Specifies the visibility of the project's builds. Possible values are:
--   
--   <ul>
--   <li><i>PUBLIC_READ</i> The project builds are visible to the
--   public.</li>
--   <li><i>PRIVATE</i> The project builds are not visible to the
--   public.</li>
--   </ul>
newtype ProjectVisibilityType
ProjectVisibilityType' :: Text -> ProjectVisibilityType
[fromProjectVisibilityType] :: ProjectVisibilityType -> Text
pattern ProjectVisibilityType_PRIVATE :: ProjectVisibilityType
pattern ProjectVisibilityType_PUBLIC_READ :: ProjectVisibilityType
newtype ReportCodeCoverageSortByType
ReportCodeCoverageSortByType' :: Text -> ReportCodeCoverageSortByType
[fromReportCodeCoverageSortByType] :: ReportCodeCoverageSortByType -> Text
pattern ReportCodeCoverageSortByType_FILE_PATH :: ReportCodeCoverageSortByType
pattern ReportCodeCoverageSortByType_LINE_COVERAGE_PERCENTAGE :: ReportCodeCoverageSortByType
newtype ReportExportConfigType
ReportExportConfigType' :: Text -> ReportExportConfigType
[fromReportExportConfigType] :: ReportExportConfigType -> Text
pattern ReportExportConfigType_NO_EXPORT :: ReportExportConfigType
pattern ReportExportConfigType_S3 :: ReportExportConfigType
newtype ReportGroupSortByType
ReportGroupSortByType' :: Text -> ReportGroupSortByType
[fromReportGroupSortByType] :: ReportGroupSortByType -> Text
pattern ReportGroupSortByType_CREATED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_LAST_MODIFIED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_NAME :: ReportGroupSortByType
newtype ReportGroupStatusType
ReportGroupStatusType' :: Text -> ReportGroupStatusType
[fromReportGroupStatusType] :: ReportGroupStatusType -> Text
pattern ReportGroupStatusType_ACTIVE :: ReportGroupStatusType
pattern ReportGroupStatusType_DELETING :: ReportGroupStatusType
newtype ReportGroupTrendFieldType
ReportGroupTrendFieldType' :: Text -> ReportGroupTrendFieldType
[fromReportGroupTrendFieldType] :: ReportGroupTrendFieldType -> Text
pattern ReportGroupTrendFieldType_BRANCHES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCHES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCH_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_DURATION :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINE_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_PASS_RATE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_TOTAL :: ReportGroupTrendFieldType
newtype ReportPackagingType
ReportPackagingType' :: Text -> ReportPackagingType
[fromReportPackagingType] :: ReportPackagingType -> Text
pattern ReportPackagingType_NONE :: ReportPackagingType
pattern ReportPackagingType_ZIP :: ReportPackagingType
newtype ReportStatusType
ReportStatusType' :: Text -> ReportStatusType
[fromReportStatusType] :: ReportStatusType -> Text
pattern ReportStatusType_DELETING :: ReportStatusType
pattern ReportStatusType_FAILED :: ReportStatusType
pattern ReportStatusType_GENERATING :: ReportStatusType
pattern ReportStatusType_INCOMPLETE :: ReportStatusType
pattern ReportStatusType_SUCCEEDED :: ReportStatusType
newtype ReportType
ReportType' :: Text -> ReportType
[fromReportType] :: ReportType -> Text
pattern ReportType_CODE_COVERAGE :: ReportType
pattern ReportType_TEST :: ReportType
newtype RetryBuildBatchType
RetryBuildBatchType' :: Text -> RetryBuildBatchType
[fromRetryBuildBatchType] :: RetryBuildBatchType -> Text
pattern RetryBuildBatchType_RETRY_ALL_BUILDS :: RetryBuildBatchType
pattern RetryBuildBatchType_RETRY_FAILED_BUILDS :: RetryBuildBatchType
newtype ServerType
ServerType' :: Text -> ServerType
[fromServerType] :: ServerType -> Text
pattern ServerType_BITBUCKET :: ServerType
pattern ServerType_GITHUB :: ServerType
pattern ServerType_GITHUB_ENTERPRISE :: ServerType
newtype SharedResourceSortByType
SharedResourceSortByType' :: Text -> SharedResourceSortByType
[fromSharedResourceSortByType] :: SharedResourceSortByType -> Text
pattern SharedResourceSortByType_ARN :: SharedResourceSortByType
pattern SharedResourceSortByType_MODIFIED_TIME :: SharedResourceSortByType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_ASCENDING :: SortOrderType
pattern SortOrderType_DESCENDING :: SortOrderType
newtype SourceAuthType
SourceAuthType' :: Text -> SourceAuthType
[fromSourceAuthType] :: SourceAuthType -> Text
pattern SourceAuthType_OAUTH :: SourceAuthType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_BITBUCKET :: SourceType
pattern SourceType_CODECOMMIT :: SourceType
pattern SourceType_CODEPIPELINE :: SourceType
pattern SourceType_GITHUB :: SourceType
pattern SourceType_GITHUB_ENTERPRISE :: SourceType
pattern SourceType_NO_SOURCE :: SourceType
pattern SourceType_S3 :: SourceType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_FAILED :: StatusType
pattern StatusType_FAULT :: StatusType
pattern StatusType_IN_PROGRESS :: StatusType
pattern StatusType_STOPPED :: StatusType
pattern StatusType_SUCCEEDED :: StatusType
pattern StatusType_TIMED_OUT :: StatusType
newtype WebhookBuildType
WebhookBuildType' :: Text -> WebhookBuildType
[fromWebhookBuildType] :: WebhookBuildType -> Text
pattern WebhookBuildType_BUILD :: WebhookBuildType
pattern WebhookBuildType_BUILD_BATCH :: WebhookBuildType
newtype WebhookFilterType
WebhookFilterType' :: Text -> WebhookFilterType
[fromWebhookFilterType] :: WebhookFilterType -> Text
pattern WebhookFilterType_ACTOR_ACCOUNT_ID :: WebhookFilterType
pattern WebhookFilterType_BASE_REF :: WebhookFilterType
pattern WebhookFilterType_COMMIT_MESSAGE :: WebhookFilterType
pattern WebhookFilterType_EVENT :: WebhookFilterType
pattern WebhookFilterType_FILE_PATH :: WebhookFilterType
pattern WebhookFilterType_HEAD_REF :: WebhookFilterType

-- | Specifies restrictions for the batch build.
--   
--   <i>See:</i> <a>newBatchRestrictions</a> smart constructor.
data BatchRestrictions
BatchRestrictions' :: Maybe Int -> Maybe [Text] -> BatchRestrictions

-- | Specifies the maximum number of builds allowed.
[$sel:maximumBuildsAllowed:BatchRestrictions'] :: BatchRestrictions -> Maybe Int

-- | An array of strings that specify the compute types that are allowed
--   for the batch build. See <a>Build environment compute types</a> in the
--   <i>CodeBuild User Guide</i> for these values.
[$sel:computeTypesAllowed:BatchRestrictions'] :: BatchRestrictions -> Maybe [Text]

-- | Create a value of <a>BatchRestrictions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumBuildsAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_maximumBuildsAllowed</a> - Specifies the maximum
--   number of builds allowed.
--   
--   <a>$sel:computeTypesAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_computeTypesAllowed</a> - An array of strings
--   that specify the compute types that are allowed for the batch build.
--   See <a>Build environment compute types</a> in the <i>CodeBuild User
--   Guide</i> for these values.
newBatchRestrictions :: BatchRestrictions

-- | Specifies the maximum number of builds allowed.
batchRestrictions_maximumBuildsAllowed :: Lens' BatchRestrictions (Maybe Int)

-- | An array of strings that specify the compute types that are allowed
--   for the batch build. See <a>Build environment compute types</a> in the
--   <i>CodeBuild User Guide</i> for these values.
batchRestrictions_computeTypesAllowed :: Lens' BatchRestrictions (Maybe [Text])

-- | Information about a build.
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe [BuildPhase] -> Maybe Bool -> Maybe [BuildArtifacts] -> Maybe Text -> Maybe [ExportedEnvironmentVariable] -> Maybe Integer -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe NetworkInterface -> Maybe [ProjectSourceVersion] -> Maybe Text -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe DebugSession -> Maybe Text -> Maybe Text -> Maybe LogsLocation -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe StatusType -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Build

-- | Information about all previous build phases that are complete and
--   information about any current build phase that is not yet complete.
[$sel:phases:Build'] :: Build -> Maybe [BuildPhase]

-- | Whether the build is complete. True if complete; otherwise, false.
[$sel:buildComplete:Build'] :: Build -> Maybe Bool

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifacts:Build'] :: Build -> Maybe [BuildArtifacts]

-- | The Amazon Resource Name (ARN) of the build.
[$sel:arn:Build'] :: Build -> Maybe Text

-- | A list of exported environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
[$sel:exportedEnvironmentVariables:Build'] :: Build -> Maybe [ExportedEnvironmentVariable]

-- | The number of the build. For each project, the <tt>buildNumber</tt> of
--   its first build is <tt>1</tt>. The <tt>buildNumber</tt> of each
--   subsequent build is incremented by <tt>1</tt>. If a build is deleted,
--   the <tt>buildNumber</tt> of other builds does not change.
[$sel:buildNumber:Build'] :: Build -> Maybe Integer

-- | When the build process started, expressed in Unix time format.
[$sel:startTime:Build'] :: Build -> Maybe POSIX

-- | Information about the output artifacts for the build.
[$sel:artifacts:Build'] :: Build -> Maybe BuildArtifacts

-- | Information about the build environment for this build.
[$sel:environment:Build'] :: Build -> Maybe ProjectEnvironment

-- | The entity that started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
[$sel:initiator:Build'] :: Build -> Maybe Text

-- | Describes a network interface.
[$sel:networkInterface:Build'] :: Build -> Maybe NetworkInterface

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
[$sel:secondarySourceVersions:Build'] :: Build -> Maybe [ProjectSourceVersion]

-- | The current build phase.
[$sel:currentPhase:Build'] :: Build -> Maybe Text

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:Build'] :: Build -> Maybe Int

-- | Information about the cache for the build.
[$sel:cache:Build'] :: Build -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:Build'] :: Build -> Maybe [ProjectSource]

-- | Contains information about the debug session for this build.
[$sel:debugSession:Build'] :: Build -> Maybe DebugSession

-- | Any version identifier for the version of the source code to be built.
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:Build'] :: Build -> Maybe Text

-- | The ARN of the batch build that this build is a member of, if
--   applicable.
[$sel:buildBatchArn:Build'] :: Build -> Maybe Text

-- | Information about the build's logs in CloudWatch Logs.
[$sel:logs:Build'] :: Build -> Maybe LogsLocation

-- | An identifier for the version of this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
[$sel:resolvedSourceVersion:Build'] :: Build -> Maybe Text

-- | If your CodeBuild project accesses resources in an Amazon VPC, you
--   provide this parameter that identifies the VPC ID and the list of
--   security group IDs and subnet IDs. The security groups and subnets
--   must belong to the same VPC. You must provide at least one security
--   group and one subnet ID.
[$sel:vpcConfig:Build'] :: Build -> Maybe VpcConfig

-- | When the build process ended, expressed in Unix time format.
[$sel:endTime:Build'] :: Build -> Maybe POSIX

-- | The name of the CodeBuild project.
[$sel:projectName:Build'] :: Build -> Maybe Text

-- | The current status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
[$sel:buildStatus:Build'] :: Build -> Maybe StatusType

-- | Information about the source code to be built.
[$sel:source:Build'] :: Build -> Maybe ProjectSource

-- | The unique ID for the build.
[$sel:id:Build'] :: Build -> Maybe Text

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:Build'] :: Build -> Maybe [ProjectFileSystemLocation]

-- | An array of the ARNs associated with this build's reports.
[$sel:reportArns:Build'] :: Build -> Maybe [Text]

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:Build'] :: Build -> Maybe Text

-- | The name of a service role used for this build.
[$sel:serviceRole:Build'] :: Build -> Maybe Text

-- | How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
[$sel:timeoutInMinutes:Build'] :: Build -> Maybe Int

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:Build'</a>, <a>build_phases</a> - Information about all
--   previous build phases that are complete and information about any
--   current build phase that is not yet complete.
--   
--   <a>$sel:buildComplete:Build'</a>, <a>build_buildComplete</a> - Whether
--   the build is complete. True if complete; otherwise, false.
--   
--   <a>$sel:secondaryArtifacts:Build'</a>, <a>build_secondaryArtifacts</a>
--   - An array of <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:arn:Build'</a>, <a>build_arn</a> - The Amazon Resource Name
--   (ARN) of the build.
--   
--   <a>$sel:exportedEnvironmentVariables:Build'</a>,
--   <a>build_exportedEnvironmentVariables</a> - A list of exported
--   environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   <a>$sel:buildNumber:Build'</a>, <a>build_buildNumber</a> - The number
--   of the build. For each project, the <tt>buildNumber</tt> of its first
--   build is <tt>1</tt>. The <tt>buildNumber</tt> of each subsequent build
--   is incremented by <tt>1</tt>. If a build is deleted, the
--   <tt>buildNumber</tt> of other builds does not change.
--   
--   <a>$sel:startTime:Build'</a>, <a>build_startTime</a> - When the build
--   process started, expressed in Unix time format.
--   
--   <a>$sel:artifacts:Build'</a>, <a>build_artifacts</a> - Information
--   about the output artifacts for the build.
--   
--   <a>$sel:environment:Build'</a>, <a>build_environment</a> - Information
--   about the build environment for this build.
--   
--   <a>$sel:initiator:Build'</a>, <a>build_initiator</a> - The entity that
--   started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:networkInterface:Build'</a>, <a>build_networkInterface</a> -
--   Describes a network interface.
--   
--   <a>$sel:secondarySourceVersions:Build'</a>,
--   <a>build_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:currentPhase:Build'</a>, <a>build_currentPhase</a> - The
--   current build phase.
--   
--   <a>$sel:queuedTimeoutInMinutes:Build'</a>,
--   <a>build_queuedTimeoutInMinutes</a> - The number of minutes a build is
--   allowed to be queued before it times out.
--   
--   <a>$sel:cache:Build'</a>, <a>build_cache</a> - Information about the
--   cache for the build.
--   
--   <a>$sel:secondarySources:Build'</a>, <a>build_secondarySources</a> -
--   An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:debugSession:Build'</a>, <a>build_debugSession</a> - Contains
--   information about the debug session for this build.
--   
--   <a>$sel:sourceVersion:Build'</a>, <a>build_sourceVersion</a> - Any
--   version identifier for the version of the source code to be built. If
--   <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildBatchArn:Build'</a>, <a>build_buildBatchArn</a> - The ARN
--   of the batch build that this build is a member of, if applicable.
--   
--   <a>$sel:logs:Build'</a>, <a>build_logs</a> - Information about the
--   build's logs in CloudWatch Logs.
--   
--   <a>$sel:resolvedSourceVersion:Build'</a>,
--   <a>build_resolvedSourceVersion</a> - An identifier for the version of
--   this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:Build'</a>, <a>build_vpcConfig</a> - If your
--   CodeBuild project accesses resources in an Amazon VPC, you provide
--   this parameter that identifies the VPC ID and the list of security
--   group IDs and subnet IDs. The security groups and subnets must belong
--   to the same VPC. You must provide at least one security group and one
--   subnet ID.
--   
--   <a>$sel:endTime:Build'</a>, <a>build_endTime</a> - When the build
--   process ended, expressed in Unix time format.
--   
--   <a>$sel:projectName:Build'</a>, <a>build_projectName</a> - The name of
--   the CodeBuild project.
--   
--   <a>$sel:buildStatus:Build'</a>, <a>build_buildStatus</a> - The current
--   status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
--   
--   <a>$sel:source:Build'</a>, <a>build_source</a> - Information about the
--   source code to be built.
--   
--   <a>$sel:id:Build'</a>, <a>build_id</a> - The unique ID for the build.
--   
--   <a>$sel:fileSystemLocations:Build'</a>,
--   <a>build_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:reportArns:Build'</a>, <a>build_reportArns</a> - An array of
--   the ARNs associated with this build's reports.
--   
--   <a>$sel:encryptionKey:Build'</a>, <a>build_encryptionKey</a> - The Key
--   Management Service customer master key (CMK) to be used for encrypting
--   the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:serviceRole:Build'</a>, <a>build_serviceRole</a> - The name of
--   a service role used for this build.
--   
--   <a>$sel:timeoutInMinutes:Build'</a>, <a>build_timeoutInMinutes</a> -
--   How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
newBuild :: Build

-- | Information about all previous build phases that are complete and
--   information about any current build phase that is not yet complete.
build_phases :: Lens' Build (Maybe [BuildPhase])

-- | Whether the build is complete. True if complete; otherwise, false.
build_buildComplete :: Lens' Build (Maybe Bool)

-- | An array of <tt>ProjectArtifacts</tt> objects.
build_secondaryArtifacts :: Lens' Build (Maybe [BuildArtifacts])

-- | The Amazon Resource Name (ARN) of the build.
build_arn :: Lens' Build (Maybe Text)

-- | A list of exported environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
build_exportedEnvironmentVariables :: Lens' Build (Maybe [ExportedEnvironmentVariable])

-- | The number of the build. For each project, the <tt>buildNumber</tt> of
--   its first build is <tt>1</tt>. The <tt>buildNumber</tt> of each
--   subsequent build is incremented by <tt>1</tt>. If a build is deleted,
--   the <tt>buildNumber</tt> of other builds does not change.
build_buildNumber :: Lens' Build (Maybe Integer)

-- | When the build process started, expressed in Unix time format.
build_startTime :: Lens' Build (Maybe UTCTime)

-- | Information about the output artifacts for the build.
build_artifacts :: Lens' Build (Maybe BuildArtifacts)

-- | Information about the build environment for this build.
build_environment :: Lens' Build (Maybe ProjectEnvironment)

-- | The entity that started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
build_initiator :: Lens' Build (Maybe Text)

-- | Describes a network interface.
build_networkInterface :: Lens' Build (Maybe NetworkInterface)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
build_secondarySourceVersions :: Lens' Build (Maybe [ProjectSourceVersion])

-- | The current build phase.
build_currentPhase :: Lens' Build (Maybe Text)

-- | The number of minutes a build is allowed to be queued before it times
--   out.
build_queuedTimeoutInMinutes :: Lens' Build (Maybe Int)

-- | Information about the cache for the build.
build_cache :: Lens' Build (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
build_secondarySources :: Lens' Build (Maybe [ProjectSource])

-- | Contains information about the debug session for this build.
build_debugSession :: Lens' Build (Maybe DebugSession)

-- | Any version identifier for the version of the source code to be built.
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
build_sourceVersion :: Lens' Build (Maybe Text)

-- | The ARN of the batch build that this build is a member of, if
--   applicable.
build_buildBatchArn :: Lens' Build (Maybe Text)

-- | Information about the build's logs in CloudWatch Logs.
build_logs :: Lens' Build (Maybe LogsLocation)

-- | An identifier for the version of this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
build_resolvedSourceVersion :: Lens' Build (Maybe Text)

-- | If your CodeBuild project accesses resources in an Amazon VPC, you
--   provide this parameter that identifies the VPC ID and the list of
--   security group IDs and subnet IDs. The security groups and subnets
--   must belong to the same VPC. You must provide at least one security
--   group and one subnet ID.
build_vpcConfig :: Lens' Build (Maybe VpcConfig)

-- | When the build process ended, expressed in Unix time format.
build_endTime :: Lens' Build (Maybe UTCTime)

-- | The name of the CodeBuild project.
build_projectName :: Lens' Build (Maybe Text)

-- | The current status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
build_buildStatus :: Lens' Build (Maybe StatusType)

-- | Information about the source code to be built.
build_source :: Lens' Build (Maybe ProjectSource)

-- | The unique ID for the build.
build_id :: Lens' Build (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
build_fileSystemLocations :: Lens' Build (Maybe [ProjectFileSystemLocation])

-- | An array of the ARNs associated with this build's reports.
build_reportArns :: Lens' Build (Maybe [Text])

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
build_encryptionKey :: Lens' Build (Maybe Text)

-- | The name of a service role used for this build.
build_serviceRole :: Lens' Build (Maybe Text)

-- | How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
build_timeoutInMinutes :: Lens' Build (Maybe Int)

-- | Information about build output artifacts.
--   
--   <i>See:</i> <a>newBuildArtifacts</a> smart constructor.
data BuildArtifacts
BuildArtifacts' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe BucketOwnerAccess -> BuildArtifacts

-- | Information about the location of the build artifacts.
[$sel:location:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | The MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
[$sel:md5sum:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | Information that tells you if encryption for build artifacts is
--   disabled.
[$sel:encryptionDisabled:BuildArtifacts'] :: BuildArtifacts -> Maybe Bool

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
[$sel:overrideArtifactName:BuildArtifacts'] :: BuildArtifacts -> Maybe Bool

-- | An identifier for this artifact definition.
[$sel:artifactIdentifier:BuildArtifacts'] :: BuildArtifacts -> Maybe Text

-- | The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
[$sel:sha256sum:BuildArtifacts'] :: BuildArtifacts -> Maybe Text
[$sel:bucketOwnerAccess:BuildArtifacts'] :: BuildArtifacts -> Maybe BucketOwnerAccess

-- | Create a value of <a>BuildArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:BuildArtifacts'</a>, <a>buildArtifacts_location</a> -
--   Information about the location of the build artifacts.
--   
--   <a>$sel:md5sum:BuildArtifacts'</a>, <a>buildArtifacts_md5sum</a> - The
--   MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:encryptionDisabled:BuildArtifacts'</a>,
--   <a>buildArtifacts_encryptionDisabled</a> - Information that tells you
--   if encryption for build artifacts is disabled.
--   
--   <a>$sel:overrideArtifactName:BuildArtifacts'</a>,
--   <a>buildArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:BuildArtifacts'</a>,
--   <a>buildArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:sha256sum:BuildArtifacts'</a>, <a>buildArtifacts_sha256sum</a>
--   - The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:bucketOwnerAccess:BuildArtifacts'</a>,
--   <a>buildArtifacts_bucketOwnerAccess</a> - Undocumented member.
newBuildArtifacts :: BuildArtifacts

-- | Information about the location of the build artifacts.
buildArtifacts_location :: Lens' BuildArtifacts (Maybe Text)

-- | The MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_md5sum :: Lens' BuildArtifacts (Maybe Text)

-- | Information that tells you if encryption for build artifacts is
--   disabled.
buildArtifacts_encryptionDisabled :: Lens' BuildArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
buildArtifacts_overrideArtifactName :: Lens' BuildArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
buildArtifacts_artifactIdentifier :: Lens' BuildArtifacts (Maybe Text)

-- | The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_sha256sum :: Lens' BuildArtifacts (Maybe Text)

-- | Undocumented member.
buildArtifacts_bucketOwnerAccess :: Lens' BuildArtifacts (Maybe BucketOwnerAccess)

-- | Contains information about a batch build.
--   
--   <i>See:</i> <a>newBuildBatch</a> smart constructor.
data BuildBatch
BuildBatch' :: Maybe [BuildBatchPhase] -> Maybe [BuildArtifacts] -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe StatusType -> Maybe Text -> Maybe Integer -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe [BuildGroup] -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe LogsConfig -> Maybe Text -> Maybe Bool -> BuildBatch

-- | An array of <tt>BuildBatchPhase</tt> objects the specify the phases of
--   the batch build.
[$sel:phases:BuildBatch'] :: BuildBatch -> Maybe [BuildBatchPhase]

-- | An array of <tt>BuildArtifacts</tt> objects the define the build
--   artifacts for this batch build.
[$sel:secondaryArtifacts:BuildBatch'] :: BuildBatch -> Maybe [BuildArtifacts]

-- | Specifies the maximum amount of time, in minutes, that the build in a
--   batch must be completed in.
[$sel:buildTimeoutInMinutes:BuildBatch'] :: BuildBatch -> Maybe Int

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
[$sel:debugSessionEnabled:BuildBatch'] :: BuildBatch -> Maybe Bool

-- | The ARN of the batch build.
[$sel:arn:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The date and time that the batch build started.
[$sel:startTime:BuildBatch'] :: BuildBatch -> Maybe POSIX

-- | A <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
[$sel:artifacts:BuildBatch'] :: BuildBatch -> Maybe BuildArtifacts
[$sel:environment:BuildBatch'] :: BuildBatch -> Maybe ProjectEnvironment

-- | The entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
[$sel:initiator:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
[$sel:secondarySourceVersions:BuildBatch'] :: BuildBatch -> Maybe [ProjectSourceVersion]

-- | The status of the batch build.
[$sel:buildBatchStatus:BuildBatch'] :: BuildBatch -> Maybe StatusType

-- | The current phase of the batch build.
[$sel:currentPhase:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The number of the batch build. For each project, the
--   <tt>buildBatchNumber</tt> of its first batch build is <tt>1</tt>. The
--   <tt>buildBatchNumber</tt> of each subsequent batch build is
--   incremented by <tt>1</tt>. If a batch build is deleted, the
--   <tt>buildBatchNumber</tt> of other batch builds does not change.
[$sel:buildBatchNumber:BuildBatch'] :: BuildBatch -> Maybe Integer

-- | Specifies the amount of time, in minutes, that the batch build is
--   allowed to be queued before it times out.
[$sel:queuedTimeoutInMinutes:BuildBatch'] :: BuildBatch -> Maybe Int
[$sel:cache:BuildBatch'] :: BuildBatch -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects that define the sources for
--   the batch build.
[$sel:secondarySources:BuildBatch'] :: BuildBatch -> Maybe [ProjectSource]

-- | The identifier of the version of the source code to be built.
[$sel:sourceVersion:BuildBatch'] :: BuildBatch -> Maybe Text

-- | The identifier of the resolved version of this batch build's source
--   code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
[$sel:resolvedSourceVersion:BuildBatch'] :: BuildBatch -> Maybe Text
[$sel:vpcConfig:BuildBatch'] :: BuildBatch -> Maybe VpcConfig

-- | The date and time that the batch build ended.
[$sel:endTime:BuildBatch'] :: BuildBatch -> Maybe POSIX

-- | The name of the batch build project.
[$sel:projectName:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
[$sel:buildGroups:BuildBatch'] :: BuildBatch -> Maybe [BuildGroup]
[$sel:source:BuildBatch'] :: BuildBatch -> Maybe ProjectSource

-- | The identifier of the batch build.
[$sel:id:BuildBatch'] :: BuildBatch -> Maybe Text

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for the batch
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:BuildBatch'] :: BuildBatch -> Maybe [ProjectFileSystemLocation]
[$sel:buildBatchConfig:BuildBatch'] :: BuildBatch -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:BuildBatch'] :: BuildBatch -> Maybe Text
[$sel:logConfig:BuildBatch'] :: BuildBatch -> Maybe LogsConfig

-- | The name of a service role used for builds in the batch.
[$sel:serviceRole:BuildBatch'] :: BuildBatch -> Maybe Text

-- | Indicates if the batch build is complete.
[$sel:complete:BuildBatch'] :: BuildBatch -> Maybe Bool

-- | Create a value of <a>BuildBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:BuildBatch'</a>, <a>buildBatch_phases</a> - An array of
--   <tt>BuildBatchPhase</tt> objects the specify the phases of the batch
--   build.
--   
--   <a>$sel:secondaryArtifacts:BuildBatch'</a>,
--   <a>buildBatch_secondaryArtifacts</a> - An array of
--   <tt>BuildArtifacts</tt> objects the define the build artifacts for
--   this batch build.
--   
--   <a>$sel:buildTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_buildTimeoutInMinutes</a> - Specifies the maximum amount
--   of time, in minutes, that the build in a batch must be completed in.
--   
--   <a>$sel:debugSessionEnabled:BuildBatch'</a>,
--   <a>buildBatch_debugSessionEnabled</a> - Specifies if session debugging
--   is enabled for this batch build. For more information, see <a>Viewing
--   a running build in Session Manager</a>. Batch session debugging is not
--   supported for matrix batch builds.
--   
--   <a>$sel:arn:BuildBatch'</a>, <a>buildBatch_arn</a> - The ARN of the
--   batch build.
--   
--   <a>$sel:startTime:BuildBatch'</a>, <a>buildBatch_startTime</a> - The
--   date and time that the batch build started.
--   
--   <a>$sel:artifacts:BuildBatch'</a>, <a>buildBatch_artifacts</a> - A
--   <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
--   
--   <a>$sel:environment:BuildBatch'</a>, <a>buildBatch_environment</a> -
--   Undocumented member.
--   
--   <a>$sel:initiator:BuildBatch'</a>, <a>buildBatch_initiator</a> - The
--   entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:secondarySourceVersions:BuildBatch'</a>,
--   <a>buildBatch_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:buildBatchStatus:BuildBatch'</a>,
--   <a>buildBatch_buildBatchStatus</a> - The status of the batch build.
--   
--   <a>$sel:currentPhase:BuildBatch'</a>, <a>buildBatch_currentPhase</a> -
--   The current phase of the batch build.
--   
--   <a>$sel:buildBatchNumber:BuildBatch'</a>,
--   <a>buildBatch_buildBatchNumber</a> - The number of the batch build.
--   For each project, the <tt>buildBatchNumber</tt> of its first batch
--   build is <tt>1</tt>. The <tt>buildBatchNumber</tt> of each subsequent
--   batch build is incremented by <tt>1</tt>. If a batch build is deleted,
--   the <tt>buildBatchNumber</tt> of other batch builds does not change.
--   
--   <a>$sel:queuedTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_queuedTimeoutInMinutes</a> - Specifies the amount of
--   time, in minutes, that the batch build is allowed to be queued before
--   it times out.
--   
--   <a>$sel:cache:BuildBatch'</a>, <a>buildBatch_cache</a> - Undocumented
--   member.
--   
--   <a>$sel:secondarySources:BuildBatch'</a>,
--   <a>buildBatch_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects that define the sources for the batch
--   build.
--   
--   <a>$sel:sourceVersion:BuildBatch'</a>, <a>buildBatch_sourceVersion</a>
--   - The identifier of the version of the source code to be built.
--   
--   <a>$sel:resolvedSourceVersion:BuildBatch'</a>,
--   <a>buildBatch_resolvedSourceVersion</a> - The identifier of the
--   resolved version of this batch build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:BuildBatch'</a>, <a>buildBatch_vpcConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:endTime:BuildBatch'</a>, <a>buildBatch_endTime</a> - The date
--   and time that the batch build ended.
--   
--   <a>$sel:projectName:BuildBatch'</a>, <a>buildBatch_projectName</a> -
--   The name of the batch build project.
--   
--   <a>$sel:buildGroups:BuildBatch'</a>, <a>buildBatch_buildGroups</a> -
--   An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
--   
--   <a>$sel:source:BuildBatch'</a>, <a>buildBatch_source</a> -
--   Undocumented member.
--   
--   <a>$sel:id:BuildBatch'</a>, <a>buildBatch_id</a> - The identifier of
--   the batch build.
--   
--   <a>$sel:fileSystemLocations:BuildBatch'</a>,
--   <a>buildBatch_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for the batch build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:BuildBatch'</a>,
--   <a>buildBatch_buildBatchConfig</a> - Undocumented member.
--   
--   <a>$sel:encryptionKey:BuildBatch'</a>, <a>buildBatch_encryptionKey</a>
--   - The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:logConfig:BuildBatch'</a>, <a>buildBatch_logConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceRole:BuildBatch'</a>, <a>buildBatch_serviceRole</a> -
--   The name of a service role used for builds in the batch.
--   
--   <a>$sel:complete:BuildBatch'</a>, <a>buildBatch_complete</a> -
--   Indicates if the batch build is complete.
newBuildBatch :: BuildBatch

-- | An array of <tt>BuildBatchPhase</tt> objects the specify the phases of
--   the batch build.
buildBatch_phases :: Lens' BuildBatch (Maybe [BuildBatchPhase])

-- | An array of <tt>BuildArtifacts</tt> objects the define the build
--   artifacts for this batch build.
buildBatch_secondaryArtifacts :: Lens' BuildBatch (Maybe [BuildArtifacts])

-- | Specifies the maximum amount of time, in minutes, that the build in a
--   batch must be completed in.
buildBatch_buildTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
buildBatch_debugSessionEnabled :: Lens' BuildBatch (Maybe Bool)

-- | The ARN of the batch build.
buildBatch_arn :: Lens' BuildBatch (Maybe Text)

-- | The date and time that the batch build started.
buildBatch_startTime :: Lens' BuildBatch (Maybe UTCTime)

-- | A <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
buildBatch_artifacts :: Lens' BuildBatch (Maybe BuildArtifacts)

-- | Undocumented member.
buildBatch_environment :: Lens' BuildBatch (Maybe ProjectEnvironment)

-- | The entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
buildBatch_initiator :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
buildBatch_secondarySourceVersions :: Lens' BuildBatch (Maybe [ProjectSourceVersion])

-- | The status of the batch build.
buildBatch_buildBatchStatus :: Lens' BuildBatch (Maybe StatusType)

-- | The current phase of the batch build.
buildBatch_currentPhase :: Lens' BuildBatch (Maybe Text)

-- | The number of the batch build. For each project, the
--   <tt>buildBatchNumber</tt> of its first batch build is <tt>1</tt>. The
--   <tt>buildBatchNumber</tt> of each subsequent batch build is
--   incremented by <tt>1</tt>. If a batch build is deleted, the
--   <tt>buildBatchNumber</tt> of other batch builds does not change.
buildBatch_buildBatchNumber :: Lens' BuildBatch (Maybe Integer)

-- | Specifies the amount of time, in minutes, that the batch build is
--   allowed to be queued before it times out.
buildBatch_queuedTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Undocumented member.
buildBatch_cache :: Lens' BuildBatch (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects that define the sources for
--   the batch build.
buildBatch_secondarySources :: Lens' BuildBatch (Maybe [ProjectSource])

-- | The identifier of the version of the source code to be built.
buildBatch_sourceVersion :: Lens' BuildBatch (Maybe Text)

-- | The identifier of the resolved version of this batch build's source
--   code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
buildBatch_resolvedSourceVersion :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_vpcConfig :: Lens' BuildBatch (Maybe VpcConfig)

-- | The date and time that the batch build ended.
buildBatch_endTime :: Lens' BuildBatch (Maybe UTCTime)

-- | The name of the batch build project.
buildBatch_projectName :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
buildBatch_buildGroups :: Lens' BuildBatch (Maybe [BuildGroup])

-- | Undocumented member.
buildBatch_source :: Lens' BuildBatch (Maybe ProjectSource)

-- | The identifier of the batch build.
buildBatch_id :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for the batch
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
buildBatch_fileSystemLocations :: Lens' BuildBatch (Maybe [ProjectFileSystemLocation])

-- | Undocumented member.
buildBatch_buildBatchConfig :: Lens' BuildBatch (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
buildBatch_encryptionKey :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_logConfig :: Lens' BuildBatch (Maybe LogsConfig)

-- | The name of a service role used for builds in the batch.
buildBatch_serviceRole :: Lens' BuildBatch (Maybe Text)

-- | Indicates if the batch build is complete.
buildBatch_complete :: Lens' BuildBatch (Maybe Bool)

-- | Specifies filters when retrieving batch builds.
--   
--   <i>See:</i> <a>newBuildBatchFilter</a> smart constructor.
data BuildBatchFilter
BuildBatchFilter' :: Maybe StatusType -> BuildBatchFilter

-- | The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
[$sel:status:BuildBatchFilter'] :: BuildBatchFilter -> Maybe StatusType

-- | Create a value of <a>BuildBatchFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BuildBatchFilter'</a>, <a>buildBatchFilter_status</a> -
--   The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
newBuildBatchFilter :: BuildBatchFilter

-- | The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
buildBatchFilter_status :: Lens' BuildBatchFilter (Maybe StatusType)

-- | Contains information about a stage for a batch build.
--   
--   <i>See:</i> <a>newBuildBatchPhase</a> smart constructor.
data BuildBatchPhase
BuildBatchPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildBatchPhaseType -> Maybe POSIX -> Maybe Integer -> BuildBatchPhase

-- | Additional information about the batch build phase. Especially to help
--   troubleshoot a failed batch build.
[$sel:contexts:BuildBatchPhase'] :: BuildBatchPhase -> Maybe [PhaseContext]

-- | When the batch build phase started, expressed in Unix time format.
[$sel:startTime:BuildBatchPhase'] :: BuildBatchPhase -> Maybe POSIX

-- | The current status of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
[$sel:phaseStatus:BuildBatchPhase'] :: BuildBatchPhase -> Maybe StatusType

-- | The name of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
[$sel:phaseType:BuildBatchPhase'] :: BuildBatchPhase -> Maybe BuildBatchPhaseType

-- | When the batch build phase ended, expressed in Unix time format.
[$sel:endTime:BuildBatchPhase'] :: BuildBatchPhase -> Maybe POSIX

-- | How long, in seconds, between the starting and ending times of the
--   batch build's phase.
[$sel:durationInSeconds:BuildBatchPhase'] :: BuildBatchPhase -> Maybe Integer

-- | Create a value of <a>BuildBatchPhase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildBatchPhase'</a>, <a>buildBatchPhase_contexts</a>
--   - Additional information about the batch build phase. Especially to
--   help troubleshoot a failed batch build.
--   
--   <a>$sel:startTime:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_startTime</a> - When the batch build phase started,
--   expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseStatus</a> - The current status of the batch
--   build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseType</a> - The name of the batch build phase.
--   Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildBatchPhase'</a>, <a>buildBatchPhase_endTime</a> -
--   When the batch build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_durationInSeconds</a> - How long, in seconds,
--   between the starting and ending times of the batch build's phase.
newBuildBatchPhase :: BuildBatchPhase

-- | Additional information about the batch build phase. Especially to help
--   troubleshoot a failed batch build.
buildBatchPhase_contexts :: Lens' BuildBatchPhase (Maybe [PhaseContext])

-- | When the batch build phase started, expressed in Unix time format.
buildBatchPhase_startTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | The current status of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildBatchPhase_phaseStatus :: Lens' BuildBatchPhase (Maybe StatusType)

-- | The name of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
buildBatchPhase_phaseType :: Lens' BuildBatchPhase (Maybe BuildBatchPhaseType)

-- | When the batch build phase ended, expressed in Unix time format.
buildBatchPhase_endTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   batch build's phase.
buildBatchPhase_durationInSeconds :: Lens' BuildBatchPhase (Maybe Integer)

-- | Contains information about a batch build build group. Build groups are
--   used to combine builds that can run in parallel, while still being
--   able to set dependencies on other build groups.
--   
--   <i>See:</i> <a>newBuildGroup</a> smart constructor.
data BuildGroup
BuildGroup' :: Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe BuildSummary -> Maybe [BuildSummary] -> BuildGroup

-- | Contains the identifier of the build group.
[$sel:identifier:BuildGroup'] :: BuildGroup -> Maybe Text

-- | An array of strings that contain the identifiers of the build groups
--   that this build group depends on.
[$sel:dependsOn:BuildGroup'] :: BuildGroup -> Maybe [Text]

-- | Specifies if failures in this build group can be ignored.
[$sel:ignoreFailure:BuildGroup'] :: BuildGroup -> Maybe Bool

-- | A <tt>BuildSummary</tt> object that contains a summary of the current
--   build group.
[$sel:currentBuildSummary:BuildGroup'] :: BuildGroup -> Maybe BuildSummary

-- | An array of <tt>BuildSummary</tt> objects that contain summaries of
--   previous build groups.
[$sel:priorBuildSummaryList:BuildGroup'] :: BuildGroup -> Maybe [BuildSummary]

-- | Create a value of <a>BuildGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:BuildGroup'</a>, <a>buildGroup_identifier</a> -
--   Contains the identifier of the build group.
--   
--   <a>$sel:dependsOn:BuildGroup'</a>, <a>buildGroup_dependsOn</a> - An
--   array of strings that contain the identifiers of the build groups that
--   this build group depends on.
--   
--   <a>$sel:ignoreFailure:BuildGroup'</a>, <a>buildGroup_ignoreFailure</a>
--   - Specifies if failures in this build group can be ignored.
--   
--   <a>$sel:currentBuildSummary:BuildGroup'</a>,
--   <a>buildGroup_currentBuildSummary</a> - A <tt>BuildSummary</tt> object
--   that contains a summary of the current build group.
--   
--   <a>$sel:priorBuildSummaryList:BuildGroup'</a>,
--   <a>buildGroup_priorBuildSummaryList</a> - An array of
--   <tt>BuildSummary</tt> objects that contain summaries of previous build
--   groups.
newBuildGroup :: BuildGroup

-- | Contains the identifier of the build group.
buildGroup_identifier :: Lens' BuildGroup (Maybe Text)

-- | An array of strings that contain the identifiers of the build groups
--   that this build group depends on.
buildGroup_dependsOn :: Lens' BuildGroup (Maybe [Text])

-- | Specifies if failures in this build group can be ignored.
buildGroup_ignoreFailure :: Lens' BuildGroup (Maybe Bool)

-- | A <tt>BuildSummary</tt> object that contains a summary of the current
--   build group.
buildGroup_currentBuildSummary :: Lens' BuildGroup (Maybe BuildSummary)

-- | An array of <tt>BuildSummary</tt> objects that contain summaries of
--   previous build groups.
buildGroup_priorBuildSummaryList :: Lens' BuildGroup (Maybe [BuildSummary])

-- | Information about a build that could not be successfully deleted.
--   
--   <i>See:</i> <a>newBuildNotDeleted</a> smart constructor.
data BuildNotDeleted
BuildNotDeleted' :: Maybe Text -> Maybe Text -> BuildNotDeleted

-- | The ID of the build that could not be successfully deleted.
[$sel:id:BuildNotDeleted'] :: BuildNotDeleted -> Maybe Text

-- | Additional information about the build that could not be successfully
--   deleted.
[$sel:statusCode:BuildNotDeleted'] :: BuildNotDeleted -> Maybe Text

-- | Create a value of <a>BuildNotDeleted</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:BuildNotDeleted'</a>, <a>buildNotDeleted_id</a> - The ID of
--   the build that could not be successfully deleted.
--   
--   <a>$sel:statusCode:BuildNotDeleted'</a>,
--   <a>buildNotDeleted_statusCode</a> - Additional information about the
--   build that could not be successfully deleted.
newBuildNotDeleted :: BuildNotDeleted

-- | The ID of the build that could not be successfully deleted.
buildNotDeleted_id :: Lens' BuildNotDeleted (Maybe Text)

-- | Additional information about the build that could not be successfully
--   deleted.
buildNotDeleted_statusCode :: Lens' BuildNotDeleted (Maybe Text)

-- | Information about a stage for a build.
--   
--   <i>See:</i> <a>newBuildPhase</a> smart constructor.
data BuildPhase
BuildPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildPhaseType -> Maybe POSIX -> Maybe Integer -> BuildPhase

-- | Additional information about a build phase, especially to help
--   troubleshoot a failed build.
[$sel:contexts:BuildPhase'] :: BuildPhase -> Maybe [PhaseContext]

-- | When the build phase started, expressed in Unix time format.
[$sel:startTime:BuildPhase'] :: BuildPhase -> Maybe POSIX

-- | The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
[$sel:phaseStatus:BuildPhase'] :: BuildPhase -> Maybe StatusType

-- | The name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
[$sel:phaseType:BuildPhase'] :: BuildPhase -> Maybe BuildPhaseType

-- | When the build phase ended, expressed in Unix time format.
[$sel:endTime:BuildPhase'] :: BuildPhase -> Maybe POSIX

-- | How long, in seconds, between the starting and ending times of the
--   build's phase.
[$sel:durationInSeconds:BuildPhase'] :: BuildPhase -> Maybe Integer

-- | Create a value of <a>BuildPhase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildPhase'</a>, <a>buildPhase_contexts</a> -
--   Additional information about a build phase, especially to help
--   troubleshoot a failed build.
--   
--   <a>$sel:startTime:BuildPhase'</a>, <a>buildPhase_startTime</a> - When
--   the build phase started, expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildPhase'</a>, <a>buildPhase_phaseStatus</a> -
--   The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildPhase'</a>, <a>buildPhase_phaseType</a> - The
--   name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildPhase'</a>, <a>buildPhase_endTime</a> - When the
--   build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildPhase'</a>,
--   <a>buildPhase_durationInSeconds</a> - How long, in seconds, between
--   the starting and ending times of the build's phase.
newBuildPhase :: BuildPhase

-- | Additional information about a build phase, especially to help
--   troubleshoot a failed build.
buildPhase_contexts :: Lens' BuildPhase (Maybe [PhaseContext])

-- | When the build phase started, expressed in Unix time format.
buildPhase_startTime :: Lens' BuildPhase (Maybe UTCTime)

-- | The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildPhase_phaseStatus :: Lens' BuildPhase (Maybe StatusType)

-- | The name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
buildPhase_phaseType :: Lens' BuildPhase (Maybe BuildPhaseType)

-- | When the build phase ended, expressed in Unix time format.
buildPhase_endTime :: Lens' BuildPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   build's phase.
buildPhase_durationInSeconds :: Lens' BuildPhase (Maybe Integer)

-- | Contains information that defines how the CodeBuild build project
--   reports the build status to the source provider.
--   
--   <i>See:</i> <a>newBuildStatusConfig</a> smart constructor.
data BuildStatusConfig
BuildStatusConfig' :: Maybe Text -> Maybe Text -> BuildStatusConfig

-- | Specifies the context of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
[$sel:context:BuildStatusConfig'] :: BuildStatusConfig -> Maybe Text

-- | Specifies the target url of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
[$sel:targetUrl:BuildStatusConfig'] :: BuildStatusConfig -> Maybe Text

-- | Create a value of <a>BuildStatusConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_context</a> - Specifies the context of the build
--   status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
--   
--   <a>$sel:targetUrl:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_targetUrl</a> - Specifies the target url of the
--   build status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
newBuildStatusConfig :: BuildStatusConfig

-- | Specifies the context of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
buildStatusConfig_context :: Lens' BuildStatusConfig (Maybe Text)

-- | Specifies the target url of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
buildStatusConfig_targetUrl :: Lens' BuildStatusConfig (Maybe Text)

-- | Contains summary information about a batch build group.
--   
--   <i>See:</i> <a>newBuildSummary</a> smart constructor.
data BuildSummary
BuildSummary' :: Maybe [ResolvedArtifact] -> Maybe ResolvedArtifact -> Maybe Text -> Maybe StatusType -> Maybe POSIX -> BuildSummary

-- | An array of <tt>ResolvedArtifact</tt> objects that represents the
--   secondary build artifacts for the build group.
[$sel:secondaryArtifacts:BuildSummary'] :: BuildSummary -> Maybe [ResolvedArtifact]

-- | A <tt>ResolvedArtifact</tt> object that represents the primary build
--   artifacts for the build group.
[$sel:primaryArtifact:BuildSummary'] :: BuildSummary -> Maybe ResolvedArtifact

-- | The batch build ARN.
[$sel:arn:BuildSummary'] :: BuildSummary -> Maybe Text

-- | The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
[$sel:buildStatus:BuildSummary'] :: BuildSummary -> Maybe StatusType

-- | When the build was started, expressed in Unix time format.
[$sel:requestedOn:BuildSummary'] :: BuildSummary -> Maybe POSIX

-- | Create a value of <a>BuildSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:BuildSummary'</a>,
--   <a>buildSummary_secondaryArtifacts</a> - An array of
--   <tt>ResolvedArtifact</tt> objects that represents the secondary build
--   artifacts for the build group.
--   
--   <a>$sel:primaryArtifact:BuildSummary'</a>,
--   <a>buildSummary_primaryArtifact</a> - A <tt>ResolvedArtifact</tt>
--   object that represents the primary build artifacts for the build
--   group.
--   
--   <a>$sel:arn:BuildSummary'</a>, <a>buildSummary_arn</a> - The batch
--   build ARN.
--   
--   <a>$sel:buildStatus:BuildSummary'</a>, <a>buildSummary_buildStatus</a>
--   - The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
--   
--   <a>$sel:requestedOn:BuildSummary'</a>, <a>buildSummary_requestedOn</a>
--   - When the build was started, expressed in Unix time format.
newBuildSummary :: BuildSummary

-- | An array of <tt>ResolvedArtifact</tt> objects that represents the
--   secondary build artifacts for the build group.
buildSummary_secondaryArtifacts :: Lens' BuildSummary (Maybe [ResolvedArtifact])

-- | A <tt>ResolvedArtifact</tt> object that represents the primary build
--   artifacts for the build group.
buildSummary_primaryArtifact :: Lens' BuildSummary (Maybe ResolvedArtifact)

-- | The batch build ARN.
buildSummary_arn :: Lens' BuildSummary (Maybe Text)

-- | The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
buildSummary_buildStatus :: Lens' BuildSummary (Maybe StatusType)

-- | When the build was started, expressed in Unix time format.
buildSummary_requestedOn :: Lens' BuildSummary (Maybe UTCTime)

-- | Information about CloudWatch Logs for a build project.
--   
--   <i>See:</i> <a>newCloudWatchLogsConfig</a> smart constructor.
data CloudWatchLogsConfig
CloudWatchLogsConfig' :: Maybe Text -> Maybe Text -> LogsConfigStatusType -> CloudWatchLogsConfig

-- | The group name of the logs in CloudWatch Logs. For more information,
--   see <a>Working with Log Groups and Log Streams</a>.
[$sel:groupName:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> Maybe Text

-- | The prefix of the stream name of the CloudWatch Logs. For more
--   information, see <a>Working with Log Groups and Log Streams</a>.
[$sel:streamName:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> Maybe Text

-- | The current status of the logs in CloudWatch Logs for a build project.
--   Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
[$sel:status:CloudWatchLogsConfig'] :: CloudWatchLogsConfig -> LogsConfigStatusType

-- | Create a value of <a>CloudWatchLogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_groupName</a> - The group name of the logs in
--   CloudWatch Logs. For more information, see <a>Working with Log Groups
--   and Log Streams</a>.
--   
--   <a>$sel:streamName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_streamName</a> - The prefix of the stream name
--   of the CloudWatch Logs. For more information, see <a>Working with Log
--   Groups and Log Streams</a>.
--   
--   <a>$sel:status:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_status</a> - The current status of the logs in
--   CloudWatch Logs for a build project. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
newCloudWatchLogsConfig :: LogsConfigStatusType -> CloudWatchLogsConfig

-- | The group name of the logs in CloudWatch Logs. For more information,
--   see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_groupName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The prefix of the stream name of the CloudWatch Logs. For more
--   information, see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_streamName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The current status of the logs in CloudWatch Logs for a build project.
--   Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
cloudWatchLogsConfig_status :: Lens' CloudWatchLogsConfig LogsConfigStatusType

-- | Contains code coverage report information.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverage</a> smart constructor.
data CodeCoverage
CodeCoverage' :: Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Text -> CodeCoverage

-- | The date and time that the tests were run.
[$sel:expired:CodeCoverage'] :: CodeCoverage -> Maybe POSIX

-- | The number of conditional branches that are not covered by your tests.
[$sel:branchesMissed:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The number of lines that are not covered by your tests.
[$sel:linesMissed:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The path of the test report file.
[$sel:filePath:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | The number of conditional branches that are covered by your tests.
[$sel:branchesCovered:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The number of lines that are covered by your tests.
[$sel:linesCovered:CodeCoverage'] :: CodeCoverage -> Maybe Natural

-- | The percentage of branches that are covered by your tests.
[$sel:branchCoveragePercentage:CodeCoverage'] :: CodeCoverage -> Maybe Double

-- | The identifier of the code coverage report.
[$sel:id:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | The percentage of lines that are covered by your tests.
[$sel:lineCoveragePercentage:CodeCoverage'] :: CodeCoverage -> Maybe Double

-- | The ARN of the report.
[$sel:reportARN:CodeCoverage'] :: CodeCoverage -> Maybe Text

-- | Create a value of <a>CodeCoverage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expired:CodeCoverage'</a>, <a>codeCoverage_expired</a> - The
--   date and time that the tests were run.
--   
--   <a>$sel:branchesMissed:CodeCoverage'</a>,
--   <a>codeCoverage_branchesMissed</a> - The number of conditional
--   branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverage'</a>, <a>codeCoverage_linesMissed</a>
--   - The number of lines that are not covered by your tests.
--   
--   <a>$sel:filePath:CodeCoverage'</a>, <a>codeCoverage_filePath</a> - The
--   path of the test report file.
--   
--   <a>$sel:branchesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_branchesCovered</a> - The number of conditional
--   branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_linesCovered</a> - The number of lines that are
--   covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_branchCoveragePercentage</a> - The percentage of
--   branches that are covered by your tests.
--   
--   <a>$sel:id:CodeCoverage'</a>, <a>codeCoverage_id</a> - The identifier
--   of the code coverage report.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_lineCoveragePercentage</a> - The percentage of lines
--   that are covered by your tests.
--   
--   <a>$sel:reportARN:CodeCoverage'</a>, <a>codeCoverage_reportARN</a> -
--   The ARN of the report.
newCodeCoverage :: CodeCoverage

-- | The date and time that the tests were run.
codeCoverage_expired :: Lens' CodeCoverage (Maybe UTCTime)

-- | The number of conditional branches that are not covered by your tests.
codeCoverage_branchesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverage_linesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The path of the test report file.
codeCoverage_filePath :: Lens' CodeCoverage (Maybe Text)

-- | The number of conditional branches that are covered by your tests.
codeCoverage_branchesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverage_linesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverage_branchCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The identifier of the code coverage report.
codeCoverage_id :: Lens' CodeCoverage (Maybe Text)

-- | The percentage of lines that are covered by your tests.
codeCoverage_lineCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The ARN of the report.
codeCoverage_reportARN :: Lens' CodeCoverage (Maybe Text)

-- | Contains a summary of a code coverage report.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverageReportSummary</a> smart constructor.
data CodeCoverageReportSummary
CodeCoverageReportSummary' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Double -> CodeCoverageReportSummary

-- | The number of conditional branches that are not covered by your tests.
[$sel:branchesMissed:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of lines that are not covered by your tests.
[$sel:linesMissed:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of conditional branches that are covered by your tests.
[$sel:branchesCovered:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The number of lines that are covered by your tests.
[$sel:linesCovered:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Natural

-- | The percentage of branches that are covered by your tests.
[$sel:branchCoveragePercentage:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Double

-- | The percentage of lines that are covered by your tests.
[$sel:lineCoveragePercentage:CodeCoverageReportSummary'] :: CodeCoverageReportSummary -> Maybe Double

-- | Create a value of <a>CodeCoverageReportSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesMissed</a> - The number of
--   conditional branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesMissed</a> - The number of lines
--   that are not covered by your tests.
--   
--   <a>$sel:branchesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesCovered</a> - The number of
--   conditional branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesCovered</a> - The number of lines
--   that are covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchCoveragePercentage</a> - The
--   percentage of branches that are covered by your tests.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_lineCoveragePercentage</a> - The
--   percentage of lines that are covered by your tests.
newCodeCoverageReportSummary :: CodeCoverageReportSummary

-- | The number of conditional branches that are not covered by your tests.
codeCoverageReportSummary_branchesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverageReportSummary_linesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of conditional branches that are covered by your tests.
codeCoverageReportSummary_branchesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverageReportSummary_linesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverageReportSummary_branchCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)

-- | The percentage of lines that are covered by your tests.
codeCoverageReportSummary_lineCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)

-- | Contains information about the debug session for a build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
--   
--   <i>See:</i> <a>newDebugSession</a> smart constructor.
data DebugSession
DebugSession' :: Maybe Bool -> Maybe Text -> DebugSession

-- | Specifies if session debugging is enabled for this build.
[$sel:sessionEnabled:DebugSession'] :: DebugSession -> Maybe Bool

-- | Contains the identifier of the Session Manager session used for the
--   build. To work with the paused build, you open this session to
--   examine, control, and resume the build.
[$sel:sessionTarget:DebugSession'] :: DebugSession -> Maybe Text

-- | Create a value of <a>DebugSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionEnabled:DebugSession'</a>,
--   <a>debugSession_sessionEnabled</a> - Specifies if session debugging is
--   enabled for this build.
--   
--   <a>$sel:sessionTarget:DebugSession'</a>,
--   <a>debugSession_sessionTarget</a> - Contains the identifier of the
--   Session Manager session used for the build. To work with the paused
--   build, you open this session to examine, control, and resume the
--   build.
newDebugSession :: DebugSession

-- | Specifies if session debugging is enabled for this build.
debugSession_sessionEnabled :: Lens' DebugSession (Maybe Bool)

-- | Contains the identifier of the Session Manager session used for the
--   build. To work with the paused build, you open this session to
--   examine, control, and resume the build.
debugSession_sessionTarget :: Lens' DebugSession (Maybe Text)

-- | Information about a Docker image that is managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentImage</a> smart constructor.
data EnvironmentImage
EnvironmentImage' :: Maybe [Text] -> Maybe Text -> Maybe Text -> EnvironmentImage

-- | A list of environment image versions.
[$sel:versions:EnvironmentImage'] :: EnvironmentImage -> Maybe [Text]

-- | The name of the Docker image.
[$sel:name:EnvironmentImage'] :: EnvironmentImage -> Maybe Text

-- | The description of the Docker image.
[$sel:description:EnvironmentImage'] :: EnvironmentImage -> Maybe Text

-- | Create a value of <a>EnvironmentImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versions:EnvironmentImage'</a>,
--   <a>environmentImage_versions</a> - A list of environment image
--   versions.
--   
--   <a>$sel:name:EnvironmentImage'</a>, <a>environmentImage_name</a> - The
--   name of the Docker image.
--   
--   <a>$sel:description:EnvironmentImage'</a>,
--   <a>environmentImage_description</a> - The description of the Docker
--   image.
newEnvironmentImage :: EnvironmentImage

-- | A list of environment image versions.
environmentImage_versions :: Lens' EnvironmentImage (Maybe [Text])

-- | The name of the Docker image.
environmentImage_name :: Lens' EnvironmentImage (Maybe Text)

-- | The description of the Docker image.
environmentImage_description :: Lens' EnvironmentImage (Maybe Text)

-- | A set of Docker images that are related by programming language and
--   are managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentLanguage</a> smart constructor.
data EnvironmentLanguage
EnvironmentLanguage' :: Maybe [EnvironmentImage] -> Maybe LanguageType -> EnvironmentLanguage

-- | The list of Docker images that are related by the specified
--   programming language.
[$sel:images:EnvironmentLanguage'] :: EnvironmentLanguage -> Maybe [EnvironmentImage]

-- | The programming language for the Docker images.
[$sel:language:EnvironmentLanguage'] :: EnvironmentLanguage -> Maybe LanguageType

-- | Create a value of <a>EnvironmentLanguage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:images:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_images</a> - The list of Docker images that are
--   related by the specified programming language.
--   
--   <a>$sel:language:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_language</a> - The programming language for the
--   Docker images.
newEnvironmentLanguage :: EnvironmentLanguage

-- | The list of Docker images that are related by the specified
--   programming language.
environmentLanguage_images :: Lens' EnvironmentLanguage (Maybe [EnvironmentImage])

-- | The programming language for the Docker images.
environmentLanguage_language :: Lens' EnvironmentLanguage (Maybe LanguageType)

-- | A set of Docker images that are related by platform and are managed by
--   CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentPlatform</a> smart constructor.
data EnvironmentPlatform
EnvironmentPlatform' :: Maybe PlatformType -> Maybe [EnvironmentLanguage] -> EnvironmentPlatform

-- | The platform's name.
[$sel:platform:EnvironmentPlatform'] :: EnvironmentPlatform -> Maybe PlatformType

-- | The list of programming languages that are available for the specified
--   platform.
[$sel:languages:EnvironmentPlatform'] :: EnvironmentPlatform -> Maybe [EnvironmentLanguage]

-- | Create a value of <a>EnvironmentPlatform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_platform</a> - The platform's name.
--   
--   <a>$sel:languages:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_languages</a> - The list of programming
--   languages that are available for the specified platform.
newEnvironmentPlatform :: EnvironmentPlatform

-- | The platform's name.
environmentPlatform_platform :: Lens' EnvironmentPlatform (Maybe PlatformType)

-- | The list of programming languages that are available for the specified
--   platform.
environmentPlatform_languages :: Lens' EnvironmentPlatform (Maybe [EnvironmentLanguage])

-- | Information about an environment variable for a build project or a
--   build.
--   
--   <i>See:</i> <a>newEnvironmentVariable</a> smart constructor.
data EnvironmentVariable
EnvironmentVariable' :: Maybe EnvironmentVariableType -> Text -> Text -> EnvironmentVariable

-- | The type of environment variable. Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
[$sel:type':EnvironmentVariable'] :: EnvironmentVariable -> Maybe EnvironmentVariableType

-- | The name or key of the environment variable.
[$sel:name:EnvironmentVariable'] :: EnvironmentVariable -> Text

-- | The value of the environment variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
[$sel:value:EnvironmentVariable'] :: EnvironmentVariable -> Text

-- | Create a value of <a>EnvironmentVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EnvironmentVariable'</a>,
--   <a>environmentVariable_type</a> - The type of environment variable.
--   Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:name:EnvironmentVariable'</a>, <a>environmentVariable_name</a>
--   - The name or key of the environment variable.
--   
--   <a>$sel:value:EnvironmentVariable'</a>,
--   <a>environmentVariable_value</a> - The value of the environment
--   variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
newEnvironmentVariable :: Text -> Text -> EnvironmentVariable

-- | The type of environment variable. Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
environmentVariable_type :: Lens' EnvironmentVariable (Maybe EnvironmentVariableType)

-- | The name or key of the environment variable.
environmentVariable_name :: Lens' EnvironmentVariable Text

-- | The value of the environment variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
environmentVariable_value :: Lens' EnvironmentVariable Text

-- | Contains information about an exported environment variable.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   During a build, the value of a variable is available starting with the
--   <tt>install</tt> phase. It can be updated between the start of the
--   <tt>install</tt> phase and the end of the <tt>post_build</tt> phase.
--   After the <tt>post_build</tt> phase ends, the value of exported
--   variables cannot change.
--   
--   <i>See:</i> <a>newExportedEnvironmentVariable</a> smart constructor.
data ExportedEnvironmentVariable
ExportedEnvironmentVariable' :: Maybe Text -> Maybe Text -> ExportedEnvironmentVariable

-- | The value assigned to the exported environment variable.
[$sel:value:ExportedEnvironmentVariable'] :: ExportedEnvironmentVariable -> Maybe Text

-- | The name of the exported environment variable.
[$sel:name:ExportedEnvironmentVariable'] :: ExportedEnvironmentVariable -> Maybe Text

-- | Create a value of <a>ExportedEnvironmentVariable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_value</a> - The value assigned to the
--   exported environment variable.
--   
--   <a>$sel:name:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_name</a> - The name of the exported
--   environment variable.
newExportedEnvironmentVariable :: ExportedEnvironmentVariable

-- | The value assigned to the exported environment variable.
exportedEnvironmentVariable_value :: Lens' ExportedEnvironmentVariable (Maybe Text)

-- | The name of the exported environment variable.
exportedEnvironmentVariable_name :: Lens' ExportedEnvironmentVariable (Maybe Text)

-- | Information about the Git submodules configuration for an CodeBuild
--   build project.
--   
--   <i>See:</i> <a>newGitSubmodulesConfig</a> smart constructor.
data GitSubmodulesConfig
GitSubmodulesConfig' :: Bool -> GitSubmodulesConfig

-- | Set to true to fetch Git submodules for your CodeBuild build project.
[$sel:fetchSubmodules:GitSubmodulesConfig'] :: GitSubmodulesConfig -> Bool

-- | Create a value of <a>GitSubmodulesConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchSubmodules:GitSubmodulesConfig'</a>,
--   <a>gitSubmodulesConfig_fetchSubmodules</a> - Set to true to fetch Git
--   submodules for your CodeBuild build project.
newGitSubmodulesConfig :: Bool -> GitSubmodulesConfig

-- | Set to true to fetch Git submodules for your CodeBuild build project.
gitSubmodulesConfig_fetchSubmodules :: Lens' GitSubmodulesConfig Bool

-- | Information about logs for a build project. These can be logs in
--   CloudWatch Logs, built in a specified S3 bucket, or both.
--   
--   <i>See:</i> <a>newLogsConfig</a> smart constructor.
data LogsConfig
LogsConfig' :: Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> LogsConfig

-- | Information about logs built to an S3 bucket for a build project. S3
--   logs are not enabled by default.
[$sel:s3Logs:LogsConfig'] :: LogsConfig -> Maybe S3LogsConfig

-- | Information about CloudWatch Logs for a build project. CloudWatch Logs
--   are enabled by default.
[$sel:cloudWatchLogs:LogsConfig'] :: LogsConfig -> Maybe CloudWatchLogsConfig

-- | Create a value of <a>LogsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:LogsConfig'</a>, <a>logsConfig_s3Logs</a> - Information
--   about logs built to an S3 bucket for a build project. S3 logs are not
--   enabled by default.
--   
--   <a>$sel:cloudWatchLogs:LogsConfig'</a>,
--   <a>logsConfig_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project. CloudWatch Logs are enabled by default.
newLogsConfig :: LogsConfig

-- | Information about logs built to an S3 bucket for a build project. S3
--   logs are not enabled by default.
logsConfig_s3Logs :: Lens' LogsConfig (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project. CloudWatch Logs
--   are enabled by default.
logsConfig_cloudWatchLogs :: Lens' LogsConfig (Maybe CloudWatchLogsConfig)

-- | Information about build logs in CloudWatch Logs.
--   
--   <i>See:</i> <a>newLogsLocation</a> smart constructor.
data LogsLocation
LogsLocation' :: Maybe Text -> Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LogsLocation

-- | The URL to an individual build log in CloudWatch Logs.
[$sel:deepLink:LogsLocation'] :: LogsLocation -> Maybe Text

-- | Information about S3 logs for a build project.
[$sel:s3Logs:LogsLocation'] :: LogsLocation -> Maybe S3LogsConfig

-- | Information about CloudWatch Logs for a build project.
[$sel:cloudWatchLogs:LogsLocation'] :: LogsLocation -> Maybe CloudWatchLogsConfig

-- | The URL to a build log in an S3 bucket.
[$sel:s3DeepLink:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
[$sel:s3LogsArn:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The ARN of CloudWatch Logs for a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
[$sel:cloudWatchLogsArn:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The name of the CloudWatch Logs group for the build logs.
[$sel:groupName:LogsLocation'] :: LogsLocation -> Maybe Text

-- | The name of the CloudWatch Logs stream for the build logs.
[$sel:streamName:LogsLocation'] :: LogsLocation -> Maybe Text

-- | Create a value of <a>LogsLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deepLink:LogsLocation'</a>, <a>logsLocation_deepLink</a> - The
--   URL to an individual build log in CloudWatch Logs.
--   
--   <a>$sel:s3Logs:LogsLocation'</a>, <a>logsLocation_s3Logs</a> -
--   Information about S3 logs for a build project.
--   
--   <a>$sel:cloudWatchLogs:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project.
--   
--   <a>$sel:s3DeepLink:LogsLocation'</a>, <a>logsLocation_s3DeepLink</a> -
--   The URL to a build log in an S3 bucket.
--   
--   <a>$sel:s3LogsArn:LogsLocation'</a>, <a>logsLocation_s3LogsArn</a> -
--   The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
--   
--   <a>$sel:cloudWatchLogsArn:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogsArn</a> - The ARN of CloudWatch Logs for
--   a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
--   
--   <a>$sel:groupName:LogsLocation'</a>, <a>logsLocation_groupName</a> -
--   The name of the CloudWatch Logs group for the build logs.
--   
--   <a>$sel:streamName:LogsLocation'</a>, <a>logsLocation_streamName</a> -
--   The name of the CloudWatch Logs stream for the build logs.
newLogsLocation :: LogsLocation

-- | The URL to an individual build log in CloudWatch Logs.
logsLocation_deepLink :: Lens' LogsLocation (Maybe Text)

-- | Information about S3 logs for a build project.
logsLocation_s3Logs :: Lens' LogsLocation (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project.
logsLocation_cloudWatchLogs :: Lens' LogsLocation (Maybe CloudWatchLogsConfig)

-- | The URL to a build log in an S3 bucket.
logsLocation_s3DeepLink :: Lens' LogsLocation (Maybe Text)

-- | The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
logsLocation_s3LogsArn :: Lens' LogsLocation (Maybe Text)

-- | The ARN of CloudWatch Logs for a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
logsLocation_cloudWatchLogsArn :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs group for the build logs.
logsLocation_groupName :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs stream for the build logs.
logsLocation_streamName :: Lens' LogsLocation (Maybe Text)

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> NetworkInterface

-- | The ID of the subnet.
[$sel:subnetId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The ID of the network interface.
[$sel:networkInterfaceId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:NetworkInterface'</a>,
--   <a>networkInterface_subnetId</a> - The ID of the subnet.
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
newNetworkInterface :: NetworkInterface

-- | The ID of the subnet.
networkInterface_subnetId :: Lens' NetworkInterface (Maybe Text)

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | Additional information about a build phase that has an error. You can
--   use this information for troubleshooting.
--   
--   <i>See:</i> <a>newPhaseContext</a> smart constructor.
data PhaseContext
PhaseContext' :: Maybe Text -> Maybe Text -> PhaseContext

-- | An explanation of the build phase's context. This might include a
--   command ID and an exit code.
[$sel:message:PhaseContext'] :: PhaseContext -> Maybe Text

-- | The status code for the context of the build phase.
[$sel:statusCode:PhaseContext'] :: PhaseContext -> Maybe Text

-- | Create a value of <a>PhaseContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:PhaseContext'</a>, <a>phaseContext_message</a> - An
--   explanation of the build phase's context. This might include a command
--   ID and an exit code.
--   
--   <a>$sel:statusCode:PhaseContext'</a>, <a>phaseContext_statusCode</a> -
--   The status code for the context of the build phase.
newPhaseContext :: PhaseContext

-- | An explanation of the build phase's context. This might include a
--   command ID and an exit code.
phaseContext_message :: Lens' PhaseContext (Maybe Text)

-- | The status code for the context of the build phase.
phaseContext_statusCode :: Lens' PhaseContext (Maybe Text)

-- | Information about a build project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe [ProjectArtifacts] -> Maybe Text -> Maybe Text -> Maybe ProjectArtifacts -> Maybe ProjectEnvironment -> Maybe POSIX -> Maybe Int -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe Text -> Maybe ProjectSource -> Maybe ProjectBadge -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe POSIX -> Maybe ProjectVisibilityType -> Maybe Webhook -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Project

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifacts:Project'] :: Project -> Maybe [ProjectArtifacts]

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
[$sel:resourceAccessRole:Project'] :: Project -> Maybe Text

-- | The Amazon Resource Name (ARN) of the build project.
[$sel:arn:Project'] :: Project -> Maybe Text

-- | Information about the build output artifacts for the build project.
[$sel:artifacts:Project'] :: Project -> Maybe ProjectArtifacts

-- | Information about the build environment for this build project.
[$sel:environment:Project'] :: Project -> Maybe ProjectEnvironment

-- | When the build project was created, expressed in Unix time format.
[$sel:created:Project'] :: Project -> Maybe POSIX

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
[$sel:concurrentBuildLimit:Project'] :: Project -> Maybe Int

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
[$sel:secondarySourceVersions:Project'] :: Project -> Maybe [ProjectSourceVersion]

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:Project'] :: Project -> Maybe Natural

-- | Information about the cache for the build project.
[$sel:cache:Project'] :: Project -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:Project'] :: Project -> Maybe [ProjectSource]

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:Project'] :: Project -> Maybe Text

-- | The name of the build project.
[$sel:name:Project'] :: Project -> Maybe Text

-- | Information about the VPC configuration that CodeBuild accesses.
[$sel:vpcConfig:Project'] :: Project -> Maybe VpcConfig

-- | Contains the project identifier used with the public build APIs.
[$sel:publicProjectAlias:Project'] :: Project -> Maybe Text

-- | Information about the build input source code for this build project.
[$sel:source:Project'] :: Project -> Maybe ProjectSource

-- | Information about the build badge for the build project.
[$sel:badge:Project'] :: Project -> Maybe ProjectBadge

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
[$sel:logsConfig:Project'] :: Project -> Maybe LogsConfig

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:Project'] :: Project -> Maybe [ProjectFileSystemLocation]

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
[$sel:buildBatchConfig:Project'] :: Project -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
[$sel:encryptionKey:Project'] :: Project -> Maybe Text

-- | When the build project's settings were last modified, expressed in
--   Unix time format.
[$sel:lastModified:Project'] :: Project -> Maybe POSIX
[$sel:projectVisibility:Project'] :: Project -> Maybe ProjectVisibilityType

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
[$sel:webhook:Project'] :: Project -> Maybe Webhook

-- | A description that makes the build project easy to identify.
[$sel:description:Project'] :: Project -> Maybe Text

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
[$sel:serviceRole:Project'] :: Project -> Maybe Text

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
[$sel:tags:Project'] :: Project -> Maybe [Tag]

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
[$sel:timeoutInMinutes:Project'] :: Project -> Maybe Natural

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:Project'</a>,
--   <a>project_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:resourceAccessRole:Project'</a>,
--   <a>project_resourceAccessRole</a> - The ARN of the IAM role that
--   enables CodeBuild to access the CloudWatch Logs and Amazon S3
--   artifacts for the project's builds.
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The Amazon Resource
--   Name (ARN) of the build project.
--   
--   <a>$sel:artifacts:Project'</a>, <a>project_artifacts</a> - Information
--   about the build output artifacts for the build project.
--   
--   <a>$sel:environment:Project'</a>, <a>project_environment</a> -
--   Information about the build environment for this build project.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the build
--   project was created, expressed in Unix time format.
--   
--   <a>$sel:concurrentBuildLimit:Project'</a>,
--   <a>project_concurrentBuildLimit</a> - The maximum number of concurrent
--   builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   <a>$sel:secondarySourceVersions:Project'</a>,
--   <a>project_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
--   
--   <a>$sel:queuedTimeoutInMinutes:Project'</a>,
--   <a>project_queuedTimeoutInMinutes</a> - The number of minutes a build
--   is allowed to be queued before it times out.
--   
--   <a>$sel:cache:Project'</a>, <a>project_cache</a> - Information about
--   the cache for the build project.
--   
--   <a>$sel:secondarySources:Project'</a>, <a>project_secondarySources</a>
--   - An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:Project'</a>, <a>project_sourceVersion</a> - A
--   version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The name of the build
--   project.
--   
--   <a>$sel:vpcConfig:Project'</a>, <a>project_vpcConfig</a> - Information
--   about the VPC configuration that CodeBuild accesses.
--   
--   <a>$sel:publicProjectAlias:Project'</a>,
--   <a>project_publicProjectAlias</a> - Contains the project identifier
--   used with the public build APIs.
--   
--   <a>$sel:source:Project'</a>, <a>project_source</a> - Information about
--   the build input source code for this build project.
--   
--   <a>$sel:badge:Project'</a>, <a>project_badge</a> - Information about
--   the build badge for the build project.
--   
--   <a>$sel:logsConfig:Project'</a>, <a>project_logsConfig</a> -
--   Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:Project'</a>,
--   <a>project_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:Project'</a>, <a>project_buildBatchConfig</a>
--   - A ProjectBuildBatchConfig object that defines the batch build
--   options for the project.
--   
--   <a>$sel:encryptionKey:Project'</a>, <a>project_encryptionKey</a> - The
--   Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
--   
--   <a>$sel:lastModified:Project'</a>, <a>project_lastModified</a> - When
--   the build project's settings were last modified, expressed in Unix
--   time format.
--   
--   <a>$sel:projectVisibility:Project'</a>,
--   <a>project_projectVisibility</a> - Undocumented member.
--   
--   <a>$sel:webhook:Project'</a>, <a>project_webhook</a> - Information
--   about a webhook that connects repository events to a build project in
--   CodeBuild.
--   
--   <a>$sel:description:Project'</a>, <a>project_description</a> - A
--   description that makes the build project easy to identify.
--   
--   <a>$sel:serviceRole:Project'</a>, <a>project_serviceRole</a> - The ARN
--   of the IAM role that enables CodeBuild to interact with dependent
--   Amazon Web Services services on behalf of the Amazon Web Services
--   account.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - A list of tag key and
--   value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:Project'</a>, <a>project_timeoutInMinutes</a>
--   - How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
newProject :: Project

-- | An array of <tt>ProjectArtifacts</tt> objects.
project_secondaryArtifacts :: Lens' Project (Maybe [ProjectArtifacts])

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
project_resourceAccessRole :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
project_arn :: Lens' Project (Maybe Text)

-- | Information about the build output artifacts for the build project.
project_artifacts :: Lens' Project (Maybe ProjectArtifacts)

-- | Information about the build environment for this build project.
project_environment :: Lens' Project (Maybe ProjectEnvironment)

-- | When the build project was created, expressed in Unix time format.
project_created :: Lens' Project (Maybe UTCTime)

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
project_concurrentBuildLimit :: Lens' Project (Maybe Int)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
project_secondarySourceVersions :: Lens' Project (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
project_queuedTimeoutInMinutes :: Lens' Project (Maybe Natural)

-- | Information about the cache for the build project.
project_cache :: Lens' Project (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
project_secondarySources :: Lens' Project (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
project_sourceVersion :: Lens' Project (Maybe Text)

-- | The name of the build project.
project_name :: Lens' Project (Maybe Text)

-- | Information about the VPC configuration that CodeBuild accesses.
project_vpcConfig :: Lens' Project (Maybe VpcConfig)

-- | Contains the project identifier used with the public build APIs.
project_publicProjectAlias :: Lens' Project (Maybe Text)

-- | Information about the build input source code for this build project.
project_source :: Lens' Project (Maybe ProjectSource)

-- | Information about the build badge for the build project.
project_badge :: Lens' Project (Maybe ProjectBadge)

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
project_logsConfig :: Lens' Project (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
project_fileSystemLocations :: Lens' Project (Maybe [ProjectFileSystemLocation])

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
project_buildBatchConfig :: Lens' Project (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
project_encryptionKey :: Lens' Project (Maybe Text)

-- | When the build project's settings were last modified, expressed in
--   Unix time format.
project_lastModified :: Lens' Project (Maybe UTCTime)

-- | Undocumented member.
project_projectVisibility :: Lens' Project (Maybe ProjectVisibilityType)

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
project_webhook :: Lens' Project (Maybe Webhook)

-- | A description that makes the build project easy to identify.
project_description :: Lens' Project (Maybe Text)

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
project_serviceRole :: Lens' Project (Maybe Text)

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
project_tags :: Lens' Project (Maybe [Tag])

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
project_timeoutInMinutes :: Lens' Project (Maybe Natural)

-- | Information about the build output artifacts for the build project.
--   
--   <i>See:</i> <a>newProjectArtifacts</a> smart constructor.
data ProjectArtifacts
ProjectArtifacts' :: Maybe ArtifactPackaging -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe BucketOwnerAccess -> Maybe ArtifactNamespace -> ArtifactsType -> ProjectArtifacts

-- | The type of build output artifact to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
[$sel:packaging:ProjectArtifacts'] :: ProjectArtifacts -> Maybe ArtifactPackaging

-- | Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
[$sel:path:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Information about the build output artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
[$sel:location:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
[$sel:name:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text

-- | Set to true if you do not want your output artifacts encrypted. This
--   option is valid only if your artifacts type is Amazon S3. If this is
--   set with another artifacts type, an invalidInputException is thrown.
[$sel:encryptionDisabled:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Bool

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
[$sel:overrideArtifactName:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Bool

-- | An identifier for this artifact definition.
[$sel:artifactIdentifier:ProjectArtifacts'] :: ProjectArtifacts -> Maybe Text
[$sel:bucketOwnerAccess:ProjectArtifacts'] :: ProjectArtifacts -> Maybe BucketOwnerAccess

-- | Along with <tt>path</tt> and <tt>name</tt>, the pattern that CodeBuild
--   uses to determine the name and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
[$sel:namespaceType:ProjectArtifacts'] :: ProjectArtifacts -> Maybe ArtifactNamespace

-- | The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
[$sel:type':ProjectArtifacts'] :: ProjectArtifacts -> ArtifactsType

-- | Create a value of <a>ProjectArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:ProjectArtifacts'</a>,
--   <a>projectArtifacts_packaging</a> - The type of build output artifact
--   to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
--   
--   <a>$sel:path:ProjectArtifacts'</a>, <a>projectArtifacts_path</a> -
--   Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
--   
--   <a>$sel:location:ProjectArtifacts'</a>,
--   <a>projectArtifacts_location</a> - Information about the build output
--   artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
--   
--   <a>$sel:name:ProjectArtifacts'</a>, <a>projectArtifacts_name</a> -
--   Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
--   
--   <a>$sel:encryptionDisabled:ProjectArtifacts'</a>,
--   <a>projectArtifacts_encryptionDisabled</a> - Set to true if you do not
--   want your output artifacts encrypted. This option is valid only if
--   your artifacts type is Amazon S3. If this is set with another
--   artifacts type, an invalidInputException is thrown.
--   
--   <a>$sel:overrideArtifactName:ProjectArtifacts'</a>,
--   <a>projectArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:ProjectArtifacts'</a>,
--   <a>projectArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:bucketOwnerAccess:ProjectArtifacts'</a>,
--   <a>projectArtifacts_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:namespaceType:ProjectArtifacts'</a>,
--   <a>projectArtifacts_namespaceType</a> - Along with <tt>path</tt> and
--   <tt>name</tt>, the pattern that CodeBuild uses to determine the name
--   and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
--   
--   <a>$sel:type':ProjectArtifacts'</a>, <a>projectArtifacts_type</a> -
--   The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
newProjectArtifacts :: ArtifactsType -> ProjectArtifacts

-- | The type of build output artifact to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
projectArtifacts_packaging :: Lens' ProjectArtifacts (Maybe ArtifactPackaging)

-- | Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
projectArtifacts_path :: Lens' ProjectArtifacts (Maybe Text)

-- | Information about the build output artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
projectArtifacts_location :: Lens' ProjectArtifacts (Maybe Text)

-- | Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
projectArtifacts_name :: Lens' ProjectArtifacts (Maybe Text)

-- | Set to true if you do not want your output artifacts encrypted. This
--   option is valid only if your artifacts type is Amazon S3. If this is
--   set with another artifacts type, an invalidInputException is thrown.
projectArtifacts_encryptionDisabled :: Lens' ProjectArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
projectArtifacts_overrideArtifactName :: Lens' ProjectArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
projectArtifacts_artifactIdentifier :: Lens' ProjectArtifacts (Maybe Text)

-- | Undocumented member.
projectArtifacts_bucketOwnerAccess :: Lens' ProjectArtifacts (Maybe BucketOwnerAccess)

-- | Along with <tt>path</tt> and <tt>name</tt>, the pattern that CodeBuild
--   uses to determine the name and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
projectArtifacts_namespaceType :: Lens' ProjectArtifacts (Maybe ArtifactNamespace)

-- | The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
projectArtifacts_type :: Lens' ProjectArtifacts ArtifactsType

-- | Information about the build badge for the build project.
--   
--   <i>See:</i> <a>newProjectBadge</a> smart constructor.
data ProjectBadge
ProjectBadge' :: Maybe Bool -> Maybe Text -> ProjectBadge

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
[$sel:badgeEnabled:ProjectBadge'] :: ProjectBadge -> Maybe Bool

-- | The publicly-accessible URL through which you can access the build
--   badge for your project.
[$sel:badgeRequestUrl:ProjectBadge'] :: ProjectBadge -> Maybe Text

-- | Create a value of <a>ProjectBadge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:badgeEnabled:ProjectBadge'</a>,
--   <a>projectBadge_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:badgeRequestUrl:ProjectBadge'</a>,
--   <a>projectBadge_badgeRequestUrl</a> - The publicly-accessible URL
--   through which you can access the build badge for your project.
newProjectBadge :: ProjectBadge

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
projectBadge_badgeEnabled :: Lens' ProjectBadge (Maybe Bool)

-- | The publicly-accessible URL through which you can access the build
--   badge for your project.
projectBadge_badgeRequestUrl :: Lens' ProjectBadge (Maybe Text)

-- | Contains configuration information about a batch build project.
--   
--   <i>See:</i> <a>newProjectBuildBatchConfig</a> smart constructor.
data ProjectBuildBatchConfig
ProjectBuildBatchConfig' :: Maybe Bool -> Maybe Int -> Maybe BatchRestrictions -> Maybe BatchReportModeType -> Maybe Text -> ProjectBuildBatchConfig

-- | Specifies if the build artifacts for the batch build should be
--   combined into a single artifact location.
[$sel:combineArtifacts:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Bool

-- | Specifies the maximum amount of time, in minutes, that the batch build
--   must be completed in.
[$sel:timeoutInMins:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Int

-- | A <tt>BatchRestrictions</tt> object that specifies the restrictions
--   for the batch build.
[$sel:restrictions:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe BatchRestrictions

-- | Specifies how build status reports are sent to the source provider for
--   the batch build. This property is only used when the source provider
--   for your project is Bitbucket, GitHub, or GitHub Enterprise, and your
--   project is configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
[$sel:batchReportMode:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe BatchReportModeType

-- | Specifies the service role ARN for the batch build project.
[$sel:serviceRole:ProjectBuildBatchConfig'] :: ProjectBuildBatchConfig -> Maybe Text

-- | Create a value of <a>ProjectBuildBatchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:combineArtifacts:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_combineArtifacts</a> - Specifies if the
--   build artifacts for the batch build should be combined into a single
--   artifact location.
--   
--   <a>$sel:timeoutInMins:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_timeoutInMins</a> - Specifies the maximum
--   amount of time, in minutes, that the batch build must be completed in.
--   
--   <a>$sel:restrictions:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_restrictions</a> - A
--   <tt>BatchRestrictions</tt> object that specifies the restrictions for
--   the batch build.
--   
--   <a>$sel:batchReportMode:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_batchReportMode</a> - Specifies how build
--   status reports are sent to the source provider for the batch build.
--   This property is only used when the source provider for your project
--   is Bitbucket, GitHub, or GitHub Enterprise, and your project is
--   configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
--   
--   <a>$sel:serviceRole:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_serviceRole</a> - Specifies the service
--   role ARN for the batch build project.
newProjectBuildBatchConfig :: ProjectBuildBatchConfig

-- | Specifies if the build artifacts for the batch build should be
--   combined into a single artifact location.
projectBuildBatchConfig_combineArtifacts :: Lens' ProjectBuildBatchConfig (Maybe Bool)

-- | Specifies the maximum amount of time, in minutes, that the batch build
--   must be completed in.
projectBuildBatchConfig_timeoutInMins :: Lens' ProjectBuildBatchConfig (Maybe Int)

-- | A <tt>BatchRestrictions</tt> object that specifies the restrictions
--   for the batch build.
projectBuildBatchConfig_restrictions :: Lens' ProjectBuildBatchConfig (Maybe BatchRestrictions)

-- | Specifies how build status reports are sent to the source provider for
--   the batch build. This property is only used when the source provider
--   for your project is Bitbucket, GitHub, or GitHub Enterprise, and your
--   project is configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
projectBuildBatchConfig_batchReportMode :: Lens' ProjectBuildBatchConfig (Maybe BatchReportModeType)

-- | Specifies the service role ARN for the batch build project.
projectBuildBatchConfig_serviceRole :: Lens' ProjectBuildBatchConfig (Maybe Text)

-- | Information about the cache for the build project.
--   
--   <i>See:</i> <a>newProjectCache</a> smart constructor.
data ProjectCache
ProjectCache' :: Maybe Text -> Maybe [CacheMode] -> CacheType -> ProjectCache

-- | Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
[$sel:location:ProjectCache'] :: ProjectCache -> Maybe Text

-- | An array of strings that specify the local cache modes. You can use
--   one or more local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
[$sel:modes:ProjectCache'] :: ProjectCache -> Maybe [CacheMode]

-- | The type of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
[$sel:type':ProjectCache'] :: ProjectCache -> CacheType

-- | Create a value of <a>ProjectCache</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectCache'</a>, <a>projectCache_location</a> -
--   Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
--   
--   <a>$sel:modes:ProjectCache'</a>, <a>projectCache_modes</a> - An array
--   of strings that specify the local cache modes. You can use one or more
--   local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ProjectCache'</a>, <a>projectCache_type</a> - The type
--   of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
newProjectCache :: CacheType -> ProjectCache

-- | Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
projectCache_location :: Lens' ProjectCache (Maybe Text)

-- | An array of strings that specify the local cache modes. You can use
--   one or more local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
projectCache_modes :: Lens' ProjectCache (Maybe [CacheMode])

-- | The type of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
projectCache_type :: Lens' ProjectCache CacheType

-- | Information about the build environment of the build project.
--   
--   <i>See:</i> <a>newProjectEnvironment</a> smart constructor.
data ProjectEnvironment
ProjectEnvironment' :: Maybe ImagePullCredentialsType -> Maybe Bool -> Maybe RegistryCredential -> Maybe Text -> Maybe [EnvironmentVariable] -> EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
[$sel:imagePullCredentialsType:ProjectEnvironment'] :: ProjectEnvironment -> Maybe ImagePullCredentialsType

-- | Enables running the Docker daemon inside a Docker container. Set to
--   true only if the build project is used to build Docker images.
--   Otherwise, a build that attempts to interact with the Docker daemon
--   fails. The default setting is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
[$sel:privilegedMode:ProjectEnvironment'] :: ProjectEnvironment -> Maybe Bool

-- | The credentials for access to a private registry.
[$sel:registryCredential:ProjectEnvironment'] :: ProjectEnvironment -> Maybe RegistryCredential

-- | The ARN of the Amazon S3 bucket, path prefix, and object key that
--   contains the PEM-encoded certificate for the build project. For more
--   information, see <a>certificate</a> in the <i>CodeBuild User
--   Guide</i>.
[$sel:certificate:ProjectEnvironment'] :: ProjectEnvironment -> Maybe Text

-- | A set of environment variables to make available to builds for this
--   build project.
[$sel:environmentVariables:ProjectEnvironment'] :: ProjectEnvironment -> Maybe [EnvironmentVariable]

-- | The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
[$sel:type':ProjectEnvironment'] :: ProjectEnvironment -> EnvironmentType

-- | The image tag or image digest that identifies the Docker image to use
--   for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
[$sel:image:ProjectEnvironment'] :: ProjectEnvironment -> Text

-- | Information about the compute resources the build project uses.
--   Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
[$sel:computeType:ProjectEnvironment'] :: ProjectEnvironment -> ComputeType

-- | Create a value of <a>ProjectEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePullCredentialsType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_imagePullCredentialsType</a> - The type of
--   credentials CodeBuild uses to pull images in your build. There are two
--   valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
--   
--   <a>$sel:privilegedMode:ProjectEnvironment'</a>,
--   <a>projectEnvironment_privilegedMode</a> - Enables running the Docker
--   daemon inside a Docker container. Set to true only if the build
--   project is used to build Docker images. Otherwise, a build that
--   attempts to interact with the Docker daemon fails. The default setting
--   is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   <a>$sel:registryCredential:ProjectEnvironment'</a>,
--   <a>projectEnvironment_registryCredential</a> - The credentials for
--   access to a private registry.
--   
--   <a>$sel:certificate:ProjectEnvironment'</a>,
--   <a>projectEnvironment_certificate</a> - The ARN of the Amazon S3
--   bucket, path prefix, and object key that contains the PEM-encoded
--   certificate for the build project. For more information, see
--   <a>certificate</a> in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:environmentVariables:ProjectEnvironment'</a>,
--   <a>projectEnvironment_environmentVariables</a> - A set of environment
--   variables to make available to builds for this build project.
--   
--   <a>$sel:type':ProjectEnvironment'</a>, <a>projectEnvironment_type</a>
--   - The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:image:ProjectEnvironment'</a>, <a>projectEnvironment_image</a>
--   - The image tag or image digest that identifies the Docker image to
--   use for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:computeType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_computeType</a> - Information about the compute
--   resources the build project uses. Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
newProjectEnvironment :: EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
projectEnvironment_imagePullCredentialsType :: Lens' ProjectEnvironment (Maybe ImagePullCredentialsType)

-- | Enables running the Docker daemon inside a Docker container. Set to
--   true only if the build project is used to build Docker images.
--   Otherwise, a build that attempts to interact with the Docker daemon
--   fails. The default setting is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
projectEnvironment_privilegedMode :: Lens' ProjectEnvironment (Maybe Bool)

-- | The credentials for access to a private registry.
projectEnvironment_registryCredential :: Lens' ProjectEnvironment (Maybe RegistryCredential)

-- | The ARN of the Amazon S3 bucket, path prefix, and object key that
--   contains the PEM-encoded certificate for the build project. For more
--   information, see <a>certificate</a> in the <i>CodeBuild User
--   Guide</i>.
projectEnvironment_certificate :: Lens' ProjectEnvironment (Maybe Text)

-- | A set of environment variables to make available to builds for this
--   build project.
projectEnvironment_environmentVariables :: Lens' ProjectEnvironment (Maybe [EnvironmentVariable])

-- | The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
projectEnvironment_type :: Lens' ProjectEnvironment EnvironmentType

-- | The image tag or image digest that identifies the Docker image to use
--   for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
projectEnvironment_image :: Lens' ProjectEnvironment Text

-- | Information about the compute resources the build project uses.
--   Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
projectEnvironment_computeType :: Lens' ProjectEnvironment ComputeType

-- | Information about a file system created by Amazon Elastic File System
--   (EFS). For more information, see <a>What Is Amazon Elastic File
--   System?</a>
--   
--   <i>See:</i> <a>newProjectFileSystemLocation</a> smart constructor.
data ProjectFileSystemLocation
ProjectFileSystemLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FileSystemType -> Maybe Text -> ProjectFileSystemLocation

-- | A string that specifies the location of the file system created by
--   Amazon EFS. Its format is <tt>efs-dns-name:/directory-path</tt>. You
--   can find the DNS name of file system when you view it in the Amazon
--   EFS console. The directory path is a path to a directory in the file
--   system that CodeBuild mounts. For example, if the DNS name of a file
--   system is <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its
--   mount directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
[$sel:location:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The name used to access a file system created by Amazon EFS. CodeBuild
--   creates an environment variable by appending the <tt>identifier</tt>
--   in all capital letters to <tt>CODEBUILD_</tt>. For example, if you
--   specify <tt>my_efs</tt> for <tt>identifier</tt>, a new environment
--   variable is create named <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
[$sel:identifier:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The mount options for a file system created by Amazon EFS. The default
--   mount options used by CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
[$sel:mountOptions:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | The type of the file system. The one supported type is <tt>EFS</tt>.
[$sel:type':ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe FileSystemType

-- | The location in the container where you mount the file system.
[$sel:mountPoint:ProjectFileSystemLocation'] :: ProjectFileSystemLocation -> Maybe Text

-- | Create a value of <a>ProjectFileSystemLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_location</a> - A string that specifies
--   the location of the file system created by Amazon EFS. Its format is
--   <tt>efs-dns-name:/directory-path</tt>. You can find the DNS name of
--   file system when you view it in the Amazon EFS console. The directory
--   path is a path to a directory in the file system that CodeBuild
--   mounts. For example, if the DNS name of a file system is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its mount
--   directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
--   
--   <a>$sel:identifier:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_identifier</a> - The name used to access
--   a file system created by Amazon EFS. CodeBuild creates an environment
--   variable by appending the <tt>identifier</tt> in all capital letters
--   to <tt>CODEBUILD_</tt>. For example, if you specify <tt>my_efs</tt>
--   for <tt>identifier</tt>, a new environment variable is create named
--   <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
--   
--   <a>$sel:mountOptions:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountOptions</a> - The mount options for
--   a file system created by Amazon EFS. The default mount options used by
--   CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
--   
--   <a>$sel:type':ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_type</a> - The type of the file system.
--   The one supported type is <tt>EFS</tt>.
--   
--   <a>$sel:mountPoint:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountPoint</a> - The location in the
--   container where you mount the file system.
newProjectFileSystemLocation :: ProjectFileSystemLocation

-- | A string that specifies the location of the file system created by
--   Amazon EFS. Its format is <tt>efs-dns-name:/directory-path</tt>. You
--   can find the DNS name of file system when you view it in the Amazon
--   EFS console. The directory path is a path to a directory in the file
--   system that CodeBuild mounts. For example, if the DNS name of a file
--   system is <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its
--   mount directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
projectFileSystemLocation_location :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The name used to access a file system created by Amazon EFS. CodeBuild
--   creates an environment variable by appending the <tt>identifier</tt>
--   in all capital letters to <tt>CODEBUILD_</tt>. For example, if you
--   specify <tt>my_efs</tt> for <tt>identifier</tt>, a new environment
--   variable is create named <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
projectFileSystemLocation_identifier :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The mount options for a file system created by Amazon EFS. The default
--   mount options used by CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
projectFileSystemLocation_mountOptions :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The type of the file system. The one supported type is <tt>EFS</tt>.
projectFileSystemLocation_type :: Lens' ProjectFileSystemLocation (Maybe FileSystemType)

-- | The location in the container where you mount the file system.
projectFileSystemLocation_mountPoint :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | Information about the build input source code for the build project.
--   
--   <i>See:</i> <a>newProjectSource</a> smart constructor.
data ProjectSource
ProjectSource' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe SourceAuth -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe GitSubmodulesConfig -> Maybe BuildStatusConfig -> SourceType -> ProjectSource

-- | Set to true to report the status of a build's start and finish to your
--   source provider. This option is valid only when your source provider
--   is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use
--   a different source provider, an <tt>invalidInputException</tt> is
--   thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
[$sel:reportBuildStatus:ProjectSource'] :: ProjectSource -> Maybe Bool

-- | Enable this flag to ignore SSL warnings while connecting to the
--   project source code.
[$sel:insecureSsl:ProjectSource'] :: ProjectSource -> Maybe Bool

-- | Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
[$sel:location:ProjectSource'] :: ProjectSource -> Maybe Text

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
[$sel:auth:ProjectSource'] :: ProjectSource -> Maybe SourceAuth

-- | The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
[$sel:buildspec:ProjectSource'] :: ProjectSource -> Maybe Text

-- | An identifier for this project source. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
[$sel:sourceIdentifier:ProjectSource'] :: ProjectSource -> Maybe Text

-- | Information about the Git clone depth for the build project.
[$sel:gitCloneDepth:ProjectSource'] :: ProjectSource -> Maybe Natural

-- | Information about the Git submodules configuration for the build
--   project.
[$sel:gitSubmodulesConfig:ProjectSource'] :: ProjectSource -> Maybe GitSubmodulesConfig

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
[$sel:buildStatusConfig:ProjectSource'] :: ProjectSource -> Maybe BuildStatusConfig

-- | The type of repository that contains the source code to be built.
--   Valid values include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
[$sel:type':ProjectSource'] :: ProjectSource -> SourceType

-- | Create a value of <a>ProjectSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportBuildStatus:ProjectSource'</a>,
--   <a>projectSource_reportBuildStatus</a> - Set to true to report the
--   status of a build's start and finish to your source provider. This
--   option is valid only when your source provider is GitHub, GitHub
--   Enterprise, or Bitbucket. If this is set and you use a different
--   source provider, an <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
--   
--   <a>$sel:insecureSsl:ProjectSource'</a>,
--   <a>projectSource_insecureSsl</a> - Enable this flag to ignore SSL
--   warnings while connecting to the project source code.
--   
--   <a>$sel:location:ProjectSource'</a>, <a>projectSource_location</a> -
--   Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
--   
--   <a>$sel:auth:ProjectSource'</a>, <a>projectSource_auth</a> -
--   Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <a>$sel:buildspec:ProjectSource'</a>, <a>projectSource_buildspec</a> -
--   The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:sourceIdentifier:ProjectSource'</a>,
--   <a>projectSource_sourceIdentifier</a> - An identifier for this project
--   source. The identifier can only contain alphanumeric characters and
--   underscores, and must be less than 128 characters in length.
--   
--   <a>$sel:gitCloneDepth:ProjectSource'</a>,
--   <a>projectSource_gitCloneDepth</a> - Information about the Git clone
--   depth for the build project.
--   
--   <a>$sel:gitSubmodulesConfig:ProjectSource'</a>,
--   <a>projectSource_gitSubmodulesConfig</a> - Information about the Git
--   submodules configuration for the build project.
--   
--   <a>$sel:buildStatusConfig:ProjectSource'</a>,
--   <a>projectSource_buildStatusConfig</a> - Contains information that
--   defines how the build project reports the build status to the source
--   provider. This option is only used when the source provider is
--   <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or <tt>BITBUCKET</tt>.
--   
--   <a>$sel:type':ProjectSource'</a>, <a>projectSource_type</a> - The type
--   of repository that contains the source code to be built. Valid values
--   include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
newProjectSource :: SourceType -> ProjectSource

-- | Set to true to report the status of a build's start and finish to your
--   source provider. This option is valid only when your source provider
--   is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use
--   a different source provider, an <tt>invalidInputException</tt> is
--   thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
projectSource_reportBuildStatus :: Lens' ProjectSource (Maybe Bool)

-- | Enable this flag to ignore SSL warnings while connecting to the
--   project source code.
projectSource_insecureSsl :: Lens' ProjectSource (Maybe Bool)

-- | Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
projectSource_location :: Lens' ProjectSource (Maybe Text)

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
projectSource_auth :: Lens' ProjectSource (Maybe SourceAuth)

-- | The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
projectSource_buildspec :: Lens' ProjectSource (Maybe Text)

-- | An identifier for this project source. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
projectSource_sourceIdentifier :: Lens' ProjectSource (Maybe Text)

-- | Information about the Git clone depth for the build project.
projectSource_gitCloneDepth :: Lens' ProjectSource (Maybe Natural)

-- | Information about the Git submodules configuration for the build
--   project.
projectSource_gitSubmodulesConfig :: Lens' ProjectSource (Maybe GitSubmodulesConfig)

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
projectSource_buildStatusConfig :: Lens' ProjectSource (Maybe BuildStatusConfig)

-- | The type of repository that contains the source code to be built.
--   Valid values include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
projectSource_type :: Lens' ProjectSource SourceType

-- | A source identifier and its corresponding version.
--   
--   <i>See:</i> <a>newProjectSourceVersion</a> smart constructor.
data ProjectSourceVersion
ProjectSourceVersion' :: Text -> Text -> ProjectSourceVersion

-- | An identifier for a source in the build project. The identifier can
--   only contain alphanumeric characters and underscores, and must be less
--   than 128 characters in length.
[$sel:sourceIdentifier:ProjectSourceVersion'] :: ProjectSourceVersion -> Text

-- | The source version for the corresponding source identifier. If
--   specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:ProjectSourceVersion'] :: ProjectSourceVersion -> Text

-- | Create a value of <a>ProjectSourceVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceIdentifier:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceIdentifier</a> - An identifier for a
--   source in the build project. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
--   
--   <a>$sel:sourceVersion:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceVersion</a> - The source version for the
--   corresponding source identifier. If specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
newProjectSourceVersion :: Text -> Text -> ProjectSourceVersion

-- | An identifier for a source in the build project. The identifier can
--   only contain alphanumeric characters and underscores, and must be less
--   than 128 characters in length.
projectSourceVersion_sourceIdentifier :: Lens' ProjectSourceVersion Text

-- | The source version for the corresponding source identifier. If
--   specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
projectSourceVersion_sourceVersion :: Lens' ProjectSourceVersion Text

-- | Information about credentials that provide access to a private Docker
--   registry. When this is set:
--   
--   <ul>
--   <li><tt>imagePullCredentialsType</tt> must be set to
--   <tt>SERVICE_ROLE</tt>.</li>
--   <li>images cannot be curated or an Amazon ECR image.</li>
--   </ul>
--   
--   For more information, see <a>Private Registry with Secrets Manager
--   Sample for CodeBuild</a>.
--   
--   <i>See:</i> <a>newRegistryCredential</a> smart constructor.
data RegistryCredential
RegistryCredential' :: Text -> CredentialProviderType -> RegistryCredential

-- | The Amazon Resource Name (ARN) or name of credentials created using
--   Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
[$sel:credential:RegistryCredential'] :: RegistryCredential -> Text

-- | The service that created the credentials to access a private Docker
--   registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.
[$sel:credentialProvider:RegistryCredential'] :: RegistryCredential -> CredentialProviderType

-- | Create a value of <a>RegistryCredential</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credential:RegistryCredential'</a>,
--   <a>registryCredential_credential</a> - The Amazon Resource Name (ARN)
--   or name of credentials created using Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
--   
--   <a>$sel:credentialProvider:RegistryCredential'</a>,
--   <a>registryCredential_credentialProvider</a> - The service that
--   created the credentials to access a private Docker registry. The valid
--   value, SECRETS_MANAGER, is for Secrets Manager.
newRegistryCredential :: Text -> CredentialProviderType -> RegistryCredential

-- | The Amazon Resource Name (ARN) or name of credentials created using
--   Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
registryCredential_credential :: Lens' RegistryCredential Text

-- | The service that created the credentials to access a private Docker
--   registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.
registryCredential_credentialProvider :: Lens' RegistryCredential CredentialProviderType

-- | Information about the results from running a series of test cases
--   during the run of a build project. The test cases are specified in the
--   buildspec for the build project using one or more paths to the test
--   case files. You can specify any type of tests you want, such as unit
--   tests, integration tests, and functional tests.
--   
--   <i>See:</i> <a>newReport</a> smart constructor.
data Report
Report' :: Maybe Text -> Maybe ReportStatusType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CodeCoverageReportSummary -> Maybe TestReportSummary -> Maybe ReportType -> Maybe ReportExportConfig -> Report

-- | The ARN of the report group associated with this report.
[$sel:reportGroupArn:Report'] :: Report -> Maybe Text

-- | The status of this report.
[$sel:status:Report'] :: Report -> Maybe ReportStatusType

-- | The date and time a report expires. A report expires 30 days after it
--   is created. An expired report is not available to view in CodeBuild.
[$sel:expired:Report'] :: Report -> Maybe POSIX

-- | The ARN of the build run that generated this report.
[$sel:executionId:Report'] :: Report -> Maybe Text

-- | A boolean that specifies if this report run is truncated. The list of
--   test cases is truncated after the maximum number of test cases is
--   reached.
[$sel:truncated:Report'] :: Report -> Maybe Bool

-- | The ARN of the report run.
[$sel:arn:Report'] :: Report -> Maybe Text

-- | The date and time this report run occurred.
[$sel:created:Report'] :: Report -> Maybe POSIX

-- | The name of the report that was run.
[$sel:name:Report'] :: Report -> Maybe Text

-- | A <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
[$sel:codeCoverageSummary:Report'] :: Report -> Maybe CodeCoverageReportSummary

-- | A <tt>TestReportSummary</tt> object that contains information about
--   this test report.
[$sel:testSummary:Report'] :: Report -> Maybe TestReportSummary

-- | The type of the report that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
[$sel:type':Report'] :: Report -> Maybe ReportType

-- | Information about where the raw data used to generate this report was
--   exported.
[$sel:exportConfig:Report'] :: Report -> Maybe ReportExportConfig

-- | Create a value of <a>Report</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroupArn:Report'</a>, <a>report_reportGroupArn</a> - The
--   ARN of the report group associated with this report.
--   
--   <a>$sel:status:Report'</a>, <a>report_status</a> - The status of this
--   report.
--   
--   <a>$sel:expired:Report'</a>, <a>report_expired</a> - The date and time
--   a report expires. A report expires 30 days after it is created. An
--   expired report is not available to view in CodeBuild.
--   
--   <a>$sel:executionId:Report'</a>, <a>report_executionId</a> - The ARN
--   of the build run that generated this report.
--   
--   <a>$sel:truncated:Report'</a>, <a>report_truncated</a> - A boolean
--   that specifies if this report run is truncated. The list of test cases
--   is truncated after the maximum number of test cases is reached.
--   
--   <a>$sel:arn:Report'</a>, <a>report_arn</a> - The ARN of the report
--   run.
--   
--   <a>$sel:created:Report'</a>, <a>report_created</a> - The date and time
--   this report run occurred.
--   
--   <a>$sel:name:Report'</a>, <a>report_name</a> - The name of the report
--   that was run.
--   
--   <a>$sel:codeCoverageSummary:Report'</a>,
--   <a>report_codeCoverageSummary</a> - A
--   <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
--   
--   <a>$sel:testSummary:Report'</a>, <a>report_testSummary</a> - A
--   <tt>TestReportSummary</tt> object that contains information about this
--   test report.
--   
--   <a>$sel:type':Report'</a>, <a>report_type</a> - The type of the report
--   that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
--   
--   <a>$sel:exportConfig:Report'</a>, <a>report_exportConfig</a> -
--   Information about where the raw data used to generate this report was
--   exported.
newReport :: Report

-- | The ARN of the report group associated with this report.
report_reportGroupArn :: Lens' Report (Maybe Text)

-- | The status of this report.
report_status :: Lens' Report (Maybe ReportStatusType)

-- | The date and time a report expires. A report expires 30 days after it
--   is created. An expired report is not available to view in CodeBuild.
report_expired :: Lens' Report (Maybe UTCTime)

-- | The ARN of the build run that generated this report.
report_executionId :: Lens' Report (Maybe Text)

-- | A boolean that specifies if this report run is truncated. The list of
--   test cases is truncated after the maximum number of test cases is
--   reached.
report_truncated :: Lens' Report (Maybe Bool)

-- | The ARN of the report run.
report_arn :: Lens' Report (Maybe Text)

-- | The date and time this report run occurred.
report_created :: Lens' Report (Maybe UTCTime)

-- | The name of the report that was run.
report_name :: Lens' Report (Maybe Text)

-- | A <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
report_codeCoverageSummary :: Lens' Report (Maybe CodeCoverageReportSummary)

-- | A <tt>TestReportSummary</tt> object that contains information about
--   this test report.
report_testSummary :: Lens' Report (Maybe TestReportSummary)

-- | The type of the report that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
report_type :: Lens' Report (Maybe ReportType)

-- | Information about where the raw data used to generate this report was
--   exported.
report_exportConfig :: Lens' Report (Maybe ReportExportConfig)

-- | Information about the location where the run of a report is exported.
--   
--   <i>See:</i> <a>newReportExportConfig</a> smart constructor.
data ReportExportConfig
ReportExportConfig' :: Maybe ReportExportConfigType -> Maybe S3ReportExportConfig -> ReportExportConfig

-- | The export configuration type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
[$sel:exportConfigType:ReportExportConfig'] :: ReportExportConfig -> Maybe ReportExportConfigType

-- | A <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
[$sel:s3Destination:ReportExportConfig'] :: ReportExportConfig -> Maybe S3ReportExportConfig

-- | Create a value of <a>ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportConfigType:ReportExportConfig'</a>,
--   <a>reportExportConfig_exportConfigType</a> - The export configuration
--   type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
--   
--   <a>$sel:s3Destination:ReportExportConfig'</a>,
--   <a>reportExportConfig_s3Destination</a> - A
--   <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
newReportExportConfig :: ReportExportConfig

-- | The export configuration type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
reportExportConfig_exportConfigType :: Lens' ReportExportConfig (Maybe ReportExportConfigType)

-- | A <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
reportExportConfig_s3Destination :: Lens' ReportExportConfig (Maybe S3ReportExportConfig)

-- | A filter used to return reports with the status specified by the input
--   <tt>status</tt> parameter.
--   
--   <i>See:</i> <a>newReportFilter</a> smart constructor.
data ReportFilter
ReportFilter' :: Maybe ReportStatusType -> ReportFilter

-- | The status used to filter reports. You can filter using one status
--   only.
[$sel:status:ReportFilter'] :: ReportFilter -> Maybe ReportStatusType

-- | Create a value of <a>ReportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportFilter'</a>, <a>reportFilter_status</a> - The
--   status used to filter reports. You can filter using one status only.
newReportFilter :: ReportFilter

-- | The status used to filter reports. You can filter using one status
--   only.
reportFilter_status :: Lens' ReportFilter (Maybe ReportStatusType)

-- | A series of reports. Each report contains information about the
--   results from running a series of test cases. You specify the test
--   cases for a report group in the buildspec for a build project using
--   one or more paths to the test case files.
--   
--   <i>See:</i> <a>newReportGroup</a> smart constructor.
data ReportGroup
ReportGroup' :: Maybe ReportGroupStatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ReportType -> Maybe POSIX -> Maybe ReportExportConfig -> Maybe [Tag] -> ReportGroup

-- | The status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
[$sel:status:ReportGroup'] :: ReportGroup -> Maybe ReportGroupStatusType

-- | The ARN of the <tt>ReportGroup</tt>.
[$sel:arn:ReportGroup'] :: ReportGroup -> Maybe Text

-- | The date and time this <tt>ReportGroup</tt> was created.
[$sel:created:ReportGroup'] :: ReportGroup -> Maybe POSIX

-- | The name of the <tt>ReportGroup</tt>.
[$sel:name:ReportGroup'] :: ReportGroup -> Maybe Text

-- | The type of the <tt>ReportGroup</tt>. This can be one of the following
--   values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
[$sel:type':ReportGroup'] :: ReportGroup -> Maybe ReportType

-- | The date and time this <tt>ReportGroup</tt> was last modified.
[$sel:lastModified:ReportGroup'] :: ReportGroup -> Maybe POSIX

-- | Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
[$sel:exportConfig:ReportGroup'] :: ReportGroup -> Maybe ReportExportConfig

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
[$sel:tags:ReportGroup'] :: ReportGroup -> Maybe [Tag]

-- | Create a value of <a>ReportGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportGroup'</a>, <a>reportGroup_status</a> - The
--   status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
--   
--   <a>$sel:arn:ReportGroup'</a>, <a>reportGroup_arn</a> - The ARN of the
--   <tt>ReportGroup</tt>.
--   
--   <a>$sel:created:ReportGroup'</a>, <a>reportGroup_created</a> - The
--   date and time this <tt>ReportGroup</tt> was created.
--   
--   <a>$sel:name:ReportGroup'</a>, <a>reportGroup_name</a> - The name of
--   the <tt>ReportGroup</tt>.
--   
--   <a>$sel:type':ReportGroup'</a>, <a>reportGroup_type</a> - The type of
--   the <tt>ReportGroup</tt>. This can be one of the following values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
--   
--   <a>$sel:lastModified:ReportGroup'</a>, <a>reportGroup_lastModified</a>
--   - The date and time this <tt>ReportGroup</tt> was last modified.
--   
--   <a>$sel:exportConfig:ReportGroup'</a>, <a>reportGroup_exportConfig</a>
--   - Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
--   
--   <a>$sel:tags:ReportGroup'</a>, <a>reportGroup_tags</a> - A list of tag
--   key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
newReportGroup :: ReportGroup

-- | The status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
reportGroup_status :: Lens' ReportGroup (Maybe ReportGroupStatusType)

-- | The ARN of the <tt>ReportGroup</tt>.
reportGroup_arn :: Lens' ReportGroup (Maybe Text)

-- | The date and time this <tt>ReportGroup</tt> was created.
reportGroup_created :: Lens' ReportGroup (Maybe UTCTime)

-- | The name of the <tt>ReportGroup</tt>.
reportGroup_name :: Lens' ReportGroup (Maybe Text)

-- | The type of the <tt>ReportGroup</tt>. This can be one of the following
--   values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
reportGroup_type :: Lens' ReportGroup (Maybe ReportType)

-- | The date and time this <tt>ReportGroup</tt> was last modified.
reportGroup_lastModified :: Lens' ReportGroup (Maybe UTCTime)

-- | Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
reportGroup_exportConfig :: Lens' ReportGroup (Maybe ReportExportConfig)

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
reportGroup_tags :: Lens' ReportGroup (Maybe [Tag])

-- | Contains trend statistics for a set of reports. The actual values
--   depend on the type of trend being collected. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportGroupTrendStats</a> smart constructor.
data ReportGroupTrendStats
ReportGroupTrendStats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReportGroupTrendStats

-- | Contains the maximum value analyzed.
[$sel:max:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Contains the average of all values analyzed.
[$sel:average:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Contains the minimum value analyzed.
[$sel:min:ReportGroupTrendStats'] :: ReportGroupTrendStats -> Maybe Text

-- | Create a value of <a>ReportGroupTrendStats</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_max</a> - Contains the maximum value
--   analyzed.
--   
--   <a>$sel:average:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_average</a> - Contains the average of all
--   values analyzed.
--   
--   <a>$sel:min:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_min</a> - Contains the minimum value
--   analyzed.
newReportGroupTrendStats :: ReportGroupTrendStats

-- | Contains the maximum value analyzed.
reportGroupTrendStats_max :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the average of all values analyzed.
reportGroupTrendStats_average :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the minimum value analyzed.
reportGroupTrendStats_min :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the unmodified data for the report. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportWithRawData</a> smart constructor.
data ReportWithRawData
ReportWithRawData' :: Maybe Text -> Maybe Text -> ReportWithRawData

-- | The value of the requested data field from the report.
[$sel:data':ReportWithRawData'] :: ReportWithRawData -> Maybe Text

-- | The ARN of the report.
[$sel:reportArn:ReportWithRawData'] :: ReportWithRawData -> Maybe Text

-- | Create a value of <a>ReportWithRawData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ReportWithRawData'</a>, <a>reportWithRawData_data</a> -
--   The value of the requested data field from the report.
--   
--   <a>$sel:reportArn:ReportWithRawData'</a>,
--   <a>reportWithRawData_reportArn</a> - The ARN of the report.
newReportWithRawData :: ReportWithRawData

-- | The value of the requested data field from the report.
reportWithRawData_data :: Lens' ReportWithRawData (Maybe Text)

-- | The ARN of the report.
reportWithRawData_reportArn :: Lens' ReportWithRawData (Maybe Text)

-- | Represents a resolved build artifact. A resolved artifact is an
--   artifact that is built and deployed to the destination, such as Amazon
--   S3.
--   
--   <i>See:</i> <a>newResolvedArtifact</a> smart constructor.
data ResolvedArtifact
ResolvedArtifact' :: Maybe Text -> Maybe Text -> Maybe ArtifactsType -> ResolvedArtifact

-- | The location of the artifact.
[$sel:location:ResolvedArtifact'] :: ResolvedArtifact -> Maybe Text

-- | The identifier of the artifact.
[$sel:identifier:ResolvedArtifact'] :: ResolvedArtifact -> Maybe Text

-- | Specifies the type of artifact.
[$sel:type':ResolvedArtifact'] :: ResolvedArtifact -> Maybe ArtifactsType

-- | Create a value of <a>ResolvedArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_location</a> - The location of the artifact.
--   
--   <a>$sel:identifier:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_identifier</a> - The identifier of the artifact.
--   
--   <a>$sel:type':ResolvedArtifact'</a>, <a>resolvedArtifact_type</a> -
--   Specifies the type of artifact.
newResolvedArtifact :: ResolvedArtifact

-- | The location of the artifact.
resolvedArtifact_location :: Lens' ResolvedArtifact (Maybe Text)

-- | The identifier of the artifact.
resolvedArtifact_identifier :: Lens' ResolvedArtifact (Maybe Text)

-- | Specifies the type of artifact.
resolvedArtifact_type :: Lens' ResolvedArtifact (Maybe ArtifactsType)

-- | Information about S3 logs for a build project.
--   
--   <i>See:</i> <a>newS3LogsConfig</a> smart constructor.
data S3LogsConfig
S3LogsConfig' :: Maybe Text -> Maybe Bool -> Maybe BucketOwnerAccess -> LogsConfigStatusType -> S3LogsConfig

-- | The ARN of an S3 bucket and the path prefix for S3 logs. If your
--   Amazon S3 bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
[$sel:location:S3LogsConfig'] :: S3LogsConfig -> Maybe Text

-- | Set to true if you do not want your S3 build log output encrypted. By
--   default S3 build logs are encrypted.
[$sel:encryptionDisabled:S3LogsConfig'] :: S3LogsConfig -> Maybe Bool
[$sel:bucketOwnerAccess:S3LogsConfig'] :: S3LogsConfig -> Maybe BucketOwnerAccess

-- | The current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
[$sel:status:S3LogsConfig'] :: S3LogsConfig -> LogsConfigStatusType

-- | Create a value of <a>S3LogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3LogsConfig'</a>, <a>s3LogsConfig_location</a> - The
--   ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3
--   bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
--   
--   <a>$sel:encryptionDisabled:S3LogsConfig'</a>,
--   <a>s3LogsConfig_encryptionDisabled</a> - Set to true if you do not
--   want your S3 build log output encrypted. By default S3 build logs are
--   encrypted.
--   
--   <a>$sel:bucketOwnerAccess:S3LogsConfig'</a>,
--   <a>s3LogsConfig_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:status:S3LogsConfig'</a>, <a>s3LogsConfig_status</a> - The
--   current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
newS3LogsConfig :: LogsConfigStatusType -> S3LogsConfig

-- | The ARN of an S3 bucket and the path prefix for S3 logs. If your
--   Amazon S3 bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
s3LogsConfig_location :: Lens' S3LogsConfig (Maybe Text)

-- | Set to true if you do not want your S3 build log output encrypted. By
--   default S3 build logs are encrypted.
s3LogsConfig_encryptionDisabled :: Lens' S3LogsConfig (Maybe Bool)

-- | Undocumented member.
s3LogsConfig_bucketOwnerAccess :: Lens' S3LogsConfig (Maybe BucketOwnerAccess)

-- | The current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
s3LogsConfig_status :: Lens' S3LogsConfig LogsConfigStatusType

-- | Information about the S3 bucket where the raw data of a report are
--   exported.
--   
--   <i>See:</i> <a>newS3ReportExportConfig</a> smart constructor.
data S3ReportExportConfig
S3ReportExportConfig' :: Maybe ReportPackagingType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> S3ReportExportConfig

-- | The type of build output artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
[$sel:packaging:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe ReportPackagingType

-- | The path to the exported report's raw data results.
[$sel:path:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | The name of the S3 bucket where the raw data of a report are exported.
[$sel:bucket:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | The Amazon Web Services account identifier of the owner of the Amazon
--   S3 bucket. This allows report data to be exported to an Amazon S3
--   bucket that is owned by an account other than the account running the
--   build.
[$sel:bucketOwner:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | A boolean value that specifies if the results of a report are
--   encrypted.
[$sel:encryptionDisabled:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Bool

-- | The encryption key for the report's encrypted raw data.
[$sel:encryptionKey:S3ReportExportConfig'] :: S3ReportExportConfig -> Maybe Text

-- | Create a value of <a>S3ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_packaging</a> - The type of build output
--   artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
--   
--   <a>$sel:path:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_path</a> - The path to the exported report's
--   raw data results.
--   
--   <a>$sel:bucket:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucket</a> - The name of the S3 bucket where
--   the raw data of a report are exported.
--   
--   <a>$sel:bucketOwner:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucketOwner</a> - The Amazon Web Services
--   account identifier of the owner of the Amazon S3 bucket. This allows
--   report data to be exported to an Amazon S3 bucket that is owned by an
--   account other than the account running the build.
--   
--   <a>$sel:encryptionDisabled:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionDisabled</a> - A boolean value that
--   specifies if the results of a report are encrypted.
--   
--   <a>$sel:encryptionKey:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionKey</a> - The encryption key for the
--   report's encrypted raw data.
newS3ReportExportConfig :: S3ReportExportConfig

-- | The type of build output artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
s3ReportExportConfig_packaging :: Lens' S3ReportExportConfig (Maybe ReportPackagingType)

-- | The path to the exported report's raw data results.
s3ReportExportConfig_path :: Lens' S3ReportExportConfig (Maybe Text)

-- | The name of the S3 bucket where the raw data of a report are exported.
s3ReportExportConfig_bucket :: Lens' S3ReportExportConfig (Maybe Text)

-- | The Amazon Web Services account identifier of the owner of the Amazon
--   S3 bucket. This allows report data to be exported to an Amazon S3
--   bucket that is owned by an account other than the account running the
--   build.
s3ReportExportConfig_bucketOwner :: Lens' S3ReportExportConfig (Maybe Text)

-- | A boolean value that specifies if the results of a report are
--   encrypted.
s3ReportExportConfig_encryptionDisabled :: Lens' S3ReportExportConfig (Maybe Bool)

-- | The encryption key for the report's encrypted raw data.
s3ReportExportConfig_encryptionKey :: Lens' S3ReportExportConfig (Maybe Text)

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <i>See:</i> <a>newSourceAuth</a> smart constructor.
data SourceAuth
SourceAuth' :: Maybe Text -> SourceAuthType -> SourceAuth

-- | The resource value that applies to the specified authorization type.
[$sel:resource:SourceAuth'] :: SourceAuth -> Maybe Text

-- | This data type is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
[$sel:type':SourceAuth'] :: SourceAuth -> SourceAuthType

-- | Create a value of <a>SourceAuth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:SourceAuth'</a>, <a>sourceAuth_resource</a> - The
--   resource value that applies to the specified authorization type.
--   
--   <a>$sel:type':SourceAuth'</a>, <a>sourceAuth_type</a> - This data type
--   is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
newSourceAuth :: SourceAuthType -> SourceAuth

-- | The resource value that applies to the specified authorization type.
sourceAuth_resource :: Lens' SourceAuth (Maybe Text)

-- | This data type is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
sourceAuth_type :: Lens' SourceAuth SourceAuthType

-- | Information about the credentials for a GitHub, GitHub Enterprise, or
--   Bitbucket repository.
--   
--   <i>See:</i> <a>newSourceCredentialsInfo</a> smart constructor.
data SourceCredentialsInfo
SourceCredentialsInfo' :: Maybe Text -> Maybe ServerType -> Maybe AuthType -> SourceCredentialsInfo

-- | The Amazon Resource Name (ARN) of the token.
[$sel:arn:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe Text

-- | The type of source provider. The valid options are GITHUB,
--   GITHUB_ENTERPRISE, or BITBUCKET.
[$sel:serverType:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe ServerType

-- | The type of authentication used by the credentials. Valid options are
--   OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.
[$sel:authType:SourceCredentialsInfo'] :: SourceCredentialsInfo -> Maybe AuthType

-- | Create a value of <a>SourceCredentialsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_arn</a> - The Amazon Resource Name (ARN) of
--   the token.
--   
--   <a>$sel:serverType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_serverType</a> - The type of source provider.
--   The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.
--   
--   <a>$sel:authType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_authType</a> - The type of authentication
--   used by the credentials. Valid options are OAUTH, BASIC_AUTH, or
--   PERSONAL_ACCESS_TOKEN.
newSourceCredentialsInfo :: SourceCredentialsInfo

-- | The Amazon Resource Name (ARN) of the token.
sourceCredentialsInfo_arn :: Lens' SourceCredentialsInfo (Maybe Text)

-- | The type of source provider. The valid options are GITHUB,
--   GITHUB_ENTERPRISE, or BITBUCKET.
sourceCredentialsInfo_serverType :: Lens' SourceCredentialsInfo (Maybe ServerType)

-- | The type of authentication used by the credentials. Valid options are
--   OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.
sourceCredentialsInfo_authType :: Lens' SourceCredentialsInfo (Maybe AuthType)

-- | A tag, consisting of a key and a value.
--   
--   This tag is available for use by Amazon Web Services services that
--   support tags in CodeBuild.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
newTag :: Tag

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)

-- | Information about a test case created using a framework such as NUnit
--   or Cucumber. A test case might be a unit test or a configuration test.
--   
--   <i>See:</i> <a>newTestCase</a> smart constructor.
data TestCase
TestCase' :: Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> TestCase

-- | The number of nanoseconds it took to run this test case.
[$sel:durationInNanoSeconds:TestCase'] :: TestCase -> Maybe Integer

-- | The status returned by the test case after it was run. Valid statuses
--   are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>,
--   <tt>SKIPPED</tt>, and <tt>UNKNOWN</tt>.
[$sel:status:TestCase'] :: TestCase -> Maybe Text

-- | The date and time a test case expires. A test case expires 30 days
--   after it is created. An expired test case is not available to view in
--   CodeBuild.
[$sel:expired:TestCase'] :: TestCase -> Maybe POSIX

-- | A string that is applied to a series of related test cases. CodeBuild
--   generates the prefix. The prefix depends on the framework used to
--   generate the tests.
[$sel:prefix:TestCase'] :: TestCase -> Maybe Text

-- | The name of the test case.
[$sel:name:TestCase'] :: TestCase -> Maybe Text

-- | The path to the raw data file that contains the test result.
[$sel:testRawDataPath:TestCase'] :: TestCase -> Maybe Text

-- | A message associated with a test case. For example, an error message
--   or stack trace.
[$sel:message:TestCase'] :: TestCase -> Maybe Text

-- | The ARN of the report to which the test case belongs.
[$sel:reportArn:TestCase'] :: TestCase -> Maybe Text

-- | Create a value of <a>TestCase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInNanoSeconds:TestCase'</a>,
--   <a>testCase_durationInNanoSeconds</a> - The number of nanoseconds it
--   took to run this test case.
--   
--   <a>$sel:status:TestCase'</a>, <a>testCase_status</a> - The status
--   returned by the test case after it was run. Valid statuses are
--   <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>, <tt>SKIPPED</tt>,
--   and <tt>UNKNOWN</tt>.
--   
--   <a>$sel:expired:TestCase'</a>, <a>testCase_expired</a> - The date and
--   time a test case expires. A test case expires 30 days after it is
--   created. An expired test case is not available to view in CodeBuild.
--   
--   <a>$sel:prefix:TestCase'</a>, <a>testCase_prefix</a> - A string that
--   is applied to a series of related test cases. CodeBuild generates the
--   prefix. The prefix depends on the framework used to generate the
--   tests.
--   
--   <a>$sel:name:TestCase'</a>, <a>testCase_name</a> - The name of the
--   test case.
--   
--   <a>$sel:testRawDataPath:TestCase'</a>, <a>testCase_testRawDataPath</a>
--   - The path to the raw data file that contains the test result.
--   
--   <a>$sel:message:TestCase'</a>, <a>testCase_message</a> - A message
--   associated with a test case. For example, an error message or stack
--   trace.
--   
--   <a>$sel:reportArn:TestCase'</a>, <a>testCase_reportArn</a> - The ARN
--   of the report to which the test case belongs.
newTestCase :: TestCase

-- | The number of nanoseconds it took to run this test case.
testCase_durationInNanoSeconds :: Lens' TestCase (Maybe Integer)

-- | The status returned by the test case after it was run. Valid statuses
--   are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>,
--   <tt>SKIPPED</tt>, and <tt>UNKNOWN</tt>.
testCase_status :: Lens' TestCase (Maybe Text)

-- | The date and time a test case expires. A test case expires 30 days
--   after it is created. An expired test case is not available to view in
--   CodeBuild.
testCase_expired :: Lens' TestCase (Maybe UTCTime)

-- | A string that is applied to a series of related test cases. CodeBuild
--   generates the prefix. The prefix depends on the framework used to
--   generate the tests.
testCase_prefix :: Lens' TestCase (Maybe Text)

-- | The name of the test case.
testCase_name :: Lens' TestCase (Maybe Text)

-- | The path to the raw data file that contains the test result.
testCase_testRawDataPath :: Lens' TestCase (Maybe Text)

-- | A message associated with a test case. For example, an error message
--   or stack trace.
testCase_message :: Lens' TestCase (Maybe Text)

-- | The ARN of the report to which the test case belongs.
testCase_reportArn :: Lens' TestCase (Maybe Text)

-- | A filter used to return specific types of test cases. In order to pass
--   the filter, the report must meet all of the filter properties.
--   
--   <i>See:</i> <a>newTestCaseFilter</a> smart constructor.
data TestCaseFilter
TestCaseFilter' :: Maybe Text -> Maybe Text -> TestCaseFilter

-- | The status used to filter test cases. A <tt>TestCaseFilter</tt> can
--   have one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
[$sel:status:TestCaseFilter'] :: TestCaseFilter -> Maybe Text

-- | A keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
[$sel:keyword:TestCaseFilter'] :: TestCaseFilter -> Maybe Text

-- | Create a value of <a>TestCaseFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseFilter'</a>, <a>testCaseFilter_status</a> - The
--   status used to filter test cases. A <tt>TestCaseFilter</tt> can have
--   one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
--   
--   <a>$sel:keyword:TestCaseFilter'</a>, <a>testCaseFilter_keyword</a> - A
--   keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
newTestCaseFilter :: TestCaseFilter

-- | The status used to filter test cases. A <tt>TestCaseFilter</tt> can
--   have one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
testCaseFilter_status :: Lens' TestCaseFilter (Maybe Text)

-- | A keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
testCaseFilter_keyword :: Lens' TestCaseFilter (Maybe Text)

-- | Information about a test report.
--   
--   <i>See:</i> <a>newTestReportSummary</a> smart constructor.
data TestReportSummary
TestReportSummary' :: Int -> HashMap Text Int -> Integer -> TestReportSummary

-- | The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
[$sel:total:TestReportSummary'] :: TestReportSummary -> Int

-- | A map that contains the number of each type of status returned by the
--   test results in this <tt>TestReportSummary</tt>.
[$sel:statusCounts:TestReportSummary'] :: TestReportSummary -> HashMap Text Int

-- | The number of nanoseconds it took to run all of the test cases in this
--   report.
[$sel:durationInNanoSeconds:TestReportSummary'] :: TestReportSummary -> Integer

-- | Create a value of <a>TestReportSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TestReportSummary'</a>, <a>testReportSummary_total</a> -
--   The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
--   
--   <a>$sel:statusCounts:TestReportSummary'</a>,
--   <a>testReportSummary_statusCounts</a> - A map that contains the number
--   of each type of status returned by the test results in this
--   <tt>TestReportSummary</tt>.
--   
--   <a>$sel:durationInNanoSeconds:TestReportSummary'</a>,
--   <a>testReportSummary_durationInNanoSeconds</a> - The number of
--   nanoseconds it took to run all of the test cases in this report.
newTestReportSummary :: Int -> Integer -> TestReportSummary

-- | The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
testReportSummary_total :: Lens' TestReportSummary Int

-- | A map that contains the number of each type of status returned by the
--   test results in this <tt>TestReportSummary</tt>.
testReportSummary_statusCounts :: Lens' TestReportSummary (HashMap Text Int)

-- | The number of nanoseconds it took to run all of the test cases in this
--   report.
testReportSummary_durationInNanoSeconds :: Lens' TestReportSummary Integer

-- | Information about the VPC configuration that CodeBuild accesses.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> VpcConfig

-- | A list of one or more security groups IDs in your Amazon VPC.
[$sel:securityGroupIds:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | The ID of the Amazon VPC.
[$sel:vpcId:VpcConfig'] :: VpcConfig -> Maybe Text

-- | A list of one or more subnet IDs in your Amazon VPC.
[$sel:subnets:VpcConfig'] :: VpcConfig -> Maybe [Text]

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of one or more security
--   groups IDs in your Amazon VPC.
--   
--   <a>$sel:vpcId:VpcConfig'</a>, <a>vpcConfig_vpcId</a> - The ID of the
--   Amazon VPC.
--   
--   <a>$sel:subnets:VpcConfig'</a>, <a>vpcConfig_subnets</a> - A list of
--   one or more subnet IDs in your Amazon VPC.
newVpcConfig :: VpcConfig

-- | A list of one or more security groups IDs in your Amazon VPC.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The ID of the Amazon VPC.
vpcConfig_vpcId :: Lens' VpcConfig (Maybe Text)

-- | A list of one or more subnet IDs in your Amazon VPC.
vpcConfig_subnets :: Lens' VpcConfig (Maybe [Text])

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
--   
--   <i>See:</i> <a>newWebhook</a> smart constructor.
data Webhook
Webhook' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [[WebhookFilter]] -> Maybe Text -> Maybe WebhookBuildType -> Webhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
[$sel:branchFilter:Webhook'] :: Webhook -> Maybe Text

-- | A timestamp that indicates the last time a repository's secret token
--   was modified.
[$sel:lastModifiedSecret:Webhook'] :: Webhook -> Maybe POSIX

-- | The URL to the webhook.
[$sel:url:Webhook'] :: Webhook -> Maybe Text

-- | The secret token of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
[$sel:secret:Webhook'] :: Webhook -> Maybe Text

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
[$sel:filterGroups:Webhook'] :: Webhook -> Maybe [[WebhookFilter]]

-- | The CodeBuild endpoint where webhook events are sent.
[$sel:payloadUrl:Webhook'] :: Webhook -> Maybe Text

-- | Specifies the type of build this webhook will trigger.
[$sel:buildType:Webhook'] :: Webhook -> Maybe WebhookBuildType

-- | Create a value of <a>Webhook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:Webhook'</a>, <a>webhook_branchFilter</a> - A
--   regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:lastModifiedSecret:Webhook'</a>,
--   <a>webhook_lastModifiedSecret</a> - A timestamp that indicates the
--   last time a repository's secret token was modified.
--   
--   <a>$sel:url:Webhook'</a>, <a>webhook_url</a> - The URL to the webhook.
--   
--   <a>$sel:secret:Webhook'</a>, <a>webhook_secret</a> - The secret token
--   of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
--   
--   <a>$sel:filterGroups:Webhook'</a>, <a>webhook_filterGroups</a> - An
--   array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
--   
--   <a>$sel:payloadUrl:Webhook'</a>, <a>webhook_payloadUrl</a> - The
--   CodeBuild endpoint where webhook events are sent.
--   
--   <a>$sel:buildType:Webhook'</a>, <a>webhook_buildType</a> - Specifies
--   the type of build this webhook will trigger.
newWebhook :: Webhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
webhook_branchFilter :: Lens' Webhook (Maybe Text)

-- | A timestamp that indicates the last time a repository's secret token
--   was modified.
webhook_lastModifiedSecret :: Lens' Webhook (Maybe UTCTime)

-- | The URL to the webhook.
webhook_url :: Lens' Webhook (Maybe Text)

-- | The secret token of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
webhook_secret :: Lens' Webhook (Maybe Text)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
webhook_filterGroups :: Lens' Webhook (Maybe [[WebhookFilter]])

-- | The CodeBuild endpoint where webhook events are sent.
webhook_payloadUrl :: Lens' Webhook (Maybe Text)

-- | Specifies the type of build this webhook will trigger.
webhook_buildType :: Lens' Webhook (Maybe WebhookBuildType)

-- | A filter used to determine which webhooks trigger a build.
--   
--   <i>See:</i> <a>newWebhookFilter</a> smart constructor.
data WebhookFilter
WebhookFilter' :: Maybe Bool -> WebhookFilterType -> Text -> WebhookFilter

-- | Used to indicate that the <tt>pattern</tt> determines which webhook
--   events do not trigger a build. If true, then a webhook event that does
--   not match the <tt>pattern</tt> triggers a build. If false, then a
--   webhook event that matches the <tt>pattern</tt> triggers a build.
[$sel:excludeMatchedPattern:WebhookFilter'] :: WebhookFilter -> Maybe Bool

-- | The type of webhook filter. There are six webhook filter types:
--   <tt>EVENT</tt>, <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>,
--   <tt>BASE_REF</tt>, <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
[$sel:type':WebhookFilter'] :: WebhookFilter -> WebhookFilterType

-- | For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
[$sel:pattern':WebhookFilter'] :: WebhookFilter -> Text

-- | Create a value of <a>WebhookFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeMatchedPattern:WebhookFilter'</a>,
--   <a>webhookFilter_excludeMatchedPattern</a> - Used to indicate that the
--   <tt>pattern</tt> determines which webhook events do not trigger a
--   build. If true, then a webhook event that does not match the
--   <tt>pattern</tt> triggers a build. If false, then a webhook event that
--   matches the <tt>pattern</tt> triggers a build.
--   
--   <a>$sel:type':WebhookFilter'</a>, <a>webhookFilter_type</a> - The type
--   of webhook filter. There are six webhook filter types: <tt>EVENT</tt>,
--   <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>, <tt>BASE_REF</tt>,
--   <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
--   
--   <a>$sel:pattern':WebhookFilter'</a>, <a>webhookFilter_pattern</a> -
--   For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
newWebhookFilter :: WebhookFilterType -> Text -> WebhookFilter

-- | Used to indicate that the <tt>pattern</tt> determines which webhook
--   events do not trigger a build. If true, then a webhook event that does
--   not match the <tt>pattern</tt> triggers a build. If false, then a
--   webhook event that matches the <tt>pattern</tt> triggers a build.
webhookFilter_excludeMatchedPattern :: Lens' WebhookFilter (Maybe Bool)

-- | The type of webhook filter. There are six webhook filter types:
--   <tt>EVENT</tt>, <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>,
--   <tt>BASE_REF</tt>, <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
webhookFilter_type :: Lens' WebhookFilter WebhookFilterType

-- | For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
webhookFilter_pattern :: Lens' WebhookFilter Text


-- | Stops a running batch build.
module Amazonka.CodeBuild.StopBuildBatch

-- | <i>See:</i> <a>newStopBuildBatch</a> smart constructor.
data StopBuildBatch
StopBuildBatch' :: Text -> StopBuildBatch

-- | The identifier of the batch build to stop.
[$sel:id:StopBuildBatch'] :: StopBuildBatch -> Text

-- | Create a value of <a>StopBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:StopBuildBatch'</a>, <a>stopBuildBatch_id</a> - The
--   identifier of the batch build to stop.
newStopBuildBatch :: Text -> StopBuildBatch

-- | The identifier of the batch build to stop.
stopBuildBatch_id :: Lens' StopBuildBatch Text

-- | <i>See:</i> <a>newStopBuildBatchResponse</a> smart constructor.
data StopBuildBatchResponse
StopBuildBatchResponse' :: Maybe BuildBatch -> Int -> StopBuildBatchResponse
[$sel:buildBatch:StopBuildBatchResponse'] :: StopBuildBatchResponse -> Maybe BuildBatch

-- | The response's http status code.
[$sel:httpStatus:StopBuildBatchResponse'] :: StopBuildBatchResponse -> Int

-- | Create a value of <a>StopBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:StopBuildBatchResponse'</a>,
--   <a>stopBuildBatchResponse_buildBatch</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:StopBuildBatchResponse'</a>,
--   <a>stopBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newStopBuildBatchResponse :: Int -> StopBuildBatchResponse

-- | Undocumented member.
stopBuildBatchResponse_buildBatch :: Lens' StopBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
stopBuildBatchResponse_httpStatus :: Lens' StopBuildBatchResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance GHC.Show.Show Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance GHC.Read.Read Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance GHC.Classes.Eq Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance GHC.Generics.Generic Amazonka.CodeBuild.StopBuildBatch.StopBuildBatchResponse
instance GHC.Show.Show Amazonka.CodeBuild.StopBuildBatch.StopBuildBatchResponse
instance GHC.Read.Read Amazonka.CodeBuild.StopBuildBatch.StopBuildBatchResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.StopBuildBatch.StopBuildBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StopBuildBatch.StopBuildBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.StopBuildBatch.StopBuildBatch


-- | Attempts to stop running a build.
module Amazonka.CodeBuild.StopBuild

-- | <i>See:</i> <a>newStopBuild</a> smart constructor.
data StopBuild
StopBuild' :: Text -> StopBuild

-- | The ID of the build.
[$sel:id:StopBuild'] :: StopBuild -> Text

-- | Create a value of <a>StopBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:StopBuild'</a>, <a>stopBuild_id</a> - The ID of the build.
newStopBuild :: Text -> StopBuild

-- | The ID of the build.
stopBuild_id :: Lens' StopBuild Text

-- | <i>See:</i> <a>newStopBuildResponse</a> smart constructor.
data StopBuildResponse
StopBuildResponse' :: Maybe Build -> Int -> StopBuildResponse

-- | Information about the build.
[$sel:build:StopBuildResponse'] :: StopBuildResponse -> Maybe Build

-- | The response's http status code.
[$sel:httpStatus:StopBuildResponse'] :: StopBuildResponse -> Int

-- | Create a value of <a>StopBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:StopBuildResponse'</a>, <a>stopBuildResponse_build</a> -
--   Information about the build.
--   
--   <a>$sel:httpStatus:StopBuildResponse'</a>,
--   <a>stopBuildResponse_httpStatus</a> - The response's http status code.
newStopBuildResponse :: Int -> StopBuildResponse

-- | Information about the build.
stopBuildResponse_build :: Lens' StopBuildResponse (Maybe Build)

-- | The response's http status code.
stopBuildResponse_httpStatus :: Lens' StopBuildResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.StopBuild.StopBuild
instance GHC.Show.Show Amazonka.CodeBuild.StopBuild.StopBuild
instance GHC.Read.Read Amazonka.CodeBuild.StopBuild.StopBuild
instance GHC.Classes.Eq Amazonka.CodeBuild.StopBuild.StopBuild
instance GHC.Generics.Generic Amazonka.CodeBuild.StopBuild.StopBuildResponse
instance GHC.Show.Show Amazonka.CodeBuild.StopBuild.StopBuildResponse
instance GHC.Read.Read Amazonka.CodeBuild.StopBuild.StopBuildResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.StopBuild.StopBuildResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.StopBuild.StopBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StopBuild.StopBuildResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.StopBuild.StopBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StopBuild.StopBuild
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.StopBuild.StopBuild
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.StopBuild.StopBuild
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.StopBuild.StopBuild
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.StopBuild.StopBuild


-- | Starts a batch build for a project.
module Amazonka.CodeBuild.StartBuildBatch

-- | <i>See:</i> <a>newStartBuildBatch</a> smart constructor.
data StartBuildBatch
StartBuildBatch' :: Maybe Text -> Maybe Text -> Maybe ProjectBuildBatchConfig -> Maybe [EnvironmentVariable] -> Maybe Text -> Maybe Bool -> Maybe RegistryCredential -> Maybe Text -> Maybe ProjectCache -> Maybe Natural -> Maybe [ProjectSource] -> Maybe Natural -> Maybe ImagePullCredentialsType -> Maybe LogsConfig -> Maybe SourceAuth -> Maybe GitSubmodulesConfig -> Maybe EnvironmentType -> Maybe Text -> Maybe ComputeType -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe Bool -> Maybe Text -> Maybe [ProjectArtifacts] -> Maybe Natural -> Maybe ProjectArtifacts -> Maybe SourceType -> Text -> StartBuildBatch

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the batch build project. The CMK key encrypts the
--   build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKeyOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | A location that overrides, for this batch build, the source location
--   defined in the batch build project.
[$sel:sourceLocationOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | A <tt>BuildBatchConfigOverride</tt> object that contains batch build
--   configuration overrides.
[$sel:buildBatchConfigOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe ProjectBuildBatchConfig

-- | An array of <tt>EnvironmentVariable</tt> objects that override, or add
--   to, the environment variables defined in the batch build project.
[$sel:environmentVariablesOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe [EnvironmentVariable]

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>StartBuildBatch</tt> request. The token is
--   included in the <tt>StartBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>StartBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
[$sel:idempotencyToken:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
[$sel:debugSessionEnabled:StartBuildBatch'] :: StartBuildBatch -> Maybe Bool

-- | A <tt>RegistryCredential</tt> object that overrides credentials for
--   access to a private registry.
[$sel:registryCredentialOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe RegistryCredential

-- | The name of a service role for this batch build that overrides the one
--   specified in the batch build project.
[$sel:serviceRoleOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | A <tt>ProjectCache</tt> object that specifies cache overrides.
[$sel:cacheOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe ProjectCache

-- | The number of minutes a batch build is allowed to be queued before it
--   times out.
[$sel:queuedTimeoutInMinutesOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Natural

-- | An array of <tt>ProjectSource</tt> objects that override the secondary
--   sources defined in the batch build project.
[$sel:secondarySourcesOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe [ProjectSource]

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this batch build only, any previous depth of history
--   defined in the batch build project.
[$sel:gitCloneDepthOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Natural

-- | The type of credentials CodeBuild uses to pull images in your batch
--   build. There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
[$sel:imagePullCredentialsTypeOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe ImagePullCredentialsType

-- | A <tt>LogsConfig</tt> object that override the log settings defined in
--   the batch build project.
[$sel:logsConfigOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe LogsConfig

-- | A <tt>SourceAuth</tt> object that overrides the one defined in the
--   batch build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
[$sel:sourceAuthOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe SourceAuth

-- | A <tt>GitSubmodulesConfig</tt> object that overrides the Git
--   submodules configuration for this batch build.
[$sel:gitSubmodulesConfigOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe GitSubmodulesConfig

-- | A container type for this batch build that overrides the one specified
--   in the batch build project.
[$sel:environmentTypeOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe EnvironmentType

-- | The name of a certificate for this batch build that overrides the one
--   specified in the batch build project.
[$sel:certificateOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | The name of a compute type for this batch build that overrides the one
--   specified in the batch build project.
[$sel:computeTypeOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe ComputeType

-- | Set to <tt>true</tt> to report to your source provider the status of a
--   batch build's start and completion. If you use this option with a
--   source provider other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
[$sel:reportBuildBatchStatusOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Bool

-- | Enable this flag to override privileged mode in the batch build
--   project.
[$sel:privilegedModeOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Bool

-- | The version of the batch build input to be built, for this build only.
--   If not specified, the latest version is used. If specified, the
--   contents depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
[$sel:buildspecOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | An array of <tt>ProjectSourceVersion</tt> objects that override the
--   secondary source versions in the batch build project.
[$sel:secondarySourcesVersionOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe [ProjectSourceVersion]

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the batch build project. The insecure SSL setting
--   determines whether to ignore SSL warnings while connecting to the
--   project source code. This override applies only if the build's source
--   is GitHub Enterprise.
[$sel:insecureSslOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Bool

-- | The name of an image for this batch build that overrides the one
--   specified in the batch build project.
[$sel:imageOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Text

-- | An array of <tt>ProjectArtifacts</tt> objects that override the
--   secondary artifacts defined in the batch build project.
[$sel:secondaryArtifactsOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe [ProjectArtifacts]

-- | Overrides the build timeout specified in the batch build project.
[$sel:buildTimeoutInMinutesOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe Natural

-- | An array of <tt>ProjectArtifacts</tt> objects that contains
--   information about the build output artifact overrides for the build
--   project.
[$sel:artifactsOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe ProjectArtifacts

-- | The source input type that overrides the source input defined in the
--   batch build project.
[$sel:sourceTypeOverride:StartBuildBatch'] :: StartBuildBatch -> Maybe SourceType

-- | The name of the project.
[$sel:projectName:StartBuildBatch'] :: StartBuildBatch -> Text

-- | Create a value of <a>StartBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKeyOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_encryptionKeyOverride</a> - The Key Management
--   Service customer master key (CMK) that overrides the one specified in
--   the batch build project. The CMK key encrypts the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:sourceLocationOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceLocationOverride</a> - A location that
--   overrides, for this batch build, the source location defined in the
--   batch build project.
--   
--   <a>$sel:buildBatchConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildBatchConfigOverride</a> - A
--   <tt>BuildBatchConfigOverride</tt> object that contains batch build
--   configuration overrides.
--   
--   <a>$sel:environmentVariablesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_environmentVariablesOverride</a> - An array of
--   <tt>EnvironmentVariable</tt> objects that override, or add to, the
--   environment variables defined in the batch build project.
--   
--   <a>$sel:idempotencyToken:StartBuildBatch'</a>,
--   <a>startBuildBatch_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>StartBuildBatch</tt> request. The token is included in the
--   <tt>StartBuildBatch</tt> request and is valid for five minutes. If you
--   repeat the <tt>StartBuildBatch</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:debugSessionEnabled:StartBuildBatch'</a>,
--   <a>startBuildBatch_debugSessionEnabled</a> - Specifies if session
--   debugging is enabled for this batch build. For more information, see
--   <a>Viewing a running build in Session Manager</a>. Batch session
--   debugging is not supported for matrix batch builds.
--   
--   <a>$sel:registryCredentialOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_registryCredentialOverride</a> - A
--   <tt>RegistryCredential</tt> object that overrides credentials for
--   access to a private registry.
--   
--   <a>$sel:serviceRoleOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_serviceRoleOverride</a> - The name of a service
--   role for this batch build that overrides the one specified in the
--   batch build project.
--   
--   <a>$sel:cacheOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_cacheOverride</a> - A <tt>ProjectCache</tt> object
--   that specifies cache overrides.
--   
--   <a>$sel:queuedTimeoutInMinutesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_queuedTimeoutInMinutesOverride</a> - The number of
--   minutes a batch build is allowed to be queued before it times out.
--   
--   <a>$sel:secondarySourcesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondarySourcesOverride</a> - An array of
--   <tt>ProjectSource</tt> objects that override the secondary sources
--   defined in the batch build project.
--   
--   <a>$sel:gitCloneDepthOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_gitCloneDepthOverride</a> - The user-defined depth
--   of history, with a minimum value of 0, that overrides, for this batch
--   build only, any previous depth of history defined in the batch build
--   project.
--   
--   <a>$sel:imagePullCredentialsTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_imagePullCredentialsTypeOverride</a> - The type of
--   credentials CodeBuild uses to pull images in your batch build. There
--   are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
--   
--   <a>$sel:logsConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_logsConfigOverride</a> - A <tt>LogsConfig</tt>
--   object that override the log settings defined in the batch build
--   project.
--   
--   <a>$sel:sourceAuthOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceAuthOverride</a> - A <tt>SourceAuth</tt>
--   object that overrides the one defined in the batch build project. This
--   override applies only if the build project's source is BitBucket or
--   GitHub.
--   
--   <a>$sel:gitSubmodulesConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_gitSubmodulesConfigOverride</a> - A
--   <tt>GitSubmodulesConfig</tt> object that overrides the Git submodules
--   configuration for this batch build.
--   
--   <a>$sel:environmentTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_environmentTypeOverride</a> - A container type for
--   this batch build that overrides the one specified in the batch build
--   project.
--   
--   <a>$sel:certificateOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_certificateOverride</a> - The name of a certificate
--   for this batch build that overrides the one specified in the batch
--   build project.
--   
--   <a>$sel:computeTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_computeTypeOverride</a> - The name of a compute
--   type for this batch build that overrides the one specified in the
--   batch build project.
--   
--   <a>$sel:reportBuildBatchStatusOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_reportBuildBatchStatusOverride</a> - Set to
--   <tt>true</tt> to report to your source provider the status of a batch
--   build's start and completion. If you use this option with a source
--   provider other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   <a>$sel:privilegedModeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_privilegedModeOverride</a> - Enable this flag to
--   override privileged mode in the batch build project.
--   
--   <a>$sel:sourceVersion:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceVersion</a> - The version of the batch build
--   input to be built, for this build only. If not specified, the latest
--   version is used. If specified, the contents depends on the source
--   provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildspecOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildspecOverride</a> - A buildspec file
--   declaration that overrides, for this build only, the latest one
--   already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:secondarySourcesVersionOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondarySourcesVersionOverride</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects that override the secondary
--   source versions in the batch build project.
--   
--   <a>$sel:insecureSslOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_insecureSslOverride</a> - Enable this flag to
--   override the insecure SSL setting that is specified in the batch build
--   project. The insecure SSL setting determines whether to ignore SSL
--   warnings while connecting to the project source code. This override
--   applies only if the build's source is GitHub Enterprise.
--   
--   <a>$sel:imageOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_imageOverride</a> - The name of an image for this
--   batch build that overrides the one specified in the batch build
--   project.
--   
--   <a>$sel:secondaryArtifactsOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondaryArtifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects that override the secondary
--   artifacts defined in the batch build project.
--   
--   <a>$sel:buildTimeoutInMinutesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildTimeoutInMinutesOverride</a> - Overrides the
--   build timeout specified in the batch build project.
--   
--   <a>$sel:artifactsOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_artifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects that contains information about the
--   build output artifact overrides for the build project.
--   
--   <a>$sel:sourceTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceTypeOverride</a> - The source input type that
--   overrides the source input defined in the batch build project.
--   
--   <a>$sel:projectName:StartBuildBatch'</a>,
--   <a>startBuildBatch_projectName</a> - The name of the project.
newStartBuildBatch :: Text -> StartBuildBatch

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the batch build project. The CMK key encrypts the
--   build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
startBuildBatch_encryptionKeyOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A location that overrides, for this batch build, the source location
--   defined in the batch build project.
startBuildBatch_sourceLocationOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A <tt>BuildBatchConfigOverride</tt> object that contains batch build
--   configuration overrides.
startBuildBatch_buildBatchConfigOverride :: Lens' StartBuildBatch (Maybe ProjectBuildBatchConfig)

-- | An array of <tt>EnvironmentVariable</tt> objects that override, or add
--   to, the environment variables defined in the batch build project.
startBuildBatch_environmentVariablesOverride :: Lens' StartBuildBatch (Maybe [EnvironmentVariable])

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>StartBuildBatch</tt> request. The token is
--   included in the <tt>StartBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>StartBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
startBuildBatch_idempotencyToken :: Lens' StartBuildBatch (Maybe Text)

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
startBuildBatch_debugSessionEnabled :: Lens' StartBuildBatch (Maybe Bool)

-- | A <tt>RegistryCredential</tt> object that overrides credentials for
--   access to a private registry.
startBuildBatch_registryCredentialOverride :: Lens' StartBuildBatch (Maybe RegistryCredential)

-- | The name of a service role for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_serviceRoleOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A <tt>ProjectCache</tt> object that specifies cache overrides.
startBuildBatch_cacheOverride :: Lens' StartBuildBatch (Maybe ProjectCache)

-- | The number of minutes a batch build is allowed to be queued before it
--   times out.
startBuildBatch_queuedTimeoutInMinutesOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | An array of <tt>ProjectSource</tt> objects that override the secondary
--   sources defined in the batch build project.
startBuildBatch_secondarySourcesOverride :: Lens' StartBuildBatch (Maybe [ProjectSource])

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this batch build only, any previous depth of history
--   defined in the batch build project.
startBuildBatch_gitCloneDepthOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | The type of credentials CodeBuild uses to pull images in your batch
--   build. There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
startBuildBatch_imagePullCredentialsTypeOverride :: Lens' StartBuildBatch (Maybe ImagePullCredentialsType)

-- | A <tt>LogsConfig</tt> object that override the log settings defined in
--   the batch build project.
startBuildBatch_logsConfigOverride :: Lens' StartBuildBatch (Maybe LogsConfig)

-- | A <tt>SourceAuth</tt> object that overrides the one defined in the
--   batch build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
startBuildBatch_sourceAuthOverride :: Lens' StartBuildBatch (Maybe SourceAuth)

-- | A <tt>GitSubmodulesConfig</tt> object that overrides the Git
--   submodules configuration for this batch build.
startBuildBatch_gitSubmodulesConfigOverride :: Lens' StartBuildBatch (Maybe GitSubmodulesConfig)

-- | A container type for this batch build that overrides the one specified
--   in the batch build project.
startBuildBatch_environmentTypeOverride :: Lens' StartBuildBatch (Maybe EnvironmentType)

-- | The name of a certificate for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_certificateOverride :: Lens' StartBuildBatch (Maybe Text)

-- | The name of a compute type for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_computeTypeOverride :: Lens' StartBuildBatch (Maybe ComputeType)

-- | Set to <tt>true</tt> to report to your source provider the status of a
--   batch build's start and completion. If you use this option with a
--   source provider other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
startBuildBatch_reportBuildBatchStatusOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | Enable this flag to override privileged mode in the batch build
--   project.
startBuildBatch_privilegedModeOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | The version of the batch build input to be built, for this build only.
--   If not specified, the latest version is used. If specified, the
--   contents depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
startBuildBatch_sourceVersion :: Lens' StartBuildBatch (Maybe Text)

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
startBuildBatch_buildspecOverride :: Lens' StartBuildBatch (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects that override the
--   secondary source versions in the batch build project.
startBuildBatch_secondarySourcesVersionOverride :: Lens' StartBuildBatch (Maybe [ProjectSourceVersion])

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the batch build project. The insecure SSL setting
--   determines whether to ignore SSL warnings while connecting to the
--   project source code. This override applies only if the build's source
--   is GitHub Enterprise.
startBuildBatch_insecureSslOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | The name of an image for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_imageOverride :: Lens' StartBuildBatch (Maybe Text)

-- | An array of <tt>ProjectArtifacts</tt> objects that override the
--   secondary artifacts defined in the batch build project.
startBuildBatch_secondaryArtifactsOverride :: Lens' StartBuildBatch (Maybe [ProjectArtifacts])

-- | Overrides the build timeout specified in the batch build project.
startBuildBatch_buildTimeoutInMinutesOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | An array of <tt>ProjectArtifacts</tt> objects that contains
--   information about the build output artifact overrides for the build
--   project.
startBuildBatch_artifactsOverride :: Lens' StartBuildBatch (Maybe ProjectArtifacts)

-- | The source input type that overrides the source input defined in the
--   batch build project.
startBuildBatch_sourceTypeOverride :: Lens' StartBuildBatch (Maybe SourceType)

-- | The name of the project.
startBuildBatch_projectName :: Lens' StartBuildBatch Text

-- | <i>See:</i> <a>newStartBuildBatchResponse</a> smart constructor.
data StartBuildBatchResponse
StartBuildBatchResponse' :: Maybe BuildBatch -> Int -> StartBuildBatchResponse

-- | A <tt>BuildBatch</tt> object that contains information about the batch
--   build.
[$sel:buildBatch:StartBuildBatchResponse'] :: StartBuildBatchResponse -> Maybe BuildBatch

-- | The response's http status code.
[$sel:httpStatus:StartBuildBatchResponse'] :: StartBuildBatchResponse -> Int

-- | Create a value of <a>StartBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:StartBuildBatchResponse'</a>,
--   <a>startBuildBatchResponse_buildBatch</a> - A <tt>BuildBatch</tt>
--   object that contains information about the batch build.
--   
--   <a>$sel:httpStatus:StartBuildBatchResponse'</a>,
--   <a>startBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newStartBuildBatchResponse :: Int -> StartBuildBatchResponse

-- | A <tt>BuildBatch</tt> object that contains information about the batch
--   build.
startBuildBatchResponse_buildBatch :: Lens' StartBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
startBuildBatchResponse_httpStatus :: Lens' StartBuildBatchResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance GHC.Show.Show Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance GHC.Read.Read Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance GHC.Classes.Eq Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance GHC.Generics.Generic Amazonka.CodeBuild.StartBuildBatch.StartBuildBatchResponse
instance GHC.Show.Show Amazonka.CodeBuild.StartBuildBatch.StartBuildBatchResponse
instance GHC.Read.Read Amazonka.CodeBuild.StartBuildBatch.StartBuildBatchResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.StartBuildBatch.StartBuildBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StartBuildBatch.StartBuildBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.StartBuildBatch.StartBuildBatch


-- | Starts running a build.
module Amazonka.CodeBuild.StartBuild

-- | <i>See:</i> <a>newStartBuild</a> smart constructor.
data StartBuild
StartBuild' :: Maybe Text -> Maybe Text -> Maybe [EnvironmentVariable] -> Maybe BuildStatusConfig -> Maybe Text -> Maybe Bool -> Maybe RegistryCredential -> Maybe Natural -> Maybe Text -> Maybe ProjectCache -> Maybe Natural -> Maybe [ProjectSource] -> Maybe Natural -> Maybe ImagePullCredentialsType -> Maybe LogsConfig -> Maybe SourceAuth -> Maybe GitSubmodulesConfig -> Maybe EnvironmentType -> Maybe Text -> Maybe ComputeType -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [ProjectArtifacts] -> Maybe ProjectArtifacts -> Maybe SourceType -> Text -> StartBuild

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the build project. The CMK key encrypts the build
--   output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKeyOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | A location that overrides, for this build, the source location for the
--   one defined in the build project.
[$sel:sourceLocationOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | A set of environment variables that overrides, for this build only,
--   the latest ones already defined in the build project.
[$sel:environmentVariablesOverride:StartBuild'] :: StartBuild -> Maybe [EnvironmentVariable]

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
[$sel:buildStatusConfigOverride:StartBuild'] :: StartBuild -> Maybe BuildStatusConfig

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the StartBuild request. The token is included in the
--   StartBuild request and is valid for 5 minutes. If you repeat the
--   StartBuild request with the same token, but change a parameter,
--   CodeBuild returns a parameter mismatch error.
[$sel:idempotencyToken:StartBuild'] :: StartBuild -> Maybe Text

-- | Specifies if session debugging is enabled for this build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
[$sel:debugSessionEnabled:StartBuild'] :: StartBuild -> Maybe Bool

-- | The credentials for access to a private registry.
[$sel:registryCredentialOverride:StartBuild'] :: StartBuild -> Maybe RegistryCredential

-- | The number of build timeout minutes, from 5 to 480 (8 hours), that
--   overrides, for this build only, the latest setting already defined in
--   the build project.
[$sel:timeoutInMinutesOverride:StartBuild'] :: StartBuild -> Maybe Natural

-- | The name of a service role for this build that overrides the one
--   specified in the build project.
[$sel:serviceRoleOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | A ProjectCache object specified for this build that overrides the one
--   defined in the build project.
[$sel:cacheOverride:StartBuild'] :: StartBuild -> Maybe ProjectCache

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutesOverride:StartBuild'] :: StartBuild -> Maybe Natural

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySourcesOverride:StartBuild'] :: StartBuild -> Maybe [ProjectSource]

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this build only, any previous depth of history defined
--   in the build project.
[$sel:gitCloneDepthOverride:StartBuild'] :: StartBuild -> Maybe Natural

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
[$sel:imagePullCredentialsTypeOverride:StartBuild'] :: StartBuild -> Maybe ImagePullCredentialsType

-- | Log settings for this build that override the log settings defined in
--   the build project.
[$sel:logsConfigOverride:StartBuild'] :: StartBuild -> Maybe LogsConfig

-- | An authorization type for this build that overrides the one defined in
--   the build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
[$sel:sourceAuthOverride:StartBuild'] :: StartBuild -> Maybe SourceAuth

-- | Information about the Git submodules configuration for this build of
--   an CodeBuild build project.
[$sel:gitSubmodulesConfigOverride:StartBuild'] :: StartBuild -> Maybe GitSubmodulesConfig

-- | A container type for this build that overrides the one specified in
--   the build project.
[$sel:environmentTypeOverride:StartBuild'] :: StartBuild -> Maybe EnvironmentType

-- | The name of a certificate for this build that overrides the one
--   specified in the build project.
[$sel:certificateOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | The name of a compute type for this build that overrides the one
--   specified in the build project.
[$sel:computeTypeOverride:StartBuild'] :: StartBuild -> Maybe ComputeType

-- | Enable this flag to override privileged mode in the build project.
[$sel:privilegedModeOverride:StartBuild'] :: StartBuild -> Maybe Bool

-- | The version of the build input to be built, for this build only. If
--   not specified, the latest version is used. If specified, the contents
--   depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:StartBuild'] :: StartBuild -> Maybe Text

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
[$sel:buildspecOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | An array of <tt>ProjectSourceVersion</tt> objects that specify one or
--   more versions of the project's secondary sources to be used for this
--   build only.
[$sel:secondarySourcesVersionOverride:StartBuild'] :: StartBuild -> Maybe [ProjectSourceVersion]

-- | Set to true to report to your source provider the status of a build's
--   start and completion. If you use this option with a source provider
--   other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
[$sel:reportBuildStatusOverride:StartBuild'] :: StartBuild -> Maybe Bool

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the build project. The insecure SSL setting determines
--   whether to ignore SSL warnings while connecting to the project source
--   code. This override applies only if the build's source is GitHub
--   Enterprise.
[$sel:insecureSslOverride:StartBuild'] :: StartBuild -> Maybe Bool

-- | The name of an image for this build that overrides the one specified
--   in the build project.
[$sel:imageOverride:StartBuild'] :: StartBuild -> Maybe Text

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifactsOverride:StartBuild'] :: StartBuild -> Maybe [ProjectArtifacts]

-- | Build output artifact settings that override, for this build only, the
--   latest ones already defined in the build project.
[$sel:artifactsOverride:StartBuild'] :: StartBuild -> Maybe ProjectArtifacts

-- | A source input type, for this build, that overrides the source input
--   defined in the build project.
[$sel:sourceTypeOverride:StartBuild'] :: StartBuild -> Maybe SourceType

-- | The name of the CodeBuild build project to start running a build.
[$sel:projectName:StartBuild'] :: StartBuild -> Text

-- | Create a value of <a>StartBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKeyOverride:StartBuild'</a>,
--   <a>startBuild_encryptionKeyOverride</a> - The Key Management Service
--   customer master key (CMK) that overrides the one specified in the
--   build project. The CMK key encrypts the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:sourceLocationOverride:StartBuild'</a>,
--   <a>startBuild_sourceLocationOverride</a> - A location that overrides,
--   for this build, the source location for the one defined in the build
--   project.
--   
--   <a>$sel:environmentVariablesOverride:StartBuild'</a>,
--   <a>startBuild_environmentVariablesOverride</a> - A set of environment
--   variables that overrides, for this build only, the latest ones already
--   defined in the build project.
--   
--   <a>$sel:buildStatusConfigOverride:StartBuild'</a>,
--   <a>startBuild_buildStatusConfigOverride</a> - Contains information
--   that defines how the build project reports the build status to the
--   source provider. This option is only used when the source provider is
--   <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or <tt>BITBUCKET</tt>.
--   
--   <a>$sel:idempotencyToken:StartBuild'</a>,
--   <a>startBuild_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the StartBuild
--   request. The token is included in the StartBuild request and is valid
--   for 5 minutes. If you repeat the StartBuild request with the same
--   token, but change a parameter, CodeBuild returns a parameter mismatch
--   error.
--   
--   <a>$sel:debugSessionEnabled:StartBuild'</a>,
--   <a>startBuild_debugSessionEnabled</a> - Specifies if session debugging
--   is enabled for this build. For more information, see <a>Viewing a
--   running build in Session Manager</a>.
--   
--   <a>$sel:registryCredentialOverride:StartBuild'</a>,
--   <a>startBuild_registryCredentialOverride</a> - The credentials for
--   access to a private registry.
--   
--   <a>$sel:timeoutInMinutesOverride:StartBuild'</a>,
--   <a>startBuild_timeoutInMinutesOverride</a> - The number of build
--   timeout minutes, from 5 to 480 (8 hours), that overrides, for this
--   build only, the latest setting already defined in the build project.
--   
--   <a>$sel:serviceRoleOverride:StartBuild'</a>,
--   <a>startBuild_serviceRoleOverride</a> - The name of a service role for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:cacheOverride:StartBuild'</a>, <a>startBuild_cacheOverride</a>
--   - A ProjectCache object specified for this build that overrides the
--   one defined in the build project.
--   
--   <a>$sel:queuedTimeoutInMinutesOverride:StartBuild'</a>,
--   <a>startBuild_queuedTimeoutInMinutesOverride</a> - The number of
--   minutes a build is allowed to be queued before it times out.
--   
--   <a>$sel:secondarySourcesOverride:StartBuild'</a>,
--   <a>startBuild_secondarySourcesOverride</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:gitCloneDepthOverride:StartBuild'</a>,
--   <a>startBuild_gitCloneDepthOverride</a> - The user-defined depth of
--   history, with a minimum value of 0, that overrides, for this build
--   only, any previous depth of history defined in the build project.
--   
--   <a>$sel:imagePullCredentialsTypeOverride:StartBuild'</a>,
--   <a>startBuild_imagePullCredentialsTypeOverride</a> - The type of
--   credentials CodeBuild uses to pull images in your build. There are two
--   valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
--   
--   <a>$sel:logsConfigOverride:StartBuild'</a>,
--   <a>startBuild_logsConfigOverride</a> - Log settings for this build
--   that override the log settings defined in the build project.
--   
--   <a>$sel:sourceAuthOverride:StartBuild'</a>,
--   <a>startBuild_sourceAuthOverride</a> - An authorization type for this
--   build that overrides the one defined in the build project. This
--   override applies only if the build project's source is BitBucket or
--   GitHub.
--   
--   <a>$sel:gitSubmodulesConfigOverride:StartBuild'</a>,
--   <a>startBuild_gitSubmodulesConfigOverride</a> - Information about the
--   Git submodules configuration for this build of an CodeBuild build
--   project.
--   
--   <a>$sel:environmentTypeOverride:StartBuild'</a>,
--   <a>startBuild_environmentTypeOverride</a> - A container type for this
--   build that overrides the one specified in the build project.
--   
--   <a>$sel:certificateOverride:StartBuild'</a>,
--   <a>startBuild_certificateOverride</a> - The name of a certificate for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:computeTypeOverride:StartBuild'</a>,
--   <a>startBuild_computeTypeOverride</a> - The name of a compute type for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:privilegedModeOverride:StartBuild'</a>,
--   <a>startBuild_privilegedModeOverride</a> - Enable this flag to
--   override privileged mode in the build project.
--   
--   <a>$sel:sourceVersion:StartBuild'</a>, <a>startBuild_sourceVersion</a>
--   - The version of the build input to be built, for this build only. If
--   not specified, the latest version is used. If specified, the contents
--   depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildspecOverride:StartBuild'</a>,
--   <a>startBuild_buildspecOverride</a> - A buildspec file declaration
--   that overrides, for this build only, the latest one already defined in
--   the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:secondarySourcesVersionOverride:StartBuild'</a>,
--   <a>startBuild_secondarySourcesVersionOverride</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects that specify one or more
--   versions of the project's secondary sources to be used for this build
--   only.
--   
--   <a>$sel:reportBuildStatusOverride:StartBuild'</a>,
--   <a>startBuild_reportBuildStatusOverride</a> - Set to true to report to
--   your source provider the status of a build's start and completion. If
--   you use this option with a source provider other than GitHub, GitHub
--   Enterprise, or Bitbucket, an <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   <a>$sel:insecureSslOverride:StartBuild'</a>,
--   <a>startBuild_insecureSslOverride</a> - Enable this flag to override
--   the insecure SSL setting that is specified in the build project. The
--   insecure SSL setting determines whether to ignore SSL warnings while
--   connecting to the project source code. This override applies only if
--   the build's source is GitHub Enterprise.
--   
--   <a>$sel:imageOverride:StartBuild'</a>, <a>startBuild_imageOverride</a>
--   - The name of an image for this build that overrides the one specified
--   in the build project.
--   
--   <a>$sel:secondaryArtifactsOverride:StartBuild'</a>,
--   <a>startBuild_secondaryArtifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:artifactsOverride:StartBuild'</a>,
--   <a>startBuild_artifactsOverride</a> - Build output artifact settings
--   that override, for this build only, the latest ones already defined in
--   the build project.
--   
--   <a>$sel:sourceTypeOverride:StartBuild'</a>,
--   <a>startBuild_sourceTypeOverride</a> - A source input type, for this
--   build, that overrides the source input defined in the build project.
--   
--   <a>$sel:projectName:StartBuild'</a>, <a>startBuild_projectName</a> -
--   The name of the CodeBuild build project to start running a build.
newStartBuild :: Text -> StartBuild

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the build project. The CMK key encrypts the build
--   output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
startBuild_encryptionKeyOverride :: Lens' StartBuild (Maybe Text)

-- | A location that overrides, for this build, the source location for the
--   one defined in the build project.
startBuild_sourceLocationOverride :: Lens' StartBuild (Maybe Text)

-- | A set of environment variables that overrides, for this build only,
--   the latest ones already defined in the build project.
startBuild_environmentVariablesOverride :: Lens' StartBuild (Maybe [EnvironmentVariable])

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
startBuild_buildStatusConfigOverride :: Lens' StartBuild (Maybe BuildStatusConfig)

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the StartBuild request. The token is included in the
--   StartBuild request and is valid for 5 minutes. If you repeat the
--   StartBuild request with the same token, but change a parameter,
--   CodeBuild returns a parameter mismatch error.
startBuild_idempotencyToken :: Lens' StartBuild (Maybe Text)

-- | Specifies if session debugging is enabled for this build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
startBuild_debugSessionEnabled :: Lens' StartBuild (Maybe Bool)

-- | The credentials for access to a private registry.
startBuild_registryCredentialOverride :: Lens' StartBuild (Maybe RegistryCredential)

-- | The number of build timeout minutes, from 5 to 480 (8 hours), that
--   overrides, for this build only, the latest setting already defined in
--   the build project.
startBuild_timeoutInMinutesOverride :: Lens' StartBuild (Maybe Natural)

-- | The name of a service role for this build that overrides the one
--   specified in the build project.
startBuild_serviceRoleOverride :: Lens' StartBuild (Maybe Text)

-- | A ProjectCache object specified for this build that overrides the one
--   defined in the build project.
startBuild_cacheOverride :: Lens' StartBuild (Maybe ProjectCache)

-- | The number of minutes a build is allowed to be queued before it times
--   out.
startBuild_queuedTimeoutInMinutesOverride :: Lens' StartBuild (Maybe Natural)

-- | An array of <tt>ProjectSource</tt> objects.
startBuild_secondarySourcesOverride :: Lens' StartBuild (Maybe [ProjectSource])

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this build only, any previous depth of history defined
--   in the build project.
startBuild_gitCloneDepthOverride :: Lens' StartBuild (Maybe Natural)

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
startBuild_imagePullCredentialsTypeOverride :: Lens' StartBuild (Maybe ImagePullCredentialsType)

-- | Log settings for this build that override the log settings defined in
--   the build project.
startBuild_logsConfigOverride :: Lens' StartBuild (Maybe LogsConfig)

-- | An authorization type for this build that overrides the one defined in
--   the build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
startBuild_sourceAuthOverride :: Lens' StartBuild (Maybe SourceAuth)

-- | Information about the Git submodules configuration for this build of
--   an CodeBuild build project.
startBuild_gitSubmodulesConfigOverride :: Lens' StartBuild (Maybe GitSubmodulesConfig)

-- | A container type for this build that overrides the one specified in
--   the build project.
startBuild_environmentTypeOverride :: Lens' StartBuild (Maybe EnvironmentType)

-- | The name of a certificate for this build that overrides the one
--   specified in the build project.
startBuild_certificateOverride :: Lens' StartBuild (Maybe Text)

-- | The name of a compute type for this build that overrides the one
--   specified in the build project.
startBuild_computeTypeOverride :: Lens' StartBuild (Maybe ComputeType)

-- | Enable this flag to override privileged mode in the build project.
startBuild_privilegedModeOverride :: Lens' StartBuild (Maybe Bool)

-- | The version of the build input to be built, for this build only. If
--   not specified, the latest version is used. If specified, the contents
--   depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
startBuild_sourceVersion :: Lens' StartBuild (Maybe Text)

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
startBuild_buildspecOverride :: Lens' StartBuild (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects that specify one or
--   more versions of the project's secondary sources to be used for this
--   build only.
startBuild_secondarySourcesVersionOverride :: Lens' StartBuild (Maybe [ProjectSourceVersion])

-- | Set to true to report to your source provider the status of a build's
--   start and completion. If you use this option with a source provider
--   other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
startBuild_reportBuildStatusOverride :: Lens' StartBuild (Maybe Bool)

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the build project. The insecure SSL setting determines
--   whether to ignore SSL warnings while connecting to the project source
--   code. This override applies only if the build's source is GitHub
--   Enterprise.
startBuild_insecureSslOverride :: Lens' StartBuild (Maybe Bool)

-- | The name of an image for this build that overrides the one specified
--   in the build project.
startBuild_imageOverride :: Lens' StartBuild (Maybe Text)

-- | An array of <tt>ProjectArtifacts</tt> objects.
startBuild_secondaryArtifactsOverride :: Lens' StartBuild (Maybe [ProjectArtifacts])

-- | Build output artifact settings that override, for this build only, the
--   latest ones already defined in the build project.
startBuild_artifactsOverride :: Lens' StartBuild (Maybe ProjectArtifacts)

-- | A source input type, for this build, that overrides the source input
--   defined in the build project.
startBuild_sourceTypeOverride :: Lens' StartBuild (Maybe SourceType)

-- | The name of the CodeBuild build project to start running a build.
startBuild_projectName :: Lens' StartBuild Text

-- | <i>See:</i> <a>newStartBuildResponse</a> smart constructor.
data StartBuildResponse
StartBuildResponse' :: Maybe Build -> Int -> StartBuildResponse

-- | Information about the build to be run.
[$sel:build:StartBuildResponse'] :: StartBuildResponse -> Maybe Build

-- | The response's http status code.
[$sel:httpStatus:StartBuildResponse'] :: StartBuildResponse -> Int

-- | Create a value of <a>StartBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:StartBuildResponse'</a>, <a>startBuildResponse_build</a>
--   - Information about the build to be run.
--   
--   <a>$sel:httpStatus:StartBuildResponse'</a>,
--   <a>startBuildResponse_httpStatus</a> - The response's http status
--   code.
newStartBuildResponse :: Int -> StartBuildResponse

-- | Information about the build to be run.
startBuildResponse_build :: Lens' StartBuildResponse (Maybe Build)

-- | The response's http status code.
startBuildResponse_httpStatus :: Lens' StartBuildResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.StartBuild.StartBuild
instance GHC.Show.Show Amazonka.CodeBuild.StartBuild.StartBuild
instance GHC.Read.Read Amazonka.CodeBuild.StartBuild.StartBuild
instance GHC.Classes.Eq Amazonka.CodeBuild.StartBuild.StartBuild
instance GHC.Generics.Generic Amazonka.CodeBuild.StartBuild.StartBuildResponse
instance GHC.Show.Show Amazonka.CodeBuild.StartBuild.StartBuildResponse
instance GHC.Read.Read Amazonka.CodeBuild.StartBuild.StartBuildResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.StartBuild.StartBuildResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.StartBuild.StartBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StartBuild.StartBuildResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.StartBuild.StartBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.StartBuild.StartBuild
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.StartBuild.StartBuild
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.StartBuild.StartBuild
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.StartBuild.StartBuild
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.StartBuild.StartBuild


-- | Restarts a failed batch build. Only batch builds that have failed can
--   be retried.
module Amazonka.CodeBuild.RetryBuildBatch

-- | <i>See:</i> <a>newRetryBuildBatch</a> smart constructor.
data RetryBuildBatch
RetryBuildBatch' :: Maybe Text -> Maybe Text -> Maybe RetryBuildBatchType -> RetryBuildBatch

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuildBatch</tt> request. The token is
--   included in the <tt>RetryBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>RetryBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
[$sel:idempotencyToken:RetryBuildBatch'] :: RetryBuildBatch -> Maybe Text

-- | Specifies the identifier of the batch build to restart.
[$sel:id:RetryBuildBatch'] :: RetryBuildBatch -> Maybe Text

-- | Specifies the type of retry to perform.
[$sel:retryType:RetryBuildBatch'] :: RetryBuildBatch -> Maybe RetryBuildBatchType

-- | Create a value of <a>RetryBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:RetryBuildBatch'</a>,
--   <a>retryBuildBatch_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>RetryBuildBatch</tt> request. The token is included in the
--   <tt>RetryBuildBatch</tt> request and is valid for five minutes. If you
--   repeat the <tt>RetryBuildBatch</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:id:RetryBuildBatch'</a>, <a>retryBuildBatch_id</a> - Specifies
--   the identifier of the batch build to restart.
--   
--   <a>$sel:retryType:RetryBuildBatch'</a>,
--   <a>retryBuildBatch_retryType</a> - Specifies the type of retry to
--   perform.
newRetryBuildBatch :: RetryBuildBatch

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuildBatch</tt> request. The token is
--   included in the <tt>RetryBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>RetryBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
retryBuildBatch_idempotencyToken :: Lens' RetryBuildBatch (Maybe Text)

-- | Specifies the identifier of the batch build to restart.
retryBuildBatch_id :: Lens' RetryBuildBatch (Maybe Text)

-- | Specifies the type of retry to perform.
retryBuildBatch_retryType :: Lens' RetryBuildBatch (Maybe RetryBuildBatchType)

-- | <i>See:</i> <a>newRetryBuildBatchResponse</a> smart constructor.
data RetryBuildBatchResponse
RetryBuildBatchResponse' :: Maybe BuildBatch -> Int -> RetryBuildBatchResponse
[$sel:buildBatch:RetryBuildBatchResponse'] :: RetryBuildBatchResponse -> Maybe BuildBatch

-- | The response's http status code.
[$sel:httpStatus:RetryBuildBatchResponse'] :: RetryBuildBatchResponse -> Int

-- | Create a value of <a>RetryBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:RetryBuildBatchResponse'</a>,
--   <a>retryBuildBatchResponse_buildBatch</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RetryBuildBatchResponse'</a>,
--   <a>retryBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newRetryBuildBatchResponse :: Int -> RetryBuildBatchResponse

-- | Undocumented member.
retryBuildBatchResponse_buildBatch :: Lens' RetryBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
retryBuildBatchResponse_httpStatus :: Lens' RetryBuildBatchResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance GHC.Show.Show Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance GHC.Read.Read Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance GHC.Classes.Eq Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance GHC.Generics.Generic Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatchResponse
instance GHC.Show.Show Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatchResponse
instance GHC.Read.Read Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatchResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.RetryBuildBatch.RetryBuildBatch


-- | Restarts a build.
module Amazonka.CodeBuild.RetryBuild

-- | <i>See:</i> <a>newRetryBuild</a> smart constructor.
data RetryBuild
RetryBuild' :: Maybe Text -> Maybe Text -> RetryBuild

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuild</tt> request. The token is included
--   in the <tt>RetryBuild</tt> request and is valid for five minutes. If
--   you repeat the <tt>RetryBuild</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
[$sel:idempotencyToken:RetryBuild'] :: RetryBuild -> Maybe Text

-- | Specifies the identifier of the build to restart.
[$sel:id:RetryBuild'] :: RetryBuild -> Maybe Text

-- | Create a value of <a>RetryBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:RetryBuild'</a>,
--   <a>retryBuild_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>RetryBuild</tt> request. The token is included in the
--   <tt>RetryBuild</tt> request and is valid for five minutes. If you
--   repeat the <tt>RetryBuild</tt> request with the same token, but change
--   a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:id:RetryBuild'</a>, <a>retryBuild_id</a> - Specifies the
--   identifier of the build to restart.
newRetryBuild :: RetryBuild

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuild</tt> request. The token is included
--   in the <tt>RetryBuild</tt> request and is valid for five minutes. If
--   you repeat the <tt>RetryBuild</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
retryBuild_idempotencyToken :: Lens' RetryBuild (Maybe Text)

-- | Specifies the identifier of the build to restart.
retryBuild_id :: Lens' RetryBuild (Maybe Text)

-- | <i>See:</i> <a>newRetryBuildResponse</a> smart constructor.
data RetryBuildResponse
RetryBuildResponse' :: Maybe Build -> Int -> RetryBuildResponse
[$sel:build:RetryBuildResponse'] :: RetryBuildResponse -> Maybe Build

-- | The response's http status code.
[$sel:httpStatus:RetryBuildResponse'] :: RetryBuildResponse -> Int

-- | Create a value of <a>RetryBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:RetryBuildResponse'</a>, <a>retryBuildResponse_build</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:RetryBuildResponse'</a>,
--   <a>retryBuildResponse_httpStatus</a> - The response's http status
--   code.
newRetryBuildResponse :: Int -> RetryBuildResponse

-- | Undocumented member.
retryBuildResponse_build :: Lens' RetryBuildResponse (Maybe Build)

-- | The response's http status code.
retryBuildResponse_httpStatus :: Lens' RetryBuildResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.RetryBuild.RetryBuild
instance GHC.Show.Show Amazonka.CodeBuild.RetryBuild.RetryBuild
instance GHC.Read.Read Amazonka.CodeBuild.RetryBuild.RetryBuild
instance GHC.Classes.Eq Amazonka.CodeBuild.RetryBuild.RetryBuild
instance GHC.Generics.Generic Amazonka.CodeBuild.RetryBuild.RetryBuildResponse
instance GHC.Show.Show Amazonka.CodeBuild.RetryBuild.RetryBuildResponse
instance GHC.Read.Read Amazonka.CodeBuild.RetryBuild.RetryBuildResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.RetryBuild.RetryBuildResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.RetryBuild.RetryBuildResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Control.DeepSeq.NFData Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.RetryBuild.RetryBuild
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.RetryBuild.RetryBuild


-- | Stores a resource policy for the ARN of a <tt>Project</tt> or
--   <tt>ReportGroup</tt> object.
module Amazonka.CodeBuild.PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Text -> Text -> PutResourcePolicy

-- | A JSON-formatted resource policy. For more information, see <a>Sharing
--   a Project</a> and <a>Sharing a Report Group</a> in the <i>CodeBuild
--   User Guide</i>.
[$sel:policy:PutResourcePolicy'] :: PutResourcePolicy -> Text

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource you
--   want to associate with a resource policy.
[$sel:resourceArn:PutResourcePolicy'] :: PutResourcePolicy -> Text

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutResourcePolicy'</a>, <a>putResourcePolicy_policy</a>
--   - A JSON-formatted resource policy. For more information, see
--   <a>Sharing a Project</a> and <a>Sharing a Report Group</a> in the
--   <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourceArn</a> - The ARN of the <tt>Project</tt>
--   or <tt>ReportGroup</tt> resource you want to associate with a resource
--   policy.
newPutResourcePolicy :: Text -> Text -> PutResourcePolicy

-- | A JSON-formatted resource policy. For more information, see <a>Sharing
--   a Project</a> and <a>Sharing a Report Group</a> in the <i>CodeBuild
--   User Guide</i>.
putResourcePolicy_policy :: Lens' PutResourcePolicy Text

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource you
--   want to associate with a resource policy.
putResourcePolicy_resourceArn :: Lens' PutResourcePolicy Text

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Int -> PutResourcePolicyResponse

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource that
--   is associated with a resource policy.
[$sel:resourceArn:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Int

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicyResponse_resourceArn</a> - The ARN of the
--   <tt>Project</tt> or <tt>ReportGroup</tt> resource that is associated
--   with a resource policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource that
--   is associated with a resource policy.
putResourcePolicyResponse_resourceArn :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance GHC.Show.Show Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance GHC.Read.Read Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance GHC.Classes.Eq Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance GHC.Generics.Generic Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Show.Show Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Read.Read Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.PutResourcePolicy.PutResourcePolicy


-- | Returns a list of <tt>SourceCredentialsInfo</tt> objects.
module Amazonka.CodeBuild.ListSourceCredentials

-- | <i>See:</i> <a>newListSourceCredentials</a> smart constructor.
data ListSourceCredentials
ListSourceCredentials' :: ListSourceCredentials

-- | Create a value of <a>ListSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newListSourceCredentials :: ListSourceCredentials

-- | <i>See:</i> <a>newListSourceCredentialsResponse</a> smart constructor.
data ListSourceCredentialsResponse
ListSourceCredentialsResponse' :: Maybe [SourceCredentialsInfo] -> Int -> ListSourceCredentialsResponse

-- | A list of <tt>SourceCredentialsInfo</tt> objects. Each
--   <tt>SourceCredentialsInfo</tt> object includes the authentication
--   type, token ARN, and type of source provider for one set of
--   credentials.
[$sel:sourceCredentialsInfos:ListSourceCredentialsResponse'] :: ListSourceCredentialsResponse -> Maybe [SourceCredentialsInfo]

-- | The response's http status code.
[$sel:httpStatus:ListSourceCredentialsResponse'] :: ListSourceCredentialsResponse -> Int

-- | Create a value of <a>ListSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCredentialsInfos:ListSourceCredentialsResponse'</a>,
--   <a>listSourceCredentialsResponse_sourceCredentialsInfos</a> - A list
--   of <tt>SourceCredentialsInfo</tt> objects. Each
--   <tt>SourceCredentialsInfo</tt> object includes the authentication
--   type, token ARN, and type of source provider for one set of
--   credentials.
--   
--   <a>$sel:httpStatus:ListSourceCredentialsResponse'</a>,
--   <a>listSourceCredentialsResponse_httpStatus</a> - The response's http
--   status code.
newListSourceCredentialsResponse :: Int -> ListSourceCredentialsResponse

-- | A list of <tt>SourceCredentialsInfo</tt> objects. Each
--   <tt>SourceCredentialsInfo</tt> object includes the authentication
--   type, token ARN, and type of source provider for one set of
--   credentials.
listSourceCredentialsResponse_sourceCredentialsInfos :: Lens' ListSourceCredentialsResponse (Maybe [SourceCredentialsInfo])

-- | The response's http status code.
listSourceCredentialsResponse_httpStatus :: Lens' ListSourceCredentialsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance GHC.Show.Show Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance GHC.Read.Read Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentialsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentialsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentialsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentialsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentialsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListSourceCredentials.ListSourceCredentials


-- | Gets a list of report groups that are shared with other Amazon Web
--   Services accounts or users.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListSharedReportGroups

-- | <i>See:</i> <a>newListSharedReportGroups</a> smart constructor.
data ListSharedReportGroups
ListSharedReportGroups' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe SharedResourceSortByType -> ListSharedReportGroups

-- | The order in which to list shared report groups. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
[$sel:sortOrder:ListSharedReportGroups'] :: ListSharedReportGroups -> Maybe SortOrderType

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListSharedReportGroups'] :: ListSharedReportGroups -> Maybe Text

-- | The maximum number of paginated shared report groups per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
[$sel:maxResults:ListSharedReportGroups'] :: ListSharedReportGroups -> Maybe Natural

-- | The criterion to be used to list report groups shared with the current
--   Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared report group was last changed.</li>
--   </ul>
[$sel:sortBy:ListSharedReportGroups'] :: ListSharedReportGroups -> Maybe SharedResourceSortByType

-- | Create a value of <a>ListSharedReportGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_sortOrder</a> - The order in which to list
--   shared report groups. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_maxResults</a> - The maximum number of
--   paginated shared report groups per response. Use <tt>nextToken</tt> to
--   iterate pages in the list of returned <tt>ReportGroup</tt> objects.
--   The default value is 100.
--   
--   <a>$sel:sortBy:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_sortBy</a> - The criterion to be used to
--   list report groups shared with the current Amazon Web Services account
--   or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared report group was last changed.</li>
--   </ul>
newListSharedReportGroups :: ListSharedReportGroups

-- | The order in which to list shared report groups. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
listSharedReportGroups_sortOrder :: Lens' ListSharedReportGroups (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedReportGroups_nextToken :: Lens' ListSharedReportGroups (Maybe Text)

-- | The maximum number of paginated shared report groups per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
listSharedReportGroups_maxResults :: Lens' ListSharedReportGroups (Maybe Natural)

-- | The criterion to be used to list report groups shared with the current
--   Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared report group was last changed.</li>
--   </ul>
listSharedReportGroups_sortBy :: Lens' ListSharedReportGroups (Maybe SharedResourceSortByType)

-- | <i>See:</i> <a>newListSharedReportGroupsResponse</a> smart
--   constructor.
data ListSharedReportGroupsResponse
ListSharedReportGroupsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListSharedReportGroupsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListSharedReportGroupsResponse'] :: ListSharedReportGroupsResponse -> Maybe Text

-- | The list of ARNs for the report groups shared with the current Amazon
--   Web Services account or user.
[$sel:reportGroups:ListSharedReportGroupsResponse'] :: ListSharedReportGroupsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListSharedReportGroupsResponse'] :: ListSharedReportGroupsResponse -> Int

-- | Create a value of <a>ListSharedReportGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroupsResponse_nextToken</a> - During a previous
--   call, the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:reportGroups:ListSharedReportGroupsResponse'</a>,
--   <a>listSharedReportGroupsResponse_reportGroups</a> - The list of ARNs
--   for the report groups shared with the current Amazon Web Services
--   account or user.
--   
--   <a>$sel:httpStatus:ListSharedReportGroupsResponse'</a>,
--   <a>listSharedReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListSharedReportGroupsResponse :: Int -> ListSharedReportGroupsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedReportGroupsResponse_nextToken :: Lens' ListSharedReportGroupsResponse (Maybe Text)

-- | The list of ARNs for the report groups shared with the current Amazon
--   Web Services account or user.
listSharedReportGroupsResponse_reportGroups :: Lens' ListSharedReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listSharedReportGroupsResponse_httpStatus :: Lens' ListSharedReportGroupsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance GHC.Show.Show Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance GHC.Read.Read Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroupsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroupsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroupsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListSharedReportGroups.ListSharedReportGroups


-- | Gets a list of projects that are shared with other Amazon Web Services
--   accounts or users.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListSharedProjects

-- | <i>See:</i> <a>newListSharedProjects</a> smart constructor.
data ListSharedProjects
ListSharedProjects' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe SharedResourceSortByType -> ListSharedProjects

-- | The order in which to list shared build projects. Valid values
--   include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
[$sel:sortOrder:ListSharedProjects'] :: ListSharedProjects -> Maybe SortOrderType

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListSharedProjects'] :: ListSharedProjects -> Maybe Text

-- | The maximum number of paginated shared build projects returned per
--   response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Project</tt> objects. The default value is 100.
[$sel:maxResults:ListSharedProjects'] :: ListSharedProjects -> Maybe Natural

-- | The criterion to be used to list build projects shared with the
--   current Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared project was last changed.</li>
--   </ul>
[$sel:sortBy:ListSharedProjects'] :: ListSharedProjects -> Maybe SharedResourceSortByType

-- | Create a value of <a>ListSharedProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListSharedProjects'</a>,
--   <a>listSharedProjects_sortOrder</a> - The order in which to list
--   shared build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListSharedProjects'</a>,
--   <a>listSharedProjects_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListSharedProjects'</a>,
--   <a>listSharedProjects_maxResults</a> - The maximum number of paginated
--   shared build projects returned per response. Use <tt>nextToken</tt> to
--   iterate pages in the list of returned <tt>Project</tt> objects. The
--   default value is 100.
--   
--   <a>$sel:sortBy:ListSharedProjects'</a>,
--   <a>listSharedProjects_sortBy</a> - The criterion to be used to list
--   build projects shared with the current Amazon Web Services account or
--   user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared project was last changed.</li>
--   </ul>
newListSharedProjects :: ListSharedProjects

-- | The order in which to list shared build projects. Valid values
--   include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
listSharedProjects_sortOrder :: Lens' ListSharedProjects (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedProjects_nextToken :: Lens' ListSharedProjects (Maybe Text)

-- | The maximum number of paginated shared build projects returned per
--   response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Project</tt> objects. The default value is 100.
listSharedProjects_maxResults :: Lens' ListSharedProjects (Maybe Natural)

-- | The criterion to be used to list build projects shared with the
--   current Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared project was last changed.</li>
--   </ul>
listSharedProjects_sortBy :: Lens' ListSharedProjects (Maybe SharedResourceSortByType)

-- | <i>See:</i> <a>newListSharedProjectsResponse</a> smart constructor.
data ListSharedProjectsResponse
ListSharedProjectsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListSharedProjectsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListSharedProjectsResponse'] :: ListSharedProjectsResponse -> Maybe Text

-- | The list of ARNs for the build projects shared with the current Amazon
--   Web Services account or user.
[$sel:projects:ListSharedProjectsResponse'] :: ListSharedProjectsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListSharedProjectsResponse'] :: ListSharedProjectsResponse -> Int

-- | Create a value of <a>ListSharedProjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSharedProjects'</a>,
--   <a>listSharedProjectsResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:projects:ListSharedProjectsResponse'</a>,
--   <a>listSharedProjectsResponse_projects</a> - The list of ARNs for the
--   build projects shared with the current Amazon Web Services account or
--   user.
--   
--   <a>$sel:httpStatus:ListSharedProjectsResponse'</a>,
--   <a>listSharedProjectsResponse_httpStatus</a> - The response's http
--   status code.
newListSharedProjectsResponse :: Int -> ListSharedProjectsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedProjectsResponse_nextToken :: Lens' ListSharedProjectsResponse (Maybe Text)

-- | The list of ARNs for the build projects shared with the current Amazon
--   Web Services account or user.
listSharedProjectsResponse_projects :: Lens' ListSharedProjectsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listSharedProjectsResponse_httpStatus :: Lens' ListSharedProjectsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance GHC.Show.Show Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance GHC.Read.Read Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance GHC.Generics.Generic Amazonka.CodeBuild.ListSharedProjects.ListSharedProjectsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListSharedProjects.ListSharedProjectsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListSharedProjects.ListSharedProjectsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListSharedProjects.ListSharedProjectsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSharedProjects.ListSharedProjectsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListSharedProjects.ListSharedProjects


-- | Returns a list of ARNs for the reports that belong to a
--   <tt>ReportGroup</tt>.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListReportsForReportGroup

-- | <i>See:</i> <a>newListReportsForReportGroup</a> smart constructor.
data ListReportsForReportGroup
ListReportsForReportGroup' :: Maybe SortOrderType -> Maybe Text -> Maybe ReportFilter -> Maybe Natural -> Text -> ListReportsForReportGroup

-- | Use to specify whether the results are returned in ascending or
--   descending order.
[$sel:sortOrder:ListReportsForReportGroup'] :: ListReportsForReportGroup -> Maybe SortOrderType

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReportsForReportGroup'] :: ListReportsForReportGroup -> Maybe Text

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
[$sel:filter':ListReportsForReportGroup'] :: ListReportsForReportGroup -> Maybe ReportFilter

-- | The maximum number of paginated reports in this report group returned
--   per response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Report</tt> objects. The default value is 100.
[$sel:maxResults:ListReportsForReportGroup'] :: ListReportsForReportGroup -> Maybe Natural

-- | The ARN of the report group for which you want to return report ARNs.
[$sel:reportGroupArn:ListReportsForReportGroup'] :: ListReportsForReportGroup -> Text

-- | Create a value of <a>ListReportsForReportGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_sortOrder</a> - Use to specify whether
--   the results are returned in ascending or descending order.
--   
--   <a>$sel:nextToken:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:filter':ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_filter</a> - A <tt>ReportFilter</tt>
--   object used to filter the returned reports.
--   
--   <a>$sel:maxResults:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_maxResults</a> - The maximum number of
--   paginated reports in this report group returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
--   
--   <a>$sel:reportGroupArn:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_reportGroupArn</a> - The ARN of the
--   report group for which you want to return report ARNs.
newListReportsForReportGroup :: Text -> ListReportsForReportGroup

-- | Use to specify whether the results are returned in ascending or
--   descending order.
listReportsForReportGroup_sortOrder :: Lens' ListReportsForReportGroup (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsForReportGroup_nextToken :: Lens' ListReportsForReportGroup (Maybe Text)

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
listReportsForReportGroup_filter :: Lens' ListReportsForReportGroup (Maybe ReportFilter)

-- | The maximum number of paginated reports in this report group returned
--   per response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Report</tt> objects. The default value is 100.
listReportsForReportGroup_maxResults :: Lens' ListReportsForReportGroup (Maybe Natural)

-- | The ARN of the report group for which you want to return report ARNs.
listReportsForReportGroup_reportGroupArn :: Lens' ListReportsForReportGroup Text

-- | <i>See:</i> <a>newListReportsForReportGroupResponse</a> smart
--   constructor.
data ListReportsForReportGroupResponse
ListReportsForReportGroupResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListReportsForReportGroupResponse

-- | The list of report ARNs.
[$sel:reports:ListReportsForReportGroupResponse'] :: ListReportsForReportGroupResponse -> Maybe (NonEmpty Text)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReportsForReportGroupResponse'] :: ListReportsForReportGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListReportsForReportGroupResponse'] :: ListReportsForReportGroupResponse -> Int

-- | Create a value of <a>ListReportsForReportGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:ListReportsForReportGroupResponse'</a>,
--   <a>listReportsForReportGroupResponse_reports</a> - The list of report
--   ARNs.
--   
--   <a>$sel:nextToken:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroupResponse_nextToken</a> - During a previous
--   call, the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:httpStatus:ListReportsForReportGroupResponse'</a>,
--   <a>listReportsForReportGroupResponse_httpStatus</a> - The response's
--   http status code.
newListReportsForReportGroupResponse :: Int -> ListReportsForReportGroupResponse

-- | The list of report ARNs.
listReportsForReportGroupResponse_reports :: Lens' ListReportsForReportGroupResponse (Maybe (NonEmpty Text))

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsForReportGroupResponse_nextToken :: Lens' ListReportsForReportGroupResponse (Maybe Text)

-- | The response's http status code.
listReportsForReportGroupResponse_httpStatus :: Lens' ListReportsForReportGroupResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance GHC.Show.Show Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance GHC.Read.Read Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroupResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroupResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroupResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroupResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListReportsForReportGroup.ListReportsForReportGroup


-- | Returns a list of ARNs for the reports in the current Amazon Web
--   Services account.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListReports

-- | <i>See:</i> <a>newListReports</a> smart constructor.
data ListReports
ListReports' :: Maybe SortOrderType -> Maybe Text -> Maybe ReportFilter -> Maybe Natural -> ListReports

-- | Specifies the sort order for the list of returned reports. Valid
--   values are:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: return reports in chronological order based on
--   their creation date.</li>
--   <li><tt>DESCENDING</tt>: return reports in the reverse chronological
--   order based on their creation date.</li>
--   </ul>
[$sel:sortOrder:ListReports'] :: ListReports -> Maybe SortOrderType

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReports'] :: ListReports -> Maybe Text

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
[$sel:filter':ListReports'] :: ListReports -> Maybe ReportFilter

-- | The maximum number of paginated reports returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
[$sel:maxResults:ListReports'] :: ListReports -> Maybe Natural

-- | Create a value of <a>ListReports</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReports'</a>, <a>listReports_sortOrder</a> -
--   Specifies the sort order for the list of returned reports. Valid
--   values are:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: return reports in chronological order based on
--   their creation date.</li>
--   <li><tt>DESCENDING</tt>: return reports in the reverse chronological
--   order based on their creation date.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListReports'</a>, <a>listReports_nextToken</a> -
--   During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
--   
--   <a>$sel:filter':ListReports'</a>, <a>listReports_filter</a> - A
--   <tt>ReportFilter</tt> object used to filter the returned reports.
--   
--   <a>$sel:maxResults:ListReports'</a>, <a>listReports_maxResults</a> -
--   The maximum number of paginated reports returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
newListReports :: ListReports

-- | Specifies the sort order for the list of returned reports. Valid
--   values are:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: return reports in chronological order based on
--   their creation date.</li>
--   <li><tt>DESCENDING</tt>: return reports in the reverse chronological
--   order based on their creation date.</li>
--   </ul>
listReports_sortOrder :: Lens' ListReports (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReports_nextToken :: Lens' ListReports (Maybe Text)

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
listReports_filter :: Lens' ListReports (Maybe ReportFilter)

-- | The maximum number of paginated reports returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
listReports_maxResults :: Lens' ListReports (Maybe Natural)

-- | <i>See:</i> <a>newListReportsResponse</a> smart constructor.
data ListReportsResponse
ListReportsResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListReportsResponse

-- | The list of returned ARNs for the reports in the current Amazon Web
--   Services account.
[$sel:reports:ListReportsResponse'] :: ListReportsResponse -> Maybe (NonEmpty Text)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReportsResponse'] :: ListReportsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListReportsResponse'] :: ListReportsResponse -> Int

-- | Create a value of <a>ListReportsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:ListReportsResponse'</a>,
--   <a>listReportsResponse_reports</a> - The list of returned ARNs for the
--   reports in the current Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListReports'</a>,
--   <a>listReportsResponse_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:httpStatus:ListReportsResponse'</a>,
--   <a>listReportsResponse_httpStatus</a> - The response's http status
--   code.
newListReportsResponse :: Int -> ListReportsResponse

-- | The list of returned ARNs for the reports in the current Amazon Web
--   Services account.
listReportsResponse_reports :: Lens' ListReportsResponse (Maybe (NonEmpty Text))

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsResponse_nextToken :: Lens' ListReportsResponse (Maybe Text)

-- | The response's http status code.
listReportsResponse_httpStatus :: Lens' ListReportsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReports.ListReports
instance GHC.Show.Show Amazonka.CodeBuild.ListReports.ListReports
instance GHC.Read.Read Amazonka.CodeBuild.ListReports.ListReports
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReports.ListReports
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReports.ListReportsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListReports.ListReportsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListReports.ListReportsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReports.ListReportsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListReports.ListReports
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReports.ListReportsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListReports.ListReports
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListReports.ListReports
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReports.ListReports
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListReports.ListReports
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListReports.ListReports
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListReports.ListReports
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListReports.ListReports


-- | Gets a list ARNs for the report groups in the current Amazon Web
--   Services account.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListReportGroups

-- | <i>See:</i> <a>newListReportGroups</a> smart constructor.
data ListReportGroups
ListReportGroups' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe ReportGroupSortByType -> ListReportGroups

-- | Used to specify the order to sort the list of returned report groups.
--   Valid values are <tt>ASCENDING</tt> and <tt>DESCENDING</tt>.
[$sel:sortOrder:ListReportGroups'] :: ListReportGroups -> Maybe SortOrderType

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReportGroups'] :: ListReportGroups -> Maybe Text

-- | The maximum number of paginated report groups returned per response.
--   Use <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
[$sel:maxResults:ListReportGroups'] :: ListReportGroups -> Maybe Natural

-- | The criterion to be used to list build report groups. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each report group was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when each report group
--   was last changed.</li>
--   <li><tt>NAME</tt>: List based on each report group's name.</li>
--   </ul>
[$sel:sortBy:ListReportGroups'] :: ListReportGroups -> Maybe ReportGroupSortByType

-- | Create a value of <a>ListReportGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReportGroups'</a>,
--   <a>listReportGroups_sortOrder</a> - Used to specify the order to sort
--   the list of returned report groups. Valid values are
--   <tt>ASCENDING</tt> and <tt>DESCENDING</tt>.
--   
--   <a>$sel:nextToken:ListReportGroups'</a>,
--   <a>listReportGroups_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListReportGroups'</a>,
--   <a>listReportGroups_maxResults</a> - The maximum number of paginated
--   report groups returned per response. Use <tt>nextToken</tt> to iterate
--   pages in the list of returned <tt>ReportGroup</tt> objects. The
--   default value is 100.
--   
--   <a>$sel:sortBy:ListReportGroups'</a>, <a>listReportGroups_sortBy</a> -
--   The criterion to be used to list build report groups. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each report group was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when each report group
--   was last changed.</li>
--   <li><tt>NAME</tt>: List based on each report group's name.</li>
--   </ul>
newListReportGroups :: ListReportGroups

-- | Used to specify the order to sort the list of returned report groups.
--   Valid values are <tt>ASCENDING</tt> and <tt>DESCENDING</tt>.
listReportGroups_sortOrder :: Lens' ListReportGroups (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportGroups_nextToken :: Lens' ListReportGroups (Maybe Text)

-- | The maximum number of paginated report groups returned per response.
--   Use <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
listReportGroups_maxResults :: Lens' ListReportGroups (Maybe Natural)

-- | The criterion to be used to list build report groups. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each report group was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when each report group
--   was last changed.</li>
--   <li><tt>NAME</tt>: List based on each report group's name.</li>
--   </ul>
listReportGroups_sortBy :: Lens' ListReportGroups (Maybe ReportGroupSortByType)

-- | <i>See:</i> <a>newListReportGroupsResponse</a> smart constructor.
data ListReportGroupsResponse
ListReportGroupsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListReportGroupsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:ListReportGroupsResponse'] :: ListReportGroupsResponse -> Maybe Text

-- | The list of ARNs for the report groups in the current Amazon Web
--   Services account.
[$sel:reportGroups:ListReportGroupsResponse'] :: ListReportGroupsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListReportGroupsResponse'] :: ListReportGroupsResponse -> Int

-- | Create a value of <a>ListReportGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReportGroups'</a>,
--   <a>listReportGroupsResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:reportGroups:ListReportGroupsResponse'</a>,
--   <a>listReportGroupsResponse_reportGroups</a> - The list of ARNs for
--   the report groups in the current Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListReportGroupsResponse'</a>,
--   <a>listReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListReportGroupsResponse :: Int -> ListReportGroupsResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportGroupsResponse_nextToken :: Lens' ListReportGroupsResponse (Maybe Text)

-- | The list of ARNs for the report groups in the current Amazon Web
--   Services account.
listReportGroupsResponse_reportGroups :: Lens' ListReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listReportGroupsResponse_httpStatus :: Lens' ListReportGroupsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance GHC.Show.Show Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance GHC.Read.Read Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance GHC.Generics.Generic Amazonka.CodeBuild.ListReportGroups.ListReportGroupsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListReportGroups.ListReportGroupsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListReportGroups.ListReportGroupsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListReportGroups.ListReportGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReportGroups.ListReportGroupsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListReportGroups.ListReportGroups
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListReportGroups.ListReportGroups


-- | Gets a list of build project names, with each build project name
--   representing a single build project.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListProjects

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe SortOrderType -> Maybe Text -> Maybe ProjectSortByType -> ListProjects

-- | The order in which to list build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   Use <tt>sortBy</tt> to specify the criterion to be used to list build
--   project names.
[$sel:sortOrder:ListProjects'] :: ListProjects -> Maybe SortOrderType

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
[$sel:nextToken:ListProjects'] :: ListProjects -> Maybe Text

-- | The criterion to be used to list build project names. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each build project was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when information about
--   each build project was last changed.</li>
--   <li><tt>NAME</tt>: List based on each build project's name.</li>
--   </ul>
--   
--   Use <tt>sortOrder</tt> to specify in what order to list the build
--   project names based on the preceding criteria.
[$sel:sortBy:ListProjects'] :: ListProjects -> Maybe ProjectSortByType

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListProjects'</a>, <a>listProjects_sortOrder</a> -
--   The order in which to list build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   Use <tt>sortBy</tt> to specify the criterion to be used to list build
--   project names.
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
--   
--   <a>$sel:sortBy:ListProjects'</a>, <a>listProjects_sortBy</a> - The
--   criterion to be used to list build project names. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each build project was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when information about
--   each build project was last changed.</li>
--   <li><tt>NAME</tt>: List based on each build project's name.</li>
--   </ul>
--   
--   Use <tt>sortOrder</tt> to specify in what order to list the build
--   project names based on the preceding criteria.
newListProjects :: ListProjects

-- | The order in which to list build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   Use <tt>sortBy</tt> to specify the criterion to be used to list build
--   project names.
listProjects_sortOrder :: Lens' ListProjects (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The criterion to be used to list build project names. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each build project was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when information about
--   each build project was last changed.</li>
--   <li><tt>NAME</tt>: List based on each build project's name.</li>
--   </ul>
--   
--   Use <tt>sortOrder</tt> to specify in what order to list the build
--   project names based on the preceding criteria.
listProjects_sortBy :: Lens' ListProjects (Maybe ProjectSortByType)

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListProjectsResponse

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
[$sel:nextToken:ListProjectsResponse'] :: ListProjectsResponse -> Maybe Text

-- | The list of build project names, with each build project name
--   representing a single build project.
[$sel:projects:ListProjectsResponse'] :: ListProjectsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListProjectsResponse'] :: ListProjectsResponse -> Int

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - If there are more than 100
--   items in the list, only the first 100 items are returned, along with a
--   unique string called a <i>nextToken</i>. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - The list of build project
--   names, with each build project name representing a single build
--   project.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The list of build project names, with each build project name
--   representing a single build project.
listProjectsResponse_projects :: Lens' ListProjectsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListProjects.ListProjects
instance GHC.Show.Show Amazonka.CodeBuild.ListProjects.ListProjects
instance GHC.Read.Read Amazonka.CodeBuild.ListProjects.ListProjects
instance GHC.Classes.Eq Amazonka.CodeBuild.ListProjects.ListProjects
instance GHC.Generics.Generic Amazonka.CodeBuild.ListProjects.ListProjectsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListProjects.ListProjectsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListProjects.ListProjectsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListProjects.ListProjectsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListProjects.ListProjectsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListProjects.ListProjects
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListProjects.ListProjects
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListProjects.ListProjects
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListProjects.ListProjects
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListProjects.ListProjects
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListProjects.ListProjects


-- | Gets information about Docker images that are managed by CodeBuild.
module Amazonka.CodeBuild.ListCuratedEnvironmentImages

-- | <i>See:</i> <a>newListCuratedEnvironmentImages</a> smart constructor.
data ListCuratedEnvironmentImages
ListCuratedEnvironmentImages' :: ListCuratedEnvironmentImages

-- | Create a value of <a>ListCuratedEnvironmentImages</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newListCuratedEnvironmentImages :: ListCuratedEnvironmentImages

-- | <i>See:</i> <a>newListCuratedEnvironmentImagesResponse</a> smart
--   constructor.
data ListCuratedEnvironmentImagesResponse
ListCuratedEnvironmentImagesResponse' :: Maybe [EnvironmentPlatform] -> Int -> ListCuratedEnvironmentImagesResponse

-- | Information about supported platforms for Docker images that are
--   managed by CodeBuild.
[$sel:platforms:ListCuratedEnvironmentImagesResponse'] :: ListCuratedEnvironmentImagesResponse -> Maybe [EnvironmentPlatform]

-- | The response's http status code.
[$sel:httpStatus:ListCuratedEnvironmentImagesResponse'] :: ListCuratedEnvironmentImagesResponse -> Int

-- | Create a value of <a>ListCuratedEnvironmentImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platforms:ListCuratedEnvironmentImagesResponse'</a>,
--   <a>listCuratedEnvironmentImagesResponse_platforms</a> - Information
--   about supported platforms for Docker images that are managed by
--   CodeBuild.
--   
--   <a>$sel:httpStatus:ListCuratedEnvironmentImagesResponse'</a>,
--   <a>listCuratedEnvironmentImagesResponse_httpStatus</a> - The
--   response's http status code.
newListCuratedEnvironmentImagesResponse :: Int -> ListCuratedEnvironmentImagesResponse

-- | Information about supported platforms for Docker images that are
--   managed by CodeBuild.
listCuratedEnvironmentImagesResponse_platforms :: Lens' ListCuratedEnvironmentImagesResponse (Maybe [EnvironmentPlatform])

-- | The response's http status code.
listCuratedEnvironmentImagesResponse_httpStatus :: Lens' ListCuratedEnvironmentImagesResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance GHC.Show.Show Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance GHC.Read.Read Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance GHC.Classes.Eq Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance GHC.Generics.Generic Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImagesResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImagesResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImagesResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImagesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImagesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListCuratedEnvironmentImages.ListCuratedEnvironmentImages


-- | Gets a list of build identifiers for the specified build project, with
--   each build identifier representing a single build.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListBuildsForProject

-- | <i>See:</i> <a>newListBuildsForProject</a> smart constructor.
data ListBuildsForProject
ListBuildsForProject' :: Maybe SortOrderType -> Maybe Text -> Text -> ListBuildsForProject

-- | The order to sort the results in. The results are sorted by build
--   number, not the build identifier. If this is not specified, the
--   results are sorted in descending order.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build identifiers in ascending order,
--   by build number.</li>
--   <li><tt>DESCENDING</tt>: List the build identifiers in descending
--   order, by build number.</li>
--   </ul>
--   
--   If the project has more than 100 builds, setting the sort order will
--   result in an error.
[$sel:sortOrder:ListBuildsForProject'] :: ListBuildsForProject -> Maybe SortOrderType

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
[$sel:nextToken:ListBuildsForProject'] :: ListBuildsForProject -> Maybe Text

-- | The name of the CodeBuild project.
[$sel:projectName:ListBuildsForProject'] :: ListBuildsForProject -> Text

-- | Create a value of <a>ListBuildsForProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_sortOrder</a> - The order to sort the results
--   in. The results are sorted by build number, not the build identifier.
--   If this is not specified, the results are sorted in descending order.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build identifiers in ascending order,
--   by build number.</li>
--   <li><tt>DESCENDING</tt>: List the build identifiers in descending
--   order, by build number.</li>
--   </ul>
--   
--   If the project has more than 100 builds, setting the sort order will
--   result in an error.
--   
--   <a>$sel:nextToken:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_nextToken</a> - During a previous call, if
--   there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call. To get all of the items in the
--   list, keep calling this operation with each subsequent next token that
--   is returned, until no more next tokens are returned.
--   
--   <a>$sel:projectName:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_projectName</a> - The name of the CodeBuild
--   project.
newListBuildsForProject :: Text -> ListBuildsForProject

-- | The order to sort the results in. The results are sorted by build
--   number, not the build identifier. If this is not specified, the
--   results are sorted in descending order.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build identifiers in ascending order,
--   by build number.</li>
--   <li><tt>DESCENDING</tt>: List the build identifiers in descending
--   order, by build number.</li>
--   </ul>
--   
--   If the project has more than 100 builds, setting the sort order will
--   result in an error.
listBuildsForProject_sortOrder :: Lens' ListBuildsForProject (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listBuildsForProject_nextToken :: Lens' ListBuildsForProject (Maybe Text)

-- | The name of the CodeBuild project.
listBuildsForProject_projectName :: Lens' ListBuildsForProject Text

-- | <i>See:</i> <a>newListBuildsForProjectResponse</a> smart constructor.
data ListBuildsForProjectResponse
ListBuildsForProjectResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListBuildsForProjectResponse

-- | A list of build identifiers for the specified build project, with each
--   build ID representing a single build.
[$sel:ids:ListBuildsForProjectResponse'] :: ListBuildsForProjectResponse -> Maybe (NonEmpty Text)

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
[$sel:nextToken:ListBuildsForProjectResponse'] :: ListBuildsForProjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBuildsForProjectResponse'] :: ListBuildsForProjectResponse -> Int

-- | Create a value of <a>ListBuildsForProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildsForProjectResponse'</a>,
--   <a>listBuildsForProjectResponse_ids</a> - A list of build identifiers
--   for the specified build project, with each build ID representing a
--   single build.
--   
--   <a>$sel:nextToken:ListBuildsForProject'</a>,
--   <a>listBuildsForProjectResponse_nextToken</a> - If there are more than
--   100 items in the list, only the first 100 items are returned, along
--   with a unique string called a <i>nextToken</i>. To get the next batch
--   of items in the list, call this operation again, adding the next token
--   to the call.
--   
--   <a>$sel:httpStatus:ListBuildsForProjectResponse'</a>,
--   <a>listBuildsForProjectResponse_httpStatus</a> - The response's http
--   status code.
newListBuildsForProjectResponse :: Int -> ListBuildsForProjectResponse

-- | A list of build identifiers for the specified build project, with each
--   build ID representing a single build.
listBuildsForProjectResponse_ids :: Lens' ListBuildsForProjectResponse (Maybe (NonEmpty Text))

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listBuildsForProjectResponse_nextToken :: Lens' ListBuildsForProjectResponse (Maybe Text)

-- | The response's http status code.
listBuildsForProjectResponse_httpStatus :: Lens' ListBuildsForProjectResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProjectResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProjectResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProjectResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProjectResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListBuildsForProject.ListBuildsForProject


-- | Gets a list of build IDs, with each build ID representing a single
--   build.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListBuilds

-- | <i>See:</i> <a>newListBuilds</a> smart constructor.
data ListBuilds
ListBuilds' :: Maybe SortOrderType -> Maybe Text -> ListBuilds

-- | The order to list build IDs. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build IDs in ascending order by build
--   ID.</li>
--   <li><tt>DESCENDING</tt>: List the build IDs in descending order by
--   build ID.</li>
--   </ul>
[$sel:sortOrder:ListBuilds'] :: ListBuilds -> Maybe SortOrderType

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
[$sel:nextToken:ListBuilds'] :: ListBuilds -> Maybe Text

-- | Create a value of <a>ListBuilds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuilds'</a>, <a>listBuilds_sortOrder</a> - The
--   order to list build IDs. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build IDs in ascending order by build
--   ID.</li>
--   <li><tt>DESCENDING</tt>: List the build IDs in descending order by
--   build ID.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuilds_nextToken</a> -
--   During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
newListBuilds :: ListBuilds

-- | The order to list build IDs. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build IDs in ascending order by build
--   ID.</li>
--   <li><tt>DESCENDING</tt>: List the build IDs in descending order by
--   build ID.</li>
--   </ul>
listBuilds_sortOrder :: Lens' ListBuilds (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listBuilds_nextToken :: Lens' ListBuilds (Maybe Text)

-- | <i>See:</i> <a>newListBuildsResponse</a> smart constructor.
data ListBuildsResponse
ListBuildsResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListBuildsResponse

-- | A list of build IDs, with each build ID representing a single build.
[$sel:ids:ListBuildsResponse'] :: ListBuildsResponse -> Maybe (NonEmpty Text)

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
[$sel:nextToken:ListBuildsResponse'] :: ListBuildsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBuildsResponse'] :: ListBuildsResponse -> Int

-- | Create a value of <a>ListBuildsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildsResponse'</a>, <a>listBuildsResponse_ids</a> - A
--   list of build IDs, with each build ID representing a single build.
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuildsResponse_nextToken</a>
--   - If there are more than 100 items in the list, only the first 100
--   items are returned, along with a unique string called a
--   <i>nextToken</i>. To get the next batch of items in the list, call
--   this operation again, adding the next token to the call.
--   
--   <a>$sel:httpStatus:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_httpStatus</a> - The response's http status
--   code.
newListBuildsResponse :: Int -> ListBuildsResponse

-- | A list of build IDs, with each build ID representing a single build.
listBuildsResponse_ids :: Lens' ListBuildsResponse (Maybe (NonEmpty Text))

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listBuildsResponse_nextToken :: Lens' ListBuildsResponse (Maybe Text)

-- | The response's http status code.
listBuildsResponse_httpStatus :: Lens' ListBuildsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuilds.ListBuilds
instance GHC.Show.Show Amazonka.CodeBuild.ListBuilds.ListBuilds
instance GHC.Read.Read Amazonka.CodeBuild.ListBuilds.ListBuilds
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuilds.ListBuilds
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuilds.ListBuildsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListBuilds.ListBuildsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListBuilds.ListBuildsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuilds.ListBuildsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuilds.ListBuildsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListBuilds.ListBuilds
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListBuilds.ListBuilds


-- | Retrieves the identifiers of the build batches for a specific project.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListBuildBatchesForProject

-- | <i>See:</i> <a>newListBuildBatchesForProject</a> smart constructor.
data ListBuildBatchesForProject
ListBuildBatchesForProject' :: Maybe SortOrderType -> Maybe Text -> Maybe Text -> Maybe BuildBatchFilter -> Maybe Natural -> ListBuildBatchesForProject

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
[$sel:sortOrder:ListBuildBatchesForProject'] :: ListBuildBatchesForProject -> Maybe SortOrderType

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatchesForProject</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
[$sel:nextToken:ListBuildBatchesForProject'] :: ListBuildBatchesForProject -> Maybe Text

-- | The name of the project.
[$sel:projectName:ListBuildBatchesForProject'] :: ListBuildBatchesForProject -> Maybe Text

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
[$sel:filter':ListBuildBatchesForProject'] :: ListBuildBatchesForProject -> Maybe BuildBatchFilter

-- | The maximum number of results to return.
[$sel:maxResults:ListBuildBatchesForProject'] :: ListBuildBatchesForProject -> Maybe Natural

-- | Create a value of <a>ListBuildBatchesForProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_sortOrder</a> - Specifies the sort order
--   of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous call to
--   <tt>ListBuildBatchesForProject</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
--   
--   <a>$sel:projectName:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_projectName</a> - The name of the
--   project.
--   
--   <a>$sel:filter':ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_filter</a> - A <tt>BuildBatchFilter</tt>
--   object that specifies the filters for the search.
--   
--   <a>$sel:maxResults:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_maxResults</a> - The maximum number of
--   results to return.
newListBuildBatchesForProject :: ListBuildBatchesForProject

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
listBuildBatchesForProject_sortOrder :: Lens' ListBuildBatchesForProject (Maybe SortOrderType)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatchesForProject</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
listBuildBatchesForProject_nextToken :: Lens' ListBuildBatchesForProject (Maybe Text)

-- | The name of the project.
listBuildBatchesForProject_projectName :: Lens' ListBuildBatchesForProject (Maybe Text)

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
listBuildBatchesForProject_filter :: Lens' ListBuildBatchesForProject (Maybe BuildBatchFilter)

-- | The maximum number of results to return.
listBuildBatchesForProject_maxResults :: Lens' ListBuildBatchesForProject (Maybe Natural)

-- | <i>See:</i> <a>newListBuildBatchesForProjectResponse</a> smart
--   constructor.
data ListBuildBatchesForProjectResponse
ListBuildBatchesForProjectResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBuildBatchesForProjectResponse

-- | An array of strings that contains the batch build identifiers.
[$sel:ids:ListBuildBatchesForProjectResponse'] :: ListBuildBatchesForProjectResponse -> Maybe [Text]

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatchesForProject</tt> to
--   retrieve the next set of items.
[$sel:nextToken:ListBuildBatchesForProjectResponse'] :: ListBuildBatchesForProjectResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBuildBatchesForProjectResponse'] :: ListBuildBatchesForProjectResponse -> Int

-- | Create a value of <a>ListBuildBatchesForProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildBatchesForProjectResponse'</a>,
--   <a>listBuildBatchesForProjectResponse_ids</a> - An array of strings
--   that contains the batch build identifiers.
--   
--   <a>$sel:nextToken:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProjectResponse_nextToken</a> - If there are
--   more items to return, this contains a token that is passed to a
--   subsequent call to <tt>ListBuildBatchesForProject</tt> to retrieve the
--   next set of items.
--   
--   <a>$sel:httpStatus:ListBuildBatchesForProjectResponse'</a>,
--   <a>listBuildBatchesForProjectResponse_httpStatus</a> - The response's
--   http status code.
newListBuildBatchesForProjectResponse :: Int -> ListBuildBatchesForProjectResponse

-- | An array of strings that contains the batch build identifiers.
listBuildBatchesForProjectResponse_ids :: Lens' ListBuildBatchesForProjectResponse (Maybe [Text])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatchesForProject</tt> to
--   retrieve the next set of items.
listBuildBatchesForProjectResponse_nextToken :: Lens' ListBuildBatchesForProjectResponse (Maybe Text)

-- | The response's http status code.
listBuildBatchesForProjectResponse_httpStatus :: Lens' ListBuildBatchesForProjectResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProjectResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProjectResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProjectResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProjectResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListBuildBatchesForProject.ListBuildBatchesForProject


-- | Retrieves the identifiers of your build batches in the current region.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.ListBuildBatches

-- | <i>See:</i> <a>newListBuildBatches</a> smart constructor.
data ListBuildBatches
ListBuildBatches' :: Maybe SortOrderType -> Maybe Text -> Maybe BuildBatchFilter -> Maybe Natural -> ListBuildBatches

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
[$sel:sortOrder:ListBuildBatches'] :: ListBuildBatches -> Maybe SortOrderType

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatches</tt>. This specifies the next item to return. To
--   return the beginning of the list, exclude this parameter.
[$sel:nextToken:ListBuildBatches'] :: ListBuildBatches -> Maybe Text

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
[$sel:filter':ListBuildBatches'] :: ListBuildBatches -> Maybe BuildBatchFilter

-- | The maximum number of results to return.
[$sel:maxResults:ListBuildBatches'] :: ListBuildBatches -> Maybe Natural

-- | Create a value of <a>ListBuildBatches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildBatches'</a>,
--   <a>listBuildBatches_sortOrder</a> - Specifies the sort order of the
--   returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuildBatches'</a>,
--   <a>listBuildBatches_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous call to <tt>ListBuildBatches</tt>. This
--   specifies the next item to return. To return the beginning of the
--   list, exclude this parameter.
--   
--   <a>$sel:filter':ListBuildBatches'</a>, <a>listBuildBatches_filter</a>
--   - A <tt>BuildBatchFilter</tt> object that specifies the filters for
--   the search.
--   
--   <a>$sel:maxResults:ListBuildBatches'</a>,
--   <a>listBuildBatches_maxResults</a> - The maximum number of results to
--   return.
newListBuildBatches :: ListBuildBatches

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
listBuildBatches_sortOrder :: Lens' ListBuildBatches (Maybe SortOrderType)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatches</tt>. This specifies the next item to return. To
--   return the beginning of the list, exclude this parameter.
listBuildBatches_nextToken :: Lens' ListBuildBatches (Maybe Text)

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
listBuildBatches_filter :: Lens' ListBuildBatches (Maybe BuildBatchFilter)

-- | The maximum number of results to return.
listBuildBatches_maxResults :: Lens' ListBuildBatches (Maybe Natural)

-- | <i>See:</i> <a>newListBuildBatchesResponse</a> smart constructor.
data ListBuildBatchesResponse
ListBuildBatchesResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBuildBatchesResponse

-- | An array of strings that contains the batch build identifiers.
[$sel:ids:ListBuildBatchesResponse'] :: ListBuildBatchesResponse -> Maybe [Text]

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatches</tt> to retrieve
--   the next set of items.
[$sel:nextToken:ListBuildBatchesResponse'] :: ListBuildBatchesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBuildBatchesResponse'] :: ListBuildBatchesResponse -> Int

-- | Create a value of <a>ListBuildBatchesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildBatchesResponse'</a>,
--   <a>listBuildBatchesResponse_ids</a> - An array of strings that
--   contains the batch build identifiers.
--   
--   <a>$sel:nextToken:ListBuildBatches'</a>,
--   <a>listBuildBatchesResponse_nextToken</a> - If there are more items to
--   return, this contains a token that is passed to a subsequent call to
--   <tt>ListBuildBatches</tt> to retrieve the next set of items.
--   
--   <a>$sel:httpStatus:ListBuildBatchesResponse'</a>,
--   <a>listBuildBatchesResponse_httpStatus</a> - The response's http
--   status code.
newListBuildBatchesResponse :: Int -> ListBuildBatchesResponse

-- | An array of strings that contains the batch build identifiers.
listBuildBatchesResponse_ids :: Lens' ListBuildBatchesResponse (Maybe [Text])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatches</tt> to retrieve
--   the next set of items.
listBuildBatchesResponse_nextToken :: Lens' ListBuildBatchesResponse (Maybe Text)

-- | The response's http status code.
listBuildBatchesResponse_httpStatus :: Lens' ListBuildBatchesResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance GHC.Generics.Generic Amazonka.CodeBuild.ListBuildBatches.ListBuildBatchesResponse
instance GHC.Show.Show Amazonka.CodeBuild.ListBuildBatches.ListBuildBatchesResponse
instance GHC.Read.Read Amazonka.CodeBuild.ListBuildBatches.ListBuildBatchesResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ListBuildBatches.ListBuildBatchesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildBatches.ListBuildBatchesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ListBuildBatches.ListBuildBatches


-- | Resets the cache for a project.
module Amazonka.CodeBuild.InvalidateProjectCache

-- | <i>See:</i> <a>newInvalidateProjectCache</a> smart constructor.
data InvalidateProjectCache
InvalidateProjectCache' :: Text -> InvalidateProjectCache

-- | The name of the CodeBuild build project that the cache is reset for.
[$sel:projectName:InvalidateProjectCache'] :: InvalidateProjectCache -> Text

-- | Create a value of <a>InvalidateProjectCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:InvalidateProjectCache'</a>,
--   <a>invalidateProjectCache_projectName</a> - The name of the CodeBuild
--   build project that the cache is reset for.
newInvalidateProjectCache :: Text -> InvalidateProjectCache

-- | The name of the CodeBuild build project that the cache is reset for.
invalidateProjectCache_projectName :: Lens' InvalidateProjectCache Text

-- | <i>See:</i> <a>newInvalidateProjectCacheResponse</a> smart
--   constructor.
data InvalidateProjectCacheResponse
InvalidateProjectCacheResponse' :: Int -> InvalidateProjectCacheResponse

-- | The response's http status code.
[$sel:httpStatus:InvalidateProjectCacheResponse'] :: InvalidateProjectCacheResponse -> Int

-- | Create a value of <a>InvalidateProjectCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:InvalidateProjectCacheResponse'</a>,
--   <a>invalidateProjectCacheResponse_httpStatus</a> - The response's http
--   status code.
newInvalidateProjectCacheResponse :: Int -> InvalidateProjectCacheResponse

-- | The response's http status code.
invalidateProjectCacheResponse_httpStatus :: Lens' InvalidateProjectCacheResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance GHC.Show.Show Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance GHC.Read.Read Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance GHC.Classes.Eq Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance GHC.Generics.Generic Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCacheResponse
instance GHC.Show.Show Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCacheResponse
instance GHC.Read.Read Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCacheResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCacheResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Control.DeepSeq.NFData Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCacheResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Control.DeepSeq.NFData Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.InvalidateProjectCache.InvalidateProjectCache


-- | Imports the source repository credentials for an CodeBuild project
--   that has its source code stored in a GitHub, GitHub Enterprise, or
--   Bitbucket repository.
module Amazonka.CodeBuild.ImportSourceCredentials

-- | <i>See:</i> <a>newImportSourceCredentials</a> smart constructor.
data ImportSourceCredentials
ImportSourceCredentials' :: Maybe Text -> Maybe Bool -> Sensitive Text -> ServerType -> AuthType -> ImportSourceCredentials

-- | The Bitbucket username when the <tt>authType</tt> is BASIC_AUTH. This
--   parameter is not valid for other types of source providers or
--   connections.
[$sel:username:ImportSourceCredentials'] :: ImportSourceCredentials -> Maybe Text

-- | Set to <tt>false</tt> to prevent overwriting the repository source
--   credentials. Set to <tt>true</tt> to overwrite the repository source
--   credentials. The default value is <tt>true</tt>.
[$sel:shouldOverwrite:ImportSourceCredentials'] :: ImportSourceCredentials -> Maybe Bool

-- | For GitHub or GitHub Enterprise, this is the personal access token.
--   For Bitbucket, this is the app password.
[$sel:token:ImportSourceCredentials'] :: ImportSourceCredentials -> Sensitive Text

-- | The source provider used for this project.
[$sel:serverType:ImportSourceCredentials'] :: ImportSourceCredentials -> ServerType

-- | The type of authentication used to connect to a GitHub, GitHub
--   Enterprise, or Bitbucket repository. An OAUTH connection is not
--   supported by the API and must be created using the CodeBuild console.
[$sel:authType:ImportSourceCredentials'] :: ImportSourceCredentials -> AuthType

-- | Create a value of <a>ImportSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_username</a> - The Bitbucket username when
--   the <tt>authType</tt> is BASIC_AUTH. This parameter is not valid for
--   other types of source providers or connections.
--   
--   <a>$sel:shouldOverwrite:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_shouldOverwrite</a> - Set to <tt>false</tt>
--   to prevent overwriting the repository source credentials. Set to
--   <tt>true</tt> to overwrite the repository source credentials. The
--   default value is <tt>true</tt>.
--   
--   <a>$sel:token:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_token</a> - For GitHub or GitHub
--   Enterprise, this is the personal access token. For Bitbucket, this is
--   the app password.
--   
--   <a>$sel:serverType:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_serverType</a> - The source provider used
--   for this project.
--   
--   <a>$sel:authType:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_authType</a> - The type of authentication
--   used to connect to a GitHub, GitHub Enterprise, or Bitbucket
--   repository. An OAUTH connection is not supported by the API and must
--   be created using the CodeBuild console.
newImportSourceCredentials :: Text -> ServerType -> AuthType -> ImportSourceCredentials

-- | The Bitbucket username when the <tt>authType</tt> is BASIC_AUTH. This
--   parameter is not valid for other types of source providers or
--   connections.
importSourceCredentials_username :: Lens' ImportSourceCredentials (Maybe Text)

-- | Set to <tt>false</tt> to prevent overwriting the repository source
--   credentials. Set to <tt>true</tt> to overwrite the repository source
--   credentials. The default value is <tt>true</tt>.
importSourceCredentials_shouldOverwrite :: Lens' ImportSourceCredentials (Maybe Bool)

-- | For GitHub or GitHub Enterprise, this is the personal access token.
--   For Bitbucket, this is the app password.
importSourceCredentials_token :: Lens' ImportSourceCredentials Text

-- | The source provider used for this project.
importSourceCredentials_serverType :: Lens' ImportSourceCredentials ServerType

-- | The type of authentication used to connect to a GitHub, GitHub
--   Enterprise, or Bitbucket repository. An OAUTH connection is not
--   supported by the API and must be created using the CodeBuild console.
importSourceCredentials_authType :: Lens' ImportSourceCredentials AuthType

-- | <i>See:</i> <a>newImportSourceCredentialsResponse</a> smart
--   constructor.
data ImportSourceCredentialsResponse
ImportSourceCredentialsResponse' :: Maybe Text -> Int -> ImportSourceCredentialsResponse

-- | The Amazon Resource Name (ARN) of the token.
[$sel:arn:ImportSourceCredentialsResponse'] :: ImportSourceCredentialsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ImportSourceCredentialsResponse'] :: ImportSourceCredentialsResponse -> Int

-- | Create a value of <a>ImportSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ImportSourceCredentialsResponse'</a>,
--   <a>importSourceCredentialsResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the token.
--   
--   <a>$sel:httpStatus:ImportSourceCredentialsResponse'</a>,
--   <a>importSourceCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newImportSourceCredentialsResponse :: Int -> ImportSourceCredentialsResponse

-- | The Amazon Resource Name (ARN) of the token.
importSourceCredentialsResponse_arn :: Lens' ImportSourceCredentialsResponse (Maybe Text)

-- | The response's http status code.
importSourceCredentialsResponse_httpStatus :: Lens' ImportSourceCredentialsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance GHC.Show.Show Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance GHC.Classes.Eq Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance GHC.Generics.Generic Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentialsResponse
instance GHC.Show.Show Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentialsResponse
instance GHC.Read.Read Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentialsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentialsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentialsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.ImportSourceCredentials.ImportSourceCredentials


-- | Gets a resource policy that is identified by its resource ARN.
module Amazonka.CodeBuild.GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Text -> GetResourcePolicy

-- | The ARN of the resource that is associated with the resource policy.
[$sel:resourceArn:GetResourcePolicy'] :: GetResourcePolicy -> Text

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_resourceArn</a> - The ARN of the resource that is
--   associated with the resource policy.
newGetResourcePolicy :: Text -> GetResourcePolicy

-- | The ARN of the resource that is associated with the resource policy.
getResourcePolicy_resourceArn :: Lens' GetResourcePolicy Text

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Int -> GetResourcePolicyResponse

-- | The resource policy for the resource identified by the input ARN
--   parameter.
[$sel:policy:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Int

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policy</a> - The resource policy for the
--   resource identified by the input ARN parameter.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | The resource policy for the resource identified by the input ARN
--   parameter.
getResourcePolicyResponse_policy :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance GHC.Show.Show Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance GHC.Read.Read Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance GHC.Classes.Eq Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance GHC.Generics.Generic Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Show.Show Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Read.Read Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.GetResourcePolicy.GetResourcePolicy


-- | Analyzes and accumulates test report values for the specified test
--   reports.
module Amazonka.CodeBuild.GetReportGroupTrend

-- | <i>See:</i> <a>newGetReportGroupTrend</a> smart constructor.
data GetReportGroupTrend
GetReportGroupTrend' :: Maybe Natural -> Text -> ReportGroupTrendFieldType -> GetReportGroupTrend

-- | The number of reports to analyze. This operation always retrieves the
--   most recent reports.
--   
--   If this parameter is omitted, the most recent 100 reports are
--   analyzed.
[$sel:numOfReports:GetReportGroupTrend'] :: GetReportGroupTrend -> Maybe Natural

-- | The ARN of the report group that contains the reports to analyze.
[$sel:reportGroupArn:GetReportGroupTrend'] :: GetReportGroupTrend -> Text

-- | The test report value to accumulate. This must be one of the following
--   values:
--   
--   <ul>
--   <li><i>Test reports:</i></li>
--   <li><i>DURATION</i> Accumulate the test run times for the specified
--   reports.<ul><li><i>PASS_RATE</i> Accumulate the percentage of tests
--   that passed for the specified test reports.</li><li><i>TOTAL</i>
--   Accumulate the total number of tests for the specified test
--   reports.</li></ul></li>
--   <li><i>Code coverage reports:</i></li>
--   <li><i>BRANCH_COVERAGE</i> Accumulate the branch coverage percentages
--   for the specified test reports.<ul><li><i>BRANCHES_COVERED</i>
--   Accumulate the branches covered values for the specified test
--   reports.</li><li><i>BRANCHES_MISSED</i> Accumulate the branches missed
--   values for the specified test reports.</li><li><i>LINE_COVERAGE</i>
--   Accumulate the line coverage percentages for the specified test
--   reports.</li><li><i>LINES_COVERED</i> Accumulate the lines covered
--   values for the specified test reports.</li><li><i>LINES_MISSED</i>
--   Accumulate the lines not covered values for the specified test
--   reports.</li></ul></li>
--   </ul>
[$sel:trendField:GetReportGroupTrend'] :: GetReportGroupTrend -> ReportGroupTrendFieldType

-- | Create a value of <a>GetReportGroupTrend</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numOfReports:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_numOfReports</a> - The number of reports to
--   analyze. This operation always retrieves the most recent reports.
--   
--   If this parameter is omitted, the most recent 100 reports are
--   analyzed.
--   
--   <a>$sel:reportGroupArn:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_reportGroupArn</a> - The ARN of the report
--   group that contains the reports to analyze.
--   
--   <a>$sel:trendField:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_trendField</a> - The test report value to
--   accumulate. This must be one of the following values:
--   
--   <ul>
--   <li><i>Test reports:</i></li>
--   <li><i>DURATION</i> Accumulate the test run times for the specified
--   reports.<ul><li><i>PASS_RATE</i> Accumulate the percentage of tests
--   that passed for the specified test reports.</li><li><i>TOTAL</i>
--   Accumulate the total number of tests for the specified test
--   reports.</li></ul></li>
--   <li><i>Code coverage reports:</i></li>
--   <li><i>BRANCH_COVERAGE</i> Accumulate the branch coverage percentages
--   for the specified test reports.<ul><li><i>BRANCHES_COVERED</i>
--   Accumulate the branches covered values for the specified test
--   reports.</li><li><i>BRANCHES_MISSED</i> Accumulate the branches missed
--   values for the specified test reports.</li><li><i>LINE_COVERAGE</i>
--   Accumulate the line coverage percentages for the specified test
--   reports.</li><li><i>LINES_COVERED</i> Accumulate the lines covered
--   values for the specified test reports.</li><li><i>LINES_MISSED</i>
--   Accumulate the lines not covered values for the specified test
--   reports.</li></ul></li>
--   </ul>
newGetReportGroupTrend :: Text -> ReportGroupTrendFieldType -> GetReportGroupTrend

-- | The number of reports to analyze. This operation always retrieves the
--   most recent reports.
--   
--   If this parameter is omitted, the most recent 100 reports are
--   analyzed.
getReportGroupTrend_numOfReports :: Lens' GetReportGroupTrend (Maybe Natural)

-- | The ARN of the report group that contains the reports to analyze.
getReportGroupTrend_reportGroupArn :: Lens' GetReportGroupTrend Text

-- | The test report value to accumulate. This must be one of the following
--   values:
--   
--   <ul>
--   <li><i>Test reports:</i></li>
--   <li><i>DURATION</i> Accumulate the test run times for the specified
--   reports.<ul><li><i>PASS_RATE</i> Accumulate the percentage of tests
--   that passed for the specified test reports.</li><li><i>TOTAL</i>
--   Accumulate the total number of tests for the specified test
--   reports.</li></ul></li>
--   <li><i>Code coverage reports:</i></li>
--   <li><i>BRANCH_COVERAGE</i> Accumulate the branch coverage percentages
--   for the specified test reports.<ul><li><i>BRANCHES_COVERED</i>
--   Accumulate the branches covered values for the specified test
--   reports.</li><li><i>BRANCHES_MISSED</i> Accumulate the branches missed
--   values for the specified test reports.</li><li><i>LINE_COVERAGE</i>
--   Accumulate the line coverage percentages for the specified test
--   reports.</li><li><i>LINES_COVERED</i> Accumulate the lines covered
--   values for the specified test reports.</li><li><i>LINES_MISSED</i>
--   Accumulate the lines not covered values for the specified test
--   reports.</li></ul></li>
--   </ul>
getReportGroupTrend_trendField :: Lens' GetReportGroupTrend ReportGroupTrendFieldType

-- | <i>See:</i> <a>newGetReportGroupTrendResponse</a> smart constructor.
data GetReportGroupTrendResponse
GetReportGroupTrendResponse' :: Maybe [ReportWithRawData] -> Maybe ReportGroupTrendStats -> Int -> GetReportGroupTrendResponse

-- | An array that contains the raw data for each report.
[$sel:rawData:GetReportGroupTrendResponse'] :: GetReportGroupTrendResponse -> Maybe [ReportWithRawData]

-- | Contains the accumulated trend data.
[$sel:stats:GetReportGroupTrendResponse'] :: GetReportGroupTrendResponse -> Maybe ReportGroupTrendStats

-- | The response's http status code.
[$sel:httpStatus:GetReportGroupTrendResponse'] :: GetReportGroupTrendResponse -> Int

-- | Create a value of <a>GetReportGroupTrendResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rawData:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_rawData</a> - An array that contains
--   the raw data for each report.
--   
--   <a>$sel:stats:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_stats</a> - Contains the accumulated
--   trend data.
--   
--   <a>$sel:httpStatus:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_httpStatus</a> - The response's http
--   status code.
newGetReportGroupTrendResponse :: Int -> GetReportGroupTrendResponse

-- | An array that contains the raw data for each report.
getReportGroupTrendResponse_rawData :: Lens' GetReportGroupTrendResponse (Maybe [ReportWithRawData])

-- | Contains the accumulated trend data.
getReportGroupTrendResponse_stats :: Lens' GetReportGroupTrendResponse (Maybe ReportGroupTrendStats)

-- | The response's http status code.
getReportGroupTrendResponse_httpStatus :: Lens' GetReportGroupTrendResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance GHC.Show.Show Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance GHC.Read.Read Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance GHC.Classes.Eq Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance GHC.Generics.Generic Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrendResponse
instance GHC.Show.Show Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrendResponse
instance GHC.Read.Read Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrendResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrendResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Control.DeepSeq.NFData Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrendResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Control.DeepSeq.NFData Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.GetReportGroupTrend.GetReportGroupTrend


-- | Returns a list of details about test cases for a report.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.DescribeTestCases

-- | <i>See:</i> <a>newDescribeTestCases</a> smart constructor.
data DescribeTestCases
DescribeTestCases' :: Maybe Text -> Maybe TestCaseFilter -> Maybe Natural -> Text -> DescribeTestCases

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:DescribeTestCases'] :: DescribeTestCases -> Maybe Text

-- | A <tt>TestCaseFilter</tt> object used to filter the returned reports.
[$sel:filter':DescribeTestCases'] :: DescribeTestCases -> Maybe TestCaseFilter

-- | The maximum number of paginated test cases returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>TestCase</tt> objects. The default value is 100.
[$sel:maxResults:DescribeTestCases'] :: DescribeTestCases -> Maybe Natural

-- | The ARN of the report for which test cases are returned.
[$sel:reportArn:DescribeTestCases'] :: DescribeTestCases -> Text

-- | Create a value of <a>DescribeTestCases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTestCases'</a>,
--   <a>describeTestCases_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:filter':DescribeTestCases'</a>,
--   <a>describeTestCases_filter</a> - A <tt>TestCaseFilter</tt> object
--   used to filter the returned reports.
--   
--   <a>$sel:maxResults:DescribeTestCases'</a>,
--   <a>describeTestCases_maxResults</a> - The maximum number of paginated
--   test cases returned per response. Use <tt>nextToken</tt> to iterate
--   pages in the list of returned <tt>TestCase</tt> objects. The default
--   value is 100.
--   
--   <a>$sel:reportArn:DescribeTestCases'</a>,
--   <a>describeTestCases_reportArn</a> - The ARN of the report for which
--   test cases are returned.
newDescribeTestCases :: Text -> DescribeTestCases

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
describeTestCases_nextToken :: Lens' DescribeTestCases (Maybe Text)

-- | A <tt>TestCaseFilter</tt> object used to filter the returned reports.
describeTestCases_filter :: Lens' DescribeTestCases (Maybe TestCaseFilter)

-- | The maximum number of paginated test cases returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>TestCase</tt> objects. The default value is 100.
describeTestCases_maxResults :: Lens' DescribeTestCases (Maybe Natural)

-- | The ARN of the report for which test cases are returned.
describeTestCases_reportArn :: Lens' DescribeTestCases Text

-- | <i>See:</i> <a>newDescribeTestCasesResponse</a> smart constructor.
data DescribeTestCasesResponse
DescribeTestCasesResponse' :: Maybe Text -> Maybe [TestCase] -> Int -> DescribeTestCasesResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
[$sel:nextToken:DescribeTestCasesResponse'] :: DescribeTestCasesResponse -> Maybe Text

-- | The returned list of test cases.
[$sel:testCases:DescribeTestCasesResponse'] :: DescribeTestCasesResponse -> Maybe [TestCase]

-- | The response's http status code.
[$sel:httpStatus:DescribeTestCasesResponse'] :: DescribeTestCasesResponse -> Int

-- | Create a value of <a>DescribeTestCasesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTestCases'</a>,
--   <a>describeTestCasesResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:testCases:DescribeTestCasesResponse'</a>,
--   <a>describeTestCasesResponse_testCases</a> - The returned list of test
--   cases.
--   
--   <a>$sel:httpStatus:DescribeTestCasesResponse'</a>,
--   <a>describeTestCasesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTestCasesResponse :: Int -> DescribeTestCasesResponse

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
describeTestCasesResponse_nextToken :: Lens' DescribeTestCasesResponse (Maybe Text)

-- | The returned list of test cases.
describeTestCasesResponse_testCases :: Lens' DescribeTestCasesResponse (Maybe [TestCase])

-- | The response's http status code.
describeTestCasesResponse_httpStatus :: Lens' DescribeTestCasesResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance GHC.Show.Show Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance GHC.Read.Read Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance GHC.Classes.Eq Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance GHC.Generics.Generic Amazonka.CodeBuild.DescribeTestCases.DescribeTestCasesResponse
instance GHC.Show.Show Amazonka.CodeBuild.DescribeTestCases.DescribeTestCasesResponse
instance GHC.Read.Read Amazonka.CodeBuild.DescribeTestCases.DescribeTestCasesResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DescribeTestCases.DescribeTestCasesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DescribeTestCases.DescribeTestCasesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DescribeTestCases.DescribeTestCases


-- | Retrieves one or more code coverage reports.
--   
--   This operation returns paginated results.
module Amazonka.CodeBuild.DescribeCodeCoverages

-- | <i>See:</i> <a>newDescribeCodeCoverages</a> smart constructor.
data DescribeCodeCoverages
DescribeCodeCoverages' :: Maybe Double -> Maybe SortOrderType -> Maybe Double -> Maybe Text -> Maybe Natural -> Maybe ReportCodeCoverageSortByType -> Text -> DescribeCodeCoverages

-- | The minimum line coverage percentage to report.
[$sel:minLineCoveragePercentage:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe Double

-- | Specifies if the results are sorted in ascending or descending order.
[$sel:sortOrder:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe SortOrderType

-- | The maximum line coverage percentage to report.
[$sel:maxLineCoveragePercentage:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe Double

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>DescribeCodeCoverages</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
[$sel:nextToken:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe Natural

-- | Specifies how the results are sorted. Possible values are:
--   
--   <ul>
--   <li><i>FILE_PATH</i> The results are sorted by file path.</li>
--   <li><i>LINE_COVERAGE_PERCENTAGE</i> The results are sorted by the
--   percentage of lines that are covered.</li>
--   </ul>
[$sel:sortBy:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Maybe ReportCodeCoverageSortByType

-- | The ARN of the report for which test cases are returned.
[$sel:reportArn:DescribeCodeCoverages'] :: DescribeCodeCoverages -> Text

-- | Create a value of <a>DescribeCodeCoverages</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minLineCoveragePercentage:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_minLineCoveragePercentage</a> - The minimum
--   line coverage percentage to report.
--   
--   <a>$sel:sortOrder:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_sortOrder</a> - Specifies if the results are
--   sorted in ascending or descending order.
--   
--   <a>$sel:maxLineCoveragePercentage:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_maxLineCoveragePercentage</a> - The maximum
--   line coverage percentage to report.
--   
--   <a>$sel:nextToken:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous call to <tt>DescribeCodeCoverages</tt>. This
--   specifies the next item to return. To return the beginning of the
--   list, exclude this parameter.
--   
--   <a>$sel:maxResults:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_maxResults</a> - The maximum number of
--   results to return.
--   
--   <a>$sel:sortBy:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_sortBy</a> - Specifies how the results are
--   sorted. Possible values are:
--   
--   <ul>
--   <li><i>FILE_PATH</i> The results are sorted by file path.</li>
--   <li><i>LINE_COVERAGE_PERCENTAGE</i> The results are sorted by the
--   percentage of lines that are covered.</li>
--   </ul>
--   
--   <a>$sel:reportArn:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_reportArn</a> - The ARN of the report for
--   which test cases are returned.
newDescribeCodeCoverages :: Text -> DescribeCodeCoverages

-- | The minimum line coverage percentage to report.
describeCodeCoverages_minLineCoveragePercentage :: Lens' DescribeCodeCoverages (Maybe Double)

-- | Specifies if the results are sorted in ascending or descending order.
describeCodeCoverages_sortOrder :: Lens' DescribeCodeCoverages (Maybe SortOrderType)

-- | The maximum line coverage percentage to report.
describeCodeCoverages_maxLineCoveragePercentage :: Lens' DescribeCodeCoverages (Maybe Double)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>DescribeCodeCoverages</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
describeCodeCoverages_nextToken :: Lens' DescribeCodeCoverages (Maybe Text)

-- | The maximum number of results to return.
describeCodeCoverages_maxResults :: Lens' DescribeCodeCoverages (Maybe Natural)

-- | Specifies how the results are sorted. Possible values are:
--   
--   <ul>
--   <li><i>FILE_PATH</i> The results are sorted by file path.</li>
--   <li><i>LINE_COVERAGE_PERCENTAGE</i> The results are sorted by the
--   percentage of lines that are covered.</li>
--   </ul>
describeCodeCoverages_sortBy :: Lens' DescribeCodeCoverages (Maybe ReportCodeCoverageSortByType)

-- | The ARN of the report for which test cases are returned.
describeCodeCoverages_reportArn :: Lens' DescribeCodeCoverages Text

-- | <i>See:</i> <a>newDescribeCodeCoveragesResponse</a> smart constructor.
data DescribeCodeCoveragesResponse
DescribeCodeCoveragesResponse' :: Maybe [CodeCoverage] -> Maybe Text -> Int -> DescribeCodeCoveragesResponse

-- | An array of <tt>CodeCoverage</tt> objects that contain the results.
[$sel:codeCoverages:DescribeCodeCoveragesResponse'] :: DescribeCodeCoveragesResponse -> Maybe [CodeCoverage]

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>DescribeCodeCoverages</tt> to
--   retrieve the next set of items.
[$sel:nextToken:DescribeCodeCoveragesResponse'] :: DescribeCodeCoveragesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCodeCoveragesResponse'] :: DescribeCodeCoveragesResponse -> Int

-- | Create a value of <a>DescribeCodeCoveragesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeCoverages:DescribeCodeCoveragesResponse'</a>,
--   <a>describeCodeCoveragesResponse_codeCoverages</a> - An array of
--   <tt>CodeCoverage</tt> objects that contain the results.
--   
--   <a>$sel:nextToken:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoveragesResponse_nextToken</a> - If there are more
--   items to return, this contains a token that is passed to a subsequent
--   call to <tt>DescribeCodeCoverages</tt> to retrieve the next set of
--   items.
--   
--   <a>$sel:httpStatus:DescribeCodeCoveragesResponse'</a>,
--   <a>describeCodeCoveragesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCodeCoveragesResponse :: Int -> DescribeCodeCoveragesResponse

-- | An array of <tt>CodeCoverage</tt> objects that contain the results.
describeCodeCoveragesResponse_codeCoverages :: Lens' DescribeCodeCoveragesResponse (Maybe [CodeCoverage])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>DescribeCodeCoverages</tt> to
--   retrieve the next set of items.
describeCodeCoveragesResponse_nextToken :: Lens' DescribeCodeCoveragesResponse (Maybe Text)

-- | The response's http status code.
describeCodeCoveragesResponse_httpStatus :: Lens' DescribeCodeCoveragesResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance GHC.Show.Show Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance GHC.Read.Read Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance GHC.Classes.Eq Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance GHC.Generics.Generic Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoveragesResponse
instance GHC.Show.Show Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoveragesResponse
instance GHC.Read.Read Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoveragesResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoveragesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoveragesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DescribeCodeCoverages.DescribeCodeCoverages


-- | For an existing CodeBuild build project that has its source code
--   stored in a GitHub or Bitbucket repository, stops CodeBuild from
--   rebuilding the source code every time a code change is pushed to the
--   repository.
module Amazonka.CodeBuild.DeleteWebhook

-- | <i>See:</i> <a>newDeleteWebhook</a> smart constructor.
data DeleteWebhook
DeleteWebhook' :: Text -> DeleteWebhook

-- | The name of the CodeBuild project.
[$sel:projectName:DeleteWebhook'] :: DeleteWebhook -> Text

-- | Create a value of <a>DeleteWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DeleteWebhook'</a>,
--   <a>deleteWebhook_projectName</a> - The name of the CodeBuild project.
newDeleteWebhook :: Text -> DeleteWebhook

-- | The name of the CodeBuild project.
deleteWebhook_projectName :: Lens' DeleteWebhook Text

-- | <i>See:</i> <a>newDeleteWebhookResponse</a> smart constructor.
data DeleteWebhookResponse
DeleteWebhookResponse' :: Int -> DeleteWebhookResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteWebhookResponse'] :: DeleteWebhookResponse -> Int

-- | Create a value of <a>DeleteWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWebhookResponse'</a>,
--   <a>deleteWebhookResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWebhookResponse :: Int -> DeleteWebhookResponse

-- | The response's http status code.
deleteWebhookResponse_httpStatus :: Lens' DeleteWebhookResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance GHC.Show.Show Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance GHC.Read.Read Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteWebhook.DeleteWebhookResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteWebhook.DeleteWebhookResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteWebhook.DeleteWebhookResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteWebhook.DeleteWebhookResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteWebhook.DeleteWebhookResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteWebhook.DeleteWebhook


-- | Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source
--   credentials.
module Amazonka.CodeBuild.DeleteSourceCredentials

-- | <i>See:</i> <a>newDeleteSourceCredentials</a> smart constructor.
data DeleteSourceCredentials
DeleteSourceCredentials' :: Text -> DeleteSourceCredentials

-- | The Amazon Resource Name (ARN) of the token.
[$sel:arn:DeleteSourceCredentials'] :: DeleteSourceCredentials -> Text

-- | Create a value of <a>DeleteSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSourceCredentials'</a>,
--   <a>deleteSourceCredentials_arn</a> - The Amazon Resource Name (ARN) of
--   the token.
newDeleteSourceCredentials :: Text -> DeleteSourceCredentials

-- | The Amazon Resource Name (ARN) of the token.
deleteSourceCredentials_arn :: Lens' DeleteSourceCredentials Text

-- | <i>See:</i> <a>newDeleteSourceCredentialsResponse</a> smart
--   constructor.
data DeleteSourceCredentialsResponse
DeleteSourceCredentialsResponse' :: Maybe Text -> Int -> DeleteSourceCredentialsResponse

-- | The Amazon Resource Name (ARN) of the token.
[$sel:arn:DeleteSourceCredentialsResponse'] :: DeleteSourceCredentialsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteSourceCredentialsResponse'] :: DeleteSourceCredentialsResponse -> Int

-- | Create a value of <a>DeleteSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSourceCredentials'</a>,
--   <a>deleteSourceCredentialsResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the token.
--   
--   <a>$sel:httpStatus:DeleteSourceCredentialsResponse'</a>,
--   <a>deleteSourceCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSourceCredentialsResponse :: Int -> DeleteSourceCredentialsResponse

-- | The Amazon Resource Name (ARN) of the token.
deleteSourceCredentialsResponse_arn :: Lens' DeleteSourceCredentialsResponse (Maybe Text)

-- | The response's http status code.
deleteSourceCredentialsResponse_httpStatus :: Lens' DeleteSourceCredentialsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance GHC.Show.Show Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance GHC.Read.Read Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentialsResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentialsResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentialsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentialsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentialsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteSourceCredentials.DeleteSourceCredentials


-- | Deletes a resource policy that is identified by its resource ARN.
module Amazonka.CodeBuild.DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Text -> DeleteResourcePolicy

-- | The ARN of the resource that is associated with the resource policy.
[$sel:resourceArn:DeleteResourcePolicy'] :: DeleteResourcePolicy -> Text

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_resourceArn</a> - The ARN of the resource that
--   is associated with the resource policy.
newDeleteResourcePolicy :: Text -> DeleteResourcePolicy

-- | The ARN of the resource that is associated with the resource policy.
deleteResourcePolicy_resourceArn :: Lens' DeleteResourcePolicy Text

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Int -> DeleteResourcePolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteResourcePolicyResponse'] :: DeleteResourcePolicyResponse -> Int

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Show.Show Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Read.Read Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteResourcePolicy.DeleteResourcePolicy


-- | Deletes a report group. Before you delete a report group, you must
--   delete its reports.
module Amazonka.CodeBuild.DeleteReportGroup

-- | <i>See:</i> <a>newDeleteReportGroup</a> smart constructor.
data DeleteReportGroup
DeleteReportGroup' :: Maybe Bool -> Text -> DeleteReportGroup

-- | If <tt>true</tt>, deletes any reports that belong to a report group
--   before deleting the report group.
--   
--   If <tt>false</tt>, you must delete any reports in the report group.
--   Use <a>ListReportsForReportGroup</a> to get the reports in a report
--   group. Use <a>DeleteReport</a> to delete the reports. If you call
--   <tt>DeleteReportGroup</tt> for a report group that contains one or
--   more reports, an exception is thrown.
[$sel:deleteReports:DeleteReportGroup'] :: DeleteReportGroup -> Maybe Bool

-- | The ARN of the report group to delete.
[$sel:arn:DeleteReportGroup'] :: DeleteReportGroup -> Text

-- | Create a value of <a>DeleteReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteReports:DeleteReportGroup'</a>,
--   <a>deleteReportGroup_deleteReports</a> - If <tt>true</tt>, deletes any
--   reports that belong to a report group before deleting the report
--   group.
--   
--   If <tt>false</tt>, you must delete any reports in the report group.
--   Use <a>ListReportsForReportGroup</a> to get the reports in a report
--   group. Use <a>DeleteReport</a> to delete the reports. If you call
--   <tt>DeleteReportGroup</tt> for a report group that contains one or
--   more reports, an exception is thrown.
--   
--   <a>$sel:arn:DeleteReportGroup'</a>, <a>deleteReportGroup_arn</a> - The
--   ARN of the report group to delete.
newDeleteReportGroup :: Text -> DeleteReportGroup

-- | If <tt>true</tt>, deletes any reports that belong to a report group
--   before deleting the report group.
--   
--   If <tt>false</tt>, you must delete any reports in the report group.
--   Use <a>ListReportsForReportGroup</a> to get the reports in a report
--   group. Use <a>DeleteReport</a> to delete the reports. If you call
--   <tt>DeleteReportGroup</tt> for a report group that contains one or
--   more reports, an exception is thrown.
deleteReportGroup_deleteReports :: Lens' DeleteReportGroup (Maybe Bool)

-- | The ARN of the report group to delete.
deleteReportGroup_arn :: Lens' DeleteReportGroup Text

-- | <i>See:</i> <a>newDeleteReportGroupResponse</a> smart constructor.
data DeleteReportGroupResponse
DeleteReportGroupResponse' :: Int -> DeleteReportGroupResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteReportGroupResponse'] :: DeleteReportGroupResponse -> Int

-- | Create a value of <a>DeleteReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReportGroupResponse'</a>,
--   <a>deleteReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteReportGroupResponse :: Int -> DeleteReportGroupResponse

-- | The response's http status code.
deleteReportGroupResponse_httpStatus :: Lens' DeleteReportGroupResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance GHC.Show.Show Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance GHC.Read.Read Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroupResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroupResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroupResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteReportGroup.DeleteReportGroup


-- | Deletes a report.
module Amazonka.CodeBuild.DeleteReport

-- | <i>See:</i> <a>newDeleteReport</a> smart constructor.
data DeleteReport
DeleteReport' :: Text -> DeleteReport

-- | The ARN of the report to delete.
[$sel:arn:DeleteReport'] :: DeleteReport -> Text

-- | Create a value of <a>DeleteReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteReport'</a>, <a>deleteReport_arn</a> - The ARN of
--   the report to delete.
newDeleteReport :: Text -> DeleteReport

-- | The ARN of the report to delete.
deleteReport_arn :: Lens' DeleteReport Text

-- | <i>See:</i> <a>newDeleteReportResponse</a> smart constructor.
data DeleteReportResponse
DeleteReportResponse' :: Int -> DeleteReportResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteReportResponse'] :: DeleteReportResponse -> Int

-- | Create a value of <a>DeleteReportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReportResponse'</a>,
--   <a>deleteReportResponse_httpStatus</a> - The response's http status
--   code.
newDeleteReportResponse :: Int -> DeleteReportResponse

-- | The response's http status code.
deleteReportResponse_httpStatus :: Lens' DeleteReportResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteReport.DeleteReport
instance GHC.Show.Show Amazonka.CodeBuild.DeleteReport.DeleteReport
instance GHC.Read.Read Amazonka.CodeBuild.DeleteReport.DeleteReport
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteReport.DeleteReport
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteReport.DeleteReportResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteReport.DeleteReportResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteReport.DeleteReportResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteReport.DeleteReportResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteReport.DeleteReportResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteReport.DeleteReport
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteReport.DeleteReport


-- | Deletes a build project. When you delete a project, its builds are not
--   deleted.
module Amazonka.CodeBuild.DeleteProject

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | The name of the build project.
[$sel:name:DeleteProject'] :: DeleteProject -> Text

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProject_name</a> - The name
--   of the build project.
newDeleteProject :: Text -> DeleteProject

-- | The name of the build project.
deleteProject_name :: Lens' DeleteProject Text

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteProjectResponse'] :: DeleteProjectResponse -> Int

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteProject.DeleteProject
instance GHC.Show.Show Amazonka.CodeBuild.DeleteProject.DeleteProject
instance GHC.Read.Read Amazonka.CodeBuild.DeleteProject.DeleteProject
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteProject.DeleteProject
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteProject.DeleteProjectResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteProject.DeleteProjectResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteProject.DeleteProjectResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteProject.DeleteProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteProject.DeleteProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteProject.DeleteProject
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteProject.DeleteProject


-- | Deletes a batch build.
module Amazonka.CodeBuild.DeleteBuildBatch

-- | <i>See:</i> <a>newDeleteBuildBatch</a> smart constructor.
data DeleteBuildBatch
DeleteBuildBatch' :: Text -> DeleteBuildBatch

-- | The identifier of the batch build to delete.
[$sel:id:DeleteBuildBatch'] :: DeleteBuildBatch -> Text

-- | Create a value of <a>DeleteBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteBuildBatch'</a>, <a>deleteBuildBatch_id</a> - The
--   identifier of the batch build to delete.
newDeleteBuildBatch :: Text -> DeleteBuildBatch

-- | The identifier of the batch build to delete.
deleteBuildBatch_id :: Lens' DeleteBuildBatch Text

-- | <i>See:</i> <a>newDeleteBuildBatchResponse</a> smart constructor.
data DeleteBuildBatchResponse
DeleteBuildBatchResponse' :: Maybe [BuildNotDeleted] -> Maybe (NonEmpty Text) -> Maybe Text -> Int -> DeleteBuildBatchResponse

-- | An array of <tt>BuildNotDeleted</tt> objects that specify the builds
--   that could not be deleted.
[$sel:buildsNotDeleted:DeleteBuildBatchResponse'] :: DeleteBuildBatchResponse -> Maybe [BuildNotDeleted]

-- | An array of strings that contain the identifiers of the builds that
--   were deleted.
[$sel:buildsDeleted:DeleteBuildBatchResponse'] :: DeleteBuildBatchResponse -> Maybe (NonEmpty Text)

-- | The status code.
[$sel:statusCode:DeleteBuildBatchResponse'] :: DeleteBuildBatchResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteBuildBatchResponse'] :: DeleteBuildBatchResponse -> Int

-- | Create a value of <a>DeleteBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildsNotDeleted:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_buildsNotDeleted</a> - An array of
--   <tt>BuildNotDeleted</tt> objects that specify the builds that could
--   not be deleted.
--   
--   <a>$sel:buildsDeleted:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_buildsDeleted</a> - An array of strings
--   that contain the identifiers of the builds that were deleted.
--   
--   <a>$sel:statusCode:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_statusCode</a> - The status code.
--   
--   <a>$sel:httpStatus:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBuildBatchResponse :: Int -> DeleteBuildBatchResponse

-- | An array of <tt>BuildNotDeleted</tt> objects that specify the builds
--   that could not be deleted.
deleteBuildBatchResponse_buildsNotDeleted :: Lens' DeleteBuildBatchResponse (Maybe [BuildNotDeleted])

-- | An array of strings that contain the identifiers of the builds that
--   were deleted.
deleteBuildBatchResponse_buildsDeleted :: Lens' DeleteBuildBatchResponse (Maybe (NonEmpty Text))

-- | The status code.
deleteBuildBatchResponse_statusCode :: Lens' DeleteBuildBatchResponse (Maybe Text)

-- | The response's http status code.
deleteBuildBatchResponse_httpStatus :: Lens' DeleteBuildBatchResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance GHC.Show.Show Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance GHC.Read.Read Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance GHC.Generics.Generic Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatchResponse
instance GHC.Show.Show Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatchResponse
instance GHC.Read.Read Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatchResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Control.DeepSeq.NFData Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.DeleteBuildBatch.DeleteBuildBatch


-- | For an existing CodeBuild build project that has its source code
--   stored in a GitHub or Bitbucket repository, enables CodeBuild to start
--   rebuilding the source code every time a code change is pushed to the
--   repository.
--   
--   If you enable webhooks for an CodeBuild project, and the project is
--   used as a build step in CodePipeline, then two identical builds are
--   created for each commit. One build is triggered through webhooks, and
--   one through CodePipeline. Because billing is on a per-build basis, you
--   are billed for both builds. Therefore, if you are using CodePipeline,
--   we recommend that you disable webhooks in CodeBuild. In the CodeBuild
--   console, clear the Webhook box. For more information, see step 5 in
--   <a>Change a Build Project's Settings</a>.
module Amazonka.CodeBuild.CreateWebhook

-- | <i>See:</i> <a>newCreateWebhook</a> smart constructor.
data CreateWebhook
CreateWebhook' :: Maybe Text -> Maybe [[WebhookFilter]] -> Maybe WebhookBuildType -> Text -> CreateWebhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
[$sel:branchFilter:CreateWebhook'] :: CreateWebhook -> Maybe Text

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
[$sel:filterGroups:CreateWebhook'] :: CreateWebhook -> Maybe [[WebhookFilter]]

-- | Specifies the type of build this webhook will trigger.
[$sel:buildType:CreateWebhook'] :: CreateWebhook -> Maybe WebhookBuildType

-- | The name of the CodeBuild project.
[$sel:projectName:CreateWebhook'] :: CreateWebhook -> Text

-- | Create a value of <a>CreateWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:CreateWebhook'</a>,
--   <a>createWebhook_branchFilter</a> - A regular expression used to
--   determine which repository branches are built when a webhook is
--   triggered. If the name of a branch matches the regular expression,
--   then it is built. If <tt>branchFilter</tt> is empty, then all branches
--   are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:filterGroups:CreateWebhook'</a>,
--   <a>createWebhook_filterGroups</a> - An array of arrays of
--   <tt>WebhookFilter</tt> objects used to determine which webhooks are
--   triggered. At least one <tt>WebhookFilter</tt> in the array must
--   specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
--   
--   <a>$sel:buildType:CreateWebhook'</a>, <a>createWebhook_buildType</a> -
--   Specifies the type of build this webhook will trigger.
--   
--   <a>$sel:projectName:CreateWebhook'</a>,
--   <a>createWebhook_projectName</a> - The name of the CodeBuild project.
newCreateWebhook :: Text -> CreateWebhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
createWebhook_branchFilter :: Lens' CreateWebhook (Maybe Text)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
createWebhook_filterGroups :: Lens' CreateWebhook (Maybe [[WebhookFilter]])

-- | Specifies the type of build this webhook will trigger.
createWebhook_buildType :: Lens' CreateWebhook (Maybe WebhookBuildType)

-- | The name of the CodeBuild project.
createWebhook_projectName :: Lens' CreateWebhook Text

-- | <i>See:</i> <a>newCreateWebhookResponse</a> smart constructor.
data CreateWebhookResponse
CreateWebhookResponse' :: Maybe Webhook -> Int -> CreateWebhookResponse

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
[$sel:webhook:CreateWebhookResponse'] :: CreateWebhookResponse -> Maybe Webhook

-- | The response's http status code.
[$sel:httpStatus:CreateWebhookResponse'] :: CreateWebhookResponse -> Int

-- | Create a value of <a>CreateWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:CreateWebhookResponse'</a>,
--   <a>createWebhookResponse_webhook</a> - Information about a webhook
--   that connects repository events to a build project in CodeBuild.
--   
--   <a>$sel:httpStatus:CreateWebhookResponse'</a>,
--   <a>createWebhookResponse_httpStatus</a> - The response's http status
--   code.
newCreateWebhookResponse :: Int -> CreateWebhookResponse

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
createWebhookResponse_webhook :: Lens' CreateWebhookResponse (Maybe Webhook)

-- | The response's http status code.
createWebhookResponse_httpStatus :: Lens' CreateWebhookResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance GHC.Show.Show Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance GHC.Read.Read Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateWebhook.CreateWebhookResponse
instance GHC.Show.Show Amazonka.CodeBuild.CreateWebhook.CreateWebhookResponse
instance GHC.Read.Read Amazonka.CodeBuild.CreateWebhook.CreateWebhookResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateWebhook.CreateWebhookResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateWebhook.CreateWebhookResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.CreateWebhook.CreateWebhook
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.CreateWebhook.CreateWebhook


-- | Creates a report group. A report group contains a collection of
--   reports.
module Amazonka.CodeBuild.CreateReportGroup

-- | <i>See:</i> <a>newCreateReportGroup</a> smart constructor.
data CreateReportGroup
CreateReportGroup' :: Maybe [Tag] -> Text -> ReportType -> ReportExportConfig -> CreateReportGroup

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
[$sel:tags:CreateReportGroup'] :: CreateReportGroup -> Maybe [Tag]

-- | The name of the report group.
[$sel:name:CreateReportGroup'] :: CreateReportGroup -> Text

-- | The type of report group.
[$sel:type':CreateReportGroup'] :: CreateReportGroup -> ReportType

-- | A <tt>ReportExportConfig</tt> object that contains information about
--   where the report group test results are exported.
[$sel:exportConfig:CreateReportGroup'] :: CreateReportGroup -> ReportExportConfig

-- | Create a value of <a>CreateReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateReportGroup'</a>, <a>createReportGroup_tags</a> - A
--   list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
--   
--   <a>$sel:name:CreateReportGroup'</a>, <a>createReportGroup_name</a> -
--   The name of the report group.
--   
--   <a>$sel:type':CreateReportGroup'</a>, <a>createReportGroup_type</a> -
--   The type of report group.
--   
--   <a>$sel:exportConfig:CreateReportGroup'</a>,
--   <a>createReportGroup_exportConfig</a> - A <tt>ReportExportConfig</tt>
--   object that contains information about where the report group test
--   results are exported.
newCreateReportGroup :: Text -> ReportType -> ReportExportConfig -> CreateReportGroup

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
createReportGroup_tags :: Lens' CreateReportGroup (Maybe [Tag])

-- | The name of the report group.
createReportGroup_name :: Lens' CreateReportGroup Text

-- | The type of report group.
createReportGroup_type :: Lens' CreateReportGroup ReportType

-- | A <tt>ReportExportConfig</tt> object that contains information about
--   where the report group test results are exported.
createReportGroup_exportConfig :: Lens' CreateReportGroup ReportExportConfig

-- | <i>See:</i> <a>newCreateReportGroupResponse</a> smart constructor.
data CreateReportGroupResponse
CreateReportGroupResponse' :: Maybe ReportGroup -> Int -> CreateReportGroupResponse

-- | Information about the report group that was created.
[$sel:reportGroup:CreateReportGroupResponse'] :: CreateReportGroupResponse -> Maybe ReportGroup

-- | The response's http status code.
[$sel:httpStatus:CreateReportGroupResponse'] :: CreateReportGroupResponse -> Int

-- | Create a value of <a>CreateReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroup:CreateReportGroupResponse'</a>,
--   <a>createReportGroupResponse_reportGroup</a> - Information about the
--   report group that was created.
--   
--   <a>$sel:httpStatus:CreateReportGroupResponse'</a>,
--   <a>createReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateReportGroupResponse :: Int -> CreateReportGroupResponse

-- | Information about the report group that was created.
createReportGroupResponse_reportGroup :: Lens' CreateReportGroupResponse (Maybe ReportGroup)

-- | The response's http status code.
createReportGroupResponse_httpStatus :: Lens' CreateReportGroupResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance GHC.Show.Show Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance GHC.Read.Read Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateReportGroup.CreateReportGroupResponse
instance GHC.Show.Show Amazonka.CodeBuild.CreateReportGroup.CreateReportGroupResponse
instance GHC.Read.Read Amazonka.CodeBuild.CreateReportGroup.CreateReportGroupResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateReportGroup.CreateReportGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateReportGroup.CreateReportGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.CreateReportGroup.CreateReportGroup


-- | Creates a build project.
module Amazonka.CodeBuild.CreateProject

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe [ProjectArtifacts] -> Maybe Int -> Maybe Bool -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe VpcConfig -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> ProjectSource -> ProjectArtifacts -> ProjectEnvironment -> Text -> CreateProject

-- | An array of <tt>ProjectArtifacts</tt> objects.
[$sel:secondaryArtifacts:CreateProject'] :: CreateProject -> Maybe [ProjectArtifacts]

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
[$sel:concurrentBuildLimit:CreateProject'] :: CreateProject -> Maybe Int

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
[$sel:badgeEnabled:CreateProject'] :: CreateProject -> Maybe Bool

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take precedence over these <tt>secondarySourceVersions</tt> (at
--   the project level).
[$sel:secondarySourceVersions:CreateProject'] :: CreateProject -> Maybe [ProjectSourceVersion]

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:CreateProject'] :: CreateProject -> Maybe Natural

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
[$sel:cache:CreateProject'] :: CreateProject -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:CreateProject'] :: CreateProject -> Maybe [ProjectSource]

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:CreateProject'] :: CreateProject -> Maybe Text

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
[$sel:vpcConfig:CreateProject'] :: CreateProject -> Maybe VpcConfig

-- | Information about logs for the build project. These can be logs in
--   CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.
[$sel:logsConfig:CreateProject'] :: CreateProject -> Maybe LogsConfig

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:CreateProject'] :: CreateProject -> Maybe [ProjectFileSystemLocation]

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
[$sel:buildBatchConfig:CreateProject'] :: CreateProject -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:CreateProject'] :: CreateProject -> Maybe Text

-- | A description that makes the build project easy to identify.
[$sel:description:CreateProject'] :: CreateProject -> Maybe Text

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
[$sel:tags:CreateProject'] :: CreateProject -> Maybe [Tag]

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before it times out any build that has not been marked as completed.
--   The default is 60 minutes.
[$sel:timeoutInMinutes:CreateProject'] :: CreateProject -> Maybe Natural

-- | The name of the build project.
[$sel:name:CreateProject'] :: CreateProject -> Text

-- | Information about the build input source code for the build project.
[$sel:source:CreateProject'] :: CreateProject -> ProjectSource

-- | Information about the build output artifacts for the build project.
[$sel:artifacts:CreateProject'] :: CreateProject -> ProjectArtifacts

-- | Information about the build environment for the build project.
[$sel:environment:CreateProject'] :: CreateProject -> ProjectEnvironment

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
[$sel:serviceRole:CreateProject'] :: CreateProject -> Text

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:CreateProject'</a>,
--   <a>createProject_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:concurrentBuildLimit:CreateProject'</a>,
--   <a>createProject_concurrentBuildLimit</a> - The maximum number of
--   concurrent builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   <a>$sel:badgeEnabled:CreateProject'</a>,
--   <a>createProject_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:secondarySourceVersions:CreateProject'</a>,
--   <a>createProject_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take precedence over these <tt>secondarySourceVersions</tt> (at
--   the project level).
--   
--   <a>$sel:queuedTimeoutInMinutes:CreateProject'</a>,
--   <a>createProject_queuedTimeoutInMinutes</a> - The number of minutes a
--   build is allowed to be queued before it times out.
--   
--   <a>$sel:cache:CreateProject'</a>, <a>createProject_cache</a> - Stores
--   recently used information so that it can be quickly accessed at a
--   later time.
--   
--   <a>$sel:secondarySources:CreateProject'</a>,
--   <a>createProject_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:CreateProject'</a>,
--   <a>createProject_sourceVersion</a> - A version of the build input to
--   be built for this project. If not specified, the latest version is
--   used. If specified, it must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:vpcConfig:CreateProject'</a>, <a>createProject_vpcConfig</a> -
--   VpcConfig enables CodeBuild to access resources in an Amazon VPC.
--   
--   <a>$sel:logsConfig:CreateProject'</a>, <a>createProject_logsConfig</a>
--   - Information about logs for the build project. These can be logs in
--   CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:CreateProject'</a>,
--   <a>createProject_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:CreateProject'</a>,
--   <a>createProject_buildBatchConfig</a> - A ProjectBuildBatchConfig
--   object that defines the batch build options for the project.
--   
--   <a>$sel:encryptionKey:CreateProject'</a>,
--   <a>createProject_encryptionKey</a> - The Key Management Service
--   customer master key (CMK) to be used for encrypting the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:description:CreateProject'</a>,
--   <a>createProject_description</a> - A description that makes the build
--   project easy to identify.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - A list of
--   tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:CreateProject'</a>,
--   <a>createProject_timeoutInMinutes</a> - How long, in minutes, from 5
--   to 480 (8 hours), for CodeBuild to wait before it times out any build
--   that has not been marked as completed. The default is 60 minutes.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - The name
--   of the build project.
--   
--   <a>$sel:source:CreateProject'</a>, <a>createProject_source</a> -
--   Information about the build input source code for the build project.
--   
--   <a>$sel:artifacts:CreateProject'</a>, <a>createProject_artifacts</a> -
--   Information about the build output artifacts for the build project.
--   
--   <a>$sel:environment:CreateProject'</a>,
--   <a>createProject_environment</a> - Information about the build
--   environment for the build project.
--   
--   <a>$sel:serviceRole:CreateProject'</a>,
--   <a>createProject_serviceRole</a> - The ARN of the IAM role that
--   enables CodeBuild to interact with dependent Amazon Web Services
--   services on behalf of the Amazon Web Services account.
newCreateProject :: Text -> ProjectSource -> ProjectArtifacts -> ProjectEnvironment -> Text -> CreateProject

-- | An array of <tt>ProjectArtifacts</tt> objects.
createProject_secondaryArtifacts :: Lens' CreateProject (Maybe [ProjectArtifacts])

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
createProject_concurrentBuildLimit :: Lens' CreateProject (Maybe Int)

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
createProject_badgeEnabled :: Lens' CreateProject (Maybe Bool)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take precedence over these <tt>secondarySourceVersions</tt> (at
--   the project level).
createProject_secondarySourceVersions :: Lens' CreateProject (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
createProject_queuedTimeoutInMinutes :: Lens' CreateProject (Maybe Natural)

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
createProject_cache :: Lens' CreateProject (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
createProject_secondarySources :: Lens' CreateProject (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
createProject_sourceVersion :: Lens' CreateProject (Maybe Text)

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
createProject_vpcConfig :: Lens' CreateProject (Maybe VpcConfig)

-- | Information about logs for the build project. These can be logs in
--   CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.
createProject_logsConfig :: Lens' CreateProject (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
createProject_fileSystemLocations :: Lens' CreateProject (Maybe [ProjectFileSystemLocation])

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
createProject_buildBatchConfig :: Lens' CreateProject (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
createProject_encryptionKey :: Lens' CreateProject (Maybe Text)

-- | A description that makes the build project easy to identify.
createProject_description :: Lens' CreateProject (Maybe Text)

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
createProject_tags :: Lens' CreateProject (Maybe [Tag])

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before it times out any build that has not been marked as completed.
--   The default is 60 minutes.
createProject_timeoutInMinutes :: Lens' CreateProject (Maybe Natural)

-- | The name of the build project.
createProject_name :: Lens' CreateProject Text

-- | Information about the build input source code for the build project.
createProject_source :: Lens' CreateProject ProjectSource

-- | Information about the build output artifacts for the build project.
createProject_artifacts :: Lens' CreateProject ProjectArtifacts

-- | Information about the build environment for the build project.
createProject_environment :: Lens' CreateProject ProjectEnvironment

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
createProject_serviceRole :: Lens' CreateProject Text

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Maybe Project -> Int -> CreateProjectResponse

-- | Information about the build project that was created.
[$sel:project:CreateProjectResponse'] :: CreateProjectResponse -> Maybe Project

-- | The response's http status code.
[$sel:httpStatus:CreateProjectResponse'] :: CreateProjectResponse -> Int

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:CreateProjectResponse'</a>,
--   <a>createProjectResponse_project</a> - Information about the build
--   project that was created.
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | Information about the build project that was created.
createProjectResponse_project :: Lens' CreateProjectResponse (Maybe Project)

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateProject.CreateProject
instance GHC.Show.Show Amazonka.CodeBuild.CreateProject.CreateProject
instance GHC.Read.Read Amazonka.CodeBuild.CreateProject.CreateProject
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateProject.CreateProject
instance GHC.Generics.Generic Amazonka.CodeBuild.CreateProject.CreateProjectResponse
instance GHC.Show.Show Amazonka.CodeBuild.CreateProject.CreateProjectResponse
instance GHC.Read.Read Amazonka.CodeBuild.CreateProject.CreateProjectResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.CreateProject.CreateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateProject.CreateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.CreateProject.CreateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.CreateProject.CreateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.CreateProject.CreateProject
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.CreateProject.CreateProject
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.CreateProject.CreateProject


-- | Returns an array of reports.
module Amazonka.CodeBuild.BatchGetReports

-- | <i>See:</i> <a>newBatchGetReports</a> smart constructor.
data BatchGetReports
BatchGetReports' :: NonEmpty Text -> BatchGetReports

-- | An array of ARNs that identify the <tt>Report</tt> objects to return.
[$sel:reportArns:BatchGetReports'] :: BatchGetReports -> NonEmpty Text

-- | Create a value of <a>BatchGetReports</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportArns:BatchGetReports'</a>,
--   <a>batchGetReports_reportArns</a> - An array of ARNs that identify the
--   <tt>Report</tt> objects to return.
newBatchGetReports :: NonEmpty Text -> BatchGetReports

-- | An array of ARNs that identify the <tt>Report</tt> objects to return.
batchGetReports_reportArns :: Lens' BatchGetReports (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetReportsResponse</a> smart constructor.
data BatchGetReportsResponse
BatchGetReportsResponse' :: Maybe (NonEmpty Report) -> Maybe (NonEmpty Text) -> Int -> BatchGetReportsResponse

-- | The array of <tt>Report</tt> objects returned by
--   <tt>BatchGetReports</tt>.
[$sel:reports:BatchGetReportsResponse'] :: BatchGetReportsResponse -> Maybe (NonEmpty Report)

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>Report</tt>.
[$sel:reportsNotFound:BatchGetReportsResponse'] :: BatchGetReportsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:BatchGetReportsResponse'] :: BatchGetReportsResponse -> Int

-- | Create a value of <a>BatchGetReportsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_reports</a> - The array of <tt>Report</tt>
--   objects returned by <tt>BatchGetReports</tt>.
--   
--   <a>$sel:reportsNotFound:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_reportsNotFound</a> - An array of ARNs
--   passed to <tt>BatchGetReportGroups</tt> that are not associated with a
--   <tt>Report</tt>.
--   
--   <a>$sel:httpStatus:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetReportsResponse :: Int -> BatchGetReportsResponse

-- | The array of <tt>Report</tt> objects returned by
--   <tt>BatchGetReports</tt>.
batchGetReportsResponse_reports :: Lens' BatchGetReportsResponse (Maybe (NonEmpty Report))

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>Report</tt>.
batchGetReportsResponse_reportsNotFound :: Lens' BatchGetReportsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetReportsResponse_httpStatus :: Lens' BatchGetReportsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetReports.BatchGetReportsResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetReports.BatchGetReportsResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetReports.BatchGetReportsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetReports.BatchGetReportsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetReports.BatchGetReportsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchGetReports.BatchGetReports
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchGetReports.BatchGetReports


-- | Returns an array of report groups.
module Amazonka.CodeBuild.BatchGetReportGroups

-- | <i>See:</i> <a>newBatchGetReportGroups</a> smart constructor.
data BatchGetReportGroups
BatchGetReportGroups' :: NonEmpty Text -> BatchGetReportGroups

-- | An array of report group ARNs that identify the report groups to
--   return.
[$sel:reportGroupArns:BatchGetReportGroups'] :: BatchGetReportGroups -> NonEmpty Text

-- | Create a value of <a>BatchGetReportGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroupArns:BatchGetReportGroups'</a>,
--   <a>batchGetReportGroups_reportGroupArns</a> - An array of report group
--   ARNs that identify the report groups to return.
newBatchGetReportGroups :: NonEmpty Text -> BatchGetReportGroups

-- | An array of report group ARNs that identify the report groups to
--   return.
batchGetReportGroups_reportGroupArns :: Lens' BatchGetReportGroups (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetReportGroupsResponse</a> smart constructor.
data BatchGetReportGroupsResponse
BatchGetReportGroupsResponse' :: Maybe (NonEmpty ReportGroup) -> Maybe (NonEmpty Text) -> Int -> BatchGetReportGroupsResponse

-- | The array of report groups returned by <tt>BatchGetReportGroups</tt>.
[$sel:reportGroups:BatchGetReportGroupsResponse'] :: BatchGetReportGroupsResponse -> Maybe (NonEmpty ReportGroup)

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>ReportGroup</tt>.
[$sel:reportGroupsNotFound:BatchGetReportGroupsResponse'] :: BatchGetReportGroupsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:BatchGetReportGroupsResponse'] :: BatchGetReportGroupsResponse -> Int

-- | Create a value of <a>BatchGetReportGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroups:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_reportGroups</a> - The array of report
--   groups returned by <tt>BatchGetReportGroups</tt>.
--   
--   <a>$sel:reportGroupsNotFound:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_reportGroupsNotFound</a> - An array of
--   ARNs passed to <tt>BatchGetReportGroups</tt> that are not associated
--   with a <tt>ReportGroup</tt>.
--   
--   <a>$sel:httpStatus:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetReportGroupsResponse :: Int -> BatchGetReportGroupsResponse

-- | The array of report groups returned by <tt>BatchGetReportGroups</tt>.
batchGetReportGroupsResponse_reportGroups :: Lens' BatchGetReportGroupsResponse (Maybe (NonEmpty ReportGroup))

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>ReportGroup</tt>.
batchGetReportGroupsResponse_reportGroupsNotFound :: Lens' BatchGetReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetReportGroupsResponse_httpStatus :: Lens' BatchGetReportGroupsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroupsResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroupsResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroupsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroupsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchGetReportGroups.BatchGetReportGroups


-- | Gets information about one or more build projects.
module Amazonka.CodeBuild.BatchGetProjects

-- | <i>See:</i> <a>newBatchGetProjects</a> smart constructor.
data BatchGetProjects
BatchGetProjects' :: NonEmpty Text -> BatchGetProjects

-- | The names or ARNs of the build projects. To get information about a
--   project shared with your Amazon Web Services account, its ARN must be
--   specified. You cannot specify a shared project using its name.
[$sel:names:BatchGetProjects'] :: BatchGetProjects -> NonEmpty Text

-- | Create a value of <a>BatchGetProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:BatchGetProjects'</a>, <a>batchGetProjects_names</a> -
--   The names or ARNs of the build projects. To get information about a
--   project shared with your Amazon Web Services account, its ARN must be
--   specified. You cannot specify a shared project using its name.
newBatchGetProjects :: NonEmpty Text -> BatchGetProjects

-- | The names or ARNs of the build projects. To get information about a
--   project shared with your Amazon Web Services account, its ARN must be
--   specified. You cannot specify a shared project using its name.
batchGetProjects_names :: Lens' BatchGetProjects (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetProjectsResponse</a> smart constructor.
data BatchGetProjectsResponse
BatchGetProjectsResponse' :: Maybe (NonEmpty Text) -> Maybe [Project] -> Int -> BatchGetProjectsResponse

-- | The names of build projects for which information could not be found.
[$sel:projectsNotFound:BatchGetProjectsResponse'] :: BatchGetProjectsResponse -> Maybe (NonEmpty Text)

-- | Information about the requested build projects.
[$sel:projects:BatchGetProjectsResponse'] :: BatchGetProjectsResponse -> Maybe [Project]

-- | The response's http status code.
[$sel:httpStatus:BatchGetProjectsResponse'] :: BatchGetProjectsResponse -> Int

-- | Create a value of <a>BatchGetProjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectsNotFound:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_projectsNotFound</a> - The names of build
--   projects for which information could not be found.
--   
--   <a>$sel:projects:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_projects</a> - Information about the
--   requested build projects.
--   
--   <a>$sel:httpStatus:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetProjectsResponse :: Int -> BatchGetProjectsResponse

-- | The names of build projects for which information could not be found.
batchGetProjectsResponse_projectsNotFound :: Lens' BatchGetProjectsResponse (Maybe (NonEmpty Text))

-- | Information about the requested build projects.
batchGetProjectsResponse_projects :: Lens' BatchGetProjectsResponse (Maybe [Project])

-- | The response's http status code.
batchGetProjectsResponse_httpStatus :: Lens' BatchGetProjectsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetProjects.BatchGetProjectsResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetProjects.BatchGetProjectsResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetProjects.BatchGetProjectsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetProjects.BatchGetProjectsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetProjects.BatchGetProjectsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchGetProjects.BatchGetProjects


-- | Gets information about one or more builds.
module Amazonka.CodeBuild.BatchGetBuilds

-- | <i>See:</i> <a>newBatchGetBuilds</a> smart constructor.
data BatchGetBuilds
BatchGetBuilds' :: NonEmpty Text -> BatchGetBuilds

-- | The IDs of the builds.
[$sel:ids:BatchGetBuilds'] :: BatchGetBuilds -> NonEmpty Text

-- | Create a value of <a>BatchGetBuilds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchGetBuilds'</a>, <a>batchGetBuilds_ids</a> - The IDs
--   of the builds.
newBatchGetBuilds :: NonEmpty Text -> BatchGetBuilds

-- | The IDs of the builds.
batchGetBuilds_ids :: Lens' BatchGetBuilds (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetBuildsResponse</a> smart constructor.
data BatchGetBuildsResponse
BatchGetBuildsResponse' :: Maybe [Build] -> Maybe (NonEmpty Text) -> Int -> BatchGetBuildsResponse

-- | Information about the requested builds.
[$sel:builds:BatchGetBuildsResponse'] :: BatchGetBuildsResponse -> Maybe [Build]

-- | The IDs of builds for which information could not be found.
[$sel:buildsNotFound:BatchGetBuildsResponse'] :: BatchGetBuildsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:BatchGetBuildsResponse'] :: BatchGetBuildsResponse -> Int

-- | Create a value of <a>BatchGetBuildsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:builds:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_builds</a> - Information about the requested
--   builds.
--   
--   <a>$sel:buildsNotFound:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_buildsNotFound</a> - The IDs of builds for
--   which information could not be found.
--   
--   <a>$sel:httpStatus:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetBuildsResponse :: Int -> BatchGetBuildsResponse

-- | Information about the requested builds.
batchGetBuildsResponse_builds :: Lens' BatchGetBuildsResponse (Maybe [Build])

-- | The IDs of builds for which information could not be found.
batchGetBuildsResponse_buildsNotFound :: Lens' BatchGetBuildsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetBuildsResponse_httpStatus :: Lens' BatchGetBuildsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuildsResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuildsResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuildsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuildsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuildsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchGetBuilds.BatchGetBuilds


-- | Retrieves information about one or more batch builds.
module Amazonka.CodeBuild.BatchGetBuildBatches

-- | <i>See:</i> <a>newBatchGetBuildBatches</a> smart constructor.
data BatchGetBuildBatches
BatchGetBuildBatches' :: [Text] -> BatchGetBuildBatches

-- | An array that contains the batch build identifiers to retrieve.
[$sel:ids:BatchGetBuildBatches'] :: BatchGetBuildBatches -> [Text]

-- | Create a value of <a>BatchGetBuildBatches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchGetBuildBatches'</a>, <a>batchGetBuildBatches_ids</a>
--   - An array that contains the batch build identifiers to retrieve.
newBatchGetBuildBatches :: BatchGetBuildBatches

-- | An array that contains the batch build identifiers to retrieve.
batchGetBuildBatches_ids :: Lens' BatchGetBuildBatches [Text]

-- | <i>See:</i> <a>newBatchGetBuildBatchesResponse</a> smart constructor.
data BatchGetBuildBatchesResponse
BatchGetBuildBatchesResponse' :: Maybe [BuildBatch] -> Maybe [Text] -> Int -> BatchGetBuildBatchesResponse

-- | An array of <tt>BuildBatch</tt> objects that represent the retrieved
--   batch builds.
[$sel:buildBatches:BatchGetBuildBatchesResponse'] :: BatchGetBuildBatchesResponse -> Maybe [BuildBatch]

-- | An array that contains the identifiers of any batch builds that are
--   not found.
[$sel:buildBatchesNotFound:BatchGetBuildBatchesResponse'] :: BatchGetBuildBatchesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:BatchGetBuildBatchesResponse'] :: BatchGetBuildBatchesResponse -> Int

-- | Create a value of <a>BatchGetBuildBatchesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatches:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_buildBatches</a> - An array of
--   <tt>BuildBatch</tt> objects that represent the retrieved batch builds.
--   
--   <a>$sel:buildBatchesNotFound:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_buildBatchesNotFound</a> - An array
--   that contains the identifiers of any batch builds that are not found.
--   
--   <a>$sel:httpStatus:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetBuildBatchesResponse :: Int -> BatchGetBuildBatchesResponse

-- | An array of <tt>BuildBatch</tt> objects that represent the retrieved
--   batch builds.
batchGetBuildBatchesResponse_buildBatches :: Lens' BatchGetBuildBatchesResponse (Maybe [BuildBatch])

-- | An array that contains the identifiers of any batch builds that are
--   not found.
batchGetBuildBatchesResponse_buildBatchesNotFound :: Lens' BatchGetBuildBatchesResponse (Maybe [Text])

-- | The response's http status code.
batchGetBuildBatchesResponse_httpStatus :: Lens' BatchGetBuildBatchesResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatchesResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatchesResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatchesResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatchesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatchesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchGetBuildBatches.BatchGetBuildBatches


-- | Deletes one or more builds.
module Amazonka.CodeBuild.BatchDeleteBuilds

-- | <i>See:</i> <a>newBatchDeleteBuilds</a> smart constructor.
data BatchDeleteBuilds
BatchDeleteBuilds' :: NonEmpty Text -> BatchDeleteBuilds

-- | The IDs of the builds to delete.
[$sel:ids:BatchDeleteBuilds'] :: BatchDeleteBuilds -> NonEmpty Text

-- | Create a value of <a>BatchDeleteBuilds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchDeleteBuilds'</a>, <a>batchDeleteBuilds_ids</a> - The
--   IDs of the builds to delete.
newBatchDeleteBuilds :: NonEmpty Text -> BatchDeleteBuilds

-- | The IDs of the builds to delete.
batchDeleteBuilds_ids :: Lens' BatchDeleteBuilds (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDeleteBuildsResponse</a> smart constructor.
data BatchDeleteBuildsResponse
BatchDeleteBuildsResponse' :: Maybe [BuildNotDeleted] -> Maybe (NonEmpty Text) -> Int -> BatchDeleteBuildsResponse

-- | Information about any builds that could not be successfully deleted.
[$sel:buildsNotDeleted:BatchDeleteBuildsResponse'] :: BatchDeleteBuildsResponse -> Maybe [BuildNotDeleted]

-- | The IDs of the builds that were successfully deleted.
[$sel:buildsDeleted:BatchDeleteBuildsResponse'] :: BatchDeleteBuildsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteBuildsResponse'] :: BatchDeleteBuildsResponse -> Int

-- | Create a value of <a>BatchDeleteBuildsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildsNotDeleted:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_buildsNotDeleted</a> - Information about
--   any builds that could not be successfully deleted.
--   
--   <a>$sel:buildsDeleted:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_buildsDeleted</a> - The IDs of the builds
--   that were successfully deleted.
--   
--   <a>$sel:httpStatus:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteBuildsResponse :: Int -> BatchDeleteBuildsResponse

-- | Information about any builds that could not be successfully deleted.
batchDeleteBuildsResponse_buildsNotDeleted :: Lens' BatchDeleteBuildsResponse (Maybe [BuildNotDeleted])

-- | The IDs of the builds that were successfully deleted.
batchDeleteBuildsResponse_buildsDeleted :: Lens' BatchDeleteBuildsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchDeleteBuildsResponse_httpStatus :: Lens' BatchDeleteBuildsResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance GHC.Show.Show Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance GHC.Read.Read Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance GHC.Generics.Generic Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuildsResponse
instance GHC.Show.Show Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuildsResponse
instance GHC.Read.Read Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuildsResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuildsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuildsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Control.DeepSeq.NFData Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.BatchDeleteBuilds.BatchDeleteBuilds


-- | Changes the settings of a build project.
module Amazonka.CodeBuild.UpdateProject

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe [ProjectArtifacts] -> Maybe ProjectArtifacts -> Maybe ProjectEnvironment -> Maybe Int -> Maybe Bool -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe VpcConfig -> Maybe ProjectSource -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> UpdateProject

-- | An array of <tt>ProjectArtifact</tt> objects.
[$sel:secondaryArtifacts:UpdateProject'] :: UpdateProject -> Maybe [ProjectArtifacts]

-- | Information to be changed about the build output artifacts for the
--   build project.
[$sel:artifacts:UpdateProject'] :: UpdateProject -> Maybe ProjectArtifacts

-- | Information to be changed about the build environment for the build
--   project.
[$sel:environment:UpdateProject'] :: UpdateProject -> Maybe ProjectEnvironment

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   To remove this limit, set this value to -1.
[$sel:concurrentBuildLimit:UpdateProject'] :: UpdateProject -> Maybe Int

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
[$sel:badgeEnabled:UpdateProject'] :: UpdateProject -> Maybe Bool

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
[$sel:secondarySourceVersions:UpdateProject'] :: UpdateProject -> Maybe [ProjectSourceVersion]

-- | The number of minutes a build is allowed to be queued before it times
--   out.
[$sel:queuedTimeoutInMinutes:UpdateProject'] :: UpdateProject -> Maybe Natural

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
[$sel:cache:UpdateProject'] :: UpdateProject -> Maybe ProjectCache

-- | An array of <tt>ProjectSource</tt> objects.
[$sel:secondarySources:UpdateProject'] :: UpdateProject -> Maybe [ProjectSource]

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
[$sel:sourceVersion:UpdateProject'] :: UpdateProject -> Maybe Text

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
[$sel:vpcConfig:UpdateProject'] :: UpdateProject -> Maybe VpcConfig

-- | Information to be changed about the build input source code for the
--   build project.
[$sel:source:UpdateProject'] :: UpdateProject -> Maybe ProjectSource

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, logs in an S3 bucket, or both.
[$sel:logsConfig:UpdateProject'] :: UpdateProject -> Maybe LogsConfig

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
[$sel:fileSystemLocations:UpdateProject'] :: UpdateProject -> Maybe [ProjectFileSystemLocation]
[$sel:buildBatchConfig:UpdateProject'] :: UpdateProject -> Maybe ProjectBuildBatchConfig

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
[$sel:encryptionKey:UpdateProject'] :: UpdateProject -> Maybe Text

-- | A new or replacement description of the build project.
[$sel:description:UpdateProject'] :: UpdateProject -> Maybe Text

-- | The replacement ARN of the IAM role that enables CodeBuild to interact
--   with dependent Amazon Web Services services on behalf of the Amazon
--   Web Services account.
[$sel:serviceRole:UpdateProject'] :: UpdateProject -> Maybe Text

-- | An updated list of tag key and value pairs associated with this build
--   project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
[$sel:tags:UpdateProject'] :: UpdateProject -> Maybe [Tag]

-- | The replacement value in minutes, from 5 to 480 (8 hours), for
--   CodeBuild to wait before timing out any related build that did not get
--   marked as completed.
[$sel:timeoutInMinutes:UpdateProject'] :: UpdateProject -> Maybe Natural

-- | The name of the build project.
--   
--   You cannot change a build project's name.
[$sel:name:UpdateProject'] :: UpdateProject -> Text

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:UpdateProject'</a>,
--   <a>updateProject_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifact</tt> objects.
--   
--   <a>$sel:artifacts:UpdateProject'</a>, <a>updateProject_artifacts</a> -
--   Information to be changed about the build output artifacts for the
--   build project.
--   
--   <a>$sel:environment:UpdateProject'</a>,
--   <a>updateProject_environment</a> - Information to be changed about the
--   build environment for the build project.
--   
--   <a>$sel:concurrentBuildLimit:UpdateProject'</a>,
--   <a>updateProject_concurrentBuildLimit</a> - The maximum number of
--   concurrent builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   To remove this limit, set this value to -1.
--   
--   <a>$sel:badgeEnabled:UpdateProject'</a>,
--   <a>updateProject_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:secondarySourceVersions:UpdateProject'</a>,
--   <a>updateProject_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
--   
--   <a>$sel:queuedTimeoutInMinutes:UpdateProject'</a>,
--   <a>updateProject_queuedTimeoutInMinutes</a> - The number of minutes a
--   build is allowed to be queued before it times out.
--   
--   <a>$sel:cache:UpdateProject'</a>, <a>updateProject_cache</a> - Stores
--   recently used information so that it can be quickly accessed at a
--   later time.
--   
--   <a>$sel:secondarySources:UpdateProject'</a>,
--   <a>updateProject_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:UpdateProject'</a>,
--   <a>updateProject_sourceVersion</a> - A version of the build input to
--   be built for this project. If not specified, the latest version is
--   used. If specified, it must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:vpcConfig:UpdateProject'</a>, <a>updateProject_vpcConfig</a> -
--   VpcConfig enables CodeBuild to access resources in an Amazon VPC.
--   
--   <a>$sel:source:UpdateProject'</a>, <a>updateProject_source</a> -
--   Information to be changed about the build input source code for the
--   build project.
--   
--   <a>$sel:logsConfig:UpdateProject'</a>, <a>updateProject_logsConfig</a>
--   - Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, logs in an S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:UpdateProject'</a>,
--   <a>updateProject_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:UpdateProject'</a>,
--   <a>updateProject_buildBatchConfig</a> - Undocumented member.
--   
--   <a>$sel:encryptionKey:UpdateProject'</a>,
--   <a>updateProject_encryptionKey</a> - The Key Management Service
--   customer master key (CMK) to be used for encrypting the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:description:UpdateProject'</a>,
--   <a>updateProject_description</a> - A new or replacement description of
--   the build project.
--   
--   <a>$sel:serviceRole:UpdateProject'</a>,
--   <a>updateProject_serviceRole</a> - The replacement ARN of the IAM role
--   that enables CodeBuild to interact with dependent Amazon Web Services
--   services on behalf of the Amazon Web Services account.
--   
--   <a>$sel:tags:UpdateProject'</a>, <a>updateProject_tags</a> - An
--   updated list of tag key and value pairs associated with this build
--   project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:UpdateProject'</a>,
--   <a>updateProject_timeoutInMinutes</a> - The replacement value in
--   minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing
--   out any related build that did not get marked as completed.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - The name
--   of the build project.
--   
--   You cannot change a build project's name.
newUpdateProject :: Text -> UpdateProject

-- | An array of <tt>ProjectArtifact</tt> objects.
updateProject_secondaryArtifacts :: Lens' UpdateProject (Maybe [ProjectArtifacts])

-- | Information to be changed about the build output artifacts for the
--   build project.
updateProject_artifacts :: Lens' UpdateProject (Maybe ProjectArtifacts)

-- | Information to be changed about the build environment for the build
--   project.
updateProject_environment :: Lens' UpdateProject (Maybe ProjectEnvironment)

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   To remove this limit, set this value to -1.
updateProject_concurrentBuildLimit :: Lens' UpdateProject (Maybe Int)

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
updateProject_badgeEnabled :: Lens' UpdateProject (Maybe Bool)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
updateProject_secondarySourceVersions :: Lens' UpdateProject (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
updateProject_queuedTimeoutInMinutes :: Lens' UpdateProject (Maybe Natural)

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
updateProject_cache :: Lens' UpdateProject (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
updateProject_secondarySources :: Lens' UpdateProject (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
updateProject_sourceVersion :: Lens' UpdateProject (Maybe Text)

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
updateProject_vpcConfig :: Lens' UpdateProject (Maybe VpcConfig)

-- | Information to be changed about the build input source code for the
--   build project.
updateProject_source :: Lens' UpdateProject (Maybe ProjectSource)

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, logs in an S3 bucket, or both.
updateProject_logsConfig :: Lens' UpdateProject (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
updateProject_fileSystemLocations :: Lens' UpdateProject (Maybe [ProjectFileSystemLocation])

-- | Undocumented member.
updateProject_buildBatchConfig :: Lens' UpdateProject (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
updateProject_encryptionKey :: Lens' UpdateProject (Maybe Text)

-- | A new or replacement description of the build project.
updateProject_description :: Lens' UpdateProject (Maybe Text)

-- | The replacement ARN of the IAM role that enables CodeBuild to interact
--   with dependent Amazon Web Services services on behalf of the Amazon
--   Web Services account.
updateProject_serviceRole :: Lens' UpdateProject (Maybe Text)

-- | An updated list of tag key and value pairs associated with this build
--   project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
updateProject_tags :: Lens' UpdateProject (Maybe [Tag])

-- | The replacement value in minutes, from 5 to 480 (8 hours), for
--   CodeBuild to wait before timing out any related build that did not get
--   marked as completed.
updateProject_timeoutInMinutes :: Lens' UpdateProject (Maybe Natural)

-- | The name of the build project.
--   
--   You cannot change a build project's name.
updateProject_name :: Lens' UpdateProject Text

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe Project -> Int -> UpdateProjectResponse

-- | Information about the build project that was changed.
[$sel:project:UpdateProjectResponse'] :: UpdateProjectResponse -> Maybe Project

-- | The response's http status code.
[$sel:httpStatus:UpdateProjectResponse'] :: UpdateProjectResponse -> Int

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_project</a> - Information about the build
--   project that was changed.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | Information about the build project that was changed.
updateProjectResponse_project :: Lens' UpdateProjectResponse (Maybe Project)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateProject.UpdateProject
instance GHC.Show.Show Amazonka.CodeBuild.UpdateProject.UpdateProject
instance GHC.Read.Read Amazonka.CodeBuild.UpdateProject.UpdateProject
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateProject.UpdateProject
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateProject.UpdateProjectResponse
instance GHC.Show.Show Amazonka.CodeBuild.UpdateProject.UpdateProjectResponse
instance GHC.Read.Read Amazonka.CodeBuild.UpdateProject.UpdateProjectResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateProject.UpdateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateProject.UpdateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.UpdateProject.UpdateProject
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.UpdateProject.UpdateProject


-- | Changes the public visibility for a project. The project's build
--   results, logs, and artifacts are available to the general public. For
--   more information, see <a>Public build projects</a> in the <i>CodeBuild
--   User Guide</i>.
--   
--   The following should be kept in mind when making your projects public:
--   
--   <ul>
--   <li>All of a project's build results, logs, and artifacts, including
--   builds that were run when the project was private, are available to
--   the general public.</li>
--   <li>All build logs and artifacts are available to the public.
--   Environment variables, source code, and other sensitive information
--   may have been output to the build logs and artifacts. You must be
--   careful about what information is output to the build logs. Some best
--   practice are:<ul><li>Do not store sensitive values, especially Amazon
--   Web Services access key IDs and secret access keys, in environment
--   variables. We recommend that you use an Amazon EC2 Systems Manager
--   Parameter Store or Secrets Manager to store sensitive
--   values.</li><li>Follow <a>Best practices for using webhooks</a> in the
--   <i>CodeBuild User Guide</i> to limit which entities can trigger a
--   build, and do not store the buildspec in the project itself, to ensure
--   that your webhooks are as secure as possible.</li></ul></li>
--   <li>A malicious user can use public builds to distribute malicious
--   artifacts. We recommend that you review all pull requests to verify
--   that the pull request is a legitimate change. We also recommend that
--   you validate any artifacts with their checksums to make sure that the
--   correct artifacts are being downloaded.</li>
--   </ul>
module Amazonka.CodeBuild.UpdateProjectVisibility

-- | <i>See:</i> <a>newUpdateProjectVisibility</a> smart constructor.
data UpdateProjectVisibility
UpdateProjectVisibility' :: Maybe Text -> Text -> ProjectVisibilityType -> UpdateProjectVisibility

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
[$sel:resourceAccessRole:UpdateProjectVisibility'] :: UpdateProjectVisibility -> Maybe Text

-- | The Amazon Resource Name (ARN) of the build project.
[$sel:projectArn:UpdateProjectVisibility'] :: UpdateProjectVisibility -> Text
[$sel:projectVisibility:UpdateProjectVisibility'] :: UpdateProjectVisibility -> ProjectVisibilityType

-- | Create a value of <a>UpdateProjectVisibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceAccessRole:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_resourceAccessRole</a> - The ARN of the IAM
--   role that enables CodeBuild to access the CloudWatch Logs and Amazon
--   S3 artifacts for the project's builds.
--   
--   <a>$sel:projectArn:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_projectArn</a> - The Amazon Resource Name
--   (ARN) of the build project.
--   
--   <a>$sel:projectVisibility:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_projectVisibility</a> - Undocumented
--   member.
newUpdateProjectVisibility :: Text -> ProjectVisibilityType -> UpdateProjectVisibility

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
updateProjectVisibility_resourceAccessRole :: Lens' UpdateProjectVisibility (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
updateProjectVisibility_projectArn :: Lens' UpdateProjectVisibility Text

-- | Undocumented member.
updateProjectVisibility_projectVisibility :: Lens' UpdateProjectVisibility ProjectVisibilityType

-- | <i>See:</i> <a>newUpdateProjectVisibilityResponse</a> smart
--   constructor.
data UpdateProjectVisibilityResponse
UpdateProjectVisibilityResponse' :: Maybe Text -> Maybe Text -> Maybe ProjectVisibilityType -> Int -> UpdateProjectVisibilityResponse

-- | Contains the project identifier used with the public build APIs.
[$sel:publicProjectAlias:UpdateProjectVisibilityResponse'] :: UpdateProjectVisibilityResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the build project.
[$sel:projectArn:UpdateProjectVisibilityResponse'] :: UpdateProjectVisibilityResponse -> Maybe Text
[$sel:projectVisibility:UpdateProjectVisibilityResponse'] :: UpdateProjectVisibilityResponse -> Maybe ProjectVisibilityType

-- | The response's http status code.
[$sel:httpStatus:UpdateProjectVisibilityResponse'] :: UpdateProjectVisibilityResponse -> Int

-- | Create a value of <a>UpdateProjectVisibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publicProjectAlias:UpdateProjectVisibilityResponse'</a>,
--   <a>updateProjectVisibilityResponse_publicProjectAlias</a> - Contains
--   the project identifier used with the public build APIs.
--   
--   <a>$sel:projectArn:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibilityResponse_projectArn</a> - The Amazon
--   Resource Name (ARN) of the build project.
--   
--   <a>$sel:projectVisibility:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibilityResponse_projectVisibility</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateProjectVisibilityResponse'</a>,
--   <a>updateProjectVisibilityResponse_httpStatus</a> - The response's
--   http status code.
newUpdateProjectVisibilityResponse :: Int -> UpdateProjectVisibilityResponse

-- | Contains the project identifier used with the public build APIs.
updateProjectVisibilityResponse_publicProjectAlias :: Lens' UpdateProjectVisibilityResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
updateProjectVisibilityResponse_projectArn :: Lens' UpdateProjectVisibilityResponse (Maybe Text)

-- | Undocumented member.
updateProjectVisibilityResponse_projectVisibility :: Lens' UpdateProjectVisibilityResponse (Maybe ProjectVisibilityType)

-- | The response's http status code.
updateProjectVisibilityResponse_httpStatus :: Lens' UpdateProjectVisibilityResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance GHC.Show.Show Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance GHC.Read.Read Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibilityResponse
instance GHC.Show.Show Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibilityResponse
instance GHC.Read.Read Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibilityResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibilityResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibilityResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.UpdateProjectVisibility.UpdateProjectVisibility


-- | Updates a report group.
module Amazonka.CodeBuild.UpdateReportGroup

-- | <i>See:</i> <a>newUpdateReportGroup</a> smart constructor.
data UpdateReportGroup
UpdateReportGroup' :: Maybe ReportExportConfig -> Maybe [Tag] -> Text -> UpdateReportGroup

-- | Used to specify an updated export type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
[$sel:exportConfig:UpdateReportGroup'] :: UpdateReportGroup -> Maybe ReportExportConfig

-- | An updated list of tag key and value pairs associated with this report
--   group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
[$sel:tags:UpdateReportGroup'] :: UpdateReportGroup -> Maybe [Tag]

-- | The ARN of the report group to update.
[$sel:arn:UpdateReportGroup'] :: UpdateReportGroup -> Text

-- | Create a value of <a>UpdateReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportConfig:UpdateReportGroup'</a>,
--   <a>updateReportGroup_exportConfig</a> - Used to specify an updated
--   export type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
--   
--   <a>$sel:tags:UpdateReportGroup'</a>, <a>updateReportGroup_tags</a> -
--   An updated list of tag key and value pairs associated with this report
--   group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
--   
--   <a>$sel:arn:UpdateReportGroup'</a>, <a>updateReportGroup_arn</a> - The
--   ARN of the report group to update.
newUpdateReportGroup :: Text -> UpdateReportGroup

-- | Used to specify an updated export type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
updateReportGroup_exportConfig :: Lens' UpdateReportGroup (Maybe ReportExportConfig)

-- | An updated list of tag key and value pairs associated with this report
--   group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
updateReportGroup_tags :: Lens' UpdateReportGroup (Maybe [Tag])

-- | The ARN of the report group to update.
updateReportGroup_arn :: Lens' UpdateReportGroup Text

-- | <i>See:</i> <a>newUpdateReportGroupResponse</a> smart constructor.
data UpdateReportGroupResponse
UpdateReportGroupResponse' :: Maybe ReportGroup -> Int -> UpdateReportGroupResponse

-- | Information about the updated report group.
[$sel:reportGroup:UpdateReportGroupResponse'] :: UpdateReportGroupResponse -> Maybe ReportGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateReportGroupResponse'] :: UpdateReportGroupResponse -> Int

-- | Create a value of <a>UpdateReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroup:UpdateReportGroupResponse'</a>,
--   <a>updateReportGroupResponse_reportGroup</a> - Information about the
--   updated report group.
--   
--   <a>$sel:httpStatus:UpdateReportGroupResponse'</a>,
--   <a>updateReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateReportGroupResponse :: Int -> UpdateReportGroupResponse

-- | Information about the updated report group.
updateReportGroupResponse_reportGroup :: Lens' UpdateReportGroupResponse (Maybe ReportGroup)

-- | The response's http status code.
updateReportGroupResponse_httpStatus :: Lens' UpdateReportGroupResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance GHC.Show.Show Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance GHC.Read.Read Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroupResponse
instance GHC.Show.Show Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroupResponse
instance GHC.Read.Read Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroupResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.UpdateReportGroup.UpdateReportGroup


-- | Updates the webhook associated with an CodeBuild build project.
--   
--   If you use Bitbucket for your repository, <tt>rotateSecret</tt> is
--   ignored.
module Amazonka.CodeBuild.UpdateWebhook

-- | <i>See:</i> <a>newUpdateWebhook</a> smart constructor.
data UpdateWebhook
UpdateWebhook' :: Maybe Text -> Maybe Bool -> Maybe [[WebhookFilter]] -> Maybe WebhookBuildType -> Text -> UpdateWebhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
[$sel:branchFilter:UpdateWebhook'] :: UpdateWebhook -> Maybe Text

-- | A boolean value that specifies whether the associated GitHub
--   repository's secret token should be updated. If you use Bitbucket for
--   your repository, <tt>rotateSecret</tt> is ignored.
[$sel:rotateSecret:UpdateWebhook'] :: UpdateWebhook -> Maybe Bool

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   if a webhook event can trigger a build. A filter group must contain at
--   least one <tt>EVENT</tt> <tt>WebhookFilter</tt>.
[$sel:filterGroups:UpdateWebhook'] :: UpdateWebhook -> Maybe [[WebhookFilter]]

-- | Specifies the type of build this webhook will trigger.
[$sel:buildType:UpdateWebhook'] :: UpdateWebhook -> Maybe WebhookBuildType

-- | The name of the CodeBuild project.
[$sel:projectName:UpdateWebhook'] :: UpdateWebhook -> Text

-- | Create a value of <a>UpdateWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:UpdateWebhook'</a>,
--   <a>updateWebhook_branchFilter</a> - A regular expression used to
--   determine which repository branches are built when a webhook is
--   triggered. If the name of a branch matches the regular expression,
--   then it is built. If <tt>branchFilter</tt> is empty, then all branches
--   are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:rotateSecret:UpdateWebhook'</a>,
--   <a>updateWebhook_rotateSecret</a> - A boolean value that specifies
--   whether the associated GitHub repository's secret token should be
--   updated. If you use Bitbucket for your repository,
--   <tt>rotateSecret</tt> is ignored.
--   
--   <a>$sel:filterGroups:UpdateWebhook'</a>,
--   <a>updateWebhook_filterGroups</a> - An array of arrays of
--   <tt>WebhookFilter</tt> objects used to determine if a webhook event
--   can trigger a build. A filter group must contain at least one
--   <tt>EVENT</tt> <tt>WebhookFilter</tt>.
--   
--   <a>$sel:buildType:UpdateWebhook'</a>, <a>updateWebhook_buildType</a> -
--   Specifies the type of build this webhook will trigger.
--   
--   <a>$sel:projectName:UpdateWebhook'</a>,
--   <a>updateWebhook_projectName</a> - The name of the CodeBuild project.
newUpdateWebhook :: Text -> UpdateWebhook

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
updateWebhook_branchFilter :: Lens' UpdateWebhook (Maybe Text)

-- | A boolean value that specifies whether the associated GitHub
--   repository's secret token should be updated. If you use Bitbucket for
--   your repository, <tt>rotateSecret</tt> is ignored.
updateWebhook_rotateSecret :: Lens' UpdateWebhook (Maybe Bool)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   if a webhook event can trigger a build. A filter group must contain at
--   least one <tt>EVENT</tt> <tt>WebhookFilter</tt>.
updateWebhook_filterGroups :: Lens' UpdateWebhook (Maybe [[WebhookFilter]])

-- | Specifies the type of build this webhook will trigger.
updateWebhook_buildType :: Lens' UpdateWebhook (Maybe WebhookBuildType)

-- | The name of the CodeBuild project.
updateWebhook_projectName :: Lens' UpdateWebhook Text

-- | <i>See:</i> <a>newUpdateWebhookResponse</a> smart constructor.
data UpdateWebhookResponse
UpdateWebhookResponse' :: Maybe Webhook -> Int -> UpdateWebhookResponse

-- | Information about a repository's webhook that is associated with a
--   project in CodeBuild.
[$sel:webhook:UpdateWebhookResponse'] :: UpdateWebhookResponse -> Maybe Webhook

-- | The response's http status code.
[$sel:httpStatus:UpdateWebhookResponse'] :: UpdateWebhookResponse -> Int

-- | Create a value of <a>UpdateWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:UpdateWebhookResponse'</a>,
--   <a>updateWebhookResponse_webhook</a> - Information about a
--   repository's webhook that is associated with a project in CodeBuild.
--   
--   <a>$sel:httpStatus:UpdateWebhookResponse'</a>,
--   <a>updateWebhookResponse_httpStatus</a> - The response's http status
--   code.
newUpdateWebhookResponse :: Int -> UpdateWebhookResponse

-- | Information about a repository's webhook that is associated with a
--   project in CodeBuild.
updateWebhookResponse_webhook :: Lens' UpdateWebhookResponse (Maybe Webhook)

-- | The response's http status code.
updateWebhookResponse_httpStatus :: Lens' UpdateWebhookResponse Int
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance GHC.Show.Show Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance GHC.Read.Read Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance GHC.Generics.Generic Amazonka.CodeBuild.UpdateWebhook.UpdateWebhookResponse
instance GHC.Show.Show Amazonka.CodeBuild.UpdateWebhook.UpdateWebhookResponse
instance GHC.Read.Read Amazonka.CodeBuild.UpdateWebhook.UpdateWebhookResponse
instance GHC.Classes.Eq Amazonka.CodeBuild.UpdateWebhook.UpdateWebhookResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateWebhook.UpdateWebhookResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Control.DeepSeq.NFData Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Amazonka.Data.Path.ToPath Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook
instance Amazonka.Data.Query.ToQuery Amazonka.CodeBuild.UpdateWebhook.UpdateWebhook


module Amazonka.CodeBuild.Lens

-- | The order in which to list build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   Use <tt>sortBy</tt> to specify the criterion to be used to list build
--   project names.
listProjects_sortOrder :: Lens' ListProjects (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The criterion to be used to list build project names. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each build project was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when information about
--   each build project was last changed.</li>
--   <li><tt>NAME</tt>: List based on each build project's name.</li>
--   </ul>
--   
--   Use <tt>sortOrder</tt> to specify in what order to list the build
--   project names based on the preceding criteria.
listProjects_sortBy :: Lens' ListProjects (Maybe ProjectSortByType)

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The list of build project names, with each build project name
--   representing a single build project.
listProjectsResponse_projects :: Lens' ListProjectsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | The name of the build project.
deleteProject_name :: Lens' DeleteProject Text

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int

-- | An array of <tt>ProjectArtifact</tt> objects.
updateProject_secondaryArtifacts :: Lens' UpdateProject (Maybe [ProjectArtifacts])

-- | Information to be changed about the build output artifacts for the
--   build project.
updateProject_artifacts :: Lens' UpdateProject (Maybe ProjectArtifacts)

-- | Information to be changed about the build environment for the build
--   project.
updateProject_environment :: Lens' UpdateProject (Maybe ProjectEnvironment)

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   To remove this limit, set this value to -1.
updateProject_concurrentBuildLimit :: Lens' UpdateProject (Maybe Int)

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
updateProject_badgeEnabled :: Lens' UpdateProject (Maybe Bool)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
updateProject_secondarySourceVersions :: Lens' UpdateProject (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
updateProject_queuedTimeoutInMinutes :: Lens' UpdateProject (Maybe Natural)

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
updateProject_cache :: Lens' UpdateProject (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
updateProject_secondarySources :: Lens' UpdateProject (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
updateProject_sourceVersion :: Lens' UpdateProject (Maybe Text)

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
updateProject_vpcConfig :: Lens' UpdateProject (Maybe VpcConfig)

-- | Information to be changed about the build input source code for the
--   build project.
updateProject_source :: Lens' UpdateProject (Maybe ProjectSource)

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, logs in an S3 bucket, or both.
updateProject_logsConfig :: Lens' UpdateProject (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
updateProject_fileSystemLocations :: Lens' UpdateProject (Maybe [ProjectFileSystemLocation])

-- | Undocumented member.
updateProject_buildBatchConfig :: Lens' UpdateProject (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
updateProject_encryptionKey :: Lens' UpdateProject (Maybe Text)

-- | A new or replacement description of the build project.
updateProject_description :: Lens' UpdateProject (Maybe Text)

-- | The replacement ARN of the IAM role that enables CodeBuild to interact
--   with dependent Amazon Web Services services on behalf of the Amazon
--   Web Services account.
updateProject_serviceRole :: Lens' UpdateProject (Maybe Text)

-- | An updated list of tag key and value pairs associated with this build
--   project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
updateProject_tags :: Lens' UpdateProject (Maybe [Tag])

-- | The replacement value in minutes, from 5 to 480 (8 hours), for
--   CodeBuild to wait before timing out any related build that did not get
--   marked as completed.
updateProject_timeoutInMinutes :: Lens' UpdateProject (Maybe Natural)

-- | The name of the build project.
--   
--   You cannot change a build project's name.
updateProject_name :: Lens' UpdateProject Text

-- | Information about the build project that was changed.
updateProjectResponse_project :: Lens' UpdateProjectResponse (Maybe Project)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int

-- | The Amazon Resource Name (ARN) of the token.
deleteSourceCredentials_arn :: Lens' DeleteSourceCredentials Text

-- | The Amazon Resource Name (ARN) of the token.
deleteSourceCredentialsResponse_arn :: Lens' DeleteSourceCredentialsResponse (Maybe Text)

-- | The response's http status code.
deleteSourceCredentialsResponse_httpStatus :: Lens' DeleteSourceCredentialsResponse Int

-- | The order to list build IDs. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build IDs in ascending order by build
--   ID.</li>
--   <li><tt>DESCENDING</tt>: List the build IDs in descending order by
--   build ID.</li>
--   </ul>
listBuilds_sortOrder :: Lens' ListBuilds (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listBuilds_nextToken :: Lens' ListBuilds (Maybe Text)

-- | A list of build IDs, with each build ID representing a single build.
listBuildsResponse_ids :: Lens' ListBuildsResponse (Maybe (NonEmpty Text))

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listBuildsResponse_nextToken :: Lens' ListBuildsResponse (Maybe Text)

-- | The response's http status code.
listBuildsResponse_httpStatus :: Lens' ListBuildsResponse Int

-- | A list of <tt>SourceCredentialsInfo</tt> objects. Each
--   <tt>SourceCredentialsInfo</tt> object includes the authentication
--   type, token ARN, and type of source provider for one set of
--   credentials.
listSourceCredentialsResponse_sourceCredentialsInfos :: Lens' ListSourceCredentialsResponse (Maybe [SourceCredentialsInfo])

-- | The response's http status code.
listSourceCredentialsResponse_httpStatus :: Lens' ListSourceCredentialsResponse Int

-- | Specifies the sort order for the list of returned reports. Valid
--   values are:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: return reports in chronological order based on
--   their creation date.</li>
--   <li><tt>DESCENDING</tt>: return reports in the reverse chronological
--   order based on their creation date.</li>
--   </ul>
listReports_sortOrder :: Lens' ListReports (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReports_nextToken :: Lens' ListReports (Maybe Text)

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
listReports_filter :: Lens' ListReports (Maybe ReportFilter)

-- | The maximum number of paginated reports returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
listReports_maxResults :: Lens' ListReports (Maybe Natural)

-- | The list of returned ARNs for the reports in the current Amazon Web
--   Services account.
listReportsResponse_reports :: Lens' ListReportsResponse (Maybe (NonEmpty Text))

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsResponse_nextToken :: Lens' ListReportsResponse (Maybe Text)

-- | The response's http status code.
listReportsResponse_httpStatus :: Lens' ListReportsResponse Int

-- | The ARN of the report to delete.
deleteReport_arn :: Lens' DeleteReport Text

-- | The response's http status code.
deleteReportResponse_httpStatus :: Lens' DeleteReportResponse Int

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
createWebhook_branchFilter :: Lens' CreateWebhook (Maybe Text)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
createWebhook_filterGroups :: Lens' CreateWebhook (Maybe [[WebhookFilter]])

-- | Specifies the type of build this webhook will trigger.
createWebhook_buildType :: Lens' CreateWebhook (Maybe WebhookBuildType)

-- | The name of the CodeBuild project.
createWebhook_projectName :: Lens' CreateWebhook Text

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
createWebhookResponse_webhook :: Lens' CreateWebhookResponse (Maybe Webhook)

-- | The response's http status code.
createWebhookResponse_httpStatus :: Lens' CreateWebhookResponse Int

-- | The identifier of the batch build to stop.
stopBuildBatch_id :: Lens' StopBuildBatch Text

-- | Undocumented member.
stopBuildBatchResponse_buildBatch :: Lens' StopBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
stopBuildBatchResponse_httpStatus :: Lens' StopBuildBatchResponse Int

-- | The order in which to list shared build projects. Valid values
--   include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
listSharedProjects_sortOrder :: Lens' ListSharedProjects (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedProjects_nextToken :: Lens' ListSharedProjects (Maybe Text)

-- | The maximum number of paginated shared build projects returned per
--   response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Project</tt> objects. The default value is 100.
listSharedProjects_maxResults :: Lens' ListSharedProjects (Maybe Natural)

-- | The criterion to be used to list build projects shared with the
--   current Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared project was last changed.</li>
--   </ul>
listSharedProjects_sortBy :: Lens' ListSharedProjects (Maybe SharedResourceSortByType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedProjectsResponse_nextToken :: Lens' ListSharedProjectsResponse (Maybe Text)

-- | The list of ARNs for the build projects shared with the current Amazon
--   Web Services account or user.
listSharedProjectsResponse_projects :: Lens' ListSharedProjectsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listSharedProjectsResponse_httpStatus :: Lens' ListSharedProjectsResponse Int

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
createReportGroup_tags :: Lens' CreateReportGroup (Maybe [Tag])

-- | The name of the report group.
createReportGroup_name :: Lens' CreateReportGroup Text

-- | The type of report group.
createReportGroup_type :: Lens' CreateReportGroup ReportType

-- | A <tt>ReportExportConfig</tt> object that contains information about
--   where the report group test results are exported.
createReportGroup_exportConfig :: Lens' CreateReportGroup ReportExportConfig

-- | Information about the report group that was created.
createReportGroupResponse_reportGroup :: Lens' CreateReportGroupResponse (Maybe ReportGroup)

-- | The response's http status code.
createReportGroupResponse_httpStatus :: Lens' CreateReportGroupResponse Int

-- | The minimum line coverage percentage to report.
describeCodeCoverages_minLineCoveragePercentage :: Lens' DescribeCodeCoverages (Maybe Double)

-- | Specifies if the results are sorted in ascending or descending order.
describeCodeCoverages_sortOrder :: Lens' DescribeCodeCoverages (Maybe SortOrderType)

-- | The maximum line coverage percentage to report.
describeCodeCoverages_maxLineCoveragePercentage :: Lens' DescribeCodeCoverages (Maybe Double)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>DescribeCodeCoverages</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
describeCodeCoverages_nextToken :: Lens' DescribeCodeCoverages (Maybe Text)

-- | The maximum number of results to return.
describeCodeCoverages_maxResults :: Lens' DescribeCodeCoverages (Maybe Natural)

-- | Specifies how the results are sorted. Possible values are:
--   
--   <ul>
--   <li><i>FILE_PATH</i> The results are sorted by file path.</li>
--   <li><i>LINE_COVERAGE_PERCENTAGE</i> The results are sorted by the
--   percentage of lines that are covered.</li>
--   </ul>
describeCodeCoverages_sortBy :: Lens' DescribeCodeCoverages (Maybe ReportCodeCoverageSortByType)

-- | The ARN of the report for which test cases are returned.
describeCodeCoverages_reportArn :: Lens' DescribeCodeCoverages Text

-- | An array of <tt>CodeCoverage</tt> objects that contain the results.
describeCodeCoveragesResponse_codeCoverages :: Lens' DescribeCodeCoveragesResponse (Maybe [CodeCoverage])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>DescribeCodeCoverages</tt> to
--   retrieve the next set of items.
describeCodeCoveragesResponse_nextToken :: Lens' DescribeCodeCoveragesResponse (Maybe Text)

-- | The response's http status code.
describeCodeCoveragesResponse_httpStatus :: Lens' DescribeCodeCoveragesResponse Int

-- | The Bitbucket username when the <tt>authType</tt> is BASIC_AUTH. This
--   parameter is not valid for other types of source providers or
--   connections.
importSourceCredentials_username :: Lens' ImportSourceCredentials (Maybe Text)

-- | Set to <tt>false</tt> to prevent overwriting the repository source
--   credentials. Set to <tt>true</tt> to overwrite the repository source
--   credentials. The default value is <tt>true</tt>.
importSourceCredentials_shouldOverwrite :: Lens' ImportSourceCredentials (Maybe Bool)

-- | For GitHub or GitHub Enterprise, this is the personal access token.
--   For Bitbucket, this is the app password.
importSourceCredentials_token :: Lens' ImportSourceCredentials Text

-- | The source provider used for this project.
importSourceCredentials_serverType :: Lens' ImportSourceCredentials ServerType

-- | The type of authentication used to connect to a GitHub, GitHub
--   Enterprise, or Bitbucket repository. An OAUTH connection is not
--   supported by the API and must be created using the CodeBuild console.
importSourceCredentials_authType :: Lens' ImportSourceCredentials AuthType

-- | The Amazon Resource Name (ARN) of the token.
importSourceCredentialsResponse_arn :: Lens' ImportSourceCredentialsResponse (Maybe Text)

-- | The response's http status code.
importSourceCredentialsResponse_httpStatus :: Lens' ImportSourceCredentialsResponse Int

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
listBuildBatchesForProject_sortOrder :: Lens' ListBuildBatchesForProject (Maybe SortOrderType)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatchesForProject</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
listBuildBatchesForProject_nextToken :: Lens' ListBuildBatchesForProject (Maybe Text)

-- | The name of the project.
listBuildBatchesForProject_projectName :: Lens' ListBuildBatchesForProject (Maybe Text)

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
listBuildBatchesForProject_filter :: Lens' ListBuildBatchesForProject (Maybe BuildBatchFilter)

-- | The maximum number of results to return.
listBuildBatchesForProject_maxResults :: Lens' ListBuildBatchesForProject (Maybe Natural)

-- | An array of strings that contains the batch build identifiers.
listBuildBatchesForProjectResponse_ids :: Lens' ListBuildBatchesForProjectResponse (Maybe [Text])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatchesForProject</tt> to
--   retrieve the next set of items.
listBuildBatchesForProjectResponse_nextToken :: Lens' ListBuildBatchesForProjectResponse (Maybe Text)

-- | The response's http status code.
listBuildBatchesForProjectResponse_httpStatus :: Lens' ListBuildBatchesForProjectResponse Int

-- | An array of report group ARNs that identify the report groups to
--   return.
batchGetReportGroups_reportGroupArns :: Lens' BatchGetReportGroups (NonEmpty Text)

-- | The array of report groups returned by <tt>BatchGetReportGroups</tt>.
batchGetReportGroupsResponse_reportGroups :: Lens' BatchGetReportGroupsResponse (Maybe (NonEmpty ReportGroup))

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>ReportGroup</tt>.
batchGetReportGroupsResponse_reportGroupsNotFound :: Lens' BatchGetReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetReportGroupsResponse_httpStatus :: Lens' BatchGetReportGroupsResponse Int

-- | The identifier of the batch build to delete.
deleteBuildBatch_id :: Lens' DeleteBuildBatch Text

-- | An array of <tt>BuildNotDeleted</tt> objects that specify the builds
--   that could not be deleted.
deleteBuildBatchResponse_buildsNotDeleted :: Lens' DeleteBuildBatchResponse (Maybe [BuildNotDeleted])

-- | An array of strings that contain the identifiers of the builds that
--   were deleted.
deleteBuildBatchResponse_buildsDeleted :: Lens' DeleteBuildBatchResponse (Maybe (NonEmpty Text))

-- | The status code.
deleteBuildBatchResponse_statusCode :: Lens' DeleteBuildBatchResponse (Maybe Text)

-- | The response's http status code.
deleteBuildBatchResponse_httpStatus :: Lens' DeleteBuildBatchResponse Int

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the build project. The CMK key encrypts the build
--   output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
startBuild_encryptionKeyOverride :: Lens' StartBuild (Maybe Text)

-- | A location that overrides, for this build, the source location for the
--   one defined in the build project.
startBuild_sourceLocationOverride :: Lens' StartBuild (Maybe Text)

-- | A set of environment variables that overrides, for this build only,
--   the latest ones already defined in the build project.
startBuild_environmentVariablesOverride :: Lens' StartBuild (Maybe [EnvironmentVariable])

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
startBuild_buildStatusConfigOverride :: Lens' StartBuild (Maybe BuildStatusConfig)

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the StartBuild request. The token is included in the
--   StartBuild request and is valid for 5 minutes. If you repeat the
--   StartBuild request with the same token, but change a parameter,
--   CodeBuild returns a parameter mismatch error.
startBuild_idempotencyToken :: Lens' StartBuild (Maybe Text)

-- | Specifies if session debugging is enabled for this build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
startBuild_debugSessionEnabled :: Lens' StartBuild (Maybe Bool)

-- | The credentials for access to a private registry.
startBuild_registryCredentialOverride :: Lens' StartBuild (Maybe RegistryCredential)

-- | The number of build timeout minutes, from 5 to 480 (8 hours), that
--   overrides, for this build only, the latest setting already defined in
--   the build project.
startBuild_timeoutInMinutesOverride :: Lens' StartBuild (Maybe Natural)

-- | The name of a service role for this build that overrides the one
--   specified in the build project.
startBuild_serviceRoleOverride :: Lens' StartBuild (Maybe Text)

-- | A ProjectCache object specified for this build that overrides the one
--   defined in the build project.
startBuild_cacheOverride :: Lens' StartBuild (Maybe ProjectCache)

-- | The number of minutes a build is allowed to be queued before it times
--   out.
startBuild_queuedTimeoutInMinutesOverride :: Lens' StartBuild (Maybe Natural)

-- | An array of <tt>ProjectSource</tt> objects.
startBuild_secondarySourcesOverride :: Lens' StartBuild (Maybe [ProjectSource])

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this build only, any previous depth of history defined
--   in the build project.
startBuild_gitCloneDepthOverride :: Lens' StartBuild (Maybe Natural)

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
startBuild_imagePullCredentialsTypeOverride :: Lens' StartBuild (Maybe ImagePullCredentialsType)

-- | Log settings for this build that override the log settings defined in
--   the build project.
startBuild_logsConfigOverride :: Lens' StartBuild (Maybe LogsConfig)

-- | An authorization type for this build that overrides the one defined in
--   the build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
startBuild_sourceAuthOverride :: Lens' StartBuild (Maybe SourceAuth)

-- | Information about the Git submodules configuration for this build of
--   an CodeBuild build project.
startBuild_gitSubmodulesConfigOverride :: Lens' StartBuild (Maybe GitSubmodulesConfig)

-- | A container type for this build that overrides the one specified in
--   the build project.
startBuild_environmentTypeOverride :: Lens' StartBuild (Maybe EnvironmentType)

-- | The name of a certificate for this build that overrides the one
--   specified in the build project.
startBuild_certificateOverride :: Lens' StartBuild (Maybe Text)

-- | The name of a compute type for this build that overrides the one
--   specified in the build project.
startBuild_computeTypeOverride :: Lens' StartBuild (Maybe ComputeType)

-- | Enable this flag to override privileged mode in the build project.
startBuild_privilegedModeOverride :: Lens' StartBuild (Maybe Bool)

-- | The version of the build input to be built, for this build only. If
--   not specified, the latest version is used. If specified, the contents
--   depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
startBuild_sourceVersion :: Lens' StartBuild (Maybe Text)

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
startBuild_buildspecOverride :: Lens' StartBuild (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects that specify one or
--   more versions of the project's secondary sources to be used for this
--   build only.
startBuild_secondarySourcesVersionOverride :: Lens' StartBuild (Maybe [ProjectSourceVersion])

-- | Set to true to report to your source provider the status of a build's
--   start and completion. If you use this option with a source provider
--   other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
startBuild_reportBuildStatusOverride :: Lens' StartBuild (Maybe Bool)

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the build project. The insecure SSL setting determines
--   whether to ignore SSL warnings while connecting to the project source
--   code. This override applies only if the build's source is GitHub
--   Enterprise.
startBuild_insecureSslOverride :: Lens' StartBuild (Maybe Bool)

-- | The name of an image for this build that overrides the one specified
--   in the build project.
startBuild_imageOverride :: Lens' StartBuild (Maybe Text)

-- | An array of <tt>ProjectArtifacts</tt> objects.
startBuild_secondaryArtifactsOverride :: Lens' StartBuild (Maybe [ProjectArtifacts])

-- | Build output artifact settings that override, for this build only, the
--   latest ones already defined in the build project.
startBuild_artifactsOverride :: Lens' StartBuild (Maybe ProjectArtifacts)

-- | A source input type, for this build, that overrides the source input
--   defined in the build project.
startBuild_sourceTypeOverride :: Lens' StartBuild (Maybe SourceType)

-- | The name of the CodeBuild build project to start running a build.
startBuild_projectName :: Lens' StartBuild Text

-- | Information about the build to be run.
startBuildResponse_build :: Lens' StartBuildResponse (Maybe Build)

-- | The response's http status code.
startBuildResponse_httpStatus :: Lens' StartBuildResponse Int

-- | An array that contains the batch build identifiers to retrieve.
batchGetBuildBatches_ids :: Lens' BatchGetBuildBatches [Text]

-- | An array of <tt>BuildBatch</tt> objects that represent the retrieved
--   batch builds.
batchGetBuildBatchesResponse_buildBatches :: Lens' BatchGetBuildBatchesResponse (Maybe [BuildBatch])

-- | An array that contains the identifiers of any batch builds that are
--   not found.
batchGetBuildBatchesResponse_buildBatchesNotFound :: Lens' BatchGetBuildBatchesResponse (Maybe [Text])

-- | The response's http status code.
batchGetBuildBatchesResponse_httpStatus :: Lens' BatchGetBuildBatchesResponse Int

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuild</tt> request. The token is included
--   in the <tt>RetryBuild</tt> request and is valid for five minutes. If
--   you repeat the <tt>RetryBuild</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
retryBuild_idempotencyToken :: Lens' RetryBuild (Maybe Text)

-- | Specifies the identifier of the build to restart.
retryBuild_id :: Lens' RetryBuild (Maybe Text)

-- | Undocumented member.
retryBuildResponse_build :: Lens' RetryBuildResponse (Maybe Build)

-- | The response's http status code.
retryBuildResponse_httpStatus :: Lens' RetryBuildResponse Int

-- | The order to sort the results in. The results are sorted by build
--   number, not the build identifier. If this is not specified, the
--   results are sorted in descending order.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build identifiers in ascending order,
--   by build number.</li>
--   <li><tt>DESCENDING</tt>: List the build identifiers in descending
--   order, by build number.</li>
--   </ul>
--   
--   If the project has more than 100 builds, setting the sort order will
--   result in an error.
listBuildsForProject_sortOrder :: Lens' ListBuildsForProject (Maybe SortOrderType)

-- | During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
listBuildsForProject_nextToken :: Lens' ListBuildsForProject (Maybe Text)

-- | The name of the CodeBuild project.
listBuildsForProject_projectName :: Lens' ListBuildsForProject Text

-- | A list of build identifiers for the specified build project, with each
--   build ID representing a single build.
listBuildsForProjectResponse_ids :: Lens' ListBuildsForProjectResponse (Maybe (NonEmpty Text))

-- | If there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call.
listBuildsForProjectResponse_nextToken :: Lens' ListBuildsForProjectResponse (Maybe Text)

-- | The response's http status code.
listBuildsForProjectResponse_httpStatus :: Lens' ListBuildsForProjectResponse Int

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
describeTestCases_nextToken :: Lens' DescribeTestCases (Maybe Text)

-- | A <tt>TestCaseFilter</tt> object used to filter the returned reports.
describeTestCases_filter :: Lens' DescribeTestCases (Maybe TestCaseFilter)

-- | The maximum number of paginated test cases returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>TestCase</tt> objects. The default value is 100.
describeTestCases_maxResults :: Lens' DescribeTestCases (Maybe Natural)

-- | The ARN of the report for which test cases are returned.
describeTestCases_reportArn :: Lens' DescribeTestCases Text

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
describeTestCasesResponse_nextToken :: Lens' DescribeTestCasesResponse (Maybe Text)

-- | The returned list of test cases.
describeTestCasesResponse_testCases :: Lens' DescribeTestCasesResponse (Maybe [TestCase])

-- | The response's http status code.
describeTestCasesResponse_httpStatus :: Lens' DescribeTestCasesResponse Int

-- | The ARN of the resource that is associated with the resource policy.
getResourcePolicy_resourceArn :: Lens' GetResourcePolicy Text

-- | The resource policy for the resource identified by the input ARN
--   parameter.
getResourcePolicyResponse_policy :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int

-- | The names or ARNs of the build projects. To get information about a
--   project shared with your Amazon Web Services account, its ARN must be
--   specified. You cannot specify a shared project using its name.
batchGetProjects_names :: Lens' BatchGetProjects (NonEmpty Text)

-- | The names of build projects for which information could not be found.
batchGetProjectsResponse_projectsNotFound :: Lens' BatchGetProjectsResponse (Maybe (NonEmpty Text))

-- | Information about the requested build projects.
batchGetProjectsResponse_projects :: Lens' BatchGetProjectsResponse (Maybe [Project])

-- | The response's http status code.
batchGetProjectsResponse_httpStatus :: Lens' BatchGetProjectsResponse Int

-- | The IDs of the builds.
batchGetBuilds_ids :: Lens' BatchGetBuilds (NonEmpty Text)

-- | Information about the requested builds.
batchGetBuildsResponse_builds :: Lens' BatchGetBuildsResponse (Maybe [Build])

-- | The IDs of builds for which information could not be found.
batchGetBuildsResponse_buildsNotFound :: Lens' BatchGetBuildsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetBuildsResponse_httpStatus :: Lens' BatchGetBuildsResponse Int

-- | An array of ARNs that identify the <tt>Report</tt> objects to return.
batchGetReports_reportArns :: Lens' BatchGetReports (NonEmpty Text)

-- | The array of <tt>Report</tt> objects returned by
--   <tt>BatchGetReports</tt>.
batchGetReportsResponse_reports :: Lens' BatchGetReportsResponse (Maybe (NonEmpty Report))

-- | An array of ARNs passed to <tt>BatchGetReportGroups</tt> that are not
--   associated with a <tt>Report</tt>.
batchGetReportsResponse_reportsNotFound :: Lens' BatchGetReportsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchGetReportsResponse_httpStatus :: Lens' BatchGetReportsResponse Int

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
updateWebhook_branchFilter :: Lens' UpdateWebhook (Maybe Text)

-- | A boolean value that specifies whether the associated GitHub
--   repository's secret token should be updated. If you use Bitbucket for
--   your repository, <tt>rotateSecret</tt> is ignored.
updateWebhook_rotateSecret :: Lens' UpdateWebhook (Maybe Bool)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   if a webhook event can trigger a build. A filter group must contain at
--   least one <tt>EVENT</tt> <tt>WebhookFilter</tt>.
updateWebhook_filterGroups :: Lens' UpdateWebhook (Maybe [[WebhookFilter]])

-- | Specifies the type of build this webhook will trigger.
updateWebhook_buildType :: Lens' UpdateWebhook (Maybe WebhookBuildType)

-- | The name of the CodeBuild project.
updateWebhook_projectName :: Lens' UpdateWebhook Text

-- | Information about a repository's webhook that is associated with a
--   project in CodeBuild.
updateWebhookResponse_webhook :: Lens' UpdateWebhookResponse (Maybe Webhook)

-- | The response's http status code.
updateWebhookResponse_httpStatus :: Lens' UpdateWebhookResponse Int

-- | The name of the CodeBuild project.
deleteWebhook_projectName :: Lens' DeleteWebhook Text

-- | The response's http status code.
deleteWebhookResponse_httpStatus :: Lens' DeleteWebhookResponse Int

-- | The Key Management Service customer master key (CMK) that overrides
--   the one specified in the batch build project. The CMK key encrypts the
--   build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
startBuildBatch_encryptionKeyOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A location that overrides, for this batch build, the source location
--   defined in the batch build project.
startBuildBatch_sourceLocationOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A <tt>BuildBatchConfigOverride</tt> object that contains batch build
--   configuration overrides.
startBuildBatch_buildBatchConfigOverride :: Lens' StartBuildBatch (Maybe ProjectBuildBatchConfig)

-- | An array of <tt>EnvironmentVariable</tt> objects that override, or add
--   to, the environment variables defined in the batch build project.
startBuildBatch_environmentVariablesOverride :: Lens' StartBuildBatch (Maybe [EnvironmentVariable])

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>StartBuildBatch</tt> request. The token is
--   included in the <tt>StartBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>StartBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
startBuildBatch_idempotencyToken :: Lens' StartBuildBatch (Maybe Text)

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
startBuildBatch_debugSessionEnabled :: Lens' StartBuildBatch (Maybe Bool)

-- | A <tt>RegistryCredential</tt> object that overrides credentials for
--   access to a private registry.
startBuildBatch_registryCredentialOverride :: Lens' StartBuildBatch (Maybe RegistryCredential)

-- | The name of a service role for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_serviceRoleOverride :: Lens' StartBuildBatch (Maybe Text)

-- | A <tt>ProjectCache</tt> object that specifies cache overrides.
startBuildBatch_cacheOverride :: Lens' StartBuildBatch (Maybe ProjectCache)

-- | The number of minutes a batch build is allowed to be queued before it
--   times out.
startBuildBatch_queuedTimeoutInMinutesOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | An array of <tt>ProjectSource</tt> objects that override the secondary
--   sources defined in the batch build project.
startBuildBatch_secondarySourcesOverride :: Lens' StartBuildBatch (Maybe [ProjectSource])

-- | The user-defined depth of history, with a minimum value of 0, that
--   overrides, for this batch build only, any previous depth of history
--   defined in the batch build project.
startBuildBatch_gitCloneDepthOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | The type of credentials CodeBuild uses to pull images in your batch
--   build. There are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
startBuildBatch_imagePullCredentialsTypeOverride :: Lens' StartBuildBatch (Maybe ImagePullCredentialsType)

-- | A <tt>LogsConfig</tt> object that override the log settings defined in
--   the batch build project.
startBuildBatch_logsConfigOverride :: Lens' StartBuildBatch (Maybe LogsConfig)

-- | A <tt>SourceAuth</tt> object that overrides the one defined in the
--   batch build project. This override applies only if the build project's
--   source is BitBucket or GitHub.
startBuildBatch_sourceAuthOverride :: Lens' StartBuildBatch (Maybe SourceAuth)

-- | A <tt>GitSubmodulesConfig</tt> object that overrides the Git
--   submodules configuration for this batch build.
startBuildBatch_gitSubmodulesConfigOverride :: Lens' StartBuildBatch (Maybe GitSubmodulesConfig)

-- | A container type for this batch build that overrides the one specified
--   in the batch build project.
startBuildBatch_environmentTypeOverride :: Lens' StartBuildBatch (Maybe EnvironmentType)

-- | The name of a certificate for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_certificateOverride :: Lens' StartBuildBatch (Maybe Text)

-- | The name of a compute type for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_computeTypeOverride :: Lens' StartBuildBatch (Maybe ComputeType)

-- | Set to <tt>true</tt> to report to your source provider the status of a
--   batch build's start and completion. If you use this option with a
--   source provider other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
startBuildBatch_reportBuildBatchStatusOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | Enable this flag to override privileged mode in the batch build
--   project.
startBuildBatch_privilegedModeOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | The version of the batch build input to be built, for this build only.
--   If not specified, the latest version is used. If specified, the
--   contents depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
startBuildBatch_sourceVersion :: Lens' StartBuildBatch (Maybe Text)

-- | A buildspec file declaration that overrides, for this build only, the
--   latest one already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
startBuildBatch_buildspecOverride :: Lens' StartBuildBatch (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects that override the
--   secondary source versions in the batch build project.
startBuildBatch_secondarySourcesVersionOverride :: Lens' StartBuildBatch (Maybe [ProjectSourceVersion])

-- | Enable this flag to override the insecure SSL setting that is
--   specified in the batch build project. The insecure SSL setting
--   determines whether to ignore SSL warnings while connecting to the
--   project source code. This override applies only if the build's source
--   is GitHub Enterprise.
startBuildBatch_insecureSslOverride :: Lens' StartBuildBatch (Maybe Bool)

-- | The name of an image for this batch build that overrides the one
--   specified in the batch build project.
startBuildBatch_imageOverride :: Lens' StartBuildBatch (Maybe Text)

-- | An array of <tt>ProjectArtifacts</tt> objects that override the
--   secondary artifacts defined in the batch build project.
startBuildBatch_secondaryArtifactsOverride :: Lens' StartBuildBatch (Maybe [ProjectArtifacts])

-- | Overrides the build timeout specified in the batch build project.
startBuildBatch_buildTimeoutInMinutesOverride :: Lens' StartBuildBatch (Maybe Natural)

-- | An array of <tt>ProjectArtifacts</tt> objects that contains
--   information about the build output artifact overrides for the build
--   project.
startBuildBatch_artifactsOverride :: Lens' StartBuildBatch (Maybe ProjectArtifacts)

-- | The source input type that overrides the source input defined in the
--   batch build project.
startBuildBatch_sourceTypeOverride :: Lens' StartBuildBatch (Maybe SourceType)

-- | The name of the project.
startBuildBatch_projectName :: Lens' StartBuildBatch Text

-- | A <tt>BuildBatch</tt> object that contains information about the batch
--   build.
startBuildBatchResponse_buildBatch :: Lens' StartBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
startBuildBatchResponse_httpStatus :: Lens' StartBuildBatchResponse Int

-- | A unique, case sensitive identifier you provide to ensure the
--   idempotency of the <tt>RetryBuildBatch</tt> request. The token is
--   included in the <tt>RetryBuildBatch</tt> request and is valid for five
--   minutes. If you repeat the <tt>RetryBuildBatch</tt> request with the
--   same token, but change a parameter, CodeBuild returns a parameter
--   mismatch error.
retryBuildBatch_idempotencyToken :: Lens' RetryBuildBatch (Maybe Text)

-- | Specifies the identifier of the batch build to restart.
retryBuildBatch_id :: Lens' RetryBuildBatch (Maybe Text)

-- | Specifies the type of retry to perform.
retryBuildBatch_retryType :: Lens' RetryBuildBatch (Maybe RetryBuildBatchType)

-- | Undocumented member.
retryBuildBatchResponse_buildBatch :: Lens' RetryBuildBatchResponse (Maybe BuildBatch)

-- | The response's http status code.
retryBuildBatchResponse_httpStatus :: Lens' RetryBuildBatchResponse Int

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
updateProjectVisibility_resourceAccessRole :: Lens' UpdateProjectVisibility (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
updateProjectVisibility_projectArn :: Lens' UpdateProjectVisibility Text

-- | Undocumented member.
updateProjectVisibility_projectVisibility :: Lens' UpdateProjectVisibility ProjectVisibilityType

-- | Contains the project identifier used with the public build APIs.
updateProjectVisibilityResponse_publicProjectAlias :: Lens' UpdateProjectVisibilityResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
updateProjectVisibilityResponse_projectArn :: Lens' UpdateProjectVisibilityResponse (Maybe Text)

-- | Undocumented member.
updateProjectVisibilityResponse_projectVisibility :: Lens' UpdateProjectVisibilityResponse (Maybe ProjectVisibilityType)

-- | The response's http status code.
updateProjectVisibilityResponse_httpStatus :: Lens' UpdateProjectVisibilityResponse Int

-- | Use to specify whether the results are returned in ascending or
--   descending order.
listReportsForReportGroup_sortOrder :: Lens' ListReportsForReportGroup (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsForReportGroup_nextToken :: Lens' ListReportsForReportGroup (Maybe Text)

-- | A <tt>ReportFilter</tt> object used to filter the returned reports.
listReportsForReportGroup_filter :: Lens' ListReportsForReportGroup (Maybe ReportFilter)

-- | The maximum number of paginated reports in this report group returned
--   per response. Use <tt>nextToken</tt> to iterate pages in the list of
--   returned <tt>Report</tt> objects. The default value is 100.
listReportsForReportGroup_maxResults :: Lens' ListReportsForReportGroup (Maybe Natural)

-- | The ARN of the report group for which you want to return report ARNs.
listReportsForReportGroup_reportGroupArn :: Lens' ListReportsForReportGroup Text

-- | The list of report ARNs.
listReportsForReportGroupResponse_reports :: Lens' ListReportsForReportGroupResponse (Maybe (NonEmpty Text))

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportsForReportGroupResponse_nextToken :: Lens' ListReportsForReportGroupResponse (Maybe Text)

-- | The response's http status code.
listReportsForReportGroupResponse_httpStatus :: Lens' ListReportsForReportGroupResponse Int

-- | The name of the CodeBuild build project that the cache is reset for.
invalidateProjectCache_projectName :: Lens' InvalidateProjectCache Text

-- | The response's http status code.
invalidateProjectCacheResponse_httpStatus :: Lens' InvalidateProjectCacheResponse Int

-- | Used to specify an updated export type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
updateReportGroup_exportConfig :: Lens' UpdateReportGroup (Maybe ReportExportConfig)

-- | An updated list of tag key and value pairs associated with this report
--   group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
updateReportGroup_tags :: Lens' UpdateReportGroup (Maybe [Tag])

-- | The ARN of the report group to update.
updateReportGroup_arn :: Lens' UpdateReportGroup Text

-- | Information about the updated report group.
updateReportGroupResponse_reportGroup :: Lens' UpdateReportGroupResponse (Maybe ReportGroup)

-- | The response's http status code.
updateReportGroupResponse_httpStatus :: Lens' UpdateReportGroupResponse Int

-- | If <tt>true</tt>, deletes any reports that belong to a report group
--   before deleting the report group.
--   
--   If <tt>false</tt>, you must delete any reports in the report group.
--   Use <a>ListReportsForReportGroup</a> to get the reports in a report
--   group. Use <a>DeleteReport</a> to delete the reports. If you call
--   <tt>DeleteReportGroup</tt> for a report group that contains one or
--   more reports, an exception is thrown.
deleteReportGroup_deleteReports :: Lens' DeleteReportGroup (Maybe Bool)

-- | The ARN of the report group to delete.
deleteReportGroup_arn :: Lens' DeleteReportGroup Text

-- | The response's http status code.
deleteReportGroupResponse_httpStatus :: Lens' DeleteReportGroupResponse Int

-- | The IDs of the builds to delete.
batchDeleteBuilds_ids :: Lens' BatchDeleteBuilds (NonEmpty Text)

-- | Information about any builds that could not be successfully deleted.
batchDeleteBuildsResponse_buildsNotDeleted :: Lens' BatchDeleteBuildsResponse (Maybe [BuildNotDeleted])

-- | The IDs of the builds that were successfully deleted.
batchDeleteBuildsResponse_buildsDeleted :: Lens' BatchDeleteBuildsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchDeleteBuildsResponse_httpStatus :: Lens' BatchDeleteBuildsResponse Int

-- | Used to specify the order to sort the list of returned report groups.
--   Valid values are <tt>ASCENDING</tt> and <tt>DESCENDING</tt>.
listReportGroups_sortOrder :: Lens' ListReportGroups (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportGroups_nextToken :: Lens' ListReportGroups (Maybe Text)

-- | The maximum number of paginated report groups returned per response.
--   Use <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
listReportGroups_maxResults :: Lens' ListReportGroups (Maybe Natural)

-- | The criterion to be used to list build report groups. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each report group was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when each report group
--   was last changed.</li>
--   <li><tt>NAME</tt>: List based on each report group's name.</li>
--   </ul>
listReportGroups_sortBy :: Lens' ListReportGroups (Maybe ReportGroupSortByType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listReportGroupsResponse_nextToken :: Lens' ListReportGroupsResponse (Maybe Text)

-- | The list of ARNs for the report groups in the current Amazon Web
--   Services account.
listReportGroupsResponse_reportGroups :: Lens' ListReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listReportGroupsResponse_httpStatus :: Lens' ListReportGroupsResponse Int

-- | A JSON-formatted resource policy. For more information, see <a>Sharing
--   a Project</a> and <a>Sharing a Report Group</a> in the <i>CodeBuild
--   User Guide</i>.
putResourcePolicy_policy :: Lens' PutResourcePolicy Text

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource you
--   want to associate with a resource policy.
putResourcePolicy_resourceArn :: Lens' PutResourcePolicy Text

-- | The ARN of the <tt>Project</tt> or <tt>ReportGroup</tt> resource that
--   is associated with a resource policy.
putResourcePolicyResponse_resourceArn :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int

-- | The ARN of the resource that is associated with the resource policy.
deleteResourcePolicy_resourceArn :: Lens' DeleteResourcePolicy Text

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int

-- | Information about supported platforms for Docker images that are
--   managed by CodeBuild.
listCuratedEnvironmentImagesResponse_platforms :: Lens' ListCuratedEnvironmentImagesResponse (Maybe [EnvironmentPlatform])

-- | The response's http status code.
listCuratedEnvironmentImagesResponse_httpStatus :: Lens' ListCuratedEnvironmentImagesResponse Int

-- | The number of reports to analyze. This operation always retrieves the
--   most recent reports.
--   
--   If this parameter is omitted, the most recent 100 reports are
--   analyzed.
getReportGroupTrend_numOfReports :: Lens' GetReportGroupTrend (Maybe Natural)

-- | The ARN of the report group that contains the reports to analyze.
getReportGroupTrend_reportGroupArn :: Lens' GetReportGroupTrend Text

-- | The test report value to accumulate. This must be one of the following
--   values:
--   
--   <ul>
--   <li><i>Test reports:</i></li>
--   <li><i>DURATION</i> Accumulate the test run times for the specified
--   reports.<ul><li><i>PASS_RATE</i> Accumulate the percentage of tests
--   that passed for the specified test reports.</li><li><i>TOTAL</i>
--   Accumulate the total number of tests for the specified test
--   reports.</li></ul></li>
--   <li><i>Code coverage reports:</i></li>
--   <li><i>BRANCH_COVERAGE</i> Accumulate the branch coverage percentages
--   for the specified test reports.<ul><li><i>BRANCHES_COVERED</i>
--   Accumulate the branches covered values for the specified test
--   reports.</li><li><i>BRANCHES_MISSED</i> Accumulate the branches missed
--   values for the specified test reports.</li><li><i>LINE_COVERAGE</i>
--   Accumulate the line coverage percentages for the specified test
--   reports.</li><li><i>LINES_COVERED</i> Accumulate the lines covered
--   values for the specified test reports.</li><li><i>LINES_MISSED</i>
--   Accumulate the lines not covered values for the specified test
--   reports.</li></ul></li>
--   </ul>
getReportGroupTrend_trendField :: Lens' GetReportGroupTrend ReportGroupTrendFieldType

-- | An array that contains the raw data for each report.
getReportGroupTrendResponse_rawData :: Lens' GetReportGroupTrendResponse (Maybe [ReportWithRawData])

-- | Contains the accumulated trend data.
getReportGroupTrendResponse_stats :: Lens' GetReportGroupTrendResponse (Maybe ReportGroupTrendStats)

-- | The response's http status code.
getReportGroupTrendResponse_httpStatus :: Lens' GetReportGroupTrendResponse Int

-- | The ID of the build.
stopBuild_id :: Lens' StopBuild Text

-- | Information about the build.
stopBuildResponse_build :: Lens' StopBuildResponse (Maybe Build)

-- | The response's http status code.
stopBuildResponse_httpStatus :: Lens' StopBuildResponse Int

-- | Specifies the sort order of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
listBuildBatches_sortOrder :: Lens' ListBuildBatches (Maybe SortOrderType)

-- | The <tt>nextToken</tt> value returned from a previous call to
--   <tt>ListBuildBatches</tt>. This specifies the next item to return. To
--   return the beginning of the list, exclude this parameter.
listBuildBatches_nextToken :: Lens' ListBuildBatches (Maybe Text)

-- | A <tt>BuildBatchFilter</tt> object that specifies the filters for the
--   search.
listBuildBatches_filter :: Lens' ListBuildBatches (Maybe BuildBatchFilter)

-- | The maximum number of results to return.
listBuildBatches_maxResults :: Lens' ListBuildBatches (Maybe Natural)

-- | An array of strings that contains the batch build identifiers.
listBuildBatchesResponse_ids :: Lens' ListBuildBatchesResponse (Maybe [Text])

-- | If there are more items to return, this contains a token that is
--   passed to a subsequent call to <tt>ListBuildBatches</tt> to retrieve
--   the next set of items.
listBuildBatchesResponse_nextToken :: Lens' ListBuildBatchesResponse (Maybe Text)

-- | The response's http status code.
listBuildBatchesResponse_httpStatus :: Lens' ListBuildBatchesResponse Int

-- | An array of <tt>ProjectArtifacts</tt> objects.
createProject_secondaryArtifacts :: Lens' CreateProject (Maybe [ProjectArtifacts])

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
createProject_concurrentBuildLimit :: Lens' CreateProject (Maybe Int)

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
createProject_badgeEnabled :: Lens' CreateProject (Maybe Bool)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take precedence over these <tt>secondarySourceVersions</tt> (at
--   the project level).
createProject_secondarySourceVersions :: Lens' CreateProject (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
createProject_queuedTimeoutInMinutes :: Lens' CreateProject (Maybe Natural)

-- | Stores recently used information so that it can be quickly accessed at
--   a later time.
createProject_cache :: Lens' CreateProject (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
createProject_secondarySources :: Lens' CreateProject (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
createProject_sourceVersion :: Lens' CreateProject (Maybe Text)

-- | VpcConfig enables CodeBuild to access resources in an Amazon VPC.
createProject_vpcConfig :: Lens' CreateProject (Maybe VpcConfig)

-- | Information about logs for the build project. These can be logs in
--   CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.
createProject_logsConfig :: Lens' CreateProject (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
createProject_fileSystemLocations :: Lens' CreateProject (Maybe [ProjectFileSystemLocation])

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
createProject_buildBatchConfig :: Lens' CreateProject (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
createProject_encryptionKey :: Lens' CreateProject (Maybe Text)

-- | A description that makes the build project easy to identify.
createProject_description :: Lens' CreateProject (Maybe Text)

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
createProject_tags :: Lens' CreateProject (Maybe [Tag])

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before it times out any build that has not been marked as completed.
--   The default is 60 minutes.
createProject_timeoutInMinutes :: Lens' CreateProject (Maybe Natural)

-- | The name of the build project.
createProject_name :: Lens' CreateProject Text

-- | Information about the build input source code for the build project.
createProject_source :: Lens' CreateProject ProjectSource

-- | Information about the build output artifacts for the build project.
createProject_artifacts :: Lens' CreateProject ProjectArtifacts

-- | Information about the build environment for the build project.
createProject_environment :: Lens' CreateProject ProjectEnvironment

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
createProject_serviceRole :: Lens' CreateProject Text

-- | Information about the build project that was created.
createProjectResponse_project :: Lens' CreateProjectResponse (Maybe Project)

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int

-- | The order in which to list shared report groups. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
listSharedReportGroups_sortOrder :: Lens' ListSharedReportGroups (Maybe SortOrderType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedReportGroups_nextToken :: Lens' ListSharedReportGroups (Maybe Text)

-- | The maximum number of paginated shared report groups per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>ReportGroup</tt> objects. The default value is 100.
listSharedReportGroups_maxResults :: Lens' ListSharedReportGroups (Maybe Natural)

-- | The criterion to be used to list report groups shared with the current
--   Amazon Web Services account or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared report group was last changed.</li>
--   </ul>
listSharedReportGroups_sortBy :: Lens' ListSharedReportGroups (Maybe SharedResourceSortByType)

-- | During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
listSharedReportGroupsResponse_nextToken :: Lens' ListSharedReportGroupsResponse (Maybe Text)

-- | The list of ARNs for the report groups shared with the current Amazon
--   Web Services account or user.
listSharedReportGroupsResponse_reportGroups :: Lens' ListSharedReportGroupsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listSharedReportGroupsResponse_httpStatus :: Lens' ListSharedReportGroupsResponse Int

-- | Specifies the maximum number of builds allowed.
batchRestrictions_maximumBuildsAllowed :: Lens' BatchRestrictions (Maybe Int)

-- | An array of strings that specify the compute types that are allowed
--   for the batch build. See <a>Build environment compute types</a> in the
--   <i>CodeBuild User Guide</i> for these values.
batchRestrictions_computeTypesAllowed :: Lens' BatchRestrictions (Maybe [Text])

-- | Information about all previous build phases that are complete and
--   information about any current build phase that is not yet complete.
build_phases :: Lens' Build (Maybe [BuildPhase])

-- | Whether the build is complete. True if complete; otherwise, false.
build_buildComplete :: Lens' Build (Maybe Bool)

-- | An array of <tt>ProjectArtifacts</tt> objects.
build_secondaryArtifacts :: Lens' Build (Maybe [BuildArtifacts])

-- | The Amazon Resource Name (ARN) of the build.
build_arn :: Lens' Build (Maybe Text)

-- | A list of exported environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
build_exportedEnvironmentVariables :: Lens' Build (Maybe [ExportedEnvironmentVariable])

-- | The number of the build. For each project, the <tt>buildNumber</tt> of
--   its first build is <tt>1</tt>. The <tt>buildNumber</tt> of each
--   subsequent build is incremented by <tt>1</tt>. If a build is deleted,
--   the <tt>buildNumber</tt> of other builds does not change.
build_buildNumber :: Lens' Build (Maybe Integer)

-- | When the build process started, expressed in Unix time format.
build_startTime :: Lens' Build (Maybe UTCTime)

-- | Information about the output artifacts for the build.
build_artifacts :: Lens' Build (Maybe BuildArtifacts)

-- | Information about the build environment for this build.
build_environment :: Lens' Build (Maybe ProjectEnvironment)

-- | The entity that started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
build_initiator :: Lens' Build (Maybe Text)

-- | Describes a network interface.
build_networkInterface :: Lens' Build (Maybe NetworkInterface)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
build_secondarySourceVersions :: Lens' Build (Maybe [ProjectSourceVersion])

-- | The current build phase.
build_currentPhase :: Lens' Build (Maybe Text)

-- | The number of minutes a build is allowed to be queued before it times
--   out.
build_queuedTimeoutInMinutes :: Lens' Build (Maybe Int)

-- | Information about the cache for the build.
build_cache :: Lens' Build (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
build_secondarySources :: Lens' Build (Maybe [ProjectSource])

-- | Contains information about the debug session for this build.
build_debugSession :: Lens' Build (Maybe DebugSession)

-- | Any version identifier for the version of the source code to be built.
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
build_sourceVersion :: Lens' Build (Maybe Text)

-- | The ARN of the batch build that this build is a member of, if
--   applicable.
build_buildBatchArn :: Lens' Build (Maybe Text)

-- | Information about the build's logs in CloudWatch Logs.
build_logs :: Lens' Build (Maybe LogsLocation)

-- | An identifier for the version of this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
build_resolvedSourceVersion :: Lens' Build (Maybe Text)

-- | If your CodeBuild project accesses resources in an Amazon VPC, you
--   provide this parameter that identifies the VPC ID and the list of
--   security group IDs and subnet IDs. The security groups and subnets
--   must belong to the same VPC. You must provide at least one security
--   group and one subnet ID.
build_vpcConfig :: Lens' Build (Maybe VpcConfig)

-- | When the build process ended, expressed in Unix time format.
build_endTime :: Lens' Build (Maybe UTCTime)

-- | The name of the CodeBuild project.
build_projectName :: Lens' Build (Maybe Text)

-- | The current status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
build_buildStatus :: Lens' Build (Maybe StatusType)

-- | Information about the source code to be built.
build_source :: Lens' Build (Maybe ProjectSource)

-- | The unique ID for the build.
build_id :: Lens' Build (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
build_fileSystemLocations :: Lens' Build (Maybe [ProjectFileSystemLocation])

-- | An array of the ARNs associated with this build's reports.
build_reportArns :: Lens' Build (Maybe [Text])

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
build_encryptionKey :: Lens' Build (Maybe Text)

-- | The name of a service role used for this build.
build_serviceRole :: Lens' Build (Maybe Text)

-- | How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
build_timeoutInMinutes :: Lens' Build (Maybe Int)

-- | Information about the location of the build artifacts.
buildArtifacts_location :: Lens' BuildArtifacts (Maybe Text)

-- | The MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_md5sum :: Lens' BuildArtifacts (Maybe Text)

-- | Information that tells you if encryption for build artifacts is
--   disabled.
buildArtifacts_encryptionDisabled :: Lens' BuildArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
buildArtifacts_overrideArtifactName :: Lens' BuildArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
buildArtifacts_artifactIdentifier :: Lens' BuildArtifacts (Maybe Text)

-- | The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
buildArtifacts_sha256sum :: Lens' BuildArtifacts (Maybe Text)

-- | Undocumented member.
buildArtifacts_bucketOwnerAccess :: Lens' BuildArtifacts (Maybe BucketOwnerAccess)

-- | An array of <tt>BuildBatchPhase</tt> objects the specify the phases of
--   the batch build.
buildBatch_phases :: Lens' BuildBatch (Maybe [BuildBatchPhase])

-- | An array of <tt>BuildArtifacts</tt> objects the define the build
--   artifacts for this batch build.
buildBatch_secondaryArtifacts :: Lens' BuildBatch (Maybe [BuildArtifacts])

-- | Specifies the maximum amount of time, in minutes, that the build in a
--   batch must be completed in.
buildBatch_buildTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Specifies if session debugging is enabled for this batch build. For
--   more information, see <a>Viewing a running build in Session
--   Manager</a>. Batch session debugging is not supported for matrix batch
--   builds.
buildBatch_debugSessionEnabled :: Lens' BuildBatch (Maybe Bool)

-- | The ARN of the batch build.
buildBatch_arn :: Lens' BuildBatch (Maybe Text)

-- | The date and time that the batch build started.
buildBatch_startTime :: Lens' BuildBatch (Maybe UTCTime)

-- | A <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
buildBatch_artifacts :: Lens' BuildBatch (Maybe BuildArtifacts)

-- | Undocumented member.
buildBatch_environment :: Lens' BuildBatch (Maybe ProjectEnvironment)

-- | The entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
buildBatch_initiator :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
buildBatch_secondarySourceVersions :: Lens' BuildBatch (Maybe [ProjectSourceVersion])

-- | The status of the batch build.
buildBatch_buildBatchStatus :: Lens' BuildBatch (Maybe StatusType)

-- | The current phase of the batch build.
buildBatch_currentPhase :: Lens' BuildBatch (Maybe Text)

-- | The number of the batch build. For each project, the
--   <tt>buildBatchNumber</tt> of its first batch build is <tt>1</tt>. The
--   <tt>buildBatchNumber</tt> of each subsequent batch build is
--   incremented by <tt>1</tt>. If a batch build is deleted, the
--   <tt>buildBatchNumber</tt> of other batch builds does not change.
buildBatch_buildBatchNumber :: Lens' BuildBatch (Maybe Integer)

-- | Specifies the amount of time, in minutes, that the batch build is
--   allowed to be queued before it times out.
buildBatch_queuedTimeoutInMinutes :: Lens' BuildBatch (Maybe Int)

-- | Undocumented member.
buildBatch_cache :: Lens' BuildBatch (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects that define the sources for
--   the batch build.
buildBatch_secondarySources :: Lens' BuildBatch (Maybe [ProjectSource])

-- | The identifier of the version of the source code to be built.
buildBatch_sourceVersion :: Lens' BuildBatch (Maybe Text)

-- | The identifier of the resolved version of this batch build's source
--   code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
buildBatch_resolvedSourceVersion :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_vpcConfig :: Lens' BuildBatch (Maybe VpcConfig)

-- | The date and time that the batch build ended.
buildBatch_endTime :: Lens' BuildBatch (Maybe UTCTime)

-- | The name of the batch build project.
buildBatch_projectName :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
buildBatch_buildGroups :: Lens' BuildBatch (Maybe [BuildGroup])

-- | Undocumented member.
buildBatch_source :: Lens' BuildBatch (Maybe ProjectSource)

-- | The identifier of the batch build.
buildBatch_id :: Lens' BuildBatch (Maybe Text)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for the batch
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
buildBatch_fileSystemLocations :: Lens' BuildBatch (Maybe [ProjectFileSystemLocation])

-- | Undocumented member.
buildBatch_buildBatchConfig :: Lens' BuildBatch (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
buildBatch_encryptionKey :: Lens' BuildBatch (Maybe Text)

-- | Undocumented member.
buildBatch_logConfig :: Lens' BuildBatch (Maybe LogsConfig)

-- | The name of a service role used for builds in the batch.
buildBatch_serviceRole :: Lens' BuildBatch (Maybe Text)

-- | Indicates if the batch build is complete.
buildBatch_complete :: Lens' BuildBatch (Maybe Bool)

-- | The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
buildBatchFilter_status :: Lens' BuildBatchFilter (Maybe StatusType)

-- | Additional information about the batch build phase. Especially to help
--   troubleshoot a failed batch build.
buildBatchPhase_contexts :: Lens' BuildBatchPhase (Maybe [PhaseContext])

-- | When the batch build phase started, expressed in Unix time format.
buildBatchPhase_startTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | The current status of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildBatchPhase_phaseStatus :: Lens' BuildBatchPhase (Maybe StatusType)

-- | The name of the batch build phase. Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
buildBatchPhase_phaseType :: Lens' BuildBatchPhase (Maybe BuildBatchPhaseType)

-- | When the batch build phase ended, expressed in Unix time format.
buildBatchPhase_endTime :: Lens' BuildBatchPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   batch build's phase.
buildBatchPhase_durationInSeconds :: Lens' BuildBatchPhase (Maybe Integer)

-- | Contains the identifier of the build group.
buildGroup_identifier :: Lens' BuildGroup (Maybe Text)

-- | An array of strings that contain the identifiers of the build groups
--   that this build group depends on.
buildGroup_dependsOn :: Lens' BuildGroup (Maybe [Text])

-- | Specifies if failures in this build group can be ignored.
buildGroup_ignoreFailure :: Lens' BuildGroup (Maybe Bool)

-- | A <tt>BuildSummary</tt> object that contains a summary of the current
--   build group.
buildGroup_currentBuildSummary :: Lens' BuildGroup (Maybe BuildSummary)

-- | An array of <tt>BuildSummary</tt> objects that contain summaries of
--   previous build groups.
buildGroup_priorBuildSummaryList :: Lens' BuildGroup (Maybe [BuildSummary])

-- | The ID of the build that could not be successfully deleted.
buildNotDeleted_id :: Lens' BuildNotDeleted (Maybe Text)

-- | Additional information about the build that could not be successfully
--   deleted.
buildNotDeleted_statusCode :: Lens' BuildNotDeleted (Maybe Text)

-- | Additional information about a build phase, especially to help
--   troubleshoot a failed build.
buildPhase_contexts :: Lens' BuildPhase (Maybe [PhaseContext])

-- | When the build phase started, expressed in Unix time format.
buildPhase_startTime :: Lens' BuildPhase (Maybe UTCTime)

-- | The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
buildPhase_phaseStatus :: Lens' BuildPhase (Maybe StatusType)

-- | The name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
buildPhase_phaseType :: Lens' BuildPhase (Maybe BuildPhaseType)

-- | When the build phase ended, expressed in Unix time format.
buildPhase_endTime :: Lens' BuildPhase (Maybe UTCTime)

-- | How long, in seconds, between the starting and ending times of the
--   build's phase.
buildPhase_durationInSeconds :: Lens' BuildPhase (Maybe Integer)

-- | Specifies the context of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
buildStatusConfig_context :: Lens' BuildStatusConfig (Maybe Text)

-- | Specifies the target url of the build status CodeBuild sends to the
--   source provider. The usage of this parameter depends on the source
--   provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
buildStatusConfig_targetUrl :: Lens' BuildStatusConfig (Maybe Text)

-- | An array of <tt>ResolvedArtifact</tt> objects that represents the
--   secondary build artifacts for the build group.
buildSummary_secondaryArtifacts :: Lens' BuildSummary (Maybe [ResolvedArtifact])

-- | A <tt>ResolvedArtifact</tt> object that represents the primary build
--   artifacts for the build group.
buildSummary_primaryArtifact :: Lens' BuildSummary (Maybe ResolvedArtifact)

-- | The batch build ARN.
buildSummary_arn :: Lens' BuildSummary (Maybe Text)

-- | The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
buildSummary_buildStatus :: Lens' BuildSummary (Maybe StatusType)

-- | When the build was started, expressed in Unix time format.
buildSummary_requestedOn :: Lens' BuildSummary (Maybe UTCTime)

-- | The group name of the logs in CloudWatch Logs. For more information,
--   see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_groupName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The prefix of the stream name of the CloudWatch Logs. For more
--   information, see <a>Working with Log Groups and Log Streams</a>.
cloudWatchLogsConfig_streamName :: Lens' CloudWatchLogsConfig (Maybe Text)

-- | The current status of the logs in CloudWatch Logs for a build project.
--   Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
cloudWatchLogsConfig_status :: Lens' CloudWatchLogsConfig LogsConfigStatusType

-- | The date and time that the tests were run.
codeCoverage_expired :: Lens' CodeCoverage (Maybe UTCTime)

-- | The number of conditional branches that are not covered by your tests.
codeCoverage_branchesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverage_linesMissed :: Lens' CodeCoverage (Maybe Natural)

-- | The path of the test report file.
codeCoverage_filePath :: Lens' CodeCoverage (Maybe Text)

-- | The number of conditional branches that are covered by your tests.
codeCoverage_branchesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverage_linesCovered :: Lens' CodeCoverage (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverage_branchCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The identifier of the code coverage report.
codeCoverage_id :: Lens' CodeCoverage (Maybe Text)

-- | The percentage of lines that are covered by your tests.
codeCoverage_lineCoveragePercentage :: Lens' CodeCoverage (Maybe Double)

-- | The ARN of the report.
codeCoverage_reportARN :: Lens' CodeCoverage (Maybe Text)

-- | The number of conditional branches that are not covered by your tests.
codeCoverageReportSummary_branchesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are not covered by your tests.
codeCoverageReportSummary_linesMissed :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of conditional branches that are covered by your tests.
codeCoverageReportSummary_branchesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The number of lines that are covered by your tests.
codeCoverageReportSummary_linesCovered :: Lens' CodeCoverageReportSummary (Maybe Natural)

-- | The percentage of branches that are covered by your tests.
codeCoverageReportSummary_branchCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)

-- | The percentage of lines that are covered by your tests.
codeCoverageReportSummary_lineCoveragePercentage :: Lens' CodeCoverageReportSummary (Maybe Double)

-- | Specifies if session debugging is enabled for this build.
debugSession_sessionEnabled :: Lens' DebugSession (Maybe Bool)

-- | Contains the identifier of the Session Manager session used for the
--   build. To work with the paused build, you open this session to
--   examine, control, and resume the build.
debugSession_sessionTarget :: Lens' DebugSession (Maybe Text)

-- | A list of environment image versions.
environmentImage_versions :: Lens' EnvironmentImage (Maybe [Text])

-- | The name of the Docker image.
environmentImage_name :: Lens' EnvironmentImage (Maybe Text)

-- | The description of the Docker image.
environmentImage_description :: Lens' EnvironmentImage (Maybe Text)

-- | The list of Docker images that are related by the specified
--   programming language.
environmentLanguage_images :: Lens' EnvironmentLanguage (Maybe [EnvironmentImage])

-- | The programming language for the Docker images.
environmentLanguage_language :: Lens' EnvironmentLanguage (Maybe LanguageType)

-- | The platform's name.
environmentPlatform_platform :: Lens' EnvironmentPlatform (Maybe PlatformType)

-- | The list of programming languages that are available for the specified
--   platform.
environmentPlatform_languages :: Lens' EnvironmentPlatform (Maybe [EnvironmentLanguage])

-- | The type of environment variable. Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
environmentVariable_type :: Lens' EnvironmentVariable (Maybe EnvironmentVariableType)

-- | The name or key of the environment variable.
environmentVariable_name :: Lens' EnvironmentVariable Text

-- | The value of the environment variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
environmentVariable_value :: Lens' EnvironmentVariable Text

-- | The value assigned to the exported environment variable.
exportedEnvironmentVariable_value :: Lens' ExportedEnvironmentVariable (Maybe Text)

-- | The name of the exported environment variable.
exportedEnvironmentVariable_name :: Lens' ExportedEnvironmentVariable (Maybe Text)

-- | Set to true to fetch Git submodules for your CodeBuild build project.
gitSubmodulesConfig_fetchSubmodules :: Lens' GitSubmodulesConfig Bool

-- | Information about logs built to an S3 bucket for a build project. S3
--   logs are not enabled by default.
logsConfig_s3Logs :: Lens' LogsConfig (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project. CloudWatch Logs
--   are enabled by default.
logsConfig_cloudWatchLogs :: Lens' LogsConfig (Maybe CloudWatchLogsConfig)

-- | The URL to an individual build log in CloudWatch Logs.
logsLocation_deepLink :: Lens' LogsLocation (Maybe Text)

-- | Information about S3 logs for a build project.
logsLocation_s3Logs :: Lens' LogsLocation (Maybe S3LogsConfig)

-- | Information about CloudWatch Logs for a build project.
logsLocation_cloudWatchLogs :: Lens' LogsLocation (Maybe CloudWatchLogsConfig)

-- | The URL to a build log in an S3 bucket.
logsLocation_s3DeepLink :: Lens' LogsLocation (Maybe Text)

-- | The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
logsLocation_s3LogsArn :: Lens' LogsLocation (Maybe Text)

-- | The ARN of CloudWatch Logs for a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
logsLocation_cloudWatchLogsArn :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs group for the build logs.
logsLocation_groupName :: Lens' LogsLocation (Maybe Text)

-- | The name of the CloudWatch Logs stream for the build logs.
logsLocation_streamName :: Lens' LogsLocation (Maybe Text)

-- | The ID of the subnet.
networkInterface_subnetId :: Lens' NetworkInterface (Maybe Text)

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | An explanation of the build phase's context. This might include a
--   command ID and an exit code.
phaseContext_message :: Lens' PhaseContext (Maybe Text)

-- | The status code for the context of the build phase.
phaseContext_statusCode :: Lens' PhaseContext (Maybe Text)

-- | An array of <tt>ProjectArtifacts</tt> objects.
project_secondaryArtifacts :: Lens' Project (Maybe [ProjectArtifacts])

-- | The ARN of the IAM role that enables CodeBuild to access the
--   CloudWatch Logs and Amazon S3 artifacts for the project's builds.
project_resourceAccessRole :: Lens' Project (Maybe Text)

-- | The Amazon Resource Name (ARN) of the build project.
project_arn :: Lens' Project (Maybe Text)

-- | Information about the build output artifacts for the build project.
project_artifacts :: Lens' Project (Maybe ProjectArtifacts)

-- | Information about the build environment for this build project.
project_environment :: Lens' Project (Maybe ProjectEnvironment)

-- | When the build project was created, expressed in Unix time format.
project_created :: Lens' Project (Maybe UTCTime)

-- | The maximum number of concurrent builds that are allowed for this
--   project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
project_concurrentBuildLimit :: Lens' Project (Maybe Int)

-- | An array of <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
project_secondarySourceVersions :: Lens' Project (Maybe [ProjectSourceVersion])

-- | The number of minutes a build is allowed to be queued before it times
--   out.
project_queuedTimeoutInMinutes :: Lens' Project (Maybe Natural)

-- | Information about the cache for the build project.
project_cache :: Lens' Project (Maybe ProjectCache)

-- | An array of <tt>ProjectSource</tt> objects.
project_secondarySources :: Lens' Project (Maybe [ProjectSource])

-- | A version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
project_sourceVersion :: Lens' Project (Maybe Text)

-- | The name of the build project.
project_name :: Lens' Project (Maybe Text)

-- | Information about the VPC configuration that CodeBuild accesses.
project_vpcConfig :: Lens' Project (Maybe VpcConfig)

-- | Contains the project identifier used with the public build APIs.
project_publicProjectAlias :: Lens' Project (Maybe Text)

-- | Information about the build input source code for this build project.
project_source :: Lens' Project (Maybe ProjectSource)

-- | Information about the build badge for the build project.
project_badge :: Lens' Project (Maybe ProjectBadge)

-- | Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
project_logsConfig :: Lens' Project (Maybe LogsConfig)

-- | An array of <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild
--   build project. A <tt>ProjectFileSystemLocation</tt> object specifies
--   the <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
project_fileSystemLocations :: Lens' Project (Maybe [ProjectFileSystemLocation])

-- | A ProjectBuildBatchConfig object that defines the batch build options
--   for the project.
project_buildBatchConfig :: Lens' Project (Maybe ProjectBuildBatchConfig)

-- | The Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
project_encryptionKey :: Lens' Project (Maybe Text)

-- | When the build project's settings were last modified, expressed in
--   Unix time format.
project_lastModified :: Lens' Project (Maybe UTCTime)

-- | Undocumented member.
project_projectVisibility :: Lens' Project (Maybe ProjectVisibilityType)

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
project_webhook :: Lens' Project (Maybe Webhook)

-- | A description that makes the build project easy to identify.
project_description :: Lens' Project (Maybe Text)

-- | The ARN of the IAM role that enables CodeBuild to interact with
--   dependent Amazon Web Services services on behalf of the Amazon Web
--   Services account.
project_serviceRole :: Lens' Project (Maybe Text)

-- | A list of tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
project_tags :: Lens' Project (Maybe [Tag])

-- | How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
project_timeoutInMinutes :: Lens' Project (Maybe Natural)

-- | The type of build output artifact to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
projectArtifacts_packaging :: Lens' ProjectArtifacts (Maybe ArtifactPackaging)

-- | Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
projectArtifacts_path :: Lens' ProjectArtifacts (Maybe Text)

-- | Information about the build output artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
projectArtifacts_location :: Lens' ProjectArtifacts (Maybe Text)

-- | Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
projectArtifacts_name :: Lens' ProjectArtifacts (Maybe Text)

-- | Set to true if you do not want your output artifacts encrypted. This
--   option is valid only if your artifacts type is Amazon S3. If this is
--   set with another artifacts type, an invalidInputException is thrown.
projectArtifacts_encryptionDisabled :: Lens' ProjectArtifacts (Maybe Bool)

-- | If this flag is set, a name specified in the buildspec file overrides
--   the artifact name. The name specified in a buildspec file is
--   calculated at build time and uses the Shell Command Language. For
--   example, you can append a date and time to your artifact name so that
--   it is always unique.
projectArtifacts_overrideArtifactName :: Lens' ProjectArtifacts (Maybe Bool)

-- | An identifier for this artifact definition.
projectArtifacts_artifactIdentifier :: Lens' ProjectArtifacts (Maybe Text)

-- | Undocumented member.
projectArtifacts_bucketOwnerAccess :: Lens' ProjectArtifacts (Maybe BucketOwnerAccess)

-- | Along with <tt>path</tt> and <tt>name</tt>, the pattern that CodeBuild
--   uses to determine the name and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
projectArtifacts_namespaceType :: Lens' ProjectArtifacts (Maybe ArtifactNamespace)

-- | The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
projectArtifacts_type :: Lens' ProjectArtifacts ArtifactsType

-- | Set this to true to generate a publicly accessible URL for your
--   project's build badge.
projectBadge_badgeEnabled :: Lens' ProjectBadge (Maybe Bool)

-- | The publicly-accessible URL through which you can access the build
--   badge for your project.
projectBadge_badgeRequestUrl :: Lens' ProjectBadge (Maybe Text)

-- | Specifies if the build artifacts for the batch build should be
--   combined into a single artifact location.
projectBuildBatchConfig_combineArtifacts :: Lens' ProjectBuildBatchConfig (Maybe Bool)

-- | Specifies the maximum amount of time, in minutes, that the batch build
--   must be completed in.
projectBuildBatchConfig_timeoutInMins :: Lens' ProjectBuildBatchConfig (Maybe Int)

-- | A <tt>BatchRestrictions</tt> object that specifies the restrictions
--   for the batch build.
projectBuildBatchConfig_restrictions :: Lens' ProjectBuildBatchConfig (Maybe BatchRestrictions)

-- | Specifies how build status reports are sent to the source provider for
--   the batch build. This property is only used when the source provider
--   for your project is Bitbucket, GitHub, or GitHub Enterprise, and your
--   project is configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
projectBuildBatchConfig_batchReportMode :: Lens' ProjectBuildBatchConfig (Maybe BatchReportModeType)

-- | Specifies the service role ARN for the batch build project.
projectBuildBatchConfig_serviceRole :: Lens' ProjectBuildBatchConfig (Maybe Text)

-- | Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
projectCache_location :: Lens' ProjectCache (Maybe Text)

-- | An array of strings that specify the local cache modes. You can use
--   one or more local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
projectCache_modes :: Lens' ProjectCache (Maybe [CacheMode])

-- | The type of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
projectCache_type :: Lens' ProjectCache CacheType

-- | The type of credentials CodeBuild uses to pull images in your build.
--   There are two valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
projectEnvironment_imagePullCredentialsType :: Lens' ProjectEnvironment (Maybe ImagePullCredentialsType)

-- | Enables running the Docker daemon inside a Docker container. Set to
--   true only if the build project is used to build Docker images.
--   Otherwise, a build that attempts to interact with the Docker daemon
--   fails. The default setting is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
projectEnvironment_privilegedMode :: Lens' ProjectEnvironment (Maybe Bool)

-- | The credentials for access to a private registry.
projectEnvironment_registryCredential :: Lens' ProjectEnvironment (Maybe RegistryCredential)

-- | The ARN of the Amazon S3 bucket, path prefix, and object key that
--   contains the PEM-encoded certificate for the build project. For more
--   information, see <a>certificate</a> in the <i>CodeBuild User
--   Guide</i>.
projectEnvironment_certificate :: Lens' ProjectEnvironment (Maybe Text)

-- | A set of environment variables to make available to builds for this
--   build project.
projectEnvironment_environmentVariables :: Lens' ProjectEnvironment (Maybe [EnvironmentVariable])

-- | The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
projectEnvironment_type :: Lens' ProjectEnvironment EnvironmentType

-- | The image tag or image digest that identifies the Docker image to use
--   for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
projectEnvironment_image :: Lens' ProjectEnvironment Text

-- | Information about the compute resources the build project uses.
--   Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
projectEnvironment_computeType :: Lens' ProjectEnvironment ComputeType

-- | A string that specifies the location of the file system created by
--   Amazon EFS. Its format is <tt>efs-dns-name:/directory-path</tt>. You
--   can find the DNS name of file system when you view it in the Amazon
--   EFS console. The directory path is a path to a directory in the file
--   system that CodeBuild mounts. For example, if the DNS name of a file
--   system is <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its
--   mount directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
projectFileSystemLocation_location :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The name used to access a file system created by Amazon EFS. CodeBuild
--   creates an environment variable by appending the <tt>identifier</tt>
--   in all capital letters to <tt>CODEBUILD_</tt>. For example, if you
--   specify <tt>my_efs</tt> for <tt>identifier</tt>, a new environment
--   variable is create named <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
projectFileSystemLocation_identifier :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The mount options for a file system created by Amazon EFS. The default
--   mount options used by CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
projectFileSystemLocation_mountOptions :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | The type of the file system. The one supported type is <tt>EFS</tt>.
projectFileSystemLocation_type :: Lens' ProjectFileSystemLocation (Maybe FileSystemType)

-- | The location in the container where you mount the file system.
projectFileSystemLocation_mountPoint :: Lens' ProjectFileSystemLocation (Maybe Text)

-- | Set to true to report the status of a build's start and finish to your
--   source provider. This option is valid only when your source provider
--   is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use
--   a different source provider, an <tt>invalidInputException</tt> is
--   thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
projectSource_reportBuildStatus :: Lens' ProjectSource (Maybe Bool)

-- | Enable this flag to ignore SSL warnings while connecting to the
--   project source code.
projectSource_insecureSsl :: Lens' ProjectSource (Maybe Bool)

-- | Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
projectSource_location :: Lens' ProjectSource (Maybe Text)

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
projectSource_auth :: Lens' ProjectSource (Maybe SourceAuth)

-- | The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
projectSource_buildspec :: Lens' ProjectSource (Maybe Text)

-- | An identifier for this project source. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
projectSource_sourceIdentifier :: Lens' ProjectSource (Maybe Text)

-- | Information about the Git clone depth for the build project.
projectSource_gitCloneDepth :: Lens' ProjectSource (Maybe Natural)

-- | Information about the Git submodules configuration for the build
--   project.
projectSource_gitSubmodulesConfig :: Lens' ProjectSource (Maybe GitSubmodulesConfig)

-- | Contains information that defines how the build project reports the
--   build status to the source provider. This option is only used when the
--   source provider is <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or
--   <tt>BITBUCKET</tt>.
projectSource_buildStatusConfig :: Lens' ProjectSource (Maybe BuildStatusConfig)

-- | The type of repository that contains the source code to be built.
--   Valid values include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
projectSource_type :: Lens' ProjectSource SourceType

-- | An identifier for a source in the build project. The identifier can
--   only contain alphanumeric characters and underscores, and must be less
--   than 128 characters in length.
projectSourceVersion_sourceIdentifier :: Lens' ProjectSourceVersion Text

-- | The source version for the corresponding source identifier. If
--   specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
projectSourceVersion_sourceVersion :: Lens' ProjectSourceVersion Text

-- | The Amazon Resource Name (ARN) or name of credentials created using
--   Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
registryCredential_credential :: Lens' RegistryCredential Text

-- | The service that created the credentials to access a private Docker
--   registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.
registryCredential_credentialProvider :: Lens' RegistryCredential CredentialProviderType

-- | The ARN of the report group associated with this report.
report_reportGroupArn :: Lens' Report (Maybe Text)

-- | The status of this report.
report_status :: Lens' Report (Maybe ReportStatusType)

-- | The date and time a report expires. A report expires 30 days after it
--   is created. An expired report is not available to view in CodeBuild.
report_expired :: Lens' Report (Maybe UTCTime)

-- | The ARN of the build run that generated this report.
report_executionId :: Lens' Report (Maybe Text)

-- | A boolean that specifies if this report run is truncated. The list of
--   test cases is truncated after the maximum number of test cases is
--   reached.
report_truncated :: Lens' Report (Maybe Bool)

-- | The ARN of the report run.
report_arn :: Lens' Report (Maybe Text)

-- | The date and time this report run occurred.
report_created :: Lens' Report (Maybe UTCTime)

-- | The name of the report that was run.
report_name :: Lens' Report (Maybe Text)

-- | A <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
report_codeCoverageSummary :: Lens' Report (Maybe CodeCoverageReportSummary)

-- | A <tt>TestReportSummary</tt> object that contains information about
--   this test report.
report_testSummary :: Lens' Report (Maybe TestReportSummary)

-- | The type of the report that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
report_type :: Lens' Report (Maybe ReportType)

-- | Information about where the raw data used to generate this report was
--   exported.
report_exportConfig :: Lens' Report (Maybe ReportExportConfig)

-- | The export configuration type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
reportExportConfig_exportConfigType :: Lens' ReportExportConfig (Maybe ReportExportConfigType)

-- | A <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
reportExportConfig_s3Destination :: Lens' ReportExportConfig (Maybe S3ReportExportConfig)

-- | The status used to filter reports. You can filter using one status
--   only.
reportFilter_status :: Lens' ReportFilter (Maybe ReportStatusType)

-- | The status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
reportGroup_status :: Lens' ReportGroup (Maybe ReportGroupStatusType)

-- | The ARN of the <tt>ReportGroup</tt>.
reportGroup_arn :: Lens' ReportGroup (Maybe Text)

-- | The date and time this <tt>ReportGroup</tt> was created.
reportGroup_created :: Lens' ReportGroup (Maybe UTCTime)

-- | The name of the <tt>ReportGroup</tt>.
reportGroup_name :: Lens' ReportGroup (Maybe Text)

-- | The type of the <tt>ReportGroup</tt>. This can be one of the following
--   values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
reportGroup_type :: Lens' ReportGroup (Maybe ReportType)

-- | The date and time this <tt>ReportGroup</tt> was last modified.
reportGroup_lastModified :: Lens' ReportGroup (Maybe UTCTime)

-- | Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
reportGroup_exportConfig :: Lens' ReportGroup (Maybe ReportExportConfig)

-- | A list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
reportGroup_tags :: Lens' ReportGroup (Maybe [Tag])

-- | Contains the maximum value analyzed.
reportGroupTrendStats_max :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the average of all values analyzed.
reportGroupTrendStats_average :: Lens' ReportGroupTrendStats (Maybe Text)

-- | Contains the minimum value analyzed.
reportGroupTrendStats_min :: Lens' ReportGroupTrendStats (Maybe Text)

-- | The value of the requested data field from the report.
reportWithRawData_data :: Lens' ReportWithRawData (Maybe Text)

-- | The ARN of the report.
reportWithRawData_reportArn :: Lens' ReportWithRawData (Maybe Text)

-- | The location of the artifact.
resolvedArtifact_location :: Lens' ResolvedArtifact (Maybe Text)

-- | The identifier of the artifact.
resolvedArtifact_identifier :: Lens' ResolvedArtifact (Maybe Text)

-- | Specifies the type of artifact.
resolvedArtifact_type :: Lens' ResolvedArtifact (Maybe ArtifactsType)

-- | The ARN of an S3 bucket and the path prefix for S3 logs. If your
--   Amazon S3 bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
s3LogsConfig_location :: Lens' S3LogsConfig (Maybe Text)

-- | Set to true if you do not want your S3 build log output encrypted. By
--   default S3 build logs are encrypted.
s3LogsConfig_encryptionDisabled :: Lens' S3LogsConfig (Maybe Bool)

-- | Undocumented member.
s3LogsConfig_bucketOwnerAccess :: Lens' S3LogsConfig (Maybe BucketOwnerAccess)

-- | The current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
s3LogsConfig_status :: Lens' S3LogsConfig LogsConfigStatusType

-- | The type of build output artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
s3ReportExportConfig_packaging :: Lens' S3ReportExportConfig (Maybe ReportPackagingType)

-- | The path to the exported report's raw data results.
s3ReportExportConfig_path :: Lens' S3ReportExportConfig (Maybe Text)

-- | The name of the S3 bucket where the raw data of a report are exported.
s3ReportExportConfig_bucket :: Lens' S3ReportExportConfig (Maybe Text)

-- | The Amazon Web Services account identifier of the owner of the Amazon
--   S3 bucket. This allows report data to be exported to an Amazon S3
--   bucket that is owned by an account other than the account running the
--   build.
s3ReportExportConfig_bucketOwner :: Lens' S3ReportExportConfig (Maybe Text)

-- | A boolean value that specifies if the results of a report are
--   encrypted.
s3ReportExportConfig_encryptionDisabled :: Lens' S3ReportExportConfig (Maybe Bool)

-- | The encryption key for the report's encrypted raw data.
s3ReportExportConfig_encryptionKey :: Lens' S3ReportExportConfig (Maybe Text)

-- | The resource value that applies to the specified authorization type.
sourceAuth_resource :: Lens' SourceAuth (Maybe Text)

-- | This data type is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
sourceAuth_type :: Lens' SourceAuth SourceAuthType

-- | The Amazon Resource Name (ARN) of the token.
sourceCredentialsInfo_arn :: Lens' SourceCredentialsInfo (Maybe Text)

-- | The type of source provider. The valid options are GITHUB,
--   GITHUB_ENTERPRISE, or BITBUCKET.
sourceCredentialsInfo_serverType :: Lens' SourceCredentialsInfo (Maybe ServerType)

-- | The type of authentication used by the credentials. Valid options are
--   OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.
sourceCredentialsInfo_authType :: Lens' SourceCredentialsInfo (Maybe AuthType)

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)

-- | The number of nanoseconds it took to run this test case.
testCase_durationInNanoSeconds :: Lens' TestCase (Maybe Integer)

-- | The status returned by the test case after it was run. Valid statuses
--   are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>,
--   <tt>SKIPPED</tt>, and <tt>UNKNOWN</tt>.
testCase_status :: Lens' TestCase (Maybe Text)

-- | The date and time a test case expires. A test case expires 30 days
--   after it is created. An expired test case is not available to view in
--   CodeBuild.
testCase_expired :: Lens' TestCase (Maybe UTCTime)

-- | A string that is applied to a series of related test cases. CodeBuild
--   generates the prefix. The prefix depends on the framework used to
--   generate the tests.
testCase_prefix :: Lens' TestCase (Maybe Text)

-- | The name of the test case.
testCase_name :: Lens' TestCase (Maybe Text)

-- | The path to the raw data file that contains the test result.
testCase_testRawDataPath :: Lens' TestCase (Maybe Text)

-- | A message associated with a test case. For example, an error message
--   or stack trace.
testCase_message :: Lens' TestCase (Maybe Text)

-- | The ARN of the report to which the test case belongs.
testCase_reportArn :: Lens' TestCase (Maybe Text)

-- | The status used to filter test cases. A <tt>TestCaseFilter</tt> can
--   have one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
testCaseFilter_status :: Lens' TestCaseFilter (Maybe Text)

-- | A keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
testCaseFilter_keyword :: Lens' TestCaseFilter (Maybe Text)

-- | The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
testReportSummary_total :: Lens' TestReportSummary Int

-- | A map that contains the number of each type of status returned by the
--   test results in this <tt>TestReportSummary</tt>.
testReportSummary_statusCounts :: Lens' TestReportSummary (HashMap Text Int)

-- | The number of nanoseconds it took to run all of the test cases in this
--   report.
testReportSummary_durationInNanoSeconds :: Lens' TestReportSummary Integer

-- | A list of one or more security groups IDs in your Amazon VPC.
vpcConfig_securityGroupIds :: Lens' VpcConfig (Maybe [Text])

-- | The ID of the Amazon VPC.
vpcConfig_vpcId :: Lens' VpcConfig (Maybe Text)

-- | A list of one or more subnet IDs in your Amazon VPC.
vpcConfig_subnets :: Lens' VpcConfig (Maybe [Text])

-- | A regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
webhook_branchFilter :: Lens' Webhook (Maybe Text)

-- | A timestamp that indicates the last time a repository's secret token
--   was modified.
webhook_lastModifiedSecret :: Lens' Webhook (Maybe UTCTime)

-- | The URL to the webhook.
webhook_url :: Lens' Webhook (Maybe Text)

-- | The secret token of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
webhook_secret :: Lens' Webhook (Maybe Text)

-- | An array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
webhook_filterGroups :: Lens' Webhook (Maybe [[WebhookFilter]])

-- | The CodeBuild endpoint where webhook events are sent.
webhook_payloadUrl :: Lens' Webhook (Maybe Text)

-- | Specifies the type of build this webhook will trigger.
webhook_buildType :: Lens' Webhook (Maybe WebhookBuildType)

-- | Used to indicate that the <tt>pattern</tt> determines which webhook
--   events do not trigger a build. If true, then a webhook event that does
--   not match the <tt>pattern</tt> triggers a build. If false, then a
--   webhook event that matches the <tt>pattern</tt> triggers a build.
webhookFilter_excludeMatchedPattern :: Lens' WebhookFilter (Maybe Bool)

-- | The type of webhook filter. There are six webhook filter types:
--   <tt>EVENT</tt>, <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>,
--   <tt>BASE_REF</tt>, <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
webhookFilter_type :: Lens' WebhookFilter WebhookFilterType

-- | For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
webhookFilter_pattern :: Lens' WebhookFilter Text


module Amazonka.CodeBuild.Waiters


-- | Derived from API version <tt>2016-10-06</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   CodeBuild
--   
--   CodeBuild is a fully managed build service in the cloud. CodeBuild
--   compiles your source code, runs unit tests, and produces artifacts
--   that are ready to deploy. CodeBuild eliminates the need to provision,
--   manage, and scale your own build servers. It provides prepackaged
--   build environments for the most popular programming languages and
--   build tools, such as Apache Maven, Gradle, and more. You can also
--   fully customize build environments in CodeBuild to use your own build
--   tools. CodeBuild scales automatically to meet peak build requests. You
--   pay only for the build time you consume. For more information about
--   CodeBuild, see the
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>codebuild<i>latest</i>userguide<i>welcome.html
--   CodeBuild User Guide&gt;.</i>
module Amazonka.CodeBuild

-- | API version <tt>2016-10-06</tt> of the Amazon CodeBuild SDK
--   configuration.
defaultService :: Service

-- | The specified Amazon Web Services resource cannot be created, because
--   an Amazon Web Services resource with the same settings already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a problem with the underlying OAuth provider.
_OAuthProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An Amazon Web Services service limit was exceeded for the calling
--   Amazon Web Services account.
_AccountLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input value that was provided is not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Web Services resource cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe SortOrderType -> Maybe Text -> Maybe ProjectSortByType -> ListProjects

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListProjects'</a>, <a>listProjects_sortOrder</a> -
--   The order in which to list build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   Use <tt>sortBy</tt> to specify the criterion to be used to list build
--   project names.
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
--   
--   <a>$sel:sortBy:ListProjects'</a>, <a>listProjects_sortBy</a> - The
--   criterion to be used to list build project names. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each build project was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when information about
--   each build project was last changed.</li>
--   <li><tt>NAME</tt>: List based on each build project's name.</li>
--   </ul>
--   
--   Use <tt>sortOrder</tt> to specify in what order to list the build
--   project names based on the preceding criteria.
newListProjects :: ListProjects

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListProjectsResponse

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - If there are more than 100
--   items in the list, only the first 100 items are returned, along with a
--   unique string called a <i>nextToken</i>. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - The list of build project
--   names, with each build project name representing a single build
--   project.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteProject'</a>, <a>deleteProject_name</a> - The name
--   of the build project.
newDeleteProject :: Text -> DeleteProject

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe [ProjectArtifacts] -> Maybe ProjectArtifacts -> Maybe ProjectEnvironment -> Maybe Int -> Maybe Bool -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe VpcConfig -> Maybe ProjectSource -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> UpdateProject

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:UpdateProject'</a>,
--   <a>updateProject_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifact</tt> objects.
--   
--   <a>$sel:artifacts:UpdateProject'</a>, <a>updateProject_artifacts</a> -
--   Information to be changed about the build output artifacts for the
--   build project.
--   
--   <a>$sel:environment:UpdateProject'</a>,
--   <a>updateProject_environment</a> - Information to be changed about the
--   build environment for the build project.
--   
--   <a>$sel:concurrentBuildLimit:UpdateProject'</a>,
--   <a>updateProject_concurrentBuildLimit</a> - The maximum number of
--   concurrent builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   To remove this limit, set this value to -1.
--   
--   <a>$sel:badgeEnabled:UpdateProject'</a>,
--   <a>updateProject_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:secondarySourceVersions:UpdateProject'</a>,
--   <a>updateProject_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
--   
--   <a>$sel:queuedTimeoutInMinutes:UpdateProject'</a>,
--   <a>updateProject_queuedTimeoutInMinutes</a> - The number of minutes a
--   build is allowed to be queued before it times out.
--   
--   <a>$sel:cache:UpdateProject'</a>, <a>updateProject_cache</a> - Stores
--   recently used information so that it can be quickly accessed at a
--   later time.
--   
--   <a>$sel:secondarySources:UpdateProject'</a>,
--   <a>updateProject_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:UpdateProject'</a>,
--   <a>updateProject_sourceVersion</a> - A version of the build input to
--   be built for this project. If not specified, the latest version is
--   used. If specified, it must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:vpcConfig:UpdateProject'</a>, <a>updateProject_vpcConfig</a> -
--   VpcConfig enables CodeBuild to access resources in an Amazon VPC.
--   
--   <a>$sel:source:UpdateProject'</a>, <a>updateProject_source</a> -
--   Information to be changed about the build input source code for the
--   build project.
--   
--   <a>$sel:logsConfig:UpdateProject'</a>, <a>updateProject_logsConfig</a>
--   - Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, logs in an S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:UpdateProject'</a>,
--   <a>updateProject_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:UpdateProject'</a>,
--   <a>updateProject_buildBatchConfig</a> - Undocumented member.
--   
--   <a>$sel:encryptionKey:UpdateProject'</a>,
--   <a>updateProject_encryptionKey</a> - The Key Management Service
--   customer master key (CMK) to be used for encrypting the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:description:UpdateProject'</a>,
--   <a>updateProject_description</a> - A new or replacement description of
--   the build project.
--   
--   <a>$sel:serviceRole:UpdateProject'</a>,
--   <a>updateProject_serviceRole</a> - The replacement ARN of the IAM role
--   that enables CodeBuild to interact with dependent Amazon Web Services
--   services on behalf of the Amazon Web Services account.
--   
--   <a>$sel:tags:UpdateProject'</a>, <a>updateProject_tags</a> - An
--   updated list of tag key and value pairs associated with this build
--   project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:UpdateProject'</a>,
--   <a>updateProject_timeoutInMinutes</a> - The replacement value in
--   minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing
--   out any related build that did not get marked as completed.
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - The name
--   of the build project.
--   
--   You cannot change a build project's name.
newUpdateProject :: Text -> UpdateProject

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe Project -> Int -> UpdateProjectResponse

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_project</a> - Information about the build
--   project that was changed.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | <i>See:</i> <a>newDeleteSourceCredentials</a> smart constructor.
data DeleteSourceCredentials
DeleteSourceCredentials' :: Text -> DeleteSourceCredentials

-- | Create a value of <a>DeleteSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSourceCredentials'</a>,
--   <a>deleteSourceCredentials_arn</a> - The Amazon Resource Name (ARN) of
--   the token.
newDeleteSourceCredentials :: Text -> DeleteSourceCredentials

-- | <i>See:</i> <a>newDeleteSourceCredentialsResponse</a> smart
--   constructor.
data DeleteSourceCredentialsResponse
DeleteSourceCredentialsResponse' :: Maybe Text -> Int -> DeleteSourceCredentialsResponse

-- | Create a value of <a>DeleteSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSourceCredentials'</a>,
--   <a>deleteSourceCredentialsResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the token.
--   
--   <a>$sel:httpStatus:DeleteSourceCredentialsResponse'</a>,
--   <a>deleteSourceCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSourceCredentialsResponse :: Int -> DeleteSourceCredentialsResponse

-- | <i>See:</i> <a>newListBuilds</a> smart constructor.
data ListBuilds
ListBuilds' :: Maybe SortOrderType -> Maybe Text -> ListBuilds

-- | Create a value of <a>ListBuilds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuilds'</a>, <a>listBuilds_sortOrder</a> - The
--   order to list build IDs. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build IDs in ascending order by build
--   ID.</li>
--   <li><tt>DESCENDING</tt>: List the build IDs in descending order by
--   build ID.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuilds_nextToken</a> -
--   During a previous call, if there are more than 100 items in the list,
--   only the first 100 items are returned, along with a unique string
--   called a <i>nextToken</i>. To get the next batch of items in the list,
--   call this operation again, adding the next token to the call. To get
--   all of the items in the list, keep calling this operation with each
--   subsequent next token that is returned, until no more next tokens are
--   returned.
newListBuilds :: ListBuilds

-- | <i>See:</i> <a>newListBuildsResponse</a> smart constructor.
data ListBuildsResponse
ListBuildsResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListBuildsResponse

-- | Create a value of <a>ListBuildsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildsResponse'</a>, <a>listBuildsResponse_ids</a> - A
--   list of build IDs, with each build ID representing a single build.
--   
--   <a>$sel:nextToken:ListBuilds'</a>, <a>listBuildsResponse_nextToken</a>
--   - If there are more than 100 items in the list, only the first 100
--   items are returned, along with a unique string called a
--   <i>nextToken</i>. To get the next batch of items in the list, call
--   this operation again, adding the next token to the call.
--   
--   <a>$sel:httpStatus:ListBuildsResponse'</a>,
--   <a>listBuildsResponse_httpStatus</a> - The response's http status
--   code.
newListBuildsResponse :: Int -> ListBuildsResponse

-- | <i>See:</i> <a>newListSourceCredentials</a> smart constructor.
data ListSourceCredentials
ListSourceCredentials' :: ListSourceCredentials

-- | Create a value of <a>ListSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newListSourceCredentials :: ListSourceCredentials

-- | <i>See:</i> <a>newListSourceCredentialsResponse</a> smart constructor.
data ListSourceCredentialsResponse
ListSourceCredentialsResponse' :: Maybe [SourceCredentialsInfo] -> Int -> ListSourceCredentialsResponse

-- | Create a value of <a>ListSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCredentialsInfos:ListSourceCredentialsResponse'</a>,
--   <a>listSourceCredentialsResponse_sourceCredentialsInfos</a> - A list
--   of <tt>SourceCredentialsInfo</tt> objects. Each
--   <tt>SourceCredentialsInfo</tt> object includes the authentication
--   type, token ARN, and type of source provider for one set of
--   credentials.
--   
--   <a>$sel:httpStatus:ListSourceCredentialsResponse'</a>,
--   <a>listSourceCredentialsResponse_httpStatus</a> - The response's http
--   status code.
newListSourceCredentialsResponse :: Int -> ListSourceCredentialsResponse

-- | <i>See:</i> <a>newListReports</a> smart constructor.
data ListReports
ListReports' :: Maybe SortOrderType -> Maybe Text -> Maybe ReportFilter -> Maybe Natural -> ListReports

-- | Create a value of <a>ListReports</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReports'</a>, <a>listReports_sortOrder</a> -
--   Specifies the sort order for the list of returned reports. Valid
--   values are:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: return reports in chronological order based on
--   their creation date.</li>
--   <li><tt>DESCENDING</tt>: return reports in the reverse chronological
--   order based on their creation date.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListReports'</a>, <a>listReports_nextToken</a> -
--   During a previous call, the maximum number of items that can be
--   returned is the value specified in <tt>maxResults</tt>. If there more
--   items in the list, then a unique string called a <i>nextToken</i> is
--   returned. To get the next batch of items in the list, call this
--   operation again, adding the next token to the call. To get all of the
--   items in the list, keep calling this operation with each subsequent
--   next token that is returned, until no more next tokens are returned.
--   
--   <a>$sel:filter':ListReports'</a>, <a>listReports_filter</a> - A
--   <tt>ReportFilter</tt> object used to filter the returned reports.
--   
--   <a>$sel:maxResults:ListReports'</a>, <a>listReports_maxResults</a> -
--   The maximum number of paginated reports returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
newListReports :: ListReports

-- | <i>See:</i> <a>newListReportsResponse</a> smart constructor.
data ListReportsResponse
ListReportsResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListReportsResponse

-- | Create a value of <a>ListReportsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:ListReportsResponse'</a>,
--   <a>listReportsResponse_reports</a> - The list of returned ARNs for the
--   reports in the current Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListReports'</a>,
--   <a>listReportsResponse_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:httpStatus:ListReportsResponse'</a>,
--   <a>listReportsResponse_httpStatus</a> - The response's http status
--   code.
newListReportsResponse :: Int -> ListReportsResponse

-- | <i>See:</i> <a>newDeleteReport</a> smart constructor.
data DeleteReport
DeleteReport' :: Text -> DeleteReport

-- | Create a value of <a>DeleteReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteReport'</a>, <a>deleteReport_arn</a> - The ARN of
--   the report to delete.
newDeleteReport :: Text -> DeleteReport

-- | <i>See:</i> <a>newDeleteReportResponse</a> smart constructor.
data DeleteReportResponse
DeleteReportResponse' :: Int -> DeleteReportResponse

-- | Create a value of <a>DeleteReportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReportResponse'</a>,
--   <a>deleteReportResponse_httpStatus</a> - The response's http status
--   code.
newDeleteReportResponse :: Int -> DeleteReportResponse

-- | <i>See:</i> <a>newCreateWebhook</a> smart constructor.
data CreateWebhook
CreateWebhook' :: Maybe Text -> Maybe [[WebhookFilter]] -> Maybe WebhookBuildType -> Text -> CreateWebhook

-- | Create a value of <a>CreateWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:CreateWebhook'</a>,
--   <a>createWebhook_branchFilter</a> - A regular expression used to
--   determine which repository branches are built when a webhook is
--   triggered. If the name of a branch matches the regular expression,
--   then it is built. If <tt>branchFilter</tt> is empty, then all branches
--   are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:filterGroups:CreateWebhook'</a>,
--   <a>createWebhook_filterGroups</a> - An array of arrays of
--   <tt>WebhookFilter</tt> objects used to determine which webhooks are
--   triggered. At least one <tt>WebhookFilter</tt> in the array must
--   specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
--   
--   <a>$sel:buildType:CreateWebhook'</a>, <a>createWebhook_buildType</a> -
--   Specifies the type of build this webhook will trigger.
--   
--   <a>$sel:projectName:CreateWebhook'</a>,
--   <a>createWebhook_projectName</a> - The name of the CodeBuild project.
newCreateWebhook :: Text -> CreateWebhook

-- | <i>See:</i> <a>newCreateWebhookResponse</a> smart constructor.
data CreateWebhookResponse
CreateWebhookResponse' :: Maybe Webhook -> Int -> CreateWebhookResponse

-- | Create a value of <a>CreateWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:CreateWebhookResponse'</a>,
--   <a>createWebhookResponse_webhook</a> - Information about a webhook
--   that connects repository events to a build project in CodeBuild.
--   
--   <a>$sel:httpStatus:CreateWebhookResponse'</a>,
--   <a>createWebhookResponse_httpStatus</a> - The response's http status
--   code.
newCreateWebhookResponse :: Int -> CreateWebhookResponse

-- | <i>See:</i> <a>newStopBuildBatch</a> smart constructor.
data StopBuildBatch
StopBuildBatch' :: Text -> StopBuildBatch

-- | Create a value of <a>StopBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:StopBuildBatch'</a>, <a>stopBuildBatch_id</a> - The
--   identifier of the batch build to stop.
newStopBuildBatch :: Text -> StopBuildBatch

-- | <i>See:</i> <a>newStopBuildBatchResponse</a> smart constructor.
data StopBuildBatchResponse
StopBuildBatchResponse' :: Maybe BuildBatch -> Int -> StopBuildBatchResponse

-- | Create a value of <a>StopBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:StopBuildBatchResponse'</a>,
--   <a>stopBuildBatchResponse_buildBatch</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:StopBuildBatchResponse'</a>,
--   <a>stopBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newStopBuildBatchResponse :: Int -> StopBuildBatchResponse

-- | <i>See:</i> <a>newListSharedProjects</a> smart constructor.
data ListSharedProjects
ListSharedProjects' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe SharedResourceSortByType -> ListSharedProjects

-- | Create a value of <a>ListSharedProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListSharedProjects'</a>,
--   <a>listSharedProjects_sortOrder</a> - The order in which to list
--   shared build projects. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListSharedProjects'</a>,
--   <a>listSharedProjects_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListSharedProjects'</a>,
--   <a>listSharedProjects_maxResults</a> - The maximum number of paginated
--   shared build projects returned per response. Use <tt>nextToken</tt> to
--   iterate pages in the list of returned <tt>Project</tt> objects. The
--   default value is 100.
--   
--   <a>$sel:sortBy:ListSharedProjects'</a>,
--   <a>listSharedProjects_sortBy</a> - The criterion to be used to list
--   build projects shared with the current Amazon Web Services account or
--   user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared project was last changed.</li>
--   </ul>
newListSharedProjects :: ListSharedProjects

-- | <i>See:</i> <a>newListSharedProjectsResponse</a> smart constructor.
data ListSharedProjectsResponse
ListSharedProjectsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListSharedProjectsResponse

-- | Create a value of <a>ListSharedProjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSharedProjects'</a>,
--   <a>listSharedProjectsResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:projects:ListSharedProjectsResponse'</a>,
--   <a>listSharedProjectsResponse_projects</a> - The list of ARNs for the
--   build projects shared with the current Amazon Web Services account or
--   user.
--   
--   <a>$sel:httpStatus:ListSharedProjectsResponse'</a>,
--   <a>listSharedProjectsResponse_httpStatus</a> - The response's http
--   status code.
newListSharedProjectsResponse :: Int -> ListSharedProjectsResponse

-- | <i>See:</i> <a>newCreateReportGroup</a> smart constructor.
data CreateReportGroup
CreateReportGroup' :: Maybe [Tag] -> Text -> ReportType -> ReportExportConfig -> CreateReportGroup

-- | Create a value of <a>CreateReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateReportGroup'</a>, <a>createReportGroup_tags</a> - A
--   list of tag key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
--   
--   <a>$sel:name:CreateReportGroup'</a>, <a>createReportGroup_name</a> -
--   The name of the report group.
--   
--   <a>$sel:type':CreateReportGroup'</a>, <a>createReportGroup_type</a> -
--   The type of report group.
--   
--   <a>$sel:exportConfig:CreateReportGroup'</a>,
--   <a>createReportGroup_exportConfig</a> - A <tt>ReportExportConfig</tt>
--   object that contains information about where the report group test
--   results are exported.
newCreateReportGroup :: Text -> ReportType -> ReportExportConfig -> CreateReportGroup

-- | <i>See:</i> <a>newCreateReportGroupResponse</a> smart constructor.
data CreateReportGroupResponse
CreateReportGroupResponse' :: Maybe ReportGroup -> Int -> CreateReportGroupResponse

-- | Create a value of <a>CreateReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroup:CreateReportGroupResponse'</a>,
--   <a>createReportGroupResponse_reportGroup</a> - Information about the
--   report group that was created.
--   
--   <a>$sel:httpStatus:CreateReportGroupResponse'</a>,
--   <a>createReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateReportGroupResponse :: Int -> CreateReportGroupResponse

-- | <i>See:</i> <a>newDescribeCodeCoverages</a> smart constructor.
data DescribeCodeCoverages
DescribeCodeCoverages' :: Maybe Double -> Maybe SortOrderType -> Maybe Double -> Maybe Text -> Maybe Natural -> Maybe ReportCodeCoverageSortByType -> Text -> DescribeCodeCoverages

-- | Create a value of <a>DescribeCodeCoverages</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minLineCoveragePercentage:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_minLineCoveragePercentage</a> - The minimum
--   line coverage percentage to report.
--   
--   <a>$sel:sortOrder:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_sortOrder</a> - Specifies if the results are
--   sorted in ascending or descending order.
--   
--   <a>$sel:maxLineCoveragePercentage:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_maxLineCoveragePercentage</a> - The maximum
--   line coverage percentage to report.
--   
--   <a>$sel:nextToken:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous call to <tt>DescribeCodeCoverages</tt>. This
--   specifies the next item to return. To return the beginning of the
--   list, exclude this parameter.
--   
--   <a>$sel:maxResults:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_maxResults</a> - The maximum number of
--   results to return.
--   
--   <a>$sel:sortBy:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_sortBy</a> - Specifies how the results are
--   sorted. Possible values are:
--   
--   <ul>
--   <li><i>FILE_PATH</i> The results are sorted by file path.</li>
--   <li><i>LINE_COVERAGE_PERCENTAGE</i> The results are sorted by the
--   percentage of lines that are covered.</li>
--   </ul>
--   
--   <a>$sel:reportArn:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoverages_reportArn</a> - The ARN of the report for
--   which test cases are returned.
newDescribeCodeCoverages :: Text -> DescribeCodeCoverages

-- | <i>See:</i> <a>newDescribeCodeCoveragesResponse</a> smart constructor.
data DescribeCodeCoveragesResponse
DescribeCodeCoveragesResponse' :: Maybe [CodeCoverage] -> Maybe Text -> Int -> DescribeCodeCoveragesResponse

-- | Create a value of <a>DescribeCodeCoveragesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeCoverages:DescribeCodeCoveragesResponse'</a>,
--   <a>describeCodeCoveragesResponse_codeCoverages</a> - An array of
--   <tt>CodeCoverage</tt> objects that contain the results.
--   
--   <a>$sel:nextToken:DescribeCodeCoverages'</a>,
--   <a>describeCodeCoveragesResponse_nextToken</a> - If there are more
--   items to return, this contains a token that is passed to a subsequent
--   call to <tt>DescribeCodeCoverages</tt> to retrieve the next set of
--   items.
--   
--   <a>$sel:httpStatus:DescribeCodeCoveragesResponse'</a>,
--   <a>describeCodeCoveragesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCodeCoveragesResponse :: Int -> DescribeCodeCoveragesResponse

-- | <i>See:</i> <a>newImportSourceCredentials</a> smart constructor.
data ImportSourceCredentials
ImportSourceCredentials' :: Maybe Text -> Maybe Bool -> Sensitive Text -> ServerType -> AuthType -> ImportSourceCredentials

-- | Create a value of <a>ImportSourceCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_username</a> - The Bitbucket username when
--   the <tt>authType</tt> is BASIC_AUTH. This parameter is not valid for
--   other types of source providers or connections.
--   
--   <a>$sel:shouldOverwrite:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_shouldOverwrite</a> - Set to <tt>false</tt>
--   to prevent overwriting the repository source credentials. Set to
--   <tt>true</tt> to overwrite the repository source credentials. The
--   default value is <tt>true</tt>.
--   
--   <a>$sel:token:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_token</a> - For GitHub or GitHub
--   Enterprise, this is the personal access token. For Bitbucket, this is
--   the app password.
--   
--   <a>$sel:serverType:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_serverType</a> - The source provider used
--   for this project.
--   
--   <a>$sel:authType:ImportSourceCredentials'</a>,
--   <a>importSourceCredentials_authType</a> - The type of authentication
--   used to connect to a GitHub, GitHub Enterprise, or Bitbucket
--   repository. An OAUTH connection is not supported by the API and must
--   be created using the CodeBuild console.
newImportSourceCredentials :: Text -> ServerType -> AuthType -> ImportSourceCredentials

-- | <i>See:</i> <a>newImportSourceCredentialsResponse</a> smart
--   constructor.
data ImportSourceCredentialsResponse
ImportSourceCredentialsResponse' :: Maybe Text -> Int -> ImportSourceCredentialsResponse

-- | Create a value of <a>ImportSourceCredentialsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ImportSourceCredentialsResponse'</a>,
--   <a>importSourceCredentialsResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the token.
--   
--   <a>$sel:httpStatus:ImportSourceCredentialsResponse'</a>,
--   <a>importSourceCredentialsResponse_httpStatus</a> - The response's
--   http status code.
newImportSourceCredentialsResponse :: Int -> ImportSourceCredentialsResponse

-- | <i>See:</i> <a>newListBuildBatchesForProject</a> smart constructor.
data ListBuildBatchesForProject
ListBuildBatchesForProject' :: Maybe SortOrderType -> Maybe Text -> Maybe Text -> Maybe BuildBatchFilter -> Maybe Natural -> ListBuildBatchesForProject

-- | Create a value of <a>ListBuildBatchesForProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_sortOrder</a> - Specifies the sort order
--   of the returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous call to
--   <tt>ListBuildBatchesForProject</tt>. This specifies the next item to
--   return. To return the beginning of the list, exclude this parameter.
--   
--   <a>$sel:projectName:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_projectName</a> - The name of the
--   project.
--   
--   <a>$sel:filter':ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_filter</a> - A <tt>BuildBatchFilter</tt>
--   object that specifies the filters for the search.
--   
--   <a>$sel:maxResults:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProject_maxResults</a> - The maximum number of
--   results to return.
newListBuildBatchesForProject :: ListBuildBatchesForProject

-- | <i>See:</i> <a>newListBuildBatchesForProjectResponse</a> smart
--   constructor.
data ListBuildBatchesForProjectResponse
ListBuildBatchesForProjectResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBuildBatchesForProjectResponse

-- | Create a value of <a>ListBuildBatchesForProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildBatchesForProjectResponse'</a>,
--   <a>listBuildBatchesForProjectResponse_ids</a> - An array of strings
--   that contains the batch build identifiers.
--   
--   <a>$sel:nextToken:ListBuildBatchesForProject'</a>,
--   <a>listBuildBatchesForProjectResponse_nextToken</a> - If there are
--   more items to return, this contains a token that is passed to a
--   subsequent call to <tt>ListBuildBatchesForProject</tt> to retrieve the
--   next set of items.
--   
--   <a>$sel:httpStatus:ListBuildBatchesForProjectResponse'</a>,
--   <a>listBuildBatchesForProjectResponse_httpStatus</a> - The response's
--   http status code.
newListBuildBatchesForProjectResponse :: Int -> ListBuildBatchesForProjectResponse

-- | <i>See:</i> <a>newBatchGetReportGroups</a> smart constructor.
data BatchGetReportGroups
BatchGetReportGroups' :: NonEmpty Text -> BatchGetReportGroups

-- | Create a value of <a>BatchGetReportGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroupArns:BatchGetReportGroups'</a>,
--   <a>batchGetReportGroups_reportGroupArns</a> - An array of report group
--   ARNs that identify the report groups to return.
newBatchGetReportGroups :: NonEmpty Text -> BatchGetReportGroups

-- | <i>See:</i> <a>newBatchGetReportGroupsResponse</a> smart constructor.
data BatchGetReportGroupsResponse
BatchGetReportGroupsResponse' :: Maybe (NonEmpty ReportGroup) -> Maybe (NonEmpty Text) -> Int -> BatchGetReportGroupsResponse

-- | Create a value of <a>BatchGetReportGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroups:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_reportGroups</a> - The array of report
--   groups returned by <tt>BatchGetReportGroups</tt>.
--   
--   <a>$sel:reportGroupsNotFound:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_reportGroupsNotFound</a> - An array of
--   ARNs passed to <tt>BatchGetReportGroups</tt> that are not associated
--   with a <tt>ReportGroup</tt>.
--   
--   <a>$sel:httpStatus:BatchGetReportGroupsResponse'</a>,
--   <a>batchGetReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetReportGroupsResponse :: Int -> BatchGetReportGroupsResponse

-- | <i>See:</i> <a>newDeleteBuildBatch</a> smart constructor.
data DeleteBuildBatch
DeleteBuildBatch' :: Text -> DeleteBuildBatch

-- | Create a value of <a>DeleteBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteBuildBatch'</a>, <a>deleteBuildBatch_id</a> - The
--   identifier of the batch build to delete.
newDeleteBuildBatch :: Text -> DeleteBuildBatch

-- | <i>See:</i> <a>newDeleteBuildBatchResponse</a> smart constructor.
data DeleteBuildBatchResponse
DeleteBuildBatchResponse' :: Maybe [BuildNotDeleted] -> Maybe (NonEmpty Text) -> Maybe Text -> Int -> DeleteBuildBatchResponse

-- | Create a value of <a>DeleteBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildsNotDeleted:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_buildsNotDeleted</a> - An array of
--   <tt>BuildNotDeleted</tt> objects that specify the builds that could
--   not be deleted.
--   
--   <a>$sel:buildsDeleted:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_buildsDeleted</a> - An array of strings
--   that contain the identifiers of the builds that were deleted.
--   
--   <a>$sel:statusCode:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_statusCode</a> - The status code.
--   
--   <a>$sel:httpStatus:DeleteBuildBatchResponse'</a>,
--   <a>deleteBuildBatchResponse_httpStatus</a> - The response's http
--   status code.
newDeleteBuildBatchResponse :: Int -> DeleteBuildBatchResponse

-- | <i>See:</i> <a>newStartBuild</a> smart constructor.
data StartBuild
StartBuild' :: Maybe Text -> Maybe Text -> Maybe [EnvironmentVariable] -> Maybe BuildStatusConfig -> Maybe Text -> Maybe Bool -> Maybe RegistryCredential -> Maybe Natural -> Maybe Text -> Maybe ProjectCache -> Maybe Natural -> Maybe [ProjectSource] -> Maybe Natural -> Maybe ImagePullCredentialsType -> Maybe LogsConfig -> Maybe SourceAuth -> Maybe GitSubmodulesConfig -> Maybe EnvironmentType -> Maybe Text -> Maybe ComputeType -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [ProjectArtifacts] -> Maybe ProjectArtifacts -> Maybe SourceType -> Text -> StartBuild

-- | Create a value of <a>StartBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKeyOverride:StartBuild'</a>,
--   <a>startBuild_encryptionKeyOverride</a> - The Key Management Service
--   customer master key (CMK) that overrides the one specified in the
--   build project. The CMK key encrypts the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:sourceLocationOverride:StartBuild'</a>,
--   <a>startBuild_sourceLocationOverride</a> - A location that overrides,
--   for this build, the source location for the one defined in the build
--   project.
--   
--   <a>$sel:environmentVariablesOverride:StartBuild'</a>,
--   <a>startBuild_environmentVariablesOverride</a> - A set of environment
--   variables that overrides, for this build only, the latest ones already
--   defined in the build project.
--   
--   <a>$sel:buildStatusConfigOverride:StartBuild'</a>,
--   <a>startBuild_buildStatusConfigOverride</a> - Contains information
--   that defines how the build project reports the build status to the
--   source provider. This option is only used when the source provider is
--   <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or <tt>BITBUCKET</tt>.
--   
--   <a>$sel:idempotencyToken:StartBuild'</a>,
--   <a>startBuild_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the StartBuild
--   request. The token is included in the StartBuild request and is valid
--   for 5 minutes. If you repeat the StartBuild request with the same
--   token, but change a parameter, CodeBuild returns a parameter mismatch
--   error.
--   
--   <a>$sel:debugSessionEnabled:StartBuild'</a>,
--   <a>startBuild_debugSessionEnabled</a> - Specifies if session debugging
--   is enabled for this build. For more information, see <a>Viewing a
--   running build in Session Manager</a>.
--   
--   <a>$sel:registryCredentialOverride:StartBuild'</a>,
--   <a>startBuild_registryCredentialOverride</a> - The credentials for
--   access to a private registry.
--   
--   <a>$sel:timeoutInMinutesOverride:StartBuild'</a>,
--   <a>startBuild_timeoutInMinutesOverride</a> - The number of build
--   timeout minutes, from 5 to 480 (8 hours), that overrides, for this
--   build only, the latest setting already defined in the build project.
--   
--   <a>$sel:serviceRoleOverride:StartBuild'</a>,
--   <a>startBuild_serviceRoleOverride</a> - The name of a service role for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:cacheOverride:StartBuild'</a>, <a>startBuild_cacheOverride</a>
--   - A ProjectCache object specified for this build that overrides the
--   one defined in the build project.
--   
--   <a>$sel:queuedTimeoutInMinutesOverride:StartBuild'</a>,
--   <a>startBuild_queuedTimeoutInMinutesOverride</a> - The number of
--   minutes a build is allowed to be queued before it times out.
--   
--   <a>$sel:secondarySourcesOverride:StartBuild'</a>,
--   <a>startBuild_secondarySourcesOverride</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:gitCloneDepthOverride:StartBuild'</a>,
--   <a>startBuild_gitCloneDepthOverride</a> - The user-defined depth of
--   history, with a minimum value of 0, that overrides, for this build
--   only, any previous depth of history defined in the build project.
--   
--   <a>$sel:imagePullCredentialsTypeOverride:StartBuild'</a>,
--   <a>startBuild_imagePullCredentialsTypeOverride</a> - The type of
--   credentials CodeBuild uses to pull images in your build. There are two
--   valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
--   
--   <a>$sel:logsConfigOverride:StartBuild'</a>,
--   <a>startBuild_logsConfigOverride</a> - Log settings for this build
--   that override the log settings defined in the build project.
--   
--   <a>$sel:sourceAuthOverride:StartBuild'</a>,
--   <a>startBuild_sourceAuthOverride</a> - An authorization type for this
--   build that overrides the one defined in the build project. This
--   override applies only if the build project's source is BitBucket or
--   GitHub.
--   
--   <a>$sel:gitSubmodulesConfigOverride:StartBuild'</a>,
--   <a>startBuild_gitSubmodulesConfigOverride</a> - Information about the
--   Git submodules configuration for this build of an CodeBuild build
--   project.
--   
--   <a>$sel:environmentTypeOverride:StartBuild'</a>,
--   <a>startBuild_environmentTypeOverride</a> - A container type for this
--   build that overrides the one specified in the build project.
--   
--   <a>$sel:certificateOverride:StartBuild'</a>,
--   <a>startBuild_certificateOverride</a> - The name of a certificate for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:computeTypeOverride:StartBuild'</a>,
--   <a>startBuild_computeTypeOverride</a> - The name of a compute type for
--   this build that overrides the one specified in the build project.
--   
--   <a>$sel:privilegedModeOverride:StartBuild'</a>,
--   <a>startBuild_privilegedModeOverride</a> - Enable this flag to
--   override privileged mode in the build project.
--   
--   <a>$sel:sourceVersion:StartBuild'</a>, <a>startBuild_sourceVersion</a>
--   - The version of the build input to be built, for this build only. If
--   not specified, the latest version is used. If specified, the contents
--   depends on the source provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildspecOverride:StartBuild'</a>,
--   <a>startBuild_buildspecOverride</a> - A buildspec file declaration
--   that overrides, for this build only, the latest one already defined in
--   the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:secondarySourcesVersionOverride:StartBuild'</a>,
--   <a>startBuild_secondarySourcesVersionOverride</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects that specify one or more
--   versions of the project's secondary sources to be used for this build
--   only.
--   
--   <a>$sel:reportBuildStatusOverride:StartBuild'</a>,
--   <a>startBuild_reportBuildStatusOverride</a> - Set to true to report to
--   your source provider the status of a build's start and completion. If
--   you use this option with a source provider other than GitHub, GitHub
--   Enterprise, or Bitbucket, an <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   <a>$sel:insecureSslOverride:StartBuild'</a>,
--   <a>startBuild_insecureSslOverride</a> - Enable this flag to override
--   the insecure SSL setting that is specified in the build project. The
--   insecure SSL setting determines whether to ignore SSL warnings while
--   connecting to the project source code. This override applies only if
--   the build's source is GitHub Enterprise.
--   
--   <a>$sel:imageOverride:StartBuild'</a>, <a>startBuild_imageOverride</a>
--   - The name of an image for this build that overrides the one specified
--   in the build project.
--   
--   <a>$sel:secondaryArtifactsOverride:StartBuild'</a>,
--   <a>startBuild_secondaryArtifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:artifactsOverride:StartBuild'</a>,
--   <a>startBuild_artifactsOverride</a> - Build output artifact settings
--   that override, for this build only, the latest ones already defined in
--   the build project.
--   
--   <a>$sel:sourceTypeOverride:StartBuild'</a>,
--   <a>startBuild_sourceTypeOverride</a> - A source input type, for this
--   build, that overrides the source input defined in the build project.
--   
--   <a>$sel:projectName:StartBuild'</a>, <a>startBuild_projectName</a> -
--   The name of the CodeBuild build project to start running a build.
newStartBuild :: Text -> StartBuild

-- | <i>See:</i> <a>newStartBuildResponse</a> smart constructor.
data StartBuildResponse
StartBuildResponse' :: Maybe Build -> Int -> StartBuildResponse

-- | Create a value of <a>StartBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:StartBuildResponse'</a>, <a>startBuildResponse_build</a>
--   - Information about the build to be run.
--   
--   <a>$sel:httpStatus:StartBuildResponse'</a>,
--   <a>startBuildResponse_httpStatus</a> - The response's http status
--   code.
newStartBuildResponse :: Int -> StartBuildResponse

-- | <i>See:</i> <a>newBatchGetBuildBatches</a> smart constructor.
data BatchGetBuildBatches
BatchGetBuildBatches' :: [Text] -> BatchGetBuildBatches

-- | Create a value of <a>BatchGetBuildBatches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchGetBuildBatches'</a>, <a>batchGetBuildBatches_ids</a>
--   - An array that contains the batch build identifiers to retrieve.
newBatchGetBuildBatches :: BatchGetBuildBatches

-- | <i>See:</i> <a>newBatchGetBuildBatchesResponse</a> smart constructor.
data BatchGetBuildBatchesResponse
BatchGetBuildBatchesResponse' :: Maybe [BuildBatch] -> Maybe [Text] -> Int -> BatchGetBuildBatchesResponse

-- | Create a value of <a>BatchGetBuildBatchesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatches:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_buildBatches</a> - An array of
--   <tt>BuildBatch</tt> objects that represent the retrieved batch builds.
--   
--   <a>$sel:buildBatchesNotFound:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_buildBatchesNotFound</a> - An array
--   that contains the identifiers of any batch builds that are not found.
--   
--   <a>$sel:httpStatus:BatchGetBuildBatchesResponse'</a>,
--   <a>batchGetBuildBatchesResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetBuildBatchesResponse :: Int -> BatchGetBuildBatchesResponse

-- | <i>See:</i> <a>newRetryBuild</a> smart constructor.
data RetryBuild
RetryBuild' :: Maybe Text -> Maybe Text -> RetryBuild

-- | Create a value of <a>RetryBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:RetryBuild'</a>,
--   <a>retryBuild_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>RetryBuild</tt> request. The token is included in the
--   <tt>RetryBuild</tt> request and is valid for five minutes. If you
--   repeat the <tt>RetryBuild</tt> request with the same token, but change
--   a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:id:RetryBuild'</a>, <a>retryBuild_id</a> - Specifies the
--   identifier of the build to restart.
newRetryBuild :: RetryBuild

-- | <i>See:</i> <a>newRetryBuildResponse</a> smart constructor.
data RetryBuildResponse
RetryBuildResponse' :: Maybe Build -> Int -> RetryBuildResponse

-- | Create a value of <a>RetryBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:RetryBuildResponse'</a>, <a>retryBuildResponse_build</a>
--   - Undocumented member.
--   
--   <a>$sel:httpStatus:RetryBuildResponse'</a>,
--   <a>retryBuildResponse_httpStatus</a> - The response's http status
--   code.
newRetryBuildResponse :: Int -> RetryBuildResponse

-- | <i>See:</i> <a>newListBuildsForProject</a> smart constructor.
data ListBuildsForProject
ListBuildsForProject' :: Maybe SortOrderType -> Maybe Text -> Text -> ListBuildsForProject

-- | Create a value of <a>ListBuildsForProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_sortOrder</a> - The order to sort the results
--   in. The results are sorted by build number, not the build identifier.
--   If this is not specified, the results are sorted in descending order.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the build identifiers in ascending order,
--   by build number.</li>
--   <li><tt>DESCENDING</tt>: List the build identifiers in descending
--   order, by build number.</li>
--   </ul>
--   
--   If the project has more than 100 builds, setting the sort order will
--   result in an error.
--   
--   <a>$sel:nextToken:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_nextToken</a> - During a previous call, if
--   there are more than 100 items in the list, only the first 100 items
--   are returned, along with a unique string called a <i>nextToken</i>. To
--   get the next batch of items in the list, call this operation again,
--   adding the next token to the call. To get all of the items in the
--   list, keep calling this operation with each subsequent next token that
--   is returned, until no more next tokens are returned.
--   
--   <a>$sel:projectName:ListBuildsForProject'</a>,
--   <a>listBuildsForProject_projectName</a> - The name of the CodeBuild
--   project.
newListBuildsForProject :: Text -> ListBuildsForProject

-- | <i>See:</i> <a>newListBuildsForProjectResponse</a> smart constructor.
data ListBuildsForProjectResponse
ListBuildsForProjectResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListBuildsForProjectResponse

-- | Create a value of <a>ListBuildsForProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildsForProjectResponse'</a>,
--   <a>listBuildsForProjectResponse_ids</a> - A list of build identifiers
--   for the specified build project, with each build ID representing a
--   single build.
--   
--   <a>$sel:nextToken:ListBuildsForProject'</a>,
--   <a>listBuildsForProjectResponse_nextToken</a> - If there are more than
--   100 items in the list, only the first 100 items are returned, along
--   with a unique string called a <i>nextToken</i>. To get the next batch
--   of items in the list, call this operation again, adding the next token
--   to the call.
--   
--   <a>$sel:httpStatus:ListBuildsForProjectResponse'</a>,
--   <a>listBuildsForProjectResponse_httpStatus</a> - The response's http
--   status code.
newListBuildsForProjectResponse :: Int -> ListBuildsForProjectResponse

-- | <i>See:</i> <a>newDescribeTestCases</a> smart constructor.
data DescribeTestCases
DescribeTestCases' :: Maybe Text -> Maybe TestCaseFilter -> Maybe Natural -> Text -> DescribeTestCases

-- | Create a value of <a>DescribeTestCases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTestCases'</a>,
--   <a>describeTestCases_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:filter':DescribeTestCases'</a>,
--   <a>describeTestCases_filter</a> - A <tt>TestCaseFilter</tt> object
--   used to filter the returned reports.
--   
--   <a>$sel:maxResults:DescribeTestCases'</a>,
--   <a>describeTestCases_maxResults</a> - The maximum number of paginated
--   test cases returned per response. Use <tt>nextToken</tt> to iterate
--   pages in the list of returned <tt>TestCase</tt> objects. The default
--   value is 100.
--   
--   <a>$sel:reportArn:DescribeTestCases'</a>,
--   <a>describeTestCases_reportArn</a> - The ARN of the report for which
--   test cases are returned.
newDescribeTestCases :: Text -> DescribeTestCases

-- | <i>See:</i> <a>newDescribeTestCasesResponse</a> smart constructor.
data DescribeTestCasesResponse
DescribeTestCasesResponse' :: Maybe Text -> Maybe [TestCase] -> Int -> DescribeTestCasesResponse

-- | Create a value of <a>DescribeTestCasesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTestCases'</a>,
--   <a>describeTestCasesResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:testCases:DescribeTestCasesResponse'</a>,
--   <a>describeTestCasesResponse_testCases</a> - The returned list of test
--   cases.
--   
--   <a>$sel:httpStatus:DescribeTestCasesResponse'</a>,
--   <a>describeTestCasesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeTestCasesResponse :: Int -> DescribeTestCasesResponse

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Text -> GetResourcePolicy

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_resourceArn</a> - The ARN of the resource that is
--   associated with the resource policy.
newGetResourcePolicy :: Text -> GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Int -> GetResourcePolicyResponse

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policy</a> - The resource policy for the
--   resource identified by the input ARN parameter.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | <i>See:</i> <a>newBatchGetProjects</a> smart constructor.
data BatchGetProjects
BatchGetProjects' :: NonEmpty Text -> BatchGetProjects

-- | Create a value of <a>BatchGetProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:BatchGetProjects'</a>, <a>batchGetProjects_names</a> -
--   The names or ARNs of the build projects. To get information about a
--   project shared with your Amazon Web Services account, its ARN must be
--   specified. You cannot specify a shared project using its name.
newBatchGetProjects :: NonEmpty Text -> BatchGetProjects

-- | <i>See:</i> <a>newBatchGetProjectsResponse</a> smart constructor.
data BatchGetProjectsResponse
BatchGetProjectsResponse' :: Maybe (NonEmpty Text) -> Maybe [Project] -> Int -> BatchGetProjectsResponse

-- | Create a value of <a>BatchGetProjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectsNotFound:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_projectsNotFound</a> - The names of build
--   projects for which information could not be found.
--   
--   <a>$sel:projects:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_projects</a> - Information about the
--   requested build projects.
--   
--   <a>$sel:httpStatus:BatchGetProjectsResponse'</a>,
--   <a>batchGetProjectsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetProjectsResponse :: Int -> BatchGetProjectsResponse

-- | <i>See:</i> <a>newBatchGetBuilds</a> smart constructor.
data BatchGetBuilds
BatchGetBuilds' :: NonEmpty Text -> BatchGetBuilds

-- | Create a value of <a>BatchGetBuilds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchGetBuilds'</a>, <a>batchGetBuilds_ids</a> - The IDs
--   of the builds.
newBatchGetBuilds :: NonEmpty Text -> BatchGetBuilds

-- | <i>See:</i> <a>newBatchGetBuildsResponse</a> smart constructor.
data BatchGetBuildsResponse
BatchGetBuildsResponse' :: Maybe [Build] -> Maybe (NonEmpty Text) -> Int -> BatchGetBuildsResponse

-- | Create a value of <a>BatchGetBuildsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:builds:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_builds</a> - Information about the requested
--   builds.
--   
--   <a>$sel:buildsNotFound:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_buildsNotFound</a> - The IDs of builds for
--   which information could not be found.
--   
--   <a>$sel:httpStatus:BatchGetBuildsResponse'</a>,
--   <a>batchGetBuildsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetBuildsResponse :: Int -> BatchGetBuildsResponse

-- | <i>See:</i> <a>newBatchGetReports</a> smart constructor.
data BatchGetReports
BatchGetReports' :: NonEmpty Text -> BatchGetReports

-- | Create a value of <a>BatchGetReports</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportArns:BatchGetReports'</a>,
--   <a>batchGetReports_reportArns</a> - An array of ARNs that identify the
--   <tt>Report</tt> objects to return.
newBatchGetReports :: NonEmpty Text -> BatchGetReports

-- | <i>See:</i> <a>newBatchGetReportsResponse</a> smart constructor.
data BatchGetReportsResponse
BatchGetReportsResponse' :: Maybe (NonEmpty Report) -> Maybe (NonEmpty Text) -> Int -> BatchGetReportsResponse

-- | Create a value of <a>BatchGetReportsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_reports</a> - The array of <tt>Report</tt>
--   objects returned by <tt>BatchGetReports</tt>.
--   
--   <a>$sel:reportsNotFound:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_reportsNotFound</a> - An array of ARNs
--   passed to <tt>BatchGetReportGroups</tt> that are not associated with a
--   <tt>Report</tt>.
--   
--   <a>$sel:httpStatus:BatchGetReportsResponse'</a>,
--   <a>batchGetReportsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetReportsResponse :: Int -> BatchGetReportsResponse

-- | <i>See:</i> <a>newUpdateWebhook</a> smart constructor.
data UpdateWebhook
UpdateWebhook' :: Maybe Text -> Maybe Bool -> Maybe [[WebhookFilter]] -> Maybe WebhookBuildType -> Text -> UpdateWebhook

-- | Create a value of <a>UpdateWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:UpdateWebhook'</a>,
--   <a>updateWebhook_branchFilter</a> - A regular expression used to
--   determine which repository branches are built when a webhook is
--   triggered. If the name of a branch matches the regular expression,
--   then it is built. If <tt>branchFilter</tt> is empty, then all branches
--   are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:rotateSecret:UpdateWebhook'</a>,
--   <a>updateWebhook_rotateSecret</a> - A boolean value that specifies
--   whether the associated GitHub repository's secret token should be
--   updated. If you use Bitbucket for your repository,
--   <tt>rotateSecret</tt> is ignored.
--   
--   <a>$sel:filterGroups:UpdateWebhook'</a>,
--   <a>updateWebhook_filterGroups</a> - An array of arrays of
--   <tt>WebhookFilter</tt> objects used to determine if a webhook event
--   can trigger a build. A filter group must contain at least one
--   <tt>EVENT</tt> <tt>WebhookFilter</tt>.
--   
--   <a>$sel:buildType:UpdateWebhook'</a>, <a>updateWebhook_buildType</a> -
--   Specifies the type of build this webhook will trigger.
--   
--   <a>$sel:projectName:UpdateWebhook'</a>,
--   <a>updateWebhook_projectName</a> - The name of the CodeBuild project.
newUpdateWebhook :: Text -> UpdateWebhook

-- | <i>See:</i> <a>newUpdateWebhookResponse</a> smart constructor.
data UpdateWebhookResponse
UpdateWebhookResponse' :: Maybe Webhook -> Int -> UpdateWebhookResponse

-- | Create a value of <a>UpdateWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:webhook:UpdateWebhookResponse'</a>,
--   <a>updateWebhookResponse_webhook</a> - Information about a
--   repository's webhook that is associated with a project in CodeBuild.
--   
--   <a>$sel:httpStatus:UpdateWebhookResponse'</a>,
--   <a>updateWebhookResponse_httpStatus</a> - The response's http status
--   code.
newUpdateWebhookResponse :: Int -> UpdateWebhookResponse

-- | <i>See:</i> <a>newDeleteWebhook</a> smart constructor.
data DeleteWebhook
DeleteWebhook' :: Text -> DeleteWebhook

-- | Create a value of <a>DeleteWebhook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DeleteWebhook'</a>,
--   <a>deleteWebhook_projectName</a> - The name of the CodeBuild project.
newDeleteWebhook :: Text -> DeleteWebhook

-- | <i>See:</i> <a>newDeleteWebhookResponse</a> smart constructor.
data DeleteWebhookResponse
DeleteWebhookResponse' :: Int -> DeleteWebhookResponse

-- | Create a value of <a>DeleteWebhookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWebhookResponse'</a>,
--   <a>deleteWebhookResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWebhookResponse :: Int -> DeleteWebhookResponse

-- | <i>See:</i> <a>newStartBuildBatch</a> smart constructor.
data StartBuildBatch
StartBuildBatch' :: Maybe Text -> Maybe Text -> Maybe ProjectBuildBatchConfig -> Maybe [EnvironmentVariable] -> Maybe Text -> Maybe Bool -> Maybe RegistryCredential -> Maybe Text -> Maybe ProjectCache -> Maybe Natural -> Maybe [ProjectSource] -> Maybe Natural -> Maybe ImagePullCredentialsType -> Maybe LogsConfig -> Maybe SourceAuth -> Maybe GitSubmodulesConfig -> Maybe EnvironmentType -> Maybe Text -> Maybe ComputeType -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe Bool -> Maybe Text -> Maybe [ProjectArtifacts] -> Maybe Natural -> Maybe ProjectArtifacts -> Maybe SourceType -> Text -> StartBuildBatch

-- | Create a value of <a>StartBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKeyOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_encryptionKeyOverride</a> - The Key Management
--   Service customer master key (CMK) that overrides the one specified in
--   the batch build project. The CMK key encrypts the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:sourceLocationOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceLocationOverride</a> - A location that
--   overrides, for this batch build, the source location defined in the
--   batch build project.
--   
--   <a>$sel:buildBatchConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildBatchConfigOverride</a> - A
--   <tt>BuildBatchConfigOverride</tt> object that contains batch build
--   configuration overrides.
--   
--   <a>$sel:environmentVariablesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_environmentVariablesOverride</a> - An array of
--   <tt>EnvironmentVariable</tt> objects that override, or add to, the
--   environment variables defined in the batch build project.
--   
--   <a>$sel:idempotencyToken:StartBuildBatch'</a>,
--   <a>startBuildBatch_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>StartBuildBatch</tt> request. The token is included in the
--   <tt>StartBuildBatch</tt> request and is valid for five minutes. If you
--   repeat the <tt>StartBuildBatch</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:debugSessionEnabled:StartBuildBatch'</a>,
--   <a>startBuildBatch_debugSessionEnabled</a> - Specifies if session
--   debugging is enabled for this batch build. For more information, see
--   <a>Viewing a running build in Session Manager</a>. Batch session
--   debugging is not supported for matrix batch builds.
--   
--   <a>$sel:registryCredentialOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_registryCredentialOverride</a> - A
--   <tt>RegistryCredential</tt> object that overrides credentials for
--   access to a private registry.
--   
--   <a>$sel:serviceRoleOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_serviceRoleOverride</a> - The name of a service
--   role for this batch build that overrides the one specified in the
--   batch build project.
--   
--   <a>$sel:cacheOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_cacheOverride</a> - A <tt>ProjectCache</tt> object
--   that specifies cache overrides.
--   
--   <a>$sel:queuedTimeoutInMinutesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_queuedTimeoutInMinutesOverride</a> - The number of
--   minutes a batch build is allowed to be queued before it times out.
--   
--   <a>$sel:secondarySourcesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondarySourcesOverride</a> - An array of
--   <tt>ProjectSource</tt> objects that override the secondary sources
--   defined in the batch build project.
--   
--   <a>$sel:gitCloneDepthOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_gitCloneDepthOverride</a> - The user-defined depth
--   of history, with a minimum value of 0, that overrides, for this batch
--   build only, any previous depth of history defined in the batch build
--   project.
--   
--   <a>$sel:imagePullCredentialsTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_imagePullCredentialsTypeOverride</a> - The type of
--   credentials CodeBuild uses to pull images in your batch build. There
--   are two valid values:
--   
--   <ul>
--   <li><i>CODEBUILD</i> Specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild's service principal.</li>
--   <li><i>SERVICE_ROLE</i> Specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When using a cross-account or private registry image, you must use
--   <tt>SERVICE_ROLE</tt> credentials. When using an CodeBuild curated
--   image, you must use <tt>CODEBUILD</tt> credentials.
--   
--   <a>$sel:logsConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_logsConfigOverride</a> - A <tt>LogsConfig</tt>
--   object that override the log settings defined in the batch build
--   project.
--   
--   <a>$sel:sourceAuthOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceAuthOverride</a> - A <tt>SourceAuth</tt>
--   object that overrides the one defined in the batch build project. This
--   override applies only if the build project's source is BitBucket or
--   GitHub.
--   
--   <a>$sel:gitSubmodulesConfigOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_gitSubmodulesConfigOverride</a> - A
--   <tt>GitSubmodulesConfig</tt> object that overrides the Git submodules
--   configuration for this batch build.
--   
--   <a>$sel:environmentTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_environmentTypeOverride</a> - A container type for
--   this batch build that overrides the one specified in the batch build
--   project.
--   
--   <a>$sel:certificateOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_certificateOverride</a> - The name of a certificate
--   for this batch build that overrides the one specified in the batch
--   build project.
--   
--   <a>$sel:computeTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_computeTypeOverride</a> - The name of a compute
--   type for this batch build that overrides the one specified in the
--   batch build project.
--   
--   <a>$sel:reportBuildBatchStatusOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_reportBuildBatchStatusOverride</a> - Set to
--   <tt>true</tt> to report to your source provider the status of a batch
--   build's start and completion. If you use this option with a source
--   provider other than GitHub, GitHub Enterprise, or Bitbucket, an
--   <tt>invalidInputException</tt> is thrown.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   <a>$sel:privilegedModeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_privilegedModeOverride</a> - Enable this flag to
--   override privileged mode in the batch build project.
--   
--   <a>$sel:sourceVersion:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceVersion</a> - The version of the batch build
--   input to be built, for this build only. If not specified, the latest
--   version is used. If specified, the contents depends on the source
--   provider:
--   
--   <ul>
--   <li><i>CodeCommit</i> The commit ID, branch, or Git tag to use.</li>
--   <li><i>GitHub</i> The commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Bitbucket</i> The commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li><i>Amazon S3</i> The version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildspecOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildspecOverride</a> - A buildspec file
--   declaration that overrides, for this build only, the latest one
--   already defined in the build project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:secondarySourcesVersionOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondarySourcesVersionOverride</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects that override the secondary
--   source versions in the batch build project.
--   
--   <a>$sel:insecureSslOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_insecureSslOverride</a> - Enable this flag to
--   override the insecure SSL setting that is specified in the batch build
--   project. The insecure SSL setting determines whether to ignore SSL
--   warnings while connecting to the project source code. This override
--   applies only if the build's source is GitHub Enterprise.
--   
--   <a>$sel:imageOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_imageOverride</a> - The name of an image for this
--   batch build that overrides the one specified in the batch build
--   project.
--   
--   <a>$sel:secondaryArtifactsOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_secondaryArtifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects that override the secondary
--   artifacts defined in the batch build project.
--   
--   <a>$sel:buildTimeoutInMinutesOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_buildTimeoutInMinutesOverride</a> - Overrides the
--   build timeout specified in the batch build project.
--   
--   <a>$sel:artifactsOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_artifactsOverride</a> - An array of
--   <tt>ProjectArtifacts</tt> objects that contains information about the
--   build output artifact overrides for the build project.
--   
--   <a>$sel:sourceTypeOverride:StartBuildBatch'</a>,
--   <a>startBuildBatch_sourceTypeOverride</a> - The source input type that
--   overrides the source input defined in the batch build project.
--   
--   <a>$sel:projectName:StartBuildBatch'</a>,
--   <a>startBuildBatch_projectName</a> - The name of the project.
newStartBuildBatch :: Text -> StartBuildBatch

-- | <i>See:</i> <a>newStartBuildBatchResponse</a> smart constructor.
data StartBuildBatchResponse
StartBuildBatchResponse' :: Maybe BuildBatch -> Int -> StartBuildBatchResponse

-- | Create a value of <a>StartBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:StartBuildBatchResponse'</a>,
--   <a>startBuildBatchResponse_buildBatch</a> - A <tt>BuildBatch</tt>
--   object that contains information about the batch build.
--   
--   <a>$sel:httpStatus:StartBuildBatchResponse'</a>,
--   <a>startBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newStartBuildBatchResponse :: Int -> StartBuildBatchResponse

-- | <i>See:</i> <a>newRetryBuildBatch</a> smart constructor.
data RetryBuildBatch
RetryBuildBatch' :: Maybe Text -> Maybe Text -> Maybe RetryBuildBatchType -> RetryBuildBatch

-- | Create a value of <a>RetryBuildBatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:RetryBuildBatch'</a>,
--   <a>retryBuildBatch_idempotencyToken</a> - A unique, case sensitive
--   identifier you provide to ensure the idempotency of the
--   <tt>RetryBuildBatch</tt> request. The token is included in the
--   <tt>RetryBuildBatch</tt> request and is valid for five minutes. If you
--   repeat the <tt>RetryBuildBatch</tt> request with the same token, but
--   change a parameter, CodeBuild returns a parameter mismatch error.
--   
--   <a>$sel:id:RetryBuildBatch'</a>, <a>retryBuildBatch_id</a> - Specifies
--   the identifier of the batch build to restart.
--   
--   <a>$sel:retryType:RetryBuildBatch'</a>,
--   <a>retryBuildBatch_retryType</a> - Specifies the type of retry to
--   perform.
newRetryBuildBatch :: RetryBuildBatch

-- | <i>See:</i> <a>newRetryBuildBatchResponse</a> smart constructor.
data RetryBuildBatchResponse
RetryBuildBatchResponse' :: Maybe BuildBatch -> Int -> RetryBuildBatchResponse

-- | Create a value of <a>RetryBuildBatchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildBatch:RetryBuildBatchResponse'</a>,
--   <a>retryBuildBatchResponse_buildBatch</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RetryBuildBatchResponse'</a>,
--   <a>retryBuildBatchResponse_httpStatus</a> - The response's http status
--   code.
newRetryBuildBatchResponse :: Int -> RetryBuildBatchResponse

-- | <i>See:</i> <a>newUpdateProjectVisibility</a> smart constructor.
data UpdateProjectVisibility
UpdateProjectVisibility' :: Maybe Text -> Text -> ProjectVisibilityType -> UpdateProjectVisibility

-- | Create a value of <a>UpdateProjectVisibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceAccessRole:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_resourceAccessRole</a> - The ARN of the IAM
--   role that enables CodeBuild to access the CloudWatch Logs and Amazon
--   S3 artifacts for the project's builds.
--   
--   <a>$sel:projectArn:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_projectArn</a> - The Amazon Resource Name
--   (ARN) of the build project.
--   
--   <a>$sel:projectVisibility:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibility_projectVisibility</a> - Undocumented
--   member.
newUpdateProjectVisibility :: Text -> ProjectVisibilityType -> UpdateProjectVisibility

-- | <i>See:</i> <a>newUpdateProjectVisibilityResponse</a> smart
--   constructor.
data UpdateProjectVisibilityResponse
UpdateProjectVisibilityResponse' :: Maybe Text -> Maybe Text -> Maybe ProjectVisibilityType -> Int -> UpdateProjectVisibilityResponse

-- | Create a value of <a>UpdateProjectVisibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:publicProjectAlias:UpdateProjectVisibilityResponse'</a>,
--   <a>updateProjectVisibilityResponse_publicProjectAlias</a> - Contains
--   the project identifier used with the public build APIs.
--   
--   <a>$sel:projectArn:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibilityResponse_projectArn</a> - The Amazon
--   Resource Name (ARN) of the build project.
--   
--   <a>$sel:projectVisibility:UpdateProjectVisibility'</a>,
--   <a>updateProjectVisibilityResponse_projectVisibility</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateProjectVisibilityResponse'</a>,
--   <a>updateProjectVisibilityResponse_httpStatus</a> - The response's
--   http status code.
newUpdateProjectVisibilityResponse :: Int -> UpdateProjectVisibilityResponse

-- | <i>See:</i> <a>newListReportsForReportGroup</a> smart constructor.
data ListReportsForReportGroup
ListReportsForReportGroup' :: Maybe SortOrderType -> Maybe Text -> Maybe ReportFilter -> Maybe Natural -> Text -> ListReportsForReportGroup

-- | Create a value of <a>ListReportsForReportGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_sortOrder</a> - Use to specify whether
--   the results are returned in ascending or descending order.
--   
--   <a>$sel:nextToken:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:filter':ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_filter</a> - A <tt>ReportFilter</tt>
--   object used to filter the returned reports.
--   
--   <a>$sel:maxResults:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_maxResults</a> - The maximum number of
--   paginated reports in this report group returned per response. Use
--   <tt>nextToken</tt> to iterate pages in the list of returned
--   <tt>Report</tt> objects. The default value is 100.
--   
--   <a>$sel:reportGroupArn:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroup_reportGroupArn</a> - The ARN of the
--   report group for which you want to return report ARNs.
newListReportsForReportGroup :: Text -> ListReportsForReportGroup

-- | <i>See:</i> <a>newListReportsForReportGroupResponse</a> smart
--   constructor.
data ListReportsForReportGroupResponse
ListReportsForReportGroupResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Int -> ListReportsForReportGroupResponse

-- | Create a value of <a>ListReportsForReportGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reports:ListReportsForReportGroupResponse'</a>,
--   <a>listReportsForReportGroupResponse_reports</a> - The list of report
--   ARNs.
--   
--   <a>$sel:nextToken:ListReportsForReportGroup'</a>,
--   <a>listReportsForReportGroupResponse_nextToken</a> - During a previous
--   call, the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:httpStatus:ListReportsForReportGroupResponse'</a>,
--   <a>listReportsForReportGroupResponse_httpStatus</a> - The response's
--   http status code.
newListReportsForReportGroupResponse :: Int -> ListReportsForReportGroupResponse

-- | <i>See:</i> <a>newInvalidateProjectCache</a> smart constructor.
data InvalidateProjectCache
InvalidateProjectCache' :: Text -> InvalidateProjectCache

-- | Create a value of <a>InvalidateProjectCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:InvalidateProjectCache'</a>,
--   <a>invalidateProjectCache_projectName</a> - The name of the CodeBuild
--   build project that the cache is reset for.
newInvalidateProjectCache :: Text -> InvalidateProjectCache

-- | <i>See:</i> <a>newInvalidateProjectCacheResponse</a> smart
--   constructor.
data InvalidateProjectCacheResponse
InvalidateProjectCacheResponse' :: Int -> InvalidateProjectCacheResponse

-- | Create a value of <a>InvalidateProjectCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:InvalidateProjectCacheResponse'</a>,
--   <a>invalidateProjectCacheResponse_httpStatus</a> - The response's http
--   status code.
newInvalidateProjectCacheResponse :: Int -> InvalidateProjectCacheResponse

-- | <i>See:</i> <a>newUpdateReportGroup</a> smart constructor.
data UpdateReportGroup
UpdateReportGroup' :: Maybe ReportExportConfig -> Maybe [Tag] -> Text -> UpdateReportGroup

-- | Create a value of <a>UpdateReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportConfig:UpdateReportGroup'</a>,
--   <a>updateReportGroup_exportConfig</a> - Used to specify an updated
--   export type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
--   
--   <a>$sel:tags:UpdateReportGroup'</a>, <a>updateReportGroup_tags</a> -
--   An updated list of tag key and value pairs associated with this report
--   group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
--   
--   <a>$sel:arn:UpdateReportGroup'</a>, <a>updateReportGroup_arn</a> - The
--   ARN of the report group to update.
newUpdateReportGroup :: Text -> UpdateReportGroup

-- | <i>See:</i> <a>newUpdateReportGroupResponse</a> smart constructor.
data UpdateReportGroupResponse
UpdateReportGroupResponse' :: Maybe ReportGroup -> Int -> UpdateReportGroupResponse

-- | Create a value of <a>UpdateReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroup:UpdateReportGroupResponse'</a>,
--   <a>updateReportGroupResponse_reportGroup</a> - Information about the
--   updated report group.
--   
--   <a>$sel:httpStatus:UpdateReportGroupResponse'</a>,
--   <a>updateReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateReportGroupResponse :: Int -> UpdateReportGroupResponse

-- | <i>See:</i> <a>newDeleteReportGroup</a> smart constructor.
data DeleteReportGroup
DeleteReportGroup' :: Maybe Bool -> Text -> DeleteReportGroup

-- | Create a value of <a>DeleteReportGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteReports:DeleteReportGroup'</a>,
--   <a>deleteReportGroup_deleteReports</a> - If <tt>true</tt>, deletes any
--   reports that belong to a report group before deleting the report
--   group.
--   
--   If <tt>false</tt>, you must delete any reports in the report group.
--   Use <a>ListReportsForReportGroup</a> to get the reports in a report
--   group. Use <a>DeleteReport</a> to delete the reports. If you call
--   <tt>DeleteReportGroup</tt> for a report group that contains one or
--   more reports, an exception is thrown.
--   
--   <a>$sel:arn:DeleteReportGroup'</a>, <a>deleteReportGroup_arn</a> - The
--   ARN of the report group to delete.
newDeleteReportGroup :: Text -> DeleteReportGroup

-- | <i>See:</i> <a>newDeleteReportGroupResponse</a> smart constructor.
data DeleteReportGroupResponse
DeleteReportGroupResponse' :: Int -> DeleteReportGroupResponse

-- | Create a value of <a>DeleteReportGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReportGroupResponse'</a>,
--   <a>deleteReportGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteReportGroupResponse :: Int -> DeleteReportGroupResponse

-- | <i>See:</i> <a>newBatchDeleteBuilds</a> smart constructor.
data BatchDeleteBuilds
BatchDeleteBuilds' :: NonEmpty Text -> BatchDeleteBuilds

-- | Create a value of <a>BatchDeleteBuilds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:BatchDeleteBuilds'</a>, <a>batchDeleteBuilds_ids</a> - The
--   IDs of the builds to delete.
newBatchDeleteBuilds :: NonEmpty Text -> BatchDeleteBuilds

-- | <i>See:</i> <a>newBatchDeleteBuildsResponse</a> smart constructor.
data BatchDeleteBuildsResponse
BatchDeleteBuildsResponse' :: Maybe [BuildNotDeleted] -> Maybe (NonEmpty Text) -> Int -> BatchDeleteBuildsResponse

-- | Create a value of <a>BatchDeleteBuildsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:buildsNotDeleted:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_buildsNotDeleted</a> - Information about
--   any builds that could not be successfully deleted.
--   
--   <a>$sel:buildsDeleted:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_buildsDeleted</a> - The IDs of the builds
--   that were successfully deleted.
--   
--   <a>$sel:httpStatus:BatchDeleteBuildsResponse'</a>,
--   <a>batchDeleteBuildsResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteBuildsResponse :: Int -> BatchDeleteBuildsResponse

-- | <i>See:</i> <a>newListReportGroups</a> smart constructor.
data ListReportGroups
ListReportGroups' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe ReportGroupSortByType -> ListReportGroups

-- | Create a value of <a>ListReportGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListReportGroups'</a>,
--   <a>listReportGroups_sortOrder</a> - Used to specify the order to sort
--   the list of returned report groups. Valid values are
--   <tt>ASCENDING</tt> and <tt>DESCENDING</tt>.
--   
--   <a>$sel:nextToken:ListReportGroups'</a>,
--   <a>listReportGroups_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListReportGroups'</a>,
--   <a>listReportGroups_maxResults</a> - The maximum number of paginated
--   report groups returned per response. Use <tt>nextToken</tt> to iterate
--   pages in the list of returned <tt>ReportGroup</tt> objects. The
--   default value is 100.
--   
--   <a>$sel:sortBy:ListReportGroups'</a>, <a>listReportGroups_sortBy</a> -
--   The criterion to be used to list build report groups. Valid values
--   include:
--   
--   <ul>
--   <li><tt>CREATED_TIME</tt>: List based on when each report group was
--   created.</li>
--   <li><tt>LAST_MODIFIED_TIME</tt>: List based on when each report group
--   was last changed.</li>
--   <li><tt>NAME</tt>: List based on each report group's name.</li>
--   </ul>
newListReportGroups :: ListReportGroups

-- | <i>See:</i> <a>newListReportGroupsResponse</a> smart constructor.
data ListReportGroupsResponse
ListReportGroupsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListReportGroupsResponse

-- | Create a value of <a>ListReportGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReportGroups'</a>,
--   <a>listReportGroupsResponse_nextToken</a> - During a previous call,
--   the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:reportGroups:ListReportGroupsResponse'</a>,
--   <a>listReportGroupsResponse_reportGroups</a> - The list of ARNs for
--   the report groups in the current Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListReportGroupsResponse'</a>,
--   <a>listReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListReportGroupsResponse :: Int -> ListReportGroupsResponse

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Text -> Text -> PutResourcePolicy

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:PutResourcePolicy'</a>, <a>putResourcePolicy_policy</a>
--   - A JSON-formatted resource policy. For more information, see
--   <a>Sharing a Project</a> and <a>Sharing a Report Group</a> in the
--   <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourceArn</a> - The ARN of the <tt>Project</tt>
--   or <tt>ReportGroup</tt> resource you want to associate with a resource
--   policy.
newPutResourcePolicy :: Text -> Text -> PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Int -> PutResourcePolicyResponse

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicyResponse_resourceArn</a> - The ARN of the
--   <tt>Project</tt> or <tt>ReportGroup</tt> resource that is associated
--   with a resource policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Text -> DeleteResourcePolicy

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_resourceArn</a> - The ARN of the resource that
--   is associated with the resource policy.
newDeleteResourcePolicy :: Text -> DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Int -> DeleteResourcePolicyResponse

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | <i>See:</i> <a>newListCuratedEnvironmentImages</a> smart constructor.
data ListCuratedEnvironmentImages
ListCuratedEnvironmentImages' :: ListCuratedEnvironmentImages

-- | Create a value of <a>ListCuratedEnvironmentImages</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newListCuratedEnvironmentImages :: ListCuratedEnvironmentImages

-- | <i>See:</i> <a>newListCuratedEnvironmentImagesResponse</a> smart
--   constructor.
data ListCuratedEnvironmentImagesResponse
ListCuratedEnvironmentImagesResponse' :: Maybe [EnvironmentPlatform] -> Int -> ListCuratedEnvironmentImagesResponse

-- | Create a value of <a>ListCuratedEnvironmentImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platforms:ListCuratedEnvironmentImagesResponse'</a>,
--   <a>listCuratedEnvironmentImagesResponse_platforms</a> - Information
--   about supported platforms for Docker images that are managed by
--   CodeBuild.
--   
--   <a>$sel:httpStatus:ListCuratedEnvironmentImagesResponse'</a>,
--   <a>listCuratedEnvironmentImagesResponse_httpStatus</a> - The
--   response's http status code.
newListCuratedEnvironmentImagesResponse :: Int -> ListCuratedEnvironmentImagesResponse

-- | <i>See:</i> <a>newGetReportGroupTrend</a> smart constructor.
data GetReportGroupTrend
GetReportGroupTrend' :: Maybe Natural -> Text -> ReportGroupTrendFieldType -> GetReportGroupTrend

-- | Create a value of <a>GetReportGroupTrend</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numOfReports:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_numOfReports</a> - The number of reports to
--   analyze. This operation always retrieves the most recent reports.
--   
--   If this parameter is omitted, the most recent 100 reports are
--   analyzed.
--   
--   <a>$sel:reportGroupArn:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_reportGroupArn</a> - The ARN of the report
--   group that contains the reports to analyze.
--   
--   <a>$sel:trendField:GetReportGroupTrend'</a>,
--   <a>getReportGroupTrend_trendField</a> - The test report value to
--   accumulate. This must be one of the following values:
--   
--   <ul>
--   <li><i>Test reports:</i></li>
--   <li><i>DURATION</i> Accumulate the test run times for the specified
--   reports.<ul><li><i>PASS_RATE</i> Accumulate the percentage of tests
--   that passed for the specified test reports.</li><li><i>TOTAL</i>
--   Accumulate the total number of tests for the specified test
--   reports.</li></ul></li>
--   <li><i>Code coverage reports:</i></li>
--   <li><i>BRANCH_COVERAGE</i> Accumulate the branch coverage percentages
--   for the specified test reports.<ul><li><i>BRANCHES_COVERED</i>
--   Accumulate the branches covered values for the specified test
--   reports.</li><li><i>BRANCHES_MISSED</i> Accumulate the branches missed
--   values for the specified test reports.</li><li><i>LINE_COVERAGE</i>
--   Accumulate the line coverage percentages for the specified test
--   reports.</li><li><i>LINES_COVERED</i> Accumulate the lines covered
--   values for the specified test reports.</li><li><i>LINES_MISSED</i>
--   Accumulate the lines not covered values for the specified test
--   reports.</li></ul></li>
--   </ul>
newGetReportGroupTrend :: Text -> ReportGroupTrendFieldType -> GetReportGroupTrend

-- | <i>See:</i> <a>newGetReportGroupTrendResponse</a> smart constructor.
data GetReportGroupTrendResponse
GetReportGroupTrendResponse' :: Maybe [ReportWithRawData] -> Maybe ReportGroupTrendStats -> Int -> GetReportGroupTrendResponse

-- | Create a value of <a>GetReportGroupTrendResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rawData:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_rawData</a> - An array that contains
--   the raw data for each report.
--   
--   <a>$sel:stats:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_stats</a> - Contains the accumulated
--   trend data.
--   
--   <a>$sel:httpStatus:GetReportGroupTrendResponse'</a>,
--   <a>getReportGroupTrendResponse_httpStatus</a> - The response's http
--   status code.
newGetReportGroupTrendResponse :: Int -> GetReportGroupTrendResponse

-- | <i>See:</i> <a>newStopBuild</a> smart constructor.
data StopBuild
StopBuild' :: Text -> StopBuild

-- | Create a value of <a>StopBuild</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:StopBuild'</a>, <a>stopBuild_id</a> - The ID of the build.
newStopBuild :: Text -> StopBuild

-- | <i>See:</i> <a>newStopBuildResponse</a> smart constructor.
data StopBuildResponse
StopBuildResponse' :: Maybe Build -> Int -> StopBuildResponse

-- | Create a value of <a>StopBuildResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:build:StopBuildResponse'</a>, <a>stopBuildResponse_build</a> -
--   Information about the build.
--   
--   <a>$sel:httpStatus:StopBuildResponse'</a>,
--   <a>stopBuildResponse_httpStatus</a> - The response's http status code.
newStopBuildResponse :: Int -> StopBuildResponse

-- | <i>See:</i> <a>newListBuildBatches</a> smart constructor.
data ListBuildBatches
ListBuildBatches' :: Maybe SortOrderType -> Maybe Text -> Maybe BuildBatchFilter -> Maybe Natural -> ListBuildBatches

-- | Create a value of <a>ListBuildBatches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListBuildBatches'</a>,
--   <a>listBuildBatches_sortOrder</a> - Specifies the sort order of the
--   returned items. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List the batch build identifiers in ascending
--   order by identifier.</li>
--   <li><tt>DESCENDING</tt>: List the batch build identifiers in
--   descending order by identifier.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListBuildBatches'</a>,
--   <a>listBuildBatches_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous call to <tt>ListBuildBatches</tt>. This
--   specifies the next item to return. To return the beginning of the
--   list, exclude this parameter.
--   
--   <a>$sel:filter':ListBuildBatches'</a>, <a>listBuildBatches_filter</a>
--   - A <tt>BuildBatchFilter</tt> object that specifies the filters for
--   the search.
--   
--   <a>$sel:maxResults:ListBuildBatches'</a>,
--   <a>listBuildBatches_maxResults</a> - The maximum number of results to
--   return.
newListBuildBatches :: ListBuildBatches

-- | <i>See:</i> <a>newListBuildBatchesResponse</a> smart constructor.
data ListBuildBatchesResponse
ListBuildBatchesResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBuildBatchesResponse

-- | Create a value of <a>ListBuildBatchesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:ListBuildBatchesResponse'</a>,
--   <a>listBuildBatchesResponse_ids</a> - An array of strings that
--   contains the batch build identifiers.
--   
--   <a>$sel:nextToken:ListBuildBatches'</a>,
--   <a>listBuildBatchesResponse_nextToken</a> - If there are more items to
--   return, this contains a token that is passed to a subsequent call to
--   <tt>ListBuildBatches</tt> to retrieve the next set of items.
--   
--   <a>$sel:httpStatus:ListBuildBatchesResponse'</a>,
--   <a>listBuildBatchesResponse_httpStatus</a> - The response's http
--   status code.
newListBuildBatchesResponse :: Int -> ListBuildBatchesResponse

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe [ProjectArtifacts] -> Maybe Int -> Maybe Bool -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe VpcConfig -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> ProjectSource -> ProjectArtifacts -> ProjectEnvironment -> Text -> CreateProject

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:CreateProject'</a>,
--   <a>createProject_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:concurrentBuildLimit:CreateProject'</a>,
--   <a>createProject_concurrentBuildLimit</a> - The maximum number of
--   concurrent builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   <a>$sel:badgeEnabled:CreateProject'</a>,
--   <a>createProject_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:secondarySourceVersions:CreateProject'</a>,
--   <a>createProject_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take precedence over these <tt>secondarySourceVersions</tt> (at
--   the project level).
--   
--   <a>$sel:queuedTimeoutInMinutes:CreateProject'</a>,
--   <a>createProject_queuedTimeoutInMinutes</a> - The number of minutes a
--   build is allowed to be queued before it times out.
--   
--   <a>$sel:cache:CreateProject'</a>, <a>createProject_cache</a> - Stores
--   recently used information so that it can be quickly accessed at a
--   later time.
--   
--   <a>$sel:secondarySources:CreateProject'</a>,
--   <a>createProject_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:CreateProject'</a>,
--   <a>createProject_sourceVersion</a> - A version of the build input to
--   be built for this project. If not specified, the latest version is
--   used. If specified, it must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:vpcConfig:CreateProject'</a>, <a>createProject_vpcConfig</a> -
--   VpcConfig enables CodeBuild to access resources in an Amazon VPC.
--   
--   <a>$sel:logsConfig:CreateProject'</a>, <a>createProject_logsConfig</a>
--   - Information about logs for the build project. These can be logs in
--   CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:CreateProject'</a>,
--   <a>createProject_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:CreateProject'</a>,
--   <a>createProject_buildBatchConfig</a> - A ProjectBuildBatchConfig
--   object that defines the batch build options for the project.
--   
--   <a>$sel:encryptionKey:CreateProject'</a>,
--   <a>createProject_encryptionKey</a> - The Key Management Service
--   customer master key (CMK) to be used for encrypting the build output
--   artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:description:CreateProject'</a>,
--   <a>createProject_description</a> - A description that makes the build
--   project easy to identify.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - A list of
--   tag key and value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:CreateProject'</a>,
--   <a>createProject_timeoutInMinutes</a> - How long, in minutes, from 5
--   to 480 (8 hours), for CodeBuild to wait before it times out any build
--   that has not been marked as completed. The default is 60 minutes.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - The name
--   of the build project.
--   
--   <a>$sel:source:CreateProject'</a>, <a>createProject_source</a> -
--   Information about the build input source code for the build project.
--   
--   <a>$sel:artifacts:CreateProject'</a>, <a>createProject_artifacts</a> -
--   Information about the build output artifacts for the build project.
--   
--   <a>$sel:environment:CreateProject'</a>,
--   <a>createProject_environment</a> - Information about the build
--   environment for the build project.
--   
--   <a>$sel:serviceRole:CreateProject'</a>,
--   <a>createProject_serviceRole</a> - The ARN of the IAM role that
--   enables CodeBuild to interact with dependent Amazon Web Services
--   services on behalf of the Amazon Web Services account.
newCreateProject :: Text -> ProjectSource -> ProjectArtifacts -> ProjectEnvironment -> Text -> CreateProject

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Maybe Project -> Int -> CreateProjectResponse

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:CreateProjectResponse'</a>,
--   <a>createProjectResponse_project</a> - Information about the build
--   project that was created.
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | <i>See:</i> <a>newListSharedReportGroups</a> smart constructor.
data ListSharedReportGroups
ListSharedReportGroups' :: Maybe SortOrderType -> Maybe Text -> Maybe Natural -> Maybe SharedResourceSortByType -> ListSharedReportGroups

-- | Create a value of <a>ListSharedReportGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_sortOrder</a> - The order in which to list
--   shared report groups. Valid values include:
--   
--   <ul>
--   <li><tt>ASCENDING</tt>: List in ascending order.</li>
--   <li><tt>DESCENDING</tt>: List in descending order.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_nextToken</a> - During a previous call, the
--   maximum number of items that can be returned is the value specified in
--   <tt>maxResults</tt>. If there more items in the list, then a unique
--   string called a <i>nextToken</i> is returned. To get the next batch of
--   items in the list, call this operation again, adding the next token to
--   the call. To get all of the items in the list, keep calling this
--   operation with each subsequent next token that is returned, until no
--   more next tokens are returned.
--   
--   <a>$sel:maxResults:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_maxResults</a> - The maximum number of
--   paginated shared report groups per response. Use <tt>nextToken</tt> to
--   iterate pages in the list of returned <tt>ReportGroup</tt> objects.
--   The default value is 100.
--   
--   <a>$sel:sortBy:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroups_sortBy</a> - The criterion to be used to
--   list report groups shared with the current Amazon Web Services account
--   or user. Valid values include:
--   
--   <ul>
--   <li><tt>ARN</tt>: List based on the ARN.</li>
--   <li><tt>MODIFIED_TIME</tt>: List based on when information about the
--   shared report group was last changed.</li>
--   </ul>
newListSharedReportGroups :: ListSharedReportGroups

-- | <i>See:</i> <a>newListSharedReportGroupsResponse</a> smart
--   constructor.
data ListSharedReportGroupsResponse
ListSharedReportGroupsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListSharedReportGroupsResponse

-- | Create a value of <a>ListSharedReportGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSharedReportGroups'</a>,
--   <a>listSharedReportGroupsResponse_nextToken</a> - During a previous
--   call, the maximum number of items that can be returned is the value
--   specified in <tt>maxResults</tt>. If there more items in the list,
--   then a unique string called a <i>nextToken</i> is returned. To get the
--   next batch of items in the list, call this operation again, adding the
--   next token to the call. To get all of the items in the list, keep
--   calling this operation with each subsequent next token that is
--   returned, until no more next tokens are returned.
--   
--   <a>$sel:reportGroups:ListSharedReportGroupsResponse'</a>,
--   <a>listSharedReportGroupsResponse_reportGroups</a> - The list of ARNs
--   for the report groups shared with the current Amazon Web Services
--   account or user.
--   
--   <a>$sel:httpStatus:ListSharedReportGroupsResponse'</a>,
--   <a>listSharedReportGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListSharedReportGroupsResponse :: Int -> ListSharedReportGroupsResponse
newtype ArtifactNamespace
ArtifactNamespace' :: Text -> ArtifactNamespace
[fromArtifactNamespace] :: ArtifactNamespace -> Text
pattern ArtifactNamespace_BUILD_ID :: ArtifactNamespace
pattern ArtifactNamespace_NONE :: ArtifactNamespace
newtype ArtifactPackaging
ArtifactPackaging' :: Text -> ArtifactPackaging
[fromArtifactPackaging] :: ArtifactPackaging -> Text
pattern ArtifactPackaging_NONE :: ArtifactPackaging
pattern ArtifactPackaging_ZIP :: ArtifactPackaging
newtype ArtifactsType
ArtifactsType' :: Text -> ArtifactsType
[fromArtifactsType] :: ArtifactsType -> Text
pattern ArtifactsType_CODEPIPELINE :: ArtifactsType
pattern ArtifactsType_NO_ARTIFACTS :: ArtifactsType
pattern ArtifactsType_S3 :: ArtifactsType
newtype AuthType
AuthType' :: Text -> AuthType
[fromAuthType] :: AuthType -> Text
pattern AuthType_BASIC_AUTH :: AuthType
pattern AuthType_OAUTH :: AuthType
pattern AuthType_PERSONAL_ACCESS_TOKEN :: AuthType
newtype BatchReportModeType
BatchReportModeType' :: Text -> BatchReportModeType
[fromBatchReportModeType] :: BatchReportModeType -> Text
pattern BatchReportModeType_REPORT_AGGREGATED_BATCH :: BatchReportModeType
pattern BatchReportModeType_REPORT_INDIVIDUAL_BUILDS :: BatchReportModeType

-- | Specifies the bucket owner's access for objects that another account
--   uploads to their Amazon S3 bucket. By default, only the account that
--   uploads the objects to the bucket has access to these objects. This
--   property allows you to give the bucket owner access to these objects.
--   
--   To use this property, your CodeBuild service role must have the
--   <tt>s3:PutBucketAcl</tt> permission. This permission allows CodeBuild
--   to modify the access control list for the bucket.
--   
--   This property can be one of the following values:
--   
--   <ul>
--   <li><i>NONE</i> The bucket owner does not have access to the objects.
--   This is the default.</li>
--   <li><i>READ_ONLY</i> The bucket owner has read-only access to the
--   objects. The uploading account retains ownership of the objects.</li>
--   <li><i>FULL</i> The bucket owner has full access to the objects.
--   Object ownership is determined by the following criteria:<ul><li>If
--   the bucket is configured with the <b>Bucket owner preferred</b>
--   setting, the bucket owner owns the objects. The uploading account will
--   have object access as specified by the bucket's
--   policy.</li><li>Otherwise, the uploading account retains ownership of
--   the objects.</li></ul>For more information about Amazon S3 object
--   ownership, see <a>Controlling ownership of uploaded objects using S3
--   Object Ownership</a> in the <i>Amazon Simple Storage Service User
--   Guide</i>.</li>
--   </ul>
newtype BucketOwnerAccess
BucketOwnerAccess' :: Text -> BucketOwnerAccess
[fromBucketOwnerAccess] :: BucketOwnerAccess -> Text
pattern BucketOwnerAccess_FULL :: BucketOwnerAccess
pattern BucketOwnerAccess_NONE :: BucketOwnerAccess
pattern BucketOwnerAccess_READ_ONLY :: BucketOwnerAccess
newtype BuildBatchPhaseType
BuildBatchPhaseType' :: Text -> BuildBatchPhaseType
[fromBuildBatchPhaseType] :: BuildBatchPhaseType -> Text
pattern BuildBatchPhaseType_COMBINE_ARTIFACTS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_DOWNLOAD_BATCHSPEC :: BuildBatchPhaseType
pattern BuildBatchPhaseType_FAILED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_IN_PROGRESS :: BuildBatchPhaseType
pattern BuildBatchPhaseType_STOPPED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUBMITTED :: BuildBatchPhaseType
pattern BuildBatchPhaseType_SUCCEEDED :: BuildBatchPhaseType
newtype BuildPhaseType
BuildPhaseType' :: Text -> BuildPhaseType
[fromBuildPhaseType] :: BuildPhaseType -> Text
pattern BuildPhaseType_BUILD :: BuildPhaseType
pattern BuildPhaseType_COMPLETED :: BuildPhaseType
pattern BuildPhaseType_DOWNLOAD_SOURCE :: BuildPhaseType
pattern BuildPhaseType_FINALIZING :: BuildPhaseType
pattern BuildPhaseType_INSTALL :: BuildPhaseType
pattern BuildPhaseType_POST_BUILD :: BuildPhaseType
pattern BuildPhaseType_PRE_BUILD :: BuildPhaseType
pattern BuildPhaseType_PROVISIONING :: BuildPhaseType
pattern BuildPhaseType_QUEUED :: BuildPhaseType
pattern BuildPhaseType_SUBMITTED :: BuildPhaseType
pattern BuildPhaseType_UPLOAD_ARTIFACTS :: BuildPhaseType
newtype CacheMode
CacheMode' :: Text -> CacheMode
[fromCacheMode] :: CacheMode -> Text
pattern CacheMode_LOCAL_CUSTOM_CACHE :: CacheMode
pattern CacheMode_LOCAL_DOCKER_LAYER_CACHE :: CacheMode
pattern CacheMode_LOCAL_SOURCE_CACHE :: CacheMode
newtype CacheType
CacheType' :: Text -> CacheType
[fromCacheType] :: CacheType -> Text
pattern CacheType_LOCAL :: CacheType
pattern CacheType_NO_CACHE :: CacheType
pattern CacheType_S3 :: CacheType
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_BUILD_GENERAL1_2XLARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_LARGE :: ComputeType
pattern ComputeType_BUILD_GENERAL1_MEDIUM :: ComputeType
pattern ComputeType_BUILD_GENERAL1_SMALL :: ComputeType
newtype CredentialProviderType
CredentialProviderType' :: Text -> CredentialProviderType
[fromCredentialProviderType] :: CredentialProviderType -> Text
pattern CredentialProviderType_SECRETS_MANAGER :: CredentialProviderType
newtype EnvironmentType
EnvironmentType' :: Text -> EnvironmentType
[fromEnvironmentType] :: EnvironmentType -> Text
pattern EnvironmentType_ARM_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_CONTAINER :: EnvironmentType
pattern EnvironmentType_LINUX_GPU_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_CONTAINER :: EnvironmentType
pattern EnvironmentType_WINDOWS_SERVER_2019_CONTAINER :: EnvironmentType
newtype EnvironmentVariableType
EnvironmentVariableType' :: Text -> EnvironmentVariableType
[fromEnvironmentVariableType] :: EnvironmentVariableType -> Text
pattern EnvironmentVariableType_PARAMETER_STORE :: EnvironmentVariableType
pattern EnvironmentVariableType_PLAINTEXT :: EnvironmentVariableType
pattern EnvironmentVariableType_SECRETS_MANAGER :: EnvironmentVariableType
newtype FileSystemType
FileSystemType' :: Text -> FileSystemType
[fromFileSystemType] :: FileSystemType -> Text
pattern FileSystemType_EFS :: FileSystemType
newtype ImagePullCredentialsType
ImagePullCredentialsType' :: Text -> ImagePullCredentialsType
[fromImagePullCredentialsType] :: ImagePullCredentialsType -> Text
pattern ImagePullCredentialsType_CODEBUILD :: ImagePullCredentialsType
pattern ImagePullCredentialsType_SERVICE_ROLE :: ImagePullCredentialsType
newtype LanguageType
LanguageType' :: Text -> LanguageType
[fromLanguageType] :: LanguageType -> Text
pattern LanguageType_ANDROID :: LanguageType
pattern LanguageType_BASE :: LanguageType
pattern LanguageType_DOCKER :: LanguageType
pattern LanguageType_DOTNET :: LanguageType
pattern LanguageType_GOLANG :: LanguageType
pattern LanguageType_JAVA :: LanguageType
pattern LanguageType_NODE_JS :: LanguageType
pattern LanguageType_PHP :: LanguageType
pattern LanguageType_PYTHON :: LanguageType
pattern LanguageType_RUBY :: LanguageType
newtype LogsConfigStatusType
LogsConfigStatusType' :: Text -> LogsConfigStatusType
[fromLogsConfigStatusType] :: LogsConfigStatusType -> Text
pattern LogsConfigStatusType_DISABLED :: LogsConfigStatusType
pattern LogsConfigStatusType_ENABLED :: LogsConfigStatusType
newtype PlatformType
PlatformType' :: Text -> PlatformType
[fromPlatformType] :: PlatformType -> Text
pattern PlatformType_AMAZON_LINUX :: PlatformType
pattern PlatformType_DEBIAN :: PlatformType
pattern PlatformType_UBUNTU :: PlatformType
pattern PlatformType_WINDOWS_SERVER :: PlatformType
newtype ProjectSortByType
ProjectSortByType' :: Text -> ProjectSortByType
[fromProjectSortByType] :: ProjectSortByType -> Text
pattern ProjectSortByType_CREATED_TIME :: ProjectSortByType
pattern ProjectSortByType_LAST_MODIFIED_TIME :: ProjectSortByType
pattern ProjectSortByType_NAME :: ProjectSortByType

-- | Specifies the visibility of the project's builds. Possible values are:
--   
--   <ul>
--   <li><i>PUBLIC_READ</i> The project builds are visible to the
--   public.</li>
--   <li><i>PRIVATE</i> The project builds are not visible to the
--   public.</li>
--   </ul>
newtype ProjectVisibilityType
ProjectVisibilityType' :: Text -> ProjectVisibilityType
[fromProjectVisibilityType] :: ProjectVisibilityType -> Text
pattern ProjectVisibilityType_PRIVATE :: ProjectVisibilityType
pattern ProjectVisibilityType_PUBLIC_READ :: ProjectVisibilityType
newtype ReportCodeCoverageSortByType
ReportCodeCoverageSortByType' :: Text -> ReportCodeCoverageSortByType
[fromReportCodeCoverageSortByType] :: ReportCodeCoverageSortByType -> Text
pattern ReportCodeCoverageSortByType_FILE_PATH :: ReportCodeCoverageSortByType
pattern ReportCodeCoverageSortByType_LINE_COVERAGE_PERCENTAGE :: ReportCodeCoverageSortByType
newtype ReportExportConfigType
ReportExportConfigType' :: Text -> ReportExportConfigType
[fromReportExportConfigType] :: ReportExportConfigType -> Text
pattern ReportExportConfigType_NO_EXPORT :: ReportExportConfigType
pattern ReportExportConfigType_S3 :: ReportExportConfigType
newtype ReportGroupSortByType
ReportGroupSortByType' :: Text -> ReportGroupSortByType
[fromReportGroupSortByType] :: ReportGroupSortByType -> Text
pattern ReportGroupSortByType_CREATED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_LAST_MODIFIED_TIME :: ReportGroupSortByType
pattern ReportGroupSortByType_NAME :: ReportGroupSortByType
newtype ReportGroupStatusType
ReportGroupStatusType' :: Text -> ReportGroupStatusType
[fromReportGroupStatusType] :: ReportGroupStatusType -> Text
pattern ReportGroupStatusType_ACTIVE :: ReportGroupStatusType
pattern ReportGroupStatusType_DELETING :: ReportGroupStatusType
newtype ReportGroupTrendFieldType
ReportGroupTrendFieldType' :: Text -> ReportGroupTrendFieldType
[fromReportGroupTrendFieldType] :: ReportGroupTrendFieldType -> Text
pattern ReportGroupTrendFieldType_BRANCHES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCHES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_BRANCH_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_DURATION :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_COVERED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINES_MISSED :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_LINE_COVERAGE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_PASS_RATE :: ReportGroupTrendFieldType
pattern ReportGroupTrendFieldType_TOTAL :: ReportGroupTrendFieldType
newtype ReportPackagingType
ReportPackagingType' :: Text -> ReportPackagingType
[fromReportPackagingType] :: ReportPackagingType -> Text
pattern ReportPackagingType_NONE :: ReportPackagingType
pattern ReportPackagingType_ZIP :: ReportPackagingType
newtype ReportStatusType
ReportStatusType' :: Text -> ReportStatusType
[fromReportStatusType] :: ReportStatusType -> Text
pattern ReportStatusType_DELETING :: ReportStatusType
pattern ReportStatusType_FAILED :: ReportStatusType
pattern ReportStatusType_GENERATING :: ReportStatusType
pattern ReportStatusType_INCOMPLETE :: ReportStatusType
pattern ReportStatusType_SUCCEEDED :: ReportStatusType
newtype ReportType
ReportType' :: Text -> ReportType
[fromReportType] :: ReportType -> Text
pattern ReportType_CODE_COVERAGE :: ReportType
pattern ReportType_TEST :: ReportType
newtype RetryBuildBatchType
RetryBuildBatchType' :: Text -> RetryBuildBatchType
[fromRetryBuildBatchType] :: RetryBuildBatchType -> Text
pattern RetryBuildBatchType_RETRY_ALL_BUILDS :: RetryBuildBatchType
pattern RetryBuildBatchType_RETRY_FAILED_BUILDS :: RetryBuildBatchType
newtype ServerType
ServerType' :: Text -> ServerType
[fromServerType] :: ServerType -> Text
pattern ServerType_BITBUCKET :: ServerType
pattern ServerType_GITHUB :: ServerType
pattern ServerType_GITHUB_ENTERPRISE :: ServerType
newtype SharedResourceSortByType
SharedResourceSortByType' :: Text -> SharedResourceSortByType
[fromSharedResourceSortByType] :: SharedResourceSortByType -> Text
pattern SharedResourceSortByType_ARN :: SharedResourceSortByType
pattern SharedResourceSortByType_MODIFIED_TIME :: SharedResourceSortByType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_ASCENDING :: SortOrderType
pattern SortOrderType_DESCENDING :: SortOrderType
newtype SourceAuthType
SourceAuthType' :: Text -> SourceAuthType
[fromSourceAuthType] :: SourceAuthType -> Text
pattern SourceAuthType_OAUTH :: SourceAuthType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_BITBUCKET :: SourceType
pattern SourceType_CODECOMMIT :: SourceType
pattern SourceType_CODEPIPELINE :: SourceType
pattern SourceType_GITHUB :: SourceType
pattern SourceType_GITHUB_ENTERPRISE :: SourceType
pattern SourceType_NO_SOURCE :: SourceType
pattern SourceType_S3 :: SourceType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_FAILED :: StatusType
pattern StatusType_FAULT :: StatusType
pattern StatusType_IN_PROGRESS :: StatusType
pattern StatusType_STOPPED :: StatusType
pattern StatusType_SUCCEEDED :: StatusType
pattern StatusType_TIMED_OUT :: StatusType
newtype WebhookBuildType
WebhookBuildType' :: Text -> WebhookBuildType
[fromWebhookBuildType] :: WebhookBuildType -> Text
pattern WebhookBuildType_BUILD :: WebhookBuildType
pattern WebhookBuildType_BUILD_BATCH :: WebhookBuildType
newtype WebhookFilterType
WebhookFilterType' :: Text -> WebhookFilterType
[fromWebhookFilterType] :: WebhookFilterType -> Text
pattern WebhookFilterType_ACTOR_ACCOUNT_ID :: WebhookFilterType
pattern WebhookFilterType_BASE_REF :: WebhookFilterType
pattern WebhookFilterType_COMMIT_MESSAGE :: WebhookFilterType
pattern WebhookFilterType_EVENT :: WebhookFilterType
pattern WebhookFilterType_FILE_PATH :: WebhookFilterType
pattern WebhookFilterType_HEAD_REF :: WebhookFilterType

-- | Specifies restrictions for the batch build.
--   
--   <i>See:</i> <a>newBatchRestrictions</a> smart constructor.
data BatchRestrictions
BatchRestrictions' :: Maybe Int -> Maybe [Text] -> BatchRestrictions

-- | Create a value of <a>BatchRestrictions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumBuildsAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_maximumBuildsAllowed</a> - Specifies the maximum
--   number of builds allowed.
--   
--   <a>$sel:computeTypesAllowed:BatchRestrictions'</a>,
--   <a>batchRestrictions_computeTypesAllowed</a> - An array of strings
--   that specify the compute types that are allowed for the batch build.
--   See <a>Build environment compute types</a> in the <i>CodeBuild User
--   Guide</i> for these values.
newBatchRestrictions :: BatchRestrictions

-- | Information about a build.
--   
--   <i>See:</i> <a>newBuild</a> smart constructor.
data Build
Build' :: Maybe [BuildPhase] -> Maybe Bool -> Maybe [BuildArtifacts] -> Maybe Text -> Maybe [ExportedEnvironmentVariable] -> Maybe Integer -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe NetworkInterface -> Maybe [ProjectSourceVersion] -> Maybe Text -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe DebugSession -> Maybe Text -> Maybe Text -> Maybe LogsLocation -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe StatusType -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Build

-- | Create a value of <a>Build</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:Build'</a>, <a>build_phases</a> - Information about all
--   previous build phases that are complete and information about any
--   current build phase that is not yet complete.
--   
--   <a>$sel:buildComplete:Build'</a>, <a>build_buildComplete</a> - Whether
--   the build is complete. True if complete; otherwise, false.
--   
--   <a>$sel:secondaryArtifacts:Build'</a>, <a>build_secondaryArtifacts</a>
--   - An array of <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:arn:Build'</a>, <a>build_arn</a> - The Amazon Resource Name
--   (ARN) of the build.
--   
--   <a>$sel:exportedEnvironmentVariables:Build'</a>,
--   <a>build_exportedEnvironmentVariables</a> - A list of exported
--   environment variables for this build.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   <a>$sel:buildNumber:Build'</a>, <a>build_buildNumber</a> - The number
--   of the build. For each project, the <tt>buildNumber</tt> of its first
--   build is <tt>1</tt>. The <tt>buildNumber</tt> of each subsequent build
--   is incremented by <tt>1</tt>. If a build is deleted, the
--   <tt>buildNumber</tt> of other builds does not change.
--   
--   <a>$sel:startTime:Build'</a>, <a>build_startTime</a> - When the build
--   process started, expressed in Unix time format.
--   
--   <a>$sel:artifacts:Build'</a>, <a>build_artifacts</a> - Information
--   about the output artifacts for the build.
--   
--   <a>$sel:environment:Build'</a>, <a>build_environment</a> - Information
--   about the build environment for this build.
--   
--   <a>$sel:initiator:Build'</a>, <a>build_initiator</a> - The entity that
--   started the build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name (for example,
--   <tt>MyUserName</tt>).</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:networkInterface:Build'</a>, <a>build_networkInterface</a> -
--   Describes a network interface.
--   
--   <a>$sel:secondarySourceVersions:Build'</a>,
--   <a>build_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:currentPhase:Build'</a>, <a>build_currentPhase</a> - The
--   current build phase.
--   
--   <a>$sel:queuedTimeoutInMinutes:Build'</a>,
--   <a>build_queuedTimeoutInMinutes</a> - The number of minutes a build is
--   allowed to be queued before it times out.
--   
--   <a>$sel:cache:Build'</a>, <a>build_cache</a> - Information about the
--   cache for the build.
--   
--   <a>$sel:secondarySources:Build'</a>, <a>build_secondarySources</a> -
--   An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:debugSession:Build'</a>, <a>build_debugSession</a> - Contains
--   information about the debug session for this build.
--   
--   <a>$sel:sourceVersion:Build'</a>, <a>build_sourceVersion</a> - Any
--   version identifier for the version of the source code to be built. If
--   <tt>sourceVersion</tt> is specified at the project level, then this
--   <tt>sourceVersion</tt> (at the build level) takes precedence.
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:buildBatchArn:Build'</a>, <a>build_buildBatchArn</a> - The ARN
--   of the batch build that this build is a member of, if applicable.
--   
--   <a>$sel:logs:Build'</a>, <a>build_logs</a> - Information about the
--   build's logs in CloudWatch Logs.
--   
--   <a>$sel:resolvedSourceVersion:Build'</a>,
--   <a>build_resolvedSourceVersion</a> - An identifier for the version of
--   this build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:Build'</a>, <a>build_vpcConfig</a> - If your
--   CodeBuild project accesses resources in an Amazon VPC, you provide
--   this parameter that identifies the VPC ID and the list of security
--   group IDs and subnet IDs. The security groups and subnets must belong
--   to the same VPC. You must provide at least one security group and one
--   subnet ID.
--   
--   <a>$sel:endTime:Build'</a>, <a>build_endTime</a> - When the build
--   process ended, expressed in Unix time format.
--   
--   <a>$sel:projectName:Build'</a>, <a>build_projectName</a> - The name of
--   the CodeBuild project.
--   
--   <a>$sel:buildStatus:Build'</a>, <a>build_buildStatus</a> - The current
--   status of the build. Valid values include:
--   
--   <ul>
--   <li><tt>FAILED</tt>: The build failed.</li>
--   <li><tt>FAULT</tt>: The build faulted.</li>
--   <li><tt>IN_PROGRESS</tt>: The build is still in progress.</li>
--   <li><tt>STOPPED</tt>: The build stopped.</li>
--   <li><tt>SUCCEEDED</tt>: The build succeeded.</li>
--   <li><tt>TIMED_OUT</tt>: The build timed out.</li>
--   </ul>
--   
--   <a>$sel:source:Build'</a>, <a>build_source</a> - Information about the
--   source code to be built.
--   
--   <a>$sel:id:Build'</a>, <a>build_id</a> - The unique ID for the build.
--   
--   <a>$sel:fileSystemLocations:Build'</a>,
--   <a>build_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:reportArns:Build'</a>, <a>build_reportArns</a> - An array of
--   the ARNs associated with this build's reports.
--   
--   <a>$sel:encryptionKey:Build'</a>, <a>build_encryptionKey</a> - The Key
--   Management Service customer master key (CMK) to be used for encrypting
--   the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:serviceRole:Build'</a>, <a>build_serviceRole</a> - The name of
--   a service role used for this build.
--   
--   <a>$sel:timeoutInMinutes:Build'</a>, <a>build_timeoutInMinutes</a> -
--   How long, in minutes, for CodeBuild to wait before timing out this
--   build if it does not get marked as completed.
newBuild :: Build

-- | Information about build output artifacts.
--   
--   <i>See:</i> <a>newBuildArtifacts</a> smart constructor.
data BuildArtifacts
BuildArtifacts' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe BucketOwnerAccess -> BuildArtifacts

-- | Create a value of <a>BuildArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:BuildArtifacts'</a>, <a>buildArtifacts_location</a> -
--   Information about the location of the build artifacts.
--   
--   <a>$sel:md5sum:BuildArtifacts'</a>, <a>buildArtifacts_md5sum</a> - The
--   MD5 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:encryptionDisabled:BuildArtifacts'</a>,
--   <a>buildArtifacts_encryptionDisabled</a> - Information that tells you
--   if encryption for build artifacts is disabled.
--   
--   <a>$sel:overrideArtifactName:BuildArtifacts'</a>,
--   <a>buildArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:BuildArtifacts'</a>,
--   <a>buildArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:sha256sum:BuildArtifacts'</a>, <a>buildArtifacts_sha256sum</a>
--   - The SHA-256 hash of the build artifact.
--   
--   You can use this hash along with a checksum tool to confirm file
--   integrity and authenticity.
--   
--   This value is available only if the build project's <tt>packaging</tt>
--   value is set to <tt>ZIP</tt>.
--   
--   <a>$sel:bucketOwnerAccess:BuildArtifacts'</a>,
--   <a>buildArtifacts_bucketOwnerAccess</a> - Undocumented member.
newBuildArtifacts :: BuildArtifacts

-- | Contains information about a batch build.
--   
--   <i>See:</i> <a>newBuildBatch</a> smart constructor.
data BuildBatch
BuildBatch' :: Maybe [BuildBatchPhase] -> Maybe [BuildArtifacts] -> Maybe Int -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe BuildArtifacts -> Maybe ProjectEnvironment -> Maybe Text -> Maybe [ProjectSourceVersion] -> Maybe StatusType -> Maybe Text -> Maybe Integer -> Maybe Int -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe POSIX -> Maybe Text -> Maybe [BuildGroup] -> Maybe ProjectSource -> Maybe Text -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe LogsConfig -> Maybe Text -> Maybe Bool -> BuildBatch

-- | Create a value of <a>BuildBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:phases:BuildBatch'</a>, <a>buildBatch_phases</a> - An array of
--   <tt>BuildBatchPhase</tt> objects the specify the phases of the batch
--   build.
--   
--   <a>$sel:secondaryArtifacts:BuildBatch'</a>,
--   <a>buildBatch_secondaryArtifacts</a> - An array of
--   <tt>BuildArtifacts</tt> objects the define the build artifacts for
--   this batch build.
--   
--   <a>$sel:buildTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_buildTimeoutInMinutes</a> - Specifies the maximum amount
--   of time, in minutes, that the build in a batch must be completed in.
--   
--   <a>$sel:debugSessionEnabled:BuildBatch'</a>,
--   <a>buildBatch_debugSessionEnabled</a> - Specifies if session debugging
--   is enabled for this batch build. For more information, see <a>Viewing
--   a running build in Session Manager</a>. Batch session debugging is not
--   supported for matrix batch builds.
--   
--   <a>$sel:arn:BuildBatch'</a>, <a>buildBatch_arn</a> - The ARN of the
--   batch build.
--   
--   <a>$sel:startTime:BuildBatch'</a>, <a>buildBatch_startTime</a> - The
--   date and time that the batch build started.
--   
--   <a>$sel:artifacts:BuildBatch'</a>, <a>buildBatch_artifacts</a> - A
--   <tt>BuildArtifacts</tt> object the defines the build artifacts for
--   this batch build.
--   
--   <a>$sel:environment:BuildBatch'</a>, <a>buildBatch_environment</a> -
--   Undocumented member.
--   
--   <a>$sel:initiator:BuildBatch'</a>, <a>buildBatch_initiator</a> - The
--   entity that started the batch build. Valid values include:
--   
--   <ul>
--   <li>If CodePipeline started the build, the pipeline's name (for
--   example, <tt>codepipeline/my-demo-pipeline</tt>).</li>
--   <li>If an IAM user started the build, the user's name.</li>
--   <li>If the Jenkins plugin for CodeBuild started the build, the string
--   <tt>CodeBuild-Jenkins-Plugin</tt>.</li>
--   </ul>
--   
--   <a>$sel:secondarySourceVersions:BuildBatch'</a>,
--   <a>buildBatch_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. Each
--   <tt>ProjectSourceVersion</tt> must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   <a>$sel:buildBatchStatus:BuildBatch'</a>,
--   <a>buildBatch_buildBatchStatus</a> - The status of the batch build.
--   
--   <a>$sel:currentPhase:BuildBatch'</a>, <a>buildBatch_currentPhase</a> -
--   The current phase of the batch build.
--   
--   <a>$sel:buildBatchNumber:BuildBatch'</a>,
--   <a>buildBatch_buildBatchNumber</a> - The number of the batch build.
--   For each project, the <tt>buildBatchNumber</tt> of its first batch
--   build is <tt>1</tt>. The <tt>buildBatchNumber</tt> of each subsequent
--   batch build is incremented by <tt>1</tt>. If a batch build is deleted,
--   the <tt>buildBatchNumber</tt> of other batch builds does not change.
--   
--   <a>$sel:queuedTimeoutInMinutes:BuildBatch'</a>,
--   <a>buildBatch_queuedTimeoutInMinutes</a> - Specifies the amount of
--   time, in minutes, that the batch build is allowed to be queued before
--   it times out.
--   
--   <a>$sel:cache:BuildBatch'</a>, <a>buildBatch_cache</a> - Undocumented
--   member.
--   
--   <a>$sel:secondarySources:BuildBatch'</a>,
--   <a>buildBatch_secondarySources</a> - An array of
--   <tt>ProjectSource</tt> objects that define the sources for the batch
--   build.
--   
--   <a>$sel:sourceVersion:BuildBatch'</a>, <a>buildBatch_sourceVersion</a>
--   - The identifier of the version of the source code to be built.
--   
--   <a>$sel:resolvedSourceVersion:BuildBatch'</a>,
--   <a>buildBatch_resolvedSourceVersion</a> - The identifier of the
--   resolved version of this batch build's source code.
--   
--   <ul>
--   <li>For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the
--   commit ID.</li>
--   <li>For CodePipeline, the source revision provided by
--   CodePipeline.</li>
--   <li>For Amazon S3, this does not apply.</li>
--   </ul>
--   
--   <a>$sel:vpcConfig:BuildBatch'</a>, <a>buildBatch_vpcConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:endTime:BuildBatch'</a>, <a>buildBatch_endTime</a> - The date
--   and time that the batch build ended.
--   
--   <a>$sel:projectName:BuildBatch'</a>, <a>buildBatch_projectName</a> -
--   The name of the batch build project.
--   
--   <a>$sel:buildGroups:BuildBatch'</a>, <a>buildBatch_buildGroups</a> -
--   An array of <tt>BuildGroup</tt> objects that define the build groups
--   for the batch build.
--   
--   <a>$sel:source:BuildBatch'</a>, <a>buildBatch_source</a> -
--   Undocumented member.
--   
--   <a>$sel:id:BuildBatch'</a>, <a>buildBatch_id</a> - The identifier of
--   the batch build.
--   
--   <a>$sel:fileSystemLocations:BuildBatch'</a>,
--   <a>buildBatch_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for the batch build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:BuildBatch'</a>,
--   <a>buildBatch_buildBatchConfig</a> - Undocumented member.
--   
--   <a>$sel:encryptionKey:BuildBatch'</a>, <a>buildBatch_encryptionKey</a>
--   - The Key Management Service customer master key (CMK) to be used for
--   encrypting the batch build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>).
--   
--   <a>$sel:logConfig:BuildBatch'</a>, <a>buildBatch_logConfig</a> -
--   Undocumented member.
--   
--   <a>$sel:serviceRole:BuildBatch'</a>, <a>buildBatch_serviceRole</a> -
--   The name of a service role used for builds in the batch.
--   
--   <a>$sel:complete:BuildBatch'</a>, <a>buildBatch_complete</a> -
--   Indicates if the batch build is complete.
newBuildBatch :: BuildBatch

-- | Specifies filters when retrieving batch builds.
--   
--   <i>See:</i> <a>newBuildBatchFilter</a> smart constructor.
data BuildBatchFilter
BuildBatchFilter' :: Maybe StatusType -> BuildBatchFilter

-- | Create a value of <a>BuildBatchFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:BuildBatchFilter'</a>, <a>buildBatchFilter_status</a> -
--   The status of the batch builds to retrieve. Only batch builds that
--   have this status will be retrieved.
newBuildBatchFilter :: BuildBatchFilter

-- | Contains information about a stage for a batch build.
--   
--   <i>See:</i> <a>newBuildBatchPhase</a> smart constructor.
data BuildBatchPhase
BuildBatchPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildBatchPhaseType -> Maybe POSIX -> Maybe Integer -> BuildBatchPhase

-- | Create a value of <a>BuildBatchPhase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildBatchPhase'</a>, <a>buildBatchPhase_contexts</a>
--   - Additional information about the batch build phase. Especially to
--   help troubleshoot a failed batch build.
--   
--   <a>$sel:startTime:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_startTime</a> - When the batch build phase started,
--   expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseStatus</a> - The current status of the batch
--   build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_phaseType</a> - The name of the batch build phase.
--   Valid values include:
--   
--   <ul>
--   <li><i>COMBINE_ARTIFACTS</i> Build output artifacts are being combined
--   and uploaded to the output location.</li>
--   <li><i>DOWNLOAD_BATCHSPEC</i> The batch build specification is being
--   downloaded.</li>
--   <li><i>FAILED</i> One or more of the builds failed.</li>
--   <li><i>IN_PROGRESS</i> The batch build is in progress.</li>
--   <li><i>STOPPED</i> The batch build was stopped.</li>
--   <li><i>SUBMITTED</i> The btach build has been submitted.</li>
--   <li><i>SUCCEEDED</i> The batch build succeeded.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildBatchPhase'</a>, <a>buildBatchPhase_endTime</a> -
--   When the batch build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildBatchPhase'</a>,
--   <a>buildBatchPhase_durationInSeconds</a> - How long, in seconds,
--   between the starting and ending times of the batch build's phase.
newBuildBatchPhase :: BuildBatchPhase

-- | Contains information about a batch build build group. Build groups are
--   used to combine builds that can run in parallel, while still being
--   able to set dependencies on other build groups.
--   
--   <i>See:</i> <a>newBuildGroup</a> smart constructor.
data BuildGroup
BuildGroup' :: Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe BuildSummary -> Maybe [BuildSummary] -> BuildGroup

-- | Create a value of <a>BuildGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:BuildGroup'</a>, <a>buildGroup_identifier</a> -
--   Contains the identifier of the build group.
--   
--   <a>$sel:dependsOn:BuildGroup'</a>, <a>buildGroup_dependsOn</a> - An
--   array of strings that contain the identifiers of the build groups that
--   this build group depends on.
--   
--   <a>$sel:ignoreFailure:BuildGroup'</a>, <a>buildGroup_ignoreFailure</a>
--   - Specifies if failures in this build group can be ignored.
--   
--   <a>$sel:currentBuildSummary:BuildGroup'</a>,
--   <a>buildGroup_currentBuildSummary</a> - A <tt>BuildSummary</tt> object
--   that contains a summary of the current build group.
--   
--   <a>$sel:priorBuildSummaryList:BuildGroup'</a>,
--   <a>buildGroup_priorBuildSummaryList</a> - An array of
--   <tt>BuildSummary</tt> objects that contain summaries of previous build
--   groups.
newBuildGroup :: BuildGroup

-- | Information about a build that could not be successfully deleted.
--   
--   <i>See:</i> <a>newBuildNotDeleted</a> smart constructor.
data BuildNotDeleted
BuildNotDeleted' :: Maybe Text -> Maybe Text -> BuildNotDeleted

-- | Create a value of <a>BuildNotDeleted</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:BuildNotDeleted'</a>, <a>buildNotDeleted_id</a> - The ID of
--   the build that could not be successfully deleted.
--   
--   <a>$sel:statusCode:BuildNotDeleted'</a>,
--   <a>buildNotDeleted_statusCode</a> - Additional information about the
--   build that could not be successfully deleted.
newBuildNotDeleted :: BuildNotDeleted

-- | Information about a stage for a build.
--   
--   <i>See:</i> <a>newBuildPhase</a> smart constructor.
data BuildPhase
BuildPhase' :: Maybe [PhaseContext] -> Maybe POSIX -> Maybe StatusType -> Maybe BuildPhaseType -> Maybe POSIX -> Maybe Integer -> BuildPhase

-- | Create a value of <a>BuildPhase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contexts:BuildPhase'</a>, <a>buildPhase_contexts</a> -
--   Additional information about a build phase, especially to help
--   troubleshoot a failed build.
--   
--   <a>$sel:startTime:BuildPhase'</a>, <a>buildPhase_startTime</a> - When
--   the build phase started, expressed in Unix time format.
--   
--   <a>$sel:phaseStatus:BuildPhase'</a>, <a>buildPhase_phaseStatus</a> -
--   The current status of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>FAILED</i> The build phase failed.</li>
--   <li><i>FAULT</i> The build phase faulted.</li>
--   <li><i>IN_PROGRESS</i> The build phase is still in progress.</li>
--   <li><i>STOPPED</i> The build phase stopped.</li>
--   <li><i>SUCCEEDED</i> The build phase succeeded.</li>
--   <li><i>TIMED_OUT</i> The build phase timed out.</li>
--   </ul>
--   
--   <a>$sel:phaseType:BuildPhase'</a>, <a>buildPhase_phaseType</a> - The
--   name of the build phase. Valid values include:
--   
--   <ul>
--   <li><i>BUILD</i> Core build activities typically occur in this build
--   phase.</li>
--   <li><i>COMPLETED</i> The build has been completed.</li>
--   <li><i>DOWNLOAD_SOURCE</i> Source code is being downloaded in this
--   build phase.</li>
--   <li><i>FINALIZING</i> The build process is completing in this build
--   phase.</li>
--   <li><i>INSTALL</i> Installation activities typically occur in this
--   build phase.</li>
--   <li><i>POST_BUILD</i> Post-build activities typically occur in this
--   build phase.</li>
--   <li><i>PRE_BUILD</i> Pre-build activities typically occur in this
--   build phase.</li>
--   <li><i>PROVISIONING</i> The build environment is being set up.</li>
--   <li><i>QUEUED</i> The build has been submitted and is queued behind
--   other submitted builds.</li>
--   <li><i>SUBMITTED</i> The build has been submitted.</li>
--   <li><i>UPLOAD_ARTIFACTS</i> Build output artifacts are being uploaded
--   to the output location.</li>
--   </ul>
--   
--   <a>$sel:endTime:BuildPhase'</a>, <a>buildPhase_endTime</a> - When the
--   build phase ended, expressed in Unix time format.
--   
--   <a>$sel:durationInSeconds:BuildPhase'</a>,
--   <a>buildPhase_durationInSeconds</a> - How long, in seconds, between
--   the starting and ending times of the build's phase.
newBuildPhase :: BuildPhase

-- | Contains information that defines how the CodeBuild build project
--   reports the build status to the source provider.
--   
--   <i>See:</i> <a>newBuildStatusConfig</a> smart constructor.
data BuildStatusConfig
BuildStatusConfig' :: Maybe Text -> Maybe Text -> BuildStatusConfig

-- | Create a value of <a>BuildStatusConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_context</a> - Specifies the context of the build
--   status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>name</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>context</tt> parameter in the GitHub commit status. For more
--   information, see <a>Create a commit status</a> in the GitHub developer
--   guide.</li>
--   </ul>
--   
--   <a>$sel:targetUrl:BuildStatusConfig'</a>,
--   <a>buildStatusConfig_targetUrl</a> - Specifies the target url of the
--   build status CodeBuild sends to the source provider. The usage of this
--   parameter depends on the source provider.
--   
--   <ul>
--   <li><i>Bitbucket</i> This parameter is used for the <tt>url</tt>
--   parameter in the Bitbucket commit status. For more information, see
--   <a>build</a> in the Bitbucket API documentation.</li>
--   <li><i>GitHub/GitHub Enterprise Server</i> This parameter is used for
--   the <tt>target_url</tt> parameter in the GitHub commit status. For
--   more information, see <a>Create a commit status</a> in the GitHub
--   developer guide.</li>
--   </ul>
newBuildStatusConfig :: BuildStatusConfig

-- | Contains summary information about a batch build group.
--   
--   <i>See:</i> <a>newBuildSummary</a> smart constructor.
data BuildSummary
BuildSummary' :: Maybe [ResolvedArtifact] -> Maybe ResolvedArtifact -> Maybe Text -> Maybe StatusType -> Maybe POSIX -> BuildSummary

-- | Create a value of <a>BuildSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:BuildSummary'</a>,
--   <a>buildSummary_secondaryArtifacts</a> - An array of
--   <tt>ResolvedArtifact</tt> objects that represents the secondary build
--   artifacts for the build group.
--   
--   <a>$sel:primaryArtifact:BuildSummary'</a>,
--   <a>buildSummary_primaryArtifact</a> - A <tt>ResolvedArtifact</tt>
--   object that represents the primary build artifacts for the build
--   group.
--   
--   <a>$sel:arn:BuildSummary'</a>, <a>buildSummary_arn</a> - The batch
--   build ARN.
--   
--   <a>$sel:buildStatus:BuildSummary'</a>, <a>buildSummary_buildStatus</a>
--   - The status of the build group.
--   
--   <ul>
--   <li><i>FAILED</i> The build group failed.</li>
--   <li><i>FAULT</i> The build group faulted.</li>
--   <li><i>IN_PROGRESS</i> The build group is still in progress.</li>
--   <li><i>STOPPED</i> The build group stopped.</li>
--   <li><i>SUCCEEDED</i> The build group succeeded.</li>
--   <li><i>TIMED_OUT</i> The build group timed out.</li>
--   </ul>
--   
--   <a>$sel:requestedOn:BuildSummary'</a>, <a>buildSummary_requestedOn</a>
--   - When the build was started, expressed in Unix time format.
newBuildSummary :: BuildSummary

-- | Information about CloudWatch Logs for a build project.
--   
--   <i>See:</i> <a>newCloudWatchLogsConfig</a> smart constructor.
data CloudWatchLogsConfig
CloudWatchLogsConfig' :: Maybe Text -> Maybe Text -> LogsConfigStatusType -> CloudWatchLogsConfig

-- | Create a value of <a>CloudWatchLogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_groupName</a> - The group name of the logs in
--   CloudWatch Logs. For more information, see <a>Working with Log Groups
--   and Log Streams</a>.
--   
--   <a>$sel:streamName:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_streamName</a> - The prefix of the stream name
--   of the CloudWatch Logs. For more information, see <a>Working with Log
--   Groups and Log Streams</a>.
--   
--   <a>$sel:status:CloudWatchLogsConfig'</a>,
--   <a>cloudWatchLogsConfig_status</a> - The current status of the logs in
--   CloudWatch Logs for a build project. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: CloudWatch Logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: CloudWatch Logs are not enabled for this build
--   project.</li>
--   </ul>
newCloudWatchLogsConfig :: LogsConfigStatusType -> CloudWatchLogsConfig

-- | Contains code coverage report information.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverage</a> smart constructor.
data CodeCoverage
CodeCoverage' :: Maybe POSIX -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Text -> Maybe Double -> Maybe Text -> CodeCoverage

-- | Create a value of <a>CodeCoverage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expired:CodeCoverage'</a>, <a>codeCoverage_expired</a> - The
--   date and time that the tests were run.
--   
--   <a>$sel:branchesMissed:CodeCoverage'</a>,
--   <a>codeCoverage_branchesMissed</a> - The number of conditional
--   branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverage'</a>, <a>codeCoverage_linesMissed</a>
--   - The number of lines that are not covered by your tests.
--   
--   <a>$sel:filePath:CodeCoverage'</a>, <a>codeCoverage_filePath</a> - The
--   path of the test report file.
--   
--   <a>$sel:branchesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_branchesCovered</a> - The number of conditional
--   branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverage'</a>,
--   <a>codeCoverage_linesCovered</a> - The number of lines that are
--   covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_branchCoveragePercentage</a> - The percentage of
--   branches that are covered by your tests.
--   
--   <a>$sel:id:CodeCoverage'</a>, <a>codeCoverage_id</a> - The identifier
--   of the code coverage report.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverage'</a>,
--   <a>codeCoverage_lineCoveragePercentage</a> - The percentage of lines
--   that are covered by your tests.
--   
--   <a>$sel:reportARN:CodeCoverage'</a>, <a>codeCoverage_reportARN</a> -
--   The ARN of the report.
newCodeCoverage :: CodeCoverage

-- | Contains a summary of a code coverage report.
--   
--   Line coverage measures how many statements your tests cover. A
--   statement is a single instruction, not including comments,
--   conditionals, etc.
--   
--   Branch coverage determines if your tests cover every possible branch
--   of a control structure, such as an <tt>if</tt> or <tt>case</tt>
--   statement.
--   
--   <i>See:</i> <a>newCodeCoverageReportSummary</a> smart constructor.
data CodeCoverageReportSummary
CodeCoverageReportSummary' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Double -> CodeCoverageReportSummary

-- | Create a value of <a>CodeCoverageReportSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesMissed</a> - The number of
--   conditional branches that are not covered by your tests.
--   
--   <a>$sel:linesMissed:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesMissed</a> - The number of lines
--   that are not covered by your tests.
--   
--   <a>$sel:branchesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchesCovered</a> - The number of
--   conditional branches that are covered by your tests.
--   
--   <a>$sel:linesCovered:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_linesCovered</a> - The number of lines
--   that are covered by your tests.
--   
--   <a>$sel:branchCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_branchCoveragePercentage</a> - The
--   percentage of branches that are covered by your tests.
--   
--   <a>$sel:lineCoveragePercentage:CodeCoverageReportSummary'</a>,
--   <a>codeCoverageReportSummary_lineCoveragePercentage</a> - The
--   percentage of lines that are covered by your tests.
newCodeCoverageReportSummary :: CodeCoverageReportSummary

-- | Contains information about the debug session for a build. For more
--   information, see <a>Viewing a running build in Session Manager</a>.
--   
--   <i>See:</i> <a>newDebugSession</a> smart constructor.
data DebugSession
DebugSession' :: Maybe Bool -> Maybe Text -> DebugSession

-- | Create a value of <a>DebugSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionEnabled:DebugSession'</a>,
--   <a>debugSession_sessionEnabled</a> - Specifies if session debugging is
--   enabled for this build.
--   
--   <a>$sel:sessionTarget:DebugSession'</a>,
--   <a>debugSession_sessionTarget</a> - Contains the identifier of the
--   Session Manager session used for the build. To work with the paused
--   build, you open this session to examine, control, and resume the
--   build.
newDebugSession :: DebugSession

-- | Information about a Docker image that is managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentImage</a> smart constructor.
data EnvironmentImage
EnvironmentImage' :: Maybe [Text] -> Maybe Text -> Maybe Text -> EnvironmentImage

-- | Create a value of <a>EnvironmentImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versions:EnvironmentImage'</a>,
--   <a>environmentImage_versions</a> - A list of environment image
--   versions.
--   
--   <a>$sel:name:EnvironmentImage'</a>, <a>environmentImage_name</a> - The
--   name of the Docker image.
--   
--   <a>$sel:description:EnvironmentImage'</a>,
--   <a>environmentImage_description</a> - The description of the Docker
--   image.
newEnvironmentImage :: EnvironmentImage

-- | A set of Docker images that are related by programming language and
--   are managed by CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentLanguage</a> smart constructor.
data EnvironmentLanguage
EnvironmentLanguage' :: Maybe [EnvironmentImage] -> Maybe LanguageType -> EnvironmentLanguage

-- | Create a value of <a>EnvironmentLanguage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:images:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_images</a> - The list of Docker images that are
--   related by the specified programming language.
--   
--   <a>$sel:language:EnvironmentLanguage'</a>,
--   <a>environmentLanguage_language</a> - The programming language for the
--   Docker images.
newEnvironmentLanguage :: EnvironmentLanguage

-- | A set of Docker images that are related by platform and are managed by
--   CodeBuild.
--   
--   <i>See:</i> <a>newEnvironmentPlatform</a> smart constructor.
data EnvironmentPlatform
EnvironmentPlatform' :: Maybe PlatformType -> Maybe [EnvironmentLanguage] -> EnvironmentPlatform

-- | Create a value of <a>EnvironmentPlatform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_platform</a> - The platform's name.
--   
--   <a>$sel:languages:EnvironmentPlatform'</a>,
--   <a>environmentPlatform_languages</a> - The list of programming
--   languages that are available for the specified platform.
newEnvironmentPlatform :: EnvironmentPlatform

-- | Information about an environment variable for a build project or a
--   build.
--   
--   <i>See:</i> <a>newEnvironmentVariable</a> smart constructor.
data EnvironmentVariable
EnvironmentVariable' :: Maybe EnvironmentVariableType -> Text -> Text -> EnvironmentVariable

-- | Create a value of <a>EnvironmentVariable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EnvironmentVariable'</a>,
--   <a>environmentVariable_type</a> - The type of environment variable.
--   Valid values include:
--   
--   <ul>
--   <li><tt>PARAMETER_STORE</tt>: An environment variable stored in
--   Systems Manager Parameter Store. To learn how to specify a parameter
--   store environment variable, see <a>env/parameter-store</a> in the
--   <i>CodeBuild User Guide</i>.</li>
--   <li><tt>PLAINTEXT</tt>: An environment variable in plain text format.
--   This is the default value.</li>
--   <li><tt>SECRETS_MANAGER</tt>: An environment variable stored in
--   Secrets Manager. To learn how to specify a secrets manager environment
--   variable, see <a>env/secrets-manager</a> in the <i>CodeBuild User
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:name:EnvironmentVariable'</a>, <a>environmentVariable_name</a>
--   - The name or key of the environment variable.
--   
--   <a>$sel:value:EnvironmentVariable'</a>,
--   <a>environmentVariable_value</a> - The value of the environment
--   variable.
--   
--   We strongly discourage the use of <tt>PLAINTEXT</tt> environment
--   variables to store sensitive values, especially Amazon Web Services
--   secret key IDs and secret access keys. <tt>PLAINTEXT</tt> environment
--   variables can be displayed in plain text using the CodeBuild console
--   and the CLI. For sensitive values, we recommend you use an environment
--   variable of type <tt>PARAMETER_STORE</tt> or <tt>SECRETS_MANAGER</tt>.
newEnvironmentVariable :: Text -> Text -> EnvironmentVariable

-- | Contains information about an exported environment variable.
--   
--   Exported environment variables are used in conjunction with
--   CodePipeline to export environment variables from the current build
--   stage to subsequent stages in the pipeline. For more information, see
--   <a>Working with variables</a> in the <i>CodePipeline User Guide</i>.
--   
--   During a build, the value of a variable is available starting with the
--   <tt>install</tt> phase. It can be updated between the start of the
--   <tt>install</tt> phase and the end of the <tt>post_build</tt> phase.
--   After the <tt>post_build</tt> phase ends, the value of exported
--   variables cannot change.
--   
--   <i>See:</i> <a>newExportedEnvironmentVariable</a> smart constructor.
data ExportedEnvironmentVariable
ExportedEnvironmentVariable' :: Maybe Text -> Maybe Text -> ExportedEnvironmentVariable

-- | Create a value of <a>ExportedEnvironmentVariable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_value</a> - The value assigned to the
--   exported environment variable.
--   
--   <a>$sel:name:ExportedEnvironmentVariable'</a>,
--   <a>exportedEnvironmentVariable_name</a> - The name of the exported
--   environment variable.
newExportedEnvironmentVariable :: ExportedEnvironmentVariable

-- | Information about the Git submodules configuration for an CodeBuild
--   build project.
--   
--   <i>See:</i> <a>newGitSubmodulesConfig</a> smart constructor.
data GitSubmodulesConfig
GitSubmodulesConfig' :: Bool -> GitSubmodulesConfig

-- | Create a value of <a>GitSubmodulesConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fetchSubmodules:GitSubmodulesConfig'</a>,
--   <a>gitSubmodulesConfig_fetchSubmodules</a> - Set to true to fetch Git
--   submodules for your CodeBuild build project.
newGitSubmodulesConfig :: Bool -> GitSubmodulesConfig

-- | Information about logs for a build project. These can be logs in
--   CloudWatch Logs, built in a specified S3 bucket, or both.
--   
--   <i>See:</i> <a>newLogsConfig</a> smart constructor.
data LogsConfig
LogsConfig' :: Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> LogsConfig

-- | Create a value of <a>LogsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:LogsConfig'</a>, <a>logsConfig_s3Logs</a> - Information
--   about logs built to an S3 bucket for a build project. S3 logs are not
--   enabled by default.
--   
--   <a>$sel:cloudWatchLogs:LogsConfig'</a>,
--   <a>logsConfig_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project. CloudWatch Logs are enabled by default.
newLogsConfig :: LogsConfig

-- | Information about build logs in CloudWatch Logs.
--   
--   <i>See:</i> <a>newLogsLocation</a> smart constructor.
data LogsLocation
LogsLocation' :: Maybe Text -> Maybe S3LogsConfig -> Maybe CloudWatchLogsConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LogsLocation

-- | Create a value of <a>LogsLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deepLink:LogsLocation'</a>, <a>logsLocation_deepLink</a> - The
--   URL to an individual build log in CloudWatch Logs.
--   
--   <a>$sel:s3Logs:LogsLocation'</a>, <a>logsLocation_s3Logs</a> -
--   Information about S3 logs for a build project.
--   
--   <a>$sel:cloudWatchLogs:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogs</a> - Information about CloudWatch Logs
--   for a build project.
--   
--   <a>$sel:s3DeepLink:LogsLocation'</a>, <a>logsLocation_s3DeepLink</a> -
--   The URL to a build log in an S3 bucket.
--   
--   <a>$sel:s3LogsArn:LogsLocation'</a>, <a>logsLocation_s3LogsArn</a> -
--   The ARN of S3 logs for a build project. Its format is
--   <tt>arn:${Partition}:s3:::${BucketName}/${ObjectName}</tt>. For more
--   information, see <a>Resources Defined by Amazon S3</a>.
--   
--   <a>$sel:cloudWatchLogsArn:LogsLocation'</a>,
--   <a>logsLocation_cloudWatchLogsArn</a> - The ARN of CloudWatch Logs for
--   a build project. Its format is
--   <tt>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</tt>.
--   For more information, see <a>Resources Defined by CloudWatch Logs</a>.
--   
--   <a>$sel:groupName:LogsLocation'</a>, <a>logsLocation_groupName</a> -
--   The name of the CloudWatch Logs group for the build logs.
--   
--   <a>$sel:streamName:LogsLocation'</a>, <a>logsLocation_streamName</a> -
--   The name of the CloudWatch Logs stream for the build logs.
newLogsLocation :: LogsLocation

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> NetworkInterface

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:NetworkInterface'</a>,
--   <a>networkInterface_subnetId</a> - The ID of the subnet.
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
newNetworkInterface :: NetworkInterface

-- | Additional information about a build phase that has an error. You can
--   use this information for troubleshooting.
--   
--   <i>See:</i> <a>newPhaseContext</a> smart constructor.
data PhaseContext
PhaseContext' :: Maybe Text -> Maybe Text -> PhaseContext

-- | Create a value of <a>PhaseContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:PhaseContext'</a>, <a>phaseContext_message</a> - An
--   explanation of the build phase's context. This might include a command
--   ID and an exit code.
--   
--   <a>$sel:statusCode:PhaseContext'</a>, <a>phaseContext_statusCode</a> -
--   The status code for the context of the build phase.
newPhaseContext :: PhaseContext

-- | Information about a build project.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe [ProjectArtifacts] -> Maybe Text -> Maybe Text -> Maybe ProjectArtifacts -> Maybe ProjectEnvironment -> Maybe POSIX -> Maybe Int -> Maybe [ProjectSourceVersion] -> Maybe Natural -> Maybe ProjectCache -> Maybe [ProjectSource] -> Maybe Text -> Maybe Text -> Maybe VpcConfig -> Maybe Text -> Maybe ProjectSource -> Maybe ProjectBadge -> Maybe LogsConfig -> Maybe [ProjectFileSystemLocation] -> Maybe ProjectBuildBatchConfig -> Maybe Text -> Maybe POSIX -> Maybe ProjectVisibilityType -> Maybe Webhook -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Project

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secondaryArtifacts:Project'</a>,
--   <a>project_secondaryArtifacts</a> - An array of
--   <tt>ProjectArtifacts</tt> objects.
--   
--   <a>$sel:resourceAccessRole:Project'</a>,
--   <a>project_resourceAccessRole</a> - The ARN of the IAM role that
--   enables CodeBuild to access the CloudWatch Logs and Amazon S3
--   artifacts for the project's builds.
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The Amazon Resource
--   Name (ARN) of the build project.
--   
--   <a>$sel:artifacts:Project'</a>, <a>project_artifacts</a> - Information
--   about the build output artifacts for the build project.
--   
--   <a>$sel:environment:Project'</a>, <a>project_environment</a> -
--   Information about the build environment for this build project.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the build
--   project was created, expressed in Unix time format.
--   
--   <a>$sel:concurrentBuildLimit:Project'</a>,
--   <a>project_concurrentBuildLimit</a> - The maximum number of concurrent
--   builds that are allowed for this project.
--   
--   New builds are only started if the current number of builds is less
--   than or equal to this limit. If the current build count meets this
--   limit, new builds are throttled and are not run.
--   
--   <a>$sel:secondarySourceVersions:Project'</a>,
--   <a>project_secondarySourceVersions</a> - An array of
--   <tt>ProjectSourceVersion</tt> objects. If
--   <tt>secondarySourceVersions</tt> is specified at the build level, then
--   they take over these <tt>secondarySourceVersions</tt> (at the project
--   level).
--   
--   <a>$sel:queuedTimeoutInMinutes:Project'</a>,
--   <a>project_queuedTimeoutInMinutes</a> - The number of minutes a build
--   is allowed to be queued before it times out.
--   
--   <a>$sel:cache:Project'</a>, <a>project_cache</a> - Information about
--   the cache for the build project.
--   
--   <a>$sel:secondarySources:Project'</a>, <a>project_secondarySources</a>
--   - An array of <tt>ProjectSource</tt> objects.
--   
--   <a>$sel:sourceVersion:Project'</a>, <a>project_sourceVersion</a> - A
--   version of the build input to be built for this project. If not
--   specified, the latest version is used. If specified, it must be one
--   of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   If <tt>sourceVersion</tt> is specified at the build level, then that
--   version takes precedence over this <tt>sourceVersion</tt> (at the
--   project level).
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The name of the build
--   project.
--   
--   <a>$sel:vpcConfig:Project'</a>, <a>project_vpcConfig</a> - Information
--   about the VPC configuration that CodeBuild accesses.
--   
--   <a>$sel:publicProjectAlias:Project'</a>,
--   <a>project_publicProjectAlias</a> - Contains the project identifier
--   used with the public build APIs.
--   
--   <a>$sel:source:Project'</a>, <a>project_source</a> - Information about
--   the build input source code for this build project.
--   
--   <a>$sel:badge:Project'</a>, <a>project_badge</a> - Information about
--   the build badge for the build project.
--   
--   <a>$sel:logsConfig:Project'</a>, <a>project_logsConfig</a> -
--   Information about logs for the build project. A project can create
--   logs in CloudWatch Logs, an S3 bucket, or both.
--   
--   <a>$sel:fileSystemLocations:Project'</a>,
--   <a>project_fileSystemLocations</a> - An array of
--   <tt>ProjectFileSystemLocation</tt> objects for a CodeBuild build
--   project. A <tt>ProjectFileSystemLocation</tt> object specifies the
--   <tt>identifier</tt>, <tt>location</tt>, <tt>mountOptions</tt>,
--   <tt>mountPoint</tt>, and <tt>type</tt> of a file system created using
--   Amazon Elastic File System.
--   
--   <a>$sel:buildBatchConfig:Project'</a>, <a>project_buildBatchConfig</a>
--   - A ProjectBuildBatchConfig object that defines the batch build
--   options for the project.
--   
--   <a>$sel:encryptionKey:Project'</a>, <a>project_encryptionKey</a> - The
--   Key Management Service customer master key (CMK) to be used for
--   encrypting the build output artifacts.
--   
--   You can use a cross-account KMS key to encrypt the build output
--   artifacts if your service role has permission to that key.
--   
--   You can specify either the Amazon Resource Name (ARN) of the CMK or,
--   if available, the CMK's alias (using the format
--   <tt>alias/&lt;alias-name&gt;</tt>). If you don't specify a value,
--   CodeBuild uses the managed CMK for Amazon Simple Storage Service
--   (Amazon S3).
--   
--   <a>$sel:lastModified:Project'</a>, <a>project_lastModified</a> - When
--   the build project's settings were last modified, expressed in Unix
--   time format.
--   
--   <a>$sel:projectVisibility:Project'</a>,
--   <a>project_projectVisibility</a> - Undocumented member.
--   
--   <a>$sel:webhook:Project'</a>, <a>project_webhook</a> - Information
--   about a webhook that connects repository events to a build project in
--   CodeBuild.
--   
--   <a>$sel:description:Project'</a>, <a>project_description</a> - A
--   description that makes the build project easy to identify.
--   
--   <a>$sel:serviceRole:Project'</a>, <a>project_serviceRole</a> - The ARN
--   of the IAM role that enables CodeBuild to interact with dependent
--   Amazon Web Services services on behalf of the Amazon Web Services
--   account.
--   
--   <a>$sel:tags:Project'</a>, <a>project_tags</a> - A list of tag key and
--   value pairs associated with this build project.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild build project tags.
--   
--   <a>$sel:timeoutInMinutes:Project'</a>, <a>project_timeoutInMinutes</a>
--   - How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait
--   before timing out any related build that did not get marked as
--   completed. The default is 60 minutes.
newProject :: Project

-- | Information about the build output artifacts for the build project.
--   
--   <i>See:</i> <a>newProjectArtifacts</a> smart constructor.
data ProjectArtifacts
ProjectArtifacts' :: Maybe ArtifactPackaging -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe BucketOwnerAccess -> Maybe ArtifactNamespace -> ArtifactsType -> ProjectArtifacts

-- | Create a value of <a>ProjectArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:ProjectArtifacts'</a>,
--   <a>projectArtifacts_packaging</a> - The type of build output artifact
--   to create:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output artifacts instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>NONE</tt>: CodeBuild creates in the output bucket
--   a folder that contains the build output. This is the default if
--   <tt>packaging</tt> is not specified.</li><li><tt>ZIP</tt>: CodeBuild
--   creates in the output bucket a ZIP file that contains the build
--   output.</li></ul></li>
--   </ul>
--   
--   <a>$sel:path:ProjectArtifacts'</a>, <a>projectArtifacts_path</a> -
--   Along with <tt>namespaceType</tt> and <tt>name</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the path to the
--   output artifact. If <tt>path</tt> is not specified, <tt>path</tt> is
--   not used.</li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>NONE</tt>, and <tt>name</tt> is
--   set to <tt>MyArtifact.zip</tt>, the output artifact is stored in the
--   output bucket at <tt>MyArtifacts/MyArtifact.zip</tt>.
--   
--   <a>$sel:location:ProjectArtifacts'</a>,
--   <a>projectArtifacts_location</a> - Information about the build output
--   artifact location:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output locations instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output bucket.</li>
--   </ul>
--   
--   <a>$sel:name:ProjectArtifacts'</a>, <a>projectArtifacts_name</a> -
--   Along with <tt>path</tt> and <tt>namespaceType</tt>, the pattern that
--   CodeBuild uses to name and store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, this is the name of the
--   output artifact object. If you set the name to be a forward slash
--   ("/"), the artifact is stored in the root of the output bucket.</li>
--   </ul>
--   
--   For example:
--   
--   <ul>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, then the output artifact is stored
--   in <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.</li>
--   <li>If <tt>path</tt> is empty, <tt>namespaceType</tt> is set to
--   <tt>NONE</tt>, and <tt>name</tt> is set to "<tt>/</tt>", the output
--   artifact is stored in the root of the output bucket.</li>
--   <li>If <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to "<tt>/</tt>", the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;</tt>.</li>
--   </ul>
--   
--   <a>$sel:encryptionDisabled:ProjectArtifacts'</a>,
--   <a>projectArtifacts_encryptionDisabled</a> - Set to true if you do not
--   want your output artifacts encrypted. This option is valid only if
--   your artifacts type is Amazon S3. If this is set with another
--   artifacts type, an invalidInputException is thrown.
--   
--   <a>$sel:overrideArtifactName:ProjectArtifacts'</a>,
--   <a>projectArtifacts_overrideArtifactName</a> - If this flag is set, a
--   name specified in the buildspec file overrides the artifact name. The
--   name specified in a buildspec file is calculated at build time and
--   uses the Shell Command Language. For example, you can append a date
--   and time to your artifact name so that it is always unique.
--   
--   <a>$sel:artifactIdentifier:ProjectArtifacts'</a>,
--   <a>projectArtifacts_artifactIdentifier</a> - An identifier for this
--   artifact definition.
--   
--   <a>$sel:bucketOwnerAccess:ProjectArtifacts'</a>,
--   <a>projectArtifacts_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:namespaceType:ProjectArtifacts'</a>,
--   <a>projectArtifacts_namespaceType</a> - Along with <tt>path</tt> and
--   <tt>name</tt>, the pattern that CodeBuild uses to determine the name
--   and location to store the output artifact:
--   
--   <ul>
--   <li>If <tt>type</tt> is set to <tt>CODEPIPELINE</tt>, CodePipeline
--   ignores this value if specified. This is because CodePipeline manages
--   its build output names instead of CodeBuild.</li>
--   <li>If <tt>type</tt> is set to <tt>NO_ARTIFACTS</tt>, this value is
--   ignored if specified, because no build output is produced.</li>
--   <li>If <tt>type</tt> is set to <tt>S3</tt>, valid values
--   include:<ul><li><tt>BUILD_ID</tt>: Include the build ID in the
--   location of the build output artifact.</li><li><tt>NONE</tt>: Do not
--   include the build ID. This is the default if <tt>namespaceType</tt> is
--   not specified.</li></ul></li>
--   </ul>
--   
--   For example, if <tt>path</tt> is set to <tt>MyArtifacts</tt>,
--   <tt>namespaceType</tt> is set to <tt>BUILD_ID</tt>, and <tt>name</tt>
--   is set to <tt>MyArtifact.zip</tt>, the output artifact is stored in
--   <tt>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</tt>.
--   
--   <a>$sel:type':ProjectArtifacts'</a>, <a>projectArtifacts_type</a> -
--   The type of build output artifact. Valid values include:
--   
--   <ul>
--   <li><tt>CODEPIPELINE</tt>: The build project has build output
--   generated through CodePipeline.The <tt>CODEPIPELINE</tt> type is not
--   supported for <tt>secondaryArtifacts</tt>.</li>
--   <li><tt>NO_ARTIFACTS</tt>: The build project does not produce any
--   build output.</li>
--   <li><tt>S3</tt>: The build project stores build output in Amazon
--   S3.</li>
--   </ul>
newProjectArtifacts :: ArtifactsType -> ProjectArtifacts

-- | Information about the build badge for the build project.
--   
--   <i>See:</i> <a>newProjectBadge</a> smart constructor.
data ProjectBadge
ProjectBadge' :: Maybe Bool -> Maybe Text -> ProjectBadge

-- | Create a value of <a>ProjectBadge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:badgeEnabled:ProjectBadge'</a>,
--   <a>projectBadge_badgeEnabled</a> - Set this to true to generate a
--   publicly accessible URL for your project's build badge.
--   
--   <a>$sel:badgeRequestUrl:ProjectBadge'</a>,
--   <a>projectBadge_badgeRequestUrl</a> - The publicly-accessible URL
--   through which you can access the build badge for your project.
newProjectBadge :: ProjectBadge

-- | Contains configuration information about a batch build project.
--   
--   <i>See:</i> <a>newProjectBuildBatchConfig</a> smart constructor.
data ProjectBuildBatchConfig
ProjectBuildBatchConfig' :: Maybe Bool -> Maybe Int -> Maybe BatchRestrictions -> Maybe BatchReportModeType -> Maybe Text -> ProjectBuildBatchConfig

-- | Create a value of <a>ProjectBuildBatchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:combineArtifacts:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_combineArtifacts</a> - Specifies if the
--   build artifacts for the batch build should be combined into a single
--   artifact location.
--   
--   <a>$sel:timeoutInMins:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_timeoutInMins</a> - Specifies the maximum
--   amount of time, in minutes, that the batch build must be completed in.
--   
--   <a>$sel:restrictions:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_restrictions</a> - A
--   <tt>BatchRestrictions</tt> object that specifies the restrictions for
--   the batch build.
--   
--   <a>$sel:batchReportMode:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_batchReportMode</a> - Specifies how build
--   status reports are sent to the source provider for the batch build.
--   This property is only used when the source provider for your project
--   is Bitbucket, GitHub, or GitHub Enterprise, and your project is
--   configured to report build statuses to the source provider.
--   
--   <a>REPORT_AGGREGATED_BATCH</a> Aggregate all of the build statuses
--   into a single status report.
--   
--   <ul>
--   <li><i>REPORT_INDIVIDUAL_BUILDS</i> Send a separate status report for
--   each individual build.</li>
--   </ul>
--   
--   <a>$sel:serviceRole:ProjectBuildBatchConfig'</a>,
--   <a>projectBuildBatchConfig_serviceRole</a> - Specifies the service
--   role ARN for the batch build project.
newProjectBuildBatchConfig :: ProjectBuildBatchConfig

-- | Information about the cache for the build project.
--   
--   <i>See:</i> <a>newProjectCache</a> smart constructor.
data ProjectCache
ProjectCache' :: Maybe Text -> Maybe [CacheMode] -> CacheType -> ProjectCache

-- | Create a value of <a>ProjectCache</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectCache'</a>, <a>projectCache_location</a> -
--   Information about the cache location:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt> or <tt>LOCAL</tt>: This value is ignored.</li>
--   <li><tt>S3</tt>: This is the S3 bucket name/prefix.</li>
--   </ul>
--   
--   <a>$sel:modes:ProjectCache'</a>, <a>projectCache_modes</a> - An array
--   of strings that specify the local cache modes. You can use one or more
--   local cache modes at the same time. This is only used for
--   <tt>LOCAL</tt> cache types.
--   
--   Possible values are:
--   
--   <ul>
--   <li><i>LOCAL_SOURCE_CACHE</i> Caches Git metadata for primary and
--   secondary sources. After the cache is created, subsequent builds pull
--   only the change between commits. This mode is a good choice for
--   projects with a clean working directory and a source that is a large
--   Git repository. If you choose this option and your project does not
--   use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
--   option is ignored.</li>
--   <li><i>LOCAL_DOCKER_LAYER_CACHE</i> Caches existing Docker layers.
--   This mode is a good choice for projects that build or pull large
--   Docker images. It can prevent the performance issues caused by pulling
--   large Docker images down from the network.<ul><li>You can use a Docker
--   layer cache in the Linux environment only.</li><li>The
--   <tt>privileged</tt> flag must be set so that your project has the
--   required Docker permissions.</li><li>You should consider the security
--   implications before you use a Docker layer cache.</li></ul></li>
--   <li><i>LOCAL_CUSTOM_CACHE</i> Caches directories you specify in the
--   buildspec file. This mode is a good choice if your build scenario is
--   not suited to one of the other three local cache modes. If you use a
--   custom cache:<ul><li>Only directories can be specified for caching.
--   You cannot specify individual files.</li><li>Symlinks are used to
--   reference cached directories.</li><li>Cached directories are linked to
--   your build before it downloads its project sources. Cached items are
--   overridden if a source item has the same name. Directories are
--   specified using cache paths in the buildspec file.</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ProjectCache'</a>, <a>projectCache_type</a> - The type
--   of cache used by the build project. Valid values include:
--   
--   <ul>
--   <li><tt>NO_CACHE</tt>: The build project does not use any cache.</li>
--   <li><tt>S3</tt>: The build project reads and writes from and to
--   S3.</li>
--   <li><tt>LOCAL</tt>: The build project stores a cache locally on a
--   build host that is only available to that build host.</li>
--   </ul>
newProjectCache :: CacheType -> ProjectCache

-- | Information about the build environment of the build project.
--   
--   <i>See:</i> <a>newProjectEnvironment</a> smart constructor.
data ProjectEnvironment
ProjectEnvironment' :: Maybe ImagePullCredentialsType -> Maybe Bool -> Maybe RegistryCredential -> Maybe Text -> Maybe [EnvironmentVariable] -> EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | Create a value of <a>ProjectEnvironment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePullCredentialsType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_imagePullCredentialsType</a> - The type of
--   credentials CodeBuild uses to pull images in your build. There are two
--   valid values:
--   
--   <ul>
--   <li><tt>CODEBUILD</tt> specifies that CodeBuild uses its own
--   credentials. This requires that you modify your ECR repository policy
--   to trust CodeBuild service principal.</li>
--   <li><tt>SERVICE_ROLE</tt> specifies that CodeBuild uses your build
--   project's service role.</li>
--   </ul>
--   
--   When you use a cross-account or private registry image, you must use
--   SERVICE_ROLE credentials. When you use an CodeBuild curated image, you
--   must use CODEBUILD credentials.
--   
--   <a>$sel:privilegedMode:ProjectEnvironment'</a>,
--   <a>projectEnvironment_privilegedMode</a> - Enables running the Docker
--   daemon inside a Docker container. Set to true only if the build
--   project is used to build Docker images. Otherwise, a build that
--   attempts to interact with the Docker daemon fails. The default setting
--   is <tt>false</tt>.
--   
--   You can initialize the Docker daemon during the install phase of your
--   build by adding one of the following sets of commands to the install
--   phase of your buildspec file:
--   
--   If the operating system's base image is Ubuntu Linux:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   If the operating system's base image is Alpine Linux and the previous
--   command does not work, add the <tt>-t</tt> argument to
--   <tt>timeout</tt>:
--   
--   <pre>
--   - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;
--   </pre>
--   
--   <pre>
--   - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
--   </pre>
--   
--   <a>$sel:registryCredential:ProjectEnvironment'</a>,
--   <a>projectEnvironment_registryCredential</a> - The credentials for
--   access to a private registry.
--   
--   <a>$sel:certificate:ProjectEnvironment'</a>,
--   <a>projectEnvironment_certificate</a> - The ARN of the Amazon S3
--   bucket, path prefix, and object key that contains the PEM-encoded
--   certificate for the build project. For more information, see
--   <a>certificate</a> in the <i>CodeBuild User Guide</i>.
--   
--   <a>$sel:environmentVariables:ProjectEnvironment'</a>,
--   <a>projectEnvironment_environmentVariables</a> - A set of environment
--   variables to make available to builds for this build project.
--   
--   <a>$sel:type':ProjectEnvironment'</a>, <a>projectEnvironment_type</a>
--   - The type of build environment to use for related builds.
--   
--   <ul>
--   <li>The environment type <tt>ARM_CONTAINER</tt> is available only in
--   regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU
--   (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific
--   (Sydney), and EU (Frankfurt).</li>
--   <li>The environment type <tt>LINUX_CONTAINER</tt> with compute type
--   <tt>build.general1.2xlarge</tt> is available only in regions US East
--   (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU
--   (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia
--   Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
--   China (Beijing), and China (Ningxia).</li>
--   <li>The environment type <tt>LINUX_GPU_CONTAINER</tt> is available
--   only in regions US East (N. Virginia), US East (Ohio), US West
--   (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt),
--   Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore),
--   Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).</li>
--   <li>The environment types <tt>WINDOWS_CONTAINER</tt> and
--   <tt>WINDOWS_SERVER_2019_CONTAINER</tt> are available only in regions
--   US East (N. Virginia), US East (Ohio), US West (Oregon), and EU
--   (Ireland).</li>
--   </ul>
--   
--   For more information, see <a>Build environment compute types</a> in
--   the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:image:ProjectEnvironment'</a>, <a>projectEnvironment_image</a>
--   - The image tag or image digest that identifies the Docker image to
--   use for this build project. Use the following formats:
--   
--   <ul>
--   <li>For an image tag:
--   <tt>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</tt>. For example,
--   in the Docker repository that CodeBuild uses to manage its Docker
--   images, this would be <tt>aws/codebuild/standard:4.0</tt>.</li>
--   <li>For an image digest:
--   <tt>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</tt>. For
--   example, to specify an image with the digest
--   "sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,"
--   use
--   <tt>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</tt>.</li>
--   </ul>
--   
--   For more information, see <a>Docker images provided by CodeBuild</a>
--   in the <i>CodeBuild user guide</i>.
--   
--   <a>$sel:computeType:ProjectEnvironment'</a>,
--   <a>projectEnvironment_computeType</a> - Information about the compute
--   resources the build project uses. Available values include:
--   
--   <ul>
--   <li><tt>BUILD_GENERAL1_SMALL</tt>: Use up to 3 GB memory and 2 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_MEDIUM</tt>: Use up to 7 GB memory and 4 vCPUs
--   for builds.</li>
--   <li><tt>BUILD_GENERAL1_LARGE</tt>: Use up to 16 GB memory and 8 vCPUs
--   for builds, depending on your environment type.</li>
--   <li><tt>BUILD_GENERAL1_2XLARGE</tt>: Use up to 145 GB memory, 72
--   vCPUs, and 824 GB of SSD storage for builds. This compute type
--   supports Docker images up to 100 GB uncompressed.</li>
--   </ul>
--   
--   If you use <tt>BUILD_GENERAL1_LARGE</tt>:
--   
--   <ul>
--   <li>For environment type <tt>LINUX_CONTAINER</tt>, you can use up to
--   15 GB memory and 8 vCPUs for builds.</li>
--   <li>For environment type <tt>LINUX_GPU_CONTAINER</tt>, you can use up
--   to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for
--   builds.</li>
--   <li>For environment type <tt>ARM_CONTAINER</tt>, you can use up to 16
--   GB memory and 8 vCPUs on ARM-based processors for builds.</li>
--   </ul>
--   
--   For more information, see <a>Build Environment Compute Types</a> in
--   the <i>CodeBuild User Guide.</i>
newProjectEnvironment :: EnvironmentType -> Text -> ComputeType -> ProjectEnvironment

-- | Information about a file system created by Amazon Elastic File System
--   (EFS). For more information, see <a>What Is Amazon Elastic File
--   System?</a>
--   
--   <i>See:</i> <a>newProjectFileSystemLocation</a> smart constructor.
data ProjectFileSystemLocation
ProjectFileSystemLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FileSystemType -> Maybe Text -> ProjectFileSystemLocation

-- | Create a value of <a>ProjectFileSystemLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_location</a> - A string that specifies
--   the location of the file system created by Amazon EFS. Its format is
--   <tt>efs-dns-name:/directory-path</tt>. You can find the DNS name of
--   file system when you view it in the Amazon EFS console. The directory
--   path is a path to a directory in the file system that CodeBuild
--   mounts. For example, if the DNS name of a file system is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com</tt>, and its mount
--   directory is <tt>my-efs-mount-directory</tt>, then the
--   <tt>location</tt> is
--   <tt>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</tt>.
--   
--   The directory path in the format <tt>efs-dns-name:/directory-path</tt>
--   is optional. If you do not specify a directory path, the location is
--   only the DNS name and CodeBuild mounts the entire file system.
--   
--   <a>$sel:identifier:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_identifier</a> - The name used to access
--   a file system created by Amazon EFS. CodeBuild creates an environment
--   variable by appending the <tt>identifier</tt> in all capital letters
--   to <tt>CODEBUILD_</tt>. For example, if you specify <tt>my_efs</tt>
--   for <tt>identifier</tt>, a new environment variable is create named
--   <tt>CODEBUILD_MY_EFS</tt>.
--   
--   The <tt>identifier</tt> is used to mount your file system.
--   
--   <a>$sel:mountOptions:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountOptions</a> - The mount options for
--   a file system created by Amazon EFS. The default mount options used by
--   CodeBuild are
--   <tt>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</tt>.
--   For more information, see <a>Recommended NFS Mount Options</a>.
--   
--   <a>$sel:type':ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_type</a> - The type of the file system.
--   The one supported type is <tt>EFS</tt>.
--   
--   <a>$sel:mountPoint:ProjectFileSystemLocation'</a>,
--   <a>projectFileSystemLocation_mountPoint</a> - The location in the
--   container where you mount the file system.
newProjectFileSystemLocation :: ProjectFileSystemLocation

-- | Information about the build input source code for the build project.
--   
--   <i>See:</i> <a>newProjectSource</a> smart constructor.
data ProjectSource
ProjectSource' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe SourceAuth -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe GitSubmodulesConfig -> Maybe BuildStatusConfig -> SourceType -> ProjectSource

-- | Create a value of <a>ProjectSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportBuildStatus:ProjectSource'</a>,
--   <a>projectSource_reportBuildStatus</a> - Set to true to report the
--   status of a build's start and finish to your source provider. This
--   option is valid only when your source provider is GitHub, GitHub
--   Enterprise, or Bitbucket. If this is set and you use a different
--   source provider, an <tt>invalidInputException</tt> is thrown.
--   
--   To be able to report the build status to the source provider, the user
--   associated with the source provider must have write access to the
--   repo. If the user does not have write access, the build status cannot
--   be updated. For more information, see <a>Source provider access</a> in
--   the <i>CodeBuild User Guide</i>.
--   
--   The status of a build triggered by a webhook is always reported to
--   your source provider.
--   
--   If your project's builds are triggered by a webhook, you must push a
--   new commit to the repo for a change to this property to take effect.
--   
--   <a>$sel:insecureSsl:ProjectSource'</a>,
--   <a>projectSource_insecureSsl</a> - Enable this flag to ignore SSL
--   warnings while connecting to the project source code.
--   
--   <a>$sel:location:ProjectSource'</a>, <a>projectSource_location</a> -
--   Information about the location of the source code to be built. Valid
--   values include:
--   
--   <ul>
--   <li>For source code settings that are specified in the source action
--   of a pipeline in CodePipeline, <tt>location</tt> should not be
--   specified. If it is specified, CodePipeline ignores it. This is
--   because CodePipeline uses the settings in a pipeline's source action
--   instead of this value.</li>
--   <li>For source code in an CodeCommit repository, the HTTPS clone URL
--   to the repository that contains the source code and the buildspec file
--   (for example,
--   <tt>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</tt>).</li>
--   <li>For source code in an Amazon S3 input bucket, one of the
--   following.<ul><li>The path to the ZIP file that contains the source
--   code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</tt>).</li><li>The
--   path to the folder that contains the source code (for example,
--   <tt>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</tt>).</li></ul></li>
--   <li>For source code in a GitHub repository, the HTTPS clone URL to the
--   repository that contains the source and the buildspec file. You must
--   connect your Amazon Web Services account to your GitHub account. Use
--   the CodeBuild console to start creating a build project. When you use
--   the console to connect (or reconnect) with GitHub, on the GitHub
--   <b>Authorize application</b> page, for <b>Organization access</b>,
--   choose <b>Request access</b> next to each repository you want to allow
--   CodeBuild to have access to, and then choose __Authorize
--   application__. (After you have connected to your GitHub account, you
--   do not need to finish creating the build project. You can leave the
--   CodeBuild console.) To instruct CodeBuild to use this connection, in
--   the <tt>source</tt> object, set the <tt>auth</tt> object's
--   <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   <li>For source code in a Bitbucket repository, the HTTPS clone URL to
--   the repository that contains the source and the buildspec file. You
--   must connect your Amazon Web Services account to your Bitbucket
--   account. Use the CodeBuild console to start creating a build project.
--   When you use the console to connect (or reconnect) with Bitbucket, on
--   the Bitbucket <b>Confirm access to your account</b> page, choose
--   <b>Grant access</b>. (After you have connected to your Bitbucket
--   account, you do not need to finish creating the build project. You can
--   leave the CodeBuild console.) To instruct CodeBuild to use this
--   connection, in the <tt>source</tt> object, set the <tt>auth</tt>
--   object's <tt>type</tt> value to <tt>OAUTH</tt>.</li>
--   </ul>
--   
--   If you specify <tt>CODEPIPELINE</tt> for the <tt>Type</tt> property,
--   don't specify this property. For all of the other types, you must
--   specify <tt>Location</tt>.
--   
--   <a>$sel:auth:ProjectSource'</a>, <a>projectSource_auth</a> -
--   Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <a>$sel:buildspec:ProjectSource'</a>, <a>projectSource_buildspec</a> -
--   The buildspec file declaration to use for the builds in this build
--   project.
--   
--   If this value is set, it can be either an inline buildspec definition,
--   the path to an alternate buildspec file relative to the value of the
--   built-in <tt>CODEBUILD_SRC_DIR</tt> environment variable, or the path
--   to an S3 bucket. The bucket must be in the same Amazon Web Services
--   Region as the build project. Specify the buildspec file using its ARN
--   (for example,
--   <tt>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</tt>). If this
--   value is not provided or is set to an empty string, the source code
--   must contain a buildspec file in its root directory. For more
--   information, see <a>Buildspec File Name and Storage Location</a>.
--   
--   <a>$sel:sourceIdentifier:ProjectSource'</a>,
--   <a>projectSource_sourceIdentifier</a> - An identifier for this project
--   source. The identifier can only contain alphanumeric characters and
--   underscores, and must be less than 128 characters in length.
--   
--   <a>$sel:gitCloneDepth:ProjectSource'</a>,
--   <a>projectSource_gitCloneDepth</a> - Information about the Git clone
--   depth for the build project.
--   
--   <a>$sel:gitSubmodulesConfig:ProjectSource'</a>,
--   <a>projectSource_gitSubmodulesConfig</a> - Information about the Git
--   submodules configuration for the build project.
--   
--   <a>$sel:buildStatusConfig:ProjectSource'</a>,
--   <a>projectSource_buildStatusConfig</a> - Contains information that
--   defines how the build project reports the build status to the source
--   provider. This option is only used when the source provider is
--   <tt>GITHUB</tt>, <tt>GITHUB_ENTERPRISE</tt>, or <tt>BITBUCKET</tt>.
--   
--   <a>$sel:type':ProjectSource'</a>, <a>projectSource_type</a> - The type
--   of repository that contains the source code to be built. Valid values
--   include:
--   
--   <ul>
--   <li><tt>BITBUCKET</tt>: The source code is in a Bitbucket
--   repository.</li>
--   <li><tt>CODECOMMIT</tt>: The source code is in an CodeCommit
--   repository.</li>
--   <li><tt>CODEPIPELINE</tt>: The source code settings are specified in
--   the source action of a pipeline in CodePipeline.</li>
--   <li><tt>GITHUB</tt>: The source code is in a GitHub or GitHub
--   Enterprise Cloud repository.</li>
--   <li><tt>GITHUB_ENTERPRISE</tt>: The source code is in a GitHub
--   Enterprise Server repository.</li>
--   <li><tt>NO_SOURCE</tt>: The project does not have input source
--   code.</li>
--   <li><tt>S3</tt>: The source code is in an Amazon S3 bucket.</li>
--   </ul>
newProjectSource :: SourceType -> ProjectSource

-- | A source identifier and its corresponding version.
--   
--   <i>See:</i> <a>newProjectSourceVersion</a> smart constructor.
data ProjectSourceVersion
ProjectSourceVersion' :: Text -> Text -> ProjectSourceVersion

-- | Create a value of <a>ProjectSourceVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceIdentifier:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceIdentifier</a> - An identifier for a
--   source in the build project. The identifier can only contain
--   alphanumeric characters and underscores, and must be less than 128
--   characters in length.
--   
--   <a>$sel:sourceVersion:ProjectSourceVersion'</a>,
--   <a>projectSourceVersion_sourceVersion</a> - The source version for the
--   corresponding source identifier. If specified, must be one of:
--   
--   <ul>
--   <li>For CodeCommit: the commit ID, branch, or Git tag to use.</li>
--   <li>For GitHub: the commit ID, pull request ID, branch name, or tag
--   name that corresponds to the version of the source code you want to
--   build. If a pull request ID is specified, it must use the format
--   <tt>pr/pull-request-ID</tt> (for example, <tt>pr/25</tt>). If a branch
--   name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Bitbucket: the commit ID, branch name, or tag name that
--   corresponds to the version of the source code you want to build. If a
--   branch name is specified, the branch's HEAD commit ID is used. If not
--   specified, the default branch's HEAD commit ID is used.</li>
--   <li>For Amazon S3: the version ID of the object that represents the
--   build input ZIP file to use.</li>
--   </ul>
--   
--   For more information, see <a>Source Version Sample with CodeBuild</a>
--   in the <i>CodeBuild User Guide</i>.
newProjectSourceVersion :: Text -> Text -> ProjectSourceVersion

-- | Information about credentials that provide access to a private Docker
--   registry. When this is set:
--   
--   <ul>
--   <li><tt>imagePullCredentialsType</tt> must be set to
--   <tt>SERVICE_ROLE</tt>.</li>
--   <li>images cannot be curated or an Amazon ECR image.</li>
--   </ul>
--   
--   For more information, see <a>Private Registry with Secrets Manager
--   Sample for CodeBuild</a>.
--   
--   <i>See:</i> <a>newRegistryCredential</a> smart constructor.
data RegistryCredential
RegistryCredential' :: Text -> CredentialProviderType -> RegistryCredential

-- | Create a value of <a>RegistryCredential</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credential:RegistryCredential'</a>,
--   <a>registryCredential_credential</a> - The Amazon Resource Name (ARN)
--   or name of credentials created using Secrets Manager.
--   
--   The <tt>credential</tt> can use the name of the credentials only if
--   they exist in your current Amazon Web Services Region.
--   
--   <a>$sel:credentialProvider:RegistryCredential'</a>,
--   <a>registryCredential_credentialProvider</a> - The service that
--   created the credentials to access a private Docker registry. The valid
--   value, SECRETS_MANAGER, is for Secrets Manager.
newRegistryCredential :: Text -> CredentialProviderType -> RegistryCredential

-- | Information about the results from running a series of test cases
--   during the run of a build project. The test cases are specified in the
--   buildspec for the build project using one or more paths to the test
--   case files. You can specify any type of tests you want, such as unit
--   tests, integration tests, and functional tests.
--   
--   <i>See:</i> <a>newReport</a> smart constructor.
data Report
Report' :: Maybe Text -> Maybe ReportStatusType -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CodeCoverageReportSummary -> Maybe TestReportSummary -> Maybe ReportType -> Maybe ReportExportConfig -> Report

-- | Create a value of <a>Report</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reportGroupArn:Report'</a>, <a>report_reportGroupArn</a> - The
--   ARN of the report group associated with this report.
--   
--   <a>$sel:status:Report'</a>, <a>report_status</a> - The status of this
--   report.
--   
--   <a>$sel:expired:Report'</a>, <a>report_expired</a> - The date and time
--   a report expires. A report expires 30 days after it is created. An
--   expired report is not available to view in CodeBuild.
--   
--   <a>$sel:executionId:Report'</a>, <a>report_executionId</a> - The ARN
--   of the build run that generated this report.
--   
--   <a>$sel:truncated:Report'</a>, <a>report_truncated</a> - A boolean
--   that specifies if this report run is truncated. The list of test cases
--   is truncated after the maximum number of test cases is reached.
--   
--   <a>$sel:arn:Report'</a>, <a>report_arn</a> - The ARN of the report
--   run.
--   
--   <a>$sel:created:Report'</a>, <a>report_created</a> - The date and time
--   this report run occurred.
--   
--   <a>$sel:name:Report'</a>, <a>report_name</a> - The name of the report
--   that was run.
--   
--   <a>$sel:codeCoverageSummary:Report'</a>,
--   <a>report_codeCoverageSummary</a> - A
--   <tt>CodeCoverageReportSummary</tt> object that contains a code
--   coverage summary for this report.
--   
--   <a>$sel:testSummary:Report'</a>, <a>report_testSummary</a> - A
--   <tt>TestReportSummary</tt> object that contains information about this
--   test report.
--   
--   <a>$sel:type':Report'</a>, <a>report_type</a> - The type of the report
--   that was run.
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> A code coverage report.</li>
--   <li><i>TEST</i> A test report.</li>
--   </ul>
--   
--   <a>$sel:exportConfig:Report'</a>, <a>report_exportConfig</a> -
--   Information about where the raw data used to generate this report was
--   exported.
newReport :: Report

-- | Information about the location where the run of a report is exported.
--   
--   <i>See:</i> <a>newReportExportConfig</a> smart constructor.
data ReportExportConfig
ReportExportConfig' :: Maybe ReportExportConfigType -> Maybe S3ReportExportConfig -> ReportExportConfig

-- | Create a value of <a>ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportConfigType:ReportExportConfig'</a>,
--   <a>reportExportConfig_exportConfigType</a> - The export configuration
--   type. Valid values are:
--   
--   <ul>
--   <li><tt>S3</tt>: The report results are exported to an S3 bucket.</li>
--   <li><tt>NO_EXPORT</tt>: The report results are not exported.</li>
--   </ul>
--   
--   <a>$sel:s3Destination:ReportExportConfig'</a>,
--   <a>reportExportConfig_s3Destination</a> - A
--   <tt>S3ReportExportConfig</tt> object that contains information about
--   the S3 bucket where the run of a report is exported.
newReportExportConfig :: ReportExportConfig

-- | A filter used to return reports with the status specified by the input
--   <tt>status</tt> parameter.
--   
--   <i>See:</i> <a>newReportFilter</a> smart constructor.
data ReportFilter
ReportFilter' :: Maybe ReportStatusType -> ReportFilter

-- | Create a value of <a>ReportFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportFilter'</a>, <a>reportFilter_status</a> - The
--   status used to filter reports. You can filter using one status only.
newReportFilter :: ReportFilter

-- | A series of reports. Each report contains information about the
--   results from running a series of test cases. You specify the test
--   cases for a report group in the buildspec for a build project using
--   one or more paths to the test case files.
--   
--   <i>See:</i> <a>newReportGroup</a> smart constructor.
data ReportGroup
ReportGroup' :: Maybe ReportGroupStatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ReportType -> Maybe POSIX -> Maybe ReportExportConfig -> Maybe [Tag] -> ReportGroup

-- | Create a value of <a>ReportGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReportGroup'</a>, <a>reportGroup_status</a> - The
--   status of the report group. This property is read-only.
--   
--   This can be one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The report group is active.</li>
--   <li><i>DELETING</i> The report group is in the process of being
--   deleted.</li>
--   </ul>
--   
--   <a>$sel:arn:ReportGroup'</a>, <a>reportGroup_arn</a> - The ARN of the
--   <tt>ReportGroup</tt>.
--   
--   <a>$sel:created:ReportGroup'</a>, <a>reportGroup_created</a> - The
--   date and time this <tt>ReportGroup</tt> was created.
--   
--   <a>$sel:name:ReportGroup'</a>, <a>reportGroup_name</a> - The name of
--   the <tt>ReportGroup</tt>.
--   
--   <a>$sel:type':ReportGroup'</a>, <a>reportGroup_type</a> - The type of
--   the <tt>ReportGroup</tt>. This can be one of the following values:
--   
--   <ul>
--   <li><i>CODE_COVERAGE</i> The report group contains code coverage
--   reports.</li>
--   <li><i>TEST</i> The report group contains test reports.</li>
--   </ul>
--   
--   <a>$sel:lastModified:ReportGroup'</a>, <a>reportGroup_lastModified</a>
--   - The date and time this <tt>ReportGroup</tt> was last modified.
--   
--   <a>$sel:exportConfig:ReportGroup'</a>, <a>reportGroup_exportConfig</a>
--   - Information about the destination where the raw data of this
--   <tt>ReportGroup</tt> is exported.
--   
--   <a>$sel:tags:ReportGroup'</a>, <a>reportGroup_tags</a> - A list of tag
--   key and value pairs associated with this report group.
--   
--   These tags are available for use by Amazon Web Services services that
--   support CodeBuild report group tags.
newReportGroup :: ReportGroup

-- | Contains trend statistics for a set of reports. The actual values
--   depend on the type of trend being collected. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportGroupTrendStats</a> smart constructor.
data ReportGroupTrendStats
ReportGroupTrendStats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReportGroupTrendStats

-- | Create a value of <a>ReportGroupTrendStats</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:max:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_max</a> - Contains the maximum value
--   analyzed.
--   
--   <a>$sel:average:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_average</a> - Contains the average of all
--   values analyzed.
--   
--   <a>$sel:min:ReportGroupTrendStats'</a>,
--   <a>reportGroupTrendStats_min</a> - Contains the minimum value
--   analyzed.
newReportGroupTrendStats :: ReportGroupTrendStats

-- | Contains the unmodified data for the report. For more information, see
--   .
--   
--   <i>See:</i> <a>newReportWithRawData</a> smart constructor.
data ReportWithRawData
ReportWithRawData' :: Maybe Text -> Maybe Text -> ReportWithRawData

-- | Create a value of <a>ReportWithRawData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ReportWithRawData'</a>, <a>reportWithRawData_data</a> -
--   The value of the requested data field from the report.
--   
--   <a>$sel:reportArn:ReportWithRawData'</a>,
--   <a>reportWithRawData_reportArn</a> - The ARN of the report.
newReportWithRawData :: ReportWithRawData

-- | Represents a resolved build artifact. A resolved artifact is an
--   artifact that is built and deployed to the destination, such as Amazon
--   S3.
--   
--   <i>See:</i> <a>newResolvedArtifact</a> smart constructor.
data ResolvedArtifact
ResolvedArtifact' :: Maybe Text -> Maybe Text -> Maybe ArtifactsType -> ResolvedArtifact

-- | Create a value of <a>ResolvedArtifact</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_location</a> - The location of the artifact.
--   
--   <a>$sel:identifier:ResolvedArtifact'</a>,
--   <a>resolvedArtifact_identifier</a> - The identifier of the artifact.
--   
--   <a>$sel:type':ResolvedArtifact'</a>, <a>resolvedArtifact_type</a> -
--   Specifies the type of artifact.
newResolvedArtifact :: ResolvedArtifact

-- | Information about S3 logs for a build project.
--   
--   <i>See:</i> <a>newS3LogsConfig</a> smart constructor.
data S3LogsConfig
S3LogsConfig' :: Maybe Text -> Maybe Bool -> Maybe BucketOwnerAccess -> LogsConfigStatusType -> S3LogsConfig

-- | Create a value of <a>S3LogsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:S3LogsConfig'</a>, <a>s3LogsConfig_location</a> - The
--   ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3
--   bucket name is <tt>my-bucket</tt>, and your path prefix is
--   <tt>build-log</tt>, then acceptable formats are
--   <tt>my-bucket/build-log</tt> or
--   <tt>arn:aws:s3:::my-bucket/build-log</tt>.
--   
--   <a>$sel:encryptionDisabled:S3LogsConfig'</a>,
--   <a>s3LogsConfig_encryptionDisabled</a> - Set to true if you do not
--   want your S3 build log output encrypted. By default S3 build logs are
--   encrypted.
--   
--   <a>$sel:bucketOwnerAccess:S3LogsConfig'</a>,
--   <a>s3LogsConfig_bucketOwnerAccess</a> - Undocumented member.
--   
--   <a>$sel:status:S3LogsConfig'</a>, <a>s3LogsConfig_status</a> - The
--   current status of the S3 build logs. Valid values are:
--   
--   <ul>
--   <li><tt>ENABLED</tt>: S3 build logs are enabled for this build
--   project.</li>
--   <li><tt>DISABLED</tt>: S3 build logs are not enabled for this build
--   project.</li>
--   </ul>
newS3LogsConfig :: LogsConfigStatusType -> S3LogsConfig

-- | Information about the S3 bucket where the raw data of a report are
--   exported.
--   
--   <i>See:</i> <a>newS3ReportExportConfig</a> smart constructor.
data S3ReportExportConfig
S3ReportExportConfig' :: Maybe ReportPackagingType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> S3ReportExportConfig

-- | Create a value of <a>S3ReportExportConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packaging:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_packaging</a> - The type of build output
--   artifact to create. Valid values include:
--   
--   <ul>
--   <li><tt>NONE</tt>: CodeBuild creates the raw data in the output
--   bucket. This is the default if packaging is not specified.</li>
--   <li><tt>ZIP</tt>: CodeBuild creates a ZIP file with the raw data in
--   the output bucket.</li>
--   </ul>
--   
--   <a>$sel:path:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_path</a> - The path to the exported report's
--   raw data results.
--   
--   <a>$sel:bucket:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucket</a> - The name of the S3 bucket where
--   the raw data of a report are exported.
--   
--   <a>$sel:bucketOwner:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_bucketOwner</a> - The Amazon Web Services
--   account identifier of the owner of the Amazon S3 bucket. This allows
--   report data to be exported to an Amazon S3 bucket that is owned by an
--   account other than the account running the build.
--   
--   <a>$sel:encryptionDisabled:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionDisabled</a> - A boolean value that
--   specifies if the results of a report are encrypted.
--   
--   <a>$sel:encryptionKey:S3ReportExportConfig'</a>,
--   <a>s3ReportExportConfig_encryptionKey</a> - The encryption key for the
--   report's encrypted raw data.
newS3ReportExportConfig :: S3ReportExportConfig

-- | Information about the authorization settings for CodeBuild to access
--   the source code to be built.
--   
--   This information is for the CodeBuild console's use only. Your code
--   should not get or set this information directly.
--   
--   <i>See:</i> <a>newSourceAuth</a> smart constructor.
data SourceAuth
SourceAuth' :: Maybe Text -> SourceAuthType -> SourceAuth

-- | Create a value of <a>SourceAuth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resource:SourceAuth'</a>, <a>sourceAuth_resource</a> - The
--   resource value that applies to the specified authorization type.
--   
--   <a>$sel:type':SourceAuth'</a>, <a>sourceAuth_type</a> - This data type
--   is deprecated and is no longer accurate or used.
--   
--   The authorization type to use. The only valid value is <tt>OAUTH</tt>,
--   which represents the OAuth authorization type.
newSourceAuth :: SourceAuthType -> SourceAuth

-- | Information about the credentials for a GitHub, GitHub Enterprise, or
--   Bitbucket repository.
--   
--   <i>See:</i> <a>newSourceCredentialsInfo</a> smart constructor.
data SourceCredentialsInfo
SourceCredentialsInfo' :: Maybe Text -> Maybe ServerType -> Maybe AuthType -> SourceCredentialsInfo

-- | Create a value of <a>SourceCredentialsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_arn</a> - The Amazon Resource Name (ARN) of
--   the token.
--   
--   <a>$sel:serverType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_serverType</a> - The type of source provider.
--   The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.
--   
--   <a>$sel:authType:SourceCredentialsInfo'</a>,
--   <a>sourceCredentialsInfo_authType</a> - The type of authentication
--   used by the credentials. Valid options are OAUTH, BASIC_AUTH, or
--   PERSONAL_ACCESS_TOKEN.
newSourceCredentialsInfo :: SourceCredentialsInfo

-- | A tag, consisting of a key and a value.
--   
--   This tag is available for use by Amazon Web Services services that
--   support tags in CodeBuild.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
newTag :: Tag

-- | Information about a test case created using a framework such as NUnit
--   or Cucumber. A test case might be a unit test or a configuration test.
--   
--   <i>See:</i> <a>newTestCase</a> smart constructor.
data TestCase
TestCase' :: Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> TestCase

-- | Create a value of <a>TestCase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInNanoSeconds:TestCase'</a>,
--   <a>testCase_durationInNanoSeconds</a> - The number of nanoseconds it
--   took to run this test case.
--   
--   <a>$sel:status:TestCase'</a>, <a>testCase_status</a> - The status
--   returned by the test case after it was run. Valid statuses are
--   <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, <tt>ERROR</tt>, <tt>SKIPPED</tt>,
--   and <tt>UNKNOWN</tt>.
--   
--   <a>$sel:expired:TestCase'</a>, <a>testCase_expired</a> - The date and
--   time a test case expires. A test case expires 30 days after it is
--   created. An expired test case is not available to view in CodeBuild.
--   
--   <a>$sel:prefix:TestCase'</a>, <a>testCase_prefix</a> - A string that
--   is applied to a series of related test cases. CodeBuild generates the
--   prefix. The prefix depends on the framework used to generate the
--   tests.
--   
--   <a>$sel:name:TestCase'</a>, <a>testCase_name</a> - The name of the
--   test case.
--   
--   <a>$sel:testRawDataPath:TestCase'</a>, <a>testCase_testRawDataPath</a>
--   - The path to the raw data file that contains the test result.
--   
--   <a>$sel:message:TestCase'</a>, <a>testCase_message</a> - A message
--   associated with a test case. For example, an error message or stack
--   trace.
--   
--   <a>$sel:reportArn:TestCase'</a>, <a>testCase_reportArn</a> - The ARN
--   of the report to which the test case belongs.
newTestCase :: TestCase

-- | A filter used to return specific types of test cases. In order to pass
--   the filter, the report must meet all of the filter properties.
--   
--   <i>See:</i> <a>newTestCaseFilter</a> smart constructor.
data TestCaseFilter
TestCaseFilter' :: Maybe Text -> Maybe Text -> TestCaseFilter

-- | Create a value of <a>TestCaseFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestCaseFilter'</a>, <a>testCaseFilter_status</a> - The
--   status used to filter test cases. A <tt>TestCaseFilter</tt> can have
--   one status. Valid values are:
--   
--   <ul>
--   <li><pre>SUCCEEDED</pre></li>
--   <li><pre>FAILED</pre></li>
--   <li><pre>ERROR</pre></li>
--   <li><pre>SKIPPED</pre></li>
--   <li><pre>UNKNOWN</pre></li>
--   </ul>
--   
--   <a>$sel:keyword:TestCaseFilter'</a>, <a>testCaseFilter_keyword</a> - A
--   keyword that is used to filter on the <tt>name</tt> or the
--   <tt>prefix</tt> of the test cases. Only test cases where the keyword
--   is a substring of the <tt>name</tt> or the <tt>prefix</tt> will be
--   returned.
newTestCaseFilter :: TestCaseFilter

-- | Information about a test report.
--   
--   <i>See:</i> <a>newTestReportSummary</a> smart constructor.
data TestReportSummary
TestReportSummary' :: Int -> HashMap Text Int -> Integer -> TestReportSummary

-- | Create a value of <a>TestReportSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TestReportSummary'</a>, <a>testReportSummary_total</a> -
--   The number of test cases in this <tt>TestReportSummary</tt>. The total
--   includes truncated test cases.
--   
--   <a>$sel:statusCounts:TestReportSummary'</a>,
--   <a>testReportSummary_statusCounts</a> - A map that contains the number
--   of each type of status returned by the test results in this
--   <tt>TestReportSummary</tt>.
--   
--   <a>$sel:durationInNanoSeconds:TestReportSummary'</a>,
--   <a>testReportSummary_durationInNanoSeconds</a> - The number of
--   nanoseconds it took to run all of the test cases in this report.
newTestReportSummary :: Int -> Integer -> TestReportSummary

-- | Information about the VPC configuration that CodeBuild accesses.
--   
--   <i>See:</i> <a>newVpcConfig</a> smart constructor.
data VpcConfig
VpcConfig' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> VpcConfig

-- | Create a value of <a>VpcConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfig'</a>,
--   <a>vpcConfig_securityGroupIds</a> - A list of one or more security
--   groups IDs in your Amazon VPC.
--   
--   <a>$sel:vpcId:VpcConfig'</a>, <a>vpcConfig_vpcId</a> - The ID of the
--   Amazon VPC.
--   
--   <a>$sel:subnets:VpcConfig'</a>, <a>vpcConfig_subnets</a> - A list of
--   one or more subnet IDs in your Amazon VPC.
newVpcConfig :: VpcConfig

-- | Information about a webhook that connects repository events to a build
--   project in CodeBuild.
--   
--   <i>See:</i> <a>newWebhook</a> smart constructor.
data Webhook
Webhook' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [[WebhookFilter]] -> Maybe Text -> Maybe WebhookBuildType -> Webhook

-- | Create a value of <a>Webhook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchFilter:Webhook'</a>, <a>webhook_branchFilter</a> - A
--   regular expression used to determine which repository branches are
--   built when a webhook is triggered. If the name of a branch matches the
--   regular expression, then it is built. If <tt>branchFilter</tt> is
--   empty, then all branches are built.
--   
--   It is recommended that you use <tt>filterGroups</tt> instead of
--   <tt>branchFilter</tt>.
--   
--   <a>$sel:lastModifiedSecret:Webhook'</a>,
--   <a>webhook_lastModifiedSecret</a> - A timestamp that indicates the
--   last time a repository's secret token was modified.
--   
--   <a>$sel:url:Webhook'</a>, <a>webhook_url</a> - The URL to the webhook.
--   
--   <a>$sel:secret:Webhook'</a>, <a>webhook_secret</a> - The secret token
--   of the associated repository.
--   
--   A Bitbucket webhook does not support <tt>secret</tt>.
--   
--   <a>$sel:filterGroups:Webhook'</a>, <a>webhook_filterGroups</a> - An
--   array of arrays of <tt>WebhookFilter</tt> objects used to determine
--   which webhooks are triggered. At least one <tt>WebhookFilter</tt> in
--   the array must specify <tt>EVENT</tt> as its <tt>type</tt>.
--   
--   For a build to be triggered, at least one filter group in the
--   <tt>filterGroups</tt> array must pass. For a filter group to pass,
--   each of its filters must pass.
--   
--   <a>$sel:payloadUrl:Webhook'</a>, <a>webhook_payloadUrl</a> - The
--   CodeBuild endpoint where webhook events are sent.
--   
--   <a>$sel:buildType:Webhook'</a>, <a>webhook_buildType</a> - Specifies
--   the type of build this webhook will trigger.
newWebhook :: Webhook

-- | A filter used to determine which webhooks trigger a build.
--   
--   <i>See:</i> <a>newWebhookFilter</a> smart constructor.
data WebhookFilter
WebhookFilter' :: Maybe Bool -> WebhookFilterType -> Text -> WebhookFilter

-- | Create a value of <a>WebhookFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeMatchedPattern:WebhookFilter'</a>,
--   <a>webhookFilter_excludeMatchedPattern</a> - Used to indicate that the
--   <tt>pattern</tt> determines which webhook events do not trigger a
--   build. If true, then a webhook event that does not match the
--   <tt>pattern</tt> triggers a build. If false, then a webhook event that
--   matches the <tt>pattern</tt> triggers a build.
--   
--   <a>$sel:type':WebhookFilter'</a>, <a>webhookFilter_type</a> - The type
--   of webhook filter. There are six webhook filter types: <tt>EVENT</tt>,
--   <tt>ACTOR_ACCOUNT_ID</tt>, <tt>HEAD_REF</tt>, <tt>BASE_REF</tt>,
--   <tt>FILE_PATH</tt>, and <tt>COMMIT_MESSAGE</tt>.
--   
--   <ul>
--   <li><i>EVENT</i> A webhook event triggers a build when the provided
--   <tt>pattern</tt> matches one of five event types: <tt>PUSH</tt>,
--   <tt>PULL_REQUEST_CREATED</tt>, <tt>PULL_REQUEST_UPDATED</tt>,
--   <tt>PULL_REQUEST_REOPENED</tt>, and <tt>PULL_REQUEST_MERGED</tt>. The
--   <tt>EVENT</tt> patterns are specified as a comma-separated string. For
--   example, <tt>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</tt>
--   filters all push, pull request created, and pull request updated
--   events.The <tt>PULL_REQUEST_REOPENED</tt> works with GitHub and GitHub
--   Enterprise only.</li>
--   <li><i>ACTOR_ACCOUNT_ID</i> A webhook event triggers a build when a
--   GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular
--   expression <tt>pattern</tt>.</li>
--   <li><i>HEAD_REF</i> A webhook event triggers a build when the head
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt> and
--   <tt>refs/tags/tag-name</tt>.Works with GitHub and GitHub Enterprise
--   push, GitHub and GitHub Enterprise pull request, Bitbucket push, and
--   Bitbucket pull request events.</li>
--   <li><i>BASE_REF</i> A webhook event triggers a build when the base
--   reference matches the regular expression <tt>pattern</tt>. For
--   example, <tt>refs/heads/branch-name</tt>.Works with pull request
--   events only.</li>
--   <li><i>FILE_PATH</i> A webhook triggers a build when the path of a
--   changed file matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   <li><i>COMMIT_MESSAGE</i> A webhook triggers a build when the head
--   commit message matches the regular expression <tt>pattern</tt>.Works
--   with GitHub and Bitbucket events push and pull requests events. Also
--   works with GitHub Enterprise push events, but does not work with
--   GitHub Enterprise pull request events.</li>
--   </ul>
--   
--   <a>$sel:pattern':WebhookFilter'</a>, <a>webhookFilter_pattern</a> -
--   For a <tt>WebHookFilter</tt> that uses <tt>EVENT</tt> type, a
--   comma-separated string that specifies one or more events. For example,
--   the webhook filter <tt>PUSH, PULL_REQUEST_CREATED,
--   PULL_REQUEST_UPDATED</tt> allows all push, pull request created, and
--   pull request updated events to trigger a build.
--   
--   For a <tt>WebHookFilter</tt> that uses any of the other filter types,
--   a regular expression pattern. For example, a <tt>WebHookFilter</tt>
--   that uses <tt>HEAD_REF</tt> for its <tt>type</tt> and the pattern
--   <tt>^refs/heads/</tt> triggers a build when the head reference is a
--   branch with a reference name <tt>refs/heads/branch-name</tt>.
newWebhookFilter :: WebhookFilterType -> Text -> WebhookFilter
