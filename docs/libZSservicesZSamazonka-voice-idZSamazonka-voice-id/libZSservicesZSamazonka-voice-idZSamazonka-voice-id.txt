-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-voice-idZSamazonka-voice-id
@version 2.0


module Amazonka.VoiceId.Types.AuthenticationConfiguration

-- | The configuration used to authenticate a speaker during a session.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Natural -> AuthenticationConfiguration

-- | The minimum threshold needed to successfully authenticate a speaker.
[$sel:acceptanceThreshold:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Natural

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptanceThreshold:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_acceptanceThreshold</a> - The minimum
--   threshold needed to successfully authenticate a speaker.
newAuthenticationConfiguration :: Natural -> AuthenticationConfiguration

-- | The minimum threshold needed to successfully authenticate a speaker.
authenticationConfiguration_acceptanceThreshold :: Lens' AuthenticationConfiguration Natural
instance GHC.Generics.Generic Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Show.Show Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Read.Read Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance GHC.Classes.Eq Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.AuthenticationConfiguration.AuthenticationConfiguration


module Amazonka.VoiceId.Types.AuthenticationDecision
newtype AuthenticationDecision
AuthenticationDecision' :: Text -> AuthenticationDecision
[fromAuthenticationDecision] :: AuthenticationDecision -> Text
pattern AuthenticationDecision_ACCEPT :: AuthenticationDecision
pattern AuthenticationDecision_NOT_ENOUGH_SPEECH :: AuthenticationDecision
pattern AuthenticationDecision_REJECT :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_ID_NOT_PROVIDED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_NOT_ENROLLED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_OPTED_OUT :: AuthenticationDecision
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance GHC.Generics.Generic Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance GHC.Classes.Ord Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance GHC.Classes.Eq Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance GHC.Read.Read Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision
instance GHC.Show.Show Amazonka.VoiceId.Types.AuthenticationDecision.AuthenticationDecision


module Amazonka.VoiceId.Types.AuthenticationResult

-- | The authentication result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newAuthenticationResult</a> smart constructor.
data AuthenticationResult
AuthenticationResult' :: Maybe (Sensitive Text) -> Maybe Natural -> Maybe Text -> Maybe AuthenticationDecision -> Maybe AuthenticationConfiguration -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> AuthenticationResult

-- | The client-provided identifier for the speaker whose authentication
--   result is produced. Only present if a <tt>SpeakerId</tt> is provided
--   for the session.
[$sel:customerSpeakerId:AuthenticationResult'] :: AuthenticationResult -> Maybe (Sensitive Text)

-- | The authentication score for the speaker whose authentication result
--   is produced. This value is only present if the authentication decision
--   is either <tt>ACCEPT</tt> or <tt>REJECT</tt>.
[$sel:score:AuthenticationResult'] :: AuthenticationResult -> Maybe Natural

-- | The unique identifier for this authentication result. Because there
--   can be multiple authentications for a given session, this field helps
--   to identify if the returned result is from a previous streaming
--   activity or a new result. Note that in absence of any new streaming
--   activity, <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt>
--   changes, Voice ID always returns cached Authentication Result for this
--   API.
[$sel:authenticationResultId:AuthenticationResult'] :: AuthenticationResult -> Maybe Text

-- | The authentication decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
[$sel:decision:AuthenticationResult'] :: AuthenticationResult -> Maybe AuthenticationDecision

-- | The <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
[$sel:configuration:AuthenticationResult'] :: AuthenticationResult -> Maybe AuthenticationConfiguration

-- | A timestamp indicating when audio aggregation started for this
--   authentication result.
[$sel:audioAggregationStartedAt:AuthenticationResult'] :: AuthenticationResult -> Maybe POSIX

-- | The service-generated identifier for the speaker whose authentication
--   result is produced.
[$sel:generatedSpeakerId:AuthenticationResult'] :: AuthenticationResult -> Maybe Text

-- | A timestamp indicating when audio aggregation ended for this
--   authentication result.
[$sel:audioAggregationEndedAt:AuthenticationResult'] :: AuthenticationResult -> Maybe POSIX

-- | Create a value of <a>AuthenticationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_customerSpeakerId</a> - The client-provided
--   identifier for the speaker whose authentication result is produced.
--   Only present if a <tt>SpeakerId</tt> is provided for the session.
--   
--   <a>$sel:score:AuthenticationResult'</a>,
--   <a>authenticationResult_score</a> - The authentication score for the
--   speaker whose authentication result is produced. This value is only
--   present if the authentication decision is either <tt>ACCEPT</tt> or
--   <tt>REJECT</tt>.
--   
--   <a>$sel:authenticationResultId:AuthenticationResult'</a>,
--   <a>authenticationResult_authenticationResultId</a> - The unique
--   identifier for this authentication result. Because there can be
--   multiple authentications for a given session, this field helps to
--   identify if the returned result is from a previous streaming activity
--   or a new result. Note that in absence of any new streaming activity,
--   <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt> changes,
--   Voice ID always returns cached Authentication Result for this API.
--   
--   <a>$sel:decision:AuthenticationResult'</a>,
--   <a>authenticationResult_decision</a> - The authentication decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:AuthenticationResult'</a>,
--   <a>authenticationResult_configuration</a> - The
--   <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
--   
--   <a>$sel:audioAggregationStartedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this authentication
--   result.
--   
--   <a>$sel:generatedSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker whose authentication result is produced.
--   
--   <a>$sel:audioAggregationEndedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this authentication
--   result.
newAuthenticationResult :: AuthenticationResult

-- | The client-provided identifier for the speaker whose authentication
--   result is produced. Only present if a <tt>SpeakerId</tt> is provided
--   for the session.
authenticationResult_customerSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication score for the speaker whose authentication result
--   is produced. This value is only present if the authentication decision
--   is either <tt>ACCEPT</tt> or <tt>REJECT</tt>.
authenticationResult_score :: Lens' AuthenticationResult (Maybe Natural)

-- | The unique identifier for this authentication result. Because there
--   can be multiple authentications for a given session, this field helps
--   to identify if the returned result is from a previous streaming
--   activity or a new result. Note that in absence of any new streaming
--   activity, <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt>
--   changes, Voice ID always returns cached Authentication Result for this
--   API.
authenticationResult_authenticationResultId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
authenticationResult_decision :: Lens' AuthenticationResult (Maybe AuthenticationDecision)

-- | The <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
authenticationResult_configuration :: Lens' AuthenticationResult (Maybe AuthenticationConfiguration)

-- | A timestamp indicating when audio aggregation started for this
--   authentication result.
authenticationResult_audioAggregationStartedAt :: Lens' AuthenticationResult (Maybe UTCTime)

-- | The service-generated identifier for the speaker whose authentication
--   result is produced.
authenticationResult_generatedSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | A timestamp indicating when audio aggregation ended for this
--   authentication result.
authenticationResult_audioAggregationEndedAt :: Lens' AuthenticationResult (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult
instance GHC.Show.Show Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult
instance GHC.Classes.Eq Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.AuthenticationResult.AuthenticationResult


module Amazonka.VoiceId.Types.DomainStatus
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_ACTIVE :: DomainStatus
pattern DomainStatus_PENDING :: DomainStatus
pattern DomainStatus_SUSPENDED :: DomainStatus
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance GHC.Generics.Generic Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance GHC.Classes.Ord Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance GHC.Classes.Eq Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance GHC.Read.Read Amazonka.VoiceId.Types.DomainStatus.DomainStatus
instance GHC.Show.Show Amazonka.VoiceId.Types.DomainStatus.DomainStatus


module Amazonka.VoiceId.Types.DuplicateRegistrationAction
newtype DuplicateRegistrationAction
DuplicateRegistrationAction' :: Text -> DuplicateRegistrationAction
[fromDuplicateRegistrationAction] :: DuplicateRegistrationAction -> Text
pattern DuplicateRegistrationAction_REGISTER_AS_NEW :: DuplicateRegistrationAction
pattern DuplicateRegistrationAction_SKIP :: DuplicateRegistrationAction
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance GHC.Generics.Generic Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance GHC.Classes.Ord Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance GHC.Classes.Eq Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance GHC.Read.Read Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction
instance GHC.Show.Show Amazonka.VoiceId.Types.DuplicateRegistrationAction.DuplicateRegistrationAction


module Amazonka.VoiceId.Types.ExistingEnrollmentAction
newtype ExistingEnrollmentAction
ExistingEnrollmentAction' :: Text -> ExistingEnrollmentAction
[fromExistingEnrollmentAction] :: ExistingEnrollmentAction -> Text
pattern ExistingEnrollmentAction_OVERWRITE :: ExistingEnrollmentAction
pattern ExistingEnrollmentAction_SKIP :: ExistingEnrollmentAction
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance GHC.Generics.Generic Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance GHC.Classes.Ord Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance GHC.Classes.Eq Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance GHC.Read.Read Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction
instance GHC.Show.Show Amazonka.VoiceId.Types.ExistingEnrollmentAction.ExistingEnrollmentAction


module Amazonka.VoiceId.Types.FailureDetails

-- | Contains error details for a failed batch job.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> Maybe Int -> FailureDetails

-- | A description of the error that caused the batch job failure.
[$sel:message:FailureDetails'] :: FailureDetails -> Maybe Text

-- | An HTTP status code representing the nature of the error.
[$sel:statusCode:FailureDetails'] :: FailureDetails -> Maybe Int

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> - A
--   description of the error that caused the batch job failure.
--   
--   <a>$sel:statusCode:FailureDetails'</a>,
--   <a>failureDetails_statusCode</a> - An HTTP status code representing
--   the nature of the error.
newFailureDetails :: FailureDetails

-- | A description of the error that caused the batch job failure.
failureDetails_message :: Lens' FailureDetails (Maybe Text)

-- | An HTTP status code representing the nature of the error.
failureDetails_statusCode :: Lens' FailureDetails (Maybe Int)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance GHC.Show.Show Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance GHC.Read.Read Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FailureDetails.FailureDetails
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FailureDetails.FailureDetails


module Amazonka.VoiceId.Types.FraudDetectionAction
newtype FraudDetectionAction
FraudDetectionAction' :: Text -> FraudDetectionAction
[fromFraudDetectionAction] :: FraudDetectionAction -> Text
pattern FraudDetectionAction_FAIL :: FraudDetectionAction
pattern FraudDetectionAction_IGNORE :: FraudDetectionAction
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance GHC.Classes.Ord Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudDetectionAction.FraudDetectionAction


module Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig

-- | The configuration defining the action to take when a speaker is
--   flagged by the fraud detection system during a batch speaker
--   enrollment job, and the risk threshold to use for identification.
--   
--   <i>See:</i> <a>newEnrollmentJobFraudDetectionConfig</a> smart
--   constructor.
data EnrollmentJobFraudDetectionConfig
EnrollmentJobFraudDetectionConfig' :: Maybe Natural -> Maybe FraudDetectionAction -> EnrollmentJobFraudDetectionConfig

-- | Threshold value for determining whether the speaker is a high risk to
--   be fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
[$sel:riskThreshold:EnrollmentJobFraudDetectionConfig'] :: EnrollmentJobFraudDetectionConfig -> Maybe Natural

-- | The action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
[$sel:fraudDetectionAction:EnrollmentJobFraudDetectionConfig'] :: EnrollmentJobFraudDetectionConfig -> Maybe FraudDetectionAction

-- | Create a value of <a>EnrollmentJobFraudDetectionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_riskThreshold</a> - Threshold
--   value for determining whether the speaker is a high risk to be
--   fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
--   
--   <a>$sel:fraudDetectionAction:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_fraudDetectionAction</a> - The
--   action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
newEnrollmentJobFraudDetectionConfig :: EnrollmentJobFraudDetectionConfig

-- | Threshold value for determining whether the speaker is a high risk to
--   be fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
enrollmentJobFraudDetectionConfig_riskThreshold :: Lens' EnrollmentJobFraudDetectionConfig (Maybe Natural)

-- | The action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
enrollmentJobFraudDetectionConfig_fraudDetectionAction :: Lens' EnrollmentJobFraudDetectionConfig (Maybe FraudDetectionAction)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance GHC.Show.Show Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance GHC.Read.Read Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance GHC.Classes.Eq Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.EnrollmentJobFraudDetectionConfig.EnrollmentJobFraudDetectionConfig


module Amazonka.VoiceId.Types.EnrollmentConfig

-- | Contains configurations defining enrollment behavior for the batch
--   job.
--   
--   <i>See:</i> <a>newEnrollmentConfig</a> smart constructor.
data EnrollmentConfig
EnrollmentConfig' :: Maybe EnrollmentJobFraudDetectionConfig -> Maybe ExistingEnrollmentAction -> EnrollmentConfig

-- | The fraud detection configuration to use for the speaker enrollment
--   job.
[$sel:fraudDetectionConfig:EnrollmentConfig'] :: EnrollmentConfig -> Maybe EnrollmentJobFraudDetectionConfig

-- | The action to take when the specified speaker is already enrolled in
--   the specified domain. The default value is <tt>SKIP</tt>, which skips
--   the enrollment for the existing speaker. Setting the value to
--   <tt>OVERWRITE</tt> replaces the existing voice prints and enrollment
--   audio stored for that speaker with new data generated from the latest
--   audio.
[$sel:existingEnrollmentAction:EnrollmentConfig'] :: EnrollmentConfig -> Maybe ExistingEnrollmentAction

-- | Create a value of <a>EnrollmentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudDetectionConfig:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_fraudDetectionConfig</a> - The fraud detection
--   configuration to use for the speaker enrollment job.
--   
--   <a>$sel:existingEnrollmentAction:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_existingEnrollmentAction</a> - The action to take
--   when the specified speaker is already enrolled in the specified
--   domain. The default value is <tt>SKIP</tt>, which skips the enrollment
--   for the existing speaker. Setting the value to <tt>OVERWRITE</tt>
--   replaces the existing voice prints and enrollment audio stored for
--   that speaker with new data generated from the latest audio.
newEnrollmentConfig :: EnrollmentConfig

-- | The fraud detection configuration to use for the speaker enrollment
--   job.
enrollmentConfig_fraudDetectionConfig :: Lens' EnrollmentConfig (Maybe EnrollmentJobFraudDetectionConfig)

-- | The action to take when the specified speaker is already enrolled in
--   the specified domain. The default value is <tt>SKIP</tt>, which skips
--   the enrollment for the existing speaker. Setting the value to
--   <tt>OVERWRITE</tt> replaces the existing voice prints and enrollment
--   audio stored for that speaker with new data generated from the latest
--   audio.
enrollmentConfig_existingEnrollmentAction :: Lens' EnrollmentConfig (Maybe ExistingEnrollmentAction)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance GHC.Show.Show Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance GHC.Read.Read Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance GHC.Classes.Eq Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.EnrollmentConfig.EnrollmentConfig


module Amazonka.VoiceId.Types.FraudDetectionConfiguration

-- | The configuration used for performing fraud detection over a speaker
--   during a session.
--   
--   <i>See:</i> <a>newFraudDetectionConfiguration</a> smart constructor.
data FraudDetectionConfiguration
FraudDetectionConfiguration' :: Natural -> FraudDetectionConfiguration

-- | Threshold value for determining whether the speaker is a fraudster. If
--   the detected risk score calculated by Voice ID is higher than the
--   threshold, the speaker is considered a fraudster.
[$sel:riskThreshold:FraudDetectionConfiguration'] :: FraudDetectionConfiguration -> Natural

-- | Create a value of <a>FraudDetectionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:FraudDetectionConfiguration'</a>,
--   <a>fraudDetectionConfiguration_riskThreshold</a> - Threshold value for
--   determining whether the speaker is a fraudster. If the detected risk
--   score calculated by Voice ID is higher than the threshold, the speaker
--   is considered a fraudster.
newFraudDetectionConfiguration :: Natural -> FraudDetectionConfiguration

-- | Threshold value for determining whether the speaker is a fraudster. If
--   the detected risk score calculated by Voice ID is higher than the
--   threshold, the speaker is considered a fraudster.
fraudDetectionConfiguration_riskThreshold :: Lens' FraudDetectionConfiguration Natural
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudDetectionConfiguration.FraudDetectionConfiguration


module Amazonka.VoiceId.Types.FraudDetectionDecision
newtype FraudDetectionDecision
FraudDetectionDecision' :: Text -> FraudDetectionDecision
[fromFraudDetectionDecision] :: FraudDetectionDecision -> Text
pattern FraudDetectionDecision_HIGH_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_LOW_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_NOT_ENOUGH_SPEECH :: FraudDetectionDecision
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance GHC.Classes.Ord Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudDetectionDecision.FraudDetectionDecision


module Amazonka.VoiceId.Types.FraudDetectionReason
newtype FraudDetectionReason
FraudDetectionReason' :: Text -> FraudDetectionReason
[fromFraudDetectionReason] :: FraudDetectionReason -> Text
pattern FraudDetectionReason_KNOWN_FRAUDSTER :: FraudDetectionReason
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance GHC.Classes.Ord Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudDetectionReason.FraudDetectionReason


module Amazonka.VoiceId.Types.Fraudster

-- | Contains all the information about a fraudster.
--   
--   <i>See:</i> <a>newFraudster</a> smart constructor.
data Fraudster
Fraudster' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Fraudster

-- | The timestamp when Voice ID identified the fraudster.
[$sel:createdAt:Fraudster'] :: Fraudster -> Maybe POSIX

-- | The service-generated identifier for the fraudster.
[$sel:generatedFraudsterId:Fraudster'] :: Fraudster -> Maybe Text

-- | The identifier for the domain containing the fraudster.
[$sel:domainId:Fraudster'] :: Fraudster -> Maybe Text

-- | Create a value of <a>Fraudster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Fraudster'</a>, <a>fraudster_createdAt</a> - The
--   timestamp when Voice ID identified the fraudster.
--   
--   <a>$sel:generatedFraudsterId:Fraudster'</a>,
--   <a>fraudster_generatedFraudsterId</a> - The service-generated
--   identifier for the fraudster.
--   
--   <a>$sel:domainId:Fraudster'</a>, <a>fraudster_domainId</a> - The
--   identifier for the domain containing the fraudster.
newFraudster :: Fraudster

-- | The timestamp when Voice ID identified the fraudster.
fraudster_createdAt :: Lens' Fraudster (Maybe UTCTime)

-- | The service-generated identifier for the fraudster.
fraudster_generatedFraudsterId :: Lens' Fraudster (Maybe Text)

-- | The identifier for the domain containing the fraudster.
fraudster_domainId :: Lens' Fraudster (Maybe Text)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.Fraudster.Fraudster
instance GHC.Show.Show Amazonka.VoiceId.Types.Fraudster.Fraudster
instance GHC.Read.Read Amazonka.VoiceId.Types.Fraudster.Fraudster
instance GHC.Classes.Eq Amazonka.VoiceId.Types.Fraudster.Fraudster
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.Fraudster.Fraudster
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.Fraudster.Fraudster
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.Fraudster.Fraudster


module Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus
newtype FraudsterRegistrationJobStatus
FraudsterRegistrationJobStatus' :: Text -> FraudsterRegistrationJobStatus
[fromFraudsterRegistrationJobStatus] :: FraudsterRegistrationJobStatus -> Text
pattern FraudsterRegistrationJobStatus_COMPLETED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_COMPLETED_WITH_ERRORS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_FAILED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_IN_PROGRESS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_SUBMITTED :: FraudsterRegistrationJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance GHC.Classes.Ord Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudsterRegistrationJobStatus.FraudsterRegistrationJobStatus


module Amazonka.VoiceId.Types.InputDataConfig

-- | The configuration containing input file information for a batch job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> InputDataConfig

-- | The S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
newInputDataConfig :: Text -> InputDataConfig

-- | The S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text
instance GHC.Generics.Generic Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance GHC.Show.Show Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance GHC.Read.Read Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance GHC.Classes.Eq Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.InputDataConfig.InputDataConfig


module Amazonka.VoiceId.Types.JobProgress

-- | Indicates the completion progress for a batch job.
--   
--   <i>See:</i> <a>newJobProgress</a> smart constructor.
data JobProgress
JobProgress' :: Maybe Natural -> JobProgress

-- | Shows the completed percentage of enrollment or registration requests
--   listed in the input file.
[$sel:percentComplete:JobProgress'] :: JobProgress -> Maybe Natural

-- | Create a value of <a>JobProgress</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentComplete:JobProgress'</a>,
--   <a>jobProgress_percentComplete</a> - Shows the completed percentage of
--   enrollment or registration requests listed in the input file.
newJobProgress :: JobProgress

-- | Shows the completed percentage of enrollment or registration requests
--   listed in the input file.
jobProgress_percentComplete :: Lens' JobProgress (Maybe Natural)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.JobProgress.JobProgress
instance GHC.Show.Show Amazonka.VoiceId.Types.JobProgress.JobProgress
instance GHC.Read.Read Amazonka.VoiceId.Types.JobProgress.JobProgress
instance GHC.Classes.Eq Amazonka.VoiceId.Types.JobProgress.JobProgress
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.JobProgress.JobProgress
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.JobProgress.JobProgress
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.JobProgress.JobProgress


module Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary

-- | Contains a summary of information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJobSummary</a> smart
--   constructor.
data FraudsterRegistrationJobSummary
FraudsterRegistrationJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> FraudsterRegistrationJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe FailureDetails

-- | The service-generated identifier for the fraudster registration job.
[$sel:jobId:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe Text

-- | A timestamp showing when the fraudster registration job is created.
[$sel:createdAt:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe POSIX

-- | The client-provied name for the fraudster registration job.
[$sel:jobName:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe (Sensitive Text)

-- | A timestamp showing when the fraudster registration job ended.
[$sel:endedAt:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe POSIX

-- | Shows the completed percentage of registration requests listed in the
--   input file.
[$sel:jobProgress:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe JobProgress

-- | The identifier of the domain containing the fraudster registration
--   job.
[$sel:domainId:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe Text

-- | The current status of the fraudster registration job.
[$sel:jobStatus:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe FraudsterRegistrationJobStatus

-- | Create a value of <a>FraudsterRegistrationJobSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_failureDetails</a> - Contains
--   details that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_createdAt</a> - A timestamp showing
--   when the fraudster registration job is created.
--   
--   <a>$sel:jobName:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobName</a> - The client-provied
--   name for the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_endedAt</a> - A timestamp showing
--   when the fraudster registration job ended.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobProgress</a> - Shows the
--   completed percentage of registration requests listed in the input
--   file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_domainId</a> - The identifier of
--   the domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobStatus</a> - The current status
--   of the fraudster registration job.
newFraudsterRegistrationJobSummary :: FraudsterRegistrationJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJobSummary_failureDetails :: Lens' FraudsterRegistrationJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJobSummary_jobId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job is created.
fraudsterRegistrationJobSummary_createdAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJobSummary_jobName :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJobSummary_endedAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJobSummary_jobProgress :: Lens' FraudsterRegistrationJobSummary (Maybe JobProgress)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJobSummary_domainId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJobSummary_jobStatus :: Lens' FraudsterRegistrationJobSummary (Maybe FraudsterRegistrationJobStatus)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudsterRegistrationJobSummary.FraudsterRegistrationJobSummary


module Amazonka.VoiceId.Types.KnownFraudsterRisk

-- | Contains details produced as a result of performing known fraudster
--   risk analysis on a speaker.
--   
--   <i>See:</i> <a>newKnownFraudsterRisk</a> smart constructor.
data KnownFraudsterRisk
KnownFraudsterRisk' :: Maybe Text -> Natural -> KnownFraudsterRisk

-- | The identifier of the fraudster that is the closest match to the
--   speaker. If there are no fraudsters registered in a given domain, or
--   if there are no fraudsters with a non-zero RiskScore, this value is
--   <tt>null</tt>.
[$sel:generatedFraudsterId:KnownFraudsterRisk'] :: KnownFraudsterRisk -> Maybe Text

-- | The score indicating the likelihood the speaker is a known fraudster.
[$sel:riskScore:KnownFraudsterRisk'] :: KnownFraudsterRisk -> Natural

-- | Create a value of <a>KnownFraudsterRisk</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:generatedFraudsterId:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_generatedFraudsterId</a> - The identifier of the
--   fraudster that is the closest match to the speaker. If there are no
--   fraudsters registered in a given domain, or if there are no fraudsters
--   with a non-zero RiskScore, this value is <tt>null</tt>.
--   
--   <a>$sel:riskScore:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_riskScore</a> - The score indicating the
--   likelihood the speaker is a known fraudster.
newKnownFraudsterRisk :: Natural -> KnownFraudsterRisk

-- | The identifier of the fraudster that is the closest match to the
--   speaker. If there are no fraudsters registered in a given domain, or
--   if there are no fraudsters with a non-zero RiskScore, this value is
--   <tt>null</tt>.
knownFraudsterRisk_generatedFraudsterId :: Lens' KnownFraudsterRisk (Maybe Text)

-- | The score indicating the likelihood the speaker is a known fraudster.
knownFraudsterRisk_riskScore :: Lens' KnownFraudsterRisk Natural
instance GHC.Generics.Generic Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance GHC.Show.Show Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance GHC.Read.Read Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance GHC.Classes.Eq Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.KnownFraudsterRisk.KnownFraudsterRisk


module Amazonka.VoiceId.Types.FraudRiskDetails

-- | Details regarding various fraud risk analyses performed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudRiskDetails</a> smart constructor.
data FraudRiskDetails
FraudRiskDetails' :: KnownFraudsterRisk -> FraudRiskDetails

-- | The details resulting from 'Known Fraudster Risk' analysis of the
--   speaker.
[$sel:knownFraudsterRisk:FraudRiskDetails'] :: FraudRiskDetails -> KnownFraudsterRisk

-- | Create a value of <a>FraudRiskDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:knownFraudsterRisk:FraudRiskDetails'</a>,
--   <a>fraudRiskDetails_knownFraudsterRisk</a> - The details resulting
--   from 'Known Fraudster Risk' analysis of the speaker.
newFraudRiskDetails :: KnownFraudsterRisk -> FraudRiskDetails

-- | The details resulting from 'Known Fraudster Risk' analysis of the
--   speaker.
fraudRiskDetails_knownFraudsterRisk :: Lens' FraudRiskDetails KnownFraudsterRisk
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudRiskDetails.FraudRiskDetails


module Amazonka.VoiceId.Types.FraudDetectionResult

-- | The fraud detection result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudDetectionResult</a> smart constructor.
data FraudDetectionResult
FraudDetectionResult' :: Maybe [FraudDetectionReason] -> Maybe FraudRiskDetails -> Maybe Text -> Maybe FraudDetectionDecision -> Maybe FraudDetectionConfiguration -> Maybe POSIX -> Maybe POSIX -> FraudDetectionResult

-- | The reason speaker was flagged by the fraud detection system. This is
--   only be populated if fraud detection Decision is <tt>HIGH_RISK</tt>,
--   and only has one possible value: <tt>KNOWN_FRAUDSTER</tt>.
[$sel:reasons:FraudDetectionResult'] :: FraudDetectionResult -> Maybe [FraudDetectionReason]

-- | Details about each risk analyzed for this speaker.
[$sel:riskDetails:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudRiskDetails

-- | The unique identifier for this fraud detection result. Given there can
--   be multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
[$sel:fraudDetectionResultId:FraudDetectionResult'] :: FraudDetectionResult -> Maybe Text

-- | The fraud detection decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
[$sel:decision:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudDetectionDecision

-- | The <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
[$sel:configuration:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudDetectionConfiguration

-- | A timestamp indicating when audio aggregation started for this fraud
--   detection result.
[$sel:audioAggregationStartedAt:FraudDetectionResult'] :: FraudDetectionResult -> Maybe POSIX

-- | A timestamp indicating when audio aggregation ended for this fraud
--   detection result.
[$sel:audioAggregationEndedAt:FraudDetectionResult'] :: FraudDetectionResult -> Maybe POSIX

-- | Create a value of <a>FraudDetectionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reasons:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_reasons</a> - The reason speaker was flagged
--   by the fraud detection system. This is only be populated if fraud
--   detection Decision is <tt>HIGH_RISK</tt>, and only has one possible
--   value: <tt>KNOWN_FRAUDSTER</tt>.
--   
--   <a>$sel:riskDetails:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_riskDetails</a> - Details about each risk
--   analyzed for this speaker.
--   
--   <a>$sel:fraudDetectionResultId:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_fraudDetectionResultId</a> - The unique
--   identifier for this fraud detection result. Given there can be
--   multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
--   
--   <a>$sel:decision:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_decision</a> - The fraud detection decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_configuration</a> - The
--   <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
--   
--   <a>$sel:audioAggregationStartedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this fraud detection
--   result.
--   
--   <a>$sel:audioAggregationEndedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this fraud detection
--   result.
newFraudDetectionResult :: FraudDetectionResult

-- | The reason speaker was flagged by the fraud detection system. This is
--   only be populated if fraud detection Decision is <tt>HIGH_RISK</tt>,
--   and only has one possible value: <tt>KNOWN_FRAUDSTER</tt>.
fraudDetectionResult_reasons :: Lens' FraudDetectionResult (Maybe [FraudDetectionReason])

-- | Details about each risk analyzed for this speaker.
fraudDetectionResult_riskDetails :: Lens' FraudDetectionResult (Maybe FraudRiskDetails)

-- | The unique identifier for this fraud detection result. Given there can
--   be multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
fraudDetectionResult_fraudDetectionResultId :: Lens' FraudDetectionResult (Maybe Text)

-- | The fraud detection decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
fraudDetectionResult_decision :: Lens' FraudDetectionResult (Maybe FraudDetectionDecision)

-- | The <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
fraudDetectionResult_configuration :: Lens' FraudDetectionResult (Maybe FraudDetectionConfiguration)

-- | A timestamp indicating when audio aggregation started for this fraud
--   detection result.
fraudDetectionResult_audioAggregationStartedAt :: Lens' FraudDetectionResult (Maybe UTCTime)

-- | A timestamp indicating when audio aggregation ended for this fraud
--   detection result.
fraudDetectionResult_audioAggregationEndedAt :: Lens' FraudDetectionResult (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance GHC.Read.Read Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudDetectionResult.FraudDetectionResult


module Amazonka.VoiceId.Types.OutputDataConfig

-- | The configuration containing output file information for a batch job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe Text -> Text -> OutputDataConfig

-- | the identifier of the KMS key you want Voice ID to use to encrypt the
--   output file of the fraudster registration job.
[$sel:kmsKeyId:OutputDataConfig'] :: OutputDataConfig -> Maybe Text

-- | The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
[$sel:s3Uri:OutputDataConfig'] :: OutputDataConfig -> Text

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:OutputDataConfig'</a>,
--   <a>outputDataConfig_kmsKeyId</a> - the identifier of the KMS key you
--   want Voice ID to use to encrypt the output file of the fraudster
--   registration job.
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
newOutputDataConfig :: Text -> OutputDataConfig

-- | the identifier of the KMS key you want Voice ID to use to encrypt the
--   output file of the fraudster registration job.
outputDataConfig_kmsKeyId :: Lens' OutputDataConfig (Maybe Text)

-- | The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text
instance GHC.Generics.Generic Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance GHC.Show.Show Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance GHC.Read.Read Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance GHC.Classes.Eq Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.OutputDataConfig.OutputDataConfig


module Amazonka.VoiceId.Types.RegistrationConfig

-- | The configuration definining the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster during a batch fraudster registration
--   job.
--   
--   <i>See:</i> <a>newRegistrationConfig</a> smart constructor.
data RegistrationConfig
RegistrationConfig' :: Maybe DuplicateRegistrationAction -> Maybe Natural -> RegistrationConfig

-- | The action to take when a fraudster is identified as a duplicate. The
--   default action is <tt>SKIP</tt>, which skips registering the duplicate
--   fraudster. Setting the value to <tt>REGISTER_AS_NEW</tt> always
--   registers a new fraudster into the specified domain.
[$sel:duplicateRegistrationAction:RegistrationConfig'] :: RegistrationConfig -> Maybe DuplicateRegistrationAction

-- | The minimum similarity score between the new and old fraudsters in
--   order to consider the new fraudster a duplicate.
[$sel:fraudsterSimilarityThreshold:RegistrationConfig'] :: RegistrationConfig -> Maybe Natural

-- | Create a value of <a>RegistrationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:duplicateRegistrationAction:RegistrationConfig'</a>,
--   <a>registrationConfig_duplicateRegistrationAction</a> - The action to
--   take when a fraudster is identified as a duplicate. The default action
--   is <tt>SKIP</tt>, which skips registering the duplicate fraudster.
--   Setting the value to <tt>REGISTER_AS_NEW</tt> always registers a new
--   fraudster into the specified domain.
--   
--   <a>$sel:fraudsterSimilarityThreshold:RegistrationConfig'</a>,
--   <a>registrationConfig_fraudsterSimilarityThreshold</a> - The minimum
--   similarity score between the new and old fraudsters in order to
--   consider the new fraudster a duplicate.
newRegistrationConfig :: RegistrationConfig

-- | The action to take when a fraudster is identified as a duplicate. The
--   default action is <tt>SKIP</tt>, which skips registering the duplicate
--   fraudster. Setting the value to <tt>REGISTER_AS_NEW</tt> always
--   registers a new fraudster into the specified domain.
registrationConfig_duplicateRegistrationAction :: Lens' RegistrationConfig (Maybe DuplicateRegistrationAction)

-- | The minimum similarity score between the new and old fraudsters in
--   order to consider the new fraudster a duplicate.
registrationConfig_fraudsterSimilarityThreshold :: Lens' RegistrationConfig (Maybe Natural)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance GHC.Show.Show Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance GHC.Read.Read Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance GHC.Classes.Eq Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.RegistrationConfig.RegistrationConfig


module Amazonka.VoiceId.Types.FraudsterRegistrationJob

-- | Contains all the information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJob</a> smart constructor.
data FraudsterRegistrationJob
FraudsterRegistrationJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> Maybe RegistrationConfig -> FraudsterRegistrationJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe FailureDetails

-- | The service-generated identifier for the fraudster registration job.
[$sel:jobId:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | A timestamp showing the creation time of the fraudster registration
--   job.
[$sel:createdAt:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe POSIX

-- | The client-provied name for the fraudster registration job.
[$sel:jobName:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe (Sensitive Text)

-- | A timestamp showing when the fraudster registration job ended.
[$sel:endedAt:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe POSIX

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration job requests.
[$sel:inputDataConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe InputDataConfig

-- | Shows the completed percentage of registration requests listed in the
--   input file.
[$sel:jobProgress:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe JobProgress

-- | The output data config containing the S3 location where you want Voice
--   ID to write your job output file; you must also include a KMS Key ID
--   in order to encrypt the file.
[$sel:outputDataConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe OutputDataConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
[$sel:dataAccessRoleArn:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | The identifier of the domain containing the fraudster registration
--   job.
[$sel:domainId:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | The current status of the fraudster registration job.
[$sel:jobStatus:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe FraudsterRegistrationJobStatus

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
[$sel:registrationConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe RegistrationConfig

-- | Create a value of <a>FraudsterRegistrationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_failureDetails</a> - Contains details that
--   are populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_createdAt</a> - A timestamp showing the
--   creation time of the fraudster registration job.
--   
--   <a>$sel:jobName:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobName</a> - The client-provied name for
--   the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_endedAt</a> - A timestamp showing when the
--   fraudster registration job ended.
--   
--   <a>$sel:inputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_inputDataConfig</a> - The input data
--   config containing an S3 URI for the input manifest file that contains
--   the list of fraudster registration job requests.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobProgress</a> - Shows the completed
--   percentage of registration requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_outputDataConfig</a> - The output data
--   config containing the S3 location where you want Voice ID to write
--   your job output file; you must also include a KMS Key ID in order to
--   encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_domainId</a> - The identifier of the
--   domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobStatus</a> - The current status of the
--   fraudster registration job.
--   
--   <a>$sel:registrationConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_registrationConfig</a> - The registration
--   config containing details such as the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster.
newFraudsterRegistrationJob :: FraudsterRegistrationJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJob_failureDetails :: Lens' FraudsterRegistrationJob (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJob_jobId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing the creation time of the fraudster registration
--   job.
fraudsterRegistrationJob_createdAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJob_jobName :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJob_endedAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration job requests.
fraudsterRegistrationJob_inputDataConfig :: Lens' FraudsterRegistrationJob (Maybe InputDataConfig)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJob_jobProgress :: Lens' FraudsterRegistrationJob (Maybe JobProgress)

-- | The output data config containing the S3 location where you want Voice
--   ID to write your job output file; you must also include a KMS Key ID
--   in order to encrypt the file.
fraudsterRegistrationJob_outputDataConfig :: Lens' FraudsterRegistrationJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
fraudsterRegistrationJob_dataAccessRoleArn :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJob_domainId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJob_jobStatus :: Lens' FraudsterRegistrationJob (Maybe FraudsterRegistrationJobStatus)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
fraudsterRegistrationJob_registrationConfig :: Lens' FraudsterRegistrationJob (Maybe RegistrationConfig)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob
instance GHC.Show.Show Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob
instance GHC.Classes.Eq Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.FraudsterRegistrationJob.FraudsterRegistrationJob


module Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration

-- | The configuration containing information about the customer-managed
--   KMS Key used for encrypting customer data.
--   
--   <i>See:</i> <a>newServerSideEncryptionConfiguration</a> smart
--   constructor.
data ServerSideEncryptionConfiguration
ServerSideEncryptionConfiguration' :: Text -> ServerSideEncryptionConfiguration

-- | The identifier of the KMS Key you want Voice ID to use to encrypt your
--   data.
[$sel:kmsKeyId:ServerSideEncryptionConfiguration'] :: ServerSideEncryptionConfiguration -> Text

-- | Create a value of <a>ServerSideEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ServerSideEncryptionConfiguration'</a>,
--   <a>serverSideEncryptionConfiguration_kmsKeyId</a> - The identifier of
--   the KMS Key you want Voice ID to use to encrypt your data.
newServerSideEncryptionConfiguration :: Text -> ServerSideEncryptionConfiguration

-- | The identifier of the KMS Key you want Voice ID to use to encrypt your
--   data.
serverSideEncryptionConfiguration_kmsKeyId :: Lens' ServerSideEncryptionConfiguration Text
instance GHC.Generics.Generic Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance GHC.Show.Show Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance GHC.Read.Read Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance GHC.Classes.Eq Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.ServerSideEncryptionConfiguration.ServerSideEncryptionConfiguration


module Amazonka.VoiceId.Types.DomainSummary

-- | Contains a summary of information about a domain.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> DomainSummary

-- | The current status of the domain.
[$sel:domainStatus:DomainSummary'] :: DomainSummary -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) for the domain.
[$sel:arn:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The timestamp showing when the domain is created.
[$sel:createdAt:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The client-provided name for the domain.
[$sel:name:DomainSummary'] :: DomainSummary -> Maybe (Sensitive Text)

-- | The service-generated identifier for the domain.
[$sel:domainId:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The timestamp showing the domain's last update.
[$sel:updatedAt:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The client-provided description of the domain.
[$sel:description:DomainSummary'] :: DomainSummary -> Maybe (Sensitive Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data..
[$sel:serverSideEncryptionConfiguration:DomainSummary'] :: DomainSummary -> Maybe ServerSideEncryptionConfiguration

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:DomainSummary'</a>,
--   <a>domainSummary_domainStatus</a> - The current status of the domain.
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The Amazon
--   Resource Name (ARN) for the domain.
--   
--   <a>$sel:createdAt:DomainSummary'</a>, <a>domainSummary_createdAt</a> -
--   The timestamp showing when the domain is created.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The
--   client-provided name for the domain.
--   
--   <a>$sel:domainId:DomainSummary'</a>, <a>domainSummary_domainId</a> -
--   The service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:DomainSummary'</a>, <a>domainSummary_updatedAt</a> -
--   The timestamp showing the domain's last update.
--   
--   <a>$sel:description:DomainSummary'</a>,
--   <a>domainSummary_description</a> - The client-provided description of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:DomainSummary'</a>,
--   <a>domainSummary_serverSideEncryptionConfiguration</a> - The
--   server-side encryption configuration containing the KMS Key Identifier
--   you want Voice ID to use to encrypt your data..
newDomainSummary :: DomainSummary

-- | The current status of the domain.
domainSummary_domainStatus :: Lens' DomainSummary (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing when the domain is created.
domainSummary_createdAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided name for the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The service-generated identifier for the domain.
domainSummary_domainId :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing the domain's last update.
domainSummary_updatedAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided description of the domain.
domainSummary_description :: Lens' DomainSummary (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data..
domainSummary_serverSideEncryptionConfiguration :: Lens' DomainSummary (Maybe ServerSideEncryptionConfiguration)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.DomainSummary.DomainSummary
instance GHC.Show.Show Amazonka.VoiceId.Types.DomainSummary.DomainSummary
instance GHC.Classes.Eq Amazonka.VoiceId.Types.DomainSummary.DomainSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.DomainSummary.DomainSummary
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.DomainSummary.DomainSummary
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.DomainSummary.DomainSummary


module Amazonka.VoiceId.Types.Domain

-- | Contains all the information about a domain.
--   
--   <i>See:</i> <a>newDomain</a> smart constructor.
data Domain
Domain' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> Domain

-- | The current status of the domain.
[$sel:domainStatus:Domain'] :: Domain -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) for the domain.
[$sel:arn:Domain'] :: Domain -> Maybe Text

-- | The timestamp at which the domain is created.
[$sel:createdAt:Domain'] :: Domain -> Maybe POSIX

-- | The client-provided name for the domain.
[$sel:name:Domain'] :: Domain -> Maybe (Sensitive Text)

-- | The service-generated identifier for the domain.
[$sel:domainId:Domain'] :: Domain -> Maybe Text

-- | The timestamp showing the domain's last update.
[$sel:updatedAt:Domain'] :: Domain -> Maybe POSIX

-- | The client-provided description of the domain.
[$sel:description:Domain'] :: Domain -> Maybe (Sensitive Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data.
[$sel:serverSideEncryptionConfiguration:Domain'] :: Domain -> Maybe ServerSideEncryptionConfiguration

-- | Create a value of <a>Domain</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:Domain'</a>, <a>domain_domainStatus</a> - The
--   current status of the domain.
--   
--   <a>$sel:arn:Domain'</a>, <a>domain_arn</a> - The Amazon Resource Name
--   (ARN) for the domain.
--   
--   <a>$sel:createdAt:Domain'</a>, <a>domain_createdAt</a> - The timestamp
--   at which the domain is created.
--   
--   <a>$sel:name:Domain'</a>, <a>domain_name</a> - The client-provided
--   name for the domain.
--   
--   <a>$sel:domainId:Domain'</a>, <a>domain_domainId</a> - The
--   service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:Domain'</a>, <a>domain_updatedAt</a> - The timestamp
--   showing the domain's last update.
--   
--   <a>$sel:description:Domain'</a>, <a>domain_description</a> - The
--   client-provided description of the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:Domain'</a>,
--   <a>domain_serverSideEncryptionConfiguration</a> - The server-side
--   encryption configuration containing the KMS Key Identifier you want
--   Voice ID to use to encrypt your data.
newDomain :: Domain

-- | The current status of the domain.
domain_domainStatus :: Lens' Domain (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domain_arn :: Lens' Domain (Maybe Text)

-- | The timestamp at which the domain is created.
domain_createdAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided name for the domain.
domain_name :: Lens' Domain (Maybe Text)

-- | The service-generated identifier for the domain.
domain_domainId :: Lens' Domain (Maybe Text)

-- | The timestamp showing the domain's last update.
domain_updatedAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided description of the domain.
domain_description :: Lens' Domain (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data.
domain_serverSideEncryptionConfiguration :: Lens' Domain (Maybe ServerSideEncryptionConfiguration)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.Domain.Domain
instance GHC.Show.Show Amazonka.VoiceId.Types.Domain.Domain
instance GHC.Classes.Eq Amazonka.VoiceId.Types.Domain.Domain
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.Domain.Domain
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.Domain.Domain
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.Domain.Domain


module Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus
newtype SpeakerEnrollmentJobStatus
SpeakerEnrollmentJobStatus' :: Text -> SpeakerEnrollmentJobStatus
[fromSpeakerEnrollmentJobStatus] :: SpeakerEnrollmentJobStatus -> Text
pattern SpeakerEnrollmentJobStatus_COMPLETED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_COMPLETED_WITH_ERRORS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_FAILED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_IN_PROGRESS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_SUBMITTED :: SpeakerEnrollmentJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance GHC.Generics.Generic Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance GHC.Classes.Ord Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance GHC.Classes.Eq Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance GHC.Read.Read Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus
instance GHC.Show.Show Amazonka.VoiceId.Types.SpeakerEnrollmentJobStatus.SpeakerEnrollmentJobStatus


module Amazonka.VoiceId.Types.SpeakerEnrollmentJob

-- | Contains all the information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJob</a> smart constructor.
data SpeakerEnrollmentJob
SpeakerEnrollmentJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe EnrollmentConfig -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe FailureDetails

-- | The service-generated identifier for the speaker enrollment job.
[$sel:jobId:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | A timestamp showing the creation of the speaker enrollment job.
[$sel:createdAt:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe POSIX

-- | The client-provided name for the speaker enrollment job.
[$sel:jobName:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker enrollment job ended.
[$sel:endedAt:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe POSIX

-- | The configuration that defines the action to take when the speaker is
--   already enrolled in Voice ID, and the <tt>FraudDetectionConfig</tt> to
--   use.
[$sel:enrollmentConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe EnrollmentConfig

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of speaker enrollment job requests.
[$sel:inputDataConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe InputDataConfig

-- | Provides details on job progress. This field shows the completed
--   percentage of registration requests listed in the input file.
[$sel:jobProgress:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe JobProgress

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
[$sel:outputDataConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe OutputDataConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
[$sel:dataAccessRoleArn:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | The identifier of the domain that contains the speaker enrollment job.
[$sel:domainId:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | The current status of the speaker enrollment job.
[$sel:jobStatus:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe SpeakerEnrollmentJobStatus

-- | Create a value of <a>SpeakerEnrollmentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_failureDetails</a> - Contains details that are
--   populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobId</a> - The service-generated identifier
--   for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_createdAt</a> - A timestamp showing the
--   creation of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobName</a> - The client-provided name for the
--   speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_endedAt</a> - A timestamp showing when the
--   speaker enrollment job ended.
--   
--   <a>$sel:enrollmentConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_enrollmentConfig</a> - The configuration that
--   defines the action to take when the speaker is already enrolled in
--   Voice ID, and the <tt>FraudDetectionConfig</tt> to use.
--   
--   <a>$sel:inputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_inputDataConfig</a> - The input data config
--   containing an S3 URI for the input manifest file that contains the
--   list of speaker enrollment job requests.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobProgress</a> - Provides details on job
--   progress. This field shows the completed percentage of registration
--   requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_outputDataConfig</a> - The output data config
--   containing the S3 location where Voice ID writes the job output file;
--   you must also include a KMS Key ID to encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_dataAccessRoleArn</a> - The IAM role Amazon
--   Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_domainId</a> - The identifier of the domain
--   that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobStatus</a> - The current status of the
--   speaker enrollment job.
newSpeakerEnrollmentJob :: SpeakerEnrollmentJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJob_failureDetails :: Lens' SpeakerEnrollmentJob (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJob_jobId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing the creation of the speaker enrollment job.
speakerEnrollmentJob_createdAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJob_jobName :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJob_endedAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The configuration that defines the action to take when the speaker is
--   already enrolled in Voice ID, and the <tt>FraudDetectionConfig</tt> to
--   use.
speakerEnrollmentJob_enrollmentConfig :: Lens' SpeakerEnrollmentJob (Maybe EnrollmentConfig)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of speaker enrollment job requests.
speakerEnrollmentJob_inputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe InputDataConfig)

-- | Provides details on job progress. This field shows the completed
--   percentage of registration requests listed in the input file.
speakerEnrollmentJob_jobProgress :: Lens' SpeakerEnrollmentJob (Maybe JobProgress)

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
speakerEnrollmentJob_outputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
speakerEnrollmentJob_dataAccessRoleArn :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJob_domainId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJob_jobStatus :: Lens' SpeakerEnrollmentJob (Maybe SpeakerEnrollmentJobStatus)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob
instance GHC.Show.Show Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob
instance GHC.Classes.Eq Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.SpeakerEnrollmentJob.SpeakerEnrollmentJob


module Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary

-- | Contains a summary of information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJobSummary</a> smart constructor.
data SpeakerEnrollmentJobSummary
SpeakerEnrollmentJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe FailureDetails

-- | The service-generated identifier for the speaker enrollment job.
[$sel:jobId:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe Text

-- | A timestamp showing the creation time of the speaker enrollment job.
[$sel:createdAt:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe POSIX

-- | The client-provided name for the speaker enrollment job.
[$sel:jobName:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker enrollment job ended.
[$sel:endedAt:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe POSIX

-- | Provides details regarding job progress. This field shows the
--   completed percentage of enrollment requests listed in the input file.
[$sel:jobProgress:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe JobProgress

-- | The identifier of the domain that contains the speaker enrollment job.
[$sel:domainId:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe Text

-- | The current status of the speaker enrollment job.
[$sel:jobStatus:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe SpeakerEnrollmentJobStatus

-- | Create a value of <a>SpeakerEnrollmentJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_failureDetails</a> - Contains details
--   that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobId</a> - The service-generated
--   identifier for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_createdAt</a> - A timestamp showing the
--   creation time of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobName</a> - The client-provided name
--   for the speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_endedAt</a> - A timestamp showing when
--   the speaker enrollment job ended.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobProgress</a> - Provides details
--   regarding job progress. This field shows the completed percentage of
--   enrollment requests listed in the input file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_domainId</a> - The identifier of the
--   domain that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobStatus</a> - The current status of
--   the speaker enrollment job.
newSpeakerEnrollmentJobSummary :: SpeakerEnrollmentJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJobSummary_failureDetails :: Lens' SpeakerEnrollmentJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJobSummary_jobId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing the creation time of the speaker enrollment job.
speakerEnrollmentJobSummary_createdAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJobSummary_jobName :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJobSummary_endedAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | Provides details regarding job progress. This field shows the
--   completed percentage of enrollment requests listed in the input file.
speakerEnrollmentJobSummary_jobProgress :: Lens' SpeakerEnrollmentJobSummary (Maybe JobProgress)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJobSummary_domainId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJobSummary_jobStatus :: Lens' SpeakerEnrollmentJobSummary (Maybe SpeakerEnrollmentJobStatus)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary
instance GHC.Show.Show Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary
instance GHC.Classes.Eq Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.SpeakerEnrollmentJobSummary.SpeakerEnrollmentJobSummary


module Amazonka.VoiceId.Types.SpeakerStatus
newtype SpeakerStatus
SpeakerStatus' :: Text -> SpeakerStatus
[fromSpeakerStatus] :: SpeakerStatus -> Text
pattern SpeakerStatus_ENROLLED :: SpeakerStatus
pattern SpeakerStatus_EXPIRED :: SpeakerStatus
pattern SpeakerStatus_OPTED_OUT :: SpeakerStatus
pattern SpeakerStatus_PENDING :: SpeakerStatus
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance GHC.Generics.Generic Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance GHC.Classes.Ord Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance GHC.Classes.Eq Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance GHC.Read.Read Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus
instance GHC.Show.Show Amazonka.VoiceId.Types.SpeakerStatus.SpeakerStatus


module Amazonka.VoiceId.Types.Speaker

-- | Contains all the information about a speaker.
--   
--   <i>See:</i> <a>newSpeaker</a> smart constructor.
data Speaker
Speaker' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Speaker

-- | The current status of the speaker.
[$sel:status:Speaker'] :: Speaker -> Maybe SpeakerStatus

-- | The client-provided identifier for the speaker.
[$sel:customerSpeakerId:Speaker'] :: Speaker -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker is created.
[$sel:createdAt:Speaker'] :: Speaker -> Maybe POSIX

-- | The identifier of the domain that contains the speaker.
[$sel:domainId:Speaker'] :: Speaker -> Maybe Text

-- | A timestamp showing the speaker's last update.
[$sel:updatedAt:Speaker'] :: Speaker -> Maybe POSIX

-- | The service-generated identifier for the speaker.
[$sel:generatedSpeakerId:Speaker'] :: Speaker -> Maybe Text

-- | Create a value of <a>Speaker</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Speaker'</a>, <a>speaker_status</a> - The current
--   status of the speaker.
--   
--   <a>$sel:customerSpeakerId:Speaker'</a>,
--   <a>speaker_customerSpeakerId</a> - The client-provided identifier for
--   the speaker.
--   
--   <a>$sel:createdAt:Speaker'</a>, <a>speaker_createdAt</a> - A timestamp
--   showing when the speaker is created.
--   
--   <a>$sel:domainId:Speaker'</a>, <a>speaker_domainId</a> - The
--   identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:Speaker'</a>, <a>speaker_updatedAt</a> - A timestamp
--   showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:Speaker'</a>,
--   <a>speaker_generatedSpeakerId</a> - The service-generated identifier
--   for the speaker.
newSpeaker :: Speaker

-- | The current status of the speaker.
speaker_status :: Lens' Speaker (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speaker_customerSpeakerId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing when the speaker is created.
speaker_createdAt :: Lens' Speaker (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speaker_domainId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing the speaker's last update.
speaker_updatedAt :: Lens' Speaker (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speaker_generatedSpeakerId :: Lens' Speaker (Maybe Text)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.Speaker.Speaker
instance GHC.Show.Show Amazonka.VoiceId.Types.Speaker.Speaker
instance GHC.Classes.Eq Amazonka.VoiceId.Types.Speaker.Speaker
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.Speaker.Speaker
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.Speaker.Speaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.Speaker.Speaker


module Amazonka.VoiceId.Types.SpeakerSummary

-- | Contains a summary of information about a speaker.
--   
--   <i>See:</i> <a>newSpeakerSummary</a> smart constructor.
data SpeakerSummary
SpeakerSummary' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> SpeakerSummary

-- | The current status of the speaker.
[$sel:status:SpeakerSummary'] :: SpeakerSummary -> Maybe SpeakerStatus

-- | The client-provided identifier for the speaker.
[$sel:customerSpeakerId:SpeakerSummary'] :: SpeakerSummary -> Maybe (Sensitive Text)

-- | A timestamp showing the speaker's creation time.
[$sel:createdAt:SpeakerSummary'] :: SpeakerSummary -> Maybe POSIX

-- | The identifier of the domain that contains the speaker.
[$sel:domainId:SpeakerSummary'] :: SpeakerSummary -> Maybe Text

-- | A timestamp showing the speaker's last update.
[$sel:updatedAt:SpeakerSummary'] :: SpeakerSummary -> Maybe POSIX

-- | The service-generated identifier for the speaker.
[$sel:generatedSpeakerId:SpeakerSummary'] :: SpeakerSummary -> Maybe Text

-- | Create a value of <a>SpeakerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SpeakerSummary'</a>, <a>speakerSummary_status</a> - The
--   current status of the speaker.
--   
--   <a>$sel:customerSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_customerSpeakerId</a> - The client-provided
--   identifier for the speaker.
--   
--   <a>$sel:createdAt:SpeakerSummary'</a>, <a>speakerSummary_createdAt</a>
--   - A timestamp showing the speaker's creation time.
--   
--   <a>$sel:domainId:SpeakerSummary'</a>, <a>speakerSummary_domainId</a> -
--   The identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:SpeakerSummary'</a>, <a>speakerSummary_updatedAt</a>
--   - A timestamp showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker.
newSpeakerSummary :: SpeakerSummary

-- | The current status of the speaker.
speakerSummary_status :: Lens' SpeakerSummary (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speakerSummary_customerSpeakerId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's creation time.
speakerSummary_createdAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speakerSummary_domainId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's last update.
speakerSummary_updatedAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speakerSummary_generatedSpeakerId :: Lens' SpeakerSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary
instance GHC.Show.Show Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary
instance GHC.Classes.Eq Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.SpeakerSummary.SpeakerSummary


module Amazonka.VoiceId.Types.StreamingStatus
newtype StreamingStatus
StreamingStatus' :: Text -> StreamingStatus
[fromStreamingStatus] :: StreamingStatus -> Text
pattern StreamingStatus_ENDED :: StreamingStatus
pattern StreamingStatus_ONGOING :: StreamingStatus
pattern StreamingStatus_PENDING_CONFIGURATION :: StreamingStatus
instance Amazonka.Data.XML.ToXML Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.XML.FromXML Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.Log.ToLog Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.Text.ToText Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Amazonka.Data.Text.FromText Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance GHC.Generics.Generic Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance GHC.Classes.Ord Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance GHC.Classes.Eq Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance GHC.Read.Read Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus
instance GHC.Show.Show Amazonka.VoiceId.Types.StreamingStatus.StreamingStatus


module Amazonka.VoiceId.Types.Tag

-- | A tag that can be assigned to a Voice ID resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | The first part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the key
--   is 'Department'.
[$sel:key:Tag'] :: Tag -> Sensitive Text

-- | The second part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the
--   value is 'Sales'.
[$sel:value:Tag'] :: Tag -> Sensitive Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The first part of a key:value
--   pair that forms a tag associated with a given resource. For example,
--   in the tag ‘Department’:’Sales’, the key is 'Department'.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The second part of a
--   key:value pair that forms a tag associated with a given resource. For
--   example, in the tag ‘Department’:’Sales’, the value is 'Sales'.
newTag :: Text -> Text -> Tag

-- | The first part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the key
--   is 'Department'.
tag_key :: Lens' Tag Text

-- | The second part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the
--   value is 'Sales'.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.VoiceId.Types.Tag.Tag
instance GHC.Show.Show Amazonka.VoiceId.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.VoiceId.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.VoiceId.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.VoiceId.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.Types.Tag.Tag


module Amazonka.VoiceId.Types

-- | API version <tt>2021-09-27</tt> of the Amazon Voice ID SDK
--   configuration.
defaultService :: Service

-- | The request failed one or more validations; check the error message
--   for more details.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient permissions to perform this action. Check
--   the error message and try again.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed due to a conflict. Check the <tt>ConflictType</tt>
--   and error message for more details.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded the service quota. Refer to <a>Voice ID Service
--   Quotas</a> and try your request again.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling. Please slow down
--   your request rate. Refer to <a>Amazon Connect Voice ID Service API
--   throttling quotas</a> and try your request again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed due to an unknown error on the server side.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource cannot be found. Check the
--   <tt>ResourceType</tt> and error message for more details.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AuthenticationDecision
AuthenticationDecision' :: Text -> AuthenticationDecision
[fromAuthenticationDecision] :: AuthenticationDecision -> Text
pattern AuthenticationDecision_ACCEPT :: AuthenticationDecision
pattern AuthenticationDecision_NOT_ENOUGH_SPEECH :: AuthenticationDecision
pattern AuthenticationDecision_REJECT :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_ID_NOT_PROVIDED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_NOT_ENROLLED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_OPTED_OUT :: AuthenticationDecision
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_ACTIVE :: DomainStatus
pattern DomainStatus_PENDING :: DomainStatus
pattern DomainStatus_SUSPENDED :: DomainStatus
newtype DuplicateRegistrationAction
DuplicateRegistrationAction' :: Text -> DuplicateRegistrationAction
[fromDuplicateRegistrationAction] :: DuplicateRegistrationAction -> Text
pattern DuplicateRegistrationAction_REGISTER_AS_NEW :: DuplicateRegistrationAction
pattern DuplicateRegistrationAction_SKIP :: DuplicateRegistrationAction
newtype ExistingEnrollmentAction
ExistingEnrollmentAction' :: Text -> ExistingEnrollmentAction
[fromExistingEnrollmentAction] :: ExistingEnrollmentAction -> Text
pattern ExistingEnrollmentAction_OVERWRITE :: ExistingEnrollmentAction
pattern ExistingEnrollmentAction_SKIP :: ExistingEnrollmentAction
newtype FraudDetectionAction
FraudDetectionAction' :: Text -> FraudDetectionAction
[fromFraudDetectionAction] :: FraudDetectionAction -> Text
pattern FraudDetectionAction_FAIL :: FraudDetectionAction
pattern FraudDetectionAction_IGNORE :: FraudDetectionAction
newtype FraudDetectionDecision
FraudDetectionDecision' :: Text -> FraudDetectionDecision
[fromFraudDetectionDecision] :: FraudDetectionDecision -> Text
pattern FraudDetectionDecision_HIGH_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_LOW_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_NOT_ENOUGH_SPEECH :: FraudDetectionDecision
newtype FraudDetectionReason
FraudDetectionReason' :: Text -> FraudDetectionReason
[fromFraudDetectionReason] :: FraudDetectionReason -> Text
pattern FraudDetectionReason_KNOWN_FRAUDSTER :: FraudDetectionReason
newtype FraudsterRegistrationJobStatus
FraudsterRegistrationJobStatus' :: Text -> FraudsterRegistrationJobStatus
[fromFraudsterRegistrationJobStatus] :: FraudsterRegistrationJobStatus -> Text
pattern FraudsterRegistrationJobStatus_COMPLETED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_COMPLETED_WITH_ERRORS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_FAILED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_IN_PROGRESS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_SUBMITTED :: FraudsterRegistrationJobStatus
newtype SpeakerEnrollmentJobStatus
SpeakerEnrollmentJobStatus' :: Text -> SpeakerEnrollmentJobStatus
[fromSpeakerEnrollmentJobStatus] :: SpeakerEnrollmentJobStatus -> Text
pattern SpeakerEnrollmentJobStatus_COMPLETED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_COMPLETED_WITH_ERRORS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_FAILED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_IN_PROGRESS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_SUBMITTED :: SpeakerEnrollmentJobStatus
newtype SpeakerStatus
SpeakerStatus' :: Text -> SpeakerStatus
[fromSpeakerStatus] :: SpeakerStatus -> Text
pattern SpeakerStatus_ENROLLED :: SpeakerStatus
pattern SpeakerStatus_EXPIRED :: SpeakerStatus
pattern SpeakerStatus_OPTED_OUT :: SpeakerStatus
pattern SpeakerStatus_PENDING :: SpeakerStatus
newtype StreamingStatus
StreamingStatus' :: Text -> StreamingStatus
[fromStreamingStatus] :: StreamingStatus -> Text
pattern StreamingStatus_ENDED :: StreamingStatus
pattern StreamingStatus_ONGOING :: StreamingStatus
pattern StreamingStatus_PENDING_CONFIGURATION :: StreamingStatus

-- | The configuration used to authenticate a speaker during a session.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Natural -> AuthenticationConfiguration

-- | The minimum threshold needed to successfully authenticate a speaker.
[$sel:acceptanceThreshold:AuthenticationConfiguration'] :: AuthenticationConfiguration -> Natural

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptanceThreshold:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_acceptanceThreshold</a> - The minimum
--   threshold needed to successfully authenticate a speaker.
newAuthenticationConfiguration :: Natural -> AuthenticationConfiguration

-- | The minimum threshold needed to successfully authenticate a speaker.
authenticationConfiguration_acceptanceThreshold :: Lens' AuthenticationConfiguration Natural

-- | The authentication result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newAuthenticationResult</a> smart constructor.
data AuthenticationResult
AuthenticationResult' :: Maybe (Sensitive Text) -> Maybe Natural -> Maybe Text -> Maybe AuthenticationDecision -> Maybe AuthenticationConfiguration -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> AuthenticationResult

-- | The client-provided identifier for the speaker whose authentication
--   result is produced. Only present if a <tt>SpeakerId</tt> is provided
--   for the session.
[$sel:customerSpeakerId:AuthenticationResult'] :: AuthenticationResult -> Maybe (Sensitive Text)

-- | The authentication score for the speaker whose authentication result
--   is produced. This value is only present if the authentication decision
--   is either <tt>ACCEPT</tt> or <tt>REJECT</tt>.
[$sel:score:AuthenticationResult'] :: AuthenticationResult -> Maybe Natural

-- | The unique identifier for this authentication result. Because there
--   can be multiple authentications for a given session, this field helps
--   to identify if the returned result is from a previous streaming
--   activity or a new result. Note that in absence of any new streaming
--   activity, <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt>
--   changes, Voice ID always returns cached Authentication Result for this
--   API.
[$sel:authenticationResultId:AuthenticationResult'] :: AuthenticationResult -> Maybe Text

-- | The authentication decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
[$sel:decision:AuthenticationResult'] :: AuthenticationResult -> Maybe AuthenticationDecision

-- | The <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
[$sel:configuration:AuthenticationResult'] :: AuthenticationResult -> Maybe AuthenticationConfiguration

-- | A timestamp indicating when audio aggregation started for this
--   authentication result.
[$sel:audioAggregationStartedAt:AuthenticationResult'] :: AuthenticationResult -> Maybe POSIX

-- | The service-generated identifier for the speaker whose authentication
--   result is produced.
[$sel:generatedSpeakerId:AuthenticationResult'] :: AuthenticationResult -> Maybe Text

-- | A timestamp indicating when audio aggregation ended for this
--   authentication result.
[$sel:audioAggregationEndedAt:AuthenticationResult'] :: AuthenticationResult -> Maybe POSIX

-- | Create a value of <a>AuthenticationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_customerSpeakerId</a> - The client-provided
--   identifier for the speaker whose authentication result is produced.
--   Only present if a <tt>SpeakerId</tt> is provided for the session.
--   
--   <a>$sel:score:AuthenticationResult'</a>,
--   <a>authenticationResult_score</a> - The authentication score for the
--   speaker whose authentication result is produced. This value is only
--   present if the authentication decision is either <tt>ACCEPT</tt> or
--   <tt>REJECT</tt>.
--   
--   <a>$sel:authenticationResultId:AuthenticationResult'</a>,
--   <a>authenticationResult_authenticationResultId</a> - The unique
--   identifier for this authentication result. Because there can be
--   multiple authentications for a given session, this field helps to
--   identify if the returned result is from a previous streaming activity
--   or a new result. Note that in absence of any new streaming activity,
--   <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt> changes,
--   Voice ID always returns cached Authentication Result for this API.
--   
--   <a>$sel:decision:AuthenticationResult'</a>,
--   <a>authenticationResult_decision</a> - The authentication decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:AuthenticationResult'</a>,
--   <a>authenticationResult_configuration</a> - The
--   <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
--   
--   <a>$sel:audioAggregationStartedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this authentication
--   result.
--   
--   <a>$sel:generatedSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker whose authentication result is produced.
--   
--   <a>$sel:audioAggregationEndedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this authentication
--   result.
newAuthenticationResult :: AuthenticationResult

-- | The client-provided identifier for the speaker whose authentication
--   result is produced. Only present if a <tt>SpeakerId</tt> is provided
--   for the session.
authenticationResult_customerSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication score for the speaker whose authentication result
--   is produced. This value is only present if the authentication decision
--   is either <tt>ACCEPT</tt> or <tt>REJECT</tt>.
authenticationResult_score :: Lens' AuthenticationResult (Maybe Natural)

-- | The unique identifier for this authentication result. Because there
--   can be multiple authentications for a given session, this field helps
--   to identify if the returned result is from a previous streaming
--   activity or a new result. Note that in absence of any new streaming
--   activity, <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt>
--   changes, Voice ID always returns cached Authentication Result for this
--   API.
authenticationResult_authenticationResultId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
authenticationResult_decision :: Lens' AuthenticationResult (Maybe AuthenticationDecision)

-- | The <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
authenticationResult_configuration :: Lens' AuthenticationResult (Maybe AuthenticationConfiguration)

-- | A timestamp indicating when audio aggregation started for this
--   authentication result.
authenticationResult_audioAggregationStartedAt :: Lens' AuthenticationResult (Maybe UTCTime)

-- | The service-generated identifier for the speaker whose authentication
--   result is produced.
authenticationResult_generatedSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | A timestamp indicating when audio aggregation ended for this
--   authentication result.
authenticationResult_audioAggregationEndedAt :: Lens' AuthenticationResult (Maybe UTCTime)

-- | Contains all the information about a domain.
--   
--   <i>See:</i> <a>newDomain</a> smart constructor.
data Domain
Domain' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> Domain

-- | The current status of the domain.
[$sel:domainStatus:Domain'] :: Domain -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) for the domain.
[$sel:arn:Domain'] :: Domain -> Maybe Text

-- | The timestamp at which the domain is created.
[$sel:createdAt:Domain'] :: Domain -> Maybe POSIX

-- | The client-provided name for the domain.
[$sel:name:Domain'] :: Domain -> Maybe (Sensitive Text)

-- | The service-generated identifier for the domain.
[$sel:domainId:Domain'] :: Domain -> Maybe Text

-- | The timestamp showing the domain's last update.
[$sel:updatedAt:Domain'] :: Domain -> Maybe POSIX

-- | The client-provided description of the domain.
[$sel:description:Domain'] :: Domain -> Maybe (Sensitive Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data.
[$sel:serverSideEncryptionConfiguration:Domain'] :: Domain -> Maybe ServerSideEncryptionConfiguration

-- | Create a value of <a>Domain</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:Domain'</a>, <a>domain_domainStatus</a> - The
--   current status of the domain.
--   
--   <a>$sel:arn:Domain'</a>, <a>domain_arn</a> - The Amazon Resource Name
--   (ARN) for the domain.
--   
--   <a>$sel:createdAt:Domain'</a>, <a>domain_createdAt</a> - The timestamp
--   at which the domain is created.
--   
--   <a>$sel:name:Domain'</a>, <a>domain_name</a> - The client-provided
--   name for the domain.
--   
--   <a>$sel:domainId:Domain'</a>, <a>domain_domainId</a> - The
--   service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:Domain'</a>, <a>domain_updatedAt</a> - The timestamp
--   showing the domain's last update.
--   
--   <a>$sel:description:Domain'</a>, <a>domain_description</a> - The
--   client-provided description of the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:Domain'</a>,
--   <a>domain_serverSideEncryptionConfiguration</a> - The server-side
--   encryption configuration containing the KMS Key Identifier you want
--   Voice ID to use to encrypt your data.
newDomain :: Domain

-- | The current status of the domain.
domain_domainStatus :: Lens' Domain (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domain_arn :: Lens' Domain (Maybe Text)

-- | The timestamp at which the domain is created.
domain_createdAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided name for the domain.
domain_name :: Lens' Domain (Maybe Text)

-- | The service-generated identifier for the domain.
domain_domainId :: Lens' Domain (Maybe Text)

-- | The timestamp showing the domain's last update.
domain_updatedAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided description of the domain.
domain_description :: Lens' Domain (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data.
domain_serverSideEncryptionConfiguration :: Lens' Domain (Maybe ServerSideEncryptionConfiguration)

-- | Contains a summary of information about a domain.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> DomainSummary

-- | The current status of the domain.
[$sel:domainStatus:DomainSummary'] :: DomainSummary -> Maybe DomainStatus

-- | The Amazon Resource Name (ARN) for the domain.
[$sel:arn:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The timestamp showing when the domain is created.
[$sel:createdAt:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The client-provided name for the domain.
[$sel:name:DomainSummary'] :: DomainSummary -> Maybe (Sensitive Text)

-- | The service-generated identifier for the domain.
[$sel:domainId:DomainSummary'] :: DomainSummary -> Maybe Text

-- | The timestamp showing the domain's last update.
[$sel:updatedAt:DomainSummary'] :: DomainSummary -> Maybe POSIX

-- | The client-provided description of the domain.
[$sel:description:DomainSummary'] :: DomainSummary -> Maybe (Sensitive Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data..
[$sel:serverSideEncryptionConfiguration:DomainSummary'] :: DomainSummary -> Maybe ServerSideEncryptionConfiguration

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:DomainSummary'</a>,
--   <a>domainSummary_domainStatus</a> - The current status of the domain.
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The Amazon
--   Resource Name (ARN) for the domain.
--   
--   <a>$sel:createdAt:DomainSummary'</a>, <a>domainSummary_createdAt</a> -
--   The timestamp showing when the domain is created.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The
--   client-provided name for the domain.
--   
--   <a>$sel:domainId:DomainSummary'</a>, <a>domainSummary_domainId</a> -
--   The service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:DomainSummary'</a>, <a>domainSummary_updatedAt</a> -
--   The timestamp showing the domain's last update.
--   
--   <a>$sel:description:DomainSummary'</a>,
--   <a>domainSummary_description</a> - The client-provided description of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:DomainSummary'</a>,
--   <a>domainSummary_serverSideEncryptionConfiguration</a> - The
--   server-side encryption configuration containing the KMS Key Identifier
--   you want Voice ID to use to encrypt your data..
newDomainSummary :: DomainSummary

-- | The current status of the domain.
domainSummary_domainStatus :: Lens' DomainSummary (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing when the domain is created.
domainSummary_createdAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided name for the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The service-generated identifier for the domain.
domainSummary_domainId :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing the domain's last update.
domainSummary_updatedAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided description of the domain.
domainSummary_description :: Lens' DomainSummary (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data..
domainSummary_serverSideEncryptionConfiguration :: Lens' DomainSummary (Maybe ServerSideEncryptionConfiguration)

-- | Contains configurations defining enrollment behavior for the batch
--   job.
--   
--   <i>See:</i> <a>newEnrollmentConfig</a> smart constructor.
data EnrollmentConfig
EnrollmentConfig' :: Maybe EnrollmentJobFraudDetectionConfig -> Maybe ExistingEnrollmentAction -> EnrollmentConfig

-- | The fraud detection configuration to use for the speaker enrollment
--   job.
[$sel:fraudDetectionConfig:EnrollmentConfig'] :: EnrollmentConfig -> Maybe EnrollmentJobFraudDetectionConfig

-- | The action to take when the specified speaker is already enrolled in
--   the specified domain. The default value is <tt>SKIP</tt>, which skips
--   the enrollment for the existing speaker. Setting the value to
--   <tt>OVERWRITE</tt> replaces the existing voice prints and enrollment
--   audio stored for that speaker with new data generated from the latest
--   audio.
[$sel:existingEnrollmentAction:EnrollmentConfig'] :: EnrollmentConfig -> Maybe ExistingEnrollmentAction

-- | Create a value of <a>EnrollmentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudDetectionConfig:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_fraudDetectionConfig</a> - The fraud detection
--   configuration to use for the speaker enrollment job.
--   
--   <a>$sel:existingEnrollmentAction:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_existingEnrollmentAction</a> - The action to take
--   when the specified speaker is already enrolled in the specified
--   domain. The default value is <tt>SKIP</tt>, which skips the enrollment
--   for the existing speaker. Setting the value to <tt>OVERWRITE</tt>
--   replaces the existing voice prints and enrollment audio stored for
--   that speaker with new data generated from the latest audio.
newEnrollmentConfig :: EnrollmentConfig

-- | The fraud detection configuration to use for the speaker enrollment
--   job.
enrollmentConfig_fraudDetectionConfig :: Lens' EnrollmentConfig (Maybe EnrollmentJobFraudDetectionConfig)

-- | The action to take when the specified speaker is already enrolled in
--   the specified domain. The default value is <tt>SKIP</tt>, which skips
--   the enrollment for the existing speaker. Setting the value to
--   <tt>OVERWRITE</tt> replaces the existing voice prints and enrollment
--   audio stored for that speaker with new data generated from the latest
--   audio.
enrollmentConfig_existingEnrollmentAction :: Lens' EnrollmentConfig (Maybe ExistingEnrollmentAction)

-- | The configuration defining the action to take when a speaker is
--   flagged by the fraud detection system during a batch speaker
--   enrollment job, and the risk threshold to use for identification.
--   
--   <i>See:</i> <a>newEnrollmentJobFraudDetectionConfig</a> smart
--   constructor.
data EnrollmentJobFraudDetectionConfig
EnrollmentJobFraudDetectionConfig' :: Maybe Natural -> Maybe FraudDetectionAction -> EnrollmentJobFraudDetectionConfig

-- | Threshold value for determining whether the speaker is a high risk to
--   be fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
[$sel:riskThreshold:EnrollmentJobFraudDetectionConfig'] :: EnrollmentJobFraudDetectionConfig -> Maybe Natural

-- | The action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
[$sel:fraudDetectionAction:EnrollmentJobFraudDetectionConfig'] :: EnrollmentJobFraudDetectionConfig -> Maybe FraudDetectionAction

-- | Create a value of <a>EnrollmentJobFraudDetectionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_riskThreshold</a> - Threshold
--   value for determining whether the speaker is a high risk to be
--   fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
--   
--   <a>$sel:fraudDetectionAction:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_fraudDetectionAction</a> - The
--   action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
newEnrollmentJobFraudDetectionConfig :: EnrollmentJobFraudDetectionConfig

-- | Threshold value for determining whether the speaker is a high risk to
--   be fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
enrollmentJobFraudDetectionConfig_riskThreshold :: Lens' EnrollmentJobFraudDetectionConfig (Maybe Natural)

-- | The action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
enrollmentJobFraudDetectionConfig_fraudDetectionAction :: Lens' EnrollmentJobFraudDetectionConfig (Maybe FraudDetectionAction)

-- | Contains error details for a failed batch job.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> Maybe Int -> FailureDetails

-- | A description of the error that caused the batch job failure.
[$sel:message:FailureDetails'] :: FailureDetails -> Maybe Text

-- | An HTTP status code representing the nature of the error.
[$sel:statusCode:FailureDetails'] :: FailureDetails -> Maybe Int

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> - A
--   description of the error that caused the batch job failure.
--   
--   <a>$sel:statusCode:FailureDetails'</a>,
--   <a>failureDetails_statusCode</a> - An HTTP status code representing
--   the nature of the error.
newFailureDetails :: FailureDetails

-- | A description of the error that caused the batch job failure.
failureDetails_message :: Lens' FailureDetails (Maybe Text)

-- | An HTTP status code representing the nature of the error.
failureDetails_statusCode :: Lens' FailureDetails (Maybe Int)

-- | The configuration used for performing fraud detection over a speaker
--   during a session.
--   
--   <i>See:</i> <a>newFraudDetectionConfiguration</a> smart constructor.
data FraudDetectionConfiguration
FraudDetectionConfiguration' :: Natural -> FraudDetectionConfiguration

-- | Threshold value for determining whether the speaker is a fraudster. If
--   the detected risk score calculated by Voice ID is higher than the
--   threshold, the speaker is considered a fraudster.
[$sel:riskThreshold:FraudDetectionConfiguration'] :: FraudDetectionConfiguration -> Natural

-- | Create a value of <a>FraudDetectionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:FraudDetectionConfiguration'</a>,
--   <a>fraudDetectionConfiguration_riskThreshold</a> - Threshold value for
--   determining whether the speaker is a fraudster. If the detected risk
--   score calculated by Voice ID is higher than the threshold, the speaker
--   is considered a fraudster.
newFraudDetectionConfiguration :: Natural -> FraudDetectionConfiguration

-- | Threshold value for determining whether the speaker is a fraudster. If
--   the detected risk score calculated by Voice ID is higher than the
--   threshold, the speaker is considered a fraudster.
fraudDetectionConfiguration_riskThreshold :: Lens' FraudDetectionConfiguration Natural

-- | The fraud detection result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudDetectionResult</a> smart constructor.
data FraudDetectionResult
FraudDetectionResult' :: Maybe [FraudDetectionReason] -> Maybe FraudRiskDetails -> Maybe Text -> Maybe FraudDetectionDecision -> Maybe FraudDetectionConfiguration -> Maybe POSIX -> Maybe POSIX -> FraudDetectionResult

-- | The reason speaker was flagged by the fraud detection system. This is
--   only be populated if fraud detection Decision is <tt>HIGH_RISK</tt>,
--   and only has one possible value: <tt>KNOWN_FRAUDSTER</tt>.
[$sel:reasons:FraudDetectionResult'] :: FraudDetectionResult -> Maybe [FraudDetectionReason]

-- | Details about each risk analyzed for this speaker.
[$sel:riskDetails:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudRiskDetails

-- | The unique identifier for this fraud detection result. Given there can
--   be multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
[$sel:fraudDetectionResultId:FraudDetectionResult'] :: FraudDetectionResult -> Maybe Text

-- | The fraud detection decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
[$sel:decision:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudDetectionDecision

-- | The <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
[$sel:configuration:FraudDetectionResult'] :: FraudDetectionResult -> Maybe FraudDetectionConfiguration

-- | A timestamp indicating when audio aggregation started for this fraud
--   detection result.
[$sel:audioAggregationStartedAt:FraudDetectionResult'] :: FraudDetectionResult -> Maybe POSIX

-- | A timestamp indicating when audio aggregation ended for this fraud
--   detection result.
[$sel:audioAggregationEndedAt:FraudDetectionResult'] :: FraudDetectionResult -> Maybe POSIX

-- | Create a value of <a>FraudDetectionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reasons:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_reasons</a> - The reason speaker was flagged
--   by the fraud detection system. This is only be populated if fraud
--   detection Decision is <tt>HIGH_RISK</tt>, and only has one possible
--   value: <tt>KNOWN_FRAUDSTER</tt>.
--   
--   <a>$sel:riskDetails:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_riskDetails</a> - Details about each risk
--   analyzed for this speaker.
--   
--   <a>$sel:fraudDetectionResultId:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_fraudDetectionResultId</a> - The unique
--   identifier for this fraud detection result. Given there can be
--   multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
--   
--   <a>$sel:decision:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_decision</a> - The fraud detection decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_configuration</a> - The
--   <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
--   
--   <a>$sel:audioAggregationStartedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this fraud detection
--   result.
--   
--   <a>$sel:audioAggregationEndedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this fraud detection
--   result.
newFraudDetectionResult :: FraudDetectionResult

-- | The reason speaker was flagged by the fraud detection system. This is
--   only be populated if fraud detection Decision is <tt>HIGH_RISK</tt>,
--   and only has one possible value: <tt>KNOWN_FRAUDSTER</tt>.
fraudDetectionResult_reasons :: Lens' FraudDetectionResult (Maybe [FraudDetectionReason])

-- | Details about each risk analyzed for this speaker.
fraudDetectionResult_riskDetails :: Lens' FraudDetectionResult (Maybe FraudRiskDetails)

-- | The unique identifier for this fraud detection result. Given there can
--   be multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
fraudDetectionResult_fraudDetectionResultId :: Lens' FraudDetectionResult (Maybe Text)

-- | The fraud detection decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
fraudDetectionResult_decision :: Lens' FraudDetectionResult (Maybe FraudDetectionDecision)

-- | The <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
fraudDetectionResult_configuration :: Lens' FraudDetectionResult (Maybe FraudDetectionConfiguration)

-- | A timestamp indicating when audio aggregation started for this fraud
--   detection result.
fraudDetectionResult_audioAggregationStartedAt :: Lens' FraudDetectionResult (Maybe UTCTime)

-- | A timestamp indicating when audio aggregation ended for this fraud
--   detection result.
fraudDetectionResult_audioAggregationEndedAt :: Lens' FraudDetectionResult (Maybe UTCTime)

-- | Details regarding various fraud risk analyses performed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudRiskDetails</a> smart constructor.
data FraudRiskDetails
FraudRiskDetails' :: KnownFraudsterRisk -> FraudRiskDetails

-- | The details resulting from 'Known Fraudster Risk' analysis of the
--   speaker.
[$sel:knownFraudsterRisk:FraudRiskDetails'] :: FraudRiskDetails -> KnownFraudsterRisk

-- | Create a value of <a>FraudRiskDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:knownFraudsterRisk:FraudRiskDetails'</a>,
--   <a>fraudRiskDetails_knownFraudsterRisk</a> - The details resulting
--   from 'Known Fraudster Risk' analysis of the speaker.
newFraudRiskDetails :: KnownFraudsterRisk -> FraudRiskDetails

-- | The details resulting from 'Known Fraudster Risk' analysis of the
--   speaker.
fraudRiskDetails_knownFraudsterRisk :: Lens' FraudRiskDetails KnownFraudsterRisk

-- | Contains all the information about a fraudster.
--   
--   <i>See:</i> <a>newFraudster</a> smart constructor.
data Fraudster
Fraudster' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Fraudster

-- | The timestamp when Voice ID identified the fraudster.
[$sel:createdAt:Fraudster'] :: Fraudster -> Maybe POSIX

-- | The service-generated identifier for the fraudster.
[$sel:generatedFraudsterId:Fraudster'] :: Fraudster -> Maybe Text

-- | The identifier for the domain containing the fraudster.
[$sel:domainId:Fraudster'] :: Fraudster -> Maybe Text

-- | Create a value of <a>Fraudster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Fraudster'</a>, <a>fraudster_createdAt</a> - The
--   timestamp when Voice ID identified the fraudster.
--   
--   <a>$sel:generatedFraudsterId:Fraudster'</a>,
--   <a>fraudster_generatedFraudsterId</a> - The service-generated
--   identifier for the fraudster.
--   
--   <a>$sel:domainId:Fraudster'</a>, <a>fraudster_domainId</a> - The
--   identifier for the domain containing the fraudster.
newFraudster :: Fraudster

-- | The timestamp when Voice ID identified the fraudster.
fraudster_createdAt :: Lens' Fraudster (Maybe UTCTime)

-- | The service-generated identifier for the fraudster.
fraudster_generatedFraudsterId :: Lens' Fraudster (Maybe Text)

-- | The identifier for the domain containing the fraudster.
fraudster_domainId :: Lens' Fraudster (Maybe Text)

-- | Contains all the information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJob</a> smart constructor.
data FraudsterRegistrationJob
FraudsterRegistrationJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> Maybe RegistrationConfig -> FraudsterRegistrationJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe FailureDetails

-- | The service-generated identifier for the fraudster registration job.
[$sel:jobId:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | A timestamp showing the creation time of the fraudster registration
--   job.
[$sel:createdAt:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe POSIX

-- | The client-provied name for the fraudster registration job.
[$sel:jobName:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe (Sensitive Text)

-- | A timestamp showing when the fraudster registration job ended.
[$sel:endedAt:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe POSIX

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration job requests.
[$sel:inputDataConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe InputDataConfig

-- | Shows the completed percentage of registration requests listed in the
--   input file.
[$sel:jobProgress:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe JobProgress

-- | The output data config containing the S3 location where you want Voice
--   ID to write your job output file; you must also include a KMS Key ID
--   in order to encrypt the file.
[$sel:outputDataConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe OutputDataConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
[$sel:dataAccessRoleArn:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | The identifier of the domain containing the fraudster registration
--   job.
[$sel:domainId:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe Text

-- | The current status of the fraudster registration job.
[$sel:jobStatus:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe FraudsterRegistrationJobStatus

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
[$sel:registrationConfig:FraudsterRegistrationJob'] :: FraudsterRegistrationJob -> Maybe RegistrationConfig

-- | Create a value of <a>FraudsterRegistrationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_failureDetails</a> - Contains details that
--   are populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_createdAt</a> - A timestamp showing the
--   creation time of the fraudster registration job.
--   
--   <a>$sel:jobName:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobName</a> - The client-provied name for
--   the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_endedAt</a> - A timestamp showing when the
--   fraudster registration job ended.
--   
--   <a>$sel:inputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_inputDataConfig</a> - The input data
--   config containing an S3 URI for the input manifest file that contains
--   the list of fraudster registration job requests.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobProgress</a> - Shows the completed
--   percentage of registration requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_outputDataConfig</a> - The output data
--   config containing the S3 location where you want Voice ID to write
--   your job output file; you must also include a KMS Key ID in order to
--   encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_domainId</a> - The identifier of the
--   domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobStatus</a> - The current status of the
--   fraudster registration job.
--   
--   <a>$sel:registrationConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_registrationConfig</a> - The registration
--   config containing details such as the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster.
newFraudsterRegistrationJob :: FraudsterRegistrationJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJob_failureDetails :: Lens' FraudsterRegistrationJob (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJob_jobId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing the creation time of the fraudster registration
--   job.
fraudsterRegistrationJob_createdAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJob_jobName :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJob_endedAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration job requests.
fraudsterRegistrationJob_inputDataConfig :: Lens' FraudsterRegistrationJob (Maybe InputDataConfig)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJob_jobProgress :: Lens' FraudsterRegistrationJob (Maybe JobProgress)

-- | The output data config containing the S3 location where you want Voice
--   ID to write your job output file; you must also include a KMS Key ID
--   in order to encrypt the file.
fraudsterRegistrationJob_outputDataConfig :: Lens' FraudsterRegistrationJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
fraudsterRegistrationJob_dataAccessRoleArn :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJob_domainId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJob_jobStatus :: Lens' FraudsterRegistrationJob (Maybe FraudsterRegistrationJobStatus)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
fraudsterRegistrationJob_registrationConfig :: Lens' FraudsterRegistrationJob (Maybe RegistrationConfig)

-- | Contains a summary of information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJobSummary</a> smart
--   constructor.
data FraudsterRegistrationJobSummary
FraudsterRegistrationJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> FraudsterRegistrationJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe FailureDetails

-- | The service-generated identifier for the fraudster registration job.
[$sel:jobId:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe Text

-- | A timestamp showing when the fraudster registration job is created.
[$sel:createdAt:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe POSIX

-- | The client-provied name for the fraudster registration job.
[$sel:jobName:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe (Sensitive Text)

-- | A timestamp showing when the fraudster registration job ended.
[$sel:endedAt:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe POSIX

-- | Shows the completed percentage of registration requests listed in the
--   input file.
[$sel:jobProgress:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe JobProgress

-- | The identifier of the domain containing the fraudster registration
--   job.
[$sel:domainId:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe Text

-- | The current status of the fraudster registration job.
[$sel:jobStatus:FraudsterRegistrationJobSummary'] :: FraudsterRegistrationJobSummary -> Maybe FraudsterRegistrationJobStatus

-- | Create a value of <a>FraudsterRegistrationJobSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_failureDetails</a> - Contains
--   details that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_createdAt</a> - A timestamp showing
--   when the fraudster registration job is created.
--   
--   <a>$sel:jobName:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobName</a> - The client-provied
--   name for the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_endedAt</a> - A timestamp showing
--   when the fraudster registration job ended.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobProgress</a> - Shows the
--   completed percentage of registration requests listed in the input
--   file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_domainId</a> - The identifier of
--   the domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobStatus</a> - The current status
--   of the fraudster registration job.
newFraudsterRegistrationJobSummary :: FraudsterRegistrationJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJobSummary_failureDetails :: Lens' FraudsterRegistrationJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJobSummary_jobId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job is created.
fraudsterRegistrationJobSummary_createdAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJobSummary_jobName :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJobSummary_endedAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJobSummary_jobProgress :: Lens' FraudsterRegistrationJobSummary (Maybe JobProgress)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJobSummary_domainId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJobSummary_jobStatus :: Lens' FraudsterRegistrationJobSummary (Maybe FraudsterRegistrationJobStatus)

-- | The configuration containing input file information for a batch job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> InputDataConfig

-- | The S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
newInputDataConfig :: Text -> InputDataConfig

-- | The S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text

-- | Indicates the completion progress for a batch job.
--   
--   <i>See:</i> <a>newJobProgress</a> smart constructor.
data JobProgress
JobProgress' :: Maybe Natural -> JobProgress

-- | Shows the completed percentage of enrollment or registration requests
--   listed in the input file.
[$sel:percentComplete:JobProgress'] :: JobProgress -> Maybe Natural

-- | Create a value of <a>JobProgress</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentComplete:JobProgress'</a>,
--   <a>jobProgress_percentComplete</a> - Shows the completed percentage of
--   enrollment or registration requests listed in the input file.
newJobProgress :: JobProgress

-- | Shows the completed percentage of enrollment or registration requests
--   listed in the input file.
jobProgress_percentComplete :: Lens' JobProgress (Maybe Natural)

-- | Contains details produced as a result of performing known fraudster
--   risk analysis on a speaker.
--   
--   <i>See:</i> <a>newKnownFraudsterRisk</a> smart constructor.
data KnownFraudsterRisk
KnownFraudsterRisk' :: Maybe Text -> Natural -> KnownFraudsterRisk

-- | The identifier of the fraudster that is the closest match to the
--   speaker. If there are no fraudsters registered in a given domain, or
--   if there are no fraudsters with a non-zero RiskScore, this value is
--   <tt>null</tt>.
[$sel:generatedFraudsterId:KnownFraudsterRisk'] :: KnownFraudsterRisk -> Maybe Text

-- | The score indicating the likelihood the speaker is a known fraudster.
[$sel:riskScore:KnownFraudsterRisk'] :: KnownFraudsterRisk -> Natural

-- | Create a value of <a>KnownFraudsterRisk</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:generatedFraudsterId:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_generatedFraudsterId</a> - The identifier of the
--   fraudster that is the closest match to the speaker. If there are no
--   fraudsters registered in a given domain, or if there are no fraudsters
--   with a non-zero RiskScore, this value is <tt>null</tt>.
--   
--   <a>$sel:riskScore:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_riskScore</a> - The score indicating the
--   likelihood the speaker is a known fraudster.
newKnownFraudsterRisk :: Natural -> KnownFraudsterRisk

-- | The identifier of the fraudster that is the closest match to the
--   speaker. If there are no fraudsters registered in a given domain, or
--   if there are no fraudsters with a non-zero RiskScore, this value is
--   <tt>null</tt>.
knownFraudsterRisk_generatedFraudsterId :: Lens' KnownFraudsterRisk (Maybe Text)

-- | The score indicating the likelihood the speaker is a known fraudster.
knownFraudsterRisk_riskScore :: Lens' KnownFraudsterRisk Natural

-- | The configuration containing output file information for a batch job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe Text -> Text -> OutputDataConfig

-- | the identifier of the KMS key you want Voice ID to use to encrypt the
--   output file of the fraudster registration job.
[$sel:kmsKeyId:OutputDataConfig'] :: OutputDataConfig -> Maybe Text

-- | The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
[$sel:s3Uri:OutputDataConfig'] :: OutputDataConfig -> Text

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:OutputDataConfig'</a>,
--   <a>outputDataConfig_kmsKeyId</a> - the identifier of the KMS key you
--   want Voice ID to use to encrypt the output file of the fraudster
--   registration job.
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
newOutputDataConfig :: Text -> OutputDataConfig

-- | the identifier of the KMS key you want Voice ID to use to encrypt the
--   output file of the fraudster registration job.
outputDataConfig_kmsKeyId :: Lens' OutputDataConfig (Maybe Text)

-- | The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text

-- | The configuration definining the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster during a batch fraudster registration
--   job.
--   
--   <i>See:</i> <a>newRegistrationConfig</a> smart constructor.
data RegistrationConfig
RegistrationConfig' :: Maybe DuplicateRegistrationAction -> Maybe Natural -> RegistrationConfig

-- | The action to take when a fraudster is identified as a duplicate. The
--   default action is <tt>SKIP</tt>, which skips registering the duplicate
--   fraudster. Setting the value to <tt>REGISTER_AS_NEW</tt> always
--   registers a new fraudster into the specified domain.
[$sel:duplicateRegistrationAction:RegistrationConfig'] :: RegistrationConfig -> Maybe DuplicateRegistrationAction

-- | The minimum similarity score between the new and old fraudsters in
--   order to consider the new fraudster a duplicate.
[$sel:fraudsterSimilarityThreshold:RegistrationConfig'] :: RegistrationConfig -> Maybe Natural

-- | Create a value of <a>RegistrationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:duplicateRegistrationAction:RegistrationConfig'</a>,
--   <a>registrationConfig_duplicateRegistrationAction</a> - The action to
--   take when a fraudster is identified as a duplicate. The default action
--   is <tt>SKIP</tt>, which skips registering the duplicate fraudster.
--   Setting the value to <tt>REGISTER_AS_NEW</tt> always registers a new
--   fraudster into the specified domain.
--   
--   <a>$sel:fraudsterSimilarityThreshold:RegistrationConfig'</a>,
--   <a>registrationConfig_fraudsterSimilarityThreshold</a> - The minimum
--   similarity score between the new and old fraudsters in order to
--   consider the new fraudster a duplicate.
newRegistrationConfig :: RegistrationConfig

-- | The action to take when a fraudster is identified as a duplicate. The
--   default action is <tt>SKIP</tt>, which skips registering the duplicate
--   fraudster. Setting the value to <tt>REGISTER_AS_NEW</tt> always
--   registers a new fraudster into the specified domain.
registrationConfig_duplicateRegistrationAction :: Lens' RegistrationConfig (Maybe DuplicateRegistrationAction)

-- | The minimum similarity score between the new and old fraudsters in
--   order to consider the new fraudster a duplicate.
registrationConfig_fraudsterSimilarityThreshold :: Lens' RegistrationConfig (Maybe Natural)

-- | The configuration containing information about the customer-managed
--   KMS Key used for encrypting customer data.
--   
--   <i>See:</i> <a>newServerSideEncryptionConfiguration</a> smart
--   constructor.
data ServerSideEncryptionConfiguration
ServerSideEncryptionConfiguration' :: Text -> ServerSideEncryptionConfiguration

-- | The identifier of the KMS Key you want Voice ID to use to encrypt your
--   data.
[$sel:kmsKeyId:ServerSideEncryptionConfiguration'] :: ServerSideEncryptionConfiguration -> Text

-- | Create a value of <a>ServerSideEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ServerSideEncryptionConfiguration'</a>,
--   <a>serverSideEncryptionConfiguration_kmsKeyId</a> - The identifier of
--   the KMS Key you want Voice ID to use to encrypt your data.
newServerSideEncryptionConfiguration :: Text -> ServerSideEncryptionConfiguration

-- | The identifier of the KMS Key you want Voice ID to use to encrypt your
--   data.
serverSideEncryptionConfiguration_kmsKeyId :: Lens' ServerSideEncryptionConfiguration Text

-- | Contains all the information about a speaker.
--   
--   <i>See:</i> <a>newSpeaker</a> smart constructor.
data Speaker
Speaker' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Speaker

-- | The current status of the speaker.
[$sel:status:Speaker'] :: Speaker -> Maybe SpeakerStatus

-- | The client-provided identifier for the speaker.
[$sel:customerSpeakerId:Speaker'] :: Speaker -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker is created.
[$sel:createdAt:Speaker'] :: Speaker -> Maybe POSIX

-- | The identifier of the domain that contains the speaker.
[$sel:domainId:Speaker'] :: Speaker -> Maybe Text

-- | A timestamp showing the speaker's last update.
[$sel:updatedAt:Speaker'] :: Speaker -> Maybe POSIX

-- | The service-generated identifier for the speaker.
[$sel:generatedSpeakerId:Speaker'] :: Speaker -> Maybe Text

-- | Create a value of <a>Speaker</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Speaker'</a>, <a>speaker_status</a> - The current
--   status of the speaker.
--   
--   <a>$sel:customerSpeakerId:Speaker'</a>,
--   <a>speaker_customerSpeakerId</a> - The client-provided identifier for
--   the speaker.
--   
--   <a>$sel:createdAt:Speaker'</a>, <a>speaker_createdAt</a> - A timestamp
--   showing when the speaker is created.
--   
--   <a>$sel:domainId:Speaker'</a>, <a>speaker_domainId</a> - The
--   identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:Speaker'</a>, <a>speaker_updatedAt</a> - A timestamp
--   showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:Speaker'</a>,
--   <a>speaker_generatedSpeakerId</a> - The service-generated identifier
--   for the speaker.
newSpeaker :: Speaker

-- | The current status of the speaker.
speaker_status :: Lens' Speaker (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speaker_customerSpeakerId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing when the speaker is created.
speaker_createdAt :: Lens' Speaker (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speaker_domainId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing the speaker's last update.
speaker_updatedAt :: Lens' Speaker (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speaker_generatedSpeakerId :: Lens' Speaker (Maybe Text)

-- | Contains all the information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJob</a> smart constructor.
data SpeakerEnrollmentJob
SpeakerEnrollmentJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe EnrollmentConfig -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe FailureDetails

-- | The service-generated identifier for the speaker enrollment job.
[$sel:jobId:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | A timestamp showing the creation of the speaker enrollment job.
[$sel:createdAt:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe POSIX

-- | The client-provided name for the speaker enrollment job.
[$sel:jobName:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker enrollment job ended.
[$sel:endedAt:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe POSIX

-- | The configuration that defines the action to take when the speaker is
--   already enrolled in Voice ID, and the <tt>FraudDetectionConfig</tt> to
--   use.
[$sel:enrollmentConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe EnrollmentConfig

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of speaker enrollment job requests.
[$sel:inputDataConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe InputDataConfig

-- | Provides details on job progress. This field shows the completed
--   percentage of registration requests listed in the input file.
[$sel:jobProgress:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe JobProgress

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
[$sel:outputDataConfig:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe OutputDataConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
[$sel:dataAccessRoleArn:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | The identifier of the domain that contains the speaker enrollment job.
[$sel:domainId:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe Text

-- | The current status of the speaker enrollment job.
[$sel:jobStatus:SpeakerEnrollmentJob'] :: SpeakerEnrollmentJob -> Maybe SpeakerEnrollmentJobStatus

-- | Create a value of <a>SpeakerEnrollmentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_failureDetails</a> - Contains details that are
--   populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobId</a> - The service-generated identifier
--   for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_createdAt</a> - A timestamp showing the
--   creation of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobName</a> - The client-provided name for the
--   speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_endedAt</a> - A timestamp showing when the
--   speaker enrollment job ended.
--   
--   <a>$sel:enrollmentConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_enrollmentConfig</a> - The configuration that
--   defines the action to take when the speaker is already enrolled in
--   Voice ID, and the <tt>FraudDetectionConfig</tt> to use.
--   
--   <a>$sel:inputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_inputDataConfig</a> - The input data config
--   containing an S3 URI for the input manifest file that contains the
--   list of speaker enrollment job requests.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobProgress</a> - Provides details on job
--   progress. This field shows the completed percentage of registration
--   requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_outputDataConfig</a> - The output data config
--   containing the S3 location where Voice ID writes the job output file;
--   you must also include a KMS Key ID to encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_dataAccessRoleArn</a> - The IAM role Amazon
--   Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_domainId</a> - The identifier of the domain
--   that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobStatus</a> - The current status of the
--   speaker enrollment job.
newSpeakerEnrollmentJob :: SpeakerEnrollmentJob

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJob_failureDetails :: Lens' SpeakerEnrollmentJob (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJob_jobId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing the creation of the speaker enrollment job.
speakerEnrollmentJob_createdAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJob_jobName :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJob_endedAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The configuration that defines the action to take when the speaker is
--   already enrolled in Voice ID, and the <tt>FraudDetectionConfig</tt> to
--   use.
speakerEnrollmentJob_enrollmentConfig :: Lens' SpeakerEnrollmentJob (Maybe EnrollmentConfig)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of speaker enrollment job requests.
speakerEnrollmentJob_inputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe InputDataConfig)

-- | Provides details on job progress. This field shows the completed
--   percentage of registration requests listed in the input file.
speakerEnrollmentJob_jobProgress :: Lens' SpeakerEnrollmentJob (Maybe JobProgress)

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
speakerEnrollmentJob_outputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
speakerEnrollmentJob_dataAccessRoleArn :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJob_domainId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJob_jobStatus :: Lens' SpeakerEnrollmentJob (Maybe SpeakerEnrollmentJobStatus)

-- | Contains a summary of information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJobSummary</a> smart constructor.
data SpeakerEnrollmentJobSummary
SpeakerEnrollmentJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
[$sel:failureDetails:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe FailureDetails

-- | The service-generated identifier for the speaker enrollment job.
[$sel:jobId:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe Text

-- | A timestamp showing the creation time of the speaker enrollment job.
[$sel:createdAt:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe POSIX

-- | The client-provided name for the speaker enrollment job.
[$sel:jobName:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe (Sensitive Text)

-- | A timestamp showing when the speaker enrollment job ended.
[$sel:endedAt:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe POSIX

-- | Provides details regarding job progress. This field shows the
--   completed percentage of enrollment requests listed in the input file.
[$sel:jobProgress:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe JobProgress

-- | The identifier of the domain that contains the speaker enrollment job.
[$sel:domainId:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe Text

-- | The current status of the speaker enrollment job.
[$sel:jobStatus:SpeakerEnrollmentJobSummary'] :: SpeakerEnrollmentJobSummary -> Maybe SpeakerEnrollmentJobStatus

-- | Create a value of <a>SpeakerEnrollmentJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_failureDetails</a> - Contains details
--   that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobId</a> - The service-generated
--   identifier for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_createdAt</a> - A timestamp showing the
--   creation time of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobName</a> - The client-provided name
--   for the speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_endedAt</a> - A timestamp showing when
--   the speaker enrollment job ended.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobProgress</a> - Provides details
--   regarding job progress. This field shows the completed percentage of
--   enrollment requests listed in the input file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_domainId</a> - The identifier of the
--   domain that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobStatus</a> - The current status of
--   the speaker enrollment job.
newSpeakerEnrollmentJobSummary :: SpeakerEnrollmentJobSummary

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJobSummary_failureDetails :: Lens' SpeakerEnrollmentJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJobSummary_jobId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing the creation time of the speaker enrollment job.
speakerEnrollmentJobSummary_createdAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJobSummary_jobName :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJobSummary_endedAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | Provides details regarding job progress. This field shows the
--   completed percentage of enrollment requests listed in the input file.
speakerEnrollmentJobSummary_jobProgress :: Lens' SpeakerEnrollmentJobSummary (Maybe JobProgress)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJobSummary_domainId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJobSummary_jobStatus :: Lens' SpeakerEnrollmentJobSummary (Maybe SpeakerEnrollmentJobStatus)

-- | Contains a summary of information about a speaker.
--   
--   <i>See:</i> <a>newSpeakerSummary</a> smart constructor.
data SpeakerSummary
SpeakerSummary' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> SpeakerSummary

-- | The current status of the speaker.
[$sel:status:SpeakerSummary'] :: SpeakerSummary -> Maybe SpeakerStatus

-- | The client-provided identifier for the speaker.
[$sel:customerSpeakerId:SpeakerSummary'] :: SpeakerSummary -> Maybe (Sensitive Text)

-- | A timestamp showing the speaker's creation time.
[$sel:createdAt:SpeakerSummary'] :: SpeakerSummary -> Maybe POSIX

-- | The identifier of the domain that contains the speaker.
[$sel:domainId:SpeakerSummary'] :: SpeakerSummary -> Maybe Text

-- | A timestamp showing the speaker's last update.
[$sel:updatedAt:SpeakerSummary'] :: SpeakerSummary -> Maybe POSIX

-- | The service-generated identifier for the speaker.
[$sel:generatedSpeakerId:SpeakerSummary'] :: SpeakerSummary -> Maybe Text

-- | Create a value of <a>SpeakerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SpeakerSummary'</a>, <a>speakerSummary_status</a> - The
--   current status of the speaker.
--   
--   <a>$sel:customerSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_customerSpeakerId</a> - The client-provided
--   identifier for the speaker.
--   
--   <a>$sel:createdAt:SpeakerSummary'</a>, <a>speakerSummary_createdAt</a>
--   - A timestamp showing the speaker's creation time.
--   
--   <a>$sel:domainId:SpeakerSummary'</a>, <a>speakerSummary_domainId</a> -
--   The identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:SpeakerSummary'</a>, <a>speakerSummary_updatedAt</a>
--   - A timestamp showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker.
newSpeakerSummary :: SpeakerSummary

-- | The current status of the speaker.
speakerSummary_status :: Lens' SpeakerSummary (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speakerSummary_customerSpeakerId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's creation time.
speakerSummary_createdAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speakerSummary_domainId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's last update.
speakerSummary_updatedAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speakerSummary_generatedSpeakerId :: Lens' SpeakerSummary (Maybe Text)

-- | A tag that can be assigned to a Voice ID resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | The first part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the key
--   is 'Department'.
[$sel:key:Tag'] :: Tag -> Sensitive Text

-- | The second part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the
--   value is 'Sales'.
[$sel:value:Tag'] :: Tag -> Sensitive Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The first part of a key:value
--   pair that forms a tag associated with a given resource. For example,
--   in the tag ‘Department’:’Sales’, the key is 'Department'.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The second part of a
--   key:value pair that forms a tag associated with a given resource. For
--   example, in the tag ‘Department’:’Sales’, the value is 'Sales'.
newTag :: Text -> Text -> Tag

-- | The first part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the key
--   is 'Department'.
tag_key :: Lens' Tag Text

-- | The second part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the
--   value is 'Sales'.
tag_value :: Lens' Tag Text


-- | Tags an Amazon Connect Voice ID resource with the provided list of
--   tags.
module Amazonka.VoiceId.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   tag.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The list of tags to assign to the specified resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   tags to assign to the specified resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | The list of tags to assign to the specified resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.TagResource.TagResource
instance GHC.Show.Show Amazonka.VoiceId.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.VoiceId.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.VoiceId.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.VoiceId.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.VoiceId.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.VoiceId.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.TagResource.TagResource


-- | Starts a new batch speaker enrollment job using specified details.
module Amazonka.VoiceId.StartSpeakerEnrollmentJob

-- | <i>See:</i> <a>newStartSpeakerEnrollmentJob</a> smart constructor.
data StartSpeakerEnrollmentJob
StartSpeakerEnrollmentJob' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe EnrollmentConfig -> Text -> Text -> InputDataConfig -> OutputDataConfig -> StartSpeakerEnrollmentJob

-- | The idempotency token for starting a new speaker enrollment Job. If
--   not provided, Amazon Web Services SDK populates this field.
[$sel:clientToken:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> Maybe Text

-- | A name for your speaker enrollment job.
[$sel:jobName:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> Maybe (Sensitive Text)

-- | The enrollment config that contains details such as the action to take
--   when a speaker is already enrolled in the Voice ID system or when a
--   speaker is identified as a fraudster.
[$sel:enrollmentConfig:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> Maybe EnrollmentConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file. Refer to <a>Batch enrollment using
--   audio data from prior calls</a> documentation for the permissions
--   needed in this role.
[$sel:dataAccessRoleArn:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> Text

-- | The identifier of the domain that contains the speaker enrollment job
--   and in which the speakers are enrolled.
[$sel:domainId:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> Text

-- | The input data config containing the S3 location for the input
--   manifest file that contains the list of speaker enrollment requests.
[$sel:inputDataConfig:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
[$sel:outputDataConfig:StartSpeakerEnrollmentJob'] :: StartSpeakerEnrollmentJob -> OutputDataConfig

-- | Create a value of <a>StartSpeakerEnrollmentJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_clientToken</a> - The idempotency token
--   for starting a new speaker enrollment Job. If not provided, Amazon Web
--   Services SDK populates this field.
--   
--   <a>$sel:jobName:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_jobName</a> - A name for your speaker
--   enrollment job.
--   
--   <a>$sel:enrollmentConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_enrollmentConfig</a> - The enrollment
--   config that contains details such as the action to take when a speaker
--   is already enrolled in the Voice ID system or when a speaker is
--   identified as a fraudster.
--   
--   <a>$sel:dataAccessRoleArn:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file. Refer to <a>Batch enrollment using audio data from prior
--   calls</a> documentation for the permissions needed in this role.
--   
--   <a>$sel:domainId:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_domainId</a> - The identifier of the
--   domain that contains the speaker enrollment job and in which the
--   speakers are enrolled.
--   
--   <a>$sel:inputDataConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_inputDataConfig</a> - The input data
--   config containing the S3 location for the input manifest file that
--   contains the list of speaker enrollment requests.
--   
--   <a>$sel:outputDataConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_outputDataConfig</a> - The output data
--   config containing the S3 location where Voice ID writes the job output
--   file; you must also include a KMS Key ID to encrypt the file.
newStartSpeakerEnrollmentJob :: Text -> Text -> InputDataConfig -> OutputDataConfig -> StartSpeakerEnrollmentJob

-- | The idempotency token for starting a new speaker enrollment Job. If
--   not provided, Amazon Web Services SDK populates this field.
startSpeakerEnrollmentJob_clientToken :: Lens' StartSpeakerEnrollmentJob (Maybe Text)

-- | A name for your speaker enrollment job.
startSpeakerEnrollmentJob_jobName :: Lens' StartSpeakerEnrollmentJob (Maybe Text)

-- | The enrollment config that contains details such as the action to take
--   when a speaker is already enrolled in the Voice ID system or when a
--   speaker is identified as a fraudster.
startSpeakerEnrollmentJob_enrollmentConfig :: Lens' StartSpeakerEnrollmentJob (Maybe EnrollmentConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file. Refer to <a>Batch enrollment using
--   audio data from prior calls</a> documentation for the permissions
--   needed in this role.
startSpeakerEnrollmentJob_dataAccessRoleArn :: Lens' StartSpeakerEnrollmentJob Text

-- | The identifier of the domain that contains the speaker enrollment job
--   and in which the speakers are enrolled.
startSpeakerEnrollmentJob_domainId :: Lens' StartSpeakerEnrollmentJob Text

-- | The input data config containing the S3 location for the input
--   manifest file that contains the list of speaker enrollment requests.
startSpeakerEnrollmentJob_inputDataConfig :: Lens' StartSpeakerEnrollmentJob InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
startSpeakerEnrollmentJob_outputDataConfig :: Lens' StartSpeakerEnrollmentJob OutputDataConfig

-- | <i>See:</i> <a>newStartSpeakerEnrollmentJobResponse</a> smart
--   constructor.
data StartSpeakerEnrollmentJobResponse
StartSpeakerEnrollmentJobResponse' :: Maybe SpeakerEnrollmentJob -> Int -> StartSpeakerEnrollmentJobResponse

-- | Details about the started speaker enrollment job.
[$sel:job:StartSpeakerEnrollmentJobResponse'] :: StartSpeakerEnrollmentJobResponse -> Maybe SpeakerEnrollmentJob

-- | The response's http status code.
[$sel:httpStatus:StartSpeakerEnrollmentJobResponse'] :: StartSpeakerEnrollmentJobResponse -> Int

-- | Create a value of <a>StartSpeakerEnrollmentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StartSpeakerEnrollmentJobResponse'</a>,
--   <a>startSpeakerEnrollmentJobResponse_job</a> - Details about the
--   started speaker enrollment job.
--   
--   <a>$sel:httpStatus:StartSpeakerEnrollmentJobResponse'</a>,
--   <a>startSpeakerEnrollmentJobResponse_httpStatus</a> - The response's
--   http status code.
newStartSpeakerEnrollmentJobResponse :: Int -> StartSpeakerEnrollmentJobResponse

-- | Details about the started speaker enrollment job.
startSpeakerEnrollmentJobResponse_job :: Lens' StartSpeakerEnrollmentJobResponse (Maybe SpeakerEnrollmentJob)

-- | The response's http status code.
startSpeakerEnrollmentJobResponse_httpStatus :: Lens' StartSpeakerEnrollmentJobResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance GHC.Show.Show Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance GHC.Classes.Eq Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance GHC.Generics.Generic Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJobResponse
instance GHC.Show.Show Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJobResponse
instance GHC.Classes.Eq Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.StartSpeakerEnrollmentJob.StartSpeakerEnrollmentJob


-- | Starts a new batch fraudster registration job using provided details.
module Amazonka.VoiceId.StartFraudsterRegistrationJob

-- | <i>See:</i> <a>newStartFraudsterRegistrationJob</a> smart constructor.
data StartFraudsterRegistrationJob
StartFraudsterRegistrationJob' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe RegistrationConfig -> Text -> Text -> InputDataConfig -> OutputDataConfig -> StartFraudsterRegistrationJob

-- | The idempotency token for starting a new fraudster registration job.
--   If not provided, Amazon Web Services SDK populates this field.
[$sel:clientToken:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> Maybe Text

-- | The name of the new fraudster registration job.
[$sel:jobName:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> Maybe (Sensitive Text)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
[$sel:registrationConfig:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> Maybe RegistrationConfig

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the Job output file. Refer to the <a>Create and edit a
--   fraudster watchlist</a> documentation for the permissions needed in
--   this role.
[$sel:dataAccessRoleArn:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> Text

-- | The identifier of the domain containing the fraudster registration job
--   and in which the fraudsters are registered.
[$sel:domainId:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> Text

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration requests.
[$sel:inputDataConfig:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
[$sel:outputDataConfig:StartFraudsterRegistrationJob'] :: StartFraudsterRegistrationJob -> OutputDataConfig

-- | Create a value of <a>StartFraudsterRegistrationJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_clientToken</a> - The idempotency
--   token for starting a new fraudster registration job. If not provided,
--   Amazon Web Services SDK populates this field.
--   
--   <a>$sel:jobName:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_jobName</a> - The name of the new
--   fraudster registration job.
--   
--   <a>$sel:registrationConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_registrationConfig</a> - The
--   registration config containing details such as the action to take when
--   a duplicate fraudster is detected, and the similarity threshold to use
--   for detecting a duplicate fraudster.
--   
--   <a>$sel:dataAccessRoleArn:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the Job
--   output file. Refer to the <a>Create and edit a fraudster watchlist</a>
--   documentation for the permissions needed in this role.
--   
--   <a>$sel:domainId:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_domainId</a> - The identifier of the
--   domain containing the fraudster registration job and in which the
--   fraudsters are registered.
--   
--   <a>$sel:inputDataConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_inputDataConfig</a> - The input data
--   config containing an S3 URI for the input manifest file that contains
--   the list of fraudster registration requests.
--   
--   <a>$sel:outputDataConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_outputDataConfig</a> - The output
--   data config containing the S3 location where Voice ID writes the job
--   output file; you must also include a KMS Key ID to encrypt the file.
newStartFraudsterRegistrationJob :: Text -> Text -> InputDataConfig -> OutputDataConfig -> StartFraudsterRegistrationJob

-- | The idempotency token for starting a new fraudster registration job.
--   If not provided, Amazon Web Services SDK populates this field.
startFraudsterRegistrationJob_clientToken :: Lens' StartFraudsterRegistrationJob (Maybe Text)

-- | The name of the new fraudster registration job.
startFraudsterRegistrationJob_jobName :: Lens' StartFraudsterRegistrationJob (Maybe Text)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
startFraudsterRegistrationJob_registrationConfig :: Lens' StartFraudsterRegistrationJob (Maybe RegistrationConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the Job output file. Refer to the <a>Create and edit a
--   fraudster watchlist</a> documentation for the permissions needed in
--   this role.
startFraudsterRegistrationJob_dataAccessRoleArn :: Lens' StartFraudsterRegistrationJob Text

-- | The identifier of the domain containing the fraudster registration job
--   and in which the fraudsters are registered.
startFraudsterRegistrationJob_domainId :: Lens' StartFraudsterRegistrationJob Text

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration requests.
startFraudsterRegistrationJob_inputDataConfig :: Lens' StartFraudsterRegistrationJob InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
startFraudsterRegistrationJob_outputDataConfig :: Lens' StartFraudsterRegistrationJob OutputDataConfig

-- | <i>See:</i> <a>newStartFraudsterRegistrationJobResponse</a> smart
--   constructor.
data StartFraudsterRegistrationJobResponse
StartFraudsterRegistrationJobResponse' :: Maybe FraudsterRegistrationJob -> Int -> StartFraudsterRegistrationJobResponse

-- | Details about the started fraudster registration job.
[$sel:job:StartFraudsterRegistrationJobResponse'] :: StartFraudsterRegistrationJobResponse -> Maybe FraudsterRegistrationJob

-- | The response's http status code.
[$sel:httpStatus:StartFraudsterRegistrationJobResponse'] :: StartFraudsterRegistrationJobResponse -> Int

-- | Create a value of <a>StartFraudsterRegistrationJobResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StartFraudsterRegistrationJobResponse'</a>,
--   <a>startFraudsterRegistrationJobResponse_job</a> - Details about the
--   started fraudster registration job.
--   
--   <a>$sel:httpStatus:StartFraudsterRegistrationJobResponse'</a>,
--   <a>startFraudsterRegistrationJobResponse_httpStatus</a> - The
--   response's http status code.
newStartFraudsterRegistrationJobResponse :: Int -> StartFraudsterRegistrationJobResponse

-- | Details about the started fraudster registration job.
startFraudsterRegistrationJobResponse_job :: Lens' StartFraudsterRegistrationJobResponse (Maybe FraudsterRegistrationJob)

-- | The response's http status code.
startFraudsterRegistrationJobResponse_httpStatus :: Lens' StartFraudsterRegistrationJobResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance GHC.Show.Show Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance GHC.Classes.Eq Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance GHC.Generics.Generic Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJobResponse
instance GHC.Show.Show Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJobResponse
instance GHC.Classes.Eq Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.StartFraudsterRegistrationJob.StartFraudsterRegistrationJob


-- | Opts out a speaker from Voice ID system. A speaker can be opted out
--   regardless of whether or not they already exist in the system. If they
--   don't yet exist, a new speaker is created in an opted out state. If
--   they already exist, their existing status is overridden and they are
--   opted out. Enrollment and evaluation authentication requests are
--   rejected for opted out speakers, and opted out speakers have no voice
--   embeddings stored in the system.
module Amazonka.VoiceId.OptOutSpeaker

-- | <i>See:</i> <a>newOptOutSpeaker</a> smart constructor.
data OptOutSpeaker
OptOutSpeaker' :: Text -> Sensitive Text -> OptOutSpeaker

-- | The identifier of the domain containing the speaker.
[$sel:domainId:OptOutSpeaker'] :: OptOutSpeaker -> Text

-- | The identifier of the speaker you want opted-out.
[$sel:speakerId:OptOutSpeaker'] :: OptOutSpeaker -> Sensitive Text

-- | Create a value of <a>OptOutSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:OptOutSpeaker'</a>, <a>optOutSpeaker_domainId</a> -
--   The identifier of the domain containing the speaker.
--   
--   <a>$sel:speakerId:OptOutSpeaker'</a>, <a>optOutSpeaker_speakerId</a> -
--   The identifier of the speaker you want opted-out.
newOptOutSpeaker :: Text -> Text -> OptOutSpeaker

-- | The identifier of the domain containing the speaker.
optOutSpeaker_domainId :: Lens' OptOutSpeaker Text

-- | The identifier of the speaker you want opted-out.
optOutSpeaker_speakerId :: Lens' OptOutSpeaker Text

-- | <i>See:</i> <a>newOptOutSpeakerResponse</a> smart constructor.
data OptOutSpeakerResponse
OptOutSpeakerResponse' :: Maybe Speaker -> Int -> OptOutSpeakerResponse

-- | Details about the opted-out speaker.
[$sel:speaker:OptOutSpeakerResponse'] :: OptOutSpeakerResponse -> Maybe Speaker

-- | The response's http status code.
[$sel:httpStatus:OptOutSpeakerResponse'] :: OptOutSpeakerResponse -> Int

-- | Create a value of <a>OptOutSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speaker:OptOutSpeakerResponse'</a>,
--   <a>optOutSpeakerResponse_speaker</a> - Details about the opted-out
--   speaker.
--   
--   <a>$sel:httpStatus:OptOutSpeakerResponse'</a>,
--   <a>optOutSpeakerResponse_httpStatus</a> - The response's http status
--   code.
newOptOutSpeakerResponse :: Int -> OptOutSpeakerResponse

-- | Details about the opted-out speaker.
optOutSpeakerResponse_speaker :: Lens' OptOutSpeakerResponse (Maybe Speaker)

-- | The response's http status code.
optOutSpeakerResponse_httpStatus :: Lens' OptOutSpeakerResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance GHC.Show.Show Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance GHC.Classes.Eq Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance GHC.Generics.Generic Amazonka.VoiceId.OptOutSpeaker.OptOutSpeakerResponse
instance GHC.Show.Show Amazonka.VoiceId.OptOutSpeaker.OptOutSpeakerResponse
instance GHC.Classes.Eq Amazonka.VoiceId.OptOutSpeaker.OptOutSpeakerResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.OptOutSpeaker.OptOutSpeakerResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.OptOutSpeaker.OptOutSpeaker


-- | Lists all tags associated with a specified Voice ID resource.
module Amazonka.VoiceId.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource for which you
--   want to list the tags.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the Voice ID resource for which you want to list the tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource for which you
--   want to list the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The list of tags associated with the specified resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags associated
--   with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tags associated with the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.VoiceId.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.VoiceId.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.VoiceId.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.ListTagsForResource.ListTagsForResource


-- | Lists all speakers in a specified domain.
module Amazonka.VoiceId.ListSpeakers

-- | <i>See:</i> <a>newListSpeakers</a> smart constructor.
data ListSpeakers
ListSpeakers' :: Maybe Text -> Maybe Natural -> Text -> ListSpeakers

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListSpeakers'] :: ListSpeakers -> Maybe Text

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
[$sel:maxResults:ListSpeakers'] :: ListSpeakers -> Maybe Natural

-- | The identifier of the domain.
[$sel:domainId:ListSpeakers'] :: ListSpeakers -> Text

-- | Create a value of <a>ListSpeakers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakers'</a>, <a>listSpeakers_nextToken</a> -
--   If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:maxResults:ListSpeakers'</a>, <a>listSpeakers_maxResults</a> -
--   The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
--   
--   <a>$sel:domainId:ListSpeakers'</a>, <a>listSpeakers_domainId</a> - The
--   identifier of the domain.
newListSpeakers :: Text -> ListSpeakers

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakers_nextToken :: Lens' ListSpeakers (Maybe Text)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listSpeakers_maxResults :: Lens' ListSpeakers (Maybe Natural)

-- | The identifier of the domain.
listSpeakers_domainId :: Lens' ListSpeakers Text

-- | <i>See:</i> <a>newListSpeakersResponse</a> smart constructor.
data ListSpeakersResponse
ListSpeakersResponse' :: Maybe [SpeakerSummary] -> Maybe Text -> Int -> ListSpeakersResponse

-- | A list containing details about each speaker in the Amazon Web
--   Services account.
[$sel:speakerSummaries:ListSpeakersResponse'] :: ListSpeakersResponse -> Maybe [SpeakerSummary]

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListSpeakersResponse'] :: ListSpeakersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSpeakersResponse'] :: ListSpeakersResponse -> Int

-- | Create a value of <a>ListSpeakersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speakerSummaries:ListSpeakersResponse'</a>,
--   <a>listSpeakersResponse_speakerSummaries</a> - A list containing
--   details about each speaker in the Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListSpeakers'</a>,
--   <a>listSpeakersResponse_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:httpStatus:ListSpeakersResponse'</a>,
--   <a>listSpeakersResponse_httpStatus</a> - The response's http status
--   code.
newListSpeakersResponse :: Int -> ListSpeakersResponse

-- | A list containing details about each speaker in the Amazon Web
--   Services account.
listSpeakersResponse_speakerSummaries :: Lens' ListSpeakersResponse (Maybe [SpeakerSummary])

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakersResponse_nextToken :: Lens' ListSpeakersResponse (Maybe Text)

-- | The response's http status code.
listSpeakersResponse_httpStatus :: Lens' ListSpeakersResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance GHC.Show.Show Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance GHC.Read.Read Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance GHC.Classes.Eq Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance GHC.Generics.Generic Amazonka.VoiceId.ListSpeakers.ListSpeakersResponse
instance GHC.Show.Show Amazonka.VoiceId.ListSpeakers.ListSpeakersResponse
instance GHC.Classes.Eq Amazonka.VoiceId.ListSpeakers.ListSpeakersResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListSpeakers.ListSpeakersResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.ListSpeakers.ListSpeakers
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.ListSpeakers.ListSpeakers


-- | Lists all the speaker enrollment jobs in the domain with the specified
--   <tt>JobStatus</tt>. If <tt>JobStatus</tt> is not provided, this lists
--   all jobs with all possible speaker enrollment job statuses.
module Amazonka.VoiceId.ListSpeakerEnrollmentJobs

-- | <i>See:</i> <a>newListSpeakerEnrollmentJobs</a> smart constructor.
data ListSpeakerEnrollmentJobs
ListSpeakerEnrollmentJobs' :: Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> Maybe Natural -> Text -> ListSpeakerEnrollmentJobs

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListSpeakerEnrollmentJobs'] :: ListSpeakerEnrollmentJobs -> Maybe Text

-- | Provides the status of your speaker enrollment Job.
[$sel:jobStatus:ListSpeakerEnrollmentJobs'] :: ListSpeakerEnrollmentJobs -> Maybe SpeakerEnrollmentJobStatus

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
[$sel:maxResults:ListSpeakerEnrollmentJobs'] :: ListSpeakerEnrollmentJobs -> Maybe Natural

-- | The identifier of the domain containing the speaker enrollment jobs.
[$sel:domainId:ListSpeakerEnrollmentJobs'] :: ListSpeakerEnrollmentJobs -> Text

-- | Create a value of <a>ListSpeakerEnrollmentJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:jobStatus:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_jobStatus</a> - Provides the status of
--   your speaker enrollment Job.
--   
--   <a>$sel:maxResults:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_maxResults</a> - The maximum number of
--   results that are returned per call. You can use <tt>NextToken</tt> to
--   obtain further pages of results. The default is 100; the maximum
--   allowed page size is also 100.
--   
--   <a>$sel:domainId:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_domainId</a> - The identifier of the
--   domain containing the speaker enrollment jobs.
newListSpeakerEnrollmentJobs :: Text -> ListSpeakerEnrollmentJobs

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakerEnrollmentJobs_nextToken :: Lens' ListSpeakerEnrollmentJobs (Maybe Text)

-- | Provides the status of your speaker enrollment Job.
listSpeakerEnrollmentJobs_jobStatus :: Lens' ListSpeakerEnrollmentJobs (Maybe SpeakerEnrollmentJobStatus)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listSpeakerEnrollmentJobs_maxResults :: Lens' ListSpeakerEnrollmentJobs (Maybe Natural)

-- | The identifier of the domain containing the speaker enrollment jobs.
listSpeakerEnrollmentJobs_domainId :: Lens' ListSpeakerEnrollmentJobs Text

-- | <i>See:</i> <a>newListSpeakerEnrollmentJobsResponse</a> smart
--   constructor.
data ListSpeakerEnrollmentJobsResponse
ListSpeakerEnrollmentJobsResponse' :: Maybe Text -> Maybe [SpeakerEnrollmentJobSummary] -> Int -> ListSpeakerEnrollmentJobsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListSpeakerEnrollmentJobsResponse'] :: ListSpeakerEnrollmentJobsResponse -> Maybe Text

-- | A list containing details about each specified speaker enrollment job.
[$sel:jobSummaries:ListSpeakerEnrollmentJobsResponse'] :: ListSpeakerEnrollmentJobsResponse -> Maybe [SpeakerEnrollmentJobSummary]

-- | The response's http status code.
[$sel:httpStatus:ListSpeakerEnrollmentJobsResponse'] :: ListSpeakerEnrollmentJobsResponse -> Int

-- | Create a value of <a>ListSpeakerEnrollmentJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:jobSummaries:ListSpeakerEnrollmentJobsResponse'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_jobSummaries</a> - A list
--   containing details about each specified speaker enrollment job.
--   
--   <a>$sel:httpStatus:ListSpeakerEnrollmentJobsResponse'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_httpStatus</a> - The response's
--   http status code.
newListSpeakerEnrollmentJobsResponse :: Int -> ListSpeakerEnrollmentJobsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakerEnrollmentJobsResponse_nextToken :: Lens' ListSpeakerEnrollmentJobsResponse (Maybe Text)

-- | A list containing details about each specified speaker enrollment job.
listSpeakerEnrollmentJobsResponse_jobSummaries :: Lens' ListSpeakerEnrollmentJobsResponse (Maybe [SpeakerEnrollmentJobSummary])

-- | The response's http status code.
listSpeakerEnrollmentJobsResponse_httpStatus :: Lens' ListSpeakerEnrollmentJobsResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance GHC.Show.Show Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance GHC.Read.Read Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance GHC.Classes.Eq Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance GHC.Generics.Generic Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobsResponse
instance GHC.Show.Show Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobsResponse
instance GHC.Classes.Eq Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.ListSpeakerEnrollmentJobs.ListSpeakerEnrollmentJobs


-- | Lists all the fraudster registration jobs in the domain with the given
--   <tt>JobStatus</tt>. If <tt>JobStatus</tt> is not provided, this lists
--   all fraudster registration jobs in the given domain.
module Amazonka.VoiceId.ListFraudsterRegistrationJobs

-- | <i>See:</i> <a>newListFraudsterRegistrationJobs</a> smart constructor.
data ListFraudsterRegistrationJobs
ListFraudsterRegistrationJobs' :: Maybe Text -> Maybe FraudsterRegistrationJobStatus -> Maybe Natural -> Text -> ListFraudsterRegistrationJobs

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListFraudsterRegistrationJobs'] :: ListFraudsterRegistrationJobs -> Maybe Text

-- | Provides the status of your fraudster registration job.
[$sel:jobStatus:ListFraudsterRegistrationJobs'] :: ListFraudsterRegistrationJobs -> Maybe FraudsterRegistrationJobStatus

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
[$sel:maxResults:ListFraudsterRegistrationJobs'] :: ListFraudsterRegistrationJobs -> Maybe Natural

-- | The identifier of the domain containing the fraudster registration
--   Jobs.
[$sel:domainId:ListFraudsterRegistrationJobs'] :: ListFraudsterRegistrationJobs -> Text

-- | Create a value of <a>ListFraudsterRegistrationJobs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_nextToken</a> - If <tt>NextToken</tt>
--   is returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:jobStatus:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_jobStatus</a> - Provides the status
--   of your fraudster registration job.
--   
--   <a>$sel:maxResults:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_maxResults</a> - The maximum number
--   of results that are returned per call. You can use <tt>NextToken</tt>
--   to obtain further pages of results. The default is 100; the maximum
--   allowed page size is also 100.
--   
--   <a>$sel:domainId:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_domainId</a> - The identifier of the
--   domain containing the fraudster registration Jobs.
newListFraudsterRegistrationJobs :: Text -> ListFraudsterRegistrationJobs

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listFraudsterRegistrationJobs_nextToken :: Lens' ListFraudsterRegistrationJobs (Maybe Text)

-- | Provides the status of your fraudster registration job.
listFraudsterRegistrationJobs_jobStatus :: Lens' ListFraudsterRegistrationJobs (Maybe FraudsterRegistrationJobStatus)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listFraudsterRegistrationJobs_maxResults :: Lens' ListFraudsterRegistrationJobs (Maybe Natural)

-- | The identifier of the domain containing the fraudster registration
--   Jobs.
listFraudsterRegistrationJobs_domainId :: Lens' ListFraudsterRegistrationJobs Text

-- | <i>See:</i> <a>newListFraudsterRegistrationJobsResponse</a> smart
--   constructor.
data ListFraudsterRegistrationJobsResponse
ListFraudsterRegistrationJobsResponse' :: Maybe Text -> Maybe [FraudsterRegistrationJobSummary] -> Int -> ListFraudsterRegistrationJobsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListFraudsterRegistrationJobsResponse'] :: ListFraudsterRegistrationJobsResponse -> Maybe Text

-- | A list containing details about each specified fraudster registration
--   job.
[$sel:jobSummaries:ListFraudsterRegistrationJobsResponse'] :: ListFraudsterRegistrationJobsResponse -> Maybe [FraudsterRegistrationJobSummary]

-- | The response's http status code.
[$sel:httpStatus:ListFraudsterRegistrationJobsResponse'] :: ListFraudsterRegistrationJobsResponse -> Int

-- | Create a value of <a>ListFraudsterRegistrationJobsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobsResponse_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:jobSummaries:ListFraudsterRegistrationJobsResponse'</a>,
--   <a>listFraudsterRegistrationJobsResponse_jobSummaries</a> - A list
--   containing details about each specified fraudster registration job.
--   
--   <a>$sel:httpStatus:ListFraudsterRegistrationJobsResponse'</a>,
--   <a>listFraudsterRegistrationJobsResponse_httpStatus</a> - The
--   response's http status code.
newListFraudsterRegistrationJobsResponse :: Int -> ListFraudsterRegistrationJobsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listFraudsterRegistrationJobsResponse_nextToken :: Lens' ListFraudsterRegistrationJobsResponse (Maybe Text)

-- | A list containing details about each specified fraudster registration
--   job.
listFraudsterRegistrationJobsResponse_jobSummaries :: Lens' ListFraudsterRegistrationJobsResponse (Maybe [FraudsterRegistrationJobSummary])

-- | The response's http status code.
listFraudsterRegistrationJobsResponse_httpStatus :: Lens' ListFraudsterRegistrationJobsResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance GHC.Show.Show Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance GHC.Read.Read Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance GHC.Classes.Eq Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance GHC.Generics.Generic Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobsResponse
instance GHC.Show.Show Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobsResponse
instance GHC.Classes.Eq Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.ListFraudsterRegistrationJobs.ListFraudsterRegistrationJobs


-- | Lists all the domains in the Amazon Web Services account.
module Amazonka.VoiceId.ListDomains

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Natural -> ListDomains

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListDomains'] :: ListDomains -> Maybe Text

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
[$sel:maxResults:ListDomains'] :: ListDomains -> Maybe Natural

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:maxResults:ListDomains'</a>, <a>listDomains_maxResults</a> -
--   The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
newListDomains :: ListDomains

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listDomains_maxResults :: Lens' ListDomains (Maybe Natural)

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe Text -> Maybe [DomainSummary] -> Int -> ListDomainsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
[$sel:nextToken:ListDomainsResponse'] :: ListDomainsResponse -> Maybe Text

-- | A list containing details about each domain in the Amazon Web Services
--   account.
[$sel:domainSummaries:ListDomainsResponse'] :: ListDomainsResponse -> Maybe [DomainSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDomainsResponse'] :: ListDomainsResponse -> Int

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:domainSummaries:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domainSummaries</a> - A list containing details
--   about each domain in the Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | A list containing details about each domain in the Amazon Web Services
--   account.
listDomainsResponse_domainSummaries :: Lens' ListDomainsResponse (Maybe [DomainSummary])

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.ListDomains.ListDomains
instance GHC.Show.Show Amazonka.VoiceId.ListDomains.ListDomains
instance GHC.Read.Read Amazonka.VoiceId.ListDomains.ListDomains
instance GHC.Classes.Eq Amazonka.VoiceId.ListDomains.ListDomains
instance GHC.Generics.Generic Amazonka.VoiceId.ListDomains.ListDomainsResponse
instance GHC.Show.Show Amazonka.VoiceId.ListDomains.ListDomainsResponse
instance GHC.Classes.Eq Amazonka.VoiceId.ListDomains.ListDomainsResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.ListDomains.ListDomains
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListDomains.ListDomainsResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.ListDomains.ListDomains
instance Control.DeepSeq.NFData Amazonka.VoiceId.ListDomains.ListDomains
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.ListDomains.ListDomains
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.ListDomains.ListDomains
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.ListDomains.ListDomains
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.ListDomains.ListDomains


-- | Evaluates a specified session based on audio data accumulated during a
--   streaming Amazon Connect Voice ID call.
module Amazonka.VoiceId.EvaluateSession

-- | <i>See:</i> <a>newEvaluateSession</a> smart constructor.
data EvaluateSession
EvaluateSession' :: Text -> Text -> EvaluateSession

-- | The identifier of the domain where the session started.
[$sel:domainId:EvaluateSession'] :: EvaluateSession -> Text

-- | The session identifier, or name of the session, that you want to
--   evaluate. In Voice ID integration, this is the Contact-Id.
[$sel:sessionNameOrId:EvaluateSession'] :: EvaluateSession -> Text

-- | Create a value of <a>EvaluateSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:EvaluateSession'</a>, <a>evaluateSession_domainId</a>
--   - The identifier of the domain where the session started.
--   
--   <a>$sel:sessionNameOrId:EvaluateSession'</a>,
--   <a>evaluateSession_sessionNameOrId</a> - The session identifier, or
--   name of the session, that you want to evaluate. In Voice ID
--   integration, this is the Contact-Id.
newEvaluateSession :: Text -> Text -> EvaluateSession

-- | The identifier of the domain where the session started.
evaluateSession_domainId :: Lens' EvaluateSession Text

-- | The session identifier, or name of the session, that you want to
--   evaluate. In Voice ID integration, this is the Contact-Id.
evaluateSession_sessionNameOrId :: Lens' EvaluateSession Text

-- | <i>See:</i> <a>newEvaluateSessionResponse</a> smart constructor.
data EvaluateSessionResponse
EvaluateSessionResponse' :: Maybe FraudDetectionResult -> Maybe StreamingStatus -> Maybe AuthenticationResult -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> EvaluateSessionResponse

-- | Details resulting from the fraud detection process, such as fraud
--   detection decision and risk score.
[$sel:fraudDetectionResult:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe FraudDetectionResult

-- | The current status of audio streaming for this session. This field is
--   useful to infer next steps when the Authentication or Fraud Detection
--   results are empty or the decision is <tt>NOT_ENOUGH_SPEECH</tt>. In
--   this situation, if the <tt>StreamingStatus</tt> is
--   <tt>ONGOING/PENDING_CONFIGURATION</tt>, it can mean that the client
--   should call the API again later, once Voice ID has enough audio to
--   produce a result. If the decision remains <tt>NOT_ENOUGH_SPEECH</tt>
--   even after <tt>StreamingStatus</tt> is <tt>ENDED</tt>, it means that
--   the previously streamed session did not have enough speech to perform
--   evaluation, and a new streaming session is needed to try again.
[$sel:streamingStatus:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe StreamingStatus

-- | Details resulting from the authentication process, such as
--   authentication decision and authentication score.
[$sel:authenticationResult:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe AuthenticationResult

-- | The identifier of the domain containing the session.
[$sel:domainId:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe Text

-- | The service-generated identifier of the session.
[$sel:sessionId:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe Text

-- | The client-provided name of the session.
[$sel:sessionName:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:EvaluateSessionResponse'] :: EvaluateSessionResponse -> Int

-- | Create a value of <a>EvaluateSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudDetectionResult:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_fraudDetectionResult</a> - Details
--   resulting from the fraud detection process, such as fraud detection
--   decision and risk score.
--   
--   <a>$sel:streamingStatus:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_streamingStatus</a> - The current status of
--   audio streaming for this session. This field is useful to infer next
--   steps when the Authentication or Fraud Detection results are empty or
--   the decision is <tt>NOT_ENOUGH_SPEECH</tt>. In this situation, if the
--   <tt>StreamingStatus</tt> is <tt>ONGOING/PENDING_CONFIGURATION</tt>, it
--   can mean that the client should call the API again later, once Voice
--   ID has enough audio to produce a result. If the decision remains
--   <tt>NOT_ENOUGH_SPEECH</tt> even after <tt>StreamingStatus</tt> is
--   <tt>ENDED</tt>, it means that the previously streamed session did not
--   have enough speech to perform evaluation, and a new streaming session
--   is needed to try again.
--   
--   <a>$sel:authenticationResult:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_authenticationResult</a> - Details
--   resulting from the authentication process, such as authentication
--   decision and authentication score.
--   
--   <a>$sel:domainId:EvaluateSession'</a>,
--   <a>evaluateSessionResponse_domainId</a> - The identifier of the domain
--   containing the session.
--   
--   <a>$sel:sessionId:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_sessionId</a> - The service-generated
--   identifier of the session.
--   
--   <a>$sel:sessionName:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_sessionName</a> - The client-provided name
--   of the session.
--   
--   <a>$sel:httpStatus:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_httpStatus</a> - The response's http status
--   code.
newEvaluateSessionResponse :: Int -> EvaluateSessionResponse

-- | Details resulting from the fraud detection process, such as fraud
--   detection decision and risk score.
evaluateSessionResponse_fraudDetectionResult :: Lens' EvaluateSessionResponse (Maybe FraudDetectionResult)

-- | The current status of audio streaming for this session. This field is
--   useful to infer next steps when the Authentication or Fraud Detection
--   results are empty or the decision is <tt>NOT_ENOUGH_SPEECH</tt>. In
--   this situation, if the <tt>StreamingStatus</tt> is
--   <tt>ONGOING/PENDING_CONFIGURATION</tt>, it can mean that the client
--   should call the API again later, once Voice ID has enough audio to
--   produce a result. If the decision remains <tt>NOT_ENOUGH_SPEECH</tt>
--   even after <tt>StreamingStatus</tt> is <tt>ENDED</tt>, it means that
--   the previously streamed session did not have enough speech to perform
--   evaluation, and a new streaming session is needed to try again.
evaluateSessionResponse_streamingStatus :: Lens' EvaluateSessionResponse (Maybe StreamingStatus)

-- | Details resulting from the authentication process, such as
--   authentication decision and authentication score.
evaluateSessionResponse_authenticationResult :: Lens' EvaluateSessionResponse (Maybe AuthenticationResult)

-- | The identifier of the domain containing the session.
evaluateSessionResponse_domainId :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The service-generated identifier of the session.
evaluateSessionResponse_sessionId :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The client-provided name of the session.
evaluateSessionResponse_sessionName :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The response's http status code.
evaluateSessionResponse_httpStatus :: Lens' EvaluateSessionResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance GHC.Show.Show Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance GHC.Read.Read Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance GHC.Classes.Eq Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance GHC.Generics.Generic Amazonka.VoiceId.EvaluateSession.EvaluateSessionResponse
instance GHC.Show.Show Amazonka.VoiceId.EvaluateSession.EvaluateSessionResponse
instance GHC.Classes.Eq Amazonka.VoiceId.EvaluateSession.EvaluateSessionResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Control.DeepSeq.NFData Amazonka.VoiceId.EvaluateSession.EvaluateSessionResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Control.DeepSeq.NFData Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.EvaluateSession.EvaluateSession
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.EvaluateSession.EvaluateSession


-- | Describes the specified speaker enrollment job.
module Amazonka.VoiceId.DescribeSpeakerEnrollmentJob

-- | <i>See:</i> <a>newDescribeSpeakerEnrollmentJob</a> smart constructor.
data DescribeSpeakerEnrollmentJob
DescribeSpeakerEnrollmentJob' :: Text -> Text -> DescribeSpeakerEnrollmentJob

-- | The identifier of the domain containing the speaker enrollment job.
[$sel:domainId:DescribeSpeakerEnrollmentJob'] :: DescribeSpeakerEnrollmentJob -> Text

-- | The identifier of the speaker enrollment job you are describing.
[$sel:jobId:DescribeSpeakerEnrollmentJob'] :: DescribeSpeakerEnrollmentJob -> Text

-- | Create a value of <a>DescribeSpeakerEnrollmentJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeSpeakerEnrollmentJob'</a>,
--   <a>describeSpeakerEnrollmentJob_domainId</a> - The identifier of the
--   domain containing the speaker enrollment job.
--   
--   <a>$sel:jobId:DescribeSpeakerEnrollmentJob'</a>,
--   <a>describeSpeakerEnrollmentJob_jobId</a> - The identifier of the
--   speaker enrollment job you are describing.
newDescribeSpeakerEnrollmentJob :: Text -> Text -> DescribeSpeakerEnrollmentJob

-- | The identifier of the domain containing the speaker enrollment job.
describeSpeakerEnrollmentJob_domainId :: Lens' DescribeSpeakerEnrollmentJob Text

-- | The identifier of the speaker enrollment job you are describing.
describeSpeakerEnrollmentJob_jobId :: Lens' DescribeSpeakerEnrollmentJob Text

-- | <i>See:</i> <a>newDescribeSpeakerEnrollmentJobResponse</a> smart
--   constructor.
data DescribeSpeakerEnrollmentJobResponse
DescribeSpeakerEnrollmentJobResponse' :: Maybe SpeakerEnrollmentJob -> Int -> DescribeSpeakerEnrollmentJobResponse

-- | Contains details about the specified speaker enrollment job.
[$sel:job:DescribeSpeakerEnrollmentJobResponse'] :: DescribeSpeakerEnrollmentJobResponse -> Maybe SpeakerEnrollmentJob

-- | The response's http status code.
[$sel:httpStatus:DescribeSpeakerEnrollmentJobResponse'] :: DescribeSpeakerEnrollmentJobResponse -> Int

-- | Create a value of <a>DescribeSpeakerEnrollmentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeSpeakerEnrollmentJobResponse'</a>,
--   <a>describeSpeakerEnrollmentJobResponse_job</a> - Contains details
--   about the specified speaker enrollment job.
--   
--   <a>$sel:httpStatus:DescribeSpeakerEnrollmentJobResponse'</a>,
--   <a>describeSpeakerEnrollmentJobResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSpeakerEnrollmentJobResponse :: Int -> DescribeSpeakerEnrollmentJobResponse

-- | Contains details about the specified speaker enrollment job.
describeSpeakerEnrollmentJobResponse_job :: Lens' DescribeSpeakerEnrollmentJobResponse (Maybe SpeakerEnrollmentJob)

-- | The response's http status code.
describeSpeakerEnrollmentJobResponse_httpStatus :: Lens' DescribeSpeakerEnrollmentJobResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance GHC.Show.Show Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance GHC.Read.Read Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJobResponse
instance GHC.Show.Show Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJobResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DescribeSpeakerEnrollmentJob.DescribeSpeakerEnrollmentJob


-- | Describes the specified speaker.
module Amazonka.VoiceId.DescribeSpeaker

-- | <i>See:</i> <a>newDescribeSpeaker</a> smart constructor.
data DescribeSpeaker
DescribeSpeaker' :: Text -> Sensitive Text -> DescribeSpeaker

-- | The identifier of the domain that contains the speaker.
[$sel:domainId:DescribeSpeaker'] :: DescribeSpeaker -> Text

-- | The identifier of the speaker you are describing.
[$sel:speakerId:DescribeSpeaker'] :: DescribeSpeaker -> Sensitive Text

-- | Create a value of <a>DescribeSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeSpeaker'</a>, <a>describeSpeaker_domainId</a>
--   - The identifier of the domain that contains the speaker.
--   
--   <a>$sel:speakerId:DescribeSpeaker'</a>,
--   <a>describeSpeaker_speakerId</a> - The identifier of the speaker you
--   are describing.
newDescribeSpeaker :: Text -> Text -> DescribeSpeaker

-- | The identifier of the domain that contains the speaker.
describeSpeaker_domainId :: Lens' DescribeSpeaker Text

-- | The identifier of the speaker you are describing.
describeSpeaker_speakerId :: Lens' DescribeSpeaker Text

-- | <i>See:</i> <a>newDescribeSpeakerResponse</a> smart constructor.
data DescribeSpeakerResponse
DescribeSpeakerResponse' :: Maybe Speaker -> Int -> DescribeSpeakerResponse

-- | Information about the specified speaker.
[$sel:speaker:DescribeSpeakerResponse'] :: DescribeSpeakerResponse -> Maybe Speaker

-- | The response's http status code.
[$sel:httpStatus:DescribeSpeakerResponse'] :: DescribeSpeakerResponse -> Int

-- | Create a value of <a>DescribeSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speaker:DescribeSpeakerResponse'</a>,
--   <a>describeSpeakerResponse_speaker</a> - Information about the
--   specified speaker.
--   
--   <a>$sel:httpStatus:DescribeSpeakerResponse'</a>,
--   <a>describeSpeakerResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSpeakerResponse :: Int -> DescribeSpeakerResponse

-- | Information about the specified speaker.
describeSpeakerResponse_speaker :: Lens' DescribeSpeakerResponse (Maybe Speaker)

-- | The response's http status code.
describeSpeakerResponse_httpStatus :: Lens' DescribeSpeakerResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance GHC.Show.Show Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeSpeaker.DescribeSpeakerResponse
instance GHC.Show.Show Amazonka.VoiceId.DescribeSpeaker.DescribeSpeakerResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeSpeaker.DescribeSpeakerResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeSpeaker.DescribeSpeakerResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DescribeSpeaker.DescribeSpeaker


-- | Describes the specified fraudster registration job.
module Amazonka.VoiceId.DescribeFraudsterRegistrationJob

-- | <i>See:</i> <a>newDescribeFraudsterRegistrationJob</a> smart
--   constructor.
data DescribeFraudsterRegistrationJob
DescribeFraudsterRegistrationJob' :: Text -> Text -> DescribeFraudsterRegistrationJob

-- | The identifier for the domain containing the fraudster registration
--   job.
[$sel:domainId:DescribeFraudsterRegistrationJob'] :: DescribeFraudsterRegistrationJob -> Text

-- | The identifier for the fraudster registration job you are describing.
[$sel:jobId:DescribeFraudsterRegistrationJob'] :: DescribeFraudsterRegistrationJob -> Text

-- | Create a value of <a>DescribeFraudsterRegistrationJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeFraudsterRegistrationJob'</a>,
--   <a>describeFraudsterRegistrationJob_domainId</a> - The identifier for
--   the domain containing the fraudster registration job.
--   
--   <a>$sel:jobId:DescribeFraudsterRegistrationJob'</a>,
--   <a>describeFraudsterRegistrationJob_jobId</a> - The identifier for the
--   fraudster registration job you are describing.
newDescribeFraudsterRegistrationJob :: Text -> Text -> DescribeFraudsterRegistrationJob

-- | The identifier for the domain containing the fraudster registration
--   job.
describeFraudsterRegistrationJob_domainId :: Lens' DescribeFraudsterRegistrationJob Text

-- | The identifier for the fraudster registration job you are describing.
describeFraudsterRegistrationJob_jobId :: Lens' DescribeFraudsterRegistrationJob Text

-- | <i>See:</i> <a>newDescribeFraudsterRegistrationJobResponse</a> smart
--   constructor.
data DescribeFraudsterRegistrationJobResponse
DescribeFraudsterRegistrationJobResponse' :: Maybe FraudsterRegistrationJob -> Int -> DescribeFraudsterRegistrationJobResponse

-- | Contains details about the specified fraudster registration job.
[$sel:job:DescribeFraudsterRegistrationJobResponse'] :: DescribeFraudsterRegistrationJobResponse -> Maybe FraudsterRegistrationJob

-- | The response's http status code.
[$sel:httpStatus:DescribeFraudsterRegistrationJobResponse'] :: DescribeFraudsterRegistrationJobResponse -> Int

-- | Create a value of <a>DescribeFraudsterRegistrationJobResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeFraudsterRegistrationJobResponse'</a>,
--   <a>describeFraudsterRegistrationJobResponse_job</a> - Contains details
--   about the specified fraudster registration job.
--   
--   <a>$sel:httpStatus:DescribeFraudsterRegistrationJobResponse'</a>,
--   <a>describeFraudsterRegistrationJobResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFraudsterRegistrationJobResponse :: Int -> DescribeFraudsterRegistrationJobResponse

-- | Contains details about the specified fraudster registration job.
describeFraudsterRegistrationJobResponse_job :: Lens' DescribeFraudsterRegistrationJobResponse (Maybe FraudsterRegistrationJob)

-- | The response's http status code.
describeFraudsterRegistrationJobResponse_httpStatus :: Lens' DescribeFraudsterRegistrationJobResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance GHC.Show.Show Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance GHC.Read.Read Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJobResponse
instance GHC.Show.Show Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJobResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DescribeFraudsterRegistrationJob.DescribeFraudsterRegistrationJob


-- | Describes the specified fraudster.
module Amazonka.VoiceId.DescribeFraudster

-- | <i>See:</i> <a>newDescribeFraudster</a> smart constructor.
data DescribeFraudster
DescribeFraudster' :: Text -> Sensitive Text -> DescribeFraudster

-- | The identifier of the domain containing the fraudster.
[$sel:domainId:DescribeFraudster'] :: DescribeFraudster -> Text

-- | The identifier of the fraudster you are describing.
[$sel:fraudsterId:DescribeFraudster'] :: DescribeFraudster -> Sensitive Text

-- | Create a value of <a>DescribeFraudster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeFraudster'</a>,
--   <a>describeFraudster_domainId</a> - The identifier of the domain
--   containing the fraudster.
--   
--   <a>$sel:fraudsterId:DescribeFraudster'</a>,
--   <a>describeFraudster_fraudsterId</a> - The identifier of the fraudster
--   you are describing.
newDescribeFraudster :: Text -> Text -> DescribeFraudster

-- | The identifier of the domain containing the fraudster.
describeFraudster_domainId :: Lens' DescribeFraudster Text

-- | The identifier of the fraudster you are describing.
describeFraudster_fraudsterId :: Lens' DescribeFraudster Text

-- | <i>See:</i> <a>newDescribeFraudsterResponse</a> smart constructor.
data DescribeFraudsterResponse
DescribeFraudsterResponse' :: Maybe Fraudster -> Int -> DescribeFraudsterResponse

-- | Information about the specified fraudster.
[$sel:fraudster:DescribeFraudsterResponse'] :: DescribeFraudsterResponse -> Maybe Fraudster

-- | The response's http status code.
[$sel:httpStatus:DescribeFraudsterResponse'] :: DescribeFraudsterResponse -> Int

-- | Create a value of <a>DescribeFraudsterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudster:DescribeFraudsterResponse'</a>,
--   <a>describeFraudsterResponse_fraudster</a> - Information about the
--   specified fraudster.
--   
--   <a>$sel:httpStatus:DescribeFraudsterResponse'</a>,
--   <a>describeFraudsterResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFraudsterResponse :: Int -> DescribeFraudsterResponse

-- | Information about the specified fraudster.
describeFraudsterResponse_fraudster :: Lens' DescribeFraudsterResponse (Maybe Fraudster)

-- | The response's http status code.
describeFraudsterResponse_httpStatus :: Lens' DescribeFraudsterResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance GHC.Show.Show Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeFraudster.DescribeFraudsterResponse
instance GHC.Show.Show Amazonka.VoiceId.DescribeFraudster.DescribeFraudsterResponse
instance GHC.Read.Read Amazonka.VoiceId.DescribeFraudster.DescribeFraudsterResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeFraudster.DescribeFraudsterResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeFraudster.DescribeFraudsterResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DescribeFraudster.DescribeFraudster
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DescribeFraudster.DescribeFraudster


-- | Describes the specified domain.
module Amazonka.VoiceId.DescribeDomain

-- | <i>See:</i> <a>newDescribeDomain</a> smart constructor.
data DescribeDomain
DescribeDomain' :: Text -> DescribeDomain

-- | The identifier of the domain you are describing.
[$sel:domainId:DescribeDomain'] :: DescribeDomain -> Text

-- | Create a value of <a>DescribeDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeDomain'</a>, <a>describeDomain_domainId</a> -
--   The identifier of the domain you are describing.
newDescribeDomain :: Text -> DescribeDomain

-- | The identifier of the domain you are describing.
describeDomain_domainId :: Lens' DescribeDomain Text

-- | <i>See:</i> <a>newDescribeDomainResponse</a> smart constructor.
data DescribeDomainResponse
DescribeDomainResponse' :: Maybe Domain -> Int -> DescribeDomainResponse

-- | Information about the specified domain.
[$sel:domain:DescribeDomainResponse'] :: DescribeDomainResponse -> Maybe Domain

-- | The response's http status code.
[$sel:httpStatus:DescribeDomainResponse'] :: DescribeDomainResponse -> Int

-- | Create a value of <a>DescribeDomainResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_domain</a> - Information about the specified
--   domain.
--   
--   <a>$sel:httpStatus:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDomainResponse :: Int -> DescribeDomainResponse

-- | Information about the specified domain.
describeDomainResponse_domain :: Lens' DescribeDomainResponse (Maybe Domain)

-- | The response's http status code.
describeDomainResponse_httpStatus :: Lens' DescribeDomainResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance GHC.Show.Show Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance GHC.Read.Read Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance GHC.Generics.Generic Amazonka.VoiceId.DescribeDomain.DescribeDomainResponse
instance GHC.Show.Show Amazonka.VoiceId.DescribeDomain.DescribeDomainResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DescribeDomain.DescribeDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeDomain.DescribeDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DescribeDomain.DescribeDomain
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DescribeDomain.DescribeDomain


-- | Deletes the specified speaker from the Amazon Connect Voice ID system.
module Amazonka.VoiceId.DeleteSpeaker

-- | <i>See:</i> <a>newDeleteSpeaker</a> smart constructor.
data DeleteSpeaker
DeleteSpeaker' :: Text -> Sensitive Text -> DeleteSpeaker

-- | The identifier of the domain containing the speaker.
[$sel:domainId:DeleteSpeaker'] :: DeleteSpeaker -> Text

-- | The identifier of the speaker you want to delete.
[$sel:speakerId:DeleteSpeaker'] :: DeleteSpeaker -> Sensitive Text

-- | Create a value of <a>DeleteSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteSpeaker'</a>, <a>deleteSpeaker_domainId</a> -
--   The identifier of the domain containing the speaker.
--   
--   <a>$sel:speakerId:DeleteSpeaker'</a>, <a>deleteSpeaker_speakerId</a> -
--   The identifier of the speaker you want to delete.
newDeleteSpeaker :: Text -> Text -> DeleteSpeaker

-- | The identifier of the domain containing the speaker.
deleteSpeaker_domainId :: Lens' DeleteSpeaker Text

-- | The identifier of the speaker you want to delete.
deleteSpeaker_speakerId :: Lens' DeleteSpeaker Text

-- | <i>See:</i> <a>newDeleteSpeakerResponse</a> smart constructor.
data DeleteSpeakerResponse
DeleteSpeakerResponse' :: DeleteSpeakerResponse

-- | Create a value of <a>DeleteSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSpeakerResponse :: DeleteSpeakerResponse
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance GHC.Show.Show Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteSpeaker.DeleteSpeakerResponse
instance GHC.Show.Show Amazonka.VoiceId.DeleteSpeaker.DeleteSpeakerResponse
instance GHC.Read.Read Amazonka.VoiceId.DeleteSpeaker.DeleteSpeakerResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteSpeaker.DeleteSpeakerResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteSpeaker.DeleteSpeakerResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DeleteSpeaker.DeleteSpeaker


-- | Deletes the specified fraudster from the Amazon Connect Voice ID
--   system.
module Amazonka.VoiceId.DeleteFraudster

-- | <i>See:</i> <a>newDeleteFraudster</a> smart constructor.
data DeleteFraudster
DeleteFraudster' :: Text -> Sensitive Text -> DeleteFraudster

-- | The identifier of the domain containing the fraudster.
[$sel:domainId:DeleteFraudster'] :: DeleteFraudster -> Text

-- | The identifier of the fraudster you want to delete.
[$sel:fraudsterId:DeleteFraudster'] :: DeleteFraudster -> Sensitive Text

-- | Create a value of <a>DeleteFraudster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteFraudster'</a>, <a>deleteFraudster_domainId</a>
--   - The identifier of the domain containing the fraudster.
--   
--   <a>$sel:fraudsterId:DeleteFraudster'</a>,
--   <a>deleteFraudster_fraudsterId</a> - The identifier of the fraudster
--   you want to delete.
newDeleteFraudster :: Text -> Text -> DeleteFraudster

-- | The identifier of the domain containing the fraudster.
deleteFraudster_domainId :: Lens' DeleteFraudster Text

-- | The identifier of the fraudster you want to delete.
deleteFraudster_fraudsterId :: Lens' DeleteFraudster Text

-- | <i>See:</i> <a>newDeleteFraudsterResponse</a> smart constructor.
data DeleteFraudsterResponse
DeleteFraudsterResponse' :: DeleteFraudsterResponse

-- | Create a value of <a>DeleteFraudsterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFraudsterResponse :: DeleteFraudsterResponse
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance GHC.Show.Show Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteFraudster.DeleteFraudsterResponse
instance GHC.Show.Show Amazonka.VoiceId.DeleteFraudster.DeleteFraudsterResponse
instance GHC.Read.Read Amazonka.VoiceId.DeleteFraudster.DeleteFraudsterResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteFraudster.DeleteFraudsterResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteFraudster.DeleteFraudsterResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DeleteFraudster.DeleteFraudster
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DeleteFraudster.DeleteFraudster


-- | Deletes the specified domain from the Amazon Connect Voice ID system.
module Amazonka.VoiceId.DeleteDomain

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Text -> DeleteDomain

-- | The identifier of the domain you want to delete.
[$sel:domainId:DeleteDomain'] :: DeleteDomain -> Text

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteDomain'</a>, <a>deleteDomain_domainId</a> - The
--   identifier of the domain you want to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | The identifier of the domain you want to delete.
deleteDomain_domainId :: Lens' DeleteDomain Text

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: DeleteDomainResponse

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainResponse :: DeleteDomainResponse
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance GHC.Show.Show Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance GHC.Read.Read Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance GHC.Generics.Generic Amazonka.VoiceId.DeleteDomain.DeleteDomainResponse
instance GHC.Show.Show Amazonka.VoiceId.DeleteDomain.DeleteDomainResponse
instance GHC.Read.Read Amazonka.VoiceId.DeleteDomain.DeleteDomainResponse
instance GHC.Classes.Eq Amazonka.VoiceId.DeleteDomain.DeleteDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteDomain.DeleteDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.DeleteDomain.DeleteDomain
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.DeleteDomain.DeleteDomain


-- | Creates a domain that contains all Amazon Connect Voice ID data, such
--   as speakers, fraudsters, customer audio, and voiceprints.
module Amazonka.VoiceId.CreateDomain

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [Tag] -> Sensitive Text -> ServerSideEncryptionConfiguration -> CreateDomain

-- | The idempotency token for creating a new domain. If not provided,
--   Amazon Web Services SDK populates this field.
[$sel:clientToken:CreateDomain'] :: CreateDomain -> Maybe Text

-- | A brief description of this domain.
[$sel:description:CreateDomain'] :: CreateDomain -> Maybe (Sensitive Text)

-- | A list of tags you want added to the domain.
[$sel:tags:CreateDomain'] :: CreateDomain -> Maybe [Tag]

-- | The name of the domain.
[$sel:name:CreateDomain'] :: CreateDomain -> Sensitive Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Refer to
--   <a>Amazon Connect VoiceID encryption at rest</a> for more details on
--   how the KMS Key is used.
[$sel:serverSideEncryptionConfiguration:CreateDomain'] :: CreateDomain -> ServerSideEncryptionConfiguration

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateDomain'</a>, <a>createDomain_clientToken</a>
--   - The idempotency token for creating a new domain. If not provided,
--   Amazon Web Services SDK populates this field.
--   
--   <a>$sel:description:CreateDomain'</a>, <a>createDomain_description</a>
--   - A brief description of this domain.
--   
--   <a>$sel:tags:CreateDomain'</a>, <a>createDomain_tags</a> - A list of
--   tags you want added to the domain.
--   
--   <a>$sel:name:CreateDomain'</a>, <a>createDomain_name</a> - The name of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:CreateDomain'</a>,
--   <a>createDomain_serverSideEncryptionConfiguration</a> - The
--   configuration, containing the KMS Key Identifier, to be used by Voice
--   ID for the server-side encryption of your data. Refer to <a>Amazon
--   Connect VoiceID encryption at rest</a> for more details on how the KMS
--   Key is used.
newCreateDomain :: Text -> ServerSideEncryptionConfiguration -> CreateDomain

-- | The idempotency token for creating a new domain. If not provided,
--   Amazon Web Services SDK populates this field.
createDomain_clientToken :: Lens' CreateDomain (Maybe Text)

-- | A brief description of this domain.
createDomain_description :: Lens' CreateDomain (Maybe Text)

-- | A list of tags you want added to the domain.
createDomain_tags :: Lens' CreateDomain (Maybe [Tag])

-- | The name of the domain.
createDomain_name :: Lens' CreateDomain Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Refer to
--   <a>Amazon Connect VoiceID encryption at rest</a> for more details on
--   how the KMS Key is used.
createDomain_serverSideEncryptionConfiguration :: Lens' CreateDomain ServerSideEncryptionConfiguration

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: Maybe Domain -> Int -> CreateDomainResponse

-- | Information about the newly created domain.
[$sel:domain:CreateDomainResponse'] :: CreateDomainResponse -> Maybe Domain

-- | The response's http status code.
[$sel:httpStatus:CreateDomainResponse'] :: CreateDomainResponse -> Int

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:CreateDomainResponse'</a>,
--   <a>createDomainResponse_domain</a> - Information about the newly
--   created domain.
--   
--   <a>$sel:httpStatus:CreateDomainResponse'</a>,
--   <a>createDomainResponse_httpStatus</a> - The response's http status
--   code.
newCreateDomainResponse :: Int -> CreateDomainResponse

-- | Information about the newly created domain.
createDomainResponse_domain :: Lens' CreateDomainResponse (Maybe Domain)

-- | The response's http status code.
createDomainResponse_httpStatus :: Lens' CreateDomainResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.CreateDomain.CreateDomain
instance GHC.Show.Show Amazonka.VoiceId.CreateDomain.CreateDomain
instance GHC.Classes.Eq Amazonka.VoiceId.CreateDomain.CreateDomain
instance GHC.Generics.Generic Amazonka.VoiceId.CreateDomain.CreateDomainResponse
instance GHC.Show.Show Amazonka.VoiceId.CreateDomain.CreateDomainResponse
instance GHC.Classes.Eq Amazonka.VoiceId.CreateDomain.CreateDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.CreateDomain.CreateDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.CreateDomain.CreateDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.CreateDomain.CreateDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.CreateDomain.CreateDomain
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.CreateDomain.CreateDomain
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.CreateDomain.CreateDomain


-- | Removes specified tags from a specified Amazon Connect Voice ID
--   resource.
module Amazonka.VoiceId.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Sensitive Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   remove tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys you want to remove from the specified resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Sensitive Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the Voice ID resource you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys you want to remove from the specified resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys you want to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.VoiceId.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.VoiceId.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.VoiceId.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.VoiceId.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.VoiceId.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.VoiceId.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.VoiceId.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.UntagResource.UntagResource


-- | Updates the specified domain. This API has clobber behavior, and
--   clears and replaces all attributes. If an optional field, such as
--   'Description' is not provided, it is removed from the domain.
module Amazonka.VoiceId.UpdateDomain

-- | <i>See:</i> <a>newUpdateDomain</a> smart constructor.
data UpdateDomain
UpdateDomain' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ServerSideEncryptionConfiguration -> UpdateDomain

-- | A brief description about this domain.
[$sel:description:UpdateDomain'] :: UpdateDomain -> Maybe (Sensitive Text)

-- | The identifier of the domain to be updated.
[$sel:domainId:UpdateDomain'] :: UpdateDomain -> Text

-- | The name of the domain.
[$sel:name:UpdateDomain'] :: UpdateDomain -> Sensitive Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Note that all
--   the existing data in the domain are still encrypted using the existing
--   key, only the data added to domain after updating the key is encrypted
--   using the new key.
[$sel:serverSideEncryptionConfiguration:UpdateDomain'] :: UpdateDomain -> ServerSideEncryptionConfiguration

-- | Create a value of <a>UpdateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDomain'</a>, <a>updateDomain_description</a>
--   - A brief description about this domain.
--   
--   <a>$sel:domainId:UpdateDomain'</a>, <a>updateDomain_domainId</a> - The
--   identifier of the domain to be updated.
--   
--   <a>$sel:name:UpdateDomain'</a>, <a>updateDomain_name</a> - The name of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:UpdateDomain'</a>,
--   <a>updateDomain_serverSideEncryptionConfiguration</a> - The
--   configuration, containing the KMS Key Identifier, to be used by Voice
--   ID for the server-side encryption of your data. Note that all the
--   existing data in the domain are still encrypted using the existing
--   key, only the data added to domain after updating the key is encrypted
--   using the new key.
newUpdateDomain :: Text -> Text -> ServerSideEncryptionConfiguration -> UpdateDomain

-- | A brief description about this domain.
updateDomain_description :: Lens' UpdateDomain (Maybe Text)

-- | The identifier of the domain to be updated.
updateDomain_domainId :: Lens' UpdateDomain Text

-- | The name of the domain.
updateDomain_name :: Lens' UpdateDomain Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Note that all
--   the existing data in the domain are still encrypted using the existing
--   key, only the data added to domain after updating the key is encrypted
--   using the new key.
updateDomain_serverSideEncryptionConfiguration :: Lens' UpdateDomain ServerSideEncryptionConfiguration

-- | <i>See:</i> <a>newUpdateDomainResponse</a> smart constructor.
data UpdateDomainResponse
UpdateDomainResponse' :: Maybe Domain -> Int -> UpdateDomainResponse

-- | Details about the updated domain
[$sel:domain:UpdateDomainResponse'] :: UpdateDomainResponse -> Maybe Domain

-- | The response's http status code.
[$sel:httpStatus:UpdateDomainResponse'] :: UpdateDomainResponse -> Int

-- | Create a value of <a>UpdateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:UpdateDomainResponse'</a>,
--   <a>updateDomainResponse_domain</a> - Details about the updated domain
--   
--   <a>$sel:httpStatus:UpdateDomainResponse'</a>,
--   <a>updateDomainResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDomainResponse :: Int -> UpdateDomainResponse

-- | Details about the updated domain
updateDomainResponse_domain :: Lens' UpdateDomainResponse (Maybe Domain)

-- | The response's http status code.
updateDomainResponse_httpStatus :: Lens' UpdateDomainResponse Int
instance GHC.Generics.Generic Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance GHC.Show.Show Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance GHC.Classes.Eq Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance GHC.Generics.Generic Amazonka.VoiceId.UpdateDomain.UpdateDomainResponse
instance GHC.Show.Show Amazonka.VoiceId.UpdateDomain.UpdateDomainResponse
instance GHC.Classes.Eq Amazonka.VoiceId.UpdateDomain.UpdateDomainResponse
instance Amazonka.Types.AWSRequest Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.UpdateDomain.UpdateDomainResponse
instance Data.Hashable.Class.Hashable Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Control.DeepSeq.NFData Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Amazonka.Data.Headers.ToHeaders Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Amazonka.Data.Path.ToPath Amazonka.VoiceId.UpdateDomain.UpdateDomain
instance Amazonka.Data.Query.ToQuery Amazonka.VoiceId.UpdateDomain.UpdateDomain


module Amazonka.VoiceId.Lens

-- | The identifier for the domain containing the fraudster registration
--   job.
describeFraudsterRegistrationJob_domainId :: Lens' DescribeFraudsterRegistrationJob Text

-- | The identifier for the fraudster registration job you are describing.
describeFraudsterRegistrationJob_jobId :: Lens' DescribeFraudsterRegistrationJob Text

-- | Contains details about the specified fraudster registration job.
describeFraudsterRegistrationJobResponse_job :: Lens' DescribeFraudsterRegistrationJobResponse (Maybe FraudsterRegistrationJob)

-- | The response's http status code.
describeFraudsterRegistrationJobResponse_httpStatus :: Lens' DescribeFraudsterRegistrationJobResponse Int

-- | The identifier of the domain containing the speaker.
deleteSpeaker_domainId :: Lens' DeleteSpeaker Text

-- | The identifier of the speaker you want to delete.
deleteSpeaker_speakerId :: Lens' DeleteSpeaker Text

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakers_nextToken :: Lens' ListSpeakers (Maybe Text)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listSpeakers_maxResults :: Lens' ListSpeakers (Maybe Natural)

-- | The identifier of the domain.
listSpeakers_domainId :: Lens' ListSpeakers Text

-- | A list containing details about each speaker in the Amazon Web
--   Services account.
listSpeakersResponse_speakerSummaries :: Lens' ListSpeakersResponse (Maybe [SpeakerSummary])

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakersResponse_nextToken :: Lens' ListSpeakersResponse (Maybe Text)

-- | The response's http status code.
listSpeakersResponse_httpStatus :: Lens' ListSpeakersResponse Int

-- | The Amazon Resource Name (ARN) of the Voice ID resource for which you
--   want to list the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The list of tags associated with the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The identifier of the domain where the session started.
evaluateSession_domainId :: Lens' EvaluateSession Text

-- | The session identifier, or name of the session, that you want to
--   evaluate. In Voice ID integration, this is the Contact-Id.
evaluateSession_sessionNameOrId :: Lens' EvaluateSession Text

-- | Details resulting from the fraud detection process, such as fraud
--   detection decision and risk score.
evaluateSessionResponse_fraudDetectionResult :: Lens' EvaluateSessionResponse (Maybe FraudDetectionResult)

-- | The current status of audio streaming for this session. This field is
--   useful to infer next steps when the Authentication or Fraud Detection
--   results are empty or the decision is <tt>NOT_ENOUGH_SPEECH</tt>. In
--   this situation, if the <tt>StreamingStatus</tt> is
--   <tt>ONGOING/PENDING_CONFIGURATION</tt>, it can mean that the client
--   should call the API again later, once Voice ID has enough audio to
--   produce a result. If the decision remains <tt>NOT_ENOUGH_SPEECH</tt>
--   even after <tt>StreamingStatus</tt> is <tt>ENDED</tt>, it means that
--   the previously streamed session did not have enough speech to perform
--   evaluation, and a new streaming session is needed to try again.
evaluateSessionResponse_streamingStatus :: Lens' EvaluateSessionResponse (Maybe StreamingStatus)

-- | Details resulting from the authentication process, such as
--   authentication decision and authentication score.
evaluateSessionResponse_authenticationResult :: Lens' EvaluateSessionResponse (Maybe AuthenticationResult)

-- | The identifier of the domain containing the session.
evaluateSessionResponse_domainId :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The service-generated identifier of the session.
evaluateSessionResponse_sessionId :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The client-provided name of the session.
evaluateSessionResponse_sessionName :: Lens' EvaluateSessionResponse (Maybe Text)

-- | The response's http status code.
evaluateSessionResponse_httpStatus :: Lens' EvaluateSessionResponse Int

-- | The identifier of the domain containing the speaker enrollment job.
describeSpeakerEnrollmentJob_domainId :: Lens' DescribeSpeakerEnrollmentJob Text

-- | The identifier of the speaker enrollment job you are describing.
describeSpeakerEnrollmentJob_jobId :: Lens' DescribeSpeakerEnrollmentJob Text

-- | Contains details about the specified speaker enrollment job.
describeSpeakerEnrollmentJobResponse_job :: Lens' DescribeSpeakerEnrollmentJobResponse (Maybe SpeakerEnrollmentJob)

-- | The response's http status code.
describeSpeakerEnrollmentJobResponse_httpStatus :: Lens' DescribeSpeakerEnrollmentJobResponse Int

-- | The identifier of the domain containing the fraudster.
deleteFraudster_domainId :: Lens' DeleteFraudster Text

-- | The identifier of the fraudster you want to delete.
deleteFraudster_fraudsterId :: Lens' DeleteFraudster Text

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listFraudsterRegistrationJobs_nextToken :: Lens' ListFraudsterRegistrationJobs (Maybe Text)

-- | Provides the status of your fraudster registration job.
listFraudsterRegistrationJobs_jobStatus :: Lens' ListFraudsterRegistrationJobs (Maybe FraudsterRegistrationJobStatus)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listFraudsterRegistrationJobs_maxResults :: Lens' ListFraudsterRegistrationJobs (Maybe Natural)

-- | The identifier of the domain containing the fraudster registration
--   Jobs.
listFraudsterRegistrationJobs_domainId :: Lens' ListFraudsterRegistrationJobs Text

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listFraudsterRegistrationJobsResponse_nextToken :: Lens' ListFraudsterRegistrationJobsResponse (Maybe Text)

-- | A list containing details about each specified fraudster registration
--   job.
listFraudsterRegistrationJobsResponse_jobSummaries :: Lens' ListFraudsterRegistrationJobsResponse (Maybe [FraudsterRegistrationJobSummary])

-- | The response's http status code.
listFraudsterRegistrationJobsResponse_httpStatus :: Lens' ListFraudsterRegistrationJobsResponse Int

-- | The identifier of the domain containing the fraudster.
describeFraudster_domainId :: Lens' DescribeFraudster Text

-- | The identifier of the fraudster you are describing.
describeFraudster_fraudsterId :: Lens' DescribeFraudster Text

-- | Information about the specified fraudster.
describeFraudsterResponse_fraudster :: Lens' DescribeFraudsterResponse (Maybe Fraudster)

-- | The response's http status code.
describeFraudsterResponse_httpStatus :: Lens' DescribeFraudsterResponse Int

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakerEnrollmentJobs_nextToken :: Lens' ListSpeakerEnrollmentJobs (Maybe Text)

-- | Provides the status of your speaker enrollment Job.
listSpeakerEnrollmentJobs_jobStatus :: Lens' ListSpeakerEnrollmentJobs (Maybe SpeakerEnrollmentJobStatus)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listSpeakerEnrollmentJobs_maxResults :: Lens' ListSpeakerEnrollmentJobs (Maybe Natural)

-- | The identifier of the domain containing the speaker enrollment jobs.
listSpeakerEnrollmentJobs_domainId :: Lens' ListSpeakerEnrollmentJobs Text

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listSpeakerEnrollmentJobsResponse_nextToken :: Lens' ListSpeakerEnrollmentJobsResponse (Maybe Text)

-- | A list containing details about each specified speaker enrollment job.
listSpeakerEnrollmentJobsResponse_jobSummaries :: Lens' ListSpeakerEnrollmentJobsResponse (Maybe [SpeakerEnrollmentJobSummary])

-- | The response's http status code.
listSpeakerEnrollmentJobsResponse_httpStatus :: Lens' ListSpeakerEnrollmentJobsResponse Int

-- | The idempotency token for creating a new domain. If not provided,
--   Amazon Web Services SDK populates this field.
createDomain_clientToken :: Lens' CreateDomain (Maybe Text)

-- | A brief description of this domain.
createDomain_description :: Lens' CreateDomain (Maybe Text)

-- | A list of tags you want added to the domain.
createDomain_tags :: Lens' CreateDomain (Maybe [Tag])

-- | The name of the domain.
createDomain_name :: Lens' CreateDomain Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Refer to
--   <a>Amazon Connect VoiceID encryption at rest</a> for more details on
--   how the KMS Key is used.
createDomain_serverSideEncryptionConfiguration :: Lens' CreateDomain ServerSideEncryptionConfiguration

-- | Information about the newly created domain.
createDomainResponse_domain :: Lens' CreateDomainResponse (Maybe Domain)

-- | The response's http status code.
createDomainResponse_httpStatus :: Lens' CreateDomainResponse Int

-- | The idempotency token for starting a new fraudster registration job.
--   If not provided, Amazon Web Services SDK populates this field.
startFraudsterRegistrationJob_clientToken :: Lens' StartFraudsterRegistrationJob (Maybe Text)

-- | The name of the new fraudster registration job.
startFraudsterRegistrationJob_jobName :: Lens' StartFraudsterRegistrationJob (Maybe Text)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
startFraudsterRegistrationJob_registrationConfig :: Lens' StartFraudsterRegistrationJob (Maybe RegistrationConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the Job output file. Refer to the <a>Create and edit a
--   fraudster watchlist</a> documentation for the permissions needed in
--   this role.
startFraudsterRegistrationJob_dataAccessRoleArn :: Lens' StartFraudsterRegistrationJob Text

-- | The identifier of the domain containing the fraudster registration job
--   and in which the fraudsters are registered.
startFraudsterRegistrationJob_domainId :: Lens' StartFraudsterRegistrationJob Text

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration requests.
startFraudsterRegistrationJob_inputDataConfig :: Lens' StartFraudsterRegistrationJob InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
startFraudsterRegistrationJob_outputDataConfig :: Lens' StartFraudsterRegistrationJob OutputDataConfig

-- | Details about the started fraudster registration job.
startFraudsterRegistrationJobResponse_job :: Lens' StartFraudsterRegistrationJobResponse (Maybe FraudsterRegistrationJob)

-- | The response's http status code.
startFraudsterRegistrationJobResponse_httpStatus :: Lens' StartFraudsterRegistrationJobResponse Int

-- | The identifier of the domain you are describing.
describeDomain_domainId :: Lens' DescribeDomain Text

-- | Information about the specified domain.
describeDomainResponse_domain :: Lens' DescribeDomainResponse (Maybe Domain)

-- | The response's http status code.
describeDomainResponse_httpStatus :: Lens' DescribeDomainResponse Int

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | The list of tags to assign to the specified resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The idempotency token for starting a new speaker enrollment Job. If
--   not provided, Amazon Web Services SDK populates this field.
startSpeakerEnrollmentJob_clientToken :: Lens' StartSpeakerEnrollmentJob (Maybe Text)

-- | A name for your speaker enrollment job.
startSpeakerEnrollmentJob_jobName :: Lens' StartSpeakerEnrollmentJob (Maybe Text)

-- | The enrollment config that contains details such as the action to take
--   when a speaker is already enrolled in the Voice ID system or when a
--   speaker is identified as a fraudster.
startSpeakerEnrollmentJob_enrollmentConfig :: Lens' StartSpeakerEnrollmentJob (Maybe EnrollmentConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file. Refer to <a>Batch enrollment using
--   audio data from prior calls</a> documentation for the permissions
--   needed in this role.
startSpeakerEnrollmentJob_dataAccessRoleArn :: Lens' StartSpeakerEnrollmentJob Text

-- | The identifier of the domain that contains the speaker enrollment job
--   and in which the speakers are enrolled.
startSpeakerEnrollmentJob_domainId :: Lens' StartSpeakerEnrollmentJob Text

-- | The input data config containing the S3 location for the input
--   manifest file that contains the list of speaker enrollment requests.
startSpeakerEnrollmentJob_inputDataConfig :: Lens' StartSpeakerEnrollmentJob InputDataConfig

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
startSpeakerEnrollmentJob_outputDataConfig :: Lens' StartSpeakerEnrollmentJob OutputDataConfig

-- | Details about the started speaker enrollment job.
startSpeakerEnrollmentJobResponse_job :: Lens' StartSpeakerEnrollmentJobResponse (Maybe SpeakerEnrollmentJob)

-- | The response's http status code.
startSpeakerEnrollmentJobResponse_httpStatus :: Lens' StartSpeakerEnrollmentJobResponse Int

-- | The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys you want to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The identifier of the domain containing the speaker.
optOutSpeaker_domainId :: Lens' OptOutSpeaker Text

-- | The identifier of the speaker you want opted-out.
optOutSpeaker_speakerId :: Lens' OptOutSpeaker Text

-- | Details about the opted-out speaker.
optOutSpeakerResponse_speaker :: Lens' OptOutSpeakerResponse (Maybe Speaker)

-- | The response's http status code.
optOutSpeakerResponse_httpStatus :: Lens' OptOutSpeakerResponse Int

-- | The identifier of the domain that contains the speaker.
describeSpeaker_domainId :: Lens' DescribeSpeaker Text

-- | The identifier of the speaker you are describing.
describeSpeaker_speakerId :: Lens' DescribeSpeaker Text

-- | Information about the specified speaker.
describeSpeakerResponse_speaker :: Lens' DescribeSpeakerResponse (Maybe Speaker)

-- | The response's http status code.
describeSpeakerResponse_httpStatus :: Lens' DescribeSpeakerResponse Int

-- | The identifier of the domain you want to delete.
deleteDomain_domainId :: Lens' DeleteDomain Text

-- | A brief description about this domain.
updateDomain_description :: Lens' UpdateDomain (Maybe Text)

-- | The identifier of the domain to be updated.
updateDomain_domainId :: Lens' UpdateDomain Text

-- | The name of the domain.
updateDomain_name :: Lens' UpdateDomain Text

-- | The configuration, containing the KMS Key Identifier, to be used by
--   Voice ID for the server-side encryption of your data. Note that all
--   the existing data in the domain are still encrypted using the existing
--   key, only the data added to domain after updating the key is encrypted
--   using the new key.
updateDomain_serverSideEncryptionConfiguration :: Lens' UpdateDomain ServerSideEncryptionConfiguration

-- | Details about the updated domain
updateDomainResponse_domain :: Lens' UpdateDomainResponse (Maybe Domain)

-- | The response's http status code.
updateDomainResponse_httpStatus :: Lens' UpdateDomainResponse Int

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
listDomains_maxResults :: Lens' ListDomains (Maybe Natural)

-- | If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | A list containing details about each domain in the Amazon Web Services
--   account.
listDomainsResponse_domainSummaries :: Lens' ListDomainsResponse (Maybe [DomainSummary])

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int

-- | The minimum threshold needed to successfully authenticate a speaker.
authenticationConfiguration_acceptanceThreshold :: Lens' AuthenticationConfiguration Natural

-- | The client-provided identifier for the speaker whose authentication
--   result is produced. Only present if a <tt>SpeakerId</tt> is provided
--   for the session.
authenticationResult_customerSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication score for the speaker whose authentication result
--   is produced. This value is only present if the authentication decision
--   is either <tt>ACCEPT</tt> or <tt>REJECT</tt>.
authenticationResult_score :: Lens' AuthenticationResult (Maybe Natural)

-- | The unique identifier for this authentication result. Because there
--   can be multiple authentications for a given session, this field helps
--   to identify if the returned result is from a previous streaming
--   activity or a new result. Note that in absence of any new streaming
--   activity, <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt>
--   changes, Voice ID always returns cached Authentication Result for this
--   API.
authenticationResult_authenticationResultId :: Lens' AuthenticationResult (Maybe Text)

-- | The authentication decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
authenticationResult_decision :: Lens' AuthenticationResult (Maybe AuthenticationDecision)

-- | The <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
authenticationResult_configuration :: Lens' AuthenticationResult (Maybe AuthenticationConfiguration)

-- | A timestamp indicating when audio aggregation started for this
--   authentication result.
authenticationResult_audioAggregationStartedAt :: Lens' AuthenticationResult (Maybe UTCTime)

-- | The service-generated identifier for the speaker whose authentication
--   result is produced.
authenticationResult_generatedSpeakerId :: Lens' AuthenticationResult (Maybe Text)

-- | A timestamp indicating when audio aggregation ended for this
--   authentication result.
authenticationResult_audioAggregationEndedAt :: Lens' AuthenticationResult (Maybe UTCTime)

-- | The current status of the domain.
domain_domainStatus :: Lens' Domain (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domain_arn :: Lens' Domain (Maybe Text)

-- | The timestamp at which the domain is created.
domain_createdAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided name for the domain.
domain_name :: Lens' Domain (Maybe Text)

-- | The service-generated identifier for the domain.
domain_domainId :: Lens' Domain (Maybe Text)

-- | The timestamp showing the domain's last update.
domain_updatedAt :: Lens' Domain (Maybe UTCTime)

-- | The client-provided description of the domain.
domain_description :: Lens' Domain (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data.
domain_serverSideEncryptionConfiguration :: Lens' Domain (Maybe ServerSideEncryptionConfiguration)

-- | The current status of the domain.
domainSummary_domainStatus :: Lens' DomainSummary (Maybe DomainStatus)

-- | The Amazon Resource Name (ARN) for the domain.
domainSummary_arn :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing when the domain is created.
domainSummary_createdAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided name for the domain.
domainSummary_name :: Lens' DomainSummary (Maybe Text)

-- | The service-generated identifier for the domain.
domainSummary_domainId :: Lens' DomainSummary (Maybe Text)

-- | The timestamp showing the domain's last update.
domainSummary_updatedAt :: Lens' DomainSummary (Maybe UTCTime)

-- | The client-provided description of the domain.
domainSummary_description :: Lens' DomainSummary (Maybe Text)

-- | The server-side encryption configuration containing the KMS Key
--   Identifier you want Voice ID to use to encrypt your data..
domainSummary_serverSideEncryptionConfiguration :: Lens' DomainSummary (Maybe ServerSideEncryptionConfiguration)

-- | The fraud detection configuration to use for the speaker enrollment
--   job.
enrollmentConfig_fraudDetectionConfig :: Lens' EnrollmentConfig (Maybe EnrollmentJobFraudDetectionConfig)

-- | The action to take when the specified speaker is already enrolled in
--   the specified domain. The default value is <tt>SKIP</tt>, which skips
--   the enrollment for the existing speaker. Setting the value to
--   <tt>OVERWRITE</tt> replaces the existing voice prints and enrollment
--   audio stored for that speaker with new data generated from the latest
--   audio.
enrollmentConfig_existingEnrollmentAction :: Lens' EnrollmentConfig (Maybe ExistingEnrollmentAction)

-- | Threshold value for determining whether the speaker is a high risk to
--   be fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
enrollmentJobFraudDetectionConfig_riskThreshold :: Lens' EnrollmentJobFraudDetectionConfig (Maybe Natural)

-- | The action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
enrollmentJobFraudDetectionConfig_fraudDetectionAction :: Lens' EnrollmentJobFraudDetectionConfig (Maybe FraudDetectionAction)

-- | A description of the error that caused the batch job failure.
failureDetails_message :: Lens' FailureDetails (Maybe Text)

-- | An HTTP status code representing the nature of the error.
failureDetails_statusCode :: Lens' FailureDetails (Maybe Int)

-- | Threshold value for determining whether the speaker is a fraudster. If
--   the detected risk score calculated by Voice ID is higher than the
--   threshold, the speaker is considered a fraudster.
fraudDetectionConfiguration_riskThreshold :: Lens' FraudDetectionConfiguration Natural

-- | The reason speaker was flagged by the fraud detection system. This is
--   only be populated if fraud detection Decision is <tt>HIGH_RISK</tt>,
--   and only has one possible value: <tt>KNOWN_FRAUDSTER</tt>.
fraudDetectionResult_reasons :: Lens' FraudDetectionResult (Maybe [FraudDetectionReason])

-- | Details about each risk analyzed for this speaker.
fraudDetectionResult_riskDetails :: Lens' FraudDetectionResult (Maybe FraudRiskDetails)

-- | The unique identifier for this fraud detection result. Given there can
--   be multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
fraudDetectionResult_fraudDetectionResultId :: Lens' FraudDetectionResult (Maybe Text)

-- | The fraud detection decision produced by Voice ID, processed against
--   the current session state and streamed audio of the speaker.
fraudDetectionResult_decision :: Lens' FraudDetectionResult (Maybe FraudDetectionDecision)

-- | The <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
fraudDetectionResult_configuration :: Lens' FraudDetectionResult (Maybe FraudDetectionConfiguration)

-- | A timestamp indicating when audio aggregation started for this fraud
--   detection result.
fraudDetectionResult_audioAggregationStartedAt :: Lens' FraudDetectionResult (Maybe UTCTime)

-- | A timestamp indicating when audio aggregation ended for this fraud
--   detection result.
fraudDetectionResult_audioAggregationEndedAt :: Lens' FraudDetectionResult (Maybe UTCTime)

-- | The details resulting from 'Known Fraudster Risk' analysis of the
--   speaker.
fraudRiskDetails_knownFraudsterRisk :: Lens' FraudRiskDetails KnownFraudsterRisk

-- | The timestamp when Voice ID identified the fraudster.
fraudster_createdAt :: Lens' Fraudster (Maybe UTCTime)

-- | The service-generated identifier for the fraudster.
fraudster_generatedFraudsterId :: Lens' Fraudster (Maybe Text)

-- | The identifier for the domain containing the fraudster.
fraudster_domainId :: Lens' Fraudster (Maybe Text)

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJob_failureDetails :: Lens' FraudsterRegistrationJob (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJob_jobId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing the creation time of the fraudster registration
--   job.
fraudsterRegistrationJob_createdAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJob_jobName :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJob_endedAt :: Lens' FraudsterRegistrationJob (Maybe UTCTime)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of fraudster registration job requests.
fraudsterRegistrationJob_inputDataConfig :: Lens' FraudsterRegistrationJob (Maybe InputDataConfig)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJob_jobProgress :: Lens' FraudsterRegistrationJob (Maybe JobProgress)

-- | The output data config containing the S3 location where you want Voice
--   ID to write your job output file; you must also include a KMS Key ID
--   in order to encrypt the file.
fraudsterRegistrationJob_outputDataConfig :: Lens' FraudsterRegistrationJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
fraudsterRegistrationJob_dataAccessRoleArn :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJob_domainId :: Lens' FraudsterRegistrationJob (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJob_jobStatus :: Lens' FraudsterRegistrationJob (Maybe FraudsterRegistrationJobStatus)

-- | The registration config containing details such as the action to take
--   when a duplicate fraudster is detected, and the similarity threshold
--   to use for detecting a duplicate fraudster.
fraudsterRegistrationJob_registrationConfig :: Lens' FraudsterRegistrationJob (Maybe RegistrationConfig)

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
fraudsterRegistrationJobSummary_failureDetails :: Lens' FraudsterRegistrationJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the fraudster registration job.
fraudsterRegistrationJobSummary_jobId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job is created.
fraudsterRegistrationJobSummary_createdAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | The client-provied name for the fraudster registration job.
fraudsterRegistrationJobSummary_jobName :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | A timestamp showing when the fraudster registration job ended.
fraudsterRegistrationJobSummary_endedAt :: Lens' FraudsterRegistrationJobSummary (Maybe UTCTime)

-- | Shows the completed percentage of registration requests listed in the
--   input file.
fraudsterRegistrationJobSummary_jobProgress :: Lens' FraudsterRegistrationJobSummary (Maybe JobProgress)

-- | The identifier of the domain containing the fraudster registration
--   job.
fraudsterRegistrationJobSummary_domainId :: Lens' FraudsterRegistrationJobSummary (Maybe Text)

-- | The current status of the fraudster registration job.
fraudsterRegistrationJobSummary_jobStatus :: Lens' FraudsterRegistrationJobSummary (Maybe FraudsterRegistrationJobStatus)

-- | The S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text

-- | Shows the completed percentage of enrollment or registration requests
--   listed in the input file.
jobProgress_percentComplete :: Lens' JobProgress (Maybe Natural)

-- | The identifier of the fraudster that is the closest match to the
--   speaker. If there are no fraudsters registered in a given domain, or
--   if there are no fraudsters with a non-zero RiskScore, this value is
--   <tt>null</tt>.
knownFraudsterRisk_generatedFraudsterId :: Lens' KnownFraudsterRisk (Maybe Text)

-- | The score indicating the likelihood the speaker is a known fraudster.
knownFraudsterRisk_riskScore :: Lens' KnownFraudsterRisk Natural

-- | the identifier of the KMS key you want Voice ID to use to encrypt the
--   output file of the fraudster registration job.
outputDataConfig_kmsKeyId :: Lens' OutputDataConfig (Maybe Text)

-- | The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text

-- | The action to take when a fraudster is identified as a duplicate. The
--   default action is <tt>SKIP</tt>, which skips registering the duplicate
--   fraudster. Setting the value to <tt>REGISTER_AS_NEW</tt> always
--   registers a new fraudster into the specified domain.
registrationConfig_duplicateRegistrationAction :: Lens' RegistrationConfig (Maybe DuplicateRegistrationAction)

-- | The minimum similarity score between the new and old fraudsters in
--   order to consider the new fraudster a duplicate.
registrationConfig_fraudsterSimilarityThreshold :: Lens' RegistrationConfig (Maybe Natural)

-- | The identifier of the KMS Key you want Voice ID to use to encrypt your
--   data.
serverSideEncryptionConfiguration_kmsKeyId :: Lens' ServerSideEncryptionConfiguration Text

-- | The current status of the speaker.
speaker_status :: Lens' Speaker (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speaker_customerSpeakerId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing when the speaker is created.
speaker_createdAt :: Lens' Speaker (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speaker_domainId :: Lens' Speaker (Maybe Text)

-- | A timestamp showing the speaker's last update.
speaker_updatedAt :: Lens' Speaker (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speaker_generatedSpeakerId :: Lens' Speaker (Maybe Text)

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJob_failureDetails :: Lens' SpeakerEnrollmentJob (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJob_jobId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing the creation of the speaker enrollment job.
speakerEnrollmentJob_createdAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJob_jobName :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJob_endedAt :: Lens' SpeakerEnrollmentJob (Maybe UTCTime)

-- | The configuration that defines the action to take when the speaker is
--   already enrolled in Voice ID, and the <tt>FraudDetectionConfig</tt> to
--   use.
speakerEnrollmentJob_enrollmentConfig :: Lens' SpeakerEnrollmentJob (Maybe EnrollmentConfig)

-- | The input data config containing an S3 URI for the input manifest file
--   that contains the list of speaker enrollment job requests.
speakerEnrollmentJob_inputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe InputDataConfig)

-- | Provides details on job progress. This field shows the completed
--   percentage of registration requests listed in the input file.
speakerEnrollmentJob_jobProgress :: Lens' SpeakerEnrollmentJob (Maybe JobProgress)

-- | The output data config containing the S3 location where Voice ID
--   writes the job output file; you must also include a KMS Key ID to
--   encrypt the file.
speakerEnrollmentJob_outputDataConfig :: Lens' SpeakerEnrollmentJob (Maybe OutputDataConfig)

-- | The IAM role Amazon Resource Name (ARN) that grants Voice ID
--   permissions to access customer's buckets to read the input manifest
--   file and write the job output file.
speakerEnrollmentJob_dataAccessRoleArn :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJob_domainId :: Lens' SpeakerEnrollmentJob (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJob_jobStatus :: Lens' SpeakerEnrollmentJob (Maybe SpeakerEnrollmentJobStatus)

-- | Contains details that are populated when an entire batch job fails. In
--   cases of individual registration job failures, the batch job as a
--   whole doesn't fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
speakerEnrollmentJobSummary_failureDetails :: Lens' SpeakerEnrollmentJobSummary (Maybe FailureDetails)

-- | The service-generated identifier for the speaker enrollment job.
speakerEnrollmentJobSummary_jobId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing the creation time of the speaker enrollment job.
speakerEnrollmentJobSummary_createdAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | The client-provided name for the speaker enrollment job.
speakerEnrollmentJobSummary_jobName :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | A timestamp showing when the speaker enrollment job ended.
speakerEnrollmentJobSummary_endedAt :: Lens' SpeakerEnrollmentJobSummary (Maybe UTCTime)

-- | Provides details regarding job progress. This field shows the
--   completed percentage of enrollment requests listed in the input file.
speakerEnrollmentJobSummary_jobProgress :: Lens' SpeakerEnrollmentJobSummary (Maybe JobProgress)

-- | The identifier of the domain that contains the speaker enrollment job.
speakerEnrollmentJobSummary_domainId :: Lens' SpeakerEnrollmentJobSummary (Maybe Text)

-- | The current status of the speaker enrollment job.
speakerEnrollmentJobSummary_jobStatus :: Lens' SpeakerEnrollmentJobSummary (Maybe SpeakerEnrollmentJobStatus)

-- | The current status of the speaker.
speakerSummary_status :: Lens' SpeakerSummary (Maybe SpeakerStatus)

-- | The client-provided identifier for the speaker.
speakerSummary_customerSpeakerId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's creation time.
speakerSummary_createdAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The identifier of the domain that contains the speaker.
speakerSummary_domainId :: Lens' SpeakerSummary (Maybe Text)

-- | A timestamp showing the speaker's last update.
speakerSummary_updatedAt :: Lens' SpeakerSummary (Maybe UTCTime)

-- | The service-generated identifier for the speaker.
speakerSummary_generatedSpeakerId :: Lens' SpeakerSummary (Maybe Text)

-- | The first part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the key
--   is 'Department'.
tag_key :: Lens' Tag Text

-- | The second part of a key:value pair that forms a tag associated with a
--   given resource. For example, in the tag ‘Department’:’Sales’, the
--   value is 'Sales'.
tag_value :: Lens' Tag Text


module Amazonka.VoiceId.Waiters


-- | Derived from API version <tt>2021-09-27</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Connect Voice ID provides real-time caller authentication and
--   fraud screening. This guide describes the APIs used for this service.
module Amazonka.VoiceId

-- | API version <tt>2021-09-27</tt> of the Amazon Voice ID SDK
--   configuration.
defaultService :: Service

-- | The request failed one or more validations; check the error message
--   for more details.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient permissions to perform this action. Check
--   the error message and try again.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed due to a conflict. Check the <tt>ConflictType</tt>
--   and error message for more details.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded the service quota. Refer to <a>Voice ID Service
--   Quotas</a> and try your request again.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling. Please slow down
--   your request rate. Refer to <a>Amazon Connect Voice ID Service API
--   throttling quotas</a> and try your request again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed due to an unknown error on the server side.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource cannot be found. Check the
--   <tt>ResourceType</tt> and error message for more details.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeFraudsterRegistrationJob</a> smart
--   constructor.
data DescribeFraudsterRegistrationJob
DescribeFraudsterRegistrationJob' :: Text -> Text -> DescribeFraudsterRegistrationJob

-- | Create a value of <a>DescribeFraudsterRegistrationJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeFraudsterRegistrationJob'</a>,
--   <a>describeFraudsterRegistrationJob_domainId</a> - The identifier for
--   the domain containing the fraudster registration job.
--   
--   <a>$sel:jobId:DescribeFraudsterRegistrationJob'</a>,
--   <a>describeFraudsterRegistrationJob_jobId</a> - The identifier for the
--   fraudster registration job you are describing.
newDescribeFraudsterRegistrationJob :: Text -> Text -> DescribeFraudsterRegistrationJob

-- | <i>See:</i> <a>newDescribeFraudsterRegistrationJobResponse</a> smart
--   constructor.
data DescribeFraudsterRegistrationJobResponse
DescribeFraudsterRegistrationJobResponse' :: Maybe FraudsterRegistrationJob -> Int -> DescribeFraudsterRegistrationJobResponse

-- | Create a value of <a>DescribeFraudsterRegistrationJobResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeFraudsterRegistrationJobResponse'</a>,
--   <a>describeFraudsterRegistrationJobResponse_job</a> - Contains details
--   about the specified fraudster registration job.
--   
--   <a>$sel:httpStatus:DescribeFraudsterRegistrationJobResponse'</a>,
--   <a>describeFraudsterRegistrationJobResponse_httpStatus</a> - The
--   response's http status code.
newDescribeFraudsterRegistrationJobResponse :: Int -> DescribeFraudsterRegistrationJobResponse

-- | <i>See:</i> <a>newDeleteSpeaker</a> smart constructor.
data DeleteSpeaker
DeleteSpeaker' :: Text -> Sensitive Text -> DeleteSpeaker

-- | Create a value of <a>DeleteSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteSpeaker'</a>, <a>deleteSpeaker_domainId</a> -
--   The identifier of the domain containing the speaker.
--   
--   <a>$sel:speakerId:DeleteSpeaker'</a>, <a>deleteSpeaker_speakerId</a> -
--   The identifier of the speaker you want to delete.
newDeleteSpeaker :: Text -> Text -> DeleteSpeaker

-- | <i>See:</i> <a>newDeleteSpeakerResponse</a> smart constructor.
data DeleteSpeakerResponse
DeleteSpeakerResponse' :: DeleteSpeakerResponse

-- | Create a value of <a>DeleteSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSpeakerResponse :: DeleteSpeakerResponse

-- | <i>See:</i> <a>newListSpeakers</a> smart constructor.
data ListSpeakers
ListSpeakers' :: Maybe Text -> Maybe Natural -> Text -> ListSpeakers

-- | Create a value of <a>ListSpeakers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakers'</a>, <a>listSpeakers_nextToken</a> -
--   If <tt>NextToken</tt> is returned, there are more results available.
--   The value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:maxResults:ListSpeakers'</a>, <a>listSpeakers_maxResults</a> -
--   The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
--   
--   <a>$sel:domainId:ListSpeakers'</a>, <a>listSpeakers_domainId</a> - The
--   identifier of the domain.
newListSpeakers :: Text -> ListSpeakers

-- | <i>See:</i> <a>newListSpeakersResponse</a> smart constructor.
data ListSpeakersResponse
ListSpeakersResponse' :: Maybe [SpeakerSummary] -> Maybe Text -> Int -> ListSpeakersResponse

-- | Create a value of <a>ListSpeakersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speakerSummaries:ListSpeakersResponse'</a>,
--   <a>listSpeakersResponse_speakerSummaries</a> - A list containing
--   details about each speaker in the Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListSpeakers'</a>,
--   <a>listSpeakersResponse_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:httpStatus:ListSpeakersResponse'</a>,
--   <a>listSpeakersResponse_httpStatus</a> - The response's http status
--   code.
newListSpeakersResponse :: Int -> ListSpeakersResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the Voice ID resource for which you want to list the tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tags associated
--   with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newEvaluateSession</a> smart constructor.
data EvaluateSession
EvaluateSession' :: Text -> Text -> EvaluateSession

-- | Create a value of <a>EvaluateSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:EvaluateSession'</a>, <a>evaluateSession_domainId</a>
--   - The identifier of the domain where the session started.
--   
--   <a>$sel:sessionNameOrId:EvaluateSession'</a>,
--   <a>evaluateSession_sessionNameOrId</a> - The session identifier, or
--   name of the session, that you want to evaluate. In Voice ID
--   integration, this is the Contact-Id.
newEvaluateSession :: Text -> Text -> EvaluateSession

-- | <i>See:</i> <a>newEvaluateSessionResponse</a> smart constructor.
data EvaluateSessionResponse
EvaluateSessionResponse' :: Maybe FraudDetectionResult -> Maybe StreamingStatus -> Maybe AuthenticationResult -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> EvaluateSessionResponse

-- | Create a value of <a>EvaluateSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudDetectionResult:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_fraudDetectionResult</a> - Details
--   resulting from the fraud detection process, such as fraud detection
--   decision and risk score.
--   
--   <a>$sel:streamingStatus:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_streamingStatus</a> - The current status of
--   audio streaming for this session. This field is useful to infer next
--   steps when the Authentication or Fraud Detection results are empty or
--   the decision is <tt>NOT_ENOUGH_SPEECH</tt>. In this situation, if the
--   <tt>StreamingStatus</tt> is <tt>ONGOING/PENDING_CONFIGURATION</tt>, it
--   can mean that the client should call the API again later, once Voice
--   ID has enough audio to produce a result. If the decision remains
--   <tt>NOT_ENOUGH_SPEECH</tt> even after <tt>StreamingStatus</tt> is
--   <tt>ENDED</tt>, it means that the previously streamed session did not
--   have enough speech to perform evaluation, and a new streaming session
--   is needed to try again.
--   
--   <a>$sel:authenticationResult:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_authenticationResult</a> - Details
--   resulting from the authentication process, such as authentication
--   decision and authentication score.
--   
--   <a>$sel:domainId:EvaluateSession'</a>,
--   <a>evaluateSessionResponse_domainId</a> - The identifier of the domain
--   containing the session.
--   
--   <a>$sel:sessionId:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_sessionId</a> - The service-generated
--   identifier of the session.
--   
--   <a>$sel:sessionName:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_sessionName</a> - The client-provided name
--   of the session.
--   
--   <a>$sel:httpStatus:EvaluateSessionResponse'</a>,
--   <a>evaluateSessionResponse_httpStatus</a> - The response's http status
--   code.
newEvaluateSessionResponse :: Int -> EvaluateSessionResponse

-- | <i>See:</i> <a>newDescribeSpeakerEnrollmentJob</a> smart constructor.
data DescribeSpeakerEnrollmentJob
DescribeSpeakerEnrollmentJob' :: Text -> Text -> DescribeSpeakerEnrollmentJob

-- | Create a value of <a>DescribeSpeakerEnrollmentJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeSpeakerEnrollmentJob'</a>,
--   <a>describeSpeakerEnrollmentJob_domainId</a> - The identifier of the
--   domain containing the speaker enrollment job.
--   
--   <a>$sel:jobId:DescribeSpeakerEnrollmentJob'</a>,
--   <a>describeSpeakerEnrollmentJob_jobId</a> - The identifier of the
--   speaker enrollment job you are describing.
newDescribeSpeakerEnrollmentJob :: Text -> Text -> DescribeSpeakerEnrollmentJob

-- | <i>See:</i> <a>newDescribeSpeakerEnrollmentJobResponse</a> smart
--   constructor.
data DescribeSpeakerEnrollmentJobResponse
DescribeSpeakerEnrollmentJobResponse' :: Maybe SpeakerEnrollmentJob -> Int -> DescribeSpeakerEnrollmentJobResponse

-- | Create a value of <a>DescribeSpeakerEnrollmentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeSpeakerEnrollmentJobResponse'</a>,
--   <a>describeSpeakerEnrollmentJobResponse_job</a> - Contains details
--   about the specified speaker enrollment job.
--   
--   <a>$sel:httpStatus:DescribeSpeakerEnrollmentJobResponse'</a>,
--   <a>describeSpeakerEnrollmentJobResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSpeakerEnrollmentJobResponse :: Int -> DescribeSpeakerEnrollmentJobResponse

-- | <i>See:</i> <a>newDeleteFraudster</a> smart constructor.
data DeleteFraudster
DeleteFraudster' :: Text -> Sensitive Text -> DeleteFraudster

-- | Create a value of <a>DeleteFraudster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteFraudster'</a>, <a>deleteFraudster_domainId</a>
--   - The identifier of the domain containing the fraudster.
--   
--   <a>$sel:fraudsterId:DeleteFraudster'</a>,
--   <a>deleteFraudster_fraudsterId</a> - The identifier of the fraudster
--   you want to delete.
newDeleteFraudster :: Text -> Text -> DeleteFraudster

-- | <i>See:</i> <a>newDeleteFraudsterResponse</a> smart constructor.
data DeleteFraudsterResponse
DeleteFraudsterResponse' :: DeleteFraudsterResponse

-- | Create a value of <a>DeleteFraudsterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteFraudsterResponse :: DeleteFraudsterResponse

-- | <i>See:</i> <a>newListFraudsterRegistrationJobs</a> smart constructor.
data ListFraudsterRegistrationJobs
ListFraudsterRegistrationJobs' :: Maybe Text -> Maybe FraudsterRegistrationJobStatus -> Maybe Natural -> Text -> ListFraudsterRegistrationJobs

-- | Create a value of <a>ListFraudsterRegistrationJobs</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_nextToken</a> - If <tt>NextToken</tt>
--   is returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:jobStatus:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_jobStatus</a> - Provides the status
--   of your fraudster registration job.
--   
--   <a>$sel:maxResults:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_maxResults</a> - The maximum number
--   of results that are returned per call. You can use <tt>NextToken</tt>
--   to obtain further pages of results. The default is 100; the maximum
--   allowed page size is also 100.
--   
--   <a>$sel:domainId:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobs_domainId</a> - The identifier of the
--   domain containing the fraudster registration Jobs.
newListFraudsterRegistrationJobs :: Text -> ListFraudsterRegistrationJobs

-- | <i>See:</i> <a>newListFraudsterRegistrationJobsResponse</a> smart
--   constructor.
data ListFraudsterRegistrationJobsResponse
ListFraudsterRegistrationJobsResponse' :: Maybe Text -> Maybe [FraudsterRegistrationJobSummary] -> Int -> ListFraudsterRegistrationJobsResponse

-- | Create a value of <a>ListFraudsterRegistrationJobsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFraudsterRegistrationJobs'</a>,
--   <a>listFraudsterRegistrationJobsResponse_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:jobSummaries:ListFraudsterRegistrationJobsResponse'</a>,
--   <a>listFraudsterRegistrationJobsResponse_jobSummaries</a> - A list
--   containing details about each specified fraudster registration job.
--   
--   <a>$sel:httpStatus:ListFraudsterRegistrationJobsResponse'</a>,
--   <a>listFraudsterRegistrationJobsResponse_httpStatus</a> - The
--   response's http status code.
newListFraudsterRegistrationJobsResponse :: Int -> ListFraudsterRegistrationJobsResponse

-- | <i>See:</i> <a>newDescribeFraudster</a> smart constructor.
data DescribeFraudster
DescribeFraudster' :: Text -> Sensitive Text -> DescribeFraudster

-- | Create a value of <a>DescribeFraudster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeFraudster'</a>,
--   <a>describeFraudster_domainId</a> - The identifier of the domain
--   containing the fraudster.
--   
--   <a>$sel:fraudsterId:DescribeFraudster'</a>,
--   <a>describeFraudster_fraudsterId</a> - The identifier of the fraudster
--   you are describing.
newDescribeFraudster :: Text -> Text -> DescribeFraudster

-- | <i>See:</i> <a>newDescribeFraudsterResponse</a> smart constructor.
data DescribeFraudsterResponse
DescribeFraudsterResponse' :: Maybe Fraudster -> Int -> DescribeFraudsterResponse

-- | Create a value of <a>DescribeFraudsterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudster:DescribeFraudsterResponse'</a>,
--   <a>describeFraudsterResponse_fraudster</a> - Information about the
--   specified fraudster.
--   
--   <a>$sel:httpStatus:DescribeFraudsterResponse'</a>,
--   <a>describeFraudsterResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFraudsterResponse :: Int -> DescribeFraudsterResponse

-- | <i>See:</i> <a>newListSpeakerEnrollmentJobs</a> smart constructor.
data ListSpeakerEnrollmentJobs
ListSpeakerEnrollmentJobs' :: Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> Maybe Natural -> Text -> ListSpeakerEnrollmentJobs

-- | Create a value of <a>ListSpeakerEnrollmentJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:jobStatus:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_jobStatus</a> - Provides the status of
--   your speaker enrollment Job.
--   
--   <a>$sel:maxResults:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_maxResults</a> - The maximum number of
--   results that are returned per call. You can use <tt>NextToken</tt> to
--   obtain further pages of results. The default is 100; the maximum
--   allowed page size is also 100.
--   
--   <a>$sel:domainId:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobs_domainId</a> - The identifier of the
--   domain containing the speaker enrollment jobs.
newListSpeakerEnrollmentJobs :: Text -> ListSpeakerEnrollmentJobs

-- | <i>See:</i> <a>newListSpeakerEnrollmentJobsResponse</a> smart
--   constructor.
data ListSpeakerEnrollmentJobsResponse
ListSpeakerEnrollmentJobsResponse' :: Maybe Text -> Maybe [SpeakerEnrollmentJobSummary] -> Int -> ListSpeakerEnrollmentJobsResponse

-- | Create a value of <a>ListSpeakerEnrollmentJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeakerEnrollmentJobs'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:jobSummaries:ListSpeakerEnrollmentJobsResponse'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_jobSummaries</a> - A list
--   containing details about each specified speaker enrollment job.
--   
--   <a>$sel:httpStatus:ListSpeakerEnrollmentJobsResponse'</a>,
--   <a>listSpeakerEnrollmentJobsResponse_httpStatus</a> - The response's
--   http status code.
newListSpeakerEnrollmentJobsResponse :: Int -> ListSpeakerEnrollmentJobsResponse

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [Tag] -> Sensitive Text -> ServerSideEncryptionConfiguration -> CreateDomain

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateDomain'</a>, <a>createDomain_clientToken</a>
--   - The idempotency token for creating a new domain. If not provided,
--   Amazon Web Services SDK populates this field.
--   
--   <a>$sel:description:CreateDomain'</a>, <a>createDomain_description</a>
--   - A brief description of this domain.
--   
--   <a>$sel:tags:CreateDomain'</a>, <a>createDomain_tags</a> - A list of
--   tags you want added to the domain.
--   
--   <a>$sel:name:CreateDomain'</a>, <a>createDomain_name</a> - The name of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:CreateDomain'</a>,
--   <a>createDomain_serverSideEncryptionConfiguration</a> - The
--   configuration, containing the KMS Key Identifier, to be used by Voice
--   ID for the server-side encryption of your data. Refer to <a>Amazon
--   Connect VoiceID encryption at rest</a> for more details on how the KMS
--   Key is used.
newCreateDomain :: Text -> ServerSideEncryptionConfiguration -> CreateDomain

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: Maybe Domain -> Int -> CreateDomainResponse

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:CreateDomainResponse'</a>,
--   <a>createDomainResponse_domain</a> - Information about the newly
--   created domain.
--   
--   <a>$sel:httpStatus:CreateDomainResponse'</a>,
--   <a>createDomainResponse_httpStatus</a> - The response's http status
--   code.
newCreateDomainResponse :: Int -> CreateDomainResponse

-- | <i>See:</i> <a>newStartFraudsterRegistrationJob</a> smart constructor.
data StartFraudsterRegistrationJob
StartFraudsterRegistrationJob' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe RegistrationConfig -> Text -> Text -> InputDataConfig -> OutputDataConfig -> StartFraudsterRegistrationJob

-- | Create a value of <a>StartFraudsterRegistrationJob</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_clientToken</a> - The idempotency
--   token for starting a new fraudster registration job. If not provided,
--   Amazon Web Services SDK populates this field.
--   
--   <a>$sel:jobName:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_jobName</a> - The name of the new
--   fraudster registration job.
--   
--   <a>$sel:registrationConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_registrationConfig</a> - The
--   registration config containing details such as the action to take when
--   a duplicate fraudster is detected, and the similarity threshold to use
--   for detecting a duplicate fraudster.
--   
--   <a>$sel:dataAccessRoleArn:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the Job
--   output file. Refer to the <a>Create and edit a fraudster watchlist</a>
--   documentation for the permissions needed in this role.
--   
--   <a>$sel:domainId:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_domainId</a> - The identifier of the
--   domain containing the fraudster registration job and in which the
--   fraudsters are registered.
--   
--   <a>$sel:inputDataConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_inputDataConfig</a> - The input data
--   config containing an S3 URI for the input manifest file that contains
--   the list of fraudster registration requests.
--   
--   <a>$sel:outputDataConfig:StartFraudsterRegistrationJob'</a>,
--   <a>startFraudsterRegistrationJob_outputDataConfig</a> - The output
--   data config containing the S3 location where Voice ID writes the job
--   output file; you must also include a KMS Key ID to encrypt the file.
newStartFraudsterRegistrationJob :: Text -> Text -> InputDataConfig -> OutputDataConfig -> StartFraudsterRegistrationJob

-- | <i>See:</i> <a>newStartFraudsterRegistrationJobResponse</a> smart
--   constructor.
data StartFraudsterRegistrationJobResponse
StartFraudsterRegistrationJobResponse' :: Maybe FraudsterRegistrationJob -> Int -> StartFraudsterRegistrationJobResponse

-- | Create a value of <a>StartFraudsterRegistrationJobResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StartFraudsterRegistrationJobResponse'</a>,
--   <a>startFraudsterRegistrationJobResponse_job</a> - Details about the
--   started fraudster registration job.
--   
--   <a>$sel:httpStatus:StartFraudsterRegistrationJobResponse'</a>,
--   <a>startFraudsterRegistrationJobResponse_httpStatus</a> - The
--   response's http status code.
newStartFraudsterRegistrationJobResponse :: Int -> StartFraudsterRegistrationJobResponse

-- | <i>See:</i> <a>newDescribeDomain</a> smart constructor.
data DescribeDomain
DescribeDomain' :: Text -> DescribeDomain

-- | Create a value of <a>DescribeDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeDomain'</a>, <a>describeDomain_domainId</a> -
--   The identifier of the domain you are describing.
newDescribeDomain :: Text -> DescribeDomain

-- | <i>See:</i> <a>newDescribeDomainResponse</a> smart constructor.
data DescribeDomainResponse
DescribeDomainResponse' :: Maybe Domain -> Int -> DescribeDomainResponse

-- | Create a value of <a>DescribeDomainResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_domain</a> - Information about the specified
--   domain.
--   
--   <a>$sel:httpStatus:DescribeDomainResponse'</a>,
--   <a>describeDomainResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDomainResponse :: Int -> DescribeDomainResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the Voice ID resource you want to
--   tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   tags to assign to the specified resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newStartSpeakerEnrollmentJob</a> smart constructor.
data StartSpeakerEnrollmentJob
StartSpeakerEnrollmentJob' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe EnrollmentConfig -> Text -> Text -> InputDataConfig -> OutputDataConfig -> StartSpeakerEnrollmentJob

-- | Create a value of <a>StartSpeakerEnrollmentJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_clientToken</a> - The idempotency token
--   for starting a new speaker enrollment Job. If not provided, Amazon Web
--   Services SDK populates this field.
--   
--   <a>$sel:jobName:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_jobName</a> - A name for your speaker
--   enrollment job.
--   
--   <a>$sel:enrollmentConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_enrollmentConfig</a> - The enrollment
--   config that contains details such as the action to take when a speaker
--   is already enrolled in the Voice ID system or when a speaker is
--   identified as a fraudster.
--   
--   <a>$sel:dataAccessRoleArn:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file. Refer to <a>Batch enrollment using audio data from prior
--   calls</a> documentation for the permissions needed in this role.
--   
--   <a>$sel:domainId:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_domainId</a> - The identifier of the
--   domain that contains the speaker enrollment job and in which the
--   speakers are enrolled.
--   
--   <a>$sel:inputDataConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_inputDataConfig</a> - The input data
--   config containing the S3 location for the input manifest file that
--   contains the list of speaker enrollment requests.
--   
--   <a>$sel:outputDataConfig:StartSpeakerEnrollmentJob'</a>,
--   <a>startSpeakerEnrollmentJob_outputDataConfig</a> - The output data
--   config containing the S3 location where Voice ID writes the job output
--   file; you must also include a KMS Key ID to encrypt the file.
newStartSpeakerEnrollmentJob :: Text -> Text -> InputDataConfig -> OutputDataConfig -> StartSpeakerEnrollmentJob

-- | <i>See:</i> <a>newStartSpeakerEnrollmentJobResponse</a> smart
--   constructor.
data StartSpeakerEnrollmentJobResponse
StartSpeakerEnrollmentJobResponse' :: Maybe SpeakerEnrollmentJob -> Int -> StartSpeakerEnrollmentJobResponse

-- | Create a value of <a>StartSpeakerEnrollmentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StartSpeakerEnrollmentJobResponse'</a>,
--   <a>startSpeakerEnrollmentJobResponse_job</a> - Details about the
--   started speaker enrollment job.
--   
--   <a>$sel:httpStatus:StartSpeakerEnrollmentJobResponse'</a>,
--   <a>startSpeakerEnrollmentJobResponse_httpStatus</a> - The response's
--   http status code.
newStartSpeakerEnrollmentJobResponse :: Int -> StartSpeakerEnrollmentJobResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Sensitive Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the Voice ID resource you want to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys you want to remove from the specified resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newOptOutSpeaker</a> smart constructor.
data OptOutSpeaker
OptOutSpeaker' :: Text -> Sensitive Text -> OptOutSpeaker

-- | Create a value of <a>OptOutSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:OptOutSpeaker'</a>, <a>optOutSpeaker_domainId</a> -
--   The identifier of the domain containing the speaker.
--   
--   <a>$sel:speakerId:OptOutSpeaker'</a>, <a>optOutSpeaker_speakerId</a> -
--   The identifier of the speaker you want opted-out.
newOptOutSpeaker :: Text -> Text -> OptOutSpeaker

-- | <i>See:</i> <a>newOptOutSpeakerResponse</a> smart constructor.
data OptOutSpeakerResponse
OptOutSpeakerResponse' :: Maybe Speaker -> Int -> OptOutSpeakerResponse

-- | Create a value of <a>OptOutSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speaker:OptOutSpeakerResponse'</a>,
--   <a>optOutSpeakerResponse_speaker</a> - Details about the opted-out
--   speaker.
--   
--   <a>$sel:httpStatus:OptOutSpeakerResponse'</a>,
--   <a>optOutSpeakerResponse_httpStatus</a> - The response's http status
--   code.
newOptOutSpeakerResponse :: Int -> OptOutSpeakerResponse

-- | <i>See:</i> <a>newDescribeSpeaker</a> smart constructor.
data DescribeSpeaker
DescribeSpeaker' :: Text -> Sensitive Text -> DescribeSpeaker

-- | Create a value of <a>DescribeSpeaker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DescribeSpeaker'</a>, <a>describeSpeaker_domainId</a>
--   - The identifier of the domain that contains the speaker.
--   
--   <a>$sel:speakerId:DescribeSpeaker'</a>,
--   <a>describeSpeaker_speakerId</a> - The identifier of the speaker you
--   are describing.
newDescribeSpeaker :: Text -> Text -> DescribeSpeaker

-- | <i>See:</i> <a>newDescribeSpeakerResponse</a> smart constructor.
data DescribeSpeakerResponse
DescribeSpeakerResponse' :: Maybe Speaker -> Int -> DescribeSpeakerResponse

-- | Create a value of <a>DescribeSpeakerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:speaker:DescribeSpeakerResponse'</a>,
--   <a>describeSpeakerResponse_speaker</a> - Information about the
--   specified speaker.
--   
--   <a>$sel:httpStatus:DescribeSpeakerResponse'</a>,
--   <a>describeSpeakerResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSpeakerResponse :: Int -> DescribeSpeakerResponse

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Text -> DeleteDomain

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainId:DeleteDomain'</a>, <a>deleteDomain_domainId</a> - The
--   identifier of the domain you want to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: DeleteDomainResponse

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainResponse :: DeleteDomainResponse

-- | <i>See:</i> <a>newUpdateDomain</a> smart constructor.
data UpdateDomain
UpdateDomain' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ServerSideEncryptionConfiguration -> UpdateDomain

-- | Create a value of <a>UpdateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDomain'</a>, <a>updateDomain_description</a>
--   - A brief description about this domain.
--   
--   <a>$sel:domainId:UpdateDomain'</a>, <a>updateDomain_domainId</a> - The
--   identifier of the domain to be updated.
--   
--   <a>$sel:name:UpdateDomain'</a>, <a>updateDomain_name</a> - The name of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:UpdateDomain'</a>,
--   <a>updateDomain_serverSideEncryptionConfiguration</a> - The
--   configuration, containing the KMS Key Identifier, to be used by Voice
--   ID for the server-side encryption of your data. Note that all the
--   existing data in the domain are still encrypted using the existing
--   key, only the data added to domain after updating the key is encrypted
--   using the new key.
newUpdateDomain :: Text -> Text -> ServerSideEncryptionConfiguration -> UpdateDomain

-- | <i>See:</i> <a>newUpdateDomainResponse</a> smart constructor.
data UpdateDomainResponse
UpdateDomainResponse' :: Maybe Domain -> Int -> UpdateDomainResponse

-- | Create a value of <a>UpdateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:UpdateDomainResponse'</a>,
--   <a>updateDomainResponse_domain</a> - Details about the updated domain
--   
--   <a>$sel:httpStatus:UpdateDomainResponse'</a>,
--   <a>updateDomainResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDomainResponse :: Int -> UpdateDomainResponse

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Natural -> ListDomains

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - If
--   <tt>NextToken</tt> is returned, there are more results available. The
--   value of <tt>NextToken</tt> is a unique pagination token for each
--   page. Make the call again using the returned token to retrieve the
--   next page. Keep all other arguments unchanged. Each pagination token
--   expires after 24 hours.
--   
--   <a>$sel:maxResults:ListDomains'</a>, <a>listDomains_maxResults</a> -
--   The maximum number of results that are returned per call. You can use
--   <tt>NextToken</tt> to obtain further pages of results. The default is
--   100; the maximum allowed page size is also 100.
newListDomains :: ListDomains

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe Text -> Maybe [DomainSummary] -> Int -> ListDomainsResponse

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - If <tt>NextToken</tt> is
--   returned, there are more results available. The value of
--   <tt>NextToken</tt> is a unique pagination token for each page. Make
--   the call again using the returned token to retrieve the next page.
--   Keep all other arguments unchanged. Each pagination token expires
--   after 24 hours.
--   
--   <a>$sel:domainSummaries:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domainSummaries</a> - A list containing details
--   about each domain in the Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse
newtype AuthenticationDecision
AuthenticationDecision' :: Text -> AuthenticationDecision
[fromAuthenticationDecision] :: AuthenticationDecision -> Text
pattern AuthenticationDecision_ACCEPT :: AuthenticationDecision
pattern AuthenticationDecision_NOT_ENOUGH_SPEECH :: AuthenticationDecision
pattern AuthenticationDecision_REJECT :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_ID_NOT_PROVIDED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_NOT_ENROLLED :: AuthenticationDecision
pattern AuthenticationDecision_SPEAKER_OPTED_OUT :: AuthenticationDecision
newtype DomainStatus
DomainStatus' :: Text -> DomainStatus
[fromDomainStatus] :: DomainStatus -> Text
pattern DomainStatus_ACTIVE :: DomainStatus
pattern DomainStatus_PENDING :: DomainStatus
pattern DomainStatus_SUSPENDED :: DomainStatus
newtype DuplicateRegistrationAction
DuplicateRegistrationAction' :: Text -> DuplicateRegistrationAction
[fromDuplicateRegistrationAction] :: DuplicateRegistrationAction -> Text
pattern DuplicateRegistrationAction_REGISTER_AS_NEW :: DuplicateRegistrationAction
pattern DuplicateRegistrationAction_SKIP :: DuplicateRegistrationAction
newtype ExistingEnrollmentAction
ExistingEnrollmentAction' :: Text -> ExistingEnrollmentAction
[fromExistingEnrollmentAction] :: ExistingEnrollmentAction -> Text
pattern ExistingEnrollmentAction_OVERWRITE :: ExistingEnrollmentAction
pattern ExistingEnrollmentAction_SKIP :: ExistingEnrollmentAction
newtype FraudDetectionAction
FraudDetectionAction' :: Text -> FraudDetectionAction
[fromFraudDetectionAction] :: FraudDetectionAction -> Text
pattern FraudDetectionAction_FAIL :: FraudDetectionAction
pattern FraudDetectionAction_IGNORE :: FraudDetectionAction
newtype FraudDetectionDecision
FraudDetectionDecision' :: Text -> FraudDetectionDecision
[fromFraudDetectionDecision] :: FraudDetectionDecision -> Text
pattern FraudDetectionDecision_HIGH_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_LOW_RISK :: FraudDetectionDecision
pattern FraudDetectionDecision_NOT_ENOUGH_SPEECH :: FraudDetectionDecision
newtype FraudDetectionReason
FraudDetectionReason' :: Text -> FraudDetectionReason
[fromFraudDetectionReason] :: FraudDetectionReason -> Text
pattern FraudDetectionReason_KNOWN_FRAUDSTER :: FraudDetectionReason
newtype FraudsterRegistrationJobStatus
FraudsterRegistrationJobStatus' :: Text -> FraudsterRegistrationJobStatus
[fromFraudsterRegistrationJobStatus] :: FraudsterRegistrationJobStatus -> Text
pattern FraudsterRegistrationJobStatus_COMPLETED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_COMPLETED_WITH_ERRORS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_FAILED :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_IN_PROGRESS :: FraudsterRegistrationJobStatus
pattern FraudsterRegistrationJobStatus_SUBMITTED :: FraudsterRegistrationJobStatus
newtype SpeakerEnrollmentJobStatus
SpeakerEnrollmentJobStatus' :: Text -> SpeakerEnrollmentJobStatus
[fromSpeakerEnrollmentJobStatus] :: SpeakerEnrollmentJobStatus -> Text
pattern SpeakerEnrollmentJobStatus_COMPLETED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_COMPLETED_WITH_ERRORS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_FAILED :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_IN_PROGRESS :: SpeakerEnrollmentJobStatus
pattern SpeakerEnrollmentJobStatus_SUBMITTED :: SpeakerEnrollmentJobStatus
newtype SpeakerStatus
SpeakerStatus' :: Text -> SpeakerStatus
[fromSpeakerStatus] :: SpeakerStatus -> Text
pattern SpeakerStatus_ENROLLED :: SpeakerStatus
pattern SpeakerStatus_EXPIRED :: SpeakerStatus
pattern SpeakerStatus_OPTED_OUT :: SpeakerStatus
pattern SpeakerStatus_PENDING :: SpeakerStatus
newtype StreamingStatus
StreamingStatus' :: Text -> StreamingStatus
[fromStreamingStatus] :: StreamingStatus -> Text
pattern StreamingStatus_ENDED :: StreamingStatus
pattern StreamingStatus_ONGOING :: StreamingStatus
pattern StreamingStatus_PENDING_CONFIGURATION :: StreamingStatus

-- | The configuration used to authenticate a speaker during a session.
--   
--   <i>See:</i> <a>newAuthenticationConfiguration</a> smart constructor.
data AuthenticationConfiguration
AuthenticationConfiguration' :: Natural -> AuthenticationConfiguration

-- | Create a value of <a>AuthenticationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptanceThreshold:AuthenticationConfiguration'</a>,
--   <a>authenticationConfiguration_acceptanceThreshold</a> - The minimum
--   threshold needed to successfully authenticate a speaker.
newAuthenticationConfiguration :: Natural -> AuthenticationConfiguration

-- | The authentication result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newAuthenticationResult</a> smart constructor.
data AuthenticationResult
AuthenticationResult' :: Maybe (Sensitive Text) -> Maybe Natural -> Maybe Text -> Maybe AuthenticationDecision -> Maybe AuthenticationConfiguration -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> AuthenticationResult

-- | Create a value of <a>AuthenticationResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_customerSpeakerId</a> - The client-provided
--   identifier for the speaker whose authentication result is produced.
--   Only present if a <tt>SpeakerId</tt> is provided for the session.
--   
--   <a>$sel:score:AuthenticationResult'</a>,
--   <a>authenticationResult_score</a> - The authentication score for the
--   speaker whose authentication result is produced. This value is only
--   present if the authentication decision is either <tt>ACCEPT</tt> or
--   <tt>REJECT</tt>.
--   
--   <a>$sel:authenticationResultId:AuthenticationResult'</a>,
--   <a>authenticationResult_authenticationResultId</a> - The unique
--   identifier for this authentication result. Because there can be
--   multiple authentications for a given session, this field helps to
--   identify if the returned result is from a previous streaming activity
--   or a new result. Note that in absence of any new streaming activity,
--   <tt>AcceptanceThreshold</tt> changes, or <tt>SpeakerId</tt> changes,
--   Voice ID always returns cached Authentication Result for this API.
--   
--   <a>$sel:decision:AuthenticationResult'</a>,
--   <a>authenticationResult_decision</a> - The authentication decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:AuthenticationResult'</a>,
--   <a>authenticationResult_configuration</a> - The
--   <tt>AuthenticationConfiguration</tt> used to generate this
--   authentication result.
--   
--   <a>$sel:audioAggregationStartedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this authentication
--   result.
--   
--   <a>$sel:generatedSpeakerId:AuthenticationResult'</a>,
--   <a>authenticationResult_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker whose authentication result is produced.
--   
--   <a>$sel:audioAggregationEndedAt:AuthenticationResult'</a>,
--   <a>authenticationResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this authentication
--   result.
newAuthenticationResult :: AuthenticationResult

-- | Contains all the information about a domain.
--   
--   <i>See:</i> <a>newDomain</a> smart constructor.
data Domain
Domain' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> Domain

-- | Create a value of <a>Domain</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:Domain'</a>, <a>domain_domainStatus</a> - The
--   current status of the domain.
--   
--   <a>$sel:arn:Domain'</a>, <a>domain_arn</a> - The Amazon Resource Name
--   (ARN) for the domain.
--   
--   <a>$sel:createdAt:Domain'</a>, <a>domain_createdAt</a> - The timestamp
--   at which the domain is created.
--   
--   <a>$sel:name:Domain'</a>, <a>domain_name</a> - The client-provided
--   name for the domain.
--   
--   <a>$sel:domainId:Domain'</a>, <a>domain_domainId</a> - The
--   service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:Domain'</a>, <a>domain_updatedAt</a> - The timestamp
--   showing the domain's last update.
--   
--   <a>$sel:description:Domain'</a>, <a>domain_description</a> - The
--   client-provided description of the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:Domain'</a>,
--   <a>domain_serverSideEncryptionConfiguration</a> - The server-side
--   encryption configuration containing the KMS Key Identifier you want
--   Voice ID to use to encrypt your data.
newDomain :: Domain

-- | Contains a summary of information about a domain.
--   
--   <i>See:</i> <a>newDomainSummary</a> smart constructor.
data DomainSummary
DomainSummary' :: Maybe DomainStatus -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe ServerSideEncryptionConfiguration -> DomainSummary

-- | Create a value of <a>DomainSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainStatus:DomainSummary'</a>,
--   <a>domainSummary_domainStatus</a> - The current status of the domain.
--   
--   <a>$sel:arn:DomainSummary'</a>, <a>domainSummary_arn</a> - The Amazon
--   Resource Name (ARN) for the domain.
--   
--   <a>$sel:createdAt:DomainSummary'</a>, <a>domainSummary_createdAt</a> -
--   The timestamp showing when the domain is created.
--   
--   <a>$sel:name:DomainSummary'</a>, <a>domainSummary_name</a> - The
--   client-provided name for the domain.
--   
--   <a>$sel:domainId:DomainSummary'</a>, <a>domainSummary_domainId</a> -
--   The service-generated identifier for the domain.
--   
--   <a>$sel:updatedAt:DomainSummary'</a>, <a>domainSummary_updatedAt</a> -
--   The timestamp showing the domain's last update.
--   
--   <a>$sel:description:DomainSummary'</a>,
--   <a>domainSummary_description</a> - The client-provided description of
--   the domain.
--   
--   <a>$sel:serverSideEncryptionConfiguration:DomainSummary'</a>,
--   <a>domainSummary_serverSideEncryptionConfiguration</a> - The
--   server-side encryption configuration containing the KMS Key Identifier
--   you want Voice ID to use to encrypt your data..
newDomainSummary :: DomainSummary

-- | Contains configurations defining enrollment behavior for the batch
--   job.
--   
--   <i>See:</i> <a>newEnrollmentConfig</a> smart constructor.
data EnrollmentConfig
EnrollmentConfig' :: Maybe EnrollmentJobFraudDetectionConfig -> Maybe ExistingEnrollmentAction -> EnrollmentConfig

-- | Create a value of <a>EnrollmentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fraudDetectionConfig:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_fraudDetectionConfig</a> - The fraud detection
--   configuration to use for the speaker enrollment job.
--   
--   <a>$sel:existingEnrollmentAction:EnrollmentConfig'</a>,
--   <a>enrollmentConfig_existingEnrollmentAction</a> - The action to take
--   when the specified speaker is already enrolled in the specified
--   domain. The default value is <tt>SKIP</tt>, which skips the enrollment
--   for the existing speaker. Setting the value to <tt>OVERWRITE</tt>
--   replaces the existing voice prints and enrollment audio stored for
--   that speaker with new data generated from the latest audio.
newEnrollmentConfig :: EnrollmentConfig

-- | The configuration defining the action to take when a speaker is
--   flagged by the fraud detection system during a batch speaker
--   enrollment job, and the risk threshold to use for identification.
--   
--   <i>See:</i> <a>newEnrollmentJobFraudDetectionConfig</a> smart
--   constructor.
data EnrollmentJobFraudDetectionConfig
EnrollmentJobFraudDetectionConfig' :: Maybe Natural -> Maybe FraudDetectionAction -> EnrollmentJobFraudDetectionConfig

-- | Create a value of <a>EnrollmentJobFraudDetectionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_riskThreshold</a> - Threshold
--   value for determining whether the speaker is a high risk to be
--   fraudulent. If the detected risk score calculated by Voice ID is
--   greater than or equal to the threshold, the speaker is considered a
--   fraudster.
--   
--   <a>$sel:fraudDetectionAction:EnrollmentJobFraudDetectionConfig'</a>,
--   <a>enrollmentJobFraudDetectionConfig_fraudDetectionAction</a> - The
--   action to take when the given speaker is flagged by the fraud
--   detection system. The default value is <tt>FAIL</tt>, which fails the
--   speaker enrollment. Changing this value to <tt>IGNORE</tt> results in
--   the speaker being enrolled even if they are flagged by the fraud
--   detection system.
newEnrollmentJobFraudDetectionConfig :: EnrollmentJobFraudDetectionConfig

-- | Contains error details for a failed batch job.
--   
--   <i>See:</i> <a>newFailureDetails</a> smart constructor.
data FailureDetails
FailureDetails' :: Maybe Text -> Maybe Int -> FailureDetails

-- | Create a value of <a>FailureDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:FailureDetails'</a>, <a>failureDetails_message</a> - A
--   description of the error that caused the batch job failure.
--   
--   <a>$sel:statusCode:FailureDetails'</a>,
--   <a>failureDetails_statusCode</a> - An HTTP status code representing
--   the nature of the error.
newFailureDetails :: FailureDetails

-- | The configuration used for performing fraud detection over a speaker
--   during a session.
--   
--   <i>See:</i> <a>newFraudDetectionConfiguration</a> smart constructor.
data FraudDetectionConfiguration
FraudDetectionConfiguration' :: Natural -> FraudDetectionConfiguration

-- | Create a value of <a>FraudDetectionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskThreshold:FraudDetectionConfiguration'</a>,
--   <a>fraudDetectionConfiguration_riskThreshold</a> - Threshold value for
--   determining whether the speaker is a fraudster. If the detected risk
--   score calculated by Voice ID is higher than the threshold, the speaker
--   is considered a fraudster.
newFraudDetectionConfiguration :: Natural -> FraudDetectionConfiguration

-- | The fraud detection result produced by Voice ID, processed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudDetectionResult</a> smart constructor.
data FraudDetectionResult
FraudDetectionResult' :: Maybe [FraudDetectionReason] -> Maybe FraudRiskDetails -> Maybe Text -> Maybe FraudDetectionDecision -> Maybe FraudDetectionConfiguration -> Maybe POSIX -> Maybe POSIX -> FraudDetectionResult

-- | Create a value of <a>FraudDetectionResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reasons:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_reasons</a> - The reason speaker was flagged
--   by the fraud detection system. This is only be populated if fraud
--   detection Decision is <tt>HIGH_RISK</tt>, and only has one possible
--   value: <tt>KNOWN_FRAUDSTER</tt>.
--   
--   <a>$sel:riskDetails:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_riskDetails</a> - Details about each risk
--   analyzed for this speaker.
--   
--   <a>$sel:fraudDetectionResultId:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_fraudDetectionResultId</a> - The unique
--   identifier for this fraud detection result. Given there can be
--   multiple fraud detections for a given session, this field helps in
--   identifying if the returned result is from previous streaming activity
--   or a new result. Note that in the absence of any new streaming
--   activity or risk threshold changes, Voice ID always returns cached
--   Fraud Detection result for this API.
--   
--   <a>$sel:decision:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_decision</a> - The fraud detection decision
--   produced by Voice ID, processed against the current session state and
--   streamed audio of the speaker.
--   
--   <a>$sel:configuration:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_configuration</a> - The
--   <tt>FraudDetectionConfiguration</tt> used to generate this fraud
--   detection result.
--   
--   <a>$sel:audioAggregationStartedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationStartedAt</a> - A timestamp
--   indicating when audio aggregation started for this fraud detection
--   result.
--   
--   <a>$sel:audioAggregationEndedAt:FraudDetectionResult'</a>,
--   <a>fraudDetectionResult_audioAggregationEndedAt</a> - A timestamp
--   indicating when audio aggregation ended for this fraud detection
--   result.
newFraudDetectionResult :: FraudDetectionResult

-- | Details regarding various fraud risk analyses performed against the
--   current session state and streamed audio of the speaker.
--   
--   <i>See:</i> <a>newFraudRiskDetails</a> smart constructor.
data FraudRiskDetails
FraudRiskDetails' :: KnownFraudsterRisk -> FraudRiskDetails

-- | Create a value of <a>FraudRiskDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:knownFraudsterRisk:FraudRiskDetails'</a>,
--   <a>fraudRiskDetails_knownFraudsterRisk</a> - The details resulting
--   from 'Known Fraudster Risk' analysis of the speaker.
newFraudRiskDetails :: KnownFraudsterRisk -> FraudRiskDetails

-- | Contains all the information about a fraudster.
--   
--   <i>See:</i> <a>newFraudster</a> smart constructor.
data Fraudster
Fraudster' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Fraudster

-- | Create a value of <a>Fraudster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Fraudster'</a>, <a>fraudster_createdAt</a> - The
--   timestamp when Voice ID identified the fraudster.
--   
--   <a>$sel:generatedFraudsterId:Fraudster'</a>,
--   <a>fraudster_generatedFraudsterId</a> - The service-generated
--   identifier for the fraudster.
--   
--   <a>$sel:domainId:Fraudster'</a>, <a>fraudster_domainId</a> - The
--   identifier for the domain containing the fraudster.
newFraudster :: Fraudster

-- | Contains all the information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJob</a> smart constructor.
data FraudsterRegistrationJob
FraudsterRegistrationJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> Maybe RegistrationConfig -> FraudsterRegistrationJob

-- | Create a value of <a>FraudsterRegistrationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_failureDetails</a> - Contains details that
--   are populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_createdAt</a> - A timestamp showing the
--   creation time of the fraudster registration job.
--   
--   <a>$sel:jobName:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobName</a> - The client-provied name for
--   the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_endedAt</a> - A timestamp showing when the
--   fraudster registration job ended.
--   
--   <a>$sel:inputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_inputDataConfig</a> - The input data
--   config containing an S3 URI for the input manifest file that contains
--   the list of fraudster registration job requests.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobProgress</a> - Shows the completed
--   percentage of registration requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_outputDataConfig</a> - The output data
--   config containing the S3 location where you want Voice ID to write
--   your job output file; you must also include a KMS Key ID in order to
--   encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_dataAccessRoleArn</a> - The IAM role
--   Amazon Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_domainId</a> - The identifier of the
--   domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_jobStatus</a> - The current status of the
--   fraudster registration job.
--   
--   <a>$sel:registrationConfig:FraudsterRegistrationJob'</a>,
--   <a>fraudsterRegistrationJob_registrationConfig</a> - The registration
--   config containing details such as the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster.
newFraudsterRegistrationJob :: FraudsterRegistrationJob

-- | Contains a summary of information about a fraudster registration job.
--   
--   <i>See:</i> <a>newFraudsterRegistrationJobSummary</a> smart
--   constructor.
data FraudsterRegistrationJobSummary
FraudsterRegistrationJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe FraudsterRegistrationJobStatus -> FraudsterRegistrationJobSummary

-- | Create a value of <a>FraudsterRegistrationJobSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_failureDetails</a> - Contains
--   details that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobId</a> - The service-generated
--   identifier for the fraudster registration job.
--   
--   <a>$sel:createdAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_createdAt</a> - A timestamp showing
--   when the fraudster registration job is created.
--   
--   <a>$sel:jobName:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobName</a> - The client-provied
--   name for the fraudster registration job.
--   
--   <a>$sel:endedAt:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_endedAt</a> - A timestamp showing
--   when the fraudster registration job ended.
--   
--   <a>$sel:jobProgress:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobProgress</a> - Shows the
--   completed percentage of registration requests listed in the input
--   file.
--   
--   <a>$sel:domainId:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_domainId</a> - The identifier of
--   the domain containing the fraudster registration job.
--   
--   <a>$sel:jobStatus:FraudsterRegistrationJobSummary'</a>,
--   <a>fraudsterRegistrationJobSummary_jobStatus</a> - The current status
--   of the fraudster registration job.
newFraudsterRegistrationJobSummary :: FraudsterRegistrationJobSummary

-- | The configuration containing input file information for a batch job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> InputDataConfig

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   S3 location for the input manifest file that contains the list of
--   individual enrollment or registration job requests.
newInputDataConfig :: Text -> InputDataConfig

-- | Indicates the completion progress for a batch job.
--   
--   <i>See:</i> <a>newJobProgress</a> smart constructor.
data JobProgress
JobProgress' :: Maybe Natural -> JobProgress

-- | Create a value of <a>JobProgress</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentComplete:JobProgress'</a>,
--   <a>jobProgress_percentComplete</a> - Shows the completed percentage of
--   enrollment or registration requests listed in the input file.
newJobProgress :: JobProgress

-- | Contains details produced as a result of performing known fraudster
--   risk analysis on a speaker.
--   
--   <i>See:</i> <a>newKnownFraudsterRisk</a> smart constructor.
data KnownFraudsterRisk
KnownFraudsterRisk' :: Maybe Text -> Natural -> KnownFraudsterRisk

-- | Create a value of <a>KnownFraudsterRisk</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:generatedFraudsterId:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_generatedFraudsterId</a> - The identifier of the
--   fraudster that is the closest match to the speaker. If there are no
--   fraudsters registered in a given domain, or if there are no fraudsters
--   with a non-zero RiskScore, this value is <tt>null</tt>.
--   
--   <a>$sel:riskScore:KnownFraudsterRisk'</a>,
--   <a>knownFraudsterRisk_riskScore</a> - The score indicating the
--   likelihood the speaker is a known fraudster.
newKnownFraudsterRisk :: Natural -> KnownFraudsterRisk

-- | The configuration containing output file information for a batch job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Maybe Text -> Text -> OutputDataConfig

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:OutputDataConfig'</a>,
--   <a>outputDataConfig_kmsKeyId</a> - the identifier of the KMS key you
--   want Voice ID to use to encrypt the output file of the fraudster
--   registration job.
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The S3 path of the folder to which Voice ID writes the job output
--   file, which has a <tt>*.out</tt> extension. For example, if the input
--   file name is <tt>input-file.json</tt> and the output folder path is
--   <tt>s3://output-bucket/output-folder</tt>, the full output file path
--   is
--   <tt>s3://output-bucket/output-folder/job-Id/input-file.json.out</tt>.
newOutputDataConfig :: Text -> OutputDataConfig

-- | The configuration definining the action to take when a duplicate
--   fraudster is detected, and the similarity threshold to use for
--   detecting a duplicate fraudster during a batch fraudster registration
--   job.
--   
--   <i>See:</i> <a>newRegistrationConfig</a> smart constructor.
data RegistrationConfig
RegistrationConfig' :: Maybe DuplicateRegistrationAction -> Maybe Natural -> RegistrationConfig

-- | Create a value of <a>RegistrationConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:duplicateRegistrationAction:RegistrationConfig'</a>,
--   <a>registrationConfig_duplicateRegistrationAction</a> - The action to
--   take when a fraudster is identified as a duplicate. The default action
--   is <tt>SKIP</tt>, which skips registering the duplicate fraudster.
--   Setting the value to <tt>REGISTER_AS_NEW</tt> always registers a new
--   fraudster into the specified domain.
--   
--   <a>$sel:fraudsterSimilarityThreshold:RegistrationConfig'</a>,
--   <a>registrationConfig_fraudsterSimilarityThreshold</a> - The minimum
--   similarity score between the new and old fraudsters in order to
--   consider the new fraudster a duplicate.
newRegistrationConfig :: RegistrationConfig

-- | The configuration containing information about the customer-managed
--   KMS Key used for encrypting customer data.
--   
--   <i>See:</i> <a>newServerSideEncryptionConfiguration</a> smart
--   constructor.
data ServerSideEncryptionConfiguration
ServerSideEncryptionConfiguration' :: Text -> ServerSideEncryptionConfiguration

-- | Create a value of <a>ServerSideEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ServerSideEncryptionConfiguration'</a>,
--   <a>serverSideEncryptionConfiguration_kmsKeyId</a> - The identifier of
--   the KMS Key you want Voice ID to use to encrypt your data.
newServerSideEncryptionConfiguration :: Text -> ServerSideEncryptionConfiguration

-- | Contains all the information about a speaker.
--   
--   <i>See:</i> <a>newSpeaker</a> smart constructor.
data Speaker
Speaker' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Speaker

-- | Create a value of <a>Speaker</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Speaker'</a>, <a>speaker_status</a> - The current
--   status of the speaker.
--   
--   <a>$sel:customerSpeakerId:Speaker'</a>,
--   <a>speaker_customerSpeakerId</a> - The client-provided identifier for
--   the speaker.
--   
--   <a>$sel:createdAt:Speaker'</a>, <a>speaker_createdAt</a> - A timestamp
--   showing when the speaker is created.
--   
--   <a>$sel:domainId:Speaker'</a>, <a>speaker_domainId</a> - The
--   identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:Speaker'</a>, <a>speaker_updatedAt</a> - A timestamp
--   showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:Speaker'</a>,
--   <a>speaker_generatedSpeakerId</a> - The service-generated identifier
--   for the speaker.
newSpeaker :: Speaker

-- | Contains all the information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJob</a> smart constructor.
data SpeakerEnrollmentJob
SpeakerEnrollmentJob' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe EnrollmentConfig -> Maybe InputDataConfig -> Maybe JobProgress -> Maybe OutputDataConfig -> Maybe Text -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJob

-- | Create a value of <a>SpeakerEnrollmentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_failureDetails</a> - Contains details that are
--   populated when an entire batch job fails. In cases of individual
--   registration job failures, the batch job as a whole doesn't fail; it
--   is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobId</a> - The service-generated identifier
--   for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_createdAt</a> - A timestamp showing the
--   creation of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobName</a> - The client-provided name for the
--   speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_endedAt</a> - A timestamp showing when the
--   speaker enrollment job ended.
--   
--   <a>$sel:enrollmentConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_enrollmentConfig</a> - The configuration that
--   defines the action to take when the speaker is already enrolled in
--   Voice ID, and the <tt>FraudDetectionConfig</tt> to use.
--   
--   <a>$sel:inputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_inputDataConfig</a> - The input data config
--   containing an S3 URI for the input manifest file that contains the
--   list of speaker enrollment job requests.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobProgress</a> - Provides details on job
--   progress. This field shows the completed percentage of registration
--   requests listed in the input file.
--   
--   <a>$sel:outputDataConfig:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_outputDataConfig</a> - The output data config
--   containing the S3 location where Voice ID writes the job output file;
--   you must also include a KMS Key ID to encrypt the file.
--   
--   <a>$sel:dataAccessRoleArn:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_dataAccessRoleArn</a> - The IAM role Amazon
--   Resource Name (ARN) that grants Voice ID permissions to access
--   customer's buckets to read the input manifest file and write the job
--   output file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_domainId</a> - The identifier of the domain
--   that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJob'</a>,
--   <a>speakerEnrollmentJob_jobStatus</a> - The current status of the
--   speaker enrollment job.
newSpeakerEnrollmentJob :: SpeakerEnrollmentJob

-- | Contains a summary of information about a speaker enrollment job.
--   
--   <i>See:</i> <a>newSpeakerEnrollmentJobSummary</a> smart constructor.
data SpeakerEnrollmentJobSummary
SpeakerEnrollmentJobSummary' :: Maybe FailureDetails -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe JobProgress -> Maybe Text -> Maybe SpeakerEnrollmentJobStatus -> SpeakerEnrollmentJobSummary

-- | Create a value of <a>SpeakerEnrollmentJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureDetails:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_failureDetails</a> - Contains details
--   that are populated when an entire batch job fails. In cases of
--   individual registration job failures, the batch job as a whole doesn't
--   fail; it is completed with a <tt>JobStatus</tt> of
--   <tt>COMPLETED_WITH_ERRORS</tt>. You can use the job output file to
--   identify the individual registration requests that failed.
--   
--   <a>$sel:jobId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobId</a> - The service-generated
--   identifier for the speaker enrollment job.
--   
--   <a>$sel:createdAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_createdAt</a> - A timestamp showing the
--   creation time of the speaker enrollment job.
--   
--   <a>$sel:jobName:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobName</a> - The client-provided name
--   for the speaker enrollment job.
--   
--   <a>$sel:endedAt:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_endedAt</a> - A timestamp showing when
--   the speaker enrollment job ended.
--   
--   <a>$sel:jobProgress:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobProgress</a> - Provides details
--   regarding job progress. This field shows the completed percentage of
--   enrollment requests listed in the input file.
--   
--   <a>$sel:domainId:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_domainId</a> - The identifier of the
--   domain that contains the speaker enrollment job.
--   
--   <a>$sel:jobStatus:SpeakerEnrollmentJobSummary'</a>,
--   <a>speakerEnrollmentJobSummary_jobStatus</a> - The current status of
--   the speaker enrollment job.
newSpeakerEnrollmentJobSummary :: SpeakerEnrollmentJobSummary

-- | Contains a summary of information about a speaker.
--   
--   <i>See:</i> <a>newSpeakerSummary</a> smart constructor.
data SpeakerSummary
SpeakerSummary' :: Maybe SpeakerStatus -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> SpeakerSummary

-- | Create a value of <a>SpeakerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SpeakerSummary'</a>, <a>speakerSummary_status</a> - The
--   current status of the speaker.
--   
--   <a>$sel:customerSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_customerSpeakerId</a> - The client-provided
--   identifier for the speaker.
--   
--   <a>$sel:createdAt:SpeakerSummary'</a>, <a>speakerSummary_createdAt</a>
--   - A timestamp showing the speaker's creation time.
--   
--   <a>$sel:domainId:SpeakerSummary'</a>, <a>speakerSummary_domainId</a> -
--   The identifier of the domain that contains the speaker.
--   
--   <a>$sel:updatedAt:SpeakerSummary'</a>, <a>speakerSummary_updatedAt</a>
--   - A timestamp showing the speaker's last update.
--   
--   <a>$sel:generatedSpeakerId:SpeakerSummary'</a>,
--   <a>speakerSummary_generatedSpeakerId</a> - The service-generated
--   identifier for the speaker.
newSpeakerSummary :: SpeakerSummary

-- | A tag that can be assigned to a Voice ID resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The first part of a key:value
--   pair that forms a tag associated with a given resource. For example,
--   in the tag ‘Department’:’Sales’, the key is 'Department'.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The second part of a
--   key:value pair that forms a tag associated with a given resource. For
--   example, in the tag ‘Department’:’Sales’, the value is 'Sales'.
newTag :: Text -> Text -> Tag
