-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-emr-containersZSamazonka-emr-containers
@version 2.0


module Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration

-- | A configuration for CloudWatch monitoring. You can configure your jobs
--   to send log information to CloudWatch Logs.
--   
--   <i>See:</i> <a>newCloudWatchMonitoringConfiguration</a> smart
--   constructor.
data CloudWatchMonitoringConfiguration
CloudWatchMonitoringConfiguration' :: Maybe Text -> Text -> CloudWatchMonitoringConfiguration

-- | The specified name prefix for log streams.
[$sel:logStreamNamePrefix:CloudWatchMonitoringConfiguration'] :: CloudWatchMonitoringConfiguration -> Maybe Text

-- | The name of the log group for log publishing.
[$sel:logGroupName:CloudWatchMonitoringConfiguration'] :: CloudWatchMonitoringConfiguration -> Text

-- | Create a value of <a>CloudWatchMonitoringConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamNamePrefix:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logStreamNamePrefix</a> - The
--   specified name prefix for log streams.
--   
--   <a>$sel:logGroupName:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logGroupName</a> - The name of
--   the log group for log publishing.
newCloudWatchMonitoringConfiguration :: Text -> CloudWatchMonitoringConfiguration

-- | The specified name prefix for log streams.
cloudWatchMonitoringConfiguration_logStreamNamePrefix :: Lens' CloudWatchMonitoringConfiguration (Maybe Text)

-- | The name of the log group for log publishing.
cloudWatchMonitoringConfiguration_logGroupName :: Lens' CloudWatchMonitoringConfiguration Text
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance GHC.Show.Show Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance GHC.Read.Read Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.CloudWatchMonitoringConfiguration.CloudWatchMonitoringConfiguration


module Network.AWS.EMRContainers.Types.Configuration

-- | A configuration specification to be used when provisioning virtual
--   clusters, which can include configurations for applications and
--   software bundled with Amazon EMR on EKS. A configuration consists of a
--   classification, properties, and optional nested configurations. A
--   classification refers to an application-specific configuration file.
--   Properties are the settings you want to change in that file.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Maybe [Configuration] -> Maybe (Sensitive (HashMap Text Text)) -> Text -> Configuration

-- | A list of additional configurations to apply within a configuration
--   object.
[$sel:configurations:Configuration'] :: Configuration -> Maybe [Configuration]

-- | A set of properties specified within a configuration classification.
[$sel:properties:Configuration'] :: Configuration -> Maybe (Sensitive (HashMap Text Text))

-- | The classification within a configuration.
[$sel:classification:Configuration'] :: Configuration -> Text

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:Configuration'</a>,
--   <a>configuration_configurations</a> - A list of additional
--   configurations to apply within a configuration object.
--   
--   <a>$sel:properties:Configuration'</a>, <a>configuration_properties</a>
--   - A set of properties specified within a configuration classification.
--   
--   <a>$sel:classification:Configuration'</a>,
--   <a>configuration_classification</a> - The classification within a
--   configuration.
newConfiguration :: Text -> Configuration

-- | A list of additional configurations to apply within a configuration
--   object.
configuration_configurations :: Lens' Configuration (Maybe [Configuration])

-- | A set of properties specified within a configuration classification.
configuration_properties :: Lens' Configuration (Maybe (HashMap Text Text))

-- | The classification within a configuration.
configuration_classification :: Lens' Configuration Text
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.Configuration.Configuration
instance GHC.Show.Show Network.AWS.EMRContainers.Types.Configuration.Configuration
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.Configuration.Configuration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.Configuration.Configuration
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.Configuration.Configuration
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.Configuration.Configuration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.Configuration.Configuration


module Network.AWS.EMRContainers.Types.ContainerProviderType
newtype ContainerProviderType
ContainerProviderType' :: Text -> ContainerProviderType
[fromContainerProviderType] :: ContainerProviderType -> Text
pattern ContainerProviderType_EKS :: ContainerProviderType
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance GHC.Read.Read Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType
instance GHC.Show.Show Network.AWS.EMRContainers.Types.ContainerProviderType.ContainerProviderType


module Network.AWS.EMRContainers.Types.EksInfo

-- | The information about the EKS cluster.
--   
--   <i>See:</i> <a>newEksInfo</a> smart constructor.
data EksInfo
EksInfo' :: Maybe Text -> EksInfo

-- | The namespaces of the EKS cluster.
[$sel:namespace:EksInfo'] :: EksInfo -> Maybe Text

-- | Create a value of <a>EksInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:EksInfo'</a>, <a>eksInfo_namespace</a> - The
--   namespaces of the EKS cluster.
newEksInfo :: EksInfo

-- | The namespaces of the EKS cluster.
eksInfo_namespace :: Lens' EksInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance GHC.Show.Show Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance GHC.Read.Read Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.EksInfo.EksInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.EksInfo.EksInfo


module Network.AWS.EMRContainers.Types.ContainerInfo

-- | The information about the container used for a job run or a managed
--   endpoint.
--   
--   <i>See:</i> <a>newContainerInfo</a> smart constructor.
data ContainerInfo
ContainerInfo' :: Maybe EksInfo -> ContainerInfo

-- | The information about the EKS cluster.
[$sel:eksInfo:ContainerInfo'] :: ContainerInfo -> Maybe EksInfo

-- | Create a value of <a>ContainerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eksInfo:ContainerInfo'</a>, <a>containerInfo_eksInfo</a> - The
--   information about the EKS cluster.
newContainerInfo :: ContainerInfo

-- | The information about the EKS cluster.
containerInfo_eksInfo :: Lens' ContainerInfo (Maybe EksInfo)
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance GHC.Show.Show Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance GHC.Read.Read Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.ContainerInfo.ContainerInfo


module Network.AWS.EMRContainers.Types.ContainerProvider

-- | The information about the container provider.
--   
--   <i>See:</i> <a>newContainerProvider</a> smart constructor.
data ContainerProvider
ContainerProvider' :: Maybe ContainerInfo -> ContainerProviderType -> Text -> ContainerProvider

-- | The information about the container cluster.
[$sel:info:ContainerProvider'] :: ContainerProvider -> Maybe ContainerInfo

-- | The type of the container provider. EKS is the only supported type as
--   of now.
[$sel:type':ContainerProvider'] :: ContainerProvider -> ContainerProviderType

-- | The ID of the container cluster.
[$sel:id:ContainerProvider'] :: ContainerProvider -> Text

-- | Create a value of <a>ContainerProvider</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:info:ContainerProvider'</a>, <a>containerProvider_info</a> -
--   The information about the container cluster.
--   
--   <a>$sel:type':ContainerProvider'</a>, <a>containerProvider_type</a> -
--   The type of the container provider. EKS is the only supported type as
--   of now.
--   
--   <a>$sel:id:ContainerProvider'</a>, <a>containerProvider_id</a> - The
--   ID of the container cluster.
newContainerProvider :: ContainerProviderType -> Text -> ContainerProvider

-- | The information about the container cluster.
containerProvider_info :: Lens' ContainerProvider (Maybe ContainerInfo)

-- | The type of the container provider. EKS is the only supported type as
--   of now.
containerProvider_type :: Lens' ContainerProvider ContainerProviderType

-- | The ID of the container cluster.
containerProvider_id :: Lens' ContainerProvider Text
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance GHC.Show.Show Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance GHC.Read.Read Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.ContainerProvider.ContainerProvider


module Network.AWS.EMRContainers.Types.EndpointState
newtype EndpointState
EndpointState' :: Text -> EndpointState
[fromEndpointState] :: EndpointState -> Text
pattern EndpointState_ACTIVE :: EndpointState
pattern EndpointState_CREATING :: EndpointState
pattern EndpointState_TERMINATED :: EndpointState
pattern EndpointState_TERMINATED_WITH_ERRORS :: EndpointState
pattern EndpointState_TERMINATING :: EndpointState
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance GHC.Read.Read Network.AWS.EMRContainers.Types.EndpointState.EndpointState
instance GHC.Show.Show Network.AWS.EMRContainers.Types.EndpointState.EndpointState


module Network.AWS.EMRContainers.Types.FailureReason
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_CLUSTER_UNAVAILABLE :: FailureReason
pattern FailureReason_INTERNAL_ERROR :: FailureReason
pattern FailureReason_USER_ERROR :: FailureReason
pattern FailureReason_VALIDATION_ERROR :: FailureReason
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance GHC.Read.Read Network.AWS.EMRContainers.Types.FailureReason.FailureReason
instance GHC.Show.Show Network.AWS.EMRContainers.Types.FailureReason.FailureReason


module Network.AWS.EMRContainers.Types.JobRunState
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_CANCELLED :: JobRunState
pattern JobRunState_CANCEL_PENDING :: JobRunState
pattern JobRunState_COMPLETED :: JobRunState
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_PENDING :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_SUBMITTED :: JobRunState
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance GHC.Read.Read Network.AWS.EMRContainers.Types.JobRunState.JobRunState
instance GHC.Show.Show Network.AWS.EMRContainers.Types.JobRunState.JobRunState


module Network.AWS.EMRContainers.Types.PersistentAppUI
newtype PersistentAppUI
PersistentAppUI' :: Text -> PersistentAppUI
[fromPersistentAppUI] :: PersistentAppUI -> Text
pattern PersistentAppUI_DISABLED :: PersistentAppUI
pattern PersistentAppUI_ENABLED :: PersistentAppUI
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance GHC.Read.Read Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI
instance GHC.Show.Show Network.AWS.EMRContainers.Types.PersistentAppUI.PersistentAppUI


module Network.AWS.EMRContainers.Types.S3MonitoringConfiguration

-- | Amazon S3 configuration for monitoring log publishing. You can
--   configure your jobs to send log information to Amazon S3.
--   
--   <i>See:</i> <a>newS3MonitoringConfiguration</a> smart constructor.
data S3MonitoringConfiguration
S3MonitoringConfiguration' :: Text -> S3MonitoringConfiguration

-- | Amazon S3 destination URI for log publishing.
[$sel:logUri:S3MonitoringConfiguration'] :: S3MonitoringConfiguration -> Text

-- | Create a value of <a>S3MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUri:S3MonitoringConfiguration'</a>,
--   <a>s3MonitoringConfiguration_logUri</a> - Amazon S3 destination URI
--   for log publishing.
newS3MonitoringConfiguration :: Text -> S3MonitoringConfiguration

-- | Amazon S3 destination URI for log publishing.
s3MonitoringConfiguration_logUri :: Lens' S3MonitoringConfiguration Text
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance GHC.Show.Show Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance GHC.Read.Read Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.S3MonitoringConfiguration.S3MonitoringConfiguration


module Network.AWS.EMRContainers.Types.MonitoringConfiguration

-- | Configuration setting for monitoring.
--   
--   <i>See:</i> <a>newMonitoringConfiguration</a> smart constructor.
data MonitoringConfiguration
MonitoringConfiguration' :: Maybe PersistentAppUI -> Maybe S3MonitoringConfiguration -> Maybe CloudWatchMonitoringConfiguration -> MonitoringConfiguration

-- | Monitoring configurations for the persistent application UI.
[$sel:persistentAppUI:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe PersistentAppUI

-- | Amazon S3 configuration for monitoring log publishing.
[$sel:s3MonitoringConfiguration:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe S3MonitoringConfiguration

-- | Monitoring configurations for CloudWatch.
[$sel:cloudWatchMonitoringConfiguration:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe CloudWatchMonitoringConfiguration

-- | Create a value of <a>MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persistentAppUI:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_persistentAppUI</a> - Monitoring
--   configurations for the persistent application UI.
--   
--   <a>$sel:s3MonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_s3MonitoringConfiguration</a> - Amazon S3
--   configuration for monitoring log publishing.
--   
--   
--   <a>$sel:cloudWatchMonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_cloudWatchMonitoringConfiguration</a> -
--   Monitoring configurations for CloudWatch.
newMonitoringConfiguration :: MonitoringConfiguration

-- | Monitoring configurations for the persistent application UI.
monitoringConfiguration_persistentAppUI :: Lens' MonitoringConfiguration (Maybe PersistentAppUI)

-- | Amazon S3 configuration for monitoring log publishing.
monitoringConfiguration_s3MonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe S3MonitoringConfiguration)

-- | Monitoring configurations for CloudWatch.
monitoringConfiguration_cloudWatchMonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe CloudWatchMonitoringConfiguration)
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance GHC.Show.Show Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance GHC.Read.Read Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.MonitoringConfiguration.MonitoringConfiguration


module Network.AWS.EMRContainers.Types.ConfigurationOverrides

-- | A configuration specification to be used to override existing
--   configurations.
--   
--   <i>See:</i> <a>newConfigurationOverrides</a> smart constructor.
data ConfigurationOverrides
ConfigurationOverrides' :: Maybe MonitoringConfiguration -> Maybe [Configuration] -> ConfigurationOverrides

-- | The configurations for monitoring.
[$sel:monitoringConfiguration:ConfigurationOverrides'] :: ConfigurationOverrides -> Maybe MonitoringConfiguration

-- | The configurations for the application running by the job run.
[$sel:applicationConfiguration:ConfigurationOverrides'] :: ConfigurationOverrides -> Maybe [Configuration]

-- | Create a value of <a>ConfigurationOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoringConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_monitoringConfiguration</a> - The
--   configurations for monitoring.
--   
--   <a>$sel:applicationConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_applicationConfiguration</a> - The
--   configurations for the application running by the job run.
newConfigurationOverrides :: ConfigurationOverrides

-- | The configurations for monitoring.
configurationOverrides_monitoringConfiguration :: Lens' ConfigurationOverrides (Maybe MonitoringConfiguration)

-- | The configurations for the application running by the job run.
configurationOverrides_applicationConfiguration :: Lens' ConfigurationOverrides (Maybe [Configuration])
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance GHC.Show.Show Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.ConfigurationOverrides.ConfigurationOverrides


module Network.AWS.EMRContainers.Types.Endpoint

-- | This entity represents the endpoint that is managed by Amazon EMR on
--   EKS.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe FailureReason -> Maybe EndpointState -> Maybe Text -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigurationOverrides -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Endpoint

-- | The reasons why the endpoint has failed.
[$sel:failureReason:Endpoint'] :: Endpoint -> Maybe FailureReason

-- | The state of the endpoint.
[$sel:state:Endpoint'] :: Endpoint -> Maybe EndpointState

-- | The ARN of the endpoint.
[$sel:arn:Endpoint'] :: Endpoint -> Maybe Text

-- | The date and time when the endpoint was created.
[$sel:createdAt:Endpoint'] :: Endpoint -> Maybe POSIX

-- | The subnet IDs of the endpoint.
[$sel:subnetIds:Endpoint'] :: Endpoint -> Maybe [Text]

-- | Additional details of the endpoint state.
[$sel:stateDetails:Endpoint'] :: Endpoint -> Maybe Text

-- | The certificate ARN of the endpoint.
[$sel:certificateArn:Endpoint'] :: Endpoint -> Maybe Text

-- | The execution role ARN of the endpoint.
[$sel:executionRoleArn:Endpoint'] :: Endpoint -> Maybe Text

-- | The security group configuration of the endpoint.
[$sel:securityGroup:Endpoint'] :: Endpoint -> Maybe Text

-- | The configuration settings that are used to override existing
--   configurations for endpoints.
[$sel:configurationOverrides:Endpoint'] :: Endpoint -> Maybe ConfigurationOverrides

-- | The name of the endpoint.
[$sel:name:Endpoint'] :: Endpoint -> Maybe Text

-- | The EMR release version to be used for the endpoint.
[$sel:releaseLabel:Endpoint'] :: Endpoint -> Maybe Text

-- | The ID of the endpoint.
[$sel:id:Endpoint'] :: Endpoint -> Maybe Text

-- | The type of the endpoint.
[$sel:type':Endpoint'] :: Endpoint -> Maybe Text

-- | The server URL of the endpoint.
[$sel:serverUrl:Endpoint'] :: Endpoint -> Maybe Text

-- | The ID of the endpoint's virtual cluster.
[$sel:virtualClusterId:Endpoint'] :: Endpoint -> Maybe Text

-- | The tags of the endpoint.
[$sel:tags:Endpoint'] :: Endpoint -> Maybe (HashMap Text Text)

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Endpoint'</a>, <a>endpoint_failureReason</a> -
--   The reasons why the endpoint has failed.
--   
--   <a>$sel:state:Endpoint'</a>, <a>endpoint_state</a> - The state of the
--   endpoint.
--   
--   <a>$sel:arn:Endpoint'</a>, <a>endpoint_arn</a> - The ARN of the
--   endpoint.
--   
--   <a>$sel:createdAt:Endpoint'</a>, <a>endpoint_createdAt</a> - The date
--   and time when the endpoint was created.
--   
--   <a>$sel:subnetIds:Endpoint'</a>, <a>endpoint_subnetIds</a> - The
--   subnet IDs of the endpoint.
--   
--   <a>$sel:stateDetails:Endpoint'</a>, <a>endpoint_stateDetails</a> -
--   Additional details of the endpoint state.
--   
--   <a>$sel:certificateArn:Endpoint'</a>, <a>endpoint_certificateArn</a> -
--   The certificate ARN of the endpoint.
--   
--   <a>$sel:executionRoleArn:Endpoint'</a>,
--   <a>endpoint_executionRoleArn</a> - The execution role ARN of the
--   endpoint.
--   
--   <a>$sel:securityGroup:Endpoint'</a>, <a>endpoint_securityGroup</a> -
--   The security group configuration of the endpoint.
--   
--   <a>$sel:configurationOverrides:Endpoint'</a>,
--   <a>endpoint_configurationOverrides</a> - The configuration settings
--   that are used to override existing configurations for endpoints.
--   
--   <a>$sel:name:Endpoint'</a>, <a>endpoint_name</a> - The name of the
--   endpoint.
--   
--   <a>$sel:releaseLabel:Endpoint'</a>, <a>endpoint_releaseLabel</a> - The
--   EMR release version to be used for the endpoint.
--   
--   <a>$sel:id:Endpoint'</a>, <a>endpoint_id</a> - The ID of the endpoint.
--   
--   <a>$sel:type':Endpoint'</a>, <a>endpoint_type</a> - The type of the
--   endpoint.
--   
--   <a>$sel:serverUrl:Endpoint'</a>, <a>endpoint_serverUrl</a> - The
--   server URL of the endpoint.
--   
--   <a>$sel:virtualClusterId:Endpoint'</a>,
--   <a>endpoint_virtualClusterId</a> - The ID of the endpoint's virtual
--   cluster.
--   
--   <a>$sel:tags:Endpoint'</a>, <a>endpoint_tags</a> - The tags of the
--   endpoint.
newEndpoint :: Endpoint

-- | The reasons why the endpoint has failed.
endpoint_failureReason :: Lens' Endpoint (Maybe FailureReason)

-- | The state of the endpoint.
endpoint_state :: Lens' Endpoint (Maybe EndpointState)

-- | The ARN of the endpoint.
endpoint_arn :: Lens' Endpoint (Maybe Text)

-- | The date and time when the endpoint was created.
endpoint_createdAt :: Lens' Endpoint (Maybe UTCTime)

-- | The subnet IDs of the endpoint.
endpoint_subnetIds :: Lens' Endpoint (Maybe [Text])

-- | Additional details of the endpoint state.
endpoint_stateDetails :: Lens' Endpoint (Maybe Text)

-- | The certificate ARN of the endpoint.
endpoint_certificateArn :: Lens' Endpoint (Maybe Text)

-- | The execution role ARN of the endpoint.
endpoint_executionRoleArn :: Lens' Endpoint (Maybe Text)

-- | The security group configuration of the endpoint.
endpoint_securityGroup :: Lens' Endpoint (Maybe Text)

-- | The configuration settings that are used to override existing
--   configurations for endpoints.
endpoint_configurationOverrides :: Lens' Endpoint (Maybe ConfigurationOverrides)

-- | The name of the endpoint.
endpoint_name :: Lens' Endpoint (Maybe Text)

-- | The EMR release version to be used for the endpoint.
endpoint_releaseLabel :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint.
endpoint_id :: Lens' Endpoint (Maybe Text)

-- | The type of the endpoint.
endpoint_type :: Lens' Endpoint (Maybe Text)

-- | The server URL of the endpoint.
endpoint_serverUrl :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint's virtual cluster.
endpoint_virtualClusterId :: Lens' Endpoint (Maybe Text)

-- | The tags of the endpoint.
endpoint_tags :: Lens' Endpoint (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.Endpoint.Endpoint
instance GHC.Show.Show Network.AWS.EMRContainers.Types.Endpoint.Endpoint
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.Endpoint.Endpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.Endpoint.Endpoint
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.Endpoint.Endpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.Endpoint.Endpoint


module Network.AWS.EMRContainers.Types.SparkSubmitJobDriver

-- | The information about job driver for Spark submit.
--   
--   <i>See:</i> <a>newSparkSubmitJobDriver</a> smart constructor.
data SparkSubmitJobDriver
SparkSubmitJobDriver' :: Maybe (Sensitive Text) -> Maybe [Sensitive Text] -> Sensitive Text -> SparkSubmitJobDriver

-- | The Spark submit parameters that are used for job runs.
[$sel:sparkSubmitParameters:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Maybe (Sensitive Text)

-- | The arguments for job application.
[$sel:entryPointArguments:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Maybe [Sensitive Text]

-- | The entry point of job application.
[$sel:entryPoint:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Sensitive Text

-- | Create a value of <a>SparkSubmitJobDriver</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitParameters:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_sparkSubmitParameters</a> - The Spark submit
--   parameters that are used for job runs.
--   
--   <a>$sel:entryPointArguments:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPointArguments</a> - The arguments for
--   job application.
--   
--   <a>$sel:entryPoint:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPoint</a> - The entry point of job
--   application.
newSparkSubmitJobDriver :: Text -> SparkSubmitJobDriver

-- | The Spark submit parameters that are used for job runs.
sparkSubmitJobDriver_sparkSubmitParameters :: Lens' SparkSubmitJobDriver (Maybe Text)

-- | The arguments for job application.
sparkSubmitJobDriver_entryPointArguments :: Lens' SparkSubmitJobDriver (Maybe [Text])

-- | The entry point of job application.
sparkSubmitJobDriver_entryPoint :: Lens' SparkSubmitJobDriver Text
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance GHC.Show.Show Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.SparkSubmitJobDriver.SparkSubmitJobDriver


module Network.AWS.EMRContainers.Types.JobDriver

-- | Specify the driver that the job runs on.
--   
--   <i>See:</i> <a>newJobDriver</a> smart constructor.
data JobDriver
JobDriver' :: Maybe SparkSubmitJobDriver -> JobDriver

-- | The job driver parameters specified for spark submit.
[$sel:sparkSubmitJobDriver:JobDriver'] :: JobDriver -> Maybe SparkSubmitJobDriver

-- | Create a value of <a>JobDriver</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitJobDriver:JobDriver'</a>,
--   <a>jobDriver_sparkSubmitJobDriver</a> - The job driver parameters
--   specified for spark submit.
newJobDriver :: JobDriver

-- | The job driver parameters specified for spark submit.
jobDriver_sparkSubmitJobDriver :: Lens' JobDriver (Maybe SparkSubmitJobDriver)
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance GHC.Show.Show Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.JobDriver.JobDriver
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.JobDriver.JobDriver


module Network.AWS.EMRContainers.Types.JobRun

-- | This entity describes a job run. A job run is a unit of work, such as
--   a Spark jar, PySpark script, or SparkSQL query, that you submit to
--   Amazon EMR on EKS.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe FailureReason -> Maybe JobRunState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe JobDriver -> Maybe ConfigurationOverrides -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> JobRun

-- | The reasons why the job run has failed.
[$sel:failureReason:JobRun'] :: JobRun -> Maybe FailureReason

-- | The state of the job run.
[$sel:state:JobRun'] :: JobRun -> Maybe JobRunState

-- | The client token used to start a job run.
[$sel:clientToken:JobRun'] :: JobRun -> Maybe Text

-- | The ARN of job run.
[$sel:arn:JobRun'] :: JobRun -> Maybe Text

-- | The date and time when the job run was created.
[$sel:createdAt:JobRun'] :: JobRun -> Maybe POSIX

-- | Additional details of the job run state.
[$sel:stateDetails:JobRun'] :: JobRun -> Maybe Text

-- | The user who created the job run.
[$sel:createdBy:JobRun'] :: JobRun -> Maybe Text

-- | The execution role ARN of the job run.
[$sel:executionRoleArn:JobRun'] :: JobRun -> Maybe Text

-- | Parameters of job driver for the job run.
[$sel:jobDriver:JobRun'] :: JobRun -> Maybe JobDriver

-- | The configuration settings that are used to override default
--   configuration.
[$sel:configurationOverrides:JobRun'] :: JobRun -> Maybe ConfigurationOverrides

-- | The date and time when the job run has finished.
[$sel:finishedAt:JobRun'] :: JobRun -> Maybe POSIX

-- | The name of the job run.
[$sel:name:JobRun'] :: JobRun -> Maybe Text

-- | The release version of Amazon EMR.
[$sel:releaseLabel:JobRun'] :: JobRun -> Maybe Text

-- | The ID of the job run.
[$sel:id:JobRun'] :: JobRun -> Maybe Text

-- | The ID of the job run's virtual cluster.
[$sel:virtualClusterId:JobRun'] :: JobRun -> Maybe Text

-- | The assigned tags of the job run.
[$sel:tags:JobRun'] :: JobRun -> Maybe (HashMap Text Text)

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:JobRun'</a>, <a>jobRun_failureReason</a> - The
--   reasons why the job run has failed.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The state of the job
--   run.
--   
--   <a>$sel:clientToken:JobRun'</a>, <a>jobRun_clientToken</a> - The
--   client token used to start a job run.
--   
--   <a>$sel:arn:JobRun'</a>, <a>jobRun_arn</a> - The ARN of job run.
--   
--   <a>$sel:createdAt:JobRun'</a>, <a>jobRun_createdAt</a> - The date and
--   time when the job run was created.
--   
--   <a>$sel:stateDetails:JobRun'</a>, <a>jobRun_stateDetails</a> -
--   Additional details of the job run state.
--   
--   <a>$sel:createdBy:JobRun'</a>, <a>jobRun_createdBy</a> - The user who
--   created the job run.
--   
--   <a>$sel:executionRoleArn:JobRun'</a>, <a>jobRun_executionRoleArn</a> -
--   The execution role ARN of the job run.
--   
--   <a>$sel:jobDriver:JobRun'</a>, <a>jobRun_jobDriver</a> - Parameters of
--   job driver for the job run.
--   
--   <a>$sel:configurationOverrides:JobRun'</a>,
--   <a>jobRun_configurationOverrides</a> - The configuration settings that
--   are used to override default configuration.
--   
--   <a>$sel:finishedAt:JobRun'</a>, <a>jobRun_finishedAt</a> - The date
--   and time when the job run has finished.
--   
--   <a>$sel:name:JobRun'</a>, <a>jobRun_name</a> - The name of the job
--   run.
--   
--   <a>$sel:releaseLabel:JobRun'</a>, <a>jobRun_releaseLabel</a> - The
--   release version of Amazon EMR.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of the job run.
--   
--   <a>$sel:virtualClusterId:JobRun'</a>, <a>jobRun_virtualClusterId</a> -
--   The ID of the job run's virtual cluster.
--   
--   <a>$sel:tags:JobRun'</a>, <a>jobRun_tags</a> - The assigned tags of
--   the job run.
newJobRun :: JobRun

-- | The reasons why the job run has failed.
jobRun_failureReason :: Lens' JobRun (Maybe FailureReason)

-- | The state of the job run.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | The client token used to start a job run.
jobRun_clientToken :: Lens' JobRun (Maybe Text)

-- | The ARN of job run.
jobRun_arn :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run was created.
jobRun_createdAt :: Lens' JobRun (Maybe UTCTime)

-- | Additional details of the job run state.
jobRun_stateDetails :: Lens' JobRun (Maybe Text)

-- | The user who created the job run.
jobRun_createdBy :: Lens' JobRun (Maybe Text)

-- | The execution role ARN of the job run.
jobRun_executionRoleArn :: Lens' JobRun (Maybe Text)

-- | Parameters of job driver for the job run.
jobRun_jobDriver :: Lens' JobRun (Maybe JobDriver)

-- | The configuration settings that are used to override default
--   configuration.
jobRun_configurationOverrides :: Lens' JobRun (Maybe ConfigurationOverrides)

-- | The date and time when the job run has finished.
jobRun_finishedAt :: Lens' JobRun (Maybe UTCTime)

-- | The name of the job run.
jobRun_name :: Lens' JobRun (Maybe Text)

-- | The release version of Amazon EMR.
jobRun_releaseLabel :: Lens' JobRun (Maybe Text)

-- | The ID of the job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The ID of the job run's virtual cluster.
jobRun_virtualClusterId :: Lens' JobRun (Maybe Text)

-- | The assigned tags of the job run.
jobRun_tags :: Lens' JobRun (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.JobRun.JobRun
instance GHC.Show.Show Network.AWS.EMRContainers.Types.JobRun.JobRun
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.JobRun.JobRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.JobRun.JobRun
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.JobRun.JobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.JobRun.JobRun


module Network.AWS.EMRContainers.Types.VirtualClusterState
newtype VirtualClusterState
VirtualClusterState' :: Text -> VirtualClusterState
[fromVirtualClusterState] :: VirtualClusterState -> Text
pattern VirtualClusterState_ARRESTED :: VirtualClusterState
pattern VirtualClusterState_RUNNING :: VirtualClusterState
pattern VirtualClusterState_TERMINATED :: VirtualClusterState
pattern VirtualClusterState_TERMINATING :: VirtualClusterState
instance Network.AWS.Data.XML.ToXML Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.XML.FromXML Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.Log.ToLog Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.Text.ToText Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Network.AWS.Data.Text.FromText Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance GHC.Classes.Ord Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance GHC.Read.Read Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState
instance GHC.Show.Show Network.AWS.EMRContainers.Types.VirtualClusterState.VirtualClusterState


module Network.AWS.EMRContainers.Types.VirtualCluster

-- | This entity describes a virtual cluster. A virtual cluster is a
--   Kubernetes namespace that Amazon EMR is registered with. Amazon EMR
--   uses virtual clusters to run jobs and host endpoints. Multiple virtual
--   clusters can be backed by the same physical cluster. However, each
--   virtual cluster maps to one namespace on an EKS cluster. Virtual
--   clusters do not create any active resources that contribute to your
--   bill or that require lifecycle management outside the service.
--   
--   <i>See:</i> <a>newVirtualCluster</a> smart constructor.
data VirtualCluster
VirtualCluster' :: Maybe VirtualClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ContainerProvider -> Maybe (HashMap Text Text) -> VirtualCluster

-- | The state of the virtual cluster.
[$sel:state:VirtualCluster'] :: VirtualCluster -> Maybe VirtualClusterState

-- | The ARN of the virtual cluster.
[$sel:arn:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The date and time when the virtual cluster is created.
[$sel:createdAt:VirtualCluster'] :: VirtualCluster -> Maybe POSIX

-- | The name of the virtual cluster.
[$sel:name:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The ID of the virtual cluster.
[$sel:id:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The container provider of the virtual cluster.
[$sel:containerProvider:VirtualCluster'] :: VirtualCluster -> Maybe ContainerProvider

-- | The assigned tags of the virtual cluster.
[$sel:tags:VirtualCluster'] :: VirtualCluster -> Maybe (HashMap Text Text)

-- | Create a value of <a>VirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:VirtualCluster'</a>, <a>virtualCluster_state</a> - The
--   state of the virtual cluster.
--   
--   <a>$sel:arn:VirtualCluster'</a>, <a>virtualCluster_arn</a> - The ARN
--   of the virtual cluster.
--   
--   <a>$sel:createdAt:VirtualCluster'</a>, <a>virtualCluster_createdAt</a>
--   - The date and time when the virtual cluster is created.
--   
--   <a>$sel:name:VirtualCluster'</a>, <a>virtualCluster_name</a> - The
--   name of the virtual cluster.
--   
--   <a>$sel:id:VirtualCluster'</a>, <a>virtualCluster_id</a> - The ID of
--   the virtual cluster.
--   
--   <a>$sel:containerProvider:VirtualCluster'</a>,
--   <a>virtualCluster_containerProvider</a> - The container provider of
--   the virtual cluster.
--   
--   <a>$sel:tags:VirtualCluster'</a>, <a>virtualCluster_tags</a> - The
--   assigned tags of the virtual cluster.
newVirtualCluster :: VirtualCluster

-- | The state of the virtual cluster.
virtualCluster_state :: Lens' VirtualCluster (Maybe VirtualClusterState)

-- | The ARN of the virtual cluster.
virtualCluster_arn :: Lens' VirtualCluster (Maybe Text)

-- | The date and time when the virtual cluster is created.
virtualCluster_createdAt :: Lens' VirtualCluster (Maybe UTCTime)

-- | The name of the virtual cluster.
virtualCluster_name :: Lens' VirtualCluster (Maybe Text)

-- | The ID of the virtual cluster.
virtualCluster_id :: Lens' VirtualCluster (Maybe Text)

-- | The container provider of the virtual cluster.
virtualCluster_containerProvider :: Lens' VirtualCluster (Maybe ContainerProvider)

-- | The assigned tags of the virtual cluster.
virtualCluster_tags :: Lens' VirtualCluster (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance GHC.Show.Show Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance GHC.Read.Read Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance GHC.Classes.Eq Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.Types.VirtualCluster.VirtualCluster


module Network.AWS.EMRContainers.Types

-- | API version <tt>2020-10-01</tt> of the Amazon EMR Containers SDK
--   configuration.
defaultService :: Service

-- | There are invalid parameters in the client request.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This is an internal server exception.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ContainerProviderType
ContainerProviderType' :: Text -> ContainerProviderType
[fromContainerProviderType] :: ContainerProviderType -> Text
pattern ContainerProviderType_EKS :: ContainerProviderType
newtype EndpointState
EndpointState' :: Text -> EndpointState
[fromEndpointState] :: EndpointState -> Text
pattern EndpointState_ACTIVE :: EndpointState
pattern EndpointState_CREATING :: EndpointState
pattern EndpointState_TERMINATED :: EndpointState
pattern EndpointState_TERMINATED_WITH_ERRORS :: EndpointState
pattern EndpointState_TERMINATING :: EndpointState
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_CLUSTER_UNAVAILABLE :: FailureReason
pattern FailureReason_INTERNAL_ERROR :: FailureReason
pattern FailureReason_USER_ERROR :: FailureReason
pattern FailureReason_VALIDATION_ERROR :: FailureReason
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_CANCELLED :: JobRunState
pattern JobRunState_CANCEL_PENDING :: JobRunState
pattern JobRunState_COMPLETED :: JobRunState
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_PENDING :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_SUBMITTED :: JobRunState
newtype PersistentAppUI
PersistentAppUI' :: Text -> PersistentAppUI
[fromPersistentAppUI] :: PersistentAppUI -> Text
pattern PersistentAppUI_DISABLED :: PersistentAppUI
pattern PersistentAppUI_ENABLED :: PersistentAppUI
newtype VirtualClusterState
VirtualClusterState' :: Text -> VirtualClusterState
[fromVirtualClusterState] :: VirtualClusterState -> Text
pattern VirtualClusterState_ARRESTED :: VirtualClusterState
pattern VirtualClusterState_RUNNING :: VirtualClusterState
pattern VirtualClusterState_TERMINATED :: VirtualClusterState
pattern VirtualClusterState_TERMINATING :: VirtualClusterState

-- | A configuration for CloudWatch monitoring. You can configure your jobs
--   to send log information to CloudWatch Logs.
--   
--   <i>See:</i> <a>newCloudWatchMonitoringConfiguration</a> smart
--   constructor.
data CloudWatchMonitoringConfiguration
CloudWatchMonitoringConfiguration' :: Maybe Text -> Text -> CloudWatchMonitoringConfiguration

-- | The specified name prefix for log streams.
[$sel:logStreamNamePrefix:CloudWatchMonitoringConfiguration'] :: CloudWatchMonitoringConfiguration -> Maybe Text

-- | The name of the log group for log publishing.
[$sel:logGroupName:CloudWatchMonitoringConfiguration'] :: CloudWatchMonitoringConfiguration -> Text

-- | Create a value of <a>CloudWatchMonitoringConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamNamePrefix:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logStreamNamePrefix</a> - The
--   specified name prefix for log streams.
--   
--   <a>$sel:logGroupName:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logGroupName</a> - The name of
--   the log group for log publishing.
newCloudWatchMonitoringConfiguration :: Text -> CloudWatchMonitoringConfiguration

-- | The specified name prefix for log streams.
cloudWatchMonitoringConfiguration_logStreamNamePrefix :: Lens' CloudWatchMonitoringConfiguration (Maybe Text)

-- | The name of the log group for log publishing.
cloudWatchMonitoringConfiguration_logGroupName :: Lens' CloudWatchMonitoringConfiguration Text

-- | A configuration specification to be used when provisioning virtual
--   clusters, which can include configurations for applications and
--   software bundled with Amazon EMR on EKS. A configuration consists of a
--   classification, properties, and optional nested configurations. A
--   classification refers to an application-specific configuration file.
--   Properties are the settings you want to change in that file.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Maybe [Configuration] -> Maybe (Sensitive (HashMap Text Text)) -> Text -> Configuration

-- | A list of additional configurations to apply within a configuration
--   object.
[$sel:configurations:Configuration'] :: Configuration -> Maybe [Configuration]

-- | A set of properties specified within a configuration classification.
[$sel:properties:Configuration'] :: Configuration -> Maybe (Sensitive (HashMap Text Text))

-- | The classification within a configuration.
[$sel:classification:Configuration'] :: Configuration -> Text

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:Configuration'</a>,
--   <a>configuration_configurations</a> - A list of additional
--   configurations to apply within a configuration object.
--   
--   <a>$sel:properties:Configuration'</a>, <a>configuration_properties</a>
--   - A set of properties specified within a configuration classification.
--   
--   <a>$sel:classification:Configuration'</a>,
--   <a>configuration_classification</a> - The classification within a
--   configuration.
newConfiguration :: Text -> Configuration

-- | A list of additional configurations to apply within a configuration
--   object.
configuration_configurations :: Lens' Configuration (Maybe [Configuration])

-- | A set of properties specified within a configuration classification.
configuration_properties :: Lens' Configuration (Maybe (HashMap Text Text))

-- | The classification within a configuration.
configuration_classification :: Lens' Configuration Text

-- | A configuration specification to be used to override existing
--   configurations.
--   
--   <i>See:</i> <a>newConfigurationOverrides</a> smart constructor.
data ConfigurationOverrides
ConfigurationOverrides' :: Maybe MonitoringConfiguration -> Maybe [Configuration] -> ConfigurationOverrides

-- | The configurations for monitoring.
[$sel:monitoringConfiguration:ConfigurationOverrides'] :: ConfigurationOverrides -> Maybe MonitoringConfiguration

-- | The configurations for the application running by the job run.
[$sel:applicationConfiguration:ConfigurationOverrides'] :: ConfigurationOverrides -> Maybe [Configuration]

-- | Create a value of <a>ConfigurationOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoringConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_monitoringConfiguration</a> - The
--   configurations for monitoring.
--   
--   <a>$sel:applicationConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_applicationConfiguration</a> - The
--   configurations for the application running by the job run.
newConfigurationOverrides :: ConfigurationOverrides

-- | The configurations for monitoring.
configurationOverrides_monitoringConfiguration :: Lens' ConfigurationOverrides (Maybe MonitoringConfiguration)

-- | The configurations for the application running by the job run.
configurationOverrides_applicationConfiguration :: Lens' ConfigurationOverrides (Maybe [Configuration])

-- | The information about the container used for a job run or a managed
--   endpoint.
--   
--   <i>See:</i> <a>newContainerInfo</a> smart constructor.
data ContainerInfo
ContainerInfo' :: Maybe EksInfo -> ContainerInfo

-- | The information about the EKS cluster.
[$sel:eksInfo:ContainerInfo'] :: ContainerInfo -> Maybe EksInfo

-- | Create a value of <a>ContainerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eksInfo:ContainerInfo'</a>, <a>containerInfo_eksInfo</a> - The
--   information about the EKS cluster.
newContainerInfo :: ContainerInfo

-- | The information about the EKS cluster.
containerInfo_eksInfo :: Lens' ContainerInfo (Maybe EksInfo)

-- | The information about the container provider.
--   
--   <i>See:</i> <a>newContainerProvider</a> smart constructor.
data ContainerProvider
ContainerProvider' :: Maybe ContainerInfo -> ContainerProviderType -> Text -> ContainerProvider

-- | The information about the container cluster.
[$sel:info:ContainerProvider'] :: ContainerProvider -> Maybe ContainerInfo

-- | The type of the container provider. EKS is the only supported type as
--   of now.
[$sel:type':ContainerProvider'] :: ContainerProvider -> ContainerProviderType

-- | The ID of the container cluster.
[$sel:id:ContainerProvider'] :: ContainerProvider -> Text

-- | Create a value of <a>ContainerProvider</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:info:ContainerProvider'</a>, <a>containerProvider_info</a> -
--   The information about the container cluster.
--   
--   <a>$sel:type':ContainerProvider'</a>, <a>containerProvider_type</a> -
--   The type of the container provider. EKS is the only supported type as
--   of now.
--   
--   <a>$sel:id:ContainerProvider'</a>, <a>containerProvider_id</a> - The
--   ID of the container cluster.
newContainerProvider :: ContainerProviderType -> Text -> ContainerProvider

-- | The information about the container cluster.
containerProvider_info :: Lens' ContainerProvider (Maybe ContainerInfo)

-- | The type of the container provider. EKS is the only supported type as
--   of now.
containerProvider_type :: Lens' ContainerProvider ContainerProviderType

-- | The ID of the container cluster.
containerProvider_id :: Lens' ContainerProvider Text

-- | The information about the EKS cluster.
--   
--   <i>See:</i> <a>newEksInfo</a> smart constructor.
data EksInfo
EksInfo' :: Maybe Text -> EksInfo

-- | The namespaces of the EKS cluster.
[$sel:namespace:EksInfo'] :: EksInfo -> Maybe Text

-- | Create a value of <a>EksInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:EksInfo'</a>, <a>eksInfo_namespace</a> - The
--   namespaces of the EKS cluster.
newEksInfo :: EksInfo

-- | The namespaces of the EKS cluster.
eksInfo_namespace :: Lens' EksInfo (Maybe Text)

-- | This entity represents the endpoint that is managed by Amazon EMR on
--   EKS.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe FailureReason -> Maybe EndpointState -> Maybe Text -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigurationOverrides -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Endpoint

-- | The reasons why the endpoint has failed.
[$sel:failureReason:Endpoint'] :: Endpoint -> Maybe FailureReason

-- | The state of the endpoint.
[$sel:state:Endpoint'] :: Endpoint -> Maybe EndpointState

-- | The ARN of the endpoint.
[$sel:arn:Endpoint'] :: Endpoint -> Maybe Text

-- | The date and time when the endpoint was created.
[$sel:createdAt:Endpoint'] :: Endpoint -> Maybe POSIX

-- | The subnet IDs of the endpoint.
[$sel:subnetIds:Endpoint'] :: Endpoint -> Maybe [Text]

-- | Additional details of the endpoint state.
[$sel:stateDetails:Endpoint'] :: Endpoint -> Maybe Text

-- | The certificate ARN of the endpoint.
[$sel:certificateArn:Endpoint'] :: Endpoint -> Maybe Text

-- | The execution role ARN of the endpoint.
[$sel:executionRoleArn:Endpoint'] :: Endpoint -> Maybe Text

-- | The security group configuration of the endpoint.
[$sel:securityGroup:Endpoint'] :: Endpoint -> Maybe Text

-- | The configuration settings that are used to override existing
--   configurations for endpoints.
[$sel:configurationOverrides:Endpoint'] :: Endpoint -> Maybe ConfigurationOverrides

-- | The name of the endpoint.
[$sel:name:Endpoint'] :: Endpoint -> Maybe Text

-- | The EMR release version to be used for the endpoint.
[$sel:releaseLabel:Endpoint'] :: Endpoint -> Maybe Text

-- | The ID of the endpoint.
[$sel:id:Endpoint'] :: Endpoint -> Maybe Text

-- | The type of the endpoint.
[$sel:type':Endpoint'] :: Endpoint -> Maybe Text

-- | The server URL of the endpoint.
[$sel:serverUrl:Endpoint'] :: Endpoint -> Maybe Text

-- | The ID of the endpoint's virtual cluster.
[$sel:virtualClusterId:Endpoint'] :: Endpoint -> Maybe Text

-- | The tags of the endpoint.
[$sel:tags:Endpoint'] :: Endpoint -> Maybe (HashMap Text Text)

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Endpoint'</a>, <a>endpoint_failureReason</a> -
--   The reasons why the endpoint has failed.
--   
--   <a>$sel:state:Endpoint'</a>, <a>endpoint_state</a> - The state of the
--   endpoint.
--   
--   <a>$sel:arn:Endpoint'</a>, <a>endpoint_arn</a> - The ARN of the
--   endpoint.
--   
--   <a>$sel:createdAt:Endpoint'</a>, <a>endpoint_createdAt</a> - The date
--   and time when the endpoint was created.
--   
--   <a>$sel:subnetIds:Endpoint'</a>, <a>endpoint_subnetIds</a> - The
--   subnet IDs of the endpoint.
--   
--   <a>$sel:stateDetails:Endpoint'</a>, <a>endpoint_stateDetails</a> -
--   Additional details of the endpoint state.
--   
--   <a>$sel:certificateArn:Endpoint'</a>, <a>endpoint_certificateArn</a> -
--   The certificate ARN of the endpoint.
--   
--   <a>$sel:executionRoleArn:Endpoint'</a>,
--   <a>endpoint_executionRoleArn</a> - The execution role ARN of the
--   endpoint.
--   
--   <a>$sel:securityGroup:Endpoint'</a>, <a>endpoint_securityGroup</a> -
--   The security group configuration of the endpoint.
--   
--   <a>$sel:configurationOverrides:Endpoint'</a>,
--   <a>endpoint_configurationOverrides</a> - The configuration settings
--   that are used to override existing configurations for endpoints.
--   
--   <a>$sel:name:Endpoint'</a>, <a>endpoint_name</a> - The name of the
--   endpoint.
--   
--   <a>$sel:releaseLabel:Endpoint'</a>, <a>endpoint_releaseLabel</a> - The
--   EMR release version to be used for the endpoint.
--   
--   <a>$sel:id:Endpoint'</a>, <a>endpoint_id</a> - The ID of the endpoint.
--   
--   <a>$sel:type':Endpoint'</a>, <a>endpoint_type</a> - The type of the
--   endpoint.
--   
--   <a>$sel:serverUrl:Endpoint'</a>, <a>endpoint_serverUrl</a> - The
--   server URL of the endpoint.
--   
--   <a>$sel:virtualClusterId:Endpoint'</a>,
--   <a>endpoint_virtualClusterId</a> - The ID of the endpoint's virtual
--   cluster.
--   
--   <a>$sel:tags:Endpoint'</a>, <a>endpoint_tags</a> - The tags of the
--   endpoint.
newEndpoint :: Endpoint

-- | The reasons why the endpoint has failed.
endpoint_failureReason :: Lens' Endpoint (Maybe FailureReason)

-- | The state of the endpoint.
endpoint_state :: Lens' Endpoint (Maybe EndpointState)

-- | The ARN of the endpoint.
endpoint_arn :: Lens' Endpoint (Maybe Text)

-- | The date and time when the endpoint was created.
endpoint_createdAt :: Lens' Endpoint (Maybe UTCTime)

-- | The subnet IDs of the endpoint.
endpoint_subnetIds :: Lens' Endpoint (Maybe [Text])

-- | Additional details of the endpoint state.
endpoint_stateDetails :: Lens' Endpoint (Maybe Text)

-- | The certificate ARN of the endpoint.
endpoint_certificateArn :: Lens' Endpoint (Maybe Text)

-- | The execution role ARN of the endpoint.
endpoint_executionRoleArn :: Lens' Endpoint (Maybe Text)

-- | The security group configuration of the endpoint.
endpoint_securityGroup :: Lens' Endpoint (Maybe Text)

-- | The configuration settings that are used to override existing
--   configurations for endpoints.
endpoint_configurationOverrides :: Lens' Endpoint (Maybe ConfigurationOverrides)

-- | The name of the endpoint.
endpoint_name :: Lens' Endpoint (Maybe Text)

-- | The EMR release version to be used for the endpoint.
endpoint_releaseLabel :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint.
endpoint_id :: Lens' Endpoint (Maybe Text)

-- | The type of the endpoint.
endpoint_type :: Lens' Endpoint (Maybe Text)

-- | The server URL of the endpoint.
endpoint_serverUrl :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint's virtual cluster.
endpoint_virtualClusterId :: Lens' Endpoint (Maybe Text)

-- | The tags of the endpoint.
endpoint_tags :: Lens' Endpoint (Maybe (HashMap Text Text))

-- | Specify the driver that the job runs on.
--   
--   <i>See:</i> <a>newJobDriver</a> smart constructor.
data JobDriver
JobDriver' :: Maybe SparkSubmitJobDriver -> JobDriver

-- | The job driver parameters specified for spark submit.
[$sel:sparkSubmitJobDriver:JobDriver'] :: JobDriver -> Maybe SparkSubmitJobDriver

-- | Create a value of <a>JobDriver</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitJobDriver:JobDriver'</a>,
--   <a>jobDriver_sparkSubmitJobDriver</a> - The job driver parameters
--   specified for spark submit.
newJobDriver :: JobDriver

-- | The job driver parameters specified for spark submit.
jobDriver_sparkSubmitJobDriver :: Lens' JobDriver (Maybe SparkSubmitJobDriver)

-- | This entity describes a job run. A job run is a unit of work, such as
--   a Spark jar, PySpark script, or SparkSQL query, that you submit to
--   Amazon EMR on EKS.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe FailureReason -> Maybe JobRunState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe JobDriver -> Maybe ConfigurationOverrides -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> JobRun

-- | The reasons why the job run has failed.
[$sel:failureReason:JobRun'] :: JobRun -> Maybe FailureReason

-- | The state of the job run.
[$sel:state:JobRun'] :: JobRun -> Maybe JobRunState

-- | The client token used to start a job run.
[$sel:clientToken:JobRun'] :: JobRun -> Maybe Text

-- | The ARN of job run.
[$sel:arn:JobRun'] :: JobRun -> Maybe Text

-- | The date and time when the job run was created.
[$sel:createdAt:JobRun'] :: JobRun -> Maybe POSIX

-- | Additional details of the job run state.
[$sel:stateDetails:JobRun'] :: JobRun -> Maybe Text

-- | The user who created the job run.
[$sel:createdBy:JobRun'] :: JobRun -> Maybe Text

-- | The execution role ARN of the job run.
[$sel:executionRoleArn:JobRun'] :: JobRun -> Maybe Text

-- | Parameters of job driver for the job run.
[$sel:jobDriver:JobRun'] :: JobRun -> Maybe JobDriver

-- | The configuration settings that are used to override default
--   configuration.
[$sel:configurationOverrides:JobRun'] :: JobRun -> Maybe ConfigurationOverrides

-- | The date and time when the job run has finished.
[$sel:finishedAt:JobRun'] :: JobRun -> Maybe POSIX

-- | The name of the job run.
[$sel:name:JobRun'] :: JobRun -> Maybe Text

-- | The release version of Amazon EMR.
[$sel:releaseLabel:JobRun'] :: JobRun -> Maybe Text

-- | The ID of the job run.
[$sel:id:JobRun'] :: JobRun -> Maybe Text

-- | The ID of the job run's virtual cluster.
[$sel:virtualClusterId:JobRun'] :: JobRun -> Maybe Text

-- | The assigned tags of the job run.
[$sel:tags:JobRun'] :: JobRun -> Maybe (HashMap Text Text)

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:JobRun'</a>, <a>jobRun_failureReason</a> - The
--   reasons why the job run has failed.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The state of the job
--   run.
--   
--   <a>$sel:clientToken:JobRun'</a>, <a>jobRun_clientToken</a> - The
--   client token used to start a job run.
--   
--   <a>$sel:arn:JobRun'</a>, <a>jobRun_arn</a> - The ARN of job run.
--   
--   <a>$sel:createdAt:JobRun'</a>, <a>jobRun_createdAt</a> - The date and
--   time when the job run was created.
--   
--   <a>$sel:stateDetails:JobRun'</a>, <a>jobRun_stateDetails</a> -
--   Additional details of the job run state.
--   
--   <a>$sel:createdBy:JobRun'</a>, <a>jobRun_createdBy</a> - The user who
--   created the job run.
--   
--   <a>$sel:executionRoleArn:JobRun'</a>, <a>jobRun_executionRoleArn</a> -
--   The execution role ARN of the job run.
--   
--   <a>$sel:jobDriver:JobRun'</a>, <a>jobRun_jobDriver</a> - Parameters of
--   job driver for the job run.
--   
--   <a>$sel:configurationOverrides:JobRun'</a>,
--   <a>jobRun_configurationOverrides</a> - The configuration settings that
--   are used to override default configuration.
--   
--   <a>$sel:finishedAt:JobRun'</a>, <a>jobRun_finishedAt</a> - The date
--   and time when the job run has finished.
--   
--   <a>$sel:name:JobRun'</a>, <a>jobRun_name</a> - The name of the job
--   run.
--   
--   <a>$sel:releaseLabel:JobRun'</a>, <a>jobRun_releaseLabel</a> - The
--   release version of Amazon EMR.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of the job run.
--   
--   <a>$sel:virtualClusterId:JobRun'</a>, <a>jobRun_virtualClusterId</a> -
--   The ID of the job run's virtual cluster.
--   
--   <a>$sel:tags:JobRun'</a>, <a>jobRun_tags</a> - The assigned tags of
--   the job run.
newJobRun :: JobRun

-- | The reasons why the job run has failed.
jobRun_failureReason :: Lens' JobRun (Maybe FailureReason)

-- | The state of the job run.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | The client token used to start a job run.
jobRun_clientToken :: Lens' JobRun (Maybe Text)

-- | The ARN of job run.
jobRun_arn :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run was created.
jobRun_createdAt :: Lens' JobRun (Maybe UTCTime)

-- | Additional details of the job run state.
jobRun_stateDetails :: Lens' JobRun (Maybe Text)

-- | The user who created the job run.
jobRun_createdBy :: Lens' JobRun (Maybe Text)

-- | The execution role ARN of the job run.
jobRun_executionRoleArn :: Lens' JobRun (Maybe Text)

-- | Parameters of job driver for the job run.
jobRun_jobDriver :: Lens' JobRun (Maybe JobDriver)

-- | The configuration settings that are used to override default
--   configuration.
jobRun_configurationOverrides :: Lens' JobRun (Maybe ConfigurationOverrides)

-- | The date and time when the job run has finished.
jobRun_finishedAt :: Lens' JobRun (Maybe UTCTime)

-- | The name of the job run.
jobRun_name :: Lens' JobRun (Maybe Text)

-- | The release version of Amazon EMR.
jobRun_releaseLabel :: Lens' JobRun (Maybe Text)

-- | The ID of the job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The ID of the job run's virtual cluster.
jobRun_virtualClusterId :: Lens' JobRun (Maybe Text)

-- | The assigned tags of the job run.
jobRun_tags :: Lens' JobRun (Maybe (HashMap Text Text))

-- | Configuration setting for monitoring.
--   
--   <i>See:</i> <a>newMonitoringConfiguration</a> smart constructor.
data MonitoringConfiguration
MonitoringConfiguration' :: Maybe PersistentAppUI -> Maybe S3MonitoringConfiguration -> Maybe CloudWatchMonitoringConfiguration -> MonitoringConfiguration

-- | Monitoring configurations for the persistent application UI.
[$sel:persistentAppUI:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe PersistentAppUI

-- | Amazon S3 configuration for monitoring log publishing.
[$sel:s3MonitoringConfiguration:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe S3MonitoringConfiguration

-- | Monitoring configurations for CloudWatch.
[$sel:cloudWatchMonitoringConfiguration:MonitoringConfiguration'] :: MonitoringConfiguration -> Maybe CloudWatchMonitoringConfiguration

-- | Create a value of <a>MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persistentAppUI:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_persistentAppUI</a> - Monitoring
--   configurations for the persistent application UI.
--   
--   <a>$sel:s3MonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_s3MonitoringConfiguration</a> - Amazon S3
--   configuration for monitoring log publishing.
--   
--   
--   <a>$sel:cloudWatchMonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_cloudWatchMonitoringConfiguration</a> -
--   Monitoring configurations for CloudWatch.
newMonitoringConfiguration :: MonitoringConfiguration

-- | Monitoring configurations for the persistent application UI.
monitoringConfiguration_persistentAppUI :: Lens' MonitoringConfiguration (Maybe PersistentAppUI)

-- | Amazon S3 configuration for monitoring log publishing.
monitoringConfiguration_s3MonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe S3MonitoringConfiguration)

-- | Monitoring configurations for CloudWatch.
monitoringConfiguration_cloudWatchMonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe CloudWatchMonitoringConfiguration)

-- | Amazon S3 configuration for monitoring log publishing. You can
--   configure your jobs to send log information to Amazon S3.
--   
--   <i>See:</i> <a>newS3MonitoringConfiguration</a> smart constructor.
data S3MonitoringConfiguration
S3MonitoringConfiguration' :: Text -> S3MonitoringConfiguration

-- | Amazon S3 destination URI for log publishing.
[$sel:logUri:S3MonitoringConfiguration'] :: S3MonitoringConfiguration -> Text

-- | Create a value of <a>S3MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUri:S3MonitoringConfiguration'</a>,
--   <a>s3MonitoringConfiguration_logUri</a> - Amazon S3 destination URI
--   for log publishing.
newS3MonitoringConfiguration :: Text -> S3MonitoringConfiguration

-- | Amazon S3 destination URI for log publishing.
s3MonitoringConfiguration_logUri :: Lens' S3MonitoringConfiguration Text

-- | The information about job driver for Spark submit.
--   
--   <i>See:</i> <a>newSparkSubmitJobDriver</a> smart constructor.
data SparkSubmitJobDriver
SparkSubmitJobDriver' :: Maybe (Sensitive Text) -> Maybe [Sensitive Text] -> Sensitive Text -> SparkSubmitJobDriver

-- | The Spark submit parameters that are used for job runs.
[$sel:sparkSubmitParameters:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Maybe (Sensitive Text)

-- | The arguments for job application.
[$sel:entryPointArguments:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Maybe [Sensitive Text]

-- | The entry point of job application.
[$sel:entryPoint:SparkSubmitJobDriver'] :: SparkSubmitJobDriver -> Sensitive Text

-- | Create a value of <a>SparkSubmitJobDriver</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitParameters:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_sparkSubmitParameters</a> - The Spark submit
--   parameters that are used for job runs.
--   
--   <a>$sel:entryPointArguments:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPointArguments</a> - The arguments for
--   job application.
--   
--   <a>$sel:entryPoint:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPoint</a> - The entry point of job
--   application.
newSparkSubmitJobDriver :: Text -> SparkSubmitJobDriver

-- | The Spark submit parameters that are used for job runs.
sparkSubmitJobDriver_sparkSubmitParameters :: Lens' SparkSubmitJobDriver (Maybe Text)

-- | The arguments for job application.
sparkSubmitJobDriver_entryPointArguments :: Lens' SparkSubmitJobDriver (Maybe [Text])

-- | The entry point of job application.
sparkSubmitJobDriver_entryPoint :: Lens' SparkSubmitJobDriver Text

-- | This entity describes a virtual cluster. A virtual cluster is a
--   Kubernetes namespace that Amazon EMR is registered with. Amazon EMR
--   uses virtual clusters to run jobs and host endpoints. Multiple virtual
--   clusters can be backed by the same physical cluster. However, each
--   virtual cluster maps to one namespace on an EKS cluster. Virtual
--   clusters do not create any active resources that contribute to your
--   bill or that require lifecycle management outside the service.
--   
--   <i>See:</i> <a>newVirtualCluster</a> smart constructor.
data VirtualCluster
VirtualCluster' :: Maybe VirtualClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ContainerProvider -> Maybe (HashMap Text Text) -> VirtualCluster

-- | The state of the virtual cluster.
[$sel:state:VirtualCluster'] :: VirtualCluster -> Maybe VirtualClusterState

-- | The ARN of the virtual cluster.
[$sel:arn:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The date and time when the virtual cluster is created.
[$sel:createdAt:VirtualCluster'] :: VirtualCluster -> Maybe POSIX

-- | The name of the virtual cluster.
[$sel:name:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The ID of the virtual cluster.
[$sel:id:VirtualCluster'] :: VirtualCluster -> Maybe Text

-- | The container provider of the virtual cluster.
[$sel:containerProvider:VirtualCluster'] :: VirtualCluster -> Maybe ContainerProvider

-- | The assigned tags of the virtual cluster.
[$sel:tags:VirtualCluster'] :: VirtualCluster -> Maybe (HashMap Text Text)

-- | Create a value of <a>VirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:VirtualCluster'</a>, <a>virtualCluster_state</a> - The
--   state of the virtual cluster.
--   
--   <a>$sel:arn:VirtualCluster'</a>, <a>virtualCluster_arn</a> - The ARN
--   of the virtual cluster.
--   
--   <a>$sel:createdAt:VirtualCluster'</a>, <a>virtualCluster_createdAt</a>
--   - The date and time when the virtual cluster is created.
--   
--   <a>$sel:name:VirtualCluster'</a>, <a>virtualCluster_name</a> - The
--   name of the virtual cluster.
--   
--   <a>$sel:id:VirtualCluster'</a>, <a>virtualCluster_id</a> - The ID of
--   the virtual cluster.
--   
--   <a>$sel:containerProvider:VirtualCluster'</a>,
--   <a>virtualCluster_containerProvider</a> - The container provider of
--   the virtual cluster.
--   
--   <a>$sel:tags:VirtualCluster'</a>, <a>virtualCluster_tags</a> - The
--   assigned tags of the virtual cluster.
newVirtualCluster :: VirtualCluster

-- | The state of the virtual cluster.
virtualCluster_state :: Lens' VirtualCluster (Maybe VirtualClusterState)

-- | The ARN of the virtual cluster.
virtualCluster_arn :: Lens' VirtualCluster (Maybe Text)

-- | The date and time when the virtual cluster is created.
virtualCluster_createdAt :: Lens' VirtualCluster (Maybe UTCTime)

-- | The name of the virtual cluster.
virtualCluster_name :: Lens' VirtualCluster (Maybe Text)

-- | The ID of the virtual cluster.
virtualCluster_id :: Lens' VirtualCluster (Maybe Text)

-- | The container provider of the virtual cluster.
virtualCluster_containerProvider :: Lens' VirtualCluster (Maybe ContainerProvider)

-- | The assigned tags of the virtual cluster.
virtualCluster_tags :: Lens' VirtualCluster (Maybe (HashMap Text Text))


-- | Assigns tags to resources. A tag is a label that you assign to an AWS
--   resource. Each tag consists of a key and an optional value, both of
--   which you define. Tags enable you to categorize your AWS resources by
--   attributes such as purpose, owner, or environment. When you have many
--   resources of the same type, you can quickly identify a specific
--   resource based on the tags you've assigned to it. For example, you can
--   define a set of tags for your Amazon EMR on EKS clusters to help you
--   track each cluster's owner and stack level. We recommend that you
--   devise a consistent set of tag keys for each resource type. You can
--   then search and filter the resources based on the tags that you add.
module Network.AWS.EMRContainers.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of resources.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags assigned to resources.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of resources.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags
--   assigned to resources.
newTagResource :: Text -> TagResource

-- | The ARN of resources.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags assigned to resources.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.TagResource.TagResource
instance GHC.Show.Show Network.AWS.EMRContainers.TagResource.TagResource
instance GHC.Read.Read Network.AWS.EMRContainers.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.EMRContainers.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.EMRContainers.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.EMRContainers.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.EMRContainers.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.TagResource.TagResource


-- | Starts a job run. A job run is a unit of work, such as a Spark jar,
--   PySpark script, or SparkSQL query, that you submit to Amazon EMR on
--   EKS.
module Network.AWS.EMRContainers.StartJobRun

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Maybe ConfigurationOverrides -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> JobDriver -> StartJobRun

-- | The configuration overrides for the job run.
[$sel:configurationOverrides:StartJobRun'] :: StartJobRun -> Maybe ConfigurationOverrides

-- | The name of the job run.
[$sel:name:StartJobRun'] :: StartJobRun -> Maybe Text

-- | The tags assigned to job runs.
[$sel:tags:StartJobRun'] :: StartJobRun -> Maybe (HashMap Text Text)

-- | The virtual cluster ID for which the job run request is submitted.
[$sel:virtualClusterId:StartJobRun'] :: StartJobRun -> Text

-- | The client idempotency token of the job run request.
[$sel:clientToken:StartJobRun'] :: StartJobRun -> Text

-- | The execution role ARN for the job run.
[$sel:executionRoleArn:StartJobRun'] :: StartJobRun -> Text

-- | The Amazon EMR release version to use for the job run.
[$sel:releaseLabel:StartJobRun'] :: StartJobRun -> Text

-- | The job driver for the job run.
[$sel:jobDriver:StartJobRun'] :: StartJobRun -> JobDriver

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationOverrides:StartJobRun'</a>,
--   <a>startJobRun_configurationOverrides</a> - The configuration
--   overrides for the job run.
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRun_name</a> - The name of
--   the job run.
--   
--   <a>$sel:tags:StartJobRun'</a>, <a>startJobRun_tags</a> - The tags
--   assigned to job runs.
--   
--   <a>$sel:virtualClusterId:StartJobRun'</a>,
--   <a>startJobRun_virtualClusterId</a> - The virtual cluster ID for which
--   the job run request is submitted.
--   
--   <a>$sel:clientToken:StartJobRun'</a>, <a>startJobRun_clientToken</a> -
--   The client idempotency token of the job run request.
--   
--   <a>$sel:executionRoleArn:StartJobRun'</a>,
--   <a>startJobRun_executionRoleArn</a> - The execution role ARN for the
--   job run.
--   
--   <a>$sel:releaseLabel:StartJobRun'</a>, <a>startJobRun_releaseLabel</a>
--   - The Amazon EMR release version to use for the job run.
--   
--   <a>$sel:jobDriver:StartJobRun'</a>, <a>startJobRun_jobDriver</a> - The
--   job driver for the job run.
newStartJobRun :: Text -> Text -> Text -> Text -> JobDriver -> StartJobRun

-- | The configuration overrides for the job run.
startJobRun_configurationOverrides :: Lens' StartJobRun (Maybe ConfigurationOverrides)

-- | The name of the job run.
startJobRun_name :: Lens' StartJobRun (Maybe Text)

-- | The tags assigned to job runs.
startJobRun_tags :: Lens' StartJobRun (Maybe (HashMap Text Text))

-- | The virtual cluster ID for which the job run request is submitted.
startJobRun_virtualClusterId :: Lens' StartJobRun Text

-- | The client idempotency token of the job run request.
startJobRun_clientToken :: Lens' StartJobRun Text

-- | The execution role ARN for the job run.
startJobRun_executionRoleArn :: Lens' StartJobRun Text

-- | The Amazon EMR release version to use for the job run.
startJobRun_releaseLabel :: Lens' StartJobRun Text

-- | The job driver for the job run.
startJobRun_jobDriver :: Lens' StartJobRun JobDriver

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartJobRunResponse

-- | This output lists the ARN of job run.
[$sel:arn:StartJobRunResponse'] :: StartJobRunResponse -> Maybe Text

-- | This output displays the name of the started job run.
[$sel:name:StartJobRunResponse'] :: StartJobRunResponse -> Maybe Text

-- | This output displays the started job run ID.
[$sel:id:StartJobRunResponse'] :: StartJobRunResponse -> Maybe Text

-- | This output displays the virtual cluster ID for which the job run was
--   submitted.
[$sel:virtualClusterId:StartJobRunResponse'] :: StartJobRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartJobRunResponse'] :: StartJobRunResponse -> Int

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StartJobRunResponse'</a>, <a>startJobRunResponse_arn</a> -
--   This output lists the ARN of job run.
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRunResponse_name</a> - This
--   output displays the name of the started job run.
--   
--   <a>$sel:id:StartJobRunResponse'</a>, <a>startJobRunResponse_id</a> -
--   This output displays the started job run ID.
--   
--   <a>$sel:virtualClusterId:StartJobRun'</a>,
--   <a>startJobRunResponse_virtualClusterId</a> - This output displays the
--   virtual cluster ID for which the job run was submitted.
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
newStartJobRunResponse :: Int -> StartJobRunResponse

-- | This output lists the ARN of job run.
startJobRunResponse_arn :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the name of the started job run.
startJobRunResponse_name :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the started job run ID.
startJobRunResponse_id :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the virtual cluster ID for which the job run was
--   submitted.
startJobRunResponse_virtualClusterId :: Lens' StartJobRunResponse (Maybe Text)

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance GHC.Show.Show Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance GHC.Classes.Eq Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance GHC.Generics.Generic Network.AWS.EMRContainers.StartJobRun.StartJobRunResponse
instance GHC.Show.Show Network.AWS.EMRContainers.StartJobRun.StartJobRunResponse
instance GHC.Read.Read Network.AWS.EMRContainers.StartJobRun.StartJobRunResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.StartJobRun.StartJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.StartJobRun.StartJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.StartJobRun.StartJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.StartJobRun.StartJobRun


-- | Lists information about the specified virtual cluster. Virtual cluster
--   is a managed entity on Amazon EMR on EKS. You can create, describe,
--   list and delete virtual clusters. They do not consume any additional
--   resource in your system. A single virtual cluster maps to a single
--   Kubernetes namespace. Given this relationship, you can model virtual
--   clusters the same way you model Kubernetes namespaces to meet your
--   requirements.
--   
--   This operation returns paginated results.
module Network.AWS.EMRContainers.ListVirtualClusters

-- | <i>See:</i> <a>newListVirtualClusters</a> smart constructor.
data ListVirtualClusters
ListVirtualClusters' :: Maybe [VirtualClusterState] -> Maybe POSIX -> Maybe ContainerProviderType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> ListVirtualClusters

-- | The states of the requested virtual clusters.
[$sel:states:ListVirtualClusters'] :: ListVirtualClusters -> Maybe [VirtualClusterState]

-- | The date and time after which the virtual clusters are created.
[$sel:createdAfter:ListVirtualClusters'] :: ListVirtualClusters -> Maybe POSIX

-- | The container provider type of the virtual cluster. EKS is the only
--   supported type as of now.
[$sel:containerProviderType:ListVirtualClusters'] :: ListVirtualClusters -> Maybe ContainerProviderType

-- | The token for the next set of virtual clusters to return.
[$sel:nextToken:ListVirtualClusters'] :: ListVirtualClusters -> Maybe Text

-- | The container provider ID of the virtual cluster.
[$sel:containerProviderId:ListVirtualClusters'] :: ListVirtualClusters -> Maybe Text

-- | The maximum number of virtual clusters that can be listed.
[$sel:maxResults:ListVirtualClusters'] :: ListVirtualClusters -> Maybe Int

-- | The date and time before which the virtual clusters are created.
[$sel:createdBefore:ListVirtualClusters'] :: ListVirtualClusters -> Maybe POSIX

-- | Create a value of <a>ListVirtualClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_states</a> - The states of the requested
--   virtual clusters.
--   
--   <a>$sel:createdAfter:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_createdAfter</a> - The date and time after
--   which the virtual clusters are created.
--   
--   <a>$sel:containerProviderType:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_containerProviderType</a> - The container
--   provider type of the virtual cluster. EKS is the only supported type
--   as of now.
--   
--   <a>$sel:nextToken:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_nextToken</a> - The token for the next set of
--   virtual clusters to return.
--   
--   <a>$sel:containerProviderId:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_containerProviderId</a> - The container
--   provider ID of the virtual cluster.
--   
--   <a>$sel:maxResults:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_maxResults</a> - The maximum number of virtual
--   clusters that can be listed.
--   
--   <a>$sel:createdBefore:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_createdBefore</a> - The date and time before
--   which the virtual clusters are created.
newListVirtualClusters :: ListVirtualClusters

-- | The states of the requested virtual clusters.
listVirtualClusters_states :: Lens' ListVirtualClusters (Maybe [VirtualClusterState])

-- | The date and time after which the virtual clusters are created.
listVirtualClusters_createdAfter :: Lens' ListVirtualClusters (Maybe UTCTime)

-- | The container provider type of the virtual cluster. EKS is the only
--   supported type as of now.
listVirtualClusters_containerProviderType :: Lens' ListVirtualClusters (Maybe ContainerProviderType)

-- | The token for the next set of virtual clusters to return.
listVirtualClusters_nextToken :: Lens' ListVirtualClusters (Maybe Text)

-- | The container provider ID of the virtual cluster.
listVirtualClusters_containerProviderId :: Lens' ListVirtualClusters (Maybe Text)

-- | The maximum number of virtual clusters that can be listed.
listVirtualClusters_maxResults :: Lens' ListVirtualClusters (Maybe Int)

-- | The date and time before which the virtual clusters are created.
listVirtualClusters_createdBefore :: Lens' ListVirtualClusters (Maybe UTCTime)

-- | <i>See:</i> <a>newListVirtualClustersResponse</a> smart constructor.
data ListVirtualClustersResponse
ListVirtualClustersResponse' :: Maybe Text -> Maybe [VirtualCluster] -> Int -> ListVirtualClustersResponse

-- | This output displays the token for the next set of virtual clusters.
[$sel:nextToken:ListVirtualClustersResponse'] :: ListVirtualClustersResponse -> Maybe Text

-- | This output lists the specified virtual clusters.
[$sel:virtualClusters:ListVirtualClustersResponse'] :: ListVirtualClustersResponse -> Maybe [VirtualCluster]

-- | The response's http status code.
[$sel:httpStatus:ListVirtualClustersResponse'] :: ListVirtualClustersResponse -> Int

-- | Create a value of <a>ListVirtualClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualClusters'</a>,
--   <a>listVirtualClustersResponse_nextToken</a> - This output displays
--   the token for the next set of virtual clusters.
--   
--   <a>$sel:virtualClusters:ListVirtualClustersResponse'</a>,
--   <a>listVirtualClustersResponse_virtualClusters</a> - This output lists
--   the specified virtual clusters.
--   
--   <a>$sel:httpStatus:ListVirtualClustersResponse'</a>,
--   <a>listVirtualClustersResponse_httpStatus</a> - The response's http
--   status code.
newListVirtualClustersResponse :: Int -> ListVirtualClustersResponse

-- | This output displays the token for the next set of virtual clusters.
listVirtualClustersResponse_nextToken :: Lens' ListVirtualClustersResponse (Maybe Text)

-- | This output lists the specified virtual clusters.
listVirtualClustersResponse_virtualClusters :: Lens' ListVirtualClustersResponse (Maybe [VirtualCluster])

-- | The response's http status code.
listVirtualClustersResponse_httpStatus :: Lens' ListVirtualClustersResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance GHC.Show.Show Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance GHC.Read.Read Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClustersResponse
instance GHC.Show.Show Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClustersResponse
instance GHC.Read.Read Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClustersResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClustersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClustersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.ListVirtualClusters.ListVirtualClusters


-- | Lists the tags assigned to the resources.
module Network.AWS.EMRContainers.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of tagged resources.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of tagged resources.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of tagged resources.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags assigned to resources.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags assigned to
--   resources.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags assigned to resources.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.ListTagsForResource.ListTagsForResource


-- | Lists managed endpoints based on a set of parameters. A managed
--   endpoint is a gateway that connects EMR Studio to Amazon EMR on EKS so
--   that EMR Studio can communicate with your virtual cluster.
--   
--   This operation returns paginated results.
module Network.AWS.EMRContainers.ListManagedEndpoints

-- | <i>See:</i> <a>newListManagedEndpoints</a> smart constructor.
data ListManagedEndpoints
ListManagedEndpoints' :: Maybe [EndpointState] -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe POSIX -> Text -> ListManagedEndpoints

-- | The states of the managed endpoints.
[$sel:states:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe [EndpointState]

-- | The date and time after which the endpoints are created.
[$sel:createdAfter:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe POSIX

-- | The types of the managed endpoints.
[$sel:types:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe [Text]

-- | The token for the next set of managed endpoints to return.
[$sel:nextToken:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe Text

-- | The maximum number of managed endpoints that can be listed.
[$sel:maxResults:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe Int

-- | The date and time before which the endpoints are created.
[$sel:createdBefore:ListManagedEndpoints'] :: ListManagedEndpoints -> Maybe POSIX

-- | The ID of the virtual cluster.
[$sel:virtualClusterId:ListManagedEndpoints'] :: ListManagedEndpoints -> Text

-- | Create a value of <a>ListManagedEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_states</a> - The states of the managed
--   endpoints.
--   
--   <a>$sel:createdAfter:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_createdAfter</a> - The date and time after
--   which the endpoints are created.
--   
--   <a>$sel:types:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_types</a> - The types of the managed
--   endpoints.
--   
--   <a>$sel:nextToken:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_nextToken</a> - The token for the next set of
--   managed endpoints to return.
--   
--   <a>$sel:maxResults:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_maxResults</a> - The maximum number of managed
--   endpoints that can be listed.
--   
--   <a>$sel:createdBefore:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_createdBefore</a> - The date and time before
--   which the endpoints are created.
--   
--   <a>$sel:virtualClusterId:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_virtualClusterId</a> - The ID of the virtual
--   cluster.
newListManagedEndpoints :: Text -> ListManagedEndpoints

-- | The states of the managed endpoints.
listManagedEndpoints_states :: Lens' ListManagedEndpoints (Maybe [EndpointState])

-- | The date and time after which the endpoints are created.
listManagedEndpoints_createdAfter :: Lens' ListManagedEndpoints (Maybe UTCTime)

-- | The types of the managed endpoints.
listManagedEndpoints_types :: Lens' ListManagedEndpoints (Maybe [Text])

-- | The token for the next set of managed endpoints to return.
listManagedEndpoints_nextToken :: Lens' ListManagedEndpoints (Maybe Text)

-- | The maximum number of managed endpoints that can be listed.
listManagedEndpoints_maxResults :: Lens' ListManagedEndpoints (Maybe Int)

-- | The date and time before which the endpoints are created.
listManagedEndpoints_createdBefore :: Lens' ListManagedEndpoints (Maybe UTCTime)

-- | The ID of the virtual cluster.
listManagedEndpoints_virtualClusterId :: Lens' ListManagedEndpoints Text

-- | <i>See:</i> <a>newListManagedEndpointsResponse</a> smart constructor.
data ListManagedEndpointsResponse
ListManagedEndpointsResponse' :: Maybe Text -> Maybe [Endpoint] -> Int -> ListManagedEndpointsResponse

-- | The token for the next set of endpoints to return.
[$sel:nextToken:ListManagedEndpointsResponse'] :: ListManagedEndpointsResponse -> Maybe Text

-- | The managed endpoints to be listed.
[$sel:endpoints:ListManagedEndpointsResponse'] :: ListManagedEndpointsResponse -> Maybe [Endpoint]

-- | The response's http status code.
[$sel:httpStatus:ListManagedEndpointsResponse'] :: ListManagedEndpointsResponse -> Int

-- | Create a value of <a>ListManagedEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListManagedEndpoints'</a>,
--   <a>listManagedEndpointsResponse_nextToken</a> - The token for the next
--   set of endpoints to return.
--   
--   <a>$sel:endpoints:ListManagedEndpointsResponse'</a>,
--   <a>listManagedEndpointsResponse_endpoints</a> - The managed endpoints
--   to be listed.
--   
--   <a>$sel:httpStatus:ListManagedEndpointsResponse'</a>,
--   <a>listManagedEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListManagedEndpointsResponse :: Int -> ListManagedEndpointsResponse

-- | The token for the next set of endpoints to return.
listManagedEndpointsResponse_nextToken :: Lens' ListManagedEndpointsResponse (Maybe Text)

-- | The managed endpoints to be listed.
listManagedEndpointsResponse_endpoints :: Lens' ListManagedEndpointsResponse (Maybe [Endpoint])

-- | The response's http status code.
listManagedEndpointsResponse_httpStatus :: Lens' ListManagedEndpointsResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance GHC.Show.Show Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance GHC.Read.Read Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpointsResponse
instance GHC.Show.Show Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpointsResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpointsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpointsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.ListManagedEndpoints.ListManagedEndpoints


-- | Lists job runs based on a set of parameters. A job run is a unit of
--   work, such as a Spark jar, PySpark script, or SparkSQL query, that you
--   submit to Amazon EMR on EKS.
--   
--   This operation returns paginated results.
module Network.AWS.EMRContainers.ListJobRuns

-- | <i>See:</i> <a>newListJobRuns</a> smart constructor.
data ListJobRuns
ListJobRuns' :: Maybe [JobRunState] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> Text -> ListJobRuns

-- | The states of the job run.
[$sel:states:ListJobRuns'] :: ListJobRuns -> Maybe [JobRunState]

-- | The date and time after which the job runs were submitted.
[$sel:createdAfter:ListJobRuns'] :: ListJobRuns -> Maybe POSIX

-- | The token for the next set of job runs to return.
[$sel:nextToken:ListJobRuns'] :: ListJobRuns -> Maybe Text

-- | The name of the job run.
[$sel:name:ListJobRuns'] :: ListJobRuns -> Maybe Text

-- | The maximum number of job runs that can be listed.
[$sel:maxResults:ListJobRuns'] :: ListJobRuns -> Maybe Int

-- | The date and time before which the job runs were submitted.
[$sel:createdBefore:ListJobRuns'] :: ListJobRuns -> Maybe POSIX

-- | The ID of the virtual cluster for which to list the job run.
[$sel:virtualClusterId:ListJobRuns'] :: ListJobRuns -> Text

-- | Create a value of <a>ListJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListJobRuns'</a>, <a>listJobRuns_states</a> - The
--   states of the job run.
--   
--   <a>$sel:createdAfter:ListJobRuns'</a>, <a>listJobRuns_createdAfter</a>
--   - The date and time after which the job runs were submitted.
--   
--   <a>$sel:nextToken:ListJobRuns'</a>, <a>listJobRuns_nextToken</a> - The
--   token for the next set of job runs to return.
--   
--   <a>$sel:name:ListJobRuns'</a>, <a>listJobRuns_name</a> - The name of
--   the job run.
--   
--   <a>$sel:maxResults:ListJobRuns'</a>, <a>listJobRuns_maxResults</a> -
--   The maximum number of job runs that can be listed.
--   
--   <a>$sel:createdBefore:ListJobRuns'</a>,
--   <a>listJobRuns_createdBefore</a> - The date and time before which the
--   job runs were submitted.
--   
--   <a>$sel:virtualClusterId:ListJobRuns'</a>,
--   <a>listJobRuns_virtualClusterId</a> - The ID of the virtual cluster
--   for which to list the job run.
newListJobRuns :: Text -> ListJobRuns

-- | The states of the job run.
listJobRuns_states :: Lens' ListJobRuns (Maybe [JobRunState])

-- | The date and time after which the job runs were submitted.
listJobRuns_createdAfter :: Lens' ListJobRuns (Maybe UTCTime)

-- | The token for the next set of job runs to return.
listJobRuns_nextToken :: Lens' ListJobRuns (Maybe Text)

-- | The name of the job run.
listJobRuns_name :: Lens' ListJobRuns (Maybe Text)

-- | The maximum number of job runs that can be listed.
listJobRuns_maxResults :: Lens' ListJobRuns (Maybe Int)

-- | The date and time before which the job runs were submitted.
listJobRuns_createdBefore :: Lens' ListJobRuns (Maybe UTCTime)

-- | The ID of the virtual cluster for which to list the job run.
listJobRuns_virtualClusterId :: Lens' ListJobRuns Text

-- | <i>See:</i> <a>newListJobRunsResponse</a> smart constructor.
data ListJobRunsResponse
ListJobRunsResponse' :: Maybe Text -> Maybe [JobRun] -> Int -> ListJobRunsResponse

-- | This output displays the token for the next set of job runs.
[$sel:nextToken:ListJobRunsResponse'] :: ListJobRunsResponse -> Maybe Text

-- | This output lists information about the specified job runs.
[$sel:jobRuns:ListJobRunsResponse'] :: ListJobRunsResponse -> Maybe [JobRun]

-- | The response's http status code.
[$sel:httpStatus:ListJobRunsResponse'] :: ListJobRunsResponse -> Int

-- | Create a value of <a>ListJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>,
--   <a>listJobRunsResponse_nextToken</a> - This output displays the token
--   for the next set of job runs.
--   
--   <a>$sel:jobRuns:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_jobRuns</a> - This output lists information
--   about the specified job runs.
--   
--   <a>$sel:httpStatus:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_httpStatus</a> - The response's http status
--   code.
newListJobRunsResponse :: Int -> ListJobRunsResponse

-- | This output displays the token for the next set of job runs.
listJobRunsResponse_nextToken :: Lens' ListJobRunsResponse (Maybe Text)

-- | This output lists information about the specified job runs.
listJobRunsResponse_jobRuns :: Lens' ListJobRunsResponse (Maybe [JobRun])

-- | The response's http status code.
listJobRunsResponse_httpStatus :: Lens' ListJobRunsResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance GHC.Show.Show Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance GHC.Read.Read Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance GHC.Generics.Generic Network.AWS.EMRContainers.ListJobRuns.ListJobRunsResponse
instance GHC.Show.Show Network.AWS.EMRContainers.ListJobRuns.ListJobRunsResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.ListJobRuns.ListJobRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListJobRuns.ListJobRunsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.ListJobRuns.ListJobRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.ListJobRuns.ListJobRuns


-- | Displays detailed information about a specified virtual cluster.
--   Virtual cluster is a managed entity on Amazon EMR on EKS. You can
--   create, describe, list and delete virtual clusters. They do not
--   consume any additional resource in your system. A single virtual
--   cluster maps to a single Kubernetes namespace. Given this
--   relationship, you can model virtual clusters the same way you model
--   Kubernetes namespaces to meet your requirements.
module Network.AWS.EMRContainers.DescribeVirtualCluster

-- | <i>See:</i> <a>newDescribeVirtualCluster</a> smart constructor.
data DescribeVirtualCluster
DescribeVirtualCluster' :: Text -> DescribeVirtualCluster

-- | The ID of the virtual cluster that will be described.
[$sel:id:DescribeVirtualCluster'] :: DescribeVirtualCluster -> Text

-- | Create a value of <a>DescribeVirtualCluster</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeVirtualCluster'</a>,
--   <a>describeVirtualCluster_id</a> - The ID of the virtual cluster that
--   will be described.
newDescribeVirtualCluster :: Text -> DescribeVirtualCluster

-- | The ID of the virtual cluster that will be described.
describeVirtualCluster_id :: Lens' DescribeVirtualCluster Text

-- | <i>See:</i> <a>newDescribeVirtualClusterResponse</a> smart
--   constructor.
data DescribeVirtualClusterResponse
DescribeVirtualClusterResponse' :: Maybe VirtualCluster -> Int -> DescribeVirtualClusterResponse

-- | This output displays information about the specified virtual cluster.
[$sel:virtualCluster:DescribeVirtualClusterResponse'] :: DescribeVirtualClusterResponse -> Maybe VirtualCluster

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualClusterResponse'] :: DescribeVirtualClusterResponse -> Int

-- | Create a value of <a>DescribeVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualCluster:DescribeVirtualClusterResponse'</a>,
--   <a>describeVirtualClusterResponse_virtualCluster</a> - This output
--   displays information about the specified virtual cluster.
--   
--   <a>$sel:httpStatus:DescribeVirtualClusterResponse'</a>,
--   <a>describeVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newDescribeVirtualClusterResponse :: Int -> DescribeVirtualClusterResponse

-- | This output displays information about the specified virtual cluster.
describeVirtualClusterResponse_virtualCluster :: Lens' DescribeVirtualClusterResponse (Maybe VirtualCluster)

-- | The response's http status code.
describeVirtualClusterResponse_httpStatus :: Lens' DescribeVirtualClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance GHC.Read.Read Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualClusterResponse
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualClusterResponse
instance GHC.Read.Read Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualClusterResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.DescribeVirtualCluster.DescribeVirtualCluster


-- | Displays detailed information about a managed endpoint. A managed
--   endpoint is a gateway that connects EMR Studio to Amazon EMR on EKS so
--   that EMR Studio can communicate with your virtual cluster.
module Network.AWS.EMRContainers.DescribeManagedEndpoint

-- | <i>See:</i> <a>newDescribeManagedEndpoint</a> smart constructor.
data DescribeManagedEndpoint
DescribeManagedEndpoint' :: Text -> Text -> DescribeManagedEndpoint

-- | This output displays ID of the managed endpoint.
[$sel:id:DescribeManagedEndpoint'] :: DescribeManagedEndpoint -> Text

-- | The ID of the endpoint's virtual cluster.
[$sel:virtualClusterId:DescribeManagedEndpoint'] :: DescribeManagedEndpoint -> Text

-- | Create a value of <a>DescribeManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeManagedEndpoint'</a>,
--   <a>describeManagedEndpoint_id</a> - This output displays ID of the
--   managed endpoint.
--   
--   <a>$sel:virtualClusterId:DescribeManagedEndpoint'</a>,
--   <a>describeManagedEndpoint_virtualClusterId</a> - The ID of the
--   endpoint's virtual cluster.
newDescribeManagedEndpoint :: Text -> Text -> DescribeManagedEndpoint

-- | This output displays ID of the managed endpoint.
describeManagedEndpoint_id :: Lens' DescribeManagedEndpoint Text

-- | The ID of the endpoint's virtual cluster.
describeManagedEndpoint_virtualClusterId :: Lens' DescribeManagedEndpoint Text

-- | <i>See:</i> <a>newDescribeManagedEndpointResponse</a> smart
--   constructor.
data DescribeManagedEndpointResponse
DescribeManagedEndpointResponse' :: Maybe Endpoint -> Int -> DescribeManagedEndpointResponse

-- | This output displays information about a managed endpoint.
[$sel:endpoint:DescribeManagedEndpointResponse'] :: DescribeManagedEndpointResponse -> Maybe Endpoint

-- | The response's http status code.
[$sel:httpStatus:DescribeManagedEndpointResponse'] :: DescribeManagedEndpointResponse -> Int

-- | Create a value of <a>DescribeManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:DescribeManagedEndpointResponse'</a>,
--   <a>describeManagedEndpointResponse_endpoint</a> - This output displays
--   information about a managed endpoint.
--   
--   <a>$sel:httpStatus:DescribeManagedEndpointResponse'</a>,
--   <a>describeManagedEndpointResponse_httpStatus</a> - The response's
--   http status code.
newDescribeManagedEndpointResponse :: Int -> DescribeManagedEndpointResponse

-- | This output displays information about a managed endpoint.
describeManagedEndpointResponse_endpoint :: Lens' DescribeManagedEndpointResponse (Maybe Endpoint)

-- | The response's http status code.
describeManagedEndpointResponse_httpStatus :: Lens' DescribeManagedEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance GHC.Read.Read Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpointResponse
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpointResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.DescribeManagedEndpoint.DescribeManagedEndpoint


-- | Displays detailed information about a job run. A job run is a unit of
--   work, such as a Spark jar, PySpark script, or SparkSQL query, that you
--   submit to Amazon EMR on EKS.
module Network.AWS.EMRContainers.DescribeJobRun

-- | <i>See:</i> <a>newDescribeJobRun</a> smart constructor.
data DescribeJobRun
DescribeJobRun' :: Text -> Text -> DescribeJobRun

-- | The ID of the job run request.
[$sel:id:DescribeJobRun'] :: DescribeJobRun -> Text

-- | The ID of the virtual cluster for which the job run is submitted.
[$sel:virtualClusterId:DescribeJobRun'] :: DescribeJobRun -> Text

-- | Create a value of <a>DescribeJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeJobRun'</a>, <a>describeJobRun_id</a> - The ID of
--   the job run request.
--   
--   <a>$sel:virtualClusterId:DescribeJobRun'</a>,
--   <a>describeJobRun_virtualClusterId</a> - The ID of the virtual cluster
--   for which the job run is submitted.
newDescribeJobRun :: Text -> Text -> DescribeJobRun

-- | The ID of the job run request.
describeJobRun_id :: Lens' DescribeJobRun Text

-- | The ID of the virtual cluster for which the job run is submitted.
describeJobRun_virtualClusterId :: Lens' DescribeJobRun Text

-- | <i>See:</i> <a>newDescribeJobRunResponse</a> smart constructor.
data DescribeJobRunResponse
DescribeJobRunResponse' :: Maybe JobRun -> Int -> DescribeJobRunResponse

-- | The output displays information about a job run.
[$sel:jobRun:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Maybe JobRun

-- | The response's http status code.
[$sel:httpStatus:DescribeJobRunResponse'] :: DescribeJobRunResponse -> Int

-- | Create a value of <a>DescribeJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRun:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobRun</a> - The output displays information
--   about a job run.
--   
--   <a>$sel:httpStatus:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobRunResponse :: Int -> DescribeJobRunResponse

-- | The output displays information about a job run.
describeJobRunResponse_jobRun :: Lens' DescribeJobRunResponse (Maybe JobRun)

-- | The response's http status code.
describeJobRunResponse_httpStatus :: Lens' DescribeJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance GHC.Read.Read Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance GHC.Generics.Generic Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRunResponse
instance GHC.Show.Show Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRunResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.DescribeJobRun.DescribeJobRun


-- | Deletes a virtual cluster. Virtual cluster is a managed entity on
--   Amazon EMR on EKS. You can create, describe, list and delete virtual
--   clusters. They do not consume any additional resource in your system.
--   A single virtual cluster maps to a single Kubernetes namespace. Given
--   this relationship, you can model virtual clusters the same way you
--   model Kubernetes namespaces to meet your requirements.
module Network.AWS.EMRContainers.DeleteVirtualCluster

-- | <i>See:</i> <a>newDeleteVirtualCluster</a> smart constructor.
data DeleteVirtualCluster
DeleteVirtualCluster' :: Text -> DeleteVirtualCluster

-- | The ID of the virtual cluster that will be deleted.
[$sel:id:DeleteVirtualCluster'] :: DeleteVirtualCluster -> Text

-- | Create a value of <a>DeleteVirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteVirtualCluster'</a>, <a>deleteVirtualCluster_id</a> -
--   The ID of the virtual cluster that will be deleted.
newDeleteVirtualCluster :: Text -> DeleteVirtualCluster

-- | The ID of the virtual cluster that will be deleted.
deleteVirtualCluster_id :: Lens' DeleteVirtualCluster Text

-- | <i>See:</i> <a>newDeleteVirtualClusterResponse</a> smart constructor.
data DeleteVirtualClusterResponse
DeleteVirtualClusterResponse' :: Maybe Text -> Int -> DeleteVirtualClusterResponse

-- | This output contains the ID of the virtual cluster that will be
--   deleted.
[$sel:id:DeleteVirtualClusterResponse'] :: DeleteVirtualClusterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualClusterResponse'] :: DeleteVirtualClusterResponse -> Int

-- | Create a value of <a>DeleteVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteVirtualCluster'</a>,
--   <a>deleteVirtualClusterResponse_id</a> - This output contains the ID
--   of the virtual cluster that will be deleted.
--   
--   <a>$sel:httpStatus:DeleteVirtualClusterResponse'</a>,
--   <a>deleteVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeleteVirtualClusterResponse :: Int -> DeleteVirtualClusterResponse

-- | This output contains the ID of the virtual cluster that will be
--   deleted.
deleteVirtualClusterResponse_id :: Lens' DeleteVirtualClusterResponse (Maybe Text)

-- | The response's http status code.
deleteVirtualClusterResponse_httpStatus :: Lens' DeleteVirtualClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance GHC.Show.Show Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance GHC.Read.Read Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance GHC.Classes.Eq Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance GHC.Generics.Generic Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualClusterResponse
instance GHC.Show.Show Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualClusterResponse
instance GHC.Read.Read Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualClusterResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.DeleteVirtualCluster.DeleteVirtualCluster


-- | Deletes a managed endpoint. A managed endpoint is a gateway that
--   connects EMR Studio to Amazon EMR on EKS so that EMR Studio can
--   communicate with your virtual cluster.
module Network.AWS.EMRContainers.DeleteManagedEndpoint

-- | <i>See:</i> <a>newDeleteManagedEndpoint</a> smart constructor.
data DeleteManagedEndpoint
DeleteManagedEndpoint' :: Text -> Text -> DeleteManagedEndpoint

-- | The ID of the managed endpoint.
[$sel:id:DeleteManagedEndpoint'] :: DeleteManagedEndpoint -> Text

-- | The ID of the endpoint's virtual cluster.
[$sel:virtualClusterId:DeleteManagedEndpoint'] :: DeleteManagedEndpoint -> Text

-- | Create a value of <a>DeleteManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteManagedEndpoint'</a>, <a>deleteManagedEndpoint_id</a>
--   - The ID of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpoint_virtualClusterId</a> - The ID of the
--   endpoint's virtual cluster.
newDeleteManagedEndpoint :: Text -> Text -> DeleteManagedEndpoint

-- | The ID of the managed endpoint.
deleteManagedEndpoint_id :: Lens' DeleteManagedEndpoint Text

-- | The ID of the endpoint's virtual cluster.
deleteManagedEndpoint_virtualClusterId :: Lens' DeleteManagedEndpoint Text

-- | <i>See:</i> <a>newDeleteManagedEndpointResponse</a> smart constructor.
data DeleteManagedEndpointResponse
DeleteManagedEndpointResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteManagedEndpointResponse

-- | The output displays the ID of the managed endpoint.
[$sel:id:DeleteManagedEndpointResponse'] :: DeleteManagedEndpointResponse -> Maybe Text

-- | The output displays the ID of the endpoint's virtual cluster.
[$sel:virtualClusterId:DeleteManagedEndpointResponse'] :: DeleteManagedEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteManagedEndpointResponse'] :: DeleteManagedEndpointResponse -> Int

-- | Create a value of <a>DeleteManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpointResponse_id</a> - The output displays the ID
--   of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpointResponse_virtualClusterId</a> - The output
--   displays the ID of the endpoint's virtual cluster.
--   
--   <a>$sel:httpStatus:DeleteManagedEndpointResponse'</a>,
--   <a>deleteManagedEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteManagedEndpointResponse :: Int -> DeleteManagedEndpointResponse

-- | The output displays the ID of the managed endpoint.
deleteManagedEndpointResponse_id :: Lens' DeleteManagedEndpointResponse (Maybe Text)

-- | The output displays the ID of the endpoint's virtual cluster.
deleteManagedEndpointResponse_virtualClusterId :: Lens' DeleteManagedEndpointResponse (Maybe Text)

-- | The response's http status code.
deleteManagedEndpointResponse_httpStatus :: Lens' DeleteManagedEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance GHC.Show.Show Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance GHC.Read.Read Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance GHC.Classes.Eq Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance GHC.Generics.Generic Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpointResponse
instance GHC.Show.Show Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpointResponse
instance GHC.Read.Read Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpointResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.DeleteManagedEndpoint.DeleteManagedEndpoint


-- | Creates a virtual cluster. Virtual cluster is a managed entity on
--   Amazon EMR on EKS. You can create, describe, list and delete virtual
--   clusters. They do not consume any additional resource in your system.
--   A single virtual cluster maps to a single Kubernetes namespace. Given
--   this relationship, you can model virtual clusters the same way you
--   model Kubernetes namespaces to meet your requirements.
module Network.AWS.EMRContainers.CreateVirtualCluster

-- | <i>See:</i> <a>newCreateVirtualCluster</a> smart constructor.
data CreateVirtualCluster
CreateVirtualCluster' :: Maybe (HashMap Text Text) -> Text -> ContainerProvider -> Text -> CreateVirtualCluster

-- | The tags assigned to the virtual cluster.
[$sel:tags:CreateVirtualCluster'] :: CreateVirtualCluster -> Maybe (HashMap Text Text)

-- | The specified name of the virtual cluster.
[$sel:name:CreateVirtualCluster'] :: CreateVirtualCluster -> Text

-- | The container provider of the virtual cluster.
[$sel:containerProvider:CreateVirtualCluster'] :: CreateVirtualCluster -> ContainerProvider

-- | The client token of the virtual cluster.
[$sel:clientToken:CreateVirtualCluster'] :: CreateVirtualCluster -> Text

-- | Create a value of <a>CreateVirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_tags</a> - The tags assigned to the virtual
--   cluster.
--   
--   <a>$sel:name:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_name</a> - The specified name of the virtual
--   cluster.
--   
--   <a>$sel:containerProvider:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_containerProvider</a> - The container provider
--   of the virtual cluster.
--   
--   <a>$sel:clientToken:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_clientToken</a> - The client token of the
--   virtual cluster.
newCreateVirtualCluster :: Text -> ContainerProvider -> Text -> CreateVirtualCluster

-- | The tags assigned to the virtual cluster.
createVirtualCluster_tags :: Lens' CreateVirtualCluster (Maybe (HashMap Text Text))

-- | The specified name of the virtual cluster.
createVirtualCluster_name :: Lens' CreateVirtualCluster Text

-- | The container provider of the virtual cluster.
createVirtualCluster_containerProvider :: Lens' CreateVirtualCluster ContainerProvider

-- | The client token of the virtual cluster.
createVirtualCluster_clientToken :: Lens' CreateVirtualCluster Text

-- | <i>See:</i> <a>newCreateVirtualClusterResponse</a> smart constructor.
data CreateVirtualClusterResponse
CreateVirtualClusterResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateVirtualClusterResponse

-- | This output contains the ARN of virtual cluster.
[$sel:arn:CreateVirtualClusterResponse'] :: CreateVirtualClusterResponse -> Maybe Text

-- | This output contains the name of the virtual cluster.
[$sel:name:CreateVirtualClusterResponse'] :: CreateVirtualClusterResponse -> Maybe Text

-- | This output contains the virtual cluster ID.
[$sel:id:CreateVirtualClusterResponse'] :: CreateVirtualClusterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateVirtualClusterResponse'] :: CreateVirtualClusterResponse -> Int

-- | Create a value of <a>CreateVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_arn</a> - This output contains the ARN
--   of virtual cluster.
--   
--   <a>$sel:name:CreateVirtualCluster'</a>,
--   <a>createVirtualClusterResponse_name</a> - This output contains the
--   name of the virtual cluster.
--   
--   <a>$sel:id:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_id</a> - This output contains the
--   virtual cluster ID.
--   
--   <a>$sel:httpStatus:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newCreateVirtualClusterResponse :: Int -> CreateVirtualClusterResponse

-- | This output contains the ARN of virtual cluster.
createVirtualClusterResponse_arn :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | This output contains the name of the virtual cluster.
createVirtualClusterResponse_name :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | This output contains the virtual cluster ID.
createVirtualClusterResponse_id :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | The response's http status code.
createVirtualClusterResponse_httpStatus :: Lens' CreateVirtualClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance GHC.Show.Show Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance GHC.Read.Read Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance GHC.Classes.Eq Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance GHC.Generics.Generic Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualClusterResponse
instance GHC.Show.Show Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualClusterResponse
instance GHC.Read.Read Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualClusterResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.CreateVirtualCluster.CreateVirtualCluster


-- | Creates a managed endpoint. A managed endpoint is a gateway that
--   connects EMR Studio to Amazon EMR on EKS so that EMR Studio can
--   communicate with your virtual cluster.
module Network.AWS.EMRContainers.CreateManagedEndpoint

-- | <i>See:</i> <a>newCreateManagedEndpoint</a> smart constructor.
data CreateManagedEndpoint
CreateManagedEndpoint' :: Maybe ConfigurationOverrides -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> Text -> Text -> CreateManagedEndpoint

-- | The configuration settings that will be used to override existing
--   configurations.
[$sel:configurationOverrides:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Maybe ConfigurationOverrides

-- | The tags of the managed endpoint.
[$sel:tags:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Maybe (HashMap Text Text)

-- | The name of the managed endpoint.
[$sel:name:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The ID of the virtual cluster for which a managed endpoint is created.
[$sel:virtualClusterId:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The type of the managed endpoint.
[$sel:type':CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The Amazon EMR release version.
[$sel:releaseLabel:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The ARN of the execution role.
[$sel:executionRoleArn:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The certificate ARN of the managed endpoint.
[$sel:certificateArn:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | The client idempotency token for this create call.
[$sel:clientToken:CreateManagedEndpoint'] :: CreateManagedEndpoint -> Text

-- | Create a value of <a>CreateManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationOverrides:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_configurationOverrides</a> - The
--   configuration settings that will be used to override existing
--   configurations.
--   
--   <a>$sel:tags:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_tags</a> - The tags of the managed endpoint.
--   
--   <a>$sel:name:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_name</a> - The name of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_virtualClusterId</a> - The ID of the virtual
--   cluster for which a managed endpoint is created.
--   
--   <a>$sel:type':CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_type</a> - The type of the managed endpoint.
--   
--   <a>$sel:releaseLabel:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_releaseLabel</a> - The Amazon EMR release
--   version.
--   
--   <a>$sel:executionRoleArn:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_executionRoleArn</a> - The ARN of the
--   execution role.
--   
--   <a>$sel:certificateArn:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_certificateArn</a> - The certificate ARN of
--   the managed endpoint.
--   
--   <a>$sel:clientToken:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_clientToken</a> - The client idempotency
--   token for this create call.
newCreateManagedEndpoint :: Text -> Text -> Text -> Text -> Text -> Text -> Text -> CreateManagedEndpoint

-- | The configuration settings that will be used to override existing
--   configurations.
createManagedEndpoint_configurationOverrides :: Lens' CreateManagedEndpoint (Maybe ConfigurationOverrides)

-- | The tags of the managed endpoint.
createManagedEndpoint_tags :: Lens' CreateManagedEndpoint (Maybe (HashMap Text Text))

-- | The name of the managed endpoint.
createManagedEndpoint_name :: Lens' CreateManagedEndpoint Text

-- | The ID of the virtual cluster for which a managed endpoint is created.
createManagedEndpoint_virtualClusterId :: Lens' CreateManagedEndpoint Text

-- | The type of the managed endpoint.
createManagedEndpoint_type :: Lens' CreateManagedEndpoint Text

-- | The Amazon EMR release version.
createManagedEndpoint_releaseLabel :: Lens' CreateManagedEndpoint Text

-- | The ARN of the execution role.
createManagedEndpoint_executionRoleArn :: Lens' CreateManagedEndpoint Text

-- | The certificate ARN of the managed endpoint.
createManagedEndpoint_certificateArn :: Lens' CreateManagedEndpoint Text

-- | The client idempotency token for this create call.
createManagedEndpoint_clientToken :: Lens' CreateManagedEndpoint Text

-- | <i>See:</i> <a>newCreateManagedEndpointResponse</a> smart constructor.
data CreateManagedEndpointResponse
CreateManagedEndpointResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateManagedEndpointResponse

-- | The output contains the ARN of the managed endpoint.
[$sel:arn:CreateManagedEndpointResponse'] :: CreateManagedEndpointResponse -> Maybe Text

-- | The output contains the name of the managed endpoint.
[$sel:name:CreateManagedEndpointResponse'] :: CreateManagedEndpointResponse -> Maybe Text

-- | The output contains the ID of the managed endpoint.
[$sel:id:CreateManagedEndpointResponse'] :: CreateManagedEndpointResponse -> Maybe Text

-- | The output contains the ID of the virtual cluster.
[$sel:virtualClusterId:CreateManagedEndpointResponse'] :: CreateManagedEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateManagedEndpointResponse'] :: CreateManagedEndpointResponse -> Int

-- | Create a value of <a>CreateManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_arn</a> - The output contains the ARN
--   of the managed endpoint.
--   
--   <a>$sel:name:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpointResponse_name</a> - The output contains the
--   name of the managed endpoint.
--   
--   <a>$sel:id:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_id</a> - The output contains the ID
--   of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpointResponse_virtualClusterId</a> - The output
--   contains the ID of the virtual cluster.
--   
--   <a>$sel:httpStatus:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateManagedEndpointResponse :: Int -> CreateManagedEndpointResponse

-- | The output contains the ARN of the managed endpoint.
createManagedEndpointResponse_arn :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the name of the managed endpoint.
createManagedEndpointResponse_name :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the ID of the managed endpoint.
createManagedEndpointResponse_id :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the ID of the virtual cluster.
createManagedEndpointResponse_virtualClusterId :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The response's http status code.
createManagedEndpointResponse_httpStatus :: Lens' CreateManagedEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance GHC.Show.Show Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance GHC.Classes.Eq Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance GHC.Generics.Generic Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpointResponse
instance GHC.Show.Show Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpointResponse
instance GHC.Read.Read Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpointResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.CreateManagedEndpoint.CreateManagedEndpoint


-- | Cancels a job run. A job run is a unit of work, such as a Spark jar,
--   PySpark script, or SparkSQL query, that you submit to Amazon EMR on
--   EKS.
module Network.AWS.EMRContainers.CancelJobRun

-- | <i>See:</i> <a>newCancelJobRun</a> smart constructor.
data CancelJobRun
CancelJobRun' :: Text -> Text -> CancelJobRun

-- | The ID of the job run to cancel.
[$sel:id:CancelJobRun'] :: CancelJobRun -> Text

-- | The ID of the virtual cluster for which the job run will be canceled.
[$sel:virtualClusterId:CancelJobRun'] :: CancelJobRun -> Text

-- | Create a value of <a>CancelJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:CancelJobRun'</a>, <a>cancelJobRun_id</a> - The ID of the
--   job run to cancel.
--   
--   <a>$sel:virtualClusterId:CancelJobRun'</a>,
--   <a>cancelJobRun_virtualClusterId</a> - The ID of the virtual cluster
--   for which the job run will be canceled.
newCancelJobRun :: Text -> Text -> CancelJobRun

-- | The ID of the job run to cancel.
cancelJobRun_id :: Lens' CancelJobRun Text

-- | The ID of the virtual cluster for which the job run will be canceled.
cancelJobRun_virtualClusterId :: Lens' CancelJobRun Text

-- | <i>See:</i> <a>newCancelJobRunResponse</a> smart constructor.
data CancelJobRunResponse
CancelJobRunResponse' :: Maybe Text -> Maybe Text -> Int -> CancelJobRunResponse

-- | The output contains the ID of the cancelled job run.
[$sel:id:CancelJobRunResponse'] :: CancelJobRunResponse -> Maybe Text

-- | The output contains the virtual cluster ID for which the job run is
--   cancelled.
[$sel:virtualClusterId:CancelJobRunResponse'] :: CancelJobRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelJobRunResponse'] :: CancelJobRunResponse -> Int

-- | Create a value of <a>CancelJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:CancelJobRun'</a>, <a>cancelJobRunResponse_id</a> - The
--   output contains the ID of the cancelled job run.
--   
--   <a>$sel:virtualClusterId:CancelJobRun'</a>,
--   <a>cancelJobRunResponse_virtualClusterId</a> - The output contains the
--   virtual cluster ID for which the job run is cancelled.
--   
--   <a>$sel:httpStatus:CancelJobRunResponse'</a>,
--   <a>cancelJobRunResponse_httpStatus</a> - The response's http status
--   code.
newCancelJobRunResponse :: Int -> CancelJobRunResponse

-- | The output contains the ID of the cancelled job run.
cancelJobRunResponse_id :: Lens' CancelJobRunResponse (Maybe Text)

-- | The output contains the virtual cluster ID for which the job run is
--   cancelled.
cancelJobRunResponse_virtualClusterId :: Lens' CancelJobRunResponse (Maybe Text)

-- | The response's http status code.
cancelJobRunResponse_httpStatus :: Lens' CancelJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance GHC.Show.Show Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance GHC.Read.Read Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance GHC.Classes.Eq Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance GHC.Generics.Generic Network.AWS.EMRContainers.CancelJobRun.CancelJobRunResponse
instance GHC.Show.Show Network.AWS.EMRContainers.CancelJobRun.CancelJobRunResponse
instance GHC.Read.Read Network.AWS.EMRContainers.CancelJobRun.CancelJobRunResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.CancelJobRun.CancelJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CancelJobRun.CancelJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.CancelJobRun.CancelJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.CancelJobRun.CancelJobRun


-- | Removes tags from resources.
module Network.AWS.EMRContainers.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of resources.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys of the resources.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of resources.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the resources.
newUntagResource :: Text -> UntagResource

-- | The ARN of resources.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the resources.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EMRContainers.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.EMRContainers.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.EMRContainers.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.EMRContainers.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.EMRContainers.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.EMRContainers.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.EMRContainers.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.EMRContainers.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EMRContainers.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EMRContainers.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.EMRContainers.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EMRContainers.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EMRContainers.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EMRContainers.UntagResource.UntagResource


module Network.AWS.EMRContainers.Lens

-- | The states of the managed endpoints.
listManagedEndpoints_states :: Lens' ListManagedEndpoints (Maybe [EndpointState])

-- | The date and time after which the endpoints are created.
listManagedEndpoints_createdAfter :: Lens' ListManagedEndpoints (Maybe UTCTime)

-- | The types of the managed endpoints.
listManagedEndpoints_types :: Lens' ListManagedEndpoints (Maybe [Text])

-- | The token for the next set of managed endpoints to return.
listManagedEndpoints_nextToken :: Lens' ListManagedEndpoints (Maybe Text)

-- | The maximum number of managed endpoints that can be listed.
listManagedEndpoints_maxResults :: Lens' ListManagedEndpoints (Maybe Int)

-- | The date and time before which the endpoints are created.
listManagedEndpoints_createdBefore :: Lens' ListManagedEndpoints (Maybe UTCTime)

-- | The ID of the virtual cluster.
listManagedEndpoints_virtualClusterId :: Lens' ListManagedEndpoints Text

-- | The token for the next set of endpoints to return.
listManagedEndpointsResponse_nextToken :: Lens' ListManagedEndpointsResponse (Maybe Text)

-- | The managed endpoints to be listed.
listManagedEndpointsResponse_endpoints :: Lens' ListManagedEndpointsResponse (Maybe [Endpoint])

-- | The response's http status code.
listManagedEndpointsResponse_httpStatus :: Lens' ListManagedEndpointsResponse Int

-- | The tags assigned to the virtual cluster.
createVirtualCluster_tags :: Lens' CreateVirtualCluster (Maybe (HashMap Text Text))

-- | The specified name of the virtual cluster.
createVirtualCluster_name :: Lens' CreateVirtualCluster Text

-- | The container provider of the virtual cluster.
createVirtualCluster_containerProvider :: Lens' CreateVirtualCluster ContainerProvider

-- | The client token of the virtual cluster.
createVirtualCluster_clientToken :: Lens' CreateVirtualCluster Text

-- | This output contains the ARN of virtual cluster.
createVirtualClusterResponse_arn :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | This output contains the name of the virtual cluster.
createVirtualClusterResponse_name :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | This output contains the virtual cluster ID.
createVirtualClusterResponse_id :: Lens' CreateVirtualClusterResponse (Maybe Text)

-- | The response's http status code.
createVirtualClusterResponse_httpStatus :: Lens' CreateVirtualClusterResponse Int

-- | The ID of the virtual cluster that will be deleted.
deleteVirtualCluster_id :: Lens' DeleteVirtualCluster Text

-- | This output contains the ID of the virtual cluster that will be
--   deleted.
deleteVirtualClusterResponse_id :: Lens' DeleteVirtualClusterResponse (Maybe Text)

-- | The response's http status code.
deleteVirtualClusterResponse_httpStatus :: Lens' DeleteVirtualClusterResponse Int

-- | The configuration settings that will be used to override existing
--   configurations.
createManagedEndpoint_configurationOverrides :: Lens' CreateManagedEndpoint (Maybe ConfigurationOverrides)

-- | The tags of the managed endpoint.
createManagedEndpoint_tags :: Lens' CreateManagedEndpoint (Maybe (HashMap Text Text))

-- | The name of the managed endpoint.
createManagedEndpoint_name :: Lens' CreateManagedEndpoint Text

-- | The ID of the virtual cluster for which a managed endpoint is created.
createManagedEndpoint_virtualClusterId :: Lens' CreateManagedEndpoint Text

-- | The type of the managed endpoint.
createManagedEndpoint_type :: Lens' CreateManagedEndpoint Text

-- | The Amazon EMR release version.
createManagedEndpoint_releaseLabel :: Lens' CreateManagedEndpoint Text

-- | The ARN of the execution role.
createManagedEndpoint_executionRoleArn :: Lens' CreateManagedEndpoint Text

-- | The certificate ARN of the managed endpoint.
createManagedEndpoint_certificateArn :: Lens' CreateManagedEndpoint Text

-- | The client idempotency token for this create call.
createManagedEndpoint_clientToken :: Lens' CreateManagedEndpoint Text

-- | The output contains the ARN of the managed endpoint.
createManagedEndpointResponse_arn :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the name of the managed endpoint.
createManagedEndpointResponse_name :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the ID of the managed endpoint.
createManagedEndpointResponse_id :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The output contains the ID of the virtual cluster.
createManagedEndpointResponse_virtualClusterId :: Lens' CreateManagedEndpointResponse (Maybe Text)

-- | The response's http status code.
createManagedEndpointResponse_httpStatus :: Lens' CreateManagedEndpointResponse Int

-- | The ARN of tagged resources.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags assigned to resources.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ID of the job run to cancel.
cancelJobRun_id :: Lens' CancelJobRun Text

-- | The ID of the virtual cluster for which the job run will be canceled.
cancelJobRun_virtualClusterId :: Lens' CancelJobRun Text

-- | The output contains the ID of the cancelled job run.
cancelJobRunResponse_id :: Lens' CancelJobRunResponse (Maybe Text)

-- | The output contains the virtual cluster ID for which the job run is
--   cancelled.
cancelJobRunResponse_virtualClusterId :: Lens' CancelJobRunResponse (Maybe Text)

-- | The response's http status code.
cancelJobRunResponse_httpStatus :: Lens' CancelJobRunResponse Int

-- | The ID of the managed endpoint.
deleteManagedEndpoint_id :: Lens' DeleteManagedEndpoint Text

-- | The ID of the endpoint's virtual cluster.
deleteManagedEndpoint_virtualClusterId :: Lens' DeleteManagedEndpoint Text

-- | The output displays the ID of the managed endpoint.
deleteManagedEndpointResponse_id :: Lens' DeleteManagedEndpointResponse (Maybe Text)

-- | The output displays the ID of the endpoint's virtual cluster.
deleteManagedEndpointResponse_virtualClusterId :: Lens' DeleteManagedEndpointResponse (Maybe Text)

-- | The response's http status code.
deleteManagedEndpointResponse_httpStatus :: Lens' DeleteManagedEndpointResponse Int

-- | The states of the job run.
listJobRuns_states :: Lens' ListJobRuns (Maybe [JobRunState])

-- | The date and time after which the job runs were submitted.
listJobRuns_createdAfter :: Lens' ListJobRuns (Maybe UTCTime)

-- | The token for the next set of job runs to return.
listJobRuns_nextToken :: Lens' ListJobRuns (Maybe Text)

-- | The name of the job run.
listJobRuns_name :: Lens' ListJobRuns (Maybe Text)

-- | The maximum number of job runs that can be listed.
listJobRuns_maxResults :: Lens' ListJobRuns (Maybe Int)

-- | The date and time before which the job runs were submitted.
listJobRuns_createdBefore :: Lens' ListJobRuns (Maybe UTCTime)

-- | The ID of the virtual cluster for which to list the job run.
listJobRuns_virtualClusterId :: Lens' ListJobRuns Text

-- | This output displays the token for the next set of job runs.
listJobRunsResponse_nextToken :: Lens' ListJobRunsResponse (Maybe Text)

-- | This output lists information about the specified job runs.
listJobRunsResponse_jobRuns :: Lens' ListJobRunsResponse (Maybe [JobRun])

-- | The response's http status code.
listJobRunsResponse_httpStatus :: Lens' ListJobRunsResponse Int

-- | The states of the requested virtual clusters.
listVirtualClusters_states :: Lens' ListVirtualClusters (Maybe [VirtualClusterState])

-- | The date and time after which the virtual clusters are created.
listVirtualClusters_createdAfter :: Lens' ListVirtualClusters (Maybe UTCTime)

-- | The container provider type of the virtual cluster. EKS is the only
--   supported type as of now.
listVirtualClusters_containerProviderType :: Lens' ListVirtualClusters (Maybe ContainerProviderType)

-- | The token for the next set of virtual clusters to return.
listVirtualClusters_nextToken :: Lens' ListVirtualClusters (Maybe Text)

-- | The container provider ID of the virtual cluster.
listVirtualClusters_containerProviderId :: Lens' ListVirtualClusters (Maybe Text)

-- | The maximum number of virtual clusters that can be listed.
listVirtualClusters_maxResults :: Lens' ListVirtualClusters (Maybe Int)

-- | The date and time before which the virtual clusters are created.
listVirtualClusters_createdBefore :: Lens' ListVirtualClusters (Maybe UTCTime)

-- | This output displays the token for the next set of virtual clusters.
listVirtualClustersResponse_nextToken :: Lens' ListVirtualClustersResponse (Maybe Text)

-- | This output lists the specified virtual clusters.
listVirtualClustersResponse_virtualClusters :: Lens' ListVirtualClustersResponse (Maybe [VirtualCluster])

-- | The response's http status code.
listVirtualClustersResponse_httpStatus :: Lens' ListVirtualClustersResponse Int

-- | The ARN of resources.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags assigned to resources.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | This output displays ID of the managed endpoint.
describeManagedEndpoint_id :: Lens' DescribeManagedEndpoint Text

-- | The ID of the endpoint's virtual cluster.
describeManagedEndpoint_virtualClusterId :: Lens' DescribeManagedEndpoint Text

-- | This output displays information about a managed endpoint.
describeManagedEndpointResponse_endpoint :: Lens' DescribeManagedEndpointResponse (Maybe Endpoint)

-- | The response's http status code.
describeManagedEndpointResponse_httpStatus :: Lens' DescribeManagedEndpointResponse Int

-- | The ID of the job run request.
describeJobRun_id :: Lens' DescribeJobRun Text

-- | The ID of the virtual cluster for which the job run is submitted.
describeJobRun_virtualClusterId :: Lens' DescribeJobRun Text

-- | The output displays information about a job run.
describeJobRunResponse_jobRun :: Lens' DescribeJobRunResponse (Maybe JobRun)

-- | The response's http status code.
describeJobRunResponse_httpStatus :: Lens' DescribeJobRunResponse Int

-- | The ARN of resources.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the resources.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ID of the virtual cluster that will be described.
describeVirtualCluster_id :: Lens' DescribeVirtualCluster Text

-- | This output displays information about the specified virtual cluster.
describeVirtualClusterResponse_virtualCluster :: Lens' DescribeVirtualClusterResponse (Maybe VirtualCluster)

-- | The response's http status code.
describeVirtualClusterResponse_httpStatus :: Lens' DescribeVirtualClusterResponse Int

-- | The configuration overrides for the job run.
startJobRun_configurationOverrides :: Lens' StartJobRun (Maybe ConfigurationOverrides)

-- | The name of the job run.
startJobRun_name :: Lens' StartJobRun (Maybe Text)

-- | The tags assigned to job runs.
startJobRun_tags :: Lens' StartJobRun (Maybe (HashMap Text Text))

-- | The virtual cluster ID for which the job run request is submitted.
startJobRun_virtualClusterId :: Lens' StartJobRun Text

-- | The client idempotency token of the job run request.
startJobRun_clientToken :: Lens' StartJobRun Text

-- | The execution role ARN for the job run.
startJobRun_executionRoleArn :: Lens' StartJobRun Text

-- | The Amazon EMR release version to use for the job run.
startJobRun_releaseLabel :: Lens' StartJobRun Text

-- | The job driver for the job run.
startJobRun_jobDriver :: Lens' StartJobRun JobDriver

-- | This output lists the ARN of job run.
startJobRunResponse_arn :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the name of the started job run.
startJobRunResponse_name :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the started job run ID.
startJobRunResponse_id :: Lens' StartJobRunResponse (Maybe Text)

-- | This output displays the virtual cluster ID for which the job run was
--   submitted.
startJobRunResponse_virtualClusterId :: Lens' StartJobRunResponse (Maybe Text)

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int

-- | The specified name prefix for log streams.
cloudWatchMonitoringConfiguration_logStreamNamePrefix :: Lens' CloudWatchMonitoringConfiguration (Maybe Text)

-- | The name of the log group for log publishing.
cloudWatchMonitoringConfiguration_logGroupName :: Lens' CloudWatchMonitoringConfiguration Text

-- | A list of additional configurations to apply within a configuration
--   object.
configuration_configurations :: Lens' Configuration (Maybe [Configuration])

-- | A set of properties specified within a configuration classification.
configuration_properties :: Lens' Configuration (Maybe (HashMap Text Text))

-- | The classification within a configuration.
configuration_classification :: Lens' Configuration Text

-- | The configurations for monitoring.
configurationOverrides_monitoringConfiguration :: Lens' ConfigurationOverrides (Maybe MonitoringConfiguration)

-- | The configurations for the application running by the job run.
configurationOverrides_applicationConfiguration :: Lens' ConfigurationOverrides (Maybe [Configuration])

-- | The information about the EKS cluster.
containerInfo_eksInfo :: Lens' ContainerInfo (Maybe EksInfo)

-- | The information about the container cluster.
containerProvider_info :: Lens' ContainerProvider (Maybe ContainerInfo)

-- | The type of the container provider. EKS is the only supported type as
--   of now.
containerProvider_type :: Lens' ContainerProvider ContainerProviderType

-- | The ID of the container cluster.
containerProvider_id :: Lens' ContainerProvider Text

-- | The namespaces of the EKS cluster.
eksInfo_namespace :: Lens' EksInfo (Maybe Text)

-- | The reasons why the endpoint has failed.
endpoint_failureReason :: Lens' Endpoint (Maybe FailureReason)

-- | The state of the endpoint.
endpoint_state :: Lens' Endpoint (Maybe EndpointState)

-- | The ARN of the endpoint.
endpoint_arn :: Lens' Endpoint (Maybe Text)

-- | The date and time when the endpoint was created.
endpoint_createdAt :: Lens' Endpoint (Maybe UTCTime)

-- | The subnet IDs of the endpoint.
endpoint_subnetIds :: Lens' Endpoint (Maybe [Text])

-- | Additional details of the endpoint state.
endpoint_stateDetails :: Lens' Endpoint (Maybe Text)

-- | The certificate ARN of the endpoint.
endpoint_certificateArn :: Lens' Endpoint (Maybe Text)

-- | The execution role ARN of the endpoint.
endpoint_executionRoleArn :: Lens' Endpoint (Maybe Text)

-- | The security group configuration of the endpoint.
endpoint_securityGroup :: Lens' Endpoint (Maybe Text)

-- | The configuration settings that are used to override existing
--   configurations for endpoints.
endpoint_configurationOverrides :: Lens' Endpoint (Maybe ConfigurationOverrides)

-- | The name of the endpoint.
endpoint_name :: Lens' Endpoint (Maybe Text)

-- | The EMR release version to be used for the endpoint.
endpoint_releaseLabel :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint.
endpoint_id :: Lens' Endpoint (Maybe Text)

-- | The type of the endpoint.
endpoint_type :: Lens' Endpoint (Maybe Text)

-- | The server URL of the endpoint.
endpoint_serverUrl :: Lens' Endpoint (Maybe Text)

-- | The ID of the endpoint's virtual cluster.
endpoint_virtualClusterId :: Lens' Endpoint (Maybe Text)

-- | The tags of the endpoint.
endpoint_tags :: Lens' Endpoint (Maybe (HashMap Text Text))

-- | The job driver parameters specified for spark submit.
jobDriver_sparkSubmitJobDriver :: Lens' JobDriver (Maybe SparkSubmitJobDriver)

-- | The reasons why the job run has failed.
jobRun_failureReason :: Lens' JobRun (Maybe FailureReason)

-- | The state of the job run.
jobRun_state :: Lens' JobRun (Maybe JobRunState)

-- | The client token used to start a job run.
jobRun_clientToken :: Lens' JobRun (Maybe Text)

-- | The ARN of job run.
jobRun_arn :: Lens' JobRun (Maybe Text)

-- | The date and time when the job run was created.
jobRun_createdAt :: Lens' JobRun (Maybe UTCTime)

-- | Additional details of the job run state.
jobRun_stateDetails :: Lens' JobRun (Maybe Text)

-- | The user who created the job run.
jobRun_createdBy :: Lens' JobRun (Maybe Text)

-- | The execution role ARN of the job run.
jobRun_executionRoleArn :: Lens' JobRun (Maybe Text)

-- | Parameters of job driver for the job run.
jobRun_jobDriver :: Lens' JobRun (Maybe JobDriver)

-- | The configuration settings that are used to override default
--   configuration.
jobRun_configurationOverrides :: Lens' JobRun (Maybe ConfigurationOverrides)

-- | The date and time when the job run has finished.
jobRun_finishedAt :: Lens' JobRun (Maybe UTCTime)

-- | The name of the job run.
jobRun_name :: Lens' JobRun (Maybe Text)

-- | The release version of Amazon EMR.
jobRun_releaseLabel :: Lens' JobRun (Maybe Text)

-- | The ID of the job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The ID of the job run's virtual cluster.
jobRun_virtualClusterId :: Lens' JobRun (Maybe Text)

-- | The assigned tags of the job run.
jobRun_tags :: Lens' JobRun (Maybe (HashMap Text Text))

-- | Monitoring configurations for the persistent application UI.
monitoringConfiguration_persistentAppUI :: Lens' MonitoringConfiguration (Maybe PersistentAppUI)

-- | Amazon S3 configuration for monitoring log publishing.
monitoringConfiguration_s3MonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe S3MonitoringConfiguration)

-- | Monitoring configurations for CloudWatch.
monitoringConfiguration_cloudWatchMonitoringConfiguration :: Lens' MonitoringConfiguration (Maybe CloudWatchMonitoringConfiguration)

-- | Amazon S3 destination URI for log publishing.
s3MonitoringConfiguration_logUri :: Lens' S3MonitoringConfiguration Text

-- | The Spark submit parameters that are used for job runs.
sparkSubmitJobDriver_sparkSubmitParameters :: Lens' SparkSubmitJobDriver (Maybe Text)

-- | The arguments for job application.
sparkSubmitJobDriver_entryPointArguments :: Lens' SparkSubmitJobDriver (Maybe [Text])

-- | The entry point of job application.
sparkSubmitJobDriver_entryPoint :: Lens' SparkSubmitJobDriver Text

-- | The state of the virtual cluster.
virtualCluster_state :: Lens' VirtualCluster (Maybe VirtualClusterState)

-- | The ARN of the virtual cluster.
virtualCluster_arn :: Lens' VirtualCluster (Maybe Text)

-- | The date and time when the virtual cluster is created.
virtualCluster_createdAt :: Lens' VirtualCluster (Maybe UTCTime)

-- | The name of the virtual cluster.
virtualCluster_name :: Lens' VirtualCluster (Maybe Text)

-- | The ID of the virtual cluster.
virtualCluster_id :: Lens' VirtualCluster (Maybe Text)

-- | The container provider of the virtual cluster.
virtualCluster_containerProvider :: Lens' VirtualCluster (Maybe ContainerProvider)

-- | The assigned tags of the virtual cluster.
virtualCluster_tags :: Lens' VirtualCluster (Maybe (HashMap Text Text))


module Network.AWS.EMRContainers.Waiters


-- | Derived from API version <tt>2020-10-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon EMR on EKS provides a deployment option for Amazon EMR that
--   allows you to run open-source big data frameworks on Amazon Elastic
--   Kubernetes Service (Amazon EKS). With this deployment option, you can
--   focus on running analytics workloads while Amazon EMR on EKS builds,
--   configures, and manages containers for open-source applications. For
--   more information about Amazon EMR on EKS concepts and tasks, see
--   <a>What is Amazon EMR on EKS</a>.
--   
--   <i>Amazon EMR containers</i> is the API name for Amazon EMR on EKS.
--   The <tt>emr-containers</tt> prefix is used in the following scenarios:
--   
--   <ul>
--   <li>It is the prefix in the CLI commands for Amazon EMR on EKS. For
--   example, <tt>aws emr-containers start-job-run</tt>.</li>
--   <li>It is the prefix before IAM policy actions for Amazon EMR on EKS.
--   For example, <tt>"Action": [ "emr-containers:StartJobRun"]</tt>. For
--   more information, see <a>Policy actions for Amazon EMR on
--   EKS</a>.</li>
--   <li>It is the prefix used in Amazon EMR on EKS service endpoints. For
--   example, <tt>emr-containers.us-east-2.amazonaws.com</tt>. For more
--   information, see <a>Amazon EMR on EKS Service Endpoints</a>.</li>
--   </ul>
module Network.AWS.EMRContainers

-- | API version <tt>2020-10-01</tt> of the Amazon EMR Containers SDK
--   configuration.
defaultService :: Service

-- | There are invalid parameters in the client request.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This is an internal server exception.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListManagedEndpoints</a> smart constructor.
data ListManagedEndpoints
ListManagedEndpoints' :: Maybe [EndpointState] -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe POSIX -> Text -> ListManagedEndpoints

-- | Create a value of <a>ListManagedEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_states</a> - The states of the managed
--   endpoints.
--   
--   <a>$sel:createdAfter:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_createdAfter</a> - The date and time after
--   which the endpoints are created.
--   
--   <a>$sel:types:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_types</a> - The types of the managed
--   endpoints.
--   
--   <a>$sel:nextToken:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_nextToken</a> - The token for the next set of
--   managed endpoints to return.
--   
--   <a>$sel:maxResults:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_maxResults</a> - The maximum number of managed
--   endpoints that can be listed.
--   
--   <a>$sel:createdBefore:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_createdBefore</a> - The date and time before
--   which the endpoints are created.
--   
--   <a>$sel:virtualClusterId:ListManagedEndpoints'</a>,
--   <a>listManagedEndpoints_virtualClusterId</a> - The ID of the virtual
--   cluster.
newListManagedEndpoints :: Text -> ListManagedEndpoints

-- | <i>See:</i> <a>newListManagedEndpointsResponse</a> smart constructor.
data ListManagedEndpointsResponse
ListManagedEndpointsResponse' :: Maybe Text -> Maybe [Endpoint] -> Int -> ListManagedEndpointsResponse

-- | Create a value of <a>ListManagedEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListManagedEndpoints'</a>,
--   <a>listManagedEndpointsResponse_nextToken</a> - The token for the next
--   set of endpoints to return.
--   
--   <a>$sel:endpoints:ListManagedEndpointsResponse'</a>,
--   <a>listManagedEndpointsResponse_endpoints</a> - The managed endpoints
--   to be listed.
--   
--   <a>$sel:httpStatus:ListManagedEndpointsResponse'</a>,
--   <a>listManagedEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListManagedEndpointsResponse :: Int -> ListManagedEndpointsResponse

-- | <i>See:</i> <a>newCreateVirtualCluster</a> smart constructor.
data CreateVirtualCluster
CreateVirtualCluster' :: Maybe (HashMap Text Text) -> Text -> ContainerProvider -> Text -> CreateVirtualCluster

-- | Create a value of <a>CreateVirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_tags</a> - The tags assigned to the virtual
--   cluster.
--   
--   <a>$sel:name:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_name</a> - The specified name of the virtual
--   cluster.
--   
--   <a>$sel:containerProvider:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_containerProvider</a> - The container provider
--   of the virtual cluster.
--   
--   <a>$sel:clientToken:CreateVirtualCluster'</a>,
--   <a>createVirtualCluster_clientToken</a> - The client token of the
--   virtual cluster.
newCreateVirtualCluster :: Text -> ContainerProvider -> Text -> CreateVirtualCluster

-- | <i>See:</i> <a>newCreateVirtualClusterResponse</a> smart constructor.
data CreateVirtualClusterResponse
CreateVirtualClusterResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateVirtualClusterResponse

-- | Create a value of <a>CreateVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_arn</a> - This output contains the ARN
--   of virtual cluster.
--   
--   <a>$sel:name:CreateVirtualCluster'</a>,
--   <a>createVirtualClusterResponse_name</a> - This output contains the
--   name of the virtual cluster.
--   
--   <a>$sel:id:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_id</a> - This output contains the
--   virtual cluster ID.
--   
--   <a>$sel:httpStatus:CreateVirtualClusterResponse'</a>,
--   <a>createVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newCreateVirtualClusterResponse :: Int -> CreateVirtualClusterResponse

-- | <i>See:</i> <a>newDeleteVirtualCluster</a> smart constructor.
data DeleteVirtualCluster
DeleteVirtualCluster' :: Text -> DeleteVirtualCluster

-- | Create a value of <a>DeleteVirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteVirtualCluster'</a>, <a>deleteVirtualCluster_id</a> -
--   The ID of the virtual cluster that will be deleted.
newDeleteVirtualCluster :: Text -> DeleteVirtualCluster

-- | <i>See:</i> <a>newDeleteVirtualClusterResponse</a> smart constructor.
data DeleteVirtualClusterResponse
DeleteVirtualClusterResponse' :: Maybe Text -> Int -> DeleteVirtualClusterResponse

-- | Create a value of <a>DeleteVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteVirtualCluster'</a>,
--   <a>deleteVirtualClusterResponse_id</a> - This output contains the ID
--   of the virtual cluster that will be deleted.
--   
--   <a>$sel:httpStatus:DeleteVirtualClusterResponse'</a>,
--   <a>deleteVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeleteVirtualClusterResponse :: Int -> DeleteVirtualClusterResponse

-- | <i>See:</i> <a>newCreateManagedEndpoint</a> smart constructor.
data CreateManagedEndpoint
CreateManagedEndpoint' :: Maybe ConfigurationOverrides -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> Text -> Text -> Text -> CreateManagedEndpoint

-- | Create a value of <a>CreateManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationOverrides:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_configurationOverrides</a> - The
--   configuration settings that will be used to override existing
--   configurations.
--   
--   <a>$sel:tags:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_tags</a> - The tags of the managed endpoint.
--   
--   <a>$sel:name:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_name</a> - The name of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_virtualClusterId</a> - The ID of the virtual
--   cluster for which a managed endpoint is created.
--   
--   <a>$sel:type':CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_type</a> - The type of the managed endpoint.
--   
--   <a>$sel:releaseLabel:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_releaseLabel</a> - The Amazon EMR release
--   version.
--   
--   <a>$sel:executionRoleArn:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_executionRoleArn</a> - The ARN of the
--   execution role.
--   
--   <a>$sel:certificateArn:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_certificateArn</a> - The certificate ARN of
--   the managed endpoint.
--   
--   <a>$sel:clientToken:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpoint_clientToken</a> - The client idempotency
--   token for this create call.
newCreateManagedEndpoint :: Text -> Text -> Text -> Text -> Text -> Text -> Text -> CreateManagedEndpoint

-- | <i>See:</i> <a>newCreateManagedEndpointResponse</a> smart constructor.
data CreateManagedEndpointResponse
CreateManagedEndpointResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateManagedEndpointResponse

-- | Create a value of <a>CreateManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_arn</a> - The output contains the ARN
--   of the managed endpoint.
--   
--   <a>$sel:name:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpointResponse_name</a> - The output contains the
--   name of the managed endpoint.
--   
--   <a>$sel:id:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_id</a> - The output contains the ID
--   of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:CreateManagedEndpoint'</a>,
--   <a>createManagedEndpointResponse_virtualClusterId</a> - The output
--   contains the ID of the virtual cluster.
--   
--   <a>$sel:httpStatus:CreateManagedEndpointResponse'</a>,
--   <a>createManagedEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateManagedEndpointResponse :: Int -> CreateManagedEndpointResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of tagged resources.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags assigned to
--   resources.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCancelJobRun</a> smart constructor.
data CancelJobRun
CancelJobRun' :: Text -> Text -> CancelJobRun

-- | Create a value of <a>CancelJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:CancelJobRun'</a>, <a>cancelJobRun_id</a> - The ID of the
--   job run to cancel.
--   
--   <a>$sel:virtualClusterId:CancelJobRun'</a>,
--   <a>cancelJobRun_virtualClusterId</a> - The ID of the virtual cluster
--   for which the job run will be canceled.
newCancelJobRun :: Text -> Text -> CancelJobRun

-- | <i>See:</i> <a>newCancelJobRunResponse</a> smart constructor.
data CancelJobRunResponse
CancelJobRunResponse' :: Maybe Text -> Maybe Text -> Int -> CancelJobRunResponse

-- | Create a value of <a>CancelJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:CancelJobRun'</a>, <a>cancelJobRunResponse_id</a> - The
--   output contains the ID of the cancelled job run.
--   
--   <a>$sel:virtualClusterId:CancelJobRun'</a>,
--   <a>cancelJobRunResponse_virtualClusterId</a> - The output contains the
--   virtual cluster ID for which the job run is cancelled.
--   
--   <a>$sel:httpStatus:CancelJobRunResponse'</a>,
--   <a>cancelJobRunResponse_httpStatus</a> - The response's http status
--   code.
newCancelJobRunResponse :: Int -> CancelJobRunResponse

-- | <i>See:</i> <a>newDeleteManagedEndpoint</a> smart constructor.
data DeleteManagedEndpoint
DeleteManagedEndpoint' :: Text -> Text -> DeleteManagedEndpoint

-- | Create a value of <a>DeleteManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteManagedEndpoint'</a>, <a>deleteManagedEndpoint_id</a>
--   - The ID of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpoint_virtualClusterId</a> - The ID of the
--   endpoint's virtual cluster.
newDeleteManagedEndpoint :: Text -> Text -> DeleteManagedEndpoint

-- | <i>See:</i> <a>newDeleteManagedEndpointResponse</a> smart constructor.
data DeleteManagedEndpointResponse
DeleteManagedEndpointResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteManagedEndpointResponse

-- | Create a value of <a>DeleteManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpointResponse_id</a> - The output displays the ID
--   of the managed endpoint.
--   
--   <a>$sel:virtualClusterId:DeleteManagedEndpoint'</a>,
--   <a>deleteManagedEndpointResponse_virtualClusterId</a> - The output
--   displays the ID of the endpoint's virtual cluster.
--   
--   <a>$sel:httpStatus:DeleteManagedEndpointResponse'</a>,
--   <a>deleteManagedEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteManagedEndpointResponse :: Int -> DeleteManagedEndpointResponse

-- | <i>See:</i> <a>newListJobRuns</a> smart constructor.
data ListJobRuns
ListJobRuns' :: Maybe [JobRunState] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> Text -> ListJobRuns

-- | Create a value of <a>ListJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListJobRuns'</a>, <a>listJobRuns_states</a> - The
--   states of the job run.
--   
--   <a>$sel:createdAfter:ListJobRuns'</a>, <a>listJobRuns_createdAfter</a>
--   - The date and time after which the job runs were submitted.
--   
--   <a>$sel:nextToken:ListJobRuns'</a>, <a>listJobRuns_nextToken</a> - The
--   token for the next set of job runs to return.
--   
--   <a>$sel:name:ListJobRuns'</a>, <a>listJobRuns_name</a> - The name of
--   the job run.
--   
--   <a>$sel:maxResults:ListJobRuns'</a>, <a>listJobRuns_maxResults</a> -
--   The maximum number of job runs that can be listed.
--   
--   <a>$sel:createdBefore:ListJobRuns'</a>,
--   <a>listJobRuns_createdBefore</a> - The date and time before which the
--   job runs were submitted.
--   
--   <a>$sel:virtualClusterId:ListJobRuns'</a>,
--   <a>listJobRuns_virtualClusterId</a> - The ID of the virtual cluster
--   for which to list the job run.
newListJobRuns :: Text -> ListJobRuns

-- | <i>See:</i> <a>newListJobRunsResponse</a> smart constructor.
data ListJobRunsResponse
ListJobRunsResponse' :: Maybe Text -> Maybe [JobRun] -> Int -> ListJobRunsResponse

-- | Create a value of <a>ListJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobRuns'</a>,
--   <a>listJobRunsResponse_nextToken</a> - This output displays the token
--   for the next set of job runs.
--   
--   <a>$sel:jobRuns:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_jobRuns</a> - This output lists information
--   about the specified job runs.
--   
--   <a>$sel:httpStatus:ListJobRunsResponse'</a>,
--   <a>listJobRunsResponse_httpStatus</a> - The response's http status
--   code.
newListJobRunsResponse :: Int -> ListJobRunsResponse

-- | <i>See:</i> <a>newListVirtualClusters</a> smart constructor.
data ListVirtualClusters
ListVirtualClusters' :: Maybe [VirtualClusterState] -> Maybe POSIX -> Maybe ContainerProviderType -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> ListVirtualClusters

-- | Create a value of <a>ListVirtualClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_states</a> - The states of the requested
--   virtual clusters.
--   
--   <a>$sel:createdAfter:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_createdAfter</a> - The date and time after
--   which the virtual clusters are created.
--   
--   <a>$sel:containerProviderType:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_containerProviderType</a> - The container
--   provider type of the virtual cluster. EKS is the only supported type
--   as of now.
--   
--   <a>$sel:nextToken:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_nextToken</a> - The token for the next set of
--   virtual clusters to return.
--   
--   <a>$sel:containerProviderId:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_containerProviderId</a> - The container
--   provider ID of the virtual cluster.
--   
--   <a>$sel:maxResults:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_maxResults</a> - The maximum number of virtual
--   clusters that can be listed.
--   
--   <a>$sel:createdBefore:ListVirtualClusters'</a>,
--   <a>listVirtualClusters_createdBefore</a> - The date and time before
--   which the virtual clusters are created.
newListVirtualClusters :: ListVirtualClusters

-- | <i>See:</i> <a>newListVirtualClustersResponse</a> smart constructor.
data ListVirtualClustersResponse
ListVirtualClustersResponse' :: Maybe Text -> Maybe [VirtualCluster] -> Int -> ListVirtualClustersResponse

-- | Create a value of <a>ListVirtualClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualClusters'</a>,
--   <a>listVirtualClustersResponse_nextToken</a> - This output displays
--   the token for the next set of virtual clusters.
--   
--   <a>$sel:virtualClusters:ListVirtualClustersResponse'</a>,
--   <a>listVirtualClustersResponse_virtualClusters</a> - This output lists
--   the specified virtual clusters.
--   
--   <a>$sel:httpStatus:ListVirtualClustersResponse'</a>,
--   <a>listVirtualClustersResponse_httpStatus</a> - The response's http
--   status code.
newListVirtualClustersResponse :: Int -> ListVirtualClustersResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of resources.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags
--   assigned to resources.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeManagedEndpoint</a> smart constructor.
data DescribeManagedEndpoint
DescribeManagedEndpoint' :: Text -> Text -> DescribeManagedEndpoint

-- | Create a value of <a>DescribeManagedEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeManagedEndpoint'</a>,
--   <a>describeManagedEndpoint_id</a> - This output displays ID of the
--   managed endpoint.
--   
--   <a>$sel:virtualClusterId:DescribeManagedEndpoint'</a>,
--   <a>describeManagedEndpoint_virtualClusterId</a> - The ID of the
--   endpoint's virtual cluster.
newDescribeManagedEndpoint :: Text -> Text -> DescribeManagedEndpoint

-- | <i>See:</i> <a>newDescribeManagedEndpointResponse</a> smart
--   constructor.
data DescribeManagedEndpointResponse
DescribeManagedEndpointResponse' :: Maybe Endpoint -> Int -> DescribeManagedEndpointResponse

-- | Create a value of <a>DescribeManagedEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:DescribeManagedEndpointResponse'</a>,
--   <a>describeManagedEndpointResponse_endpoint</a> - This output displays
--   information about a managed endpoint.
--   
--   <a>$sel:httpStatus:DescribeManagedEndpointResponse'</a>,
--   <a>describeManagedEndpointResponse_httpStatus</a> - The response's
--   http status code.
newDescribeManagedEndpointResponse :: Int -> DescribeManagedEndpointResponse

-- | <i>See:</i> <a>newDescribeJobRun</a> smart constructor.
data DescribeJobRun
DescribeJobRun' :: Text -> Text -> DescribeJobRun

-- | Create a value of <a>DescribeJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeJobRun'</a>, <a>describeJobRun_id</a> - The ID of
--   the job run request.
--   
--   <a>$sel:virtualClusterId:DescribeJobRun'</a>,
--   <a>describeJobRun_virtualClusterId</a> - The ID of the virtual cluster
--   for which the job run is submitted.
newDescribeJobRun :: Text -> Text -> DescribeJobRun

-- | <i>See:</i> <a>newDescribeJobRunResponse</a> smart constructor.
data DescribeJobRunResponse
DescribeJobRunResponse' :: Maybe JobRun -> Int -> DescribeJobRunResponse

-- | Create a value of <a>DescribeJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRun:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_jobRun</a> - The output displays information
--   about a job run.
--   
--   <a>$sel:httpStatus:DescribeJobRunResponse'</a>,
--   <a>describeJobRunResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobRunResponse :: Int -> DescribeJobRunResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of resources.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the resources.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDescribeVirtualCluster</a> smart constructor.
data DescribeVirtualCluster
DescribeVirtualCluster' :: Text -> DescribeVirtualCluster

-- | Create a value of <a>DescribeVirtualCluster</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DescribeVirtualCluster'</a>,
--   <a>describeVirtualCluster_id</a> - The ID of the virtual cluster that
--   will be described.
newDescribeVirtualCluster :: Text -> DescribeVirtualCluster

-- | <i>See:</i> <a>newDescribeVirtualClusterResponse</a> smart
--   constructor.
data DescribeVirtualClusterResponse
DescribeVirtualClusterResponse' :: Maybe VirtualCluster -> Int -> DescribeVirtualClusterResponse

-- | Create a value of <a>DescribeVirtualClusterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualCluster:DescribeVirtualClusterResponse'</a>,
--   <a>describeVirtualClusterResponse_virtualCluster</a> - This output
--   displays information about the specified virtual cluster.
--   
--   <a>$sel:httpStatus:DescribeVirtualClusterResponse'</a>,
--   <a>describeVirtualClusterResponse_httpStatus</a> - The response's http
--   status code.
newDescribeVirtualClusterResponse :: Int -> DescribeVirtualClusterResponse

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Maybe ConfigurationOverrides -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> JobDriver -> StartJobRun

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationOverrides:StartJobRun'</a>,
--   <a>startJobRun_configurationOverrides</a> - The configuration
--   overrides for the job run.
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRun_name</a> - The name of
--   the job run.
--   
--   <a>$sel:tags:StartJobRun'</a>, <a>startJobRun_tags</a> - The tags
--   assigned to job runs.
--   
--   <a>$sel:virtualClusterId:StartJobRun'</a>,
--   <a>startJobRun_virtualClusterId</a> - The virtual cluster ID for which
--   the job run request is submitted.
--   
--   <a>$sel:clientToken:StartJobRun'</a>, <a>startJobRun_clientToken</a> -
--   The client idempotency token of the job run request.
--   
--   <a>$sel:executionRoleArn:StartJobRun'</a>,
--   <a>startJobRun_executionRoleArn</a> - The execution role ARN for the
--   job run.
--   
--   <a>$sel:releaseLabel:StartJobRun'</a>, <a>startJobRun_releaseLabel</a>
--   - The Amazon EMR release version to use for the job run.
--   
--   <a>$sel:jobDriver:StartJobRun'</a>, <a>startJobRun_jobDriver</a> - The
--   job driver for the job run.
newStartJobRun :: Text -> Text -> Text -> Text -> JobDriver -> StartJobRun

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartJobRunResponse

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StartJobRunResponse'</a>, <a>startJobRunResponse_arn</a> -
--   This output lists the ARN of job run.
--   
--   <a>$sel:name:StartJobRun'</a>, <a>startJobRunResponse_name</a> - This
--   output displays the name of the started job run.
--   
--   <a>$sel:id:StartJobRunResponse'</a>, <a>startJobRunResponse_id</a> -
--   This output displays the started job run ID.
--   
--   <a>$sel:virtualClusterId:StartJobRun'</a>,
--   <a>startJobRunResponse_virtualClusterId</a> - This output displays the
--   virtual cluster ID for which the job run was submitted.
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
newStartJobRunResponse :: Int -> StartJobRunResponse
newtype ContainerProviderType
ContainerProviderType' :: Text -> ContainerProviderType
[fromContainerProviderType] :: ContainerProviderType -> Text
pattern ContainerProviderType_EKS :: ContainerProviderType
newtype EndpointState
EndpointState' :: Text -> EndpointState
[fromEndpointState] :: EndpointState -> Text
pattern EndpointState_ACTIVE :: EndpointState
pattern EndpointState_CREATING :: EndpointState
pattern EndpointState_TERMINATED :: EndpointState
pattern EndpointState_TERMINATED_WITH_ERRORS :: EndpointState
pattern EndpointState_TERMINATING :: EndpointState
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_CLUSTER_UNAVAILABLE :: FailureReason
pattern FailureReason_INTERNAL_ERROR :: FailureReason
pattern FailureReason_USER_ERROR :: FailureReason
pattern FailureReason_VALIDATION_ERROR :: FailureReason
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_CANCELLED :: JobRunState
pattern JobRunState_CANCEL_PENDING :: JobRunState
pattern JobRunState_COMPLETED :: JobRunState
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_PENDING :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_SUBMITTED :: JobRunState
newtype PersistentAppUI
PersistentAppUI' :: Text -> PersistentAppUI
[fromPersistentAppUI] :: PersistentAppUI -> Text
pattern PersistentAppUI_DISABLED :: PersistentAppUI
pattern PersistentAppUI_ENABLED :: PersistentAppUI
newtype VirtualClusterState
VirtualClusterState' :: Text -> VirtualClusterState
[fromVirtualClusterState] :: VirtualClusterState -> Text
pattern VirtualClusterState_ARRESTED :: VirtualClusterState
pattern VirtualClusterState_RUNNING :: VirtualClusterState
pattern VirtualClusterState_TERMINATED :: VirtualClusterState
pattern VirtualClusterState_TERMINATING :: VirtualClusterState

-- | A configuration for CloudWatch monitoring. You can configure your jobs
--   to send log information to CloudWatch Logs.
--   
--   <i>See:</i> <a>newCloudWatchMonitoringConfiguration</a> smart
--   constructor.
data CloudWatchMonitoringConfiguration
CloudWatchMonitoringConfiguration' :: Maybe Text -> Text -> CloudWatchMonitoringConfiguration

-- | Create a value of <a>CloudWatchMonitoringConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamNamePrefix:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logStreamNamePrefix</a> - The
--   specified name prefix for log streams.
--   
--   <a>$sel:logGroupName:CloudWatchMonitoringConfiguration'</a>,
--   <a>cloudWatchMonitoringConfiguration_logGroupName</a> - The name of
--   the log group for log publishing.
newCloudWatchMonitoringConfiguration :: Text -> CloudWatchMonitoringConfiguration

-- | A configuration specification to be used when provisioning virtual
--   clusters, which can include configurations for applications and
--   software bundled with Amazon EMR on EKS. A configuration consists of a
--   classification, properties, and optional nested configurations. A
--   classification refers to an application-specific configuration file.
--   Properties are the settings you want to change in that file.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Maybe [Configuration] -> Maybe (Sensitive (HashMap Text Text)) -> Text -> Configuration

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:Configuration'</a>,
--   <a>configuration_configurations</a> - A list of additional
--   configurations to apply within a configuration object.
--   
--   <a>$sel:properties:Configuration'</a>, <a>configuration_properties</a>
--   - A set of properties specified within a configuration classification.
--   
--   <a>$sel:classification:Configuration'</a>,
--   <a>configuration_classification</a> - The classification within a
--   configuration.
newConfiguration :: Text -> Configuration

-- | A configuration specification to be used to override existing
--   configurations.
--   
--   <i>See:</i> <a>newConfigurationOverrides</a> smart constructor.
data ConfigurationOverrides
ConfigurationOverrides' :: Maybe MonitoringConfiguration -> Maybe [Configuration] -> ConfigurationOverrides

-- | Create a value of <a>ConfigurationOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:monitoringConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_monitoringConfiguration</a> - The
--   configurations for monitoring.
--   
--   <a>$sel:applicationConfiguration:ConfigurationOverrides'</a>,
--   <a>configurationOverrides_applicationConfiguration</a> - The
--   configurations for the application running by the job run.
newConfigurationOverrides :: ConfigurationOverrides

-- | The information about the container used for a job run or a managed
--   endpoint.
--   
--   <i>See:</i> <a>newContainerInfo</a> smart constructor.
data ContainerInfo
ContainerInfo' :: Maybe EksInfo -> ContainerInfo

-- | Create a value of <a>ContainerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eksInfo:ContainerInfo'</a>, <a>containerInfo_eksInfo</a> - The
--   information about the EKS cluster.
newContainerInfo :: ContainerInfo

-- | The information about the container provider.
--   
--   <i>See:</i> <a>newContainerProvider</a> smart constructor.
data ContainerProvider
ContainerProvider' :: Maybe ContainerInfo -> ContainerProviderType -> Text -> ContainerProvider

-- | Create a value of <a>ContainerProvider</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:info:ContainerProvider'</a>, <a>containerProvider_info</a> -
--   The information about the container cluster.
--   
--   <a>$sel:type':ContainerProvider'</a>, <a>containerProvider_type</a> -
--   The type of the container provider. EKS is the only supported type as
--   of now.
--   
--   <a>$sel:id:ContainerProvider'</a>, <a>containerProvider_id</a> - The
--   ID of the container cluster.
newContainerProvider :: ContainerProviderType -> Text -> ContainerProvider

-- | The information about the EKS cluster.
--   
--   <i>See:</i> <a>newEksInfo</a> smart constructor.
data EksInfo
EksInfo' :: Maybe Text -> EksInfo

-- | Create a value of <a>EksInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:EksInfo'</a>, <a>eksInfo_namespace</a> - The
--   namespaces of the EKS cluster.
newEksInfo :: EksInfo

-- | This entity represents the endpoint that is managed by Amazon EMR on
--   EKS.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe FailureReason -> Maybe EndpointState -> Maybe Text -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigurationOverrides -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Endpoint

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:Endpoint'</a>, <a>endpoint_failureReason</a> -
--   The reasons why the endpoint has failed.
--   
--   <a>$sel:state:Endpoint'</a>, <a>endpoint_state</a> - The state of the
--   endpoint.
--   
--   <a>$sel:arn:Endpoint'</a>, <a>endpoint_arn</a> - The ARN of the
--   endpoint.
--   
--   <a>$sel:createdAt:Endpoint'</a>, <a>endpoint_createdAt</a> - The date
--   and time when the endpoint was created.
--   
--   <a>$sel:subnetIds:Endpoint'</a>, <a>endpoint_subnetIds</a> - The
--   subnet IDs of the endpoint.
--   
--   <a>$sel:stateDetails:Endpoint'</a>, <a>endpoint_stateDetails</a> -
--   Additional details of the endpoint state.
--   
--   <a>$sel:certificateArn:Endpoint'</a>, <a>endpoint_certificateArn</a> -
--   The certificate ARN of the endpoint.
--   
--   <a>$sel:executionRoleArn:Endpoint'</a>,
--   <a>endpoint_executionRoleArn</a> - The execution role ARN of the
--   endpoint.
--   
--   <a>$sel:securityGroup:Endpoint'</a>, <a>endpoint_securityGroup</a> -
--   The security group configuration of the endpoint.
--   
--   <a>$sel:configurationOverrides:Endpoint'</a>,
--   <a>endpoint_configurationOverrides</a> - The configuration settings
--   that are used to override existing configurations for endpoints.
--   
--   <a>$sel:name:Endpoint'</a>, <a>endpoint_name</a> - The name of the
--   endpoint.
--   
--   <a>$sel:releaseLabel:Endpoint'</a>, <a>endpoint_releaseLabel</a> - The
--   EMR release version to be used for the endpoint.
--   
--   <a>$sel:id:Endpoint'</a>, <a>endpoint_id</a> - The ID of the endpoint.
--   
--   <a>$sel:type':Endpoint'</a>, <a>endpoint_type</a> - The type of the
--   endpoint.
--   
--   <a>$sel:serverUrl:Endpoint'</a>, <a>endpoint_serverUrl</a> - The
--   server URL of the endpoint.
--   
--   <a>$sel:virtualClusterId:Endpoint'</a>,
--   <a>endpoint_virtualClusterId</a> - The ID of the endpoint's virtual
--   cluster.
--   
--   <a>$sel:tags:Endpoint'</a>, <a>endpoint_tags</a> - The tags of the
--   endpoint.
newEndpoint :: Endpoint

-- | Specify the driver that the job runs on.
--   
--   <i>See:</i> <a>newJobDriver</a> smart constructor.
data JobDriver
JobDriver' :: Maybe SparkSubmitJobDriver -> JobDriver

-- | Create a value of <a>JobDriver</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitJobDriver:JobDriver'</a>,
--   <a>jobDriver_sparkSubmitJobDriver</a> - The job driver parameters
--   specified for spark submit.
newJobDriver :: JobDriver

-- | This entity describes a job run. A job run is a unit of work, such as
--   a Spark jar, PySpark script, or SparkSQL query, that you submit to
--   Amazon EMR on EKS.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe FailureReason -> Maybe JobRunState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe JobDriver -> Maybe ConfigurationOverrides -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> JobRun

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:JobRun'</a>, <a>jobRun_failureReason</a> - The
--   reasons why the job run has failed.
--   
--   <a>$sel:state:JobRun'</a>, <a>jobRun_state</a> - The state of the job
--   run.
--   
--   <a>$sel:clientToken:JobRun'</a>, <a>jobRun_clientToken</a> - The
--   client token used to start a job run.
--   
--   <a>$sel:arn:JobRun'</a>, <a>jobRun_arn</a> - The ARN of job run.
--   
--   <a>$sel:createdAt:JobRun'</a>, <a>jobRun_createdAt</a> - The date and
--   time when the job run was created.
--   
--   <a>$sel:stateDetails:JobRun'</a>, <a>jobRun_stateDetails</a> -
--   Additional details of the job run state.
--   
--   <a>$sel:createdBy:JobRun'</a>, <a>jobRun_createdBy</a> - The user who
--   created the job run.
--   
--   <a>$sel:executionRoleArn:JobRun'</a>, <a>jobRun_executionRoleArn</a> -
--   The execution role ARN of the job run.
--   
--   <a>$sel:jobDriver:JobRun'</a>, <a>jobRun_jobDriver</a> - Parameters of
--   job driver for the job run.
--   
--   <a>$sel:configurationOverrides:JobRun'</a>,
--   <a>jobRun_configurationOverrides</a> - The configuration settings that
--   are used to override default configuration.
--   
--   <a>$sel:finishedAt:JobRun'</a>, <a>jobRun_finishedAt</a> - The date
--   and time when the job run has finished.
--   
--   <a>$sel:name:JobRun'</a>, <a>jobRun_name</a> - The name of the job
--   run.
--   
--   <a>$sel:releaseLabel:JobRun'</a>, <a>jobRun_releaseLabel</a> - The
--   release version of Amazon EMR.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of the job run.
--   
--   <a>$sel:virtualClusterId:JobRun'</a>, <a>jobRun_virtualClusterId</a> -
--   The ID of the job run's virtual cluster.
--   
--   <a>$sel:tags:JobRun'</a>, <a>jobRun_tags</a> - The assigned tags of
--   the job run.
newJobRun :: JobRun

-- | Configuration setting for monitoring.
--   
--   <i>See:</i> <a>newMonitoringConfiguration</a> smart constructor.
data MonitoringConfiguration
MonitoringConfiguration' :: Maybe PersistentAppUI -> Maybe S3MonitoringConfiguration -> Maybe CloudWatchMonitoringConfiguration -> MonitoringConfiguration

-- | Create a value of <a>MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persistentAppUI:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_persistentAppUI</a> - Monitoring
--   configurations for the persistent application UI.
--   
--   <a>$sel:s3MonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_s3MonitoringConfiguration</a> - Amazon S3
--   configuration for monitoring log publishing.
--   
--   
--   <a>$sel:cloudWatchMonitoringConfiguration:MonitoringConfiguration'</a>,
--   <a>monitoringConfiguration_cloudWatchMonitoringConfiguration</a> -
--   Monitoring configurations for CloudWatch.
newMonitoringConfiguration :: MonitoringConfiguration

-- | Amazon S3 configuration for monitoring log publishing. You can
--   configure your jobs to send log information to Amazon S3.
--   
--   <i>See:</i> <a>newS3MonitoringConfiguration</a> smart constructor.
data S3MonitoringConfiguration
S3MonitoringConfiguration' :: Text -> S3MonitoringConfiguration

-- | Create a value of <a>S3MonitoringConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUri:S3MonitoringConfiguration'</a>,
--   <a>s3MonitoringConfiguration_logUri</a> - Amazon S3 destination URI
--   for log publishing.
newS3MonitoringConfiguration :: Text -> S3MonitoringConfiguration

-- | The information about job driver for Spark submit.
--   
--   <i>See:</i> <a>newSparkSubmitJobDriver</a> smart constructor.
data SparkSubmitJobDriver
SparkSubmitJobDriver' :: Maybe (Sensitive Text) -> Maybe [Sensitive Text] -> Sensitive Text -> SparkSubmitJobDriver

-- | Create a value of <a>SparkSubmitJobDriver</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sparkSubmitParameters:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_sparkSubmitParameters</a> - The Spark submit
--   parameters that are used for job runs.
--   
--   <a>$sel:entryPointArguments:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPointArguments</a> - The arguments for
--   job application.
--   
--   <a>$sel:entryPoint:SparkSubmitJobDriver'</a>,
--   <a>sparkSubmitJobDriver_entryPoint</a> - The entry point of job
--   application.
newSparkSubmitJobDriver :: Text -> SparkSubmitJobDriver

-- | This entity describes a virtual cluster. A virtual cluster is a
--   Kubernetes namespace that Amazon EMR is registered with. Amazon EMR
--   uses virtual clusters to run jobs and host endpoints. Multiple virtual
--   clusters can be backed by the same physical cluster. However, each
--   virtual cluster maps to one namespace on an EKS cluster. Virtual
--   clusters do not create any active resources that contribute to your
--   bill or that require lifecycle management outside the service.
--   
--   <i>See:</i> <a>newVirtualCluster</a> smart constructor.
data VirtualCluster
VirtualCluster' :: Maybe VirtualClusterState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ContainerProvider -> Maybe (HashMap Text Text) -> VirtualCluster

-- | Create a value of <a>VirtualCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:VirtualCluster'</a>, <a>virtualCluster_state</a> - The
--   state of the virtual cluster.
--   
--   <a>$sel:arn:VirtualCluster'</a>, <a>virtualCluster_arn</a> - The ARN
--   of the virtual cluster.
--   
--   <a>$sel:createdAt:VirtualCluster'</a>, <a>virtualCluster_createdAt</a>
--   - The date and time when the virtual cluster is created.
--   
--   <a>$sel:name:VirtualCluster'</a>, <a>virtualCluster_name</a> - The
--   name of the virtual cluster.
--   
--   <a>$sel:id:VirtualCluster'</a>, <a>virtualCluster_id</a> - The ID of
--   the virtual cluster.
--   
--   <a>$sel:containerProvider:VirtualCluster'</a>,
--   <a>virtualCluster_containerProvider</a> - The container provider of
--   the virtual cluster.
--   
--   <a>$sel:tags:VirtualCluster'</a>, <a>virtualCluster_tags</a> - The
--   assigned tags of the virtual cluster.
newVirtualCluster :: VirtualCluster
