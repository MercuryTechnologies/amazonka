-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-memorydbZSamazonka-memorydb
@version 2.0


module Amazonka.MemoryDb.Types.ACLPendingChanges

-- | Returns the updates being applied to the ACL.
--   
--   <i>See:</i> <a>newACLPendingChanges</a> smart constructor.
data ACLPendingChanges
ACLPendingChanges' :: Maybe [Text] -> Maybe [Text] -> ACLPendingChanges

-- | A list of users being added to the ACL
[$sel:userNamesToAdd:ACLPendingChanges'] :: ACLPendingChanges -> Maybe [Text]

-- | A list of user names being removed from the ACL
[$sel:userNamesToRemove:ACLPendingChanges'] :: ACLPendingChanges -> Maybe [Text]

-- | Create a value of <a>ACLPendingChanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNamesToAdd:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToAdd</a> - A list of users being added
--   to the ACL
--   
--   <a>$sel:userNamesToRemove:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToRemove</a> - A list of user names
--   being removed from the ACL
newACLPendingChanges :: ACLPendingChanges

-- | A list of users being added to the ACL
aCLPendingChanges_userNamesToAdd :: Lens' ACLPendingChanges (Maybe [Text])

-- | A list of user names being removed from the ACL
aCLPendingChanges_userNamesToRemove :: Lens' ACLPendingChanges (Maybe [Text])
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance GHC.Show.Show Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance GHC.Read.Read Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ACLPendingChanges.ACLPendingChanges


module Amazonka.MemoryDb.Types.ACL

-- | An Access Control List. You can authenticate users with Access Contol
--   Lists. ACLs enable you to control cluster access by grouping users.
--   These Access control lists are designed as a way to organize access to
--   clusters.
--   
--   <i>See:</i> <a>newACL</a> smart constructor.
data ACL
ACL' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe ACLPendingChanges -> Maybe Text -> Maybe [Text] -> ACL

-- | Indicates ACL status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:ACL'] :: ACL -> Maybe Text

-- | The list of user names that belong to the ACL.
[$sel:userNames:ACL'] :: ACL -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the ACL
[$sel:arn:ACL'] :: ACL -> Maybe Text

-- | The name of the Access Control List
[$sel:name:ACL'] :: ACL -> Maybe Text

-- | A list of updates being applied to the ACL.
[$sel:pendingChanges:ACL'] :: ACL -> Maybe ACLPendingChanges

-- | The minimum engine version supported for the ACL
[$sel:minimumEngineVersion:ACL'] :: ACL -> Maybe Text

-- | A list of clusters associated with the ACL.
[$sel:clusters:ACL'] :: ACL -> Maybe [Text]

-- | Create a value of <a>ACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ACL'</a>, <a>acl_status</a> - Indicates ACL status. Can
--   be "creating", "active", "modifying", "deleting".
--   
--   <a>$sel:userNames:ACL'</a>, <a>acl_userNames</a> - The list of user
--   names that belong to the ACL.
--   
--   <a>$sel:arn:ACL'</a>, <a>acl_arn</a> - The Amazon Resource Name (ARN)
--   of the ACL
--   
--   <a>$sel:name:ACL'</a>, <a>acl_name</a> - The name of the Access
--   Control List
--   
--   <a>$sel:pendingChanges:ACL'</a>, <a>acl_pendingChanges</a> - A list of
--   updates being applied to the ACL.
--   
--   <a>$sel:minimumEngineVersion:ACL'</a>, <a>acl_minimumEngineVersion</a>
--   - The minimum engine version supported for the ACL
--   
--   <a>$sel:clusters:ACL'</a>, <a>acl_clusters</a> - A list of clusters
--   associated with the ACL.
newACL :: ACL

-- | Indicates ACL status. Can be "creating", "active", "modifying",
--   "deleting".
acl_status :: Lens' ACL (Maybe Text)

-- | The list of user names that belong to the ACL.
acl_userNames :: Lens' ACL (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the ACL
acl_arn :: Lens' ACL (Maybe Text)

-- | The name of the Access Control List
acl_name :: Lens' ACL (Maybe Text)

-- | A list of updates being applied to the ACL.
acl_pendingChanges :: Lens' ACL (Maybe ACLPendingChanges)

-- | The minimum engine version supported for the ACL
acl_minimumEngineVersion :: Lens' ACL (Maybe Text)

-- | A list of clusters associated with the ACL.
acl_clusters :: Lens' ACL (Maybe [Text])
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ACL.ACL
instance GHC.Show.Show Amazonka.MemoryDb.Types.ACL.ACL
instance GHC.Read.Read Amazonka.MemoryDb.Types.ACL.ACL
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ACL.ACL
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ACL.ACL
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ACL.ACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ACL.ACL


module Amazonka.MemoryDb.Types.ACLsUpdateStatus

-- | The status of the ACL update
--   
--   <i>See:</i> <a>newACLsUpdateStatus</a> smart constructor.
data ACLsUpdateStatus
ACLsUpdateStatus' :: Maybe Text -> ACLsUpdateStatus

-- | A list of ACLs pending to be applied.
[$sel:aCLToApply:ACLsUpdateStatus'] :: ACLsUpdateStatus -> Maybe Text

-- | Create a value of <a>ACLsUpdateStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aCLToApply:ACLsUpdateStatus'</a>,
--   <a>aCLsUpdateStatus_aCLToApply</a> - A list of ACLs pending to be
--   applied.
newACLsUpdateStatus :: ACLsUpdateStatus

-- | A list of ACLs pending to be applied.
aCLsUpdateStatus_aCLToApply :: Lens' ACLsUpdateStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance GHC.Show.Show Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance GHC.Read.Read Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ACLsUpdateStatus.ACLsUpdateStatus


module Amazonka.MemoryDb.Types.AZStatus
newtype AZStatus
AZStatus' :: Text -> AZStatus
[fromAZStatus] :: AZStatus -> Text
pattern AZStatus_Multiaz :: AZStatus
pattern AZStatus_Singleaz :: AZStatus
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance GHC.Read.Read Amazonka.MemoryDb.Types.AZStatus.AZStatus
instance GHC.Show.Show Amazonka.MemoryDb.Types.AZStatus.AZStatus


module Amazonka.MemoryDb.Types.AuthenticationType
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance GHC.Read.Read Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType
instance GHC.Show.Show Amazonka.MemoryDb.Types.AuthenticationType.AuthenticationType


module Amazonka.MemoryDb.Types.Authentication

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | The number of passwords belonging to the user. The maximum is two.
[$sel:passwordCount:Authentication'] :: Authentication -> Maybe Int

-- | Indicates whether the user requires a password to authenticate.
[$sel:type':Authentication'] :: Authentication -> Maybe AuthenticationType

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Authentication.Authentication
instance GHC.Show.Show Amazonka.MemoryDb.Types.Authentication.Authentication
instance GHC.Read.Read Amazonka.MemoryDb.Types.Authentication.Authentication
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Authentication.Authentication
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Authentication.Authentication
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Authentication.Authentication
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Authentication.Authentication


module Amazonka.MemoryDb.Types.AvailabilityZone

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | The name of the Availability Zone.
[$sel:name:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance GHC.Show.Show Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance GHC.Read.Read Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.AvailabilityZone.AvailabilityZone


module Amazonka.MemoryDb.Types.Endpoint

-- | Represents the information required for client programs to connect to
--   the cluster and its nodes.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | The DNS hostname of the node.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that the engine is listening on.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the engine is listening on.
newEndpoint :: Endpoint

-- | The DNS hostname of the node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance GHC.Show.Show Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance GHC.Read.Read Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Endpoint.Endpoint
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Endpoint.Endpoint


module Amazonka.MemoryDb.Types.EngineVersionInfo

-- | Provides details of the Redis engine version
--   
--   <i>See:</i> <a>newEngineVersionInfo</a> smart constructor.
data EngineVersionInfo
EngineVersionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> EngineVersionInfo

-- | The engine version
[$sel:engineVersion:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | The patched engine version
[$sel:enginePatchVersion:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | Specifies the name of the parameter group family to which the engine
--   default parameters apply.
[$sel:parameterGroupFamily:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | Create a value of <a>EngineVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_engineVersion</a> - The engine version
--   
--   <a>$sel:enginePatchVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_enginePatchVersion</a> - The patched engine
--   version
--   
--   <a>$sel:parameterGroupFamily:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_parameterGroupFamily</a> - Specifies the name of
--   the parameter group family to which the engine default parameters
--   apply.
newEngineVersionInfo :: EngineVersionInfo

-- | The engine version
engineVersionInfo_engineVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | The patched engine version
engineVersionInfo_enginePatchVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | Specifies the name of the parameter group family to which the engine
--   default parameters apply.
engineVersionInfo_parameterGroupFamily :: Lens' EngineVersionInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance GHC.Show.Show Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance GHC.Read.Read Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.EngineVersionInfo.EngineVersionInfo


module Amazonka.MemoryDb.Types.Filter

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserName.
[$sel:name:Filter'] :: Filter -> Text

-- | The property values to filter on. For example, "user-123".
[$sel:values:Filter'] :: Filter -> NonEmpty Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserName.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserName.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Filter.Filter
instance GHC.Show.Show Amazonka.MemoryDb.Types.Filter.Filter
instance GHC.Read.Read Amazonka.MemoryDb.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.Filter.Filter


module Amazonka.MemoryDb.Types.InputAuthenticationType
newtype InputAuthenticationType
InputAuthenticationType' :: Text -> InputAuthenticationType
[fromInputAuthenticationType] :: InputAuthenticationType -> Text
pattern InputAuthenticationType_Password :: InputAuthenticationType
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance GHC.Read.Read Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType
instance GHC.Show.Show Amazonka.MemoryDb.Types.InputAuthenticationType.InputAuthenticationType


module Amazonka.MemoryDb.Types.AuthenticationMode

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthenticationMode</a> smart constructor.
data AuthenticationMode
AuthenticationMode' :: Maybe (NonEmpty Text) -> Maybe InputAuthenticationType -> AuthenticationMode

-- | The password(s) used for authentication
[$sel:passwords:AuthenticationMode'] :: AuthenticationMode -> Maybe (NonEmpty Text)

-- | Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
[$sel:type':AuthenticationMode'] :: AuthenticationMode -> Maybe InputAuthenticationType

-- | Create a value of <a>AuthenticationMode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwords:AuthenticationMode'</a>,
--   <a>authenticationMode_passwords</a> - The password(s) used for
--   authentication
--   
--   <a>$sel:type':AuthenticationMode'</a>, <a>authenticationMode_type</a>
--   - Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
newAuthenticationMode :: AuthenticationMode

-- | The password(s) used for authentication
authenticationMode_passwords :: Lens' AuthenticationMode (Maybe (NonEmpty Text))

-- | Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
authenticationMode_type :: Lens' AuthenticationMode (Maybe InputAuthenticationType)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance GHC.Show.Show Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance GHC.Read.Read Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.AuthenticationMode.AuthenticationMode


module Amazonka.MemoryDb.Types.Node

-- | Represents an individual node within a cluster. Each node runs its own
--   instance of the cluster's protocol-compliant caching software.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe POSIX -> Node

-- | The status of the service update on the node
[$sel:status:Node'] :: Node -> Maybe Text

-- | The Availability Zone in which the node resides
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The node identifier. A node name is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster name, shard name and node name
--   uniquely identifies every node used in a customer's Amazon account.
[$sel:name:Node'] :: Node -> Maybe Text

-- | The hostname for connecting to this node.
[$sel:endpoint:Node'] :: Node -> Maybe Endpoint

-- | The date and time when the node was created.
[$sel:createTime:Node'] :: Node -> Maybe POSIX

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the
--   service update on the node
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node resides
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node identifier. A node
--   name is a numeric identifier (0001, 0002, etc.). The combination of
--   cluster name, shard name and node name uniquely identifies every node
--   used in a customer's Amazon account.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The hostname for
--   connecting to this node.
--   
--   <a>$sel:createTime:Node'</a>, <a>node_createTime</a> - The date and
--   time when the node was created.
newNode :: Node

-- | The status of the service update on the node
node_status :: Lens' Node (Maybe Text)

-- | The Availability Zone in which the node resides
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The node identifier. A node name is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster name, shard name and node name
--   uniquely identifies every node used in a customer's Amazon account.
node_name :: Lens' Node (Maybe Text)

-- | The hostname for connecting to this node.
node_endpoint :: Lens' Node (Maybe Endpoint)

-- | The date and time when the node was created.
node_createTime :: Lens' Node (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Node.Node
instance GHC.Show.Show Amazonka.MemoryDb.Types.Node.Node
instance GHC.Read.Read Amazonka.MemoryDb.Types.Node.Node
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Node.Node
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Node.Node
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Node.Node
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Node.Node


module Amazonka.MemoryDb.Types.Parameter

-- | Describes an individual setting that controls some aspect of MemoryDB
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Parameter

-- | The value of the parameter
[$sel:value:Parameter'] :: Parameter -> Maybe Text

-- | The name of the parameter
[$sel:name:Parameter'] :: Parameter -> Maybe Text

-- | The earliest engine version to which the parameter can apply.
[$sel:minimumEngineVersion:Parameter'] :: Parameter -> Maybe Text

-- | The parameter's data type
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Parameter'</a>, <a>parameter_value</a> - The value of
--   the parameter
--   
--   <a>$sel:name:Parameter'</a>, <a>parameter_name</a> - The name of the
--   parameter
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest engine version to
--   which the parameter can apply.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The
--   parameter's data type
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
newParameter :: Parameter

-- | The value of the parameter
parameter_value :: Lens' Parameter (Maybe Text)

-- | The name of the parameter
parameter_name :: Lens' Parameter (Maybe Text)

-- | The earliest engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The parameter's data type
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Parameter.Parameter
instance GHC.Show.Show Amazonka.MemoryDb.Types.Parameter.Parameter
instance GHC.Read.Read Amazonka.MemoryDb.Types.Parameter.Parameter
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Parameter.Parameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Parameter.Parameter
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Parameter.Parameter
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Parameter.Parameter


module Amazonka.MemoryDb.Types.ParameterGroup

-- | Represents the output of a CreateParameterGroup operation. A parameter
--   group represents a combination of specific values for the parameters
--   that are passed to the engine software during startup.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ParameterGroup

-- | The Amazon Resource Name (ARN) of the parameter group
[$sel:arn:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | The name of the parameter group family that this parameter group is
--   compatible with.
[$sel:family:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | The name of the parameter group
[$sel:name:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | A description of the parameter group
[$sel:description:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ParameterGroup'</a>, <a>parameterGroup_arn</a> - The
--   Amazon Resource Name (ARN) of the parameter group
--   
--   <a>$sel:family:ParameterGroup'</a>, <a>parameterGroup_family</a> - The
--   name of the parameter group family that this parameter group is
--   compatible with.
--   
--   <a>$sel:name:ParameterGroup'</a>, <a>parameterGroup_name</a> - The
--   name of the parameter group
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group
newParameterGroup :: ParameterGroup

-- | The Amazon Resource Name (ARN) of the parameter group
parameterGroup_arn :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group family that this parameter group is
--   compatible with.
parameterGroup_family :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group
parameterGroup_name :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance GHC.Show.Show Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance GHC.Read.Read Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ParameterGroup.ParameterGroup


module Amazonka.MemoryDb.Types.ParameterNameValue

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance GHC.Show.Show Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance GHC.Read.Read Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ParameterNameValue.ParameterNameValue


module Amazonka.MemoryDb.Types.ReplicaConfigurationRequest

-- | A request to configure the number of replicas in a shard
--   
--   <i>See:</i> <a>newReplicaConfigurationRequest</a> smart constructor.
data ReplicaConfigurationRequest
ReplicaConfigurationRequest' :: Maybe Int -> ReplicaConfigurationRequest

-- | The number of replicas to scale up or down to
[$sel:replicaCount:ReplicaConfigurationRequest'] :: ReplicaConfigurationRequest -> Maybe Int

-- | Create a value of <a>ReplicaConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicaCount:ReplicaConfigurationRequest'</a>,
--   <a>replicaConfigurationRequest_replicaCount</a> - The number of
--   replicas to scale up or down to
newReplicaConfigurationRequest :: ReplicaConfigurationRequest

-- | The number of replicas to scale up or down to
replicaConfigurationRequest_replicaCount :: Lens' ReplicaConfigurationRequest (Maybe Int)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance GHC.Show.Show Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance GHC.Read.Read Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ReplicaConfigurationRequest.ReplicaConfigurationRequest


module Amazonka.MemoryDb.Types.SecurityGroupMembership

-- | Represents a single security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of the security group membership. The status changes
--   whenever a security group is modified, or when the security groups
--   assigned to a cluster are modified.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The identifier of the security group.
[$sel:securityGroupId:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the security
--   group membership. The status changes whenever a security group is
--   modified, or when the security groups assigned to a cluster are
--   modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of the security group membership. The status changes
--   whenever a security group is modified, or when the security groups
--   assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Show.Show Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Read.Read Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.SecurityGroupMembership.SecurityGroupMembership


module Amazonka.MemoryDb.Types.ServiceUpdateRequest

-- | A request to apply a service update
--   
--   <i>See:</i> <a>newServiceUpdateRequest</a> smart constructor.
data ServiceUpdateRequest
ServiceUpdateRequest' :: Maybe Text -> ServiceUpdateRequest

-- | The unique ID of the service update
[$sel:serviceUpdateNameToApply:ServiceUpdateRequest'] :: ServiceUpdateRequest -> Maybe Text

-- | Create a value of <a>ServiceUpdateRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateNameToApply:ServiceUpdateRequest'</a>,
--   <a>serviceUpdateRequest_serviceUpdateNameToApply</a> - The unique ID
--   of the service update
newServiceUpdateRequest :: ServiceUpdateRequest

-- | The unique ID of the service update
serviceUpdateRequest_serviceUpdateNameToApply :: Lens' ServiceUpdateRequest (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance GHC.Show.Show Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance GHC.Read.Read Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ServiceUpdateRequest.ServiceUpdateRequest


module Amazonka.MemoryDb.Types.ServiceUpdateStatus
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Complete :: ServiceUpdateStatus
pattern ServiceUpdateStatus_In_progress :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Scheduled :: ServiceUpdateStatus
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Read.Read Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus
instance GHC.Show.Show Amazonka.MemoryDb.Types.ServiceUpdateStatus.ServiceUpdateStatus


module Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate

-- | Update action that has yet to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newPendingModifiedServiceUpdate</a> smart constructor.
data PendingModifiedServiceUpdate
PendingModifiedServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe Text -> PendingModifiedServiceUpdate

-- | The status of the service update
[$sel:status:PendingModifiedServiceUpdate'] :: PendingModifiedServiceUpdate -> Maybe ServiceUpdateStatus

-- | The unique ID of the service update
[$sel:serviceUpdateName:PendingModifiedServiceUpdate'] :: PendingModifiedServiceUpdate -> Maybe Text

-- | Create a value of <a>PendingModifiedServiceUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_status</a> - The status of the service
--   update
--   
--   <a>$sel:serviceUpdateName:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_serviceUpdateName</a> - The unique ID
--   of the service update
newPendingModifiedServiceUpdate :: PendingModifiedServiceUpdate

-- | The status of the service update
pendingModifiedServiceUpdate_status :: Lens' PendingModifiedServiceUpdate (Maybe ServiceUpdateStatus)

-- | The unique ID of the service update
pendingModifiedServiceUpdate_serviceUpdateName :: Lens' PendingModifiedServiceUpdate (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance GHC.Show.Show Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance GHC.Read.Read Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.PendingModifiedServiceUpdate.PendingModifiedServiceUpdate


module Amazonka.MemoryDb.Types.ServiceUpdateType
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Read.Read Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType
instance GHC.Show.Show Amazonka.MemoryDb.Types.ServiceUpdateType.ServiceUpdateType


module Amazonka.MemoryDb.Types.ServiceUpdate

-- | An update that you can apply to your MemoryDB clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> ServiceUpdate

-- | The status of the service update
[$sel:status:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateStatus

-- | The date at which the service update will be automatically applied
[$sel:autoUpdateStartDate:ServiceUpdate'] :: ServiceUpdate -> Maybe POSIX

-- | The unique ID of the service update
[$sel:serviceUpdateName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | A list of nodes updated by the service update
[$sel:nodesUpdated:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The date when the service update is initially available
[$sel:releaseDate:ServiceUpdate'] :: ServiceUpdate -> Maybe POSIX

-- | The name of the cluster to which the service update applies
[$sel:clusterName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Reflects the nature of the service update
[$sel:type':ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateType

-- | Provides details of the service update
[$sel:description:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceUpdate'</a>, <a>serviceUpdate_status</a> - The
--   status of the service update
--   
--   <a>$sel:autoUpdateStartDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateStartDate</a> - The date at which the
--   service update will be automatically applied
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:nodesUpdated:ServiceUpdate'</a>,
--   <a>serviceUpdate_nodesUpdated</a> - A list of nodes updated by the
--   service update
--   
--   <a>$sel:releaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_releaseDate</a> - The date when the service update is
--   initially available
--   
--   <a>$sel:clusterName:ServiceUpdate'</a>,
--   <a>serviceUpdate_clusterName</a> - The name of the cluster to which
--   the service update applies
--   
--   <a>$sel:type':ServiceUpdate'</a>, <a>serviceUpdate_type</a> - Reflects
--   the nature of the service update
--   
--   <a>$sel:description:ServiceUpdate'</a>,
--   <a>serviceUpdate_description</a> - Provides details of the service
--   update
newServiceUpdate :: ServiceUpdate

-- | The status of the service update
serviceUpdate_status :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The date at which the service update will be automatically applied
serviceUpdate_autoUpdateStartDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | A list of nodes updated by the service update
serviceUpdate_nodesUpdated :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_releaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The name of the cluster to which the service update applies
serviceUpdate_clusterName :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_type :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | Provides details of the service update
serviceUpdate_description :: Lens' ServiceUpdate (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance GHC.Show.Show Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance GHC.Read.Read Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ServiceUpdate.ServiceUpdate


module Amazonka.MemoryDb.Types.Shard

-- | Represents a collection of nodes in a cluster. One node in the node
--   group is the read/write primary node. All the other nodes are
--   read-only Replica nodes.
--   
--   <i>See:</i> <a>newShard</a> smart constructor.
data Shard
Shard' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Node] -> Shard

-- | The current state of this replication group - creating, available,
--   modifying, deleting.
[$sel:status:Shard'] :: Shard -> Maybe Text

-- | The keyspace for this shard.
[$sel:slots:Shard'] :: Shard -> Maybe Text

-- | The number of nodes in the shard
[$sel:numberOfNodes:Shard'] :: Shard -> Maybe Int

-- | The name of the shard
[$sel:name:Shard'] :: Shard -> Maybe Text

-- | A list containing information about individual nodes within the shard
[$sel:nodes:Shard'] :: Shard -> Maybe [Node]

-- | Create a value of <a>Shard</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shard'</a>, <a>shard_status</a> - The current state of
--   this replication group - creating, available, modifying, deleting.
--   
--   <a>$sel:slots:Shard'</a>, <a>shard_slots</a> - The keyspace for this
--   shard.
--   
--   <a>$sel:numberOfNodes:Shard'</a>, <a>shard_numberOfNodes</a> - The
--   number of nodes in the shard
--   
--   <a>$sel:name:Shard'</a>, <a>shard_name</a> - The name of the shard
--   
--   <a>$sel:nodes:Shard'</a>, <a>shard_nodes</a> - A list containing
--   information about individual nodes within the shard
newShard :: Shard

-- | The current state of this replication group - creating, available,
--   modifying, deleting.
shard_status :: Lens' Shard (Maybe Text)

-- | The keyspace for this shard.
shard_slots :: Lens' Shard (Maybe Text)

-- | The number of nodes in the shard
shard_numberOfNodes :: Lens' Shard (Maybe Int)

-- | The name of the shard
shard_name :: Lens' Shard (Maybe Text)

-- | A list containing information about individual nodes within the shard
shard_nodes :: Lens' Shard (Maybe [Node])
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Shard.Shard
instance GHC.Show.Show Amazonka.MemoryDb.Types.Shard.Shard
instance GHC.Read.Read Amazonka.MemoryDb.Types.Shard.Shard
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Shard.Shard
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Shard.Shard
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Shard.Shard
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Shard.Shard


module Amazonka.MemoryDb.Types.ShardConfiguration

-- | Shard configuration options. Each shard configuration has the
--   following: Slots and ReplicaCount.
--   
--   <i>See:</i> <a>newShardConfiguration</a> smart constructor.
data ShardConfiguration
ShardConfiguration' :: Maybe Text -> Maybe Int -> ShardConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
[$sel:slots:ShardConfiguration'] :: ShardConfiguration -> Maybe Text

-- | The number of read replica nodes in this shard.
[$sel:replicaCount:ShardConfiguration'] :: ShardConfiguration -> Maybe Int

-- | Create a value of <a>ShardConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:ShardConfiguration'</a>, <a>shardConfiguration_slots</a>
--   - A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
--   
--   <a>$sel:replicaCount:ShardConfiguration'</a>,
--   <a>shardConfiguration_replicaCount</a> - The number of read replica
--   nodes in this shard.
newShardConfiguration :: ShardConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
shardConfiguration_slots :: Lens' ShardConfiguration (Maybe Text)

-- | The number of read replica nodes in this shard.
shardConfiguration_replicaCount :: Lens' ShardConfiguration (Maybe Int)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance GHC.Show.Show Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance GHC.Read.Read Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ShardConfiguration.ShardConfiguration


module Amazonka.MemoryDb.Types.ShardConfigurationRequest

-- | A request to configure the sharding properties of a cluster
--   
--   <i>See:</i> <a>newShardConfigurationRequest</a> smart constructor.
data ShardConfigurationRequest
ShardConfigurationRequest' :: Maybe Int -> ShardConfigurationRequest

-- | The number of shards in the cluster
[$sel:shardCount:ShardConfigurationRequest'] :: ShardConfigurationRequest -> Maybe Int

-- | Create a value of <a>ShardConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shardCount:ShardConfigurationRequest'</a>,
--   <a>shardConfigurationRequest_shardCount</a> - The number of shards in
--   the cluster
newShardConfigurationRequest :: ShardConfigurationRequest

-- | The number of shards in the cluster
shardConfigurationRequest_shardCount :: Lens' ShardConfigurationRequest (Maybe Int)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance GHC.Show.Show Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance GHC.Read.Read Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.ShardConfigurationRequest.ShardConfigurationRequest


module Amazonka.MemoryDb.Types.ShardDetail

-- | Provides details of a shard in a snapshot
--   
--   <i>See:</i> <a>newShardDetail</a> smart constructor.
data ShardDetail
ShardDetail' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ShardConfiguration -> ShardDetail

-- | The size of the shard's snapshot
[$sel:size:ShardDetail'] :: ShardDetail -> Maybe Text

-- | The date and time that the shard's snapshot was created
[$sel:snapshotCreationTime:ShardDetail'] :: ShardDetail -> Maybe POSIX

-- | The name of the shard
[$sel:name:ShardDetail'] :: ShardDetail -> Maybe Text

-- | The configuration details of the shard
[$sel:configuration:ShardDetail'] :: ShardDetail -> Maybe ShardConfiguration

-- | Create a value of <a>ShardDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ShardDetail'</a>, <a>shardDetail_size</a> - The size of
--   the shard's snapshot
--   
--   <a>$sel:snapshotCreationTime:ShardDetail'</a>,
--   <a>shardDetail_snapshotCreationTime</a> - The date and time that the
--   shard's snapshot was created
--   
--   <a>$sel:name:ShardDetail'</a>, <a>shardDetail_name</a> - The name of
--   the shard
--   
--   <a>$sel:configuration:ShardDetail'</a>,
--   <a>shardDetail_configuration</a> - The configuration details of the
--   shard
newShardDetail :: ShardDetail

-- | The size of the shard's snapshot
shardDetail_size :: Lens' ShardDetail (Maybe Text)

-- | The date and time that the shard's snapshot was created
shardDetail_snapshotCreationTime :: Lens' ShardDetail (Maybe UTCTime)

-- | The name of the shard
shardDetail_name :: Lens' ShardDetail (Maybe Text)

-- | The configuration details of the shard
shardDetail_configuration :: Lens' ShardDetail (Maybe ShardConfiguration)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance GHC.Show.Show Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance GHC.Read.Read Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ShardDetail.ShardDetail
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ShardDetail.ShardDetail


module Amazonka.MemoryDb.Types.ClusterConfiguration

-- | A list of cluster configuration options.
--   
--   <i>See:</i> <a>newClusterConfiguration</a> smart constructor.
data ClusterConfiguration
ClusterConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [ShardDetail] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ClusterConfiguration

-- | The Redis engine version used by the cluster
[$sel:engineVersion:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The ID of the VPC the cluster belongs to
[$sel:vpcId:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The snapshot window set by the cluster
[$sel:snapshotWindow:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The name of the subnet group used by the cluster
[$sel:subnetGroupName:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The number of shards in the cluster
[$sel:numShards:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The specified maintenance window for the cluster
[$sel:maintenanceWindow:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the SNS notification topic for the
--   cluster
[$sel:topicArn:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The list of shards in the cluster
[$sel:shards:ClusterConfiguration'] :: ClusterConfiguration -> Maybe [ShardDetail]

-- | The name of the cluster
[$sel:name:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The snapshot retention limit set by the cluster
[$sel:snapshotRetentionLimit:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The node type used for the cluster
[$sel:nodeType:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The description of the cluster configuration
[$sel:description:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The port used by the cluster
[$sel:port:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The name of parameter group used by the cluster
[$sel:parameterGroupName:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | Create a value of <a>ClusterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_engineVersion</a> - The Redis engine version
--   used by the cluster
--   
--   <a>$sel:vpcId:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_vpcId</a> - The ID of the VPC the cluster
--   belongs to
--   
--   <a>$sel:snapshotWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotWindow</a> - The snapshot window set
--   by the cluster
--   
--   <a>$sel:subnetGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_subnetGroupName</a> - The name of the subnet
--   group used by the cluster
--   
--   <a>$sel:numShards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_numShards</a> - The number of shards in the
--   cluster
--   
--   <a>$sel:maintenanceWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_maintenanceWindow</a> - The specified
--   maintenance window for the cluster
--   
--   <a>$sel:topicArn:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_topicArn</a> - The Amazon Resource Name (ARN)
--   of the SNS notification topic for the cluster
--   
--   <a>$sel:shards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_shards</a> - The list of shards in the cluster
--   
--   <a>$sel:name:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_name</a> - The name of the cluster
--   
--   <a>$sel:snapshotRetentionLimit:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotRetentionLimit</a> - The snapshot
--   retention limit set by the cluster
--   
--   <a>$sel:nodeType:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_nodeType</a> - The node type used for the
--   cluster
--   
--   <a>$sel:description:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_description</a> - The description of the
--   cluster configuration
--   
--   <a>$sel:port:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_port</a> - The port used by the cluster
--   
--   <a>$sel:parameterGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_parameterGroupName</a> - The name of parameter
--   group used by the cluster
newClusterConfiguration :: ClusterConfiguration

-- | The Redis engine version used by the cluster
clusterConfiguration_engineVersion :: Lens' ClusterConfiguration (Maybe Text)

-- | The ID of the VPC the cluster belongs to
clusterConfiguration_vpcId :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot window set by the cluster
clusterConfiguration_snapshotWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The name of the subnet group used by the cluster
clusterConfiguration_subnetGroupName :: Lens' ClusterConfiguration (Maybe Text)

-- | The number of shards in the cluster
clusterConfiguration_numShards :: Lens' ClusterConfiguration (Maybe Int)

-- | The specified maintenance window for the cluster
clusterConfiguration_maintenanceWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the SNS notification topic for the
--   cluster
clusterConfiguration_topicArn :: Lens' ClusterConfiguration (Maybe Text)

-- | The list of shards in the cluster
clusterConfiguration_shards :: Lens' ClusterConfiguration (Maybe [ShardDetail])

-- | The name of the cluster
clusterConfiguration_name :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot retention limit set by the cluster
clusterConfiguration_snapshotRetentionLimit :: Lens' ClusterConfiguration (Maybe Int)

-- | The node type used for the cluster
clusterConfiguration_nodeType :: Lens' ClusterConfiguration (Maybe Text)

-- | The description of the cluster configuration
clusterConfiguration_description :: Lens' ClusterConfiguration (Maybe Text)

-- | The port used by the cluster
clusterConfiguration_port :: Lens' ClusterConfiguration (Maybe Int)

-- | The name of parameter group used by the cluster
clusterConfiguration_parameterGroupName :: Lens' ClusterConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance GHC.Show.Show Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance GHC.Read.Read Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ClusterConfiguration.ClusterConfiguration


module Amazonka.MemoryDb.Types.SlotMigration

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | The percentage of the slot migration that is complete.
[$sel:progressPercentage:SlotMigration'] :: SlotMigration -> Maybe Double

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance GHC.Show.Show Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance GHC.Read.Read Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.SlotMigration.SlotMigration
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.SlotMigration.SlotMigration


module Amazonka.MemoryDb.Types.ReshardingStatus

-- | The status of the online resharding
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | The status of the online resharding slot migration
[$sel:slotMigration:ReshardingStatus'] :: ReshardingStatus -> Maybe SlotMigration

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - The status of the online
--   resharding slot migration
newReshardingStatus :: ReshardingStatus

-- | The status of the online resharding slot migration
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance GHC.Show.Show Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance GHC.Read.Read Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ReshardingStatus.ReshardingStatus


module Amazonka.MemoryDb.Types.ClusterPendingUpdates

-- | A list of updates being applied to the cluster
--   
--   <i>See:</i> <a>newClusterPendingUpdates</a> smart constructor.
data ClusterPendingUpdates
ClusterPendingUpdates' :: Maybe [PendingModifiedServiceUpdate] -> Maybe ReshardingStatus -> Maybe ACLsUpdateStatus -> ClusterPendingUpdates

-- | A list of service updates being applied to the cluster
[$sel:serviceUpdates:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe [PendingModifiedServiceUpdate]

-- | The status of an online resharding operation.
[$sel:resharding:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe ReshardingStatus

-- | A list of ACLs associated with the cluster that are being updated
[$sel:aCLs:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe ACLsUpdateStatus

-- | Create a value of <a>ClusterPendingUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_serviceUpdates</a> - A list of service
--   updates being applied to the cluster
--   
--   <a>$sel:resharding:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_resharding</a> - The status of an online
--   resharding operation.
--   
--   <a>$sel:aCLs:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_aCLs</a> - A list of ACLs associated with the
--   cluster that are being updated
newClusterPendingUpdates :: ClusterPendingUpdates

-- | A list of service updates being applied to the cluster
clusterPendingUpdates_serviceUpdates :: Lens' ClusterPendingUpdates (Maybe [PendingModifiedServiceUpdate])

-- | The status of an online resharding operation.
clusterPendingUpdates_resharding :: Lens' ClusterPendingUpdates (Maybe ReshardingStatus)

-- | A list of ACLs associated with the cluster that are being updated
clusterPendingUpdates_aCLs :: Lens' ClusterPendingUpdates (Maybe ACLsUpdateStatus)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance GHC.Show.Show Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance GHC.Read.Read Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.ClusterPendingUpdates.ClusterPendingUpdates


module Amazonka.MemoryDb.Types.Cluster

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [SecurityGroupMembership] -> Maybe AZStatus -> Maybe Text -> Maybe Text -> Maybe ClusterPendingUpdates -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Shard] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe Text -> Cluster

-- | The Redis engine version used by the cluster
[$sel:engineVersion:Cluster'] :: Cluster -> Maybe Text

-- | The status of the cluster. For example, Available, Updating, Creating.
[$sel:status:Cluster'] :: Cluster -> Maybe Text

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
[$sel:autoMinorVersionUpgrade:Cluster'] :: Cluster -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the SNS notification topic
[$sel:snsTopicArn:Cluster'] :: Cluster -> Maybe Text

-- | A list of security groups used by the cluster
[$sel:securityGroups:Cluster'] :: Cluster -> Maybe [SecurityGroupMembership]

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
[$sel:availabilityMode:Cluster'] :: Cluster -> Maybe AZStatus

-- | The status of the parameter group used by the cluster, for example
--   'active' or 'applying'.
[$sel:parameterGroupStatus:Cluster'] :: Cluster -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:arn:Cluster'] :: Cluster -> Maybe Text

-- | A group of settings that are currently being applied.
[$sel:pendingUpdates:Cluster'] :: Cluster -> Maybe ClusterPendingUpdates

-- | The number of shards in the cluster
[$sel:numberOfShards:Cluster'] :: Cluster -> Maybe Int

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
[$sel:snapshotWindow:Cluster'] :: Cluster -> Maybe Text

-- | The name of the subnet group used by the cluster
[$sel:subnetGroupName:Cluster'] :: Cluster -> Maybe Text

-- | A flag to indicate if In-transit encryption is enabled
[$sel:tLSEnabled:Cluster'] :: Cluster -> Maybe Bool

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
[$sel:maintenanceWindow:Cluster'] :: Cluster -> Maybe Text

-- | The ID of the KMS key used to encrypt the cluster
[$sel:kmsKeyId:Cluster'] :: Cluster -> Maybe Text

-- | A list of shards that are members of the cluster.
[$sel:shards:Cluster'] :: Cluster -> Maybe [Shard]

-- | The user-supplied name of the cluster. This identifier is a unique key
--   that identifies a cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | The Redis engine patch version used by the cluster
[$sel:enginePatchVersion:Cluster'] :: Cluster -> Maybe Text

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
[$sel:snapshotRetentionLimit:Cluster'] :: Cluster -> Maybe Int

-- | The cluster's node type
[$sel:nodeType:Cluster'] :: Cluster -> Maybe Text

-- | The SNS topic must be in Active status to receive notifications
[$sel:snsTopicStatus:Cluster'] :: Cluster -> Maybe Text

-- | A description of the cluster
[$sel:description:Cluster'] :: Cluster -> Maybe Text

-- | The name of the Access Control List associated with this cluster.
[$sel:aCLName:Cluster'] :: Cluster -> Maybe Text

-- | The cluster's configuration endpoint
[$sel:clusterEndpoint:Cluster'] :: Cluster -> Maybe Endpoint

-- | The name of the parameter group used by the cluster
[$sel:parameterGroupName:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Cluster'</a>, <a>cluster_engineVersion</a> - The
--   Redis engine version used by the cluster
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The status of the
--   cluster. For example, Available, Updating, Creating.
--   
--   <a>$sel:autoMinorVersionUpgrade:Cluster'</a>,
--   <a>cluster_autoMinorVersionUpgrade</a> - When set to true, the cluster
--   will automatically receive minor engine version upgrades after launch.
--   
--   <a>$sel:snsTopicArn:Cluster'</a>, <a>cluster_snsTopicArn</a> - The
--   Amazon Resource Name (ARN) of the SNS notification topic
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups used by the cluster
--   
--   <a>$sel:availabilityMode:Cluster'</a>, <a>cluster_availabilityMode</a>
--   - Indicates if the cluster has a Multi-AZ configuration (multiaz) or
--   not (singleaz).
--   
--   <a>$sel:parameterGroupStatus:Cluster'</a>,
--   <a>cluster_parameterGroupStatus</a> - The status of the parameter
--   group used by the cluster, for example 'active' or 'applying'.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:pendingUpdates:Cluster'</a>, <a>cluster_pendingUpdates</a> - A
--   group of settings that are currently being applied.
--   
--   <a>$sel:numberOfShards:Cluster'</a>, <a>cluster_numberOfShards</a> -
--   The number of shards in the cluster
--   
--   <a>$sel:snapshotWindow:Cluster'</a>, <a>cluster_snapshotWindow</a> -
--   The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
--   
--   <a>$sel:subnetGroupName:Cluster'</a>, <a>cluster_subnetGroupName</a> -
--   The name of the subnet group used by the cluster
--   
--   <a>$sel:tLSEnabled:Cluster'</a>, <a>cluster_tLSEnabled</a> - A flag to
--   indicate if In-transit encryption is enabled
--   
--   <a>$sel:maintenanceWindow:Cluster'</a>,
--   <a>cluster_maintenanceWindow</a> - Specifies the weekly time range
--   during which maintenance on the cluster is performed. It is specified
--   as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
--   minimum maintenance window is a 60 minute period.
--   
--   <a>$sel:kmsKeyId:Cluster'</a>, <a>cluster_kmsKeyId</a> - The ID of the
--   KMS key used to encrypt the cluster
--   
--   <a>$sel:shards:Cluster'</a>, <a>cluster_shards</a> - A list of shards
--   that are members of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The user-supplied
--   name of the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:enginePatchVersion:Cluster'</a>,
--   <a>cluster_enginePatchVersion</a> - The Redis engine patch version
--   used by the cluster
--   
--   <a>$sel:snapshotRetentionLimit:Cluster'</a>,
--   <a>cluster_snapshotRetentionLimit</a> - The number of days for which
--   MemoryDB retains automatic snapshots before deleting them. For
--   example, if you set SnapshotRetentionLimit to 5, a snapshot that was
--   taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The cluster's
--   node type
--   
--   <a>$sel:snsTopicStatus:Cluster'</a>, <a>cluster_snsTopicStatus</a> -
--   The SNS topic must be in Active status to receive notifications
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - A
--   description of the cluster
--   
--   <a>$sel:aCLName:Cluster'</a>, <a>cluster_aCLName</a> - The name of the
--   Access Control List associated with this cluster.
--   
--   <a>$sel:clusterEndpoint:Cluster'</a>, <a>cluster_clusterEndpoint</a> -
--   The cluster's configuration endpoint
--   
--   <a>$sel:parameterGroupName:Cluster'</a>,
--   <a>cluster_parameterGroupName</a> - The name of the parameter group
--   used by the cluster
newCluster :: Cluster

-- | The Redis engine version used by the cluster
cluster_engineVersion :: Lens' Cluster (Maybe Text)

-- | The status of the cluster. For example, Available, Updating, Creating.
cluster_status :: Lens' Cluster (Maybe Text)

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
cluster_autoMinorVersionUpgrade :: Lens' Cluster (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the SNS notification topic
cluster_snsTopicArn :: Lens' Cluster (Maybe Text)

-- | A list of security groups used by the cluster
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
cluster_availabilityMode :: Lens' Cluster (Maybe AZStatus)

-- | The status of the parameter group used by the cluster, for example
--   'active' or 'applying'.
cluster_parameterGroupStatus :: Lens' Cluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | A group of settings that are currently being applied.
cluster_pendingUpdates :: Lens' Cluster (Maybe ClusterPendingUpdates)

-- | The number of shards in the cluster
cluster_numberOfShards :: Lens' Cluster (Maybe Int)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
cluster_snapshotWindow :: Lens' Cluster (Maybe Text)

-- | The name of the subnet group used by the cluster
cluster_subnetGroupName :: Lens' Cluster (Maybe Text)

-- | A flag to indicate if In-transit encryption is enabled
cluster_tLSEnabled :: Lens' Cluster (Maybe Bool)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
cluster_maintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The ID of the KMS key used to encrypt the cluster
cluster_kmsKeyId :: Lens' Cluster (Maybe Text)

-- | A list of shards that are members of the cluster.
cluster_shards :: Lens' Cluster (Maybe [Shard])

-- | The user-supplied name of the cluster. This identifier is a unique key
--   that identifies a cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Redis engine patch version used by the cluster
cluster_enginePatchVersion :: Lens' Cluster (Maybe Text)

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
cluster_snapshotRetentionLimit :: Lens' Cluster (Maybe Int)

-- | The cluster's node type
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The SNS topic must be in Active status to receive notifications
cluster_snsTopicStatus :: Lens' Cluster (Maybe Text)

-- | A description of the cluster
cluster_description :: Lens' Cluster (Maybe Text)

-- | The name of the Access Control List associated with this cluster.
cluster_aCLName :: Lens' Cluster (Maybe Text)

-- | The cluster's configuration endpoint
cluster_clusterEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The name of the parameter group used by the cluster
cluster_parameterGroupName :: Lens' Cluster (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Cluster.Cluster
instance GHC.Show.Show Amazonka.MemoryDb.Types.Cluster.Cluster
instance GHC.Read.Read Amazonka.MemoryDb.Types.Cluster.Cluster
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Cluster.Cluster
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Cluster.Cluster
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Cluster.Cluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Cluster.Cluster


module Amazonka.MemoryDb.Types.Snapshot

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClusterConfiguration -> Maybe Text -> Snapshot

-- | The status of the snapshot. Valid values: creating | available |
--   restoring | copying | deleting.
[$sel:status:Snapshot'] :: Snapshot -> Maybe Text

-- | The ARN (Amazon Resource Name) of the snapshot.
[$sel:arn:Snapshot'] :: Snapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the snapshot
[$sel:name:Snapshot'] :: Snapshot -> Maybe Text

-- | The configuration of the cluster from which the snapshot was taken
[$sel:clusterConfiguration:Snapshot'] :: Snapshot -> Maybe ClusterConfiguration

-- | Indicates whether the snapshot is from an automatic backup (automated)
--   or was created manually (manual).
[$sel:source:Snapshot'] :: Snapshot -> Maybe Text

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Snapshot'</a>, <a>snapshot_status</a> - The status of
--   the snapshot. Valid values: creating | available | restoring | copying
--   | deleting.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:name:Snapshot'</a>, <a>snapshot_name</a> - The name of the
--   snapshot
--   
--   <a>$sel:clusterConfiguration:Snapshot'</a>,
--   <a>snapshot_clusterConfiguration</a> - The configuration of the
--   cluster from which the snapshot was taken
--   
--   <a>$sel:source:Snapshot'</a>, <a>snapshot_source</a> - Indicates
--   whether the snapshot is from an automatic backup (automated) or was
--   created manually (manual).
newSnapshot :: Snapshot

-- | The status of the snapshot. Valid values: creating | available |
--   restoring | copying | deleting.
snapshot_status :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | The name of the snapshot
snapshot_name :: Lens' Snapshot (Maybe Text)

-- | The configuration of the cluster from which the snapshot was taken
snapshot_clusterConfiguration :: Lens' Snapshot (Maybe ClusterConfiguration)

-- | Indicates whether the snapshot is from an automatic backup (automated)
--   or was created manually (manual).
snapshot_source :: Lens' Snapshot (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance GHC.Show.Show Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance GHC.Read.Read Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Snapshot.Snapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Snapshot.Snapshot


module Amazonka.MemoryDb.Types.SourceType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Acl :: SourceType
pattern SourceType_Cluster :: SourceType
pattern SourceType_Node :: SourceType
pattern SourceType_Parameter_group :: SourceType
pattern SourceType_Subnet_group :: SourceType
pattern SourceType_User :: SourceType
instance Amazonka.Data.XML.ToXML Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.XML.FromXML Amazonka.MemoryDb.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MemoryDb.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MemoryDb.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.Log.ToLog Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.Text.ToText Amazonka.MemoryDb.Types.SourceType.SourceType
instance Amazonka.Data.Text.FromText Amazonka.MemoryDb.Types.SourceType.SourceType
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.SourceType.SourceType
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.SourceType.SourceType
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.SourceType.SourceType
instance GHC.Classes.Ord Amazonka.MemoryDb.Types.SourceType.SourceType
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.SourceType.SourceType
instance GHC.Read.Read Amazonka.MemoryDb.Types.SourceType.SourceType
instance GHC.Show.Show Amazonka.MemoryDb.Types.SourceType.SourceType


module Amazonka.MemoryDb.Types.Event

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster or adding or
--   removing a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe SourceType -> Maybe POSIX -> Maybe Text -> Event

-- | The name for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
[$sel:sourceName:Event'] :: Event -> Maybe Text

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe POSIX

-- | The text of the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The name for
--   the source of the event. For example, if the event occurred at the
--   cluster level, the identifier would be the name of the cluster.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | The name for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceName :: Lens' Event (Maybe Text)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Event.Event
instance GHC.Show.Show Amazonka.MemoryDb.Types.Event.Event
instance GHC.Read.Read Amazonka.MemoryDb.Types.Event.Event
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Event.Event
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Event.Event
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Event.Event


module Amazonka.MemoryDb.Types.Subnet

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with MemoryDB.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Subnet

-- | The unique identifier for the subnet.
[$sel:identifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone where the subnet resides
[$sel:availabilityZone:Subnet'] :: Subnet -> Maybe AvailabilityZone

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Subnet'</a>, <a>subnet_identifier</a> - The unique
--   identifier for the subnet.
--   
--   <a>$sel:availabilityZone:Subnet'</a>, <a>subnet_availabilityZone</a> -
--   The Availability Zone where the subnet resides
newSubnet :: Subnet

-- | The unique identifier for the subnet.
subnet_identifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone where the subnet resides
subnet_availabilityZone :: Lens' Subnet (Maybe AvailabilityZone)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Subnet.Subnet
instance GHC.Show.Show Amazonka.MemoryDb.Types.Subnet.Subnet
instance GHC.Read.Read Amazonka.MemoryDb.Types.Subnet.Subnet
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Subnet.Subnet
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Subnet.Subnet
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Subnet.Subnet
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Subnet.Subnet


module Amazonka.MemoryDb.Types.SubnetGroup

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li>CreateSubnetGroup</li>
--   <li>UpdateSubnetGroup</li>
--   </ul>
--   
--   A subnet group is a collection of subnets (typically private) that you
--   can designate for your clusters running in an Amazon Virtual Private
--   Cloud (VPC) environment.
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> SubnetGroup

-- | The ARN (Amazon Resource Name) of the subnet group.
[$sel:arn:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
[$sel:vpcId:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A list of subnets associated with the subnet group.
[$sel:subnets:SubnetGroup'] :: SubnetGroup -> Maybe [Subnet]

-- | The name of the subnet group
[$sel:name:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A description of the subnet group
[$sel:description:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SubnetGroup'</a>, <a>subnetGroup_arn</a> - The ARN (Amazon
--   Resource Name) of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
--   
--   <a>$sel:name:SubnetGroup'</a>, <a>subnetGroup_name</a> - The name of
--   the subnet group
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   A description of the subnet group
newSubnetGroup :: SubnetGroup

-- | The ARN (Amazon Resource Name) of the subnet group.
subnetGroup_arn :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])

-- | The name of the subnet group
subnetGroup_name :: Lens' SubnetGroup (Maybe Text)

-- | A description of the subnet group
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance GHC.Show.Show Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance GHC.Read.Read Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.SubnetGroup.SubnetGroup


module Amazonka.MemoryDb.Types.Tag

-- | A tag that can be added to an MemoryDB resource. Tags are composed of
--   a Key/Value pair. You can use tags to categorize and track all your
--   MemoryDB resources. When you add or remove tags on clusters, those
--   actions will be replicated to all nodes in the cluster. A tag with a
--   null Value is permitted. For more information, see <a>Tagging your
--   MemoryDB resources</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value. May be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key for the tag. May not be null.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.Tag.Tag
instance GHC.Show.Show Amazonka.MemoryDb.Types.Tag.Tag
instance GHC.Read.Read Amazonka.MemoryDb.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.Types.Tag.Tag


module Amazonka.MemoryDb.Types.UnprocessedCluster

-- | A cluster whose updates have failed
--   
--   <i>See:</i> <a>newUnprocessedCluster</a> smart constructor.
data UnprocessedCluster
UnprocessedCluster' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedCluster

-- | The name of the cluster
[$sel:clusterName:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | The error type associated with the update failure
[$sel:errorType:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | The error message associated with the update failure
[$sel:errorMessage:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | Create a value of <a>UnprocessedCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_clusterName</a> - The name of the cluster
--   
--   <a>$sel:errorType:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorType</a> - The error type associated with
--   the update failure
--   
--   <a>$sel:errorMessage:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorMessage</a> - The error message associated
--   with the update failure
newUnprocessedCluster :: UnprocessedCluster

-- | The name of the cluster
unprocessedCluster_clusterName :: Lens' UnprocessedCluster (Maybe Text)

-- | The error type associated with the update failure
unprocessedCluster_errorType :: Lens' UnprocessedCluster (Maybe Text)

-- | The error message associated with the update failure
unprocessedCluster_errorMessage :: Lens' UnprocessedCluster (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance GHC.Show.Show Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance GHC.Read.Read Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.UnprocessedCluster.UnprocessedCluster


module Amazonka.MemoryDb.Types.User

-- | You create users and assign them specific permissions by using an
--   access string. You assign the users to Access Control Lists aligned
--   with a specific role (administrators, human resources) that are then
--   deployed to one or more MemoryDB clusters.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The name of the user
[$sel:name:User'] :: User -> Maybe Text

-- | The names of the Access Control Lists to which the user belongs
[$sel:aCLNames:User'] :: User -> Maybe [Text]

-- | The minimum engine version supported for the user
[$sel:minimumEngineVersion:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:name:User'</a>, <a>user_name</a> - The name of the user
--   
--   <a>$sel:aCLNames:User'</a>, <a>user_aCLNames</a> - The names of the
--   Access Control Lists to which the user belongs
--   
--   <a>$sel:minimumEngineVersion:User'</a>,
--   <a>user_minimumEngineVersion</a> - The minimum engine version
--   supported for the user
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The name of the user
user_name :: Lens' User (Maybe Text)

-- | The names of the Access Control Lists to which the user belongs
user_aCLNames :: Lens' User (Maybe [Text])

-- | The minimum engine version supported for the user
user_minimumEngineVersion :: Lens' User (Maybe Text)
instance GHC.Generics.Generic Amazonka.MemoryDb.Types.User.User
instance GHC.Show.Show Amazonka.MemoryDb.Types.User.User
instance GHC.Read.Read Amazonka.MemoryDb.Types.User.User
instance GHC.Classes.Eq Amazonka.MemoryDb.Types.User.User
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MemoryDb.Types.User.User
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.Types.User.User
instance Control.DeepSeq.NFData Amazonka.MemoryDb.Types.User.User


module Amazonka.MemoryDb.Types

-- | API version <tt>2021-01-01</tt> of the Amazon MemoryDB SDK
--   configuration.
defaultService :: Service

_InvalidNodeStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ACLNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError

_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

_ACLAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_ShardNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidUserStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidSnapshotStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_DefaultUserRequired :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_APICallRateForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_ACLQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidKMSKeyFault :: AsError a => Getting (First ServiceError) a ServiceError

_InsufficientClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

_TestFailoverNotAvailableFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetNotAllowedFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidACLStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_ShardsPerClusterQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceUpdateNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_DuplicateUserNameFault :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

_NoOperationFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidCredentialsException :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AZStatus
AZStatus' :: Text -> AZStatus
[fromAZStatus] :: AZStatus -> Text
pattern AZStatus_Multiaz :: AZStatus
pattern AZStatus_Singleaz :: AZStatus
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
newtype InputAuthenticationType
InputAuthenticationType' :: Text -> InputAuthenticationType
[fromInputAuthenticationType] :: InputAuthenticationType -> Text
pattern InputAuthenticationType_Password :: InputAuthenticationType
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Complete :: ServiceUpdateStatus
pattern ServiceUpdateStatus_In_progress :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Scheduled :: ServiceUpdateStatus
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Acl :: SourceType
pattern SourceType_Cluster :: SourceType
pattern SourceType_Node :: SourceType
pattern SourceType_Parameter_group :: SourceType
pattern SourceType_Subnet_group :: SourceType
pattern SourceType_User :: SourceType

-- | An Access Control List. You can authenticate users with Access Contol
--   Lists. ACLs enable you to control cluster access by grouping users.
--   These Access control lists are designed as a way to organize access to
--   clusters.
--   
--   <i>See:</i> <a>newACL</a> smart constructor.
data ACL
ACL' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe ACLPendingChanges -> Maybe Text -> Maybe [Text] -> ACL

-- | Indicates ACL status. Can be "creating", "active", "modifying",
--   "deleting".
[$sel:status:ACL'] :: ACL -> Maybe Text

-- | The list of user names that belong to the ACL.
[$sel:userNames:ACL'] :: ACL -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the ACL
[$sel:arn:ACL'] :: ACL -> Maybe Text

-- | The name of the Access Control List
[$sel:name:ACL'] :: ACL -> Maybe Text

-- | A list of updates being applied to the ACL.
[$sel:pendingChanges:ACL'] :: ACL -> Maybe ACLPendingChanges

-- | The minimum engine version supported for the ACL
[$sel:minimumEngineVersion:ACL'] :: ACL -> Maybe Text

-- | A list of clusters associated with the ACL.
[$sel:clusters:ACL'] :: ACL -> Maybe [Text]

-- | Create a value of <a>ACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ACL'</a>, <a>acl_status</a> - Indicates ACL status. Can
--   be "creating", "active", "modifying", "deleting".
--   
--   <a>$sel:userNames:ACL'</a>, <a>acl_userNames</a> - The list of user
--   names that belong to the ACL.
--   
--   <a>$sel:arn:ACL'</a>, <a>acl_arn</a> - The Amazon Resource Name (ARN)
--   of the ACL
--   
--   <a>$sel:name:ACL'</a>, <a>acl_name</a> - The name of the Access
--   Control List
--   
--   <a>$sel:pendingChanges:ACL'</a>, <a>acl_pendingChanges</a> - A list of
--   updates being applied to the ACL.
--   
--   <a>$sel:minimumEngineVersion:ACL'</a>, <a>acl_minimumEngineVersion</a>
--   - The minimum engine version supported for the ACL
--   
--   <a>$sel:clusters:ACL'</a>, <a>acl_clusters</a> - A list of clusters
--   associated with the ACL.
newACL :: ACL

-- | Indicates ACL status. Can be "creating", "active", "modifying",
--   "deleting".
acl_status :: Lens' ACL (Maybe Text)

-- | The list of user names that belong to the ACL.
acl_userNames :: Lens' ACL (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the ACL
acl_arn :: Lens' ACL (Maybe Text)

-- | The name of the Access Control List
acl_name :: Lens' ACL (Maybe Text)

-- | A list of updates being applied to the ACL.
acl_pendingChanges :: Lens' ACL (Maybe ACLPendingChanges)

-- | The minimum engine version supported for the ACL
acl_minimumEngineVersion :: Lens' ACL (Maybe Text)

-- | A list of clusters associated with the ACL.
acl_clusters :: Lens' ACL (Maybe [Text])

-- | Returns the updates being applied to the ACL.
--   
--   <i>See:</i> <a>newACLPendingChanges</a> smart constructor.
data ACLPendingChanges
ACLPendingChanges' :: Maybe [Text] -> Maybe [Text] -> ACLPendingChanges

-- | A list of users being added to the ACL
[$sel:userNamesToAdd:ACLPendingChanges'] :: ACLPendingChanges -> Maybe [Text]

-- | A list of user names being removed from the ACL
[$sel:userNamesToRemove:ACLPendingChanges'] :: ACLPendingChanges -> Maybe [Text]

-- | Create a value of <a>ACLPendingChanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNamesToAdd:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToAdd</a> - A list of users being added
--   to the ACL
--   
--   <a>$sel:userNamesToRemove:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToRemove</a> - A list of user names
--   being removed from the ACL
newACLPendingChanges :: ACLPendingChanges

-- | A list of users being added to the ACL
aCLPendingChanges_userNamesToAdd :: Lens' ACLPendingChanges (Maybe [Text])

-- | A list of user names being removed from the ACL
aCLPendingChanges_userNamesToRemove :: Lens' ACLPendingChanges (Maybe [Text])

-- | The status of the ACL update
--   
--   <i>See:</i> <a>newACLsUpdateStatus</a> smart constructor.
data ACLsUpdateStatus
ACLsUpdateStatus' :: Maybe Text -> ACLsUpdateStatus

-- | A list of ACLs pending to be applied.
[$sel:aCLToApply:ACLsUpdateStatus'] :: ACLsUpdateStatus -> Maybe Text

-- | Create a value of <a>ACLsUpdateStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aCLToApply:ACLsUpdateStatus'</a>,
--   <a>aCLsUpdateStatus_aCLToApply</a> - A list of ACLs pending to be
--   applied.
newACLsUpdateStatus :: ACLsUpdateStatus

-- | A list of ACLs pending to be applied.
aCLsUpdateStatus_aCLToApply :: Lens' ACLsUpdateStatus (Maybe Text)

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | The number of passwords belonging to the user. The maximum is two.
[$sel:passwordCount:Authentication'] :: Authentication -> Maybe Int

-- | Indicates whether the user requires a password to authenticate.
[$sel:type':Authentication'] :: Authentication -> Maybe AuthenticationType

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthenticationMode</a> smart constructor.
data AuthenticationMode
AuthenticationMode' :: Maybe (NonEmpty Text) -> Maybe InputAuthenticationType -> AuthenticationMode

-- | The password(s) used for authentication
[$sel:passwords:AuthenticationMode'] :: AuthenticationMode -> Maybe (NonEmpty Text)

-- | Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
[$sel:type':AuthenticationMode'] :: AuthenticationMode -> Maybe InputAuthenticationType

-- | Create a value of <a>AuthenticationMode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwords:AuthenticationMode'</a>,
--   <a>authenticationMode_passwords</a> - The password(s) used for
--   authentication
--   
--   <a>$sel:type':AuthenticationMode'</a>, <a>authenticationMode_type</a>
--   - Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
newAuthenticationMode :: AuthenticationMode

-- | The password(s) used for authentication
authenticationMode_passwords :: Lens' AuthenticationMode (Maybe (NonEmpty Text))

-- | Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
authenticationMode_type :: Lens' AuthenticationMode (Maybe InputAuthenticationType)

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | The name of the Availability Zone.
[$sel:name:AvailabilityZone'] :: AvailabilityZone -> Maybe Text

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [SecurityGroupMembership] -> Maybe AZStatus -> Maybe Text -> Maybe Text -> Maybe ClusterPendingUpdates -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Shard] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe Text -> Cluster

-- | The Redis engine version used by the cluster
[$sel:engineVersion:Cluster'] :: Cluster -> Maybe Text

-- | The status of the cluster. For example, Available, Updating, Creating.
[$sel:status:Cluster'] :: Cluster -> Maybe Text

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
[$sel:autoMinorVersionUpgrade:Cluster'] :: Cluster -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the SNS notification topic
[$sel:snsTopicArn:Cluster'] :: Cluster -> Maybe Text

-- | A list of security groups used by the cluster
[$sel:securityGroups:Cluster'] :: Cluster -> Maybe [SecurityGroupMembership]

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
[$sel:availabilityMode:Cluster'] :: Cluster -> Maybe AZStatus

-- | The status of the parameter group used by the cluster, for example
--   'active' or 'applying'.
[$sel:parameterGroupStatus:Cluster'] :: Cluster -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:arn:Cluster'] :: Cluster -> Maybe Text

-- | A group of settings that are currently being applied.
[$sel:pendingUpdates:Cluster'] :: Cluster -> Maybe ClusterPendingUpdates

-- | The number of shards in the cluster
[$sel:numberOfShards:Cluster'] :: Cluster -> Maybe Int

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
[$sel:snapshotWindow:Cluster'] :: Cluster -> Maybe Text

-- | The name of the subnet group used by the cluster
[$sel:subnetGroupName:Cluster'] :: Cluster -> Maybe Text

-- | A flag to indicate if In-transit encryption is enabled
[$sel:tLSEnabled:Cluster'] :: Cluster -> Maybe Bool

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
[$sel:maintenanceWindow:Cluster'] :: Cluster -> Maybe Text

-- | The ID of the KMS key used to encrypt the cluster
[$sel:kmsKeyId:Cluster'] :: Cluster -> Maybe Text

-- | A list of shards that are members of the cluster.
[$sel:shards:Cluster'] :: Cluster -> Maybe [Shard]

-- | The user-supplied name of the cluster. This identifier is a unique key
--   that identifies a cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | The Redis engine patch version used by the cluster
[$sel:enginePatchVersion:Cluster'] :: Cluster -> Maybe Text

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
[$sel:snapshotRetentionLimit:Cluster'] :: Cluster -> Maybe Int

-- | The cluster's node type
[$sel:nodeType:Cluster'] :: Cluster -> Maybe Text

-- | The SNS topic must be in Active status to receive notifications
[$sel:snsTopicStatus:Cluster'] :: Cluster -> Maybe Text

-- | A description of the cluster
[$sel:description:Cluster'] :: Cluster -> Maybe Text

-- | The name of the Access Control List associated with this cluster.
[$sel:aCLName:Cluster'] :: Cluster -> Maybe Text

-- | The cluster's configuration endpoint
[$sel:clusterEndpoint:Cluster'] :: Cluster -> Maybe Endpoint

-- | The name of the parameter group used by the cluster
[$sel:parameterGroupName:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Cluster'</a>, <a>cluster_engineVersion</a> - The
--   Redis engine version used by the cluster
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The status of the
--   cluster. For example, Available, Updating, Creating.
--   
--   <a>$sel:autoMinorVersionUpgrade:Cluster'</a>,
--   <a>cluster_autoMinorVersionUpgrade</a> - When set to true, the cluster
--   will automatically receive minor engine version upgrades after launch.
--   
--   <a>$sel:snsTopicArn:Cluster'</a>, <a>cluster_snsTopicArn</a> - The
--   Amazon Resource Name (ARN) of the SNS notification topic
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups used by the cluster
--   
--   <a>$sel:availabilityMode:Cluster'</a>, <a>cluster_availabilityMode</a>
--   - Indicates if the cluster has a Multi-AZ configuration (multiaz) or
--   not (singleaz).
--   
--   <a>$sel:parameterGroupStatus:Cluster'</a>,
--   <a>cluster_parameterGroupStatus</a> - The status of the parameter
--   group used by the cluster, for example 'active' or 'applying'.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:pendingUpdates:Cluster'</a>, <a>cluster_pendingUpdates</a> - A
--   group of settings that are currently being applied.
--   
--   <a>$sel:numberOfShards:Cluster'</a>, <a>cluster_numberOfShards</a> -
--   The number of shards in the cluster
--   
--   <a>$sel:snapshotWindow:Cluster'</a>, <a>cluster_snapshotWindow</a> -
--   The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
--   
--   <a>$sel:subnetGroupName:Cluster'</a>, <a>cluster_subnetGroupName</a> -
--   The name of the subnet group used by the cluster
--   
--   <a>$sel:tLSEnabled:Cluster'</a>, <a>cluster_tLSEnabled</a> - A flag to
--   indicate if In-transit encryption is enabled
--   
--   <a>$sel:maintenanceWindow:Cluster'</a>,
--   <a>cluster_maintenanceWindow</a> - Specifies the weekly time range
--   during which maintenance on the cluster is performed. It is specified
--   as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
--   minimum maintenance window is a 60 minute period.
--   
--   <a>$sel:kmsKeyId:Cluster'</a>, <a>cluster_kmsKeyId</a> - The ID of the
--   KMS key used to encrypt the cluster
--   
--   <a>$sel:shards:Cluster'</a>, <a>cluster_shards</a> - A list of shards
--   that are members of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The user-supplied
--   name of the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:enginePatchVersion:Cluster'</a>,
--   <a>cluster_enginePatchVersion</a> - The Redis engine patch version
--   used by the cluster
--   
--   <a>$sel:snapshotRetentionLimit:Cluster'</a>,
--   <a>cluster_snapshotRetentionLimit</a> - The number of days for which
--   MemoryDB retains automatic snapshots before deleting them. For
--   example, if you set SnapshotRetentionLimit to 5, a snapshot that was
--   taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The cluster's
--   node type
--   
--   <a>$sel:snsTopicStatus:Cluster'</a>, <a>cluster_snsTopicStatus</a> -
--   The SNS topic must be in Active status to receive notifications
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - A
--   description of the cluster
--   
--   <a>$sel:aCLName:Cluster'</a>, <a>cluster_aCLName</a> - The name of the
--   Access Control List associated with this cluster.
--   
--   <a>$sel:clusterEndpoint:Cluster'</a>, <a>cluster_clusterEndpoint</a> -
--   The cluster's configuration endpoint
--   
--   <a>$sel:parameterGroupName:Cluster'</a>,
--   <a>cluster_parameterGroupName</a> - The name of the parameter group
--   used by the cluster
newCluster :: Cluster

-- | The Redis engine version used by the cluster
cluster_engineVersion :: Lens' Cluster (Maybe Text)

-- | The status of the cluster. For example, Available, Updating, Creating.
cluster_status :: Lens' Cluster (Maybe Text)

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
cluster_autoMinorVersionUpgrade :: Lens' Cluster (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the SNS notification topic
cluster_snsTopicArn :: Lens' Cluster (Maybe Text)

-- | A list of security groups used by the cluster
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
cluster_availabilityMode :: Lens' Cluster (Maybe AZStatus)

-- | The status of the parameter group used by the cluster, for example
--   'active' or 'applying'.
cluster_parameterGroupStatus :: Lens' Cluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | A group of settings that are currently being applied.
cluster_pendingUpdates :: Lens' Cluster (Maybe ClusterPendingUpdates)

-- | The number of shards in the cluster
cluster_numberOfShards :: Lens' Cluster (Maybe Int)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
cluster_snapshotWindow :: Lens' Cluster (Maybe Text)

-- | The name of the subnet group used by the cluster
cluster_subnetGroupName :: Lens' Cluster (Maybe Text)

-- | A flag to indicate if In-transit encryption is enabled
cluster_tLSEnabled :: Lens' Cluster (Maybe Bool)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
cluster_maintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The ID of the KMS key used to encrypt the cluster
cluster_kmsKeyId :: Lens' Cluster (Maybe Text)

-- | A list of shards that are members of the cluster.
cluster_shards :: Lens' Cluster (Maybe [Shard])

-- | The user-supplied name of the cluster. This identifier is a unique key
--   that identifies a cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Redis engine patch version used by the cluster
cluster_enginePatchVersion :: Lens' Cluster (Maybe Text)

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
cluster_snapshotRetentionLimit :: Lens' Cluster (Maybe Int)

-- | The cluster's node type
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The SNS topic must be in Active status to receive notifications
cluster_snsTopicStatus :: Lens' Cluster (Maybe Text)

-- | A description of the cluster
cluster_description :: Lens' Cluster (Maybe Text)

-- | The name of the Access Control List associated with this cluster.
cluster_aCLName :: Lens' Cluster (Maybe Text)

-- | The cluster's configuration endpoint
cluster_clusterEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The name of the parameter group used by the cluster
cluster_parameterGroupName :: Lens' Cluster (Maybe Text)

-- | A list of cluster configuration options.
--   
--   <i>See:</i> <a>newClusterConfiguration</a> smart constructor.
data ClusterConfiguration
ClusterConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [ShardDetail] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ClusterConfiguration

-- | The Redis engine version used by the cluster
[$sel:engineVersion:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The ID of the VPC the cluster belongs to
[$sel:vpcId:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The snapshot window set by the cluster
[$sel:snapshotWindow:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The name of the subnet group used by the cluster
[$sel:subnetGroupName:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The number of shards in the cluster
[$sel:numShards:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The specified maintenance window for the cluster
[$sel:maintenanceWindow:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the SNS notification topic for the
--   cluster
[$sel:topicArn:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The list of shards in the cluster
[$sel:shards:ClusterConfiguration'] :: ClusterConfiguration -> Maybe [ShardDetail]

-- | The name of the cluster
[$sel:name:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The snapshot retention limit set by the cluster
[$sel:snapshotRetentionLimit:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The node type used for the cluster
[$sel:nodeType:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The description of the cluster configuration
[$sel:description:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | The port used by the cluster
[$sel:port:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Int

-- | The name of parameter group used by the cluster
[$sel:parameterGroupName:ClusterConfiguration'] :: ClusterConfiguration -> Maybe Text

-- | Create a value of <a>ClusterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_engineVersion</a> - The Redis engine version
--   used by the cluster
--   
--   <a>$sel:vpcId:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_vpcId</a> - The ID of the VPC the cluster
--   belongs to
--   
--   <a>$sel:snapshotWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotWindow</a> - The snapshot window set
--   by the cluster
--   
--   <a>$sel:subnetGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_subnetGroupName</a> - The name of the subnet
--   group used by the cluster
--   
--   <a>$sel:numShards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_numShards</a> - The number of shards in the
--   cluster
--   
--   <a>$sel:maintenanceWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_maintenanceWindow</a> - The specified
--   maintenance window for the cluster
--   
--   <a>$sel:topicArn:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_topicArn</a> - The Amazon Resource Name (ARN)
--   of the SNS notification topic for the cluster
--   
--   <a>$sel:shards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_shards</a> - The list of shards in the cluster
--   
--   <a>$sel:name:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_name</a> - The name of the cluster
--   
--   <a>$sel:snapshotRetentionLimit:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotRetentionLimit</a> - The snapshot
--   retention limit set by the cluster
--   
--   <a>$sel:nodeType:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_nodeType</a> - The node type used for the
--   cluster
--   
--   <a>$sel:description:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_description</a> - The description of the
--   cluster configuration
--   
--   <a>$sel:port:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_port</a> - The port used by the cluster
--   
--   <a>$sel:parameterGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_parameterGroupName</a> - The name of parameter
--   group used by the cluster
newClusterConfiguration :: ClusterConfiguration

-- | The Redis engine version used by the cluster
clusterConfiguration_engineVersion :: Lens' ClusterConfiguration (Maybe Text)

-- | The ID of the VPC the cluster belongs to
clusterConfiguration_vpcId :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot window set by the cluster
clusterConfiguration_snapshotWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The name of the subnet group used by the cluster
clusterConfiguration_subnetGroupName :: Lens' ClusterConfiguration (Maybe Text)

-- | The number of shards in the cluster
clusterConfiguration_numShards :: Lens' ClusterConfiguration (Maybe Int)

-- | The specified maintenance window for the cluster
clusterConfiguration_maintenanceWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the SNS notification topic for the
--   cluster
clusterConfiguration_topicArn :: Lens' ClusterConfiguration (Maybe Text)

-- | The list of shards in the cluster
clusterConfiguration_shards :: Lens' ClusterConfiguration (Maybe [ShardDetail])

-- | The name of the cluster
clusterConfiguration_name :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot retention limit set by the cluster
clusterConfiguration_snapshotRetentionLimit :: Lens' ClusterConfiguration (Maybe Int)

-- | The node type used for the cluster
clusterConfiguration_nodeType :: Lens' ClusterConfiguration (Maybe Text)

-- | The description of the cluster configuration
clusterConfiguration_description :: Lens' ClusterConfiguration (Maybe Text)

-- | The port used by the cluster
clusterConfiguration_port :: Lens' ClusterConfiguration (Maybe Int)

-- | The name of parameter group used by the cluster
clusterConfiguration_parameterGroupName :: Lens' ClusterConfiguration (Maybe Text)

-- | A list of updates being applied to the cluster
--   
--   <i>See:</i> <a>newClusterPendingUpdates</a> smart constructor.
data ClusterPendingUpdates
ClusterPendingUpdates' :: Maybe [PendingModifiedServiceUpdate] -> Maybe ReshardingStatus -> Maybe ACLsUpdateStatus -> ClusterPendingUpdates

-- | A list of service updates being applied to the cluster
[$sel:serviceUpdates:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe [PendingModifiedServiceUpdate]

-- | The status of an online resharding operation.
[$sel:resharding:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe ReshardingStatus

-- | A list of ACLs associated with the cluster that are being updated
[$sel:aCLs:ClusterPendingUpdates'] :: ClusterPendingUpdates -> Maybe ACLsUpdateStatus

-- | Create a value of <a>ClusterPendingUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_serviceUpdates</a> - A list of service
--   updates being applied to the cluster
--   
--   <a>$sel:resharding:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_resharding</a> - The status of an online
--   resharding operation.
--   
--   <a>$sel:aCLs:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_aCLs</a> - A list of ACLs associated with the
--   cluster that are being updated
newClusterPendingUpdates :: ClusterPendingUpdates

-- | A list of service updates being applied to the cluster
clusterPendingUpdates_serviceUpdates :: Lens' ClusterPendingUpdates (Maybe [PendingModifiedServiceUpdate])

-- | The status of an online resharding operation.
clusterPendingUpdates_resharding :: Lens' ClusterPendingUpdates (Maybe ReshardingStatus)

-- | A list of ACLs associated with the cluster that are being updated
clusterPendingUpdates_aCLs :: Lens' ClusterPendingUpdates (Maybe ACLsUpdateStatus)

-- | Represents the information required for client programs to connect to
--   the cluster and its nodes.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | The DNS hostname of the node.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that the engine is listening on.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the engine is listening on.
newEndpoint :: Endpoint

-- | The DNS hostname of the node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | Provides details of the Redis engine version
--   
--   <i>See:</i> <a>newEngineVersionInfo</a> smart constructor.
data EngineVersionInfo
EngineVersionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> EngineVersionInfo

-- | The engine version
[$sel:engineVersion:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | The patched engine version
[$sel:enginePatchVersion:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | Specifies the name of the parameter group family to which the engine
--   default parameters apply.
[$sel:parameterGroupFamily:EngineVersionInfo'] :: EngineVersionInfo -> Maybe Text

-- | Create a value of <a>EngineVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_engineVersion</a> - The engine version
--   
--   <a>$sel:enginePatchVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_enginePatchVersion</a> - The patched engine
--   version
--   
--   <a>$sel:parameterGroupFamily:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_parameterGroupFamily</a> - Specifies the name of
--   the parameter group family to which the engine default parameters
--   apply.
newEngineVersionInfo :: EngineVersionInfo

-- | The engine version
engineVersionInfo_engineVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | The patched engine version
engineVersionInfo_enginePatchVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | Specifies the name of the parameter group family to which the engine
--   default parameters apply.
engineVersionInfo_parameterGroupFamily :: Lens' EngineVersionInfo (Maybe Text)

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster or adding or
--   removing a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe SourceType -> Maybe POSIX -> Maybe Text -> Event

-- | The name for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
[$sel:sourceName:Event'] :: Event -> Maybe Text

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe POSIX

-- | The text of the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The name for
--   the source of the event. For example, if the event occurred at the
--   cluster level, the identifier would be the name of the cluster.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | The name for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceName :: Lens' Event (Maybe Text)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserName.
[$sel:name:Filter'] :: Filter -> Text

-- | The property values to filter on. For example, "user-123".
[$sel:values:Filter'] :: Filter -> NonEmpty Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserName.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | The property being filtered. For example, UserName.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)

-- | Represents an individual node within a cluster. Each node runs its own
--   instance of the cluster's protocol-compliant caching software.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe POSIX -> Node

-- | The status of the service update on the node
[$sel:status:Node'] :: Node -> Maybe Text

-- | The Availability Zone in which the node resides
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The node identifier. A node name is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster name, shard name and node name
--   uniquely identifies every node used in a customer's Amazon account.
[$sel:name:Node'] :: Node -> Maybe Text

-- | The hostname for connecting to this node.
[$sel:endpoint:Node'] :: Node -> Maybe Endpoint

-- | The date and time when the node was created.
[$sel:createTime:Node'] :: Node -> Maybe POSIX

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the
--   service update on the node
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node resides
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node identifier. A node
--   name is a numeric identifier (0001, 0002, etc.). The combination of
--   cluster name, shard name and node name uniquely identifies every node
--   used in a customer's Amazon account.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The hostname for
--   connecting to this node.
--   
--   <a>$sel:createTime:Node'</a>, <a>node_createTime</a> - The date and
--   time when the node was created.
newNode :: Node

-- | The status of the service update on the node
node_status :: Lens' Node (Maybe Text)

-- | The Availability Zone in which the node resides
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The node identifier. A node name is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster name, shard name and node name
--   uniquely identifies every node used in a customer's Amazon account.
node_name :: Lens' Node (Maybe Text)

-- | The hostname for connecting to this node.
node_endpoint :: Lens' Node (Maybe Endpoint)

-- | The date and time when the node was created.
node_createTime :: Lens' Node (Maybe UTCTime)

-- | Describes an individual setting that controls some aspect of MemoryDB
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Parameter

-- | The value of the parameter
[$sel:value:Parameter'] :: Parameter -> Maybe Text

-- | The name of the parameter
[$sel:name:Parameter'] :: Parameter -> Maybe Text

-- | The earliest engine version to which the parameter can apply.
[$sel:minimumEngineVersion:Parameter'] :: Parameter -> Maybe Text

-- | The parameter's data type
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | The valid range of values for the parameter.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Parameter'</a>, <a>parameter_value</a> - The value of
--   the parameter
--   
--   <a>$sel:name:Parameter'</a>, <a>parameter_name</a> - The name of the
--   parameter
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest engine version to
--   which the parameter can apply.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The
--   parameter's data type
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
newParameter :: Parameter

-- | The value of the parameter
parameter_value :: Lens' Parameter (Maybe Text)

-- | The name of the parameter
parameter_name :: Lens' Parameter (Maybe Text)

-- | The earliest engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The parameter's data type
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)

-- | Represents the output of a CreateParameterGroup operation. A parameter
--   group represents a combination of specific values for the parameters
--   that are passed to the engine software during startup.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ParameterGroup

-- | The Amazon Resource Name (ARN) of the parameter group
[$sel:arn:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | The name of the parameter group family that this parameter group is
--   compatible with.
[$sel:family:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | The name of the parameter group
[$sel:name:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | A description of the parameter group
[$sel:description:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ParameterGroup'</a>, <a>parameterGroup_arn</a> - The
--   Amazon Resource Name (ARN) of the parameter group
--   
--   <a>$sel:family:ParameterGroup'</a>, <a>parameterGroup_family</a> - The
--   name of the parameter group family that this parameter group is
--   compatible with.
--   
--   <a>$sel:name:ParameterGroup'</a>, <a>parameterGroup_name</a> - The
--   name of the parameter group
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group
newParameterGroup :: ParameterGroup

-- | The Amazon Resource Name (ARN) of the parameter group
parameterGroup_arn :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group family that this parameter group is
--   compatible with.
parameterGroup_family :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group
parameterGroup_name :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | Update action that has yet to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newPendingModifiedServiceUpdate</a> smart constructor.
data PendingModifiedServiceUpdate
PendingModifiedServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe Text -> PendingModifiedServiceUpdate

-- | The status of the service update
[$sel:status:PendingModifiedServiceUpdate'] :: PendingModifiedServiceUpdate -> Maybe ServiceUpdateStatus

-- | The unique ID of the service update
[$sel:serviceUpdateName:PendingModifiedServiceUpdate'] :: PendingModifiedServiceUpdate -> Maybe Text

-- | Create a value of <a>PendingModifiedServiceUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_status</a> - The status of the service
--   update
--   
--   <a>$sel:serviceUpdateName:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_serviceUpdateName</a> - The unique ID
--   of the service update
newPendingModifiedServiceUpdate :: PendingModifiedServiceUpdate

-- | The status of the service update
pendingModifiedServiceUpdate_status :: Lens' PendingModifiedServiceUpdate (Maybe ServiceUpdateStatus)

-- | The unique ID of the service update
pendingModifiedServiceUpdate_serviceUpdateName :: Lens' PendingModifiedServiceUpdate (Maybe Text)

-- | A request to configure the number of replicas in a shard
--   
--   <i>See:</i> <a>newReplicaConfigurationRequest</a> smart constructor.
data ReplicaConfigurationRequest
ReplicaConfigurationRequest' :: Maybe Int -> ReplicaConfigurationRequest

-- | The number of replicas to scale up or down to
[$sel:replicaCount:ReplicaConfigurationRequest'] :: ReplicaConfigurationRequest -> Maybe Int

-- | Create a value of <a>ReplicaConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicaCount:ReplicaConfigurationRequest'</a>,
--   <a>replicaConfigurationRequest_replicaCount</a> - The number of
--   replicas to scale up or down to
newReplicaConfigurationRequest :: ReplicaConfigurationRequest

-- | The number of replicas to scale up or down to
replicaConfigurationRequest_replicaCount :: Lens' ReplicaConfigurationRequest (Maybe Int)

-- | The status of the online resharding
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | The status of the online resharding slot migration
[$sel:slotMigration:ReshardingStatus'] :: ReshardingStatus -> Maybe SlotMigration

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - The status of the online
--   resharding slot migration
newReshardingStatus :: ReshardingStatus

-- | The status of the online resharding slot migration
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)

-- | Represents a single security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of the security group membership. The status changes
--   whenever a security group is modified, or when the security groups
--   assigned to a cluster are modified.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The identifier of the security group.
[$sel:securityGroupId:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the security
--   group membership. The status changes whenever a security group is
--   modified, or when the security groups assigned to a cluster are
--   modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of the security group membership. The status changes
--   whenever a security group is modified, or when the security groups
--   assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)

-- | An update that you can apply to your MemoryDB clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> ServiceUpdate

-- | The status of the service update
[$sel:status:ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateStatus

-- | The date at which the service update will be automatically applied
[$sel:autoUpdateStartDate:ServiceUpdate'] :: ServiceUpdate -> Maybe POSIX

-- | The unique ID of the service update
[$sel:serviceUpdateName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | A list of nodes updated by the service update
[$sel:nodesUpdated:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | The date when the service update is initially available
[$sel:releaseDate:ServiceUpdate'] :: ServiceUpdate -> Maybe POSIX

-- | The name of the cluster to which the service update applies
[$sel:clusterName:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Reflects the nature of the service update
[$sel:type':ServiceUpdate'] :: ServiceUpdate -> Maybe ServiceUpdateType

-- | Provides details of the service update
[$sel:description:ServiceUpdate'] :: ServiceUpdate -> Maybe Text

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceUpdate'</a>, <a>serviceUpdate_status</a> - The
--   status of the service update
--   
--   <a>$sel:autoUpdateStartDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateStartDate</a> - The date at which the
--   service update will be automatically applied
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:nodesUpdated:ServiceUpdate'</a>,
--   <a>serviceUpdate_nodesUpdated</a> - A list of nodes updated by the
--   service update
--   
--   <a>$sel:releaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_releaseDate</a> - The date when the service update is
--   initially available
--   
--   <a>$sel:clusterName:ServiceUpdate'</a>,
--   <a>serviceUpdate_clusterName</a> - The name of the cluster to which
--   the service update applies
--   
--   <a>$sel:type':ServiceUpdate'</a>, <a>serviceUpdate_type</a> - Reflects
--   the nature of the service update
--   
--   <a>$sel:description:ServiceUpdate'</a>,
--   <a>serviceUpdate_description</a> - Provides details of the service
--   update
newServiceUpdate :: ServiceUpdate

-- | The status of the service update
serviceUpdate_status :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The date at which the service update will be automatically applied
serviceUpdate_autoUpdateStartDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | A list of nodes updated by the service update
serviceUpdate_nodesUpdated :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_releaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The name of the cluster to which the service update applies
serviceUpdate_clusterName :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_type :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | Provides details of the service update
serviceUpdate_description :: Lens' ServiceUpdate (Maybe Text)

-- | A request to apply a service update
--   
--   <i>See:</i> <a>newServiceUpdateRequest</a> smart constructor.
data ServiceUpdateRequest
ServiceUpdateRequest' :: Maybe Text -> ServiceUpdateRequest

-- | The unique ID of the service update
[$sel:serviceUpdateNameToApply:ServiceUpdateRequest'] :: ServiceUpdateRequest -> Maybe Text

-- | Create a value of <a>ServiceUpdateRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateNameToApply:ServiceUpdateRequest'</a>,
--   <a>serviceUpdateRequest_serviceUpdateNameToApply</a> - The unique ID
--   of the service update
newServiceUpdateRequest :: ServiceUpdateRequest

-- | The unique ID of the service update
serviceUpdateRequest_serviceUpdateNameToApply :: Lens' ServiceUpdateRequest (Maybe Text)

-- | Represents a collection of nodes in a cluster. One node in the node
--   group is the read/write primary node. All the other nodes are
--   read-only Replica nodes.
--   
--   <i>See:</i> <a>newShard</a> smart constructor.
data Shard
Shard' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Node] -> Shard

-- | The current state of this replication group - creating, available,
--   modifying, deleting.
[$sel:status:Shard'] :: Shard -> Maybe Text

-- | The keyspace for this shard.
[$sel:slots:Shard'] :: Shard -> Maybe Text

-- | The number of nodes in the shard
[$sel:numberOfNodes:Shard'] :: Shard -> Maybe Int

-- | The name of the shard
[$sel:name:Shard'] :: Shard -> Maybe Text

-- | A list containing information about individual nodes within the shard
[$sel:nodes:Shard'] :: Shard -> Maybe [Node]

-- | Create a value of <a>Shard</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shard'</a>, <a>shard_status</a> - The current state of
--   this replication group - creating, available, modifying, deleting.
--   
--   <a>$sel:slots:Shard'</a>, <a>shard_slots</a> - The keyspace for this
--   shard.
--   
--   <a>$sel:numberOfNodes:Shard'</a>, <a>shard_numberOfNodes</a> - The
--   number of nodes in the shard
--   
--   <a>$sel:name:Shard'</a>, <a>shard_name</a> - The name of the shard
--   
--   <a>$sel:nodes:Shard'</a>, <a>shard_nodes</a> - A list containing
--   information about individual nodes within the shard
newShard :: Shard

-- | The current state of this replication group - creating, available,
--   modifying, deleting.
shard_status :: Lens' Shard (Maybe Text)

-- | The keyspace for this shard.
shard_slots :: Lens' Shard (Maybe Text)

-- | The number of nodes in the shard
shard_numberOfNodes :: Lens' Shard (Maybe Int)

-- | The name of the shard
shard_name :: Lens' Shard (Maybe Text)

-- | A list containing information about individual nodes within the shard
shard_nodes :: Lens' Shard (Maybe [Node])

-- | Shard configuration options. Each shard configuration has the
--   following: Slots and ReplicaCount.
--   
--   <i>See:</i> <a>newShardConfiguration</a> smart constructor.
data ShardConfiguration
ShardConfiguration' :: Maybe Text -> Maybe Int -> ShardConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
[$sel:slots:ShardConfiguration'] :: ShardConfiguration -> Maybe Text

-- | The number of read replica nodes in this shard.
[$sel:replicaCount:ShardConfiguration'] :: ShardConfiguration -> Maybe Int

-- | Create a value of <a>ShardConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:ShardConfiguration'</a>, <a>shardConfiguration_slots</a>
--   - A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
--   
--   <a>$sel:replicaCount:ShardConfiguration'</a>,
--   <a>shardConfiguration_replicaCount</a> - The number of read replica
--   nodes in this shard.
newShardConfiguration :: ShardConfiguration

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
shardConfiguration_slots :: Lens' ShardConfiguration (Maybe Text)

-- | The number of read replica nodes in this shard.
shardConfiguration_replicaCount :: Lens' ShardConfiguration (Maybe Int)

-- | A request to configure the sharding properties of a cluster
--   
--   <i>See:</i> <a>newShardConfigurationRequest</a> smart constructor.
data ShardConfigurationRequest
ShardConfigurationRequest' :: Maybe Int -> ShardConfigurationRequest

-- | The number of shards in the cluster
[$sel:shardCount:ShardConfigurationRequest'] :: ShardConfigurationRequest -> Maybe Int

-- | Create a value of <a>ShardConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shardCount:ShardConfigurationRequest'</a>,
--   <a>shardConfigurationRequest_shardCount</a> - The number of shards in
--   the cluster
newShardConfigurationRequest :: ShardConfigurationRequest

-- | The number of shards in the cluster
shardConfigurationRequest_shardCount :: Lens' ShardConfigurationRequest (Maybe Int)

-- | Provides details of a shard in a snapshot
--   
--   <i>See:</i> <a>newShardDetail</a> smart constructor.
data ShardDetail
ShardDetail' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ShardConfiguration -> ShardDetail

-- | The size of the shard's snapshot
[$sel:size:ShardDetail'] :: ShardDetail -> Maybe Text

-- | The date and time that the shard's snapshot was created
[$sel:snapshotCreationTime:ShardDetail'] :: ShardDetail -> Maybe POSIX

-- | The name of the shard
[$sel:name:ShardDetail'] :: ShardDetail -> Maybe Text

-- | The configuration details of the shard
[$sel:configuration:ShardDetail'] :: ShardDetail -> Maybe ShardConfiguration

-- | Create a value of <a>ShardDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ShardDetail'</a>, <a>shardDetail_size</a> - The size of
--   the shard's snapshot
--   
--   <a>$sel:snapshotCreationTime:ShardDetail'</a>,
--   <a>shardDetail_snapshotCreationTime</a> - The date and time that the
--   shard's snapshot was created
--   
--   <a>$sel:name:ShardDetail'</a>, <a>shardDetail_name</a> - The name of
--   the shard
--   
--   <a>$sel:configuration:ShardDetail'</a>,
--   <a>shardDetail_configuration</a> - The configuration details of the
--   shard
newShardDetail :: ShardDetail

-- | The size of the shard's snapshot
shardDetail_size :: Lens' ShardDetail (Maybe Text)

-- | The date and time that the shard's snapshot was created
shardDetail_snapshotCreationTime :: Lens' ShardDetail (Maybe UTCTime)

-- | The name of the shard
shardDetail_name :: Lens' ShardDetail (Maybe Text)

-- | The configuration details of the shard
shardDetail_configuration :: Lens' ShardDetail (Maybe ShardConfiguration)

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | The percentage of the slot migration that is complete.
[$sel:progressPercentage:SlotMigration'] :: SlotMigration -> Maybe Double

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClusterConfiguration -> Maybe Text -> Snapshot

-- | The status of the snapshot. Valid values: creating | available |
--   restoring | copying | deleting.
[$sel:status:Snapshot'] :: Snapshot -> Maybe Text

-- | The ARN (Amazon Resource Name) of the snapshot.
[$sel:arn:Snapshot'] :: Snapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:Snapshot'] :: Snapshot -> Maybe Text

-- | The name of the snapshot
[$sel:name:Snapshot'] :: Snapshot -> Maybe Text

-- | The configuration of the cluster from which the snapshot was taken
[$sel:clusterConfiguration:Snapshot'] :: Snapshot -> Maybe ClusterConfiguration

-- | Indicates whether the snapshot is from an automatic backup (automated)
--   or was created manually (manual).
[$sel:source:Snapshot'] :: Snapshot -> Maybe Text

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Snapshot'</a>, <a>snapshot_status</a> - The status of
--   the snapshot. Valid values: creating | available | restoring | copying
--   | deleting.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:name:Snapshot'</a>, <a>snapshot_name</a> - The name of the
--   snapshot
--   
--   <a>$sel:clusterConfiguration:Snapshot'</a>,
--   <a>snapshot_clusterConfiguration</a> - The configuration of the
--   cluster from which the snapshot was taken
--   
--   <a>$sel:source:Snapshot'</a>, <a>snapshot_source</a> - Indicates
--   whether the snapshot is from an automatic backup (automated) or was
--   created manually (manual).
newSnapshot :: Snapshot

-- | The status of the snapshot. Valid values: creating | available |
--   restoring | copying | deleting.
snapshot_status :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | The name of the snapshot
snapshot_name :: Lens' Snapshot (Maybe Text)

-- | The configuration of the cluster from which the snapshot was taken
snapshot_clusterConfiguration :: Lens' Snapshot (Maybe ClusterConfiguration)

-- | Indicates whether the snapshot is from an automatic backup (automated)
--   or was created manually (manual).
snapshot_source :: Lens' Snapshot (Maybe Text)

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with MemoryDB.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Subnet

-- | The unique identifier for the subnet.
[$sel:identifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone where the subnet resides
[$sel:availabilityZone:Subnet'] :: Subnet -> Maybe AvailabilityZone

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Subnet'</a>, <a>subnet_identifier</a> - The unique
--   identifier for the subnet.
--   
--   <a>$sel:availabilityZone:Subnet'</a>, <a>subnet_availabilityZone</a> -
--   The Availability Zone where the subnet resides
newSubnet :: Subnet

-- | The unique identifier for the subnet.
subnet_identifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone where the subnet resides
subnet_availabilityZone :: Lens' Subnet (Maybe AvailabilityZone)

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li>CreateSubnetGroup</li>
--   <li>UpdateSubnetGroup</li>
--   </ul>
--   
--   A subnet group is a collection of subnets (typically private) that you
--   can designate for your clusters running in an Amazon Virtual Private
--   Cloud (VPC) environment.
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> SubnetGroup

-- | The ARN (Amazon Resource Name) of the subnet group.
[$sel:arn:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
[$sel:vpcId:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A list of subnets associated with the subnet group.
[$sel:subnets:SubnetGroup'] :: SubnetGroup -> Maybe [Subnet]

-- | The name of the subnet group
[$sel:name:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A description of the subnet group
[$sel:description:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SubnetGroup'</a>, <a>subnetGroup_arn</a> - The ARN (Amazon
--   Resource Name) of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
--   
--   <a>$sel:name:SubnetGroup'</a>, <a>subnetGroup_name</a> - The name of
--   the subnet group
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   A description of the subnet group
newSubnetGroup :: SubnetGroup

-- | The ARN (Amazon Resource Name) of the subnet group.
subnetGroup_arn :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])

-- | The name of the subnet group
subnetGroup_name :: Lens' SubnetGroup (Maybe Text)

-- | A description of the subnet group
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)

-- | A tag that can be added to an MemoryDB resource. Tags are composed of
--   a Key/Value pair. You can use tags to categorize and track all your
--   MemoryDB resources. When you add or remove tags on clusters, those
--   actions will be replicated to all nodes in the cluster. A tag with a
--   null Value is permitted. For more information, see <a>Tagging your
--   MemoryDB resources</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's value. May be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key for the tag. May not be null.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)

-- | A cluster whose updates have failed
--   
--   <i>See:</i> <a>newUnprocessedCluster</a> smart constructor.
data UnprocessedCluster
UnprocessedCluster' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedCluster

-- | The name of the cluster
[$sel:clusterName:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | The error type associated with the update failure
[$sel:errorType:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | The error message associated with the update failure
[$sel:errorMessage:UnprocessedCluster'] :: UnprocessedCluster -> Maybe Text

-- | Create a value of <a>UnprocessedCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_clusterName</a> - The name of the cluster
--   
--   <a>$sel:errorType:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorType</a> - The error type associated with
--   the update failure
--   
--   <a>$sel:errorMessage:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorMessage</a> - The error message associated
--   with the update failure
newUnprocessedCluster :: UnprocessedCluster

-- | The name of the cluster
unprocessedCluster_clusterName :: Lens' UnprocessedCluster (Maybe Text)

-- | The error type associated with the update failure
unprocessedCluster_errorType :: Lens' UnprocessedCluster (Maybe Text)

-- | The error message associated with the update failure
unprocessedCluster_errorMessage :: Lens' UnprocessedCluster (Maybe Text)

-- | You create users and assign them specific permissions by using an
--   access string. You assign the users to Access Control Lists aligned
--   with a specific role (administrators, human resources) that are then
--   deployed to one or more MemoryDB clusters.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
[$sel:status:User'] :: User -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user.
[$sel:arn:User'] :: User -> Maybe Text

-- | Denotes whether the user requires a password to authenticate.
[$sel:authentication:User'] :: User -> Maybe Authentication

-- | Access permissions string used for this user.
[$sel:accessString:User'] :: User -> Maybe Text

-- | The name of the user
[$sel:name:User'] :: User -> Maybe Text

-- | The names of the Access Control Lists to which the user belongs
[$sel:aCLNames:User'] :: User -> Maybe [Text]

-- | The minimum engine version supported for the user
[$sel:minimumEngineVersion:User'] :: User -> Maybe Text

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:name:User'</a>, <a>user_name</a> - The name of the user
--   
--   <a>$sel:aCLNames:User'</a>, <a>user_aCLNames</a> - The names of the
--   Access Control Lists to which the user belongs
--   
--   <a>$sel:minimumEngineVersion:User'</a>,
--   <a>user_minimumEngineVersion</a> - The minimum engine version
--   supported for the user
newUser :: User

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The name of the user
user_name :: Lens' User (Maybe Text)

-- | The names of the Access Control Lists to which the user belongs
user_aCLNames :: Lens' User (Maybe [Text])

-- | The minimum engine version supported for the user
user_minimumEngineVersion :: Lens' User (Maybe Text)


-- | A tag is a key-value pair where the key and value are case-sensitive.
--   You can use tags to categorize and track all your MemoryDB resources.
--   When you add or remove tags on clusters, those actions will be
--   replicated to all nodes in the cluster. For more information, see
--   <a>Resource-level permissions</a>.
--   
--   For example, you can use cost-allocation tags to your MemoryDB
--   resources, Amazon generates a cost allocation report as a
--   comma-separated value (CSV) file with your usage and costs aggregated
--   by your tags. You can apply tags that represent business categories
--   (such as cost centers, application names, or owners) to organize your
--   costs across multiple services. For more information, see <a>Using
--   Cost Allocation Tags</a>.
module Amazonka.MemoryDb.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Maybe [Tag] -> Int -> TagResourceResponse

-- | A list of tags as key-value pairs.
[$sel:tagList:TagResourceResponse'] :: TagResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagResourceResponse'</a>,
--   <a>tagResourceResponse_tagList</a> - A list of tags as key-value
--   pairs.
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | A list of tags as key-value pairs.
tagResourceResponse_tagList :: Lens' TagResourceResponse (Maybe [Tag])

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.TagResource.TagResource
instance GHC.Show.Show Amazonka.MemoryDb.TagResource.TagResource
instance GHC.Read.Read Amazonka.MemoryDb.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.MemoryDb.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.MemoryDb.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.MemoryDb.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.MemoryDb.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.MemoryDb.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.MemoryDb.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.TagResource.TagResource


-- | Modifies the parameters of a parameter group to the engine or system
--   default value. You can reset specific parameters by submitting a list
--   of parameter names. To reset the entire parameter group, specify the
--   AllParameters and ParameterGroupName parameters.
module Amazonka.MemoryDb.ResetParameterGroup

-- | <i>See:</i> <a>newResetParameterGroup</a> smart constructor.
data ResetParameterGroup
ResetParameterGroup' :: Maybe [Text] -> Maybe Bool -> Text -> ResetParameterGroup

-- | An array of parameter names to reset to their default values. If
--   AllParameters is true, do not use ParameterNames. If AllParameters is
--   false, you must specify the name of at least one parameter to reset.
[$sel:parameterNames:ResetParameterGroup'] :: ResetParameterGroup -> Maybe [Text]

-- | If true, all parameters in the parameter group are reset to their
--   default values. If false, only the parameters listed by ParameterNames
--   are reset to their default values.
[$sel:allParameters:ResetParameterGroup'] :: ResetParameterGroup -> Maybe Bool

-- | The name of the parameter group to reset.
[$sel:parameterGroupName:ResetParameterGroup'] :: ResetParameterGroup -> Text

-- | Create a value of <a>ResetParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterNames:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_parameterNames</a> - An array of parameter
--   names to reset to their default values. If AllParameters is true, do
--   not use ParameterNames. If AllParameters is false, you must specify
--   the name of at least one parameter to reset.
--   
--   <a>$sel:allParameters:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_allParameters</a> - If true, all parameters in
--   the parameter group are reset to their default values. If false, only
--   the parameters listed by ParameterNames are reset to their default
--   values.
--   
--   <a>$sel:parameterGroupName:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to reset.
newResetParameterGroup :: Text -> ResetParameterGroup

-- | An array of parameter names to reset to their default values. If
--   AllParameters is true, do not use ParameterNames. If AllParameters is
--   false, you must specify the name of at least one parameter to reset.
resetParameterGroup_parameterNames :: Lens' ResetParameterGroup (Maybe [Text])

-- | If true, all parameters in the parameter group are reset to their
--   default values. If false, only the parameters listed by ParameterNames
--   are reset to their default values.
resetParameterGroup_allParameters :: Lens' ResetParameterGroup (Maybe Bool)

-- | The name of the parameter group to reset.
resetParameterGroup_parameterGroupName :: Lens' ResetParameterGroup Text

-- | <i>See:</i> <a>newResetParameterGroupResponse</a> smart constructor.
data ResetParameterGroupResponse
ResetParameterGroupResponse' :: Maybe ParameterGroup -> Int -> ResetParameterGroupResponse

-- | The parameter group being reset.
[$sel:parameterGroup:ResetParameterGroupResponse'] :: ResetParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:ResetParameterGroupResponse'] :: ResetParameterGroupResponse -> Int

-- | Create a value of <a>ResetParameterGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:ResetParameterGroupResponse'</a>,
--   <a>resetParameterGroupResponse_parameterGroup</a> - The parameter
--   group being reset.
--   
--   <a>$sel:httpStatus:ResetParameterGroupResponse'</a>,
--   <a>resetParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newResetParameterGroupResponse :: Int -> ResetParameterGroupResponse

-- | The parameter group being reset.
resetParameterGroupResponse_parameterGroup :: Lens' ResetParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
resetParameterGroupResponse_httpStatus :: Lens' ResetParameterGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance GHC.Show.Show Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance GHC.Read.Read Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.ResetParameterGroup.ResetParameterGroup


-- | Lists all tags currently on a named resource. A tag is a key-value
--   pair where the key and value are case-sensitive. You can use tags to
--   categorize and track your MemoryDB resources. For more information,
--   see <a>Tagging your MemoryDB resources</a>
module Amazonka.MemoryDb.ListTags

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Text -> ListTags

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags
[$sel:resourceArn:ListTags'] :: ListTags -> Text

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTags'</a>, <a>listTags_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the resource for which you want the list
--   of tags
newListTags :: Text -> ListTags

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags
listTags_resourceArn :: Lens' ListTags Text

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe [Tag] -> Int -> ListTagsResponse

-- | A list of tags as key-value pairs.
[$sel:tagList:ListTagsResponse'] :: ListTagsResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsResponse'] :: ListTagsResponse -> Int

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:ListTagsResponse'</a>, <a>listTagsResponse_tagList</a>
--   - A list of tags as key-value pairs.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | A list of tags as key-value pairs.
listTagsResponse_tagList :: Lens' ListTagsResponse (Maybe [Tag])

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.ListTags.ListTags
instance GHC.Show.Show Amazonka.MemoryDb.ListTags.ListTags
instance GHC.Read.Read Amazonka.MemoryDb.ListTags.ListTags
instance GHC.Classes.Eq Amazonka.MemoryDb.ListTags.ListTags
instance GHC.Generics.Generic Amazonka.MemoryDb.ListTags.ListTagsResponse
instance GHC.Show.Show Amazonka.MemoryDb.ListTags.ListTagsResponse
instance GHC.Read.Read Amazonka.MemoryDb.ListTags.ListTagsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.ListTags.ListTagsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.ListTags.ListTags
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ListTags.ListTagsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.ListTags.ListTags
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ListTags.ListTags
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.ListTags.ListTags
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.ListTags.ListTags
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.ListTags.ListTags
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.ListTags.ListTags


-- | Lists all available node types that you can scale to from your
--   cluster's current node type. When you use the UpdateCluster operation
--   to scale your cluster, the value of the NodeType parameter must be one
--   of the node types returned by this operation.
module Amazonka.MemoryDb.ListAllowedNodeTypeUpdates

-- | <i>See:</i> <a>newListAllowedNodeTypeUpdates</a> smart constructor.
data ListAllowedNodeTypeUpdates
ListAllowedNodeTypeUpdates' :: Text -> ListAllowedNodeTypeUpdates

-- | The name of the cluster you want to scale. MemoryDB uses the cluster
--   name to identify the current node type being used by this cluster, and
--   from that to create a list of node types you can scale up to.
[$sel:clusterName:ListAllowedNodeTypeUpdates'] :: ListAllowedNodeTypeUpdates -> Text

-- | Create a value of <a>ListAllowedNodeTypeUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:ListAllowedNodeTypeUpdates'</a>,
--   <a>listAllowedNodeTypeUpdates_clusterName</a> - The name of the
--   cluster you want to scale. MemoryDB uses the cluster name to identify
--   the current node type being used by this cluster, and from that to
--   create a list of node types you can scale up to.
newListAllowedNodeTypeUpdates :: Text -> ListAllowedNodeTypeUpdates

-- | The name of the cluster you want to scale. MemoryDB uses the cluster
--   name to identify the current node type being used by this cluster, and
--   from that to create a list of node types you can scale up to.
listAllowedNodeTypeUpdates_clusterName :: Lens' ListAllowedNodeTypeUpdates Text

-- | <i>See:</i> <a>newListAllowedNodeTypeUpdatesResponse</a> smart
--   constructor.
data ListAllowedNodeTypeUpdatesResponse
ListAllowedNodeTypeUpdatesResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ListAllowedNodeTypeUpdatesResponse

-- | A list node types which you can use to scale up your cluster.
[$sel:scaleUpNodeTypes:ListAllowedNodeTypeUpdatesResponse'] :: ListAllowedNodeTypeUpdatesResponse -> Maybe [Text]

-- | A list node types which you can use to scale down your cluster.
[$sel:scaleDownNodeTypes:ListAllowedNodeTypeUpdatesResponse'] :: ListAllowedNodeTypeUpdatesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListAllowedNodeTypeUpdatesResponse'] :: ListAllowedNodeTypeUpdatesResponse -> Int

-- | Create a value of <a>ListAllowedNodeTypeUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scaleUpNodeTypes:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_scaleUpNodeTypes</a> - A list
--   node types which you can use to scale up your cluster.
--   
--   <a>$sel:scaleDownNodeTypes:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_scaleDownNodeTypes</a> - A list
--   node types which you can use to scale down your cluster.
--   
--   <a>$sel:httpStatus:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_httpStatus</a> - The response's
--   http status code.
newListAllowedNodeTypeUpdatesResponse :: Int -> ListAllowedNodeTypeUpdatesResponse

-- | A list node types which you can use to scale up your cluster.
listAllowedNodeTypeUpdatesResponse_scaleUpNodeTypes :: Lens' ListAllowedNodeTypeUpdatesResponse (Maybe [Text])

-- | A list node types which you can use to scale down your cluster.
listAllowedNodeTypeUpdatesResponse_scaleDownNodeTypes :: Lens' ListAllowedNodeTypeUpdatesResponse (Maybe [Text])

-- | The response's http status code.
listAllowedNodeTypeUpdatesResponse_httpStatus :: Lens' ListAllowedNodeTypeUpdatesResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance GHC.Show.Show Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance GHC.Read.Read Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance GHC.Classes.Eq Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance GHC.Generics.Generic Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdatesResponse
instance GHC.Show.Show Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdatesResponse
instance GHC.Read.Read Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdatesResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdatesResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdatesResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Control.DeepSeq.NFData Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.ListAllowedNodeTypeUpdates.ListAllowedNodeTypeUpdates


-- | Used to failover a shard
module Amazonka.MemoryDb.FailoverShard

-- | <i>See:</i> <a>newFailoverShard</a> smart constructor.
data FailoverShard
FailoverShard' :: Text -> Text -> FailoverShard

-- | The cluster being failed over
[$sel:clusterName:FailoverShard'] :: FailoverShard -> Text

-- | The name of the shard
[$sel:shardName:FailoverShard'] :: FailoverShard -> Text

-- | Create a value of <a>FailoverShard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:FailoverShard'</a>,
--   <a>failoverShard_clusterName</a> - The cluster being failed over
--   
--   <a>$sel:shardName:FailoverShard'</a>, <a>failoverShard_shardName</a> -
--   The name of the shard
newFailoverShard :: Text -> Text -> FailoverShard

-- | The cluster being failed over
failoverShard_clusterName :: Lens' FailoverShard Text

-- | The name of the shard
failoverShard_shardName :: Lens' FailoverShard Text

-- | <i>See:</i> <a>newFailoverShardResponse</a> smart constructor.
data FailoverShardResponse
FailoverShardResponse' :: Maybe Cluster -> Int -> FailoverShardResponse

-- | The cluster being failed over
[$sel:cluster:FailoverShardResponse'] :: FailoverShardResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:FailoverShardResponse'] :: FailoverShardResponse -> Int

-- | Create a value of <a>FailoverShardResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:FailoverShardResponse'</a>,
--   <a>failoverShardResponse_cluster</a> - The cluster being failed over
--   
--   <a>$sel:httpStatus:FailoverShardResponse'</a>,
--   <a>failoverShardResponse_httpStatus</a> - The response's http status
--   code.
newFailoverShardResponse :: Int -> FailoverShardResponse

-- | The cluster being failed over
failoverShardResponse_cluster :: Lens' FailoverShardResponse (Maybe Cluster)

-- | The response's http status code.
failoverShardResponse_httpStatus :: Lens' FailoverShardResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.FailoverShard.FailoverShard
instance GHC.Show.Show Amazonka.MemoryDb.FailoverShard.FailoverShard
instance GHC.Read.Read Amazonka.MemoryDb.FailoverShard.FailoverShard
instance GHC.Classes.Eq Amazonka.MemoryDb.FailoverShard.FailoverShard
instance GHC.Generics.Generic Amazonka.MemoryDb.FailoverShard.FailoverShardResponse
instance GHC.Show.Show Amazonka.MemoryDb.FailoverShard.FailoverShardResponse
instance GHC.Read.Read Amazonka.MemoryDb.FailoverShard.FailoverShardResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.FailoverShard.FailoverShardResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Control.DeepSeq.NFData Amazonka.MemoryDb.FailoverShard.FailoverShardResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Control.DeepSeq.NFData Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.FailoverShard.FailoverShard
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.FailoverShard.FailoverShard


-- | Returns a list of users.
module Amazonka.MemoryDb.DescribeUsers

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeUsers

-- | Filter to determine the list of users to return.
[$sel:filters:DescribeUsers'] :: DescribeUsers -> Maybe [Filter]

-- | The name of the user
[$sel:userName:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeUsers'] :: DescribeUsers -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeUsers'] :: DescribeUsers -> Maybe Int

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeUsers'</a>, <a>describeUsers_filters</a> -
--   Filter to determine the list of users to return.
--   
--   <a>$sel:userName:DescribeUsers'</a>, <a>describeUsers_userName</a> -
--   The name of the user
--   
--   <a>$sel:nextToken:DescribeUsers'</a>, <a>describeUsers_nextToken</a> -
--   An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeUsers'</a>, <a>describeUsers_maxResults</a>
--   - The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
newDescribeUsers :: DescribeUsers

-- | Filter to determine the list of users to return.
describeUsers_filters :: Lens' DescribeUsers (Maybe [Filter])

-- | The name of the user
describeUsers_userName :: Lens' DescribeUsers (Maybe Text)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeUsers_nextToken :: Lens' DescribeUsers (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeUsers_maxResults :: Lens' DescribeUsers (Maybe Int)

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe [User] -> Maybe Text -> Int -> DescribeUsersResponse

-- | A list of users.
[$sel:users:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe [User]

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeUsersResponse'] :: DescribeUsersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeUsersResponse'] :: DescribeUsersResponse -> Int

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - A list of users.
--   
--   <a>$sel:nextToken:DescribeUsers'</a>,
--   <a>describeUsersResponse_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | A list of users.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeUsersResponse_nextToken :: Lens' DescribeUsersResponse (Maybe Text)

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance GHC.Show.Show Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance GHC.Read.Read Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeUsers.DescribeUsersResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeUsers.DescribeUsersResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeUsers.DescribeUsersResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeUsers.DescribeUsersResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeUsers.DescribeUsersResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeUsers.DescribeUsers
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeUsers.DescribeUsers


-- | Returns a list of subnet group descriptions. If a subnet group name is
--   specified, the list contains only the description of that group.
module Amazonka.MemoryDb.DescribeSubnetGroups

-- | <i>See:</i> <a>newDescribeSubnetGroups</a> smart constructor.
data DescribeSubnetGroups
DescribeSubnetGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeSubnetGroups

-- | The name of the subnet group to return details for.
[$sel:subnetGroupName:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe Text

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe Int

-- | Create a value of <a>DescribeSubnetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_subnetGroupName</a> - The name of the subnet
--   group to return details for.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_maxResults</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeSubnetGroups :: DescribeSubnetGroups

-- | The name of the subnet group to return details for.
describeSubnetGroups_subnetGroupName :: Lens' DescribeSubnetGroups (Maybe Text)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSubnetGroups_nextToken :: Lens' DescribeSubnetGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeSubnetGroups_maxResults :: Lens' DescribeSubnetGroups (Maybe Int)

-- | <i>See:</i> <a>newDescribeSubnetGroupsResponse</a> smart constructor.
data DescribeSubnetGroupsResponse
DescribeSubnetGroupsResponse' :: Maybe [SubnetGroup] -> Maybe Text -> Int -> DescribeSubnetGroupsResponse

-- | A list of subnet groups. Each element in the list contains detailed
--   information about one group.
[$sel:subnetGroups:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Maybe [SubnetGroup]

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Int

-- | Create a value of <a>DescribeSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroups:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_subnetGroups</a> - A list of subnet
--   groups. Each element in the list contains detailed information about
--   one group.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroupsResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSubnetGroupsResponse :: Int -> DescribeSubnetGroupsResponse

-- | A list of subnet groups. Each element in the list contains detailed
--   information about one group.
describeSubnetGroupsResponse_subnetGroups :: Lens' DescribeSubnetGroupsResponse (Maybe [SubnetGroup])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSubnetGroupsResponse_nextToken :: Lens' DescribeSubnetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeSubnetGroupsResponse_httpStatus :: Lens' DescribeSubnetGroupsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Show.Show Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Read.Read Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeSubnetGroups.DescribeSubnetGroups


-- | Returns information about cluster snapshots. By default,
--   DescribeSnapshots lists all of your snapshots; it can optionally
--   describe a single snapshot, or just the snapshots associated with a
--   particular cluster.
module Amazonka.MemoryDb.DescribeSnapshots

-- | <i>See:</i> <a>newDescribeSnapshots</a> smart constructor.
data DescribeSnapshots
DescribeSnapshots' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeSnapshots

-- | A Boolean value which if true, the shard configuration is included in
--   the snapshot description.
[$sel:showDetail:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Bool

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | If set to system, the output shows snapshots that were automatically
--   created by MemoryDB. If set to user the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
[$sel:source:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
[$sel:clusterName:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this named snapshot is described.
[$sel:snapshotName:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeSnapshots'] :: DescribeSnapshots -> Maybe Int

-- | Create a value of <a>DescribeSnapshots</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showDetail:DescribeSnapshots'</a>,
--   <a>describeSnapshots_showDetail</a> - A Boolean value which if true,
--   the shard configuration is included in the snapshot description.
--   
--   <a>$sel:nextToken:DescribeSnapshots'</a>,
--   <a>describeSnapshots_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:source:DescribeSnapshots'</a>, <a>describeSnapshots_source</a>
--   - If set to system, the output shows snapshots that were automatically
--   created by MemoryDB. If set to user the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
--   
--   <a>$sel:clusterName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_clusterName</a> - A user-supplied cluster
--   identifier. If this parameter is specified, only snapshots associated
--   with that specific cluster are described.
--   
--   <a>$sel:snapshotName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotName</a> - A user-supplied name of the
--   snapshot. If this parameter is specified, only this named snapshot is
--   described.
--   
--   <a>$sel:maxResults:DescribeSnapshots'</a>,
--   <a>describeSnapshots_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeSnapshots :: DescribeSnapshots

-- | A Boolean value which if true, the shard configuration is included in
--   the snapshot description.
describeSnapshots_showDetail :: Lens' DescribeSnapshots (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSnapshots_nextToken :: Lens' DescribeSnapshots (Maybe Text)

-- | If set to system, the output shows snapshots that were automatically
--   created by MemoryDB. If set to user the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
describeSnapshots_source :: Lens' DescribeSnapshots (Maybe Text)

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
describeSnapshots_clusterName :: Lens' DescribeSnapshots (Maybe Text)

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this named snapshot is described.
describeSnapshots_snapshotName :: Lens' DescribeSnapshots (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeSnapshots_maxResults :: Lens' DescribeSnapshots (Maybe Int)

-- | <i>See:</i> <a>newDescribeSnapshotsResponse</a> smart constructor.
data DescribeSnapshotsResponse
DescribeSnapshotsResponse' :: Maybe Text -> Maybe [Snapshot] -> Int -> DescribeSnapshotsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Maybe Text

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
[$sel:snapshots:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Maybe [Snapshot]

-- | The response's http status code.
[$sel:httpStatus:DescribeSnapshotsResponse'] :: DescribeSnapshotsResponse -> Int

-- | Create a value of <a>DescribeSnapshotsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSnapshots'</a>,
--   <a>describeSnapshotsResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:snapshots:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_snapshots</a> - A list of snapshots. Each
--   item in the list contains detailed information about one snapshot.
--   
--   <a>$sel:httpStatus:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSnapshotsResponse :: Int -> DescribeSnapshotsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSnapshotsResponse_nextToken :: Lens' DescribeSnapshotsResponse (Maybe Text)

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
describeSnapshotsResponse_snapshots :: Lens' DescribeSnapshotsResponse (Maybe [Snapshot])

-- | The response's http status code.
describeSnapshotsResponse_httpStatus :: Lens' DescribeSnapshotsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance GHC.Show.Show Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance GHC.Read.Read Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshotsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshotsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshotsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeSnapshots.DescribeSnapshots


-- | Returns details of the service updates
module Amazonka.MemoryDb.DescribeServiceUpdates

-- | <i>See:</i> <a>newDescribeServiceUpdates</a> smart constructor.
data DescribeServiceUpdates
DescribeServiceUpdates' :: Maybe [ServiceUpdateStatus] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeServiceUpdates

-- | The status(es) of the service updates to filter on
[$sel:status:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe [ServiceUpdateStatus]

-- | The unique ID of the service update to describe.
[$sel:serviceUpdateName:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Text

-- | The list of cluster names to identify service updates to apply
[$sel:clusterNames:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe [Text]

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeServiceUpdates'] :: DescribeServiceUpdates -> Maybe Int

-- | Create a value of <a>DescribeServiceUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_status</a> - The status(es) of the service
--   updates to filter on
--   
--   <a>$sel:serviceUpdateName:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateName</a> - The unique ID of the
--   service update to describe.
--   
--   <a>$sel:clusterNames:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_clusterNames</a> - The list of cluster names
--   to identify service updates to apply
--   
--   <a>$sel:nextToken:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
newDescribeServiceUpdates :: DescribeServiceUpdates

-- | The status(es) of the service updates to filter on
describeServiceUpdates_status :: Lens' DescribeServiceUpdates (Maybe [ServiceUpdateStatus])

-- | The unique ID of the service update to describe.
describeServiceUpdates_serviceUpdateName :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The list of cluster names to identify service updates to apply
describeServiceUpdates_clusterNames :: Lens' DescribeServiceUpdates (Maybe [Text])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeServiceUpdates_nextToken :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeServiceUpdates_maxResults :: Lens' DescribeServiceUpdates (Maybe Int)

-- | <i>See:</i> <a>newDescribeServiceUpdatesResponse</a> smart
--   constructor.
data DescribeServiceUpdatesResponse
DescribeServiceUpdatesResponse' :: Maybe [ServiceUpdate] -> Maybe Text -> Int -> DescribeServiceUpdatesResponse

-- | A list of service updates
[$sel:serviceUpdates:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Maybe [ServiceUpdate]

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeServiceUpdatesResponse'] :: DescribeServiceUpdatesResponse -> Int

-- | Create a value of <a>DescribeServiceUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_serviceUpdates</a> - A list of
--   service updates
--   
--   <a>$sel:nextToken:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdatesResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServiceUpdatesResponse :: Int -> DescribeServiceUpdatesResponse

-- | A list of service updates
describeServiceUpdatesResponse_serviceUpdates :: Lens' DescribeServiceUpdatesResponse (Maybe [ServiceUpdate])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeServiceUpdatesResponse_nextToken :: Lens' DescribeServiceUpdatesResponse (Maybe Text)

-- | The response's http status code.
describeServiceUpdatesResponse_httpStatus :: Lens' DescribeServiceUpdatesResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Show.Show Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Read.Read Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdatesResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeServiceUpdates.DescribeServiceUpdates


-- | Returns the detailed parameter list for a particular parameter group.
module Amazonka.MemoryDb.DescribeParameters

-- | <i>See:</i> <a>newDescribeParameters</a> smart constructor.
data DescribeParameters
DescribeParameters' :: Maybe Text -> Maybe Int -> Text -> DescribeParameters

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeParameters'] :: DescribeParameters -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeParameters'] :: DescribeParameters -> Maybe Int

-- | he name of a specific parameter group to return details for.
[$sel:parameterGroupName:DescribeParameters'] :: DescribeParameters -> Text

-- | Create a value of <a>DescribeParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParameters_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeParameters'</a>,
--   <a>describeParameters_maxResults</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
--   
--   <a>$sel:parameterGroupName:DescribeParameters'</a>,
--   <a>describeParameters_parameterGroupName</a> - he name of a specific
--   parameter group to return details for.
newDescribeParameters :: Text -> DescribeParameters

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameters_nextToken :: Lens' DescribeParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeParameters_maxResults :: Lens' DescribeParameters (Maybe Int)

-- | he name of a specific parameter group to return details for.
describeParameters_parameterGroupName :: Lens' DescribeParameters Text

-- | <i>See:</i> <a>newDescribeParametersResponse</a> smart constructor.
data DescribeParametersResponse
DescribeParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeParametersResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeParametersResponse'] :: DescribeParametersResponse -> Maybe Text

-- | A list of parameters specific to a particular parameter group. Each
--   element in the list contains detailed information about one parameter.
[$sel:parameters:DescribeParametersResponse'] :: DescribeParametersResponse -> Maybe [Parameter]

-- | The response's http status code.
[$sel:httpStatus:DescribeParametersResponse'] :: DescribeParametersResponse -> Int

-- | Create a value of <a>DescribeParametersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParametersResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:parameters:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_parameters</a> - A list of parameters
--   specific to a particular parameter group. Each element in the list
--   contains detailed information about one parameter.
--   
--   <a>$sel:httpStatus:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeParametersResponse :: Int -> DescribeParametersResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParametersResponse_nextToken :: Lens' DescribeParametersResponse (Maybe Text)

-- | A list of parameters specific to a particular parameter group. Each
--   element in the list contains detailed information about one parameter.
describeParametersResponse_parameters :: Lens' DescribeParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeParametersResponse_httpStatus :: Lens' DescribeParametersResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance GHC.Show.Show Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance GHC.Read.Read Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeParameters.DescribeParametersResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeParameters.DescribeParametersResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeParameters.DescribeParametersResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeParameters.DescribeParametersResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeParameters.DescribeParametersResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeParameters.DescribeParameters
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeParameters.DescribeParameters


-- | Returns a list of parameter group descriptions. If a parameter group
--   name is specified, the list contains only the descriptions for that
--   group.
module Amazonka.MemoryDb.DescribeParameterGroups

-- | <i>See:</i> <a>newDescribeParameterGroups</a> smart constructor.
data DescribeParameterGroups
DescribeParameterGroups' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeParameterGroups

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe Int

-- | The name of a specific parameter group to return details for.
[$sel:parameterGroupName:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe Text

-- | Create a value of <a>DescribeParameterGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
--   
--   <a>$sel:parameterGroupName:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_parameterGroupName</a> - The name of a
--   specific parameter group to return details for.
newDescribeParameterGroups :: DescribeParameterGroups

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameterGroups_nextToken :: Lens' DescribeParameterGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeParameterGroups_maxResults :: Lens' DescribeParameterGroups (Maybe Int)

-- | The name of a specific parameter group to return details for.
describeParameterGroups_parameterGroupName :: Lens' DescribeParameterGroups (Maybe Text)

-- | <i>See:</i> <a>newDescribeParameterGroupsResponse</a> smart
--   constructor.
data DescribeParameterGroupsResponse
DescribeParameterGroupsResponse' :: Maybe Text -> Maybe [ParameterGroup] -> Int -> DescribeParameterGroupsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Maybe Text

-- | A list of parameter groups. Each element in the list contains detailed
--   information about one parameter group.
[$sel:parameterGroups:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Maybe [ParameterGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Int

-- | Create a value of <a>DescribeParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroupsResponse_nextToken</a> - An optional
--   argument to pass in case the total number of records exceeds the value
--   of MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:parameterGroups:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_parameterGroups</a> - A list of
--   parameter groups. Each element in the list contains detailed
--   information about one parameter group.
--   
--   <a>$sel:httpStatus:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeParameterGroupsResponse :: Int -> DescribeParameterGroupsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameterGroupsResponse_nextToken :: Lens' DescribeParameterGroupsResponse (Maybe Text)

-- | A list of parameter groups. Each element in the list contains detailed
--   information about one parameter group.
describeParameterGroupsResponse_parameterGroups :: Lens' DescribeParameterGroupsResponse (Maybe [ParameterGroup])

-- | The response's http status code.
describeParameterGroupsResponse_httpStatus :: Lens' DescribeParameterGroupsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Show.Show Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Read.Read Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroupsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroupsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeParameterGroups.DescribeParameterGroups


-- | Returns events related to clusters, security groups, and parameter
--   groups. You can obtain events specific to a particular cluster,
--   security group, or parameter group by providing the name as a
--   parameter. By default, only the events occurring within the last hour
--   are returned; however, you can retrieve up to 14 days' worth of events
--   if necessary.
module Amazonka.MemoryDb.DescribeEvents

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe POSIX -> Maybe SourceType -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> DescribeEvents

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
[$sel:sourceName:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
[$sel:startTime:DescribeEvents'] :: DescribeEvents -> Maybe POSIX

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
[$sel:sourceType:DescribeEvents'] :: DescribeEvents -> Maybe SourceType

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
[$sel:endTime:DescribeEvents'] :: DescribeEvents -> Maybe POSIX

-- | The number of minutes worth of events to retrieve.
[$sel:duration:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceName:DescribeEvents'</a>,
--   <a>describeEvents_sourceName</a> - The identifier of the event source
--   for which events are returned. If not specified, all sources are
--   included in the response.
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes worth of events to retrieve.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeEvents :: DescribeEvents

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
describeEvents_sourceName :: Lens' DescribeEvents (Maybe Text)

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The number of minutes worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Int)

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeEventsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe Text

-- | A list of events. Each element in the list contains detailed
--   information about one event.
[$sel:events:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe [Event]

-- | The response's http status code.
[$sel:httpStatus:DescribeEventsResponse'] :: DescribeEventsResponse -> Int

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - A list of events. Each element
--   in the list contains detailed information about one event.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | A list of events. Each element in the list contains detailed
--   information about one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance GHC.Show.Show Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance GHC.Read.Read Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeEvents.DescribeEventsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeEvents.DescribeEventsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeEvents.DescribeEventsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeEvents.DescribeEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeEvents.DescribeEventsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeEvents.DescribeEvents
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeEvents.DescribeEvents


-- | Returns a list of the available Redis engine versions.
module Amazonka.MemoryDb.DescribeEngineVersions

-- | <i>See:</i> <a>newDescribeEngineVersions</a> smart constructor.
data DescribeEngineVersions
DescribeEngineVersions' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeEngineVersions

-- | The Redis engine version
[$sel:engineVersion:DescribeEngineVersions'] :: DescribeEngineVersions -> Maybe Text

-- | If true, specifies that only the default version of the specified
--   engine or engine and major version combination is to be returned.
[$sel:defaultOnly:DescribeEngineVersions'] :: DescribeEngineVersions -> Maybe Bool

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeEngineVersions'] :: DescribeEngineVersions -> Maybe Text

-- | The name of a specific parameter group family to return details for.
[$sel:parameterGroupFamily:DescribeEngineVersions'] :: DescribeEngineVersions -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeEngineVersions'] :: DescribeEngineVersions -> Maybe Int

-- | Create a value of <a>DescribeEngineVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_engineVersion</a> - The Redis engine version
--   
--   <a>$sel:defaultOnly:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_defaultOnly</a> - If true, specifies that
--   only the default version of the specified engine or engine and major
--   version combination is to be returned.
--   
--   <a>$sel:nextToken:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:parameterGroupFamily:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_parameterGroupFamily</a> - The name of a
--   specific parameter group family to return details for.
--   
--   <a>$sel:maxResults:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
newDescribeEngineVersions :: DescribeEngineVersions

-- | The Redis engine version
describeEngineVersions_engineVersion :: Lens' DescribeEngineVersions (Maybe Text)

-- | If true, specifies that only the default version of the specified
--   engine or engine and major version combination is to be returned.
describeEngineVersions_defaultOnly :: Lens' DescribeEngineVersions (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEngineVersions_nextToken :: Lens' DescribeEngineVersions (Maybe Text)

-- | The name of a specific parameter group family to return details for.
describeEngineVersions_parameterGroupFamily :: Lens' DescribeEngineVersions (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeEngineVersions_maxResults :: Lens' DescribeEngineVersions (Maybe Int)

-- | <i>See:</i> <a>newDescribeEngineVersionsResponse</a> smart
--   constructor.
data DescribeEngineVersionsResponse
DescribeEngineVersionsResponse' :: Maybe Text -> Maybe [EngineVersionInfo] -> Int -> DescribeEngineVersionsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeEngineVersionsResponse'] :: DescribeEngineVersionsResponse -> Maybe Text

-- | A list of engine version details. Each element in the list contains
--   detailed information about one engine version.
[$sel:engineVersions:DescribeEngineVersionsResponse'] :: DescribeEngineVersionsResponse -> Maybe [EngineVersionInfo]

-- | The response's http status code.
[$sel:httpStatus:DescribeEngineVersionsResponse'] :: DescribeEngineVersionsResponse -> Int

-- | Create a value of <a>DescribeEngineVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEngineVersions'</a>,
--   <a>describeEngineVersionsResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:engineVersions:DescribeEngineVersionsResponse'</a>,
--   <a>describeEngineVersionsResponse_engineVersions</a> - A list of
--   engine version details. Each element in the list contains detailed
--   information about one engine version.
--   
--   <a>$sel:httpStatus:DescribeEngineVersionsResponse'</a>,
--   <a>describeEngineVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEngineVersionsResponse :: Int -> DescribeEngineVersionsResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEngineVersionsResponse_nextToken :: Lens' DescribeEngineVersionsResponse (Maybe Text)

-- | A list of engine version details. Each element in the list contains
--   detailed information about one engine version.
describeEngineVersionsResponse_engineVersions :: Lens' DescribeEngineVersionsResponse (Maybe [EngineVersionInfo])

-- | The response's http status code.
describeEngineVersionsResponse_httpStatus :: Lens' DescribeEngineVersionsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance GHC.Show.Show Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance GHC.Read.Read Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersionsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersionsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersionsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeEngineVersions.DescribeEngineVersions


-- | Returns information about all provisioned clusters if no cluster
--   identifier is specified, or about a specific cluster if a cluster name
--   is supplied.
module Amazonka.MemoryDb.DescribeClusters

-- | <i>See:</i> <a>newDescribeClusters</a> smart constructor.
data DescribeClusters
DescribeClusters' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeClusters

-- | An optional flag that can be included in the request to retrieve
--   information about the individual shard(s).
[$sel:showShardDetails:DescribeClusters'] :: DescribeClusters -> Maybe Bool

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeClusters'] :: DescribeClusters -> Maybe Text

-- | The name of the cluster
[$sel:clusterName:DescribeClusters'] :: DescribeClusters -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeClusters'] :: DescribeClusters -> Maybe Int

-- | Create a value of <a>DescribeClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showShardDetails:DescribeClusters'</a>,
--   <a>describeClusters_showShardDetails</a> - An optional flag that can
--   be included in the request to retrieve information about the
--   individual shard(s).
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClusters_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:clusterName:DescribeClusters'</a>,
--   <a>describeClusters_clusterName</a> - The name of the cluster
--   
--   <a>$sel:maxResults:DescribeClusters'</a>,
--   <a>describeClusters_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeClusters :: DescribeClusters

-- | An optional flag that can be included in the request to retrieve
--   information about the individual shard(s).
describeClusters_showShardDetails :: Lens' DescribeClusters (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeClusters_nextToken :: Lens' DescribeClusters (Maybe Text)

-- | The name of the cluster
describeClusters_clusterName :: Lens' DescribeClusters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeClusters_maxResults :: Lens' DescribeClusters (Maybe Int)

-- | <i>See:</i> <a>newDescribeClustersResponse</a> smart constructor.
data DescribeClustersResponse
DescribeClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> DescribeClustersResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeClustersResponse'] :: DescribeClustersResponse -> Maybe Text

-- | A list of clusters
[$sel:clusters:DescribeClustersResponse'] :: DescribeClustersResponse -> Maybe [Cluster]

-- | The response's http status code.
[$sel:httpStatus:DescribeClustersResponse'] :: DescribeClustersResponse -> Int

-- | Create a value of <a>DescribeClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClustersResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:clusters:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_clusters</a> - A list of clusters
--   
--   <a>$sel:httpStatus:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeClustersResponse :: Int -> DescribeClustersResponse

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeClustersResponse_nextToken :: Lens' DescribeClustersResponse (Maybe Text)

-- | A list of clusters
describeClustersResponse_clusters :: Lens' DescribeClustersResponse (Maybe [Cluster])

-- | The response's http status code.
describeClustersResponse_httpStatus :: Lens' DescribeClustersResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance GHC.Show.Show Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance GHC.Read.Read Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeClusters.DescribeClustersResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeClusters.DescribeClustersResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeClusters.DescribeClustersResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeClusters.DescribeClustersResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeClusters.DescribeClustersResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeClusters.DescribeClusters
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeClusters.DescribeClusters


-- | Returns a list of ACLs
module Amazonka.MemoryDb.DescribeACLs

-- | <i>See:</i> <a>newDescribeACLs</a> smart constructor.
data DescribeACLs
DescribeACLs' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeACLs

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
[$sel:nextToken:DescribeACLs'] :: DescribeACLs -> Maybe Text

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
[$sel:maxResults:DescribeACLs'] :: DescribeACLs -> Maybe Int

-- | The name of the ACL
[$sel:aCLName:DescribeACLs'] :: DescribeACLs -> Maybe Text

-- | Create a value of <a>DescribeACLs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeACLs'</a>, <a>describeACLs_nextToken</a> -
--   An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeACLs'</a>, <a>describeACLs_maxResults</a> -
--   The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
--   
--   <a>$sel:aCLName:DescribeACLs'</a>, <a>describeACLs_aCLName</a> - The
--   name of the ACL
newDescribeACLs :: DescribeACLs

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeACLs_nextToken :: Lens' DescribeACLs (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeACLs_maxResults :: Lens' DescribeACLs (Maybe Int)

-- | The name of the ACL
describeACLs_aCLName :: Lens' DescribeACLs (Maybe Text)

-- | <i>See:</i> <a>newDescribeACLsResponse</a> smart constructor.
data DescribeACLsResponse
DescribeACLsResponse' :: Maybe Text -> Maybe [ACL] -> Int -> DescribeACLsResponse

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
[$sel:nextToken:DescribeACLsResponse'] :: DescribeACLsResponse -> Maybe Text

-- | The list of ACLs
[$sel:aCLs:DescribeACLsResponse'] :: DescribeACLsResponse -> Maybe [ACL]

-- | The response's http status code.
[$sel:httpStatus:DescribeACLsResponse'] :: DescribeACLsResponse -> Int

-- | Create a value of <a>DescribeACLsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeACLs'</a>,
--   <a>describeACLsResponse_nextToken</a> - If nextToken is returned,
--   there are more results available. The value of nextToken is a unique
--   pagination token for each page. Make the call again using the returned
--   token to retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:aCLs:DescribeACLsResponse'</a>,
--   <a>describeACLsResponse_aCLs</a> - The list of ACLs
--   
--   <a>$sel:httpStatus:DescribeACLsResponse'</a>,
--   <a>describeACLsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeACLsResponse :: Int -> DescribeACLsResponse

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
describeACLsResponse_nextToken :: Lens' DescribeACLsResponse (Maybe Text)

-- | The list of ACLs
describeACLsResponse_aCLs :: Lens' DescribeACLsResponse (Maybe [ACL])

-- | The response's http status code.
describeACLsResponse_httpStatus :: Lens' DescribeACLsResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance GHC.Show.Show Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance GHC.Read.Read Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance GHC.Generics.Generic Amazonka.MemoryDb.DescribeACLs.DescribeACLsResponse
instance GHC.Show.Show Amazonka.MemoryDb.DescribeACLs.DescribeACLsResponse
instance GHC.Read.Read Amazonka.MemoryDb.DescribeACLs.DescribeACLsResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DescribeACLs.DescribeACLsResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeACLs.DescribeACLsResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DescribeACLs.DescribeACLs
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DescribeACLs.DescribeACLs


-- | Deletes a user. The user will be removed from all ACLs and in turn
--   removed from all clusters.
module Amazonka.MemoryDb.DeleteUser

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> DeleteUser

-- | The name of the user to delete
[$sel:userName:DeleteUser'] :: DeleteUser -> Text

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - The
--   name of the user to delete
newDeleteUser :: Text -> DeleteUser

-- | The name of the user to delete
deleteUser_userName :: Lens' DeleteUser Text

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: Maybe User -> Int -> DeleteUserResponse

-- | The user object that has been deleted.
[$sel:user:DeleteUserResponse'] :: DeleteUserResponse -> Maybe User

-- | The response's http status code.
[$sel:httpStatus:DeleteUserResponse'] :: DeleteUserResponse -> Int

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:DeleteUserResponse'</a>, <a>deleteUserResponse_user</a> -
--   The user object that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteUserResponse'</a>,
--   <a>deleteUserResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUserResponse :: Int -> DeleteUserResponse

-- | The user object that has been deleted.
deleteUserResponse_user :: Lens' DeleteUserResponse (Maybe User)

-- | The response's http status code.
deleteUserResponse_httpStatus :: Lens' DeleteUserResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteUser.DeleteUser
instance GHC.Show.Show Amazonka.MemoryDb.DeleteUser.DeleteUser
instance GHC.Read.Read Amazonka.MemoryDb.DeleteUser.DeleteUser
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteUser.DeleteUser
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteUser.DeleteUserResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteUser.DeleteUserResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteUser.DeleteUserResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteUser.DeleteUserResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteUser.DeleteUserResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteUser.DeleteUser
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteUser.DeleteUser


-- | Deletes a subnet group. You cannot delete a default subnet group or
--   one that is associated with any clusters.
module Amazonka.MemoryDb.DeleteSubnetGroup

-- | <i>See:</i> <a>newDeleteSubnetGroup</a> smart constructor.
data DeleteSubnetGroup
DeleteSubnetGroup' :: Text -> DeleteSubnetGroup

-- | The name of the subnet group to delete
[$sel:subnetGroupName:DeleteSubnetGroup'] :: DeleteSubnetGroup -> Text

-- | Create a value of <a>DeleteSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DeleteSubnetGroup'</a>,
--   <a>deleteSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group to delete
newDeleteSubnetGroup :: Text -> DeleteSubnetGroup

-- | The name of the subnet group to delete
deleteSubnetGroup_subnetGroupName :: Lens' DeleteSubnetGroup Text

-- | <i>See:</i> <a>newDeleteSubnetGroupResponse</a> smart constructor.
data DeleteSubnetGroupResponse
DeleteSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> DeleteSubnetGroupResponse

-- | The subnet group object that has been deleted.
[$sel:subnetGroup:DeleteSubnetGroupResponse'] :: DeleteSubnetGroupResponse -> Maybe SubnetGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteSubnetGroupResponse'] :: DeleteSubnetGroupResponse -> Int

-- | Create a value of <a>DeleteSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_subnetGroup</a> - The subnet group object
--   that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubnetGroupResponse :: Int -> DeleteSubnetGroupResponse

-- | The subnet group object that has been deleted.
deleteSubnetGroupResponse_subnetGroup :: Lens' DeleteSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
deleteSubnetGroupResponse_httpStatus :: Lens' DeleteSubnetGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Show.Show Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Read.Read Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteSubnetGroup.DeleteSubnetGroup


-- | Deletes an existing snapshot. When you receive a successful response
--   from this operation, MemoryDB immediately begins deleting the
--   snapshot; you cannot cancel or revert this operation.
module Amazonka.MemoryDb.DeleteSnapshot

-- | <i>See:</i> <a>newDeleteSnapshot</a> smart constructor.
data DeleteSnapshot
DeleteSnapshot' :: Text -> DeleteSnapshot

-- | The name of the snapshot to delete
[$sel:snapshotName:DeleteSnapshot'] :: DeleteSnapshot -> Text

-- | Create a value of <a>DeleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotName:DeleteSnapshot'</a>,
--   <a>deleteSnapshot_snapshotName</a> - The name of the snapshot to
--   delete
newDeleteSnapshot :: Text -> DeleteSnapshot

-- | The name of the snapshot to delete
deleteSnapshot_snapshotName :: Lens' DeleteSnapshot Text

-- | <i>See:</i> <a>newDeleteSnapshotResponse</a> smart constructor.
data DeleteSnapshotResponse
DeleteSnapshotResponse' :: Maybe Snapshot -> Int -> DeleteSnapshotResponse

-- | The snapshot object that has been deleted.
[$sel:snapshot:DeleteSnapshotResponse'] :: DeleteSnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:DeleteSnapshotResponse'] :: DeleteSnapshotResponse -> Int

-- | Create a value of <a>DeleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_snapshot</a> - The snapshot object that has
--   been deleted.
--   
--   <a>$sel:httpStatus:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSnapshotResponse :: Int -> DeleteSnapshotResponse

-- | The snapshot object that has been deleted.
deleteSnapshotResponse_snapshot :: Lens' DeleteSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
deleteSnapshotResponse_httpStatus :: Lens' DeleteSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance GHC.Show.Show Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance GHC.Read.Read Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshotResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteSnapshot.DeleteSnapshot


-- | Deletes the specified parameter group. You cannot delete a parameter
--   group if it is associated with any clusters. You cannot delete the
--   default parameter groups in your account.
module Amazonka.MemoryDb.DeleteParameterGroup

-- | <i>See:</i> <a>newDeleteParameterGroup</a> smart constructor.
data DeleteParameterGroup
DeleteParameterGroup' :: Text -> DeleteParameterGroup

-- | The name of the parameter group to delete.
[$sel:parameterGroupName:DeleteParameterGroup'] :: DeleteParameterGroup -> Text

-- | Create a value of <a>DeleteParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:DeleteParameterGroup'</a>,
--   <a>deleteParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to delete.
newDeleteParameterGroup :: Text -> DeleteParameterGroup

-- | The name of the parameter group to delete.
deleteParameterGroup_parameterGroupName :: Lens' DeleteParameterGroup Text

-- | <i>See:</i> <a>newDeleteParameterGroupResponse</a> smart constructor.
data DeleteParameterGroupResponse
DeleteParameterGroupResponse' :: Maybe ParameterGroup -> Int -> DeleteParameterGroupResponse

-- | The parameter group that has been deleted.
[$sel:parameterGroup:DeleteParameterGroupResponse'] :: DeleteParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteParameterGroupResponse'] :: DeleteParameterGroupResponse -> Int

-- | Create a value of <a>DeleteParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_parameterGroup</a> - The parameter
--   group that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParameterGroupResponse :: Int -> DeleteParameterGroupResponse

-- | The parameter group that has been deleted.
deleteParameterGroupResponse_parameterGroup :: Lens' DeleteParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
deleteParameterGroupResponse_httpStatus :: Lens' DeleteParameterGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Show.Show Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Read.Read Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteParameterGroup.DeleteParameterGroup


-- | Deletes a cluster. It also deletes all associated nodes and node
--   endpoints
module Amazonka.MemoryDb.DeleteCluster

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Maybe Text -> Text -> DeleteCluster

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. MemoryDB creates the snapshot, and
--   then deletes the cluster immediately afterward.
[$sel:finalSnapshotName:DeleteCluster'] :: DeleteCluster -> Maybe Text

-- | The name of the cluster to be deleted
[$sel:clusterName:DeleteCluster'] :: DeleteCluster -> Text

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotName:DeleteCluster'</a>,
--   <a>deleteCluster_finalSnapshotName</a> - The user-supplied name of a
--   final cluster snapshot. This is the unique name that identifies the
--   snapshot. MemoryDB creates the snapshot, and then deletes the cluster
--   immediately afterward.
--   
--   <a>$sel:clusterName:DeleteCluster'</a>,
--   <a>deleteCluster_clusterName</a> - The name of the cluster to be
--   deleted
newDeleteCluster :: Text -> DeleteCluster

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. MemoryDB creates the snapshot, and
--   then deletes the cluster immediately afterward.
deleteCluster_finalSnapshotName :: Lens' DeleteCluster (Maybe Text)

-- | The name of the cluster to be deleted
deleteCluster_clusterName :: Lens' DeleteCluster Text

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | The cluster object that has been deleted
[$sel:cluster:DeleteClusterResponse'] :: DeleteClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DeleteClusterResponse'] :: DeleteClusterResponse -> Int

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - The cluster object that has
--   been deleted
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | The cluster object that has been deleted
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance GHC.Show.Show Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance GHC.Read.Read Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteCluster.DeleteClusterResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteCluster.DeleteClusterResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteCluster.DeleteClusterResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteCluster.DeleteClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteCluster.DeleteClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteCluster.DeleteCluster
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteCluster.DeleteCluster


-- | Deletes an Access Control List. The ACL must first be disassociated
--   from the cluster before it can be deleted. For more information, see
--   <a>Authenticating users with Access Contol Lists (ACLs)</a>.
module Amazonka.MemoryDb.DeleteACL

-- | <i>See:</i> <a>newDeleteACL</a> smart constructor.
data DeleteACL
DeleteACL' :: Text -> DeleteACL

-- | The name of the Access Control List to delete
[$sel:aCLName:DeleteACL'] :: DeleteACL -> Text

-- | Create a value of <a>DeleteACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aCLName:DeleteACL'</a>, <a>deleteACL_aCLName</a> - The name of
--   the Access Control List to delete
newDeleteACL :: Text -> DeleteACL

-- | The name of the Access Control List to delete
deleteACL_aCLName :: Lens' DeleteACL Text

-- | <i>See:</i> <a>newDeleteACLResponse</a> smart constructor.
data DeleteACLResponse
DeleteACLResponse' :: Maybe ACL -> Int -> DeleteACLResponse

-- | The Access Control List object that has been deleted.
[$sel:acl:DeleteACLResponse'] :: DeleteACLResponse -> Maybe ACL

-- | The response's http status code.
[$sel:httpStatus:DeleteACLResponse'] :: DeleteACLResponse -> Int

-- | Create a value of <a>DeleteACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:DeleteACLResponse'</a>, <a>deleteACLResponse_acl</a> - The
--   Access Control List object that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteACLResponse'</a>,
--   <a>deleteACLResponse_httpStatus</a> - The response's http status code.
newDeleteACLResponse :: Int -> DeleteACLResponse

-- | The Access Control List object that has been deleted.
deleteACLResponse_acl :: Lens' DeleteACLResponse (Maybe ACL)

-- | The response's http status code.
deleteACLResponse_httpStatus :: Lens' DeleteACLResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteACL.DeleteACL
instance GHC.Show.Show Amazonka.MemoryDb.DeleteACL.DeleteACL
instance GHC.Read.Read Amazonka.MemoryDb.DeleteACL.DeleteACL
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteACL.DeleteACL
instance GHC.Generics.Generic Amazonka.MemoryDb.DeleteACL.DeleteACLResponse
instance GHC.Show.Show Amazonka.MemoryDb.DeleteACL.DeleteACLResponse
instance GHC.Read.Read Amazonka.MemoryDb.DeleteACL.DeleteACLResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.DeleteACL.DeleteACLResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteACL.DeleteACLResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.DeleteACL.DeleteACL
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.DeleteACL.DeleteACL


-- | Creates a MemoryDB user. For more information, see <a>Authenticating
--   users with Access Contol Lists (ACLs)</a>.
module Amazonka.MemoryDb.CreateUser

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe [Tag] -> Text -> AuthenticationMode -> Text -> CreateUser

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateUser'] :: CreateUser -> Maybe [Tag]

-- | The name of the user. This value must be unique as it also serves as
--   the user identifier.
[$sel:userName:CreateUser'] :: CreateUser -> Text

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
[$sel:authenticationMode:CreateUser'] :: CreateUser -> AuthenticationMode

-- | Access permissions string used for this user.
[$sel:accessString:CreateUser'] :: CreateUser -> Text

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - A list of tags
--   to be added to this resource. A tag is a key-value pair. A tag key
--   must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   name of the user. This value must be unique as it also serves as the
--   user identifier.
--   
--   <a>$sel:authenticationMode:CreateUser'</a>,
--   <a>createUser_authenticationMode</a> - Denotes the user's
--   authentication properties, such as whether it requires a password to
--   authenticate.
--   
--   <a>$sel:accessString:CreateUser'</a>, <a>createUser_accessString</a> -
--   Access permissions string used for this user.
newCreateUser :: Text -> AuthenticationMode -> Text -> CreateUser

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUser_tags :: Lens' CreateUser (Maybe [Tag])

-- | The name of the user. This value must be unique as it also serves as
--   the user identifier.
createUser_userName :: Lens' CreateUser Text

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
createUser_authenticationMode :: Lens' CreateUser AuthenticationMode

-- | Access permissions string used for this user.
createUser_accessString :: Lens' CreateUser Text

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Maybe User -> Int -> CreateUserResponse

-- | The newly-created user.
[$sel:user:CreateUserResponse'] :: CreateUserResponse -> Maybe User

-- | The response's http status code.
[$sel:httpStatus:CreateUserResponse'] :: CreateUserResponse -> Int

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:CreateUserResponse'</a>, <a>createUserResponse_user</a> -
--   The newly-created user.
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserResponse :: Int -> CreateUserResponse

-- | The newly-created user.
createUserResponse_user :: Lens' CreateUserResponse (Maybe User)

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateUser.CreateUser
instance GHC.Show.Show Amazonka.MemoryDb.CreateUser.CreateUser
instance GHC.Read.Read Amazonka.MemoryDb.CreateUser.CreateUser
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateUser.CreateUser
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateUser.CreateUserResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateUser.CreateUserResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateUser.CreateUserResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateUser.CreateUserResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateUser.CreateUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateUser.CreateUserResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateUser.CreateUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateUser.CreateUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateUser.CreateUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateUser.CreateUser
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateUser.CreateUser
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateUser.CreateUser


-- | Creates a subnet group. A subnet group is a collection of subnets
--   (typically private) that you can designate for your clusters running
--   in an Amazon Virtual Private Cloud (VPC) environment. When you create
--   a cluster in an Amazon VPC, you must specify a subnet group. MemoryDB
--   uses that subnet group to choose a subnet and IP addresses within that
--   subnet to associate with your nodes. For more information, see
--   <a>Subnets and subnet groups</a>.
module Amazonka.MemoryDb.CreateSubnetGroup

-- | <i>See:</i> <a>newCreateSubnetGroup</a> smart constructor.
data CreateSubnetGroup
CreateSubnetGroup' :: Maybe Text -> Maybe [Tag] -> Text -> [Text] -> CreateSubnetGroup

-- | A description for the subnet group.
[$sel:description:CreateSubnetGroup'] :: CreateSubnetGroup -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateSubnetGroup'] :: CreateSubnetGroup -> Maybe [Tag]

-- | The name of the subnet group.
[$sel:subnetGroupName:CreateSubnetGroup'] :: CreateSubnetGroup -> Text

-- | A list of VPC subnet IDs for the subnet group.
[$sel:subnetIds:CreateSubnetGroup'] :: CreateSubnetGroup -> [Text]

-- | Create a value of <a>CreateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_description</a> - A description for the subnet
--   group.
--   
--   <a>$sel:tags:CreateSubnetGroup'</a>, <a>createSubnetGroup_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
--   
--   <a>$sel:subnetGroupName:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group.
--   
--   <a>$sel:subnetIds:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for the
--   subnet group.
newCreateSubnetGroup :: Text -> CreateSubnetGroup

-- | A description for the subnet group.
createSubnetGroup_description :: Lens' CreateSubnetGroup (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSubnetGroup_tags :: Lens' CreateSubnetGroup (Maybe [Tag])

-- | The name of the subnet group.
createSubnetGroup_subnetGroupName :: Lens' CreateSubnetGroup Text

-- | A list of VPC subnet IDs for the subnet group.
createSubnetGroup_subnetIds :: Lens' CreateSubnetGroup [Text]

-- | <i>See:</i> <a>newCreateSubnetGroupResponse</a> smart constructor.
data CreateSubnetGroupResponse
CreateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> CreateSubnetGroupResponse

-- | The newly-created subnet group
[$sel:subnetGroup:CreateSubnetGroupResponse'] :: CreateSubnetGroupResponse -> Maybe SubnetGroup

-- | The response's http status code.
[$sel:httpStatus:CreateSubnetGroupResponse'] :: CreateSubnetGroupResponse -> Int

-- | Create a value of <a>CreateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_subnetGroup</a> - The newly-created
--   subnet group
--   
--   <a>$sel:httpStatus:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubnetGroupResponse :: Int -> CreateSubnetGroupResponse

-- | The newly-created subnet group
createSubnetGroupResponse_subnetGroup :: Lens' CreateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
createSubnetGroupResponse_httpStatus :: Lens' CreateSubnetGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Show.Show Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Read.Read Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateSubnetGroup.CreateSubnetGroup


-- | Creates a copy of an entire cluster at a specific moment in time.
module Amazonka.MemoryDb.CreateSnapshot

-- | <i>See:</i> <a>newCreateSnapshot</a> smart constructor.
data CreateSnapshot
CreateSnapshot' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateSnapshot

-- | The ID of the KMS key used to encrypt the snapshot.
[$sel:kmsKeyId:CreateSnapshot'] :: CreateSnapshot -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateSnapshot'] :: CreateSnapshot -> Maybe [Tag]

-- | The snapshot is created from this cluster.
[$sel:clusterName:CreateSnapshot'] :: CreateSnapshot -> Text

-- | A name for the snapshot being created.
[$sel:snapshotName:CreateSnapshot'] :: CreateSnapshot -> Text

-- | Create a value of <a>CreateSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:CreateSnapshot'</a>, <a>createSnapshot_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:tags:CreateSnapshot'</a>, <a>createSnapshot_tags</a> - A list
--   of tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:clusterName:CreateSnapshot'</a>,
--   <a>createSnapshot_clusterName</a> - The snapshot is created from this
--   cluster.
--   
--   <a>$sel:snapshotName:CreateSnapshot'</a>,
--   <a>createSnapshot_snapshotName</a> - A name for the snapshot being
--   created.
newCreateSnapshot :: Text -> Text -> CreateSnapshot

-- | The ID of the KMS key used to encrypt the snapshot.
createSnapshot_kmsKeyId :: Lens' CreateSnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSnapshot_tags :: Lens' CreateSnapshot (Maybe [Tag])

-- | The snapshot is created from this cluster.
createSnapshot_clusterName :: Lens' CreateSnapshot Text

-- | A name for the snapshot being created.
createSnapshot_snapshotName :: Lens' CreateSnapshot Text

-- | <i>See:</i> <a>newCreateSnapshotResponse</a> smart constructor.
data CreateSnapshotResponse
CreateSnapshotResponse' :: Maybe Snapshot -> Int -> CreateSnapshotResponse

-- | The newly-created snapshot.
[$sel:snapshot:CreateSnapshotResponse'] :: CreateSnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:CreateSnapshotResponse'] :: CreateSnapshotResponse -> Int

-- | Create a value of <a>CreateSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_snapshot</a> - The newly-created snapshot.
--   
--   <a>$sel:httpStatus:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCreateSnapshotResponse :: Int -> CreateSnapshotResponse

-- | The newly-created snapshot.
createSnapshotResponse_snapshot :: Lens' CreateSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
createSnapshotResponse_httpStatus :: Lens' CreateSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance GHC.Show.Show Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance GHC.Read.Read Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateSnapshot.CreateSnapshotResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateSnapshot.CreateSnapshotResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateSnapshot.CreateSnapshotResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateSnapshot.CreateSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateSnapshot.CreateSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateSnapshot.CreateSnapshot


-- | Creates a new MemoryDB parameter group. A parameter group is a
--   collection of parameters and their values that are applied to all of
--   the nodes in any cluster. For more information, see <a>Configuring
--   engine parameters using parameter groups</a>.
module Amazonka.MemoryDb.CreateParameterGroup

-- | <i>See:</i> <a>newCreateParameterGroup</a> smart constructor.
data CreateParameterGroup
CreateParameterGroup' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateParameterGroup

-- | An optional description of the parameter group.
[$sel:description:CreateParameterGroup'] :: CreateParameterGroup -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateParameterGroup'] :: CreateParameterGroup -> Maybe [Tag]

-- | The name of the parameter group.
[$sel:parameterGroupName:CreateParameterGroup'] :: CreateParameterGroup -> Text

-- | The name of the parameter group family that the parameter group can be
--   used with.
[$sel:family:CreateParameterGroup'] :: CreateParameterGroup -> Text

-- | Create a value of <a>CreateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateParameterGroup'</a>,
--   <a>createParameterGroup_description</a> - An optional description of
--   the parameter group.
--   
--   <a>$sel:tags:CreateParameterGroup'</a>,
--   <a>createParameterGroup_tags</a> - A list of tags to be added to this
--   resource. A tag is a key-value pair. A tag key must be accompanied by
--   a tag value, although null is accepted.
--   
--   <a>$sel:parameterGroupName:CreateParameterGroup'</a>,
--   <a>createParameterGroup_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:family:CreateParameterGroup'</a>,
--   <a>createParameterGroup_family</a> - The name of the parameter group
--   family that the parameter group can be used with.
newCreateParameterGroup :: Text -> Text -> CreateParameterGroup

-- | An optional description of the parameter group.
createParameterGroup_description :: Lens' CreateParameterGroup (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createParameterGroup_tags :: Lens' CreateParameterGroup (Maybe [Tag])

-- | The name of the parameter group.
createParameterGroup_parameterGroupName :: Lens' CreateParameterGroup Text

-- | The name of the parameter group family that the parameter group can be
--   used with.
createParameterGroup_family :: Lens' CreateParameterGroup Text

-- | <i>See:</i> <a>newCreateParameterGroupResponse</a> smart constructor.
data CreateParameterGroupResponse
CreateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> CreateParameterGroupResponse

-- | The newly-created parameter group.
[$sel:parameterGroup:CreateParameterGroupResponse'] :: CreateParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:CreateParameterGroupResponse'] :: CreateParameterGroupResponse -> Int

-- | Create a value of <a>CreateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_parameterGroup</a> - The newly-created
--   parameter group.
--   
--   <a>$sel:httpStatus:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateParameterGroupResponse :: Int -> CreateParameterGroupResponse

-- | The newly-created parameter group.
createParameterGroupResponse_parameterGroup :: Lens' CreateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
createParameterGroupResponse_httpStatus :: Lens' CreateParameterGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance GHC.Show.Show Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance GHC.Read.Read Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateParameterGroup.CreateParameterGroup


-- | Creates a cluster. All nodes in the cluster run the same
--   protocol-compliant engine software.
module Amazonka.MemoryDb.CreateCluster

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Tag] -> Maybe Int -> Maybe Text -> Text -> Text -> Text -> CreateCluster

-- | The version number of the Redis engine to be used for the cluster.
[$sel:engineVersion:CreateCluster'] :: CreateCluster -> Maybe Text

-- | A list of security group names to associate with this cluster.
[$sel:securityGroupIds:CreateCluster'] :: CreateCluster -> Maybe [Text]

-- | A list of Amazon Resource Names (ARN) that uniquely identify the RDB
--   snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new cluster. The Amazon S3 object name in the ARN cannot
--   contain any commas.
[$sel:snapshotArns:CreateCluster'] :: CreateCluster -> Maybe [Text]

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
[$sel:autoMinorVersionUpgrade:CreateCluster'] :: CreateCluster -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
[$sel:snsTopicArn:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard.
--   
--   Example: 05:00-09:00
--   
--   If you do not specify this parameter, MemoryDB automatically chooses
--   an appropriate time range.
[$sel:snapshotWindow:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The name of the subnet group to be used for the cluster.
[$sel:subnetGroupName:CreateCluster'] :: CreateCluster -> Maybe Text

-- | A flag to enable in-transit encryption on the cluster.
[$sel:tLSEnabled:CreateCluster'] :: CreateCluster -> Maybe Bool

-- | The number of shards the cluster will contain. The default value is 1.
[$sel:numShards:CreateCluster'] :: CreateCluster -> Maybe Int

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   <tt>ddd:hh24:mi-ddd:hh24:mi</tt> (24H Clock UTC). The minimum
--   maintenance window is a 60 minute period.
[$sel:maintenanceWindow:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The ID of the KMS key used to encrypt the cluster.
[$sel:kmsKeyId:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
[$sel:snapshotRetentionLimit:CreateCluster'] :: CreateCluster -> Maybe Int

-- | The name of a snapshot from which to restore data into the new
--   cluster. The snapshot status changes to restoring while the new
--   cluster is being created.
[$sel:snapshotName:CreateCluster'] :: CreateCluster -> Maybe Text

-- | An optional description of the cluster.
[$sel:description:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The number of replicas to apply to each shard. The default value is 1.
--   The maximum is 5.
[$sel:numReplicasPerShard:CreateCluster'] :: CreateCluster -> Maybe Int

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include
--   multiple tags as shown following: Key=myKey, Value=myKeyValue
--   Key=mySecondKey, Value=mySecondKeyValue.
[$sel:tags:CreateCluster'] :: CreateCluster -> Maybe [Tag]

-- | The port number on which each of the nodes accepts connections.
[$sel:port:CreateCluster'] :: CreateCluster -> Maybe Int

-- | The name of the parameter group associated with the cluster.
[$sel:parameterGroupName:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The name of the cluster. This value must be unique as it also serves
--   as the cluster identifier.
[$sel:clusterName:CreateCluster'] :: CreateCluster -> Text

-- | The compute and memory capacity of the nodes in the cluster.
[$sel:nodeType:CreateCluster'] :: CreateCluster -> Text

-- | The name of the Access Control List to associate with the cluster.
[$sel:aCLName:CreateCluster'] :: CreateCluster -> Text

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateCluster'</a>,
--   <a>createCluster_engineVersion</a> - The version number of the Redis
--   engine to be used for the cluster.
--   
--   <a>$sel:securityGroupIds:CreateCluster'</a>,
--   <a>createCluster_securityGroupIds</a> - A list of security group names
--   to associate with this cluster.
--   
--   <a>$sel:snapshotArns:CreateCluster'</a>,
--   <a>createCluster_snapshotArns</a> - A list of Amazon Resource Names
--   (ARN) that uniquely identify the RDB snapshot files stored in Amazon
--   S3. The snapshot files are used to populate the new cluster. The
--   Amazon S3 object name in the ARN cannot contain any commas.
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateCluster'</a>,
--   <a>createCluster_autoMinorVersionUpgrade</a> - When set to true, the
--   cluster will automatically receive minor engine version upgrades after
--   launch.
--   
--   <a>$sel:snsTopicArn:CreateCluster'</a>,
--   <a>createCluster_snsTopicArn</a> - The Amazon Resource Name (ARN) of
--   the Amazon Simple Notification Service (SNS) topic to which
--   notifications are sent.
--   
--   <a>$sel:snapshotWindow:CreateCluster'</a>,
--   <a>createCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which MemoryDB begins taking a daily snapshot of your shard.
--   
--   Example: 05:00-09:00
--   
--   If you do not specify this parameter, MemoryDB automatically chooses
--   an appropriate time range.
--   
--   <a>$sel:subnetGroupName:CreateCluster'</a>,
--   <a>createCluster_subnetGroupName</a> - The name of the subnet group to
--   be used for the cluster.
--   
--   <a>$sel:tLSEnabled:CreateCluster'</a>, <a>createCluster_tLSEnabled</a>
--   - A flag to enable in-transit encryption on the cluster.
--   
--   <a>$sel:numShards:CreateCluster'</a>, <a>createCluster_numShards</a> -
--   The number of shards the cluster will contain. The default value is 1.
--   
--   <a>$sel:maintenanceWindow:CreateCluster'</a>,
--   <a>createCluster_maintenanceWindow</a> - Specifies the weekly time
--   range during which maintenance on the cluster is performed. It is
--   specified as a range in the format <tt>ddd:hh24:mi-ddd:hh24:mi</tt>
--   (24H Clock UTC). The minimum maintenance window is a 60 minute period.
--   
--   <a>$sel:kmsKeyId:CreateCluster'</a>, <a>createCluster_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the cluster.
--   
--   <a>$sel:snapshotRetentionLimit:CreateCluster'</a>,
--   <a>createCluster_snapshotRetentionLimit</a> - The number of days for
--   which MemoryDB retains automatic snapshots before deleting them. For
--   example, if you set SnapshotRetentionLimit to 5, a snapshot that was
--   taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:snapshotName:CreateCluster'</a>,
--   <a>createCluster_snapshotName</a> - The name of a snapshot from which
--   to restore data into the new cluster. The snapshot status changes to
--   restoring while the new cluster is being created.
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - An optional description of the
--   cluster.
--   
--   <a>$sel:numReplicasPerShard:CreateCluster'</a>,
--   <a>createCluster_numReplicasPerShard</a> - The number of replicas to
--   apply to each shard. The default value is 1. The maximum is 5.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - A list of
--   tags to be added to this resource. Tags are comma-separated key,value
--   pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags
--   as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey,
--   Value=mySecondKeyValue.
--   
--   <a>$sel:port:CreateCluster'</a>, <a>createCluster_port</a> - The port
--   number on which each of the nodes accepts connections.
--   
--   <a>$sel:parameterGroupName:CreateCluster'</a>,
--   <a>createCluster_parameterGroupName</a> - The name of the parameter
--   group associated with the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster. This value
--   must be unique as it also serves as the cluster identifier.
--   
--   <a>$sel:nodeType:CreateCluster'</a>, <a>createCluster_nodeType</a> -
--   The compute and memory capacity of the nodes in the cluster.
--   
--   <a>$sel:aCLName:CreateCluster'</a>, <a>createCluster_aCLName</a> - The
--   name of the Access Control List to associate with the cluster.
newCreateCluster :: Text -> Text -> Text -> CreateCluster

-- | The version number of the Redis engine to be used for the cluster.
createCluster_engineVersion :: Lens' CreateCluster (Maybe Text)

-- | A list of security group names to associate with this cluster.
createCluster_securityGroupIds :: Lens' CreateCluster (Maybe [Text])

-- | A list of Amazon Resource Names (ARN) that uniquely identify the RDB
--   snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new cluster. The Amazon S3 object name in the ARN cannot
--   contain any commas.
createCluster_snapshotArns :: Lens' CreateCluster (Maybe [Text])

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
createCluster_autoMinorVersionUpgrade :: Lens' CreateCluster (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
createCluster_snsTopicArn :: Lens' CreateCluster (Maybe Text)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard.
--   
--   Example: 05:00-09:00
--   
--   If you do not specify this parameter, MemoryDB automatically chooses
--   an appropriate time range.
createCluster_snapshotWindow :: Lens' CreateCluster (Maybe Text)

-- | The name of the subnet group to be used for the cluster.
createCluster_subnetGroupName :: Lens' CreateCluster (Maybe Text)

-- | A flag to enable in-transit encryption on the cluster.
createCluster_tLSEnabled :: Lens' CreateCluster (Maybe Bool)

-- | The number of shards the cluster will contain. The default value is 1.
createCluster_numShards :: Lens' CreateCluster (Maybe Int)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   <tt>ddd:hh24:mi-ddd:hh24:mi</tt> (24H Clock UTC). The minimum
--   maintenance window is a 60 minute period.
createCluster_maintenanceWindow :: Lens' CreateCluster (Maybe Text)

-- | The ID of the KMS key used to encrypt the cluster.
createCluster_kmsKeyId :: Lens' CreateCluster (Maybe Text)

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
createCluster_snapshotRetentionLimit :: Lens' CreateCluster (Maybe Int)

-- | The name of a snapshot from which to restore data into the new
--   cluster. The snapshot status changes to restoring while the new
--   cluster is being created.
createCluster_snapshotName :: Lens' CreateCluster (Maybe Text)

-- | An optional description of the cluster.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The number of replicas to apply to each shard. The default value is 1.
--   The maximum is 5.
createCluster_numReplicasPerShard :: Lens' CreateCluster (Maybe Int)

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include
--   multiple tags as shown following: Key=myKey, Value=myKeyValue
--   Key=mySecondKey, Value=mySecondKeyValue.
createCluster_tags :: Lens' CreateCluster (Maybe [Tag])

-- | The port number on which each of the nodes accepts connections.
createCluster_port :: Lens' CreateCluster (Maybe Int)

-- | The name of the parameter group associated with the cluster.
createCluster_parameterGroupName :: Lens' CreateCluster (Maybe Text)

-- | The name of the cluster. This value must be unique as it also serves
--   as the cluster identifier.
createCluster_clusterName :: Lens' CreateCluster Text

-- | The compute and memory capacity of the nodes in the cluster.
createCluster_nodeType :: Lens' CreateCluster Text

-- | The name of the Access Control List to associate with the cluster.
createCluster_aCLName :: Lens' CreateCluster Text

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | The newly-created cluster.
[$sel:cluster:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The newly-created cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | The newly-created cluster.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateCluster.CreateCluster
instance GHC.Show.Show Amazonka.MemoryDb.CreateCluster.CreateCluster
instance GHC.Read.Read Amazonka.MemoryDb.CreateCluster.CreateCluster
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateCluster.CreateCluster
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateCluster.CreateClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateCluster.CreateCluster
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateCluster.CreateCluster


-- | Creates an Access Control List. For more information, see
--   <a>Authenticating users with Access Contol Lists (ACLs)</a>.
module Amazonka.MemoryDb.CreateACL

-- | <i>See:</i> <a>newCreateACL</a> smart constructor.
data CreateACL
CreateACL' :: Maybe (NonEmpty Text) -> Maybe [Tag] -> Text -> CreateACL

-- | The list of users that belong to the Access Control List.
[$sel:userNames:CreateACL'] :: CreateACL -> Maybe (NonEmpty Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CreateACL'] :: CreateACL -> Maybe [Tag]

-- | The name of the Access Control List.
[$sel:aCLName:CreateACL'] :: CreateACL -> Text

-- | Create a value of <a>CreateACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNames:CreateACL'</a>, <a>createACL_userNames</a> - The
--   list of users that belong to the Access Control List.
--   
--   <a>$sel:tags:CreateACL'</a>, <a>createACL_tags</a> - A list of tags to
--   be added to this resource. A tag is a key-value pair. A tag key must
--   be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:aCLName:CreateACL'</a>, <a>createACL_aCLName</a> - The name of
--   the Access Control List.
newCreateACL :: Text -> CreateACL

-- | The list of users that belong to the Access Control List.
createACL_userNames :: Lens' CreateACL (Maybe (NonEmpty Text))

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createACL_tags :: Lens' CreateACL (Maybe [Tag])

-- | The name of the Access Control List.
createACL_aCLName :: Lens' CreateACL Text

-- | <i>See:</i> <a>newCreateACLResponse</a> smart constructor.
data CreateACLResponse
CreateACLResponse' :: Maybe ACL -> Int -> CreateACLResponse

-- | The newly-created Access Control List.
[$sel:acl:CreateACLResponse'] :: CreateACLResponse -> Maybe ACL

-- | The response's http status code.
[$sel:httpStatus:CreateACLResponse'] :: CreateACLResponse -> Int

-- | Create a value of <a>CreateACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:CreateACLResponse'</a>, <a>createACLResponse_acl</a> - The
--   newly-created Access Control List.
--   
--   <a>$sel:httpStatus:CreateACLResponse'</a>,
--   <a>createACLResponse_httpStatus</a> - The response's http status code.
newCreateACLResponse :: Int -> CreateACLResponse

-- | The newly-created Access Control List.
createACLResponse_acl :: Lens' CreateACLResponse (Maybe ACL)

-- | The response's http status code.
createACLResponse_httpStatus :: Lens' CreateACLResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateACL.CreateACL
instance GHC.Show.Show Amazonka.MemoryDb.CreateACL.CreateACL
instance GHC.Read.Read Amazonka.MemoryDb.CreateACL.CreateACL
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateACL.CreateACL
instance GHC.Generics.Generic Amazonka.MemoryDb.CreateACL.CreateACLResponse
instance GHC.Show.Show Amazonka.MemoryDb.CreateACL.CreateACLResponse
instance GHC.Read.Read Amazonka.MemoryDb.CreateACL.CreateACLResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CreateACL.CreateACLResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CreateACL.CreateACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateACL.CreateACLResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CreateACL.CreateACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CreateACL.CreateACL
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CreateACL.CreateACL
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CreateACL.CreateACL
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CreateACL.CreateACL
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CreateACL.CreateACL


-- | Makes a copy of an existing snapshot.
module Amazonka.MemoryDb.CopySnapshot

-- | <i>See:</i> <a>newCopySnapshot</a> smart constructor.
data CopySnapshot
CopySnapshot' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CopySnapshot

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access. When using
--   this parameter to export a snapshot, be sure MemoryDB has the needed
--   permissions to this S3 bucket. For more information, see <a>Step 2:
--   Grant MemoryDB Access to Your Amazon S3 Bucket</a>.
[$sel:targetBucket:CopySnapshot'] :: CopySnapshot -> Maybe Text

-- | The ID of the KMS key used to encrypt the target snapshot.
[$sel:kmsKeyId:CopySnapshot'] :: CopySnapshot -> Maybe Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
[$sel:tags:CopySnapshot'] :: CopySnapshot -> Maybe [Tag]

-- | The name of an existing snapshot from which to make a copy.
[$sel:sourceSnapshotName:CopySnapshot'] :: CopySnapshot -> Text

-- | A name for the snapshot copy. MemoryDB does not permit overwriting a
--   snapshot, therefore this name must be unique within its context -
--   MemoryDB or an Amazon S3 bucket if exporting.
[$sel:targetSnapshotName:CopySnapshot'] :: CopySnapshot -> Text

-- | Create a value of <a>CopySnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBucket:CopySnapshot'</a>,
--   <a>copySnapshot_targetBucket</a> - The Amazon S3 bucket to which the
--   snapshot is exported. This parameter is used only when exporting a
--   snapshot for external access. When using this parameter to export a
--   snapshot, be sure MemoryDB has the needed permissions to this S3
--   bucket. For more information, see <a>Step 2: Grant MemoryDB Access to
--   Your Amazon S3 Bucket</a>.
--   
--   <a>$sel:kmsKeyId:CopySnapshot'</a>, <a>copySnapshot_kmsKeyId</a> - The
--   ID of the KMS key used to encrypt the target snapshot.
--   
--   <a>$sel:tags:CopySnapshot'</a>, <a>copySnapshot_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:sourceSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_sourceSnapshotName</a> - The name of an existing
--   snapshot from which to make a copy.
--   
--   <a>$sel:targetSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_targetSnapshotName</a> - A name for the snapshot copy.
--   MemoryDB does not permit overwriting a snapshot, therefore this name
--   must be unique within its context - MemoryDB or an Amazon S3 bucket if
--   exporting.
newCopySnapshot :: Text -> Text -> CopySnapshot

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access. When using
--   this parameter to export a snapshot, be sure MemoryDB has the needed
--   permissions to this S3 bucket. For more information, see <a>Step 2:
--   Grant MemoryDB Access to Your Amazon S3 Bucket</a>.
copySnapshot_targetBucket :: Lens' CopySnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the target snapshot.
copySnapshot_kmsKeyId :: Lens' CopySnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
copySnapshot_tags :: Lens' CopySnapshot (Maybe [Tag])

-- | The name of an existing snapshot from which to make a copy.
copySnapshot_sourceSnapshotName :: Lens' CopySnapshot Text

-- | A name for the snapshot copy. MemoryDB does not permit overwriting a
--   snapshot, therefore this name must be unique within its context -
--   MemoryDB or an Amazon S3 bucket if exporting.
copySnapshot_targetSnapshotName :: Lens' CopySnapshot Text

-- | <i>See:</i> <a>newCopySnapshotResponse</a> smart constructor.
data CopySnapshotResponse
CopySnapshotResponse' :: Maybe Snapshot -> Int -> CopySnapshotResponse

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
[$sel:snapshot:CopySnapshotResponse'] :: CopySnapshotResponse -> Maybe Snapshot

-- | The response's http status code.
[$sel:httpStatus:CopySnapshotResponse'] :: CopySnapshotResponse -> Int

-- | Create a value of <a>CopySnapshotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_snapshot</a> - Represents a copy of an entire
--   cluster as of the time when the snapshot was taken.
--   
--   <a>$sel:httpStatus:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCopySnapshotResponse :: Int -> CopySnapshotResponse

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
copySnapshotResponse_snapshot :: Lens' CopySnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
copySnapshotResponse_httpStatus :: Lens' CopySnapshotResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance GHC.Show.Show Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance GHC.Read.Read Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance GHC.Classes.Eq Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance GHC.Generics.Generic Amazonka.MemoryDb.CopySnapshot.CopySnapshotResponse
instance GHC.Show.Show Amazonka.MemoryDb.CopySnapshot.CopySnapshotResponse
instance GHC.Read.Read Amazonka.MemoryDb.CopySnapshot.CopySnapshotResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.CopySnapshot.CopySnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CopySnapshot.CopySnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Control.DeepSeq.NFData Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.CopySnapshot.CopySnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.CopySnapshot.CopySnapshot


-- | Apply the service update to a list of clusters supplied. For more
--   information on service updates and applying them, see <a>Applying the
--   service updates</a>.
module Amazonka.MemoryDb.BatchUpdateCluster

-- | <i>See:</i> <a>newBatchUpdateCluster</a> smart constructor.
data BatchUpdateCluster
BatchUpdateCluster' :: Maybe ServiceUpdateRequest -> [Text] -> BatchUpdateCluster

-- | The unique ID of the service update
[$sel:serviceUpdate:BatchUpdateCluster'] :: BatchUpdateCluster -> Maybe ServiceUpdateRequest

-- | The cluster names to apply the updates.
[$sel:clusterNames:BatchUpdateCluster'] :: BatchUpdateCluster -> [Text]

-- | Create a value of <a>BatchUpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdate:BatchUpdateCluster'</a>,
--   <a>batchUpdateCluster_serviceUpdate</a> - The unique ID of the service
--   update
--   
--   <a>$sel:clusterNames:BatchUpdateCluster'</a>,
--   <a>batchUpdateCluster_clusterNames</a> - The cluster names to apply
--   the updates.
newBatchUpdateCluster :: BatchUpdateCluster

-- | The unique ID of the service update
batchUpdateCluster_serviceUpdate :: Lens' BatchUpdateCluster (Maybe ServiceUpdateRequest)

-- | The cluster names to apply the updates.
batchUpdateCluster_clusterNames :: Lens' BatchUpdateCluster [Text]

-- | <i>See:</i> <a>newBatchUpdateClusterResponse</a> smart constructor.
data BatchUpdateClusterResponse
BatchUpdateClusterResponse' :: Maybe [UnprocessedCluster] -> Maybe [Cluster] -> Int -> BatchUpdateClusterResponse

-- | The list of clusters where updates have not been applied.
[$sel:unprocessedClusters:BatchUpdateClusterResponse'] :: BatchUpdateClusterResponse -> Maybe [UnprocessedCluster]

-- | The list of clusters that have been updated.
[$sel:processedClusters:BatchUpdateClusterResponse'] :: BatchUpdateClusterResponse -> Maybe [Cluster]

-- | The response's http status code.
[$sel:httpStatus:BatchUpdateClusterResponse'] :: BatchUpdateClusterResponse -> Int

-- | Create a value of <a>BatchUpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedClusters:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_unprocessedClusters</a> - The list of
--   clusters where updates have not been applied.
--   
--   <a>$sel:processedClusters:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_processedClusters</a> - The list of
--   clusters that have been updated.
--   
--   <a>$sel:httpStatus:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdateClusterResponse :: Int -> BatchUpdateClusterResponse

-- | The list of clusters where updates have not been applied.
batchUpdateClusterResponse_unprocessedClusters :: Lens' BatchUpdateClusterResponse (Maybe [UnprocessedCluster])

-- | The list of clusters that have been updated.
batchUpdateClusterResponse_processedClusters :: Lens' BatchUpdateClusterResponse (Maybe [Cluster])

-- | The response's http status code.
batchUpdateClusterResponse_httpStatus :: Lens' BatchUpdateClusterResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance GHC.Show.Show Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance GHC.Read.Read Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance GHC.Classes.Eq Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance GHC.Generics.Generic Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateClusterResponse
instance GHC.Show.Show Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateClusterResponse
instance GHC.Read.Read Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateClusterResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.BatchUpdateCluster.BatchUpdateCluster


-- | Use this operation to remove tags on a resource
module Amazonka.MemoryDb.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be removed
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of keys of the tags that are to be removed
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which the tags are to be removed
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys of the tags that are to be removed
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be removed
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys of the tags that are to be removed
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Maybe [Tag] -> Int -> UntagResourceResponse

-- | The list of tags removed
[$sel:tagList:UntagResourceResponse'] :: UntagResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_tagList</a> - The list of tags removed
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The list of tags removed
untagResourceResponse_tagList :: Lens' UntagResourceResponse (Maybe [Tag])

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.MemoryDb.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.MemoryDb.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.MemoryDb.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.MemoryDb.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.MemoryDb.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.MemoryDb.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UntagResource.UntagResource


-- | Changes the list of users that belong to the Access Control List.
module Amazonka.MemoryDb.UpdateACL

-- | <i>See:</i> <a>newUpdateACL</a> smart constructor.
data UpdateACL
UpdateACL' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> UpdateACL

-- | The list of users to add to the Access Control List
[$sel:userNamesToAdd:UpdateACL'] :: UpdateACL -> Maybe (NonEmpty Text)

-- | The list of users to remove from the Access Control List
[$sel:userNamesToRemove:UpdateACL'] :: UpdateACL -> Maybe (NonEmpty Text)

-- | The name of the Access Control List
[$sel:aCLName:UpdateACL'] :: UpdateACL -> Text

-- | Create a value of <a>UpdateACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNamesToAdd:UpdateACL'</a>, <a>updateACL_userNamesToAdd</a>
--   - The list of users to add to the Access Control List
--   
--   <a>$sel:userNamesToRemove:UpdateACL'</a>,
--   <a>updateACL_userNamesToRemove</a> - The list of users to remove from
--   the Access Control List
--   
--   <a>$sel:aCLName:UpdateACL'</a>, <a>updateACL_aCLName</a> - The name of
--   the Access Control List
newUpdateACL :: Text -> UpdateACL

-- | The list of users to add to the Access Control List
updateACL_userNamesToAdd :: Lens' UpdateACL (Maybe (NonEmpty Text))

-- | The list of users to remove from the Access Control List
updateACL_userNamesToRemove :: Lens' UpdateACL (Maybe (NonEmpty Text))

-- | The name of the Access Control List
updateACL_aCLName :: Lens' UpdateACL Text

-- | <i>See:</i> <a>newUpdateACLResponse</a> smart constructor.
data UpdateACLResponse
UpdateACLResponse' :: Maybe ACL -> Int -> UpdateACLResponse

-- | The updated Access Control List
[$sel:acl:UpdateACLResponse'] :: UpdateACLResponse -> Maybe ACL

-- | The response's http status code.
[$sel:httpStatus:UpdateACLResponse'] :: UpdateACLResponse -> Int

-- | Create a value of <a>UpdateACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:UpdateACLResponse'</a>, <a>updateACLResponse_acl</a> - The
--   updated Access Control List
--   
--   <a>$sel:httpStatus:UpdateACLResponse'</a>,
--   <a>updateACLResponse_httpStatus</a> - The response's http status code.
newUpdateACLResponse :: Int -> UpdateACLResponse

-- | The updated Access Control List
updateACLResponse_acl :: Lens' UpdateACLResponse (Maybe ACL)

-- | The response's http status code.
updateACLResponse_httpStatus :: Lens' UpdateACLResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateACL.UpdateACL
instance GHC.Show.Show Amazonka.MemoryDb.UpdateACL.UpdateACL
instance GHC.Read.Read Amazonka.MemoryDb.UpdateACL.UpdateACL
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateACL.UpdateACL
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateACL.UpdateACLResponse
instance GHC.Show.Show Amazonka.MemoryDb.UpdateACL.UpdateACLResponse
instance GHC.Read.Read Amazonka.MemoryDb.UpdateACL.UpdateACLResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateACL.UpdateACLResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateACL.UpdateACLResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UpdateACL.UpdateACL
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UpdateACL.UpdateACL


-- | Modifies the settings for a cluster. You can use this operation to
--   change one or more cluster configuration settings by specifying the
--   settings and the new values.
module Amazonka.MemoryDb.UpdateCluster

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShardConfigurationRequest -> Maybe Int -> Maybe ReplicaConfigurationRequest -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | The upgraded version of the engine to be run on the nodes. You can
--   upgrade to a newer engine version, but you cannot downgrade to an
--   earlier engine version. If you want to use an earlier engine version,
--   you must delete the existing cluster and create it anew with the
--   earlier engine version.
[$sel:engineVersion:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The SecurityGroupIds to update
[$sel:securityGroupIds:UpdateCluster'] :: UpdateCluster -> Maybe [Text]

-- | The SNS topic ARN to update
[$sel:snsTopicArn:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your cluster.
[$sel:snapshotWindow:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The maintenance window to update
[$sel:maintenanceWindow:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The number of shards in the cluster
[$sel:shardConfiguration:UpdateCluster'] :: UpdateCluster -> Maybe ShardConfigurationRequest

-- | The number of days for which MemoryDB retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   SnapshotRetentionLimit to 5, a snapshot that was taken today is
--   retained for 5 days before being deleted.
[$sel:snapshotRetentionLimit:UpdateCluster'] :: UpdateCluster -> Maybe Int

-- | The number of replicas that will reside in each shard
[$sel:replicaConfiguration:UpdateCluster'] :: UpdateCluster -> Maybe ReplicaConfigurationRequest

-- | A valid node type that you want to scale this cluster up or down to.
[$sel:nodeType:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is active.
[$sel:snsTopicStatus:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The description of the cluster to update
[$sel:description:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The Access Control List that is associated with the cluster
[$sel:aCLName:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The name of the parameter group to update
[$sel:parameterGroupName:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The name of the cluster to update
[$sel:clusterName:UpdateCluster'] :: UpdateCluster -> Text

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:UpdateCluster'</a>,
--   <a>updateCluster_engineVersion</a> - The upgraded version of the
--   engine to be run on the nodes. You can upgrade to a newer engine
--   version, but you cannot downgrade to an earlier engine version. If you
--   want to use an earlier engine version, you must delete the existing
--   cluster and create it anew with the earlier engine version.
--   
--   <a>$sel:securityGroupIds:UpdateCluster'</a>,
--   <a>updateCluster_securityGroupIds</a> - The SecurityGroupIds to update
--   
--   <a>$sel:snsTopicArn:UpdateCluster'</a>,
--   <a>updateCluster_snsTopicArn</a> - The SNS topic ARN to update
--   
--   <a>$sel:snapshotWindow:UpdateCluster'</a>,
--   <a>updateCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which MemoryDB begins taking a daily snapshot of your cluster.
--   
--   <a>$sel:maintenanceWindow:UpdateCluster'</a>,
--   <a>updateCluster_maintenanceWindow</a> - The maintenance window to
--   update
--   
--   <a>$sel:shardConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_shardConfiguration</a> - The number of shards in the
--   cluster
--   
--   <a>$sel:snapshotRetentionLimit:UpdateCluster'</a>,
--   <a>updateCluster_snapshotRetentionLimit</a> - The number of days for
--   which MemoryDB retains automatic cluster snapshots before deleting
--   them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
--   that was taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:replicaConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_replicaConfiguration</a> - The number of replicas
--   that will reside in each shard
--   
--   <a>$sel:nodeType:UpdateCluster'</a>, <a>updateCluster_nodeType</a> - A
--   valid node type that you want to scale this cluster up or down to.
--   
--   <a>$sel:snsTopicStatus:UpdateCluster'</a>,
--   <a>updateCluster_snsTopicStatus</a> - The status of the Amazon SNS
--   notification topic. Notifications are sent only if the status is
--   active.
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - The description of the cluster to
--   update
--   
--   <a>$sel:aCLName:UpdateCluster'</a>, <a>updateCluster_aCLName</a> - The
--   Access Control List that is associated with the cluster
--   
--   <a>$sel:parameterGroupName:UpdateCluster'</a>,
--   <a>updateCluster_parameterGroupName</a> - The name of the parameter
--   group to update
--   
--   <a>$sel:clusterName:UpdateCluster'</a>,
--   <a>updateCluster_clusterName</a> - The name of the cluster to update
newUpdateCluster :: Text -> UpdateCluster

-- | The upgraded version of the engine to be run on the nodes. You can
--   upgrade to a newer engine version, but you cannot downgrade to an
--   earlier engine version. If you want to use an earlier engine version,
--   you must delete the existing cluster and create it anew with the
--   earlier engine version.
updateCluster_engineVersion :: Lens' UpdateCluster (Maybe Text)

-- | The SecurityGroupIds to update
updateCluster_securityGroupIds :: Lens' UpdateCluster (Maybe [Text])

-- | The SNS topic ARN to update
updateCluster_snsTopicArn :: Lens' UpdateCluster (Maybe Text)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your cluster.
updateCluster_snapshotWindow :: Lens' UpdateCluster (Maybe Text)

-- | The maintenance window to update
updateCluster_maintenanceWindow :: Lens' UpdateCluster (Maybe Text)

-- | The number of shards in the cluster
updateCluster_shardConfiguration :: Lens' UpdateCluster (Maybe ShardConfigurationRequest)

-- | The number of days for which MemoryDB retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   SnapshotRetentionLimit to 5, a snapshot that was taken today is
--   retained for 5 days before being deleted.
updateCluster_snapshotRetentionLimit :: Lens' UpdateCluster (Maybe Int)

-- | The number of replicas that will reside in each shard
updateCluster_replicaConfiguration :: Lens' UpdateCluster (Maybe ReplicaConfigurationRequest)

-- | A valid node type that you want to scale this cluster up or down to.
updateCluster_nodeType :: Lens' UpdateCluster (Maybe Text)

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is active.
updateCluster_snsTopicStatus :: Lens' UpdateCluster (Maybe Text)

-- | The description of the cluster to update
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The Access Control List that is associated with the cluster
updateCluster_aCLName :: Lens' UpdateCluster (Maybe Text)

-- | The name of the parameter group to update
updateCluster_parameterGroupName :: Lens' UpdateCluster (Maybe Text)

-- | The name of the cluster to update
updateCluster_clusterName :: Lens' UpdateCluster Text

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Maybe Cluster -> Int -> UpdateClusterResponse

-- | The updated cluster
[$sel:cluster:UpdateClusterResponse'] :: UpdateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterResponse'] :: UpdateClusterResponse -> Int

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_cluster</a> - The updated cluster
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | The updated cluster
updateClusterResponse_cluster :: Lens' UpdateClusterResponse (Maybe Cluster)

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance GHC.Show.Show Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance GHC.Read.Read Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateCluster.UpdateClusterResponse
instance GHC.Show.Show Amazonka.MemoryDb.UpdateCluster.UpdateClusterResponse
instance GHC.Read.Read Amazonka.MemoryDb.UpdateCluster.UpdateClusterResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateCluster.UpdateClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateCluster.UpdateClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UpdateCluster.UpdateCluster
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UpdateCluster.UpdateCluster


-- | Updates the parameters of a parameter group. You can modify up to 20
--   parameters in a single request by submitting a list parameter name and
--   value pairs.
module Amazonka.MemoryDb.UpdateParameterGroup

-- | <i>See:</i> <a>newUpdateParameterGroup</a> smart constructor.
data UpdateParameterGroup
UpdateParameterGroup' :: Text -> [ParameterNameValue] -> UpdateParameterGroup

-- | The name of the parameter group to update.
[$sel:parameterGroupName:UpdateParameterGroup'] :: UpdateParameterGroup -> Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be updated per
--   request.
[$sel:parameterNameValues:UpdateParameterGroup'] :: UpdateParameterGroup -> [ParameterNameValue]

-- | Create a value of <a>UpdateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to update.
--   
--   <a>$sel:parameterNameValues:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterNameValues</a> - An array of
--   parameter names and values for the parameter update. You must supply
--   at least one parameter name and value; subsequent arguments are
--   optional. A maximum of 20 parameters may be updated per request.
newUpdateParameterGroup :: Text -> UpdateParameterGroup

-- | The name of the parameter group to update.
updateParameterGroup_parameterGroupName :: Lens' UpdateParameterGroup Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be updated per
--   request.
updateParameterGroup_parameterNameValues :: Lens' UpdateParameterGroup [ParameterNameValue]

-- | <i>See:</i> <a>newUpdateParameterGroupResponse</a> smart constructor.
data UpdateParameterGroupResponse
UpdateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> UpdateParameterGroupResponse

-- | The updated parameter group
[$sel:parameterGroup:UpdateParameterGroupResponse'] :: UpdateParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateParameterGroupResponse'] :: UpdateParameterGroupResponse -> Int

-- | Create a value of <a>UpdateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_parameterGroup</a> - The updated
--   parameter group
--   
--   <a>$sel:httpStatus:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParameterGroupResponse :: Int -> UpdateParameterGroupResponse

-- | The updated parameter group
updateParameterGroupResponse_parameterGroup :: Lens' UpdateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
updateParameterGroupResponse_httpStatus :: Lens' UpdateParameterGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Show.Show Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Read.Read Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UpdateParameterGroup.UpdateParameterGroup


-- | Updates a subnet group. For more information, see <a>Updating a subnet
--   group</a>
module Amazonka.MemoryDb.UpdateSubnetGroup

-- | <i>See:</i> <a>newUpdateSubnetGroup</a> smart constructor.
data UpdateSubnetGroup
UpdateSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> UpdateSubnetGroup

-- | The EC2 subnet IDs for the subnet group.
[$sel:subnetIds:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Maybe [Text]

-- | A description of the subnet group
[$sel:description:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Maybe Text

-- | The name of the subnet group
[$sel:subnetGroupName:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Text

-- | Create a value of <a>UpdateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetIds</a> - The EC2 subnet IDs for the subnet
--   group.
--   
--   <a>$sel:description:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_description</a> - A description of the subnet
--   group
--   
--   <a>$sel:subnetGroupName:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group
newUpdateSubnetGroup :: Text -> UpdateSubnetGroup

-- | The EC2 subnet IDs for the subnet group.
updateSubnetGroup_subnetIds :: Lens' UpdateSubnetGroup (Maybe [Text])

-- | A description of the subnet group
updateSubnetGroup_description :: Lens' UpdateSubnetGroup (Maybe Text)

-- | The name of the subnet group
updateSubnetGroup_subnetGroupName :: Lens' UpdateSubnetGroup Text

-- | <i>See:</i> <a>newUpdateSubnetGroupResponse</a> smart constructor.
data UpdateSubnetGroupResponse
UpdateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> UpdateSubnetGroupResponse

-- | The updated subnet group
[$sel:subnetGroup:UpdateSubnetGroupResponse'] :: UpdateSubnetGroupResponse -> Maybe SubnetGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateSubnetGroupResponse'] :: UpdateSubnetGroupResponse -> Int

-- | Create a value of <a>UpdateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_subnetGroup</a> - The updated subnet
--   group
--   
--   <a>$sel:httpStatus:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubnetGroupResponse :: Int -> UpdateSubnetGroupResponse

-- | The updated subnet group
updateSubnetGroupResponse_subnetGroup :: Lens' UpdateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
updateSubnetGroupResponse_httpStatus :: Lens' UpdateSubnetGroupResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Show.Show Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Read.Read Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Show.Show Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Read.Read Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UpdateSubnetGroup.UpdateSubnetGroup


-- | Changes user password(s) and/or access string.
module Amazonka.MemoryDb.UpdateUser

-- | <i>See:</i> <a>newUpdateUser</a> smart constructor.
data UpdateUser
UpdateUser' :: Maybe AuthenticationMode -> Maybe Text -> Text -> UpdateUser

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
[$sel:authenticationMode:UpdateUser'] :: UpdateUser -> Maybe AuthenticationMode

-- | Access permissions string used for this user.
[$sel:accessString:UpdateUser'] :: UpdateUser -> Maybe Text

-- | The name of the user
[$sel:userName:UpdateUser'] :: UpdateUser -> Text

-- | Create a value of <a>UpdateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authenticationMode:UpdateUser'</a>,
--   <a>updateUser_authenticationMode</a> - Denotes the user's
--   authentication properties, such as whether it requires a password to
--   authenticate.
--   
--   <a>$sel:accessString:UpdateUser'</a>, <a>updateUser_accessString</a> -
--   Access permissions string used for this user.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUser_userName</a> - The
--   name of the user
newUpdateUser :: Text -> UpdateUser

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
updateUser_authenticationMode :: Lens' UpdateUser (Maybe AuthenticationMode)

-- | Access permissions string used for this user.
updateUser_accessString :: Lens' UpdateUser (Maybe Text)

-- | The name of the user
updateUser_userName :: Lens' UpdateUser Text

-- | <i>See:</i> <a>newUpdateUserResponse</a> smart constructor.
data UpdateUserResponse
UpdateUserResponse' :: Maybe User -> Int -> UpdateUserResponse

-- | The updated user
[$sel:user:UpdateUserResponse'] :: UpdateUserResponse -> Maybe User

-- | The response's http status code.
[$sel:httpStatus:UpdateUserResponse'] :: UpdateUserResponse -> Int

-- | Create a value of <a>UpdateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:UpdateUserResponse'</a>, <a>updateUserResponse_user</a> -
--   The updated user
--   
--   <a>$sel:httpStatus:UpdateUserResponse'</a>,
--   <a>updateUserResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUserResponse :: Int -> UpdateUserResponse

-- | The updated user
updateUserResponse_user :: Lens' UpdateUserResponse (Maybe User)

-- | The response's http status code.
updateUserResponse_httpStatus :: Lens' UpdateUserResponse Int
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateUser.UpdateUser
instance GHC.Show.Show Amazonka.MemoryDb.UpdateUser.UpdateUser
instance GHC.Read.Read Amazonka.MemoryDb.UpdateUser.UpdateUser
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateUser.UpdateUser
instance GHC.Generics.Generic Amazonka.MemoryDb.UpdateUser.UpdateUserResponse
instance GHC.Show.Show Amazonka.MemoryDb.UpdateUser.UpdateUserResponse
instance GHC.Read.Read Amazonka.MemoryDb.UpdateUser.UpdateUserResponse
instance GHC.Classes.Eq Amazonka.MemoryDb.UpdateUser.UpdateUserResponse
instance Amazonka.Types.AWSRequest Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateUser.UpdateUserResponse
instance Data.Hashable.Class.Hashable Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Control.DeepSeq.NFData Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Amazonka.Data.Headers.ToHeaders Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Amazonka.Data.Path.ToPath Amazonka.MemoryDb.UpdateUser.UpdateUser
instance Amazonka.Data.Query.ToQuery Amazonka.MemoryDb.UpdateUser.UpdateUser


module Amazonka.MemoryDb.Lens

-- | An optional flag that can be included in the request to retrieve
--   information about the individual shard(s).
describeClusters_showShardDetails :: Lens' DescribeClusters (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeClusters_nextToken :: Lens' DescribeClusters (Maybe Text)

-- | The name of the cluster
describeClusters_clusterName :: Lens' DescribeClusters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeClusters_maxResults :: Lens' DescribeClusters (Maybe Int)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeClustersResponse_nextToken :: Lens' DescribeClustersResponse (Maybe Text)

-- | A list of clusters
describeClustersResponse_clusters :: Lens' DescribeClustersResponse (Maybe [Cluster])

-- | The response's http status code.
describeClustersResponse_httpStatus :: Lens' DescribeClustersResponse Int

-- | The unique ID of the service update
batchUpdateCluster_serviceUpdate :: Lens' BatchUpdateCluster (Maybe ServiceUpdateRequest)

-- | The cluster names to apply the updates.
batchUpdateCluster_clusterNames :: Lens' BatchUpdateCluster [Text]

-- | The list of clusters where updates have not been applied.
batchUpdateClusterResponse_unprocessedClusters :: Lens' BatchUpdateClusterResponse (Maybe [UnprocessedCluster])

-- | The list of clusters that have been updated.
batchUpdateClusterResponse_processedClusters :: Lens' BatchUpdateClusterResponse (Maybe [Cluster])

-- | The response's http status code.
batchUpdateClusterResponse_httpStatus :: Lens' BatchUpdateClusterResponse Int

-- | Filter to determine the list of users to return.
describeUsers_filters :: Lens' DescribeUsers (Maybe [Filter])

-- | The name of the user
describeUsers_userName :: Lens' DescribeUsers (Maybe Text)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeUsers_nextToken :: Lens' DescribeUsers (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeUsers_maxResults :: Lens' DescribeUsers (Maybe Int)

-- | A list of users.
describeUsersResponse_users :: Lens' DescribeUsersResponse (Maybe [User])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeUsersResponse_nextToken :: Lens' DescribeUsersResponse (Maybe Text)

-- | The response's http status code.
describeUsersResponse_httpStatus :: Lens' DescribeUsersResponse Int

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameters_nextToken :: Lens' DescribeParameters (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeParameters_maxResults :: Lens' DescribeParameters (Maybe Int)

-- | he name of a specific parameter group to return details for.
describeParameters_parameterGroupName :: Lens' DescribeParameters Text

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParametersResponse_nextToken :: Lens' DescribeParametersResponse (Maybe Text)

-- | A list of parameters specific to a particular parameter group. Each
--   element in the list contains detailed information about one parameter.
describeParametersResponse_parameters :: Lens' DescribeParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeParametersResponse_httpStatus :: Lens' DescribeParametersResponse Int

-- | The name of the Access Control List to delete
deleteACL_aCLName :: Lens' DeleteACL Text

-- | The Access Control List object that has been deleted.
deleteACLResponse_acl :: Lens' DeleteACLResponse (Maybe ACL)

-- | The response's http status code.
deleteACLResponse_httpStatus :: Lens' DeleteACLResponse Int

-- | The list of users to add to the Access Control List
updateACL_userNamesToAdd :: Lens' UpdateACL (Maybe (NonEmpty Text))

-- | The list of users to remove from the Access Control List
updateACL_userNamesToRemove :: Lens' UpdateACL (Maybe (NonEmpty Text))

-- | The name of the Access Control List
updateACL_aCLName :: Lens' UpdateACL Text

-- | The updated Access Control List
updateACLResponse_acl :: Lens' UpdateACLResponse (Maybe ACL)

-- | The response's http status code.
updateACLResponse_httpStatus :: Lens' UpdateACLResponse Int

-- | The identifier of the event source for which events are returned. If
--   not specified, all sources are included in the response.
describeEvents_sourceName :: Lens' DescribeEvents (Maybe Text)

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The number of minutes worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Int)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | A list of events. Each element in the list contains detailed
--   information about one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int

-- | The Redis engine version
describeEngineVersions_engineVersion :: Lens' DescribeEngineVersions (Maybe Text)

-- | If true, specifies that only the default version of the specified
--   engine or engine and major version combination is to be returned.
describeEngineVersions_defaultOnly :: Lens' DescribeEngineVersions (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEngineVersions_nextToken :: Lens' DescribeEngineVersions (Maybe Text)

-- | The name of a specific parameter group family to return details for.
describeEngineVersions_parameterGroupFamily :: Lens' DescribeEngineVersions (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeEngineVersions_maxResults :: Lens' DescribeEngineVersions (Maybe Int)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeEngineVersionsResponse_nextToken :: Lens' DescribeEngineVersionsResponse (Maybe Text)

-- | A list of engine version details. Each element in the list contains
--   detailed information about one engine version.
describeEngineVersionsResponse_engineVersions :: Lens' DescribeEngineVersionsResponse (Maybe [EngineVersionInfo])

-- | The response's http status code.
describeEngineVersionsResponse_httpStatus :: Lens' DescribeEngineVersionsResponse Int

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeACLs_nextToken :: Lens' DescribeACLs (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeACLs_maxResults :: Lens' DescribeACLs (Maybe Int)

-- | The name of the ACL
describeACLs_aCLName :: Lens' DescribeACLs (Maybe Text)

-- | If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
describeACLsResponse_nextToken :: Lens' DescribeACLsResponse (Maybe Text)

-- | The list of ACLs
describeACLsResponse_aCLs :: Lens' DescribeACLsResponse (Maybe [ACL])

-- | The response's http status code.
describeACLsResponse_httpStatus :: Lens' DescribeACLsResponse Int

-- | A description for the subnet group.
createSubnetGroup_description :: Lens' CreateSubnetGroup (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSubnetGroup_tags :: Lens' CreateSubnetGroup (Maybe [Tag])

-- | The name of the subnet group.
createSubnetGroup_subnetGroupName :: Lens' CreateSubnetGroup Text

-- | A list of VPC subnet IDs for the subnet group.
createSubnetGroup_subnetIds :: Lens' CreateSubnetGroup [Text]

-- | The newly-created subnet group
createSubnetGroupResponse_subnetGroup :: Lens' CreateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
createSubnetGroupResponse_httpStatus :: Lens' CreateSubnetGroupResponse Int

-- | The user-supplied name of a final cluster snapshot. This is the unique
--   name that identifies the snapshot. MemoryDB creates the snapshot, and
--   then deletes the cluster immediately afterward.
deleteCluster_finalSnapshotName :: Lens' DeleteCluster (Maybe Text)

-- | The name of the cluster to be deleted
deleteCluster_clusterName :: Lens' DeleteCluster Text

-- | The cluster object that has been deleted
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int

-- | The upgraded version of the engine to be run on the nodes. You can
--   upgrade to a newer engine version, but you cannot downgrade to an
--   earlier engine version. If you want to use an earlier engine version,
--   you must delete the existing cluster and create it anew with the
--   earlier engine version.
updateCluster_engineVersion :: Lens' UpdateCluster (Maybe Text)

-- | The SecurityGroupIds to update
updateCluster_securityGroupIds :: Lens' UpdateCluster (Maybe [Text])

-- | The SNS topic ARN to update
updateCluster_snsTopicArn :: Lens' UpdateCluster (Maybe Text)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your cluster.
updateCluster_snapshotWindow :: Lens' UpdateCluster (Maybe Text)

-- | The maintenance window to update
updateCluster_maintenanceWindow :: Lens' UpdateCluster (Maybe Text)

-- | The number of shards in the cluster
updateCluster_shardConfiguration :: Lens' UpdateCluster (Maybe ShardConfigurationRequest)

-- | The number of days for which MemoryDB retains automatic cluster
--   snapshots before deleting them. For example, if you set
--   SnapshotRetentionLimit to 5, a snapshot that was taken today is
--   retained for 5 days before being deleted.
updateCluster_snapshotRetentionLimit :: Lens' UpdateCluster (Maybe Int)

-- | The number of replicas that will reside in each shard
updateCluster_replicaConfiguration :: Lens' UpdateCluster (Maybe ReplicaConfigurationRequest)

-- | A valid node type that you want to scale this cluster up or down to.
updateCluster_nodeType :: Lens' UpdateCluster (Maybe Text)

-- | The status of the Amazon SNS notification topic. Notifications are
--   sent only if the status is active.
updateCluster_snsTopicStatus :: Lens' UpdateCluster (Maybe Text)

-- | The description of the cluster to update
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The Access Control List that is associated with the cluster
updateCluster_aCLName :: Lens' UpdateCluster (Maybe Text)

-- | The name of the parameter group to update
updateCluster_parameterGroupName :: Lens' UpdateCluster (Maybe Text)

-- | The name of the cluster to update
updateCluster_clusterName :: Lens' UpdateCluster Text

-- | The updated cluster
updateClusterResponse_cluster :: Lens' UpdateClusterResponse (Maybe Cluster)

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int

-- | The version number of the Redis engine to be used for the cluster.
createCluster_engineVersion :: Lens' CreateCluster (Maybe Text)

-- | A list of security group names to associate with this cluster.
createCluster_securityGroupIds :: Lens' CreateCluster (Maybe [Text])

-- | A list of Amazon Resource Names (ARN) that uniquely identify the RDB
--   snapshot files stored in Amazon S3. The snapshot files are used to
--   populate the new cluster. The Amazon S3 object name in the ARN cannot
--   contain any commas.
createCluster_snapshotArns :: Lens' CreateCluster (Maybe [Text])

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
createCluster_autoMinorVersionUpgrade :: Lens' CreateCluster (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) topic to which notifications are sent.
createCluster_snsTopicArn :: Lens' CreateCluster (Maybe Text)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard.
--   
--   Example: 05:00-09:00
--   
--   If you do not specify this parameter, MemoryDB automatically chooses
--   an appropriate time range.
createCluster_snapshotWindow :: Lens' CreateCluster (Maybe Text)

-- | The name of the subnet group to be used for the cluster.
createCluster_subnetGroupName :: Lens' CreateCluster (Maybe Text)

-- | A flag to enable in-transit encryption on the cluster.
createCluster_tLSEnabled :: Lens' CreateCluster (Maybe Bool)

-- | The number of shards the cluster will contain. The default value is 1.
createCluster_numShards :: Lens' CreateCluster (Maybe Int)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   <tt>ddd:hh24:mi-ddd:hh24:mi</tt> (24H Clock UTC). The minimum
--   maintenance window is a 60 minute period.
createCluster_maintenanceWindow :: Lens' CreateCluster (Maybe Text)

-- | The ID of the KMS key used to encrypt the cluster.
createCluster_kmsKeyId :: Lens' CreateCluster (Maybe Text)

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
createCluster_snapshotRetentionLimit :: Lens' CreateCluster (Maybe Int)

-- | The name of a snapshot from which to restore data into the new
--   cluster. The snapshot status changes to restoring while the new
--   cluster is being created.
createCluster_snapshotName :: Lens' CreateCluster (Maybe Text)

-- | An optional description of the cluster.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The number of replicas to apply to each shard. The default value is 1.
--   The maximum is 5.
createCluster_numReplicasPerShard :: Lens' CreateCluster (Maybe Int)

-- | A list of tags to be added to this resource. Tags are comma-separated
--   key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include
--   multiple tags as shown following: Key=myKey, Value=myKeyValue
--   Key=mySecondKey, Value=mySecondKeyValue.
createCluster_tags :: Lens' CreateCluster (Maybe [Tag])

-- | The port number on which each of the nodes accepts connections.
createCluster_port :: Lens' CreateCluster (Maybe Int)

-- | The name of the parameter group associated with the cluster.
createCluster_parameterGroupName :: Lens' CreateCluster (Maybe Text)

-- | The name of the cluster. This value must be unique as it also serves
--   as the cluster identifier.
createCluster_clusterName :: Lens' CreateCluster Text

-- | The compute and memory capacity of the nodes in the cluster.
createCluster_nodeType :: Lens' CreateCluster Text

-- | The name of the Access Control List to associate with the cluster.
createCluster_aCLName :: Lens' CreateCluster Text

-- | The newly-created cluster.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | The Amazon S3 bucket to which the snapshot is exported. This parameter
--   is used only when exporting a snapshot for external access. When using
--   this parameter to export a snapshot, be sure MemoryDB has the needed
--   permissions to this S3 bucket. For more information, see <a>Step 2:
--   Grant MemoryDB Access to Your Amazon S3 Bucket</a>.
copySnapshot_targetBucket :: Lens' CopySnapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the target snapshot.
copySnapshot_kmsKeyId :: Lens' CopySnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
copySnapshot_tags :: Lens' CopySnapshot (Maybe [Tag])

-- | The name of an existing snapshot from which to make a copy.
copySnapshot_sourceSnapshotName :: Lens' CopySnapshot Text

-- | A name for the snapshot copy. MemoryDB does not permit overwriting a
--   snapshot, therefore this name must be unique within its context -
--   MemoryDB or an Amazon S3 bucket if exporting.
copySnapshot_targetSnapshotName :: Lens' CopySnapshot Text

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
copySnapshotResponse_snapshot :: Lens' CopySnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
copySnapshotResponse_httpStatus :: Lens' CopySnapshotResponse Int

-- | The name of the parameter group to delete.
deleteParameterGroup_parameterGroupName :: Lens' DeleteParameterGroup Text

-- | The parameter group that has been deleted.
deleteParameterGroupResponse_parameterGroup :: Lens' DeleteParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
deleteParameterGroupResponse_httpStatus :: Lens' DeleteParameterGroupResponse Int

-- | The name of the parameter group to update.
updateParameterGroup_parameterGroupName :: Lens' UpdateParameterGroup Text

-- | An array of parameter names and values for the parameter update. You
--   must supply at least one parameter name and value; subsequent
--   arguments are optional. A maximum of 20 parameters may be updated per
--   request.
updateParameterGroup_parameterNameValues :: Lens' UpdateParameterGroup [ParameterNameValue]

-- | The updated parameter group
updateParameterGroupResponse_parameterGroup :: Lens' UpdateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
updateParameterGroupResponse_httpStatus :: Lens' UpdateParameterGroupResponse Int

-- | The name of the subnet group to return details for.
describeSubnetGroups_subnetGroupName :: Lens' DescribeSubnetGroups (Maybe Text)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSubnetGroups_nextToken :: Lens' DescribeSubnetGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeSubnetGroups_maxResults :: Lens' DescribeSubnetGroups (Maybe Int)

-- | A list of subnet groups. Each element in the list contains detailed
--   information about one group.
describeSubnetGroupsResponse_subnetGroups :: Lens' DescribeSubnetGroupsResponse (Maybe [SubnetGroup])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSubnetGroupsResponse_nextToken :: Lens' DescribeSubnetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeSubnetGroupsResponse_httpStatus :: Lens' DescribeSubnetGroupsResponse Int

-- | The status(es) of the service updates to filter on
describeServiceUpdates_status :: Lens' DescribeServiceUpdates (Maybe [ServiceUpdateStatus])

-- | The unique ID of the service update to describe.
describeServiceUpdates_serviceUpdateName :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The list of cluster names to identify service updates to apply
describeServiceUpdates_clusterNames :: Lens' DescribeServiceUpdates (Maybe [Text])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeServiceUpdates_nextToken :: Lens' DescribeServiceUpdates (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeServiceUpdates_maxResults :: Lens' DescribeServiceUpdates (Maybe Int)

-- | A list of service updates
describeServiceUpdatesResponse_serviceUpdates :: Lens' DescribeServiceUpdatesResponse (Maybe [ServiceUpdate])

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeServiceUpdatesResponse_nextToken :: Lens' DescribeServiceUpdatesResponse (Maybe Text)

-- | The response's http status code.
describeServiceUpdatesResponse_httpStatus :: Lens' DescribeServiceUpdatesResponse Int

-- | An optional description of the parameter group.
createParameterGroup_description :: Lens' CreateParameterGroup (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createParameterGroup_tags :: Lens' CreateParameterGroup (Maybe [Tag])

-- | The name of the parameter group.
createParameterGroup_parameterGroupName :: Lens' CreateParameterGroup Text

-- | The name of the parameter group family that the parameter group can be
--   used with.
createParameterGroup_family :: Lens' CreateParameterGroup Text

-- | The newly-created parameter group.
createParameterGroupResponse_parameterGroup :: Lens' CreateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
createParameterGroupResponse_httpStatus :: Lens' CreateParameterGroupResponse Int

-- | A Boolean value which if true, the shard configuration is included in
--   the snapshot description.
describeSnapshots_showDetail :: Lens' DescribeSnapshots (Maybe Bool)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSnapshots_nextToken :: Lens' DescribeSnapshots (Maybe Text)

-- | If set to system, the output shows snapshots that were automatically
--   created by MemoryDB. If set to user the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
describeSnapshots_source :: Lens' DescribeSnapshots (Maybe Text)

-- | A user-supplied cluster identifier. If this parameter is specified,
--   only snapshots associated with that specific cluster are described.
describeSnapshots_clusterName :: Lens' DescribeSnapshots (Maybe Text)

-- | A user-supplied name of the snapshot. If this parameter is specified,
--   only this named snapshot is described.
describeSnapshots_snapshotName :: Lens' DescribeSnapshots (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeSnapshots_maxResults :: Lens' DescribeSnapshots (Maybe Int)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeSnapshotsResponse_nextToken :: Lens' DescribeSnapshotsResponse (Maybe Text)

-- | A list of snapshots. Each item in the list contains detailed
--   information about one snapshot.
describeSnapshotsResponse_snapshots :: Lens' DescribeSnapshotsResponse (Maybe [Snapshot])

-- | The response's http status code.
describeSnapshotsResponse_httpStatus :: Lens' DescribeSnapshotsResponse Int

-- | The list of users that belong to the Access Control List.
createACL_userNames :: Lens' CreateACL (Maybe (NonEmpty Text))

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createACL_tags :: Lens' CreateACL (Maybe [Tag])

-- | The name of the Access Control List.
createACL_aCLName :: Lens' CreateACL Text

-- | The newly-created Access Control List.
createACLResponse_acl :: Lens' CreateACLResponse (Maybe ACL)

-- | The response's http status code.
createACLResponse_httpStatus :: Lens' CreateACLResponse Int

-- | The EC2 subnet IDs for the subnet group.
updateSubnetGroup_subnetIds :: Lens' UpdateSubnetGroup (Maybe [Text])

-- | A description of the subnet group
updateSubnetGroup_description :: Lens' UpdateSubnetGroup (Maybe Text)

-- | The name of the subnet group
updateSubnetGroup_subnetGroupName :: Lens' UpdateSubnetGroup Text

-- | The updated subnet group
updateSubnetGroupResponse_subnetGroup :: Lens' UpdateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
updateSubnetGroupResponse_httpStatus :: Lens' UpdateSubnetGroupResponse Int

-- | The name of the subnet group to delete
deleteSubnetGroup_subnetGroupName :: Lens' DeleteSubnetGroup Text

-- | The subnet group object that has been deleted.
deleteSubnetGroupResponse_subnetGroup :: Lens' DeleteSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
deleteSubnetGroupResponse_httpStatus :: Lens' DeleteSubnetGroupResponse Int

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createUser_tags :: Lens' CreateUser (Maybe [Tag])

-- | The name of the user. This value must be unique as it also serves as
--   the user identifier.
createUser_userName :: Lens' CreateUser Text

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
createUser_authenticationMode :: Lens' CreateUser AuthenticationMode

-- | Access permissions string used for this user.
createUser_accessString :: Lens' CreateUser Text

-- | The newly-created user.
createUserResponse_user :: Lens' CreateUserResponse (Maybe User)

-- | The response's http status code.
createUserResponse_httpStatus :: Lens' CreateUserResponse Int

-- | The name of the snapshot to delete
deleteSnapshot_snapshotName :: Lens' DeleteSnapshot Text

-- | The snapshot object that has been deleted.
deleteSnapshotResponse_snapshot :: Lens' DeleteSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
deleteSnapshotResponse_httpStatus :: Lens' DeleteSnapshotResponse Int

-- | The cluster being failed over
failoverShard_clusterName :: Lens' FailoverShard Text

-- | The name of the shard
failoverShard_shardName :: Lens' FailoverShard Text

-- | The cluster being failed over
failoverShardResponse_cluster :: Lens' FailoverShardResponse (Maybe Cluster)

-- | The response's http status code.
failoverShardResponse_httpStatus :: Lens' FailoverShardResponse Int

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate.
updateUser_authenticationMode :: Lens' UpdateUser (Maybe AuthenticationMode)

-- | Access permissions string used for this user.
updateUser_accessString :: Lens' UpdateUser (Maybe Text)

-- | The name of the user
updateUser_userName :: Lens' UpdateUser Text

-- | The updated user
updateUserResponse_user :: Lens' UpdateUserResponse (Maybe User)

-- | The response's http status code.
updateUserResponse_httpStatus :: Lens' UpdateUserResponse Int

-- | The name of the user to delete
deleteUser_userName :: Lens' DeleteUser Text

-- | The user object that has been deleted.
deleteUserResponse_user :: Lens' DeleteUserResponse (Maybe User)

-- | The response's http status code.
deleteUserResponse_httpStatus :: Lens' DeleteUserResponse Int

-- | The name of the cluster you want to scale. MemoryDB uses the cluster
--   name to identify the current node type being used by this cluster, and
--   from that to create a list of node types you can scale up to.
listAllowedNodeTypeUpdates_clusterName :: Lens' ListAllowedNodeTypeUpdates Text

-- | A list node types which you can use to scale up your cluster.
listAllowedNodeTypeUpdatesResponse_scaleUpNodeTypes :: Lens' ListAllowedNodeTypeUpdatesResponse (Maybe [Text])

-- | A list node types which you can use to scale down your cluster.
listAllowedNodeTypeUpdatesResponse_scaleDownNodeTypes :: Lens' ListAllowedNodeTypeUpdatesResponse (Maybe [Text])

-- | The response's http status code.
listAllowedNodeTypeUpdatesResponse_httpStatus :: Lens' ListAllowedNodeTypeUpdatesResponse Int

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameterGroups_nextToken :: Lens' DescribeParameterGroups (Maybe Text)

-- | The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
describeParameterGroups_maxResults :: Lens' DescribeParameterGroups (Maybe Int)

-- | The name of a specific parameter group to return details for.
describeParameterGroups_parameterGroupName :: Lens' DescribeParameterGroups (Maybe Text)

-- | An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
describeParameterGroupsResponse_nextToken :: Lens' DescribeParameterGroupsResponse (Maybe Text)

-- | A list of parameter groups. Each element in the list contains detailed
--   information about one parameter group.
describeParameterGroupsResponse_parameterGroups :: Lens' DescribeParameterGroupsResponse (Maybe [ParameterGroup])

-- | The response's http status code.
describeParameterGroupsResponse_httpStatus :: Lens' DescribeParameterGroupsResponse Int

-- | The ID of the KMS key used to encrypt the snapshot.
createSnapshot_kmsKeyId :: Lens' CreateSnapshot (Maybe Text)

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
createSnapshot_tags :: Lens' CreateSnapshot (Maybe [Tag])

-- | The snapshot is created from this cluster.
createSnapshot_clusterName :: Lens' CreateSnapshot Text

-- | A name for the snapshot being created.
createSnapshot_snapshotName :: Lens' CreateSnapshot Text

-- | The newly-created snapshot.
createSnapshotResponse_snapshot :: Lens' CreateSnapshotResponse (Maybe Snapshot)

-- | The response's http status code.
createSnapshotResponse_httpStatus :: Lens' CreateSnapshotResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tags to be added to this resource. A tag is a key-value
--   pair. A tag key must be accompanied by a tag value, although null is
--   accepted.
tagResource_tags :: Lens' TagResource [Tag]

-- | A list of tags as key-value pairs.
tagResourceResponse_tagList :: Lens' TagResourceResponse (Maybe [Tag])

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource for which you want the
--   list of tags
listTags_resourceArn :: Lens' ListTags Text

-- | A list of tags as key-value pairs.
listTagsResponse_tagList :: Lens' ListTagsResponse (Maybe [Tag])

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int

-- | An array of parameter names to reset to their default values. If
--   AllParameters is true, do not use ParameterNames. If AllParameters is
--   false, you must specify the name of at least one parameter to reset.
resetParameterGroup_parameterNames :: Lens' ResetParameterGroup (Maybe [Text])

-- | If true, all parameters in the parameter group are reset to their
--   default values. If false, only the parameters listed by ParameterNames
--   are reset to their default values.
resetParameterGroup_allParameters :: Lens' ResetParameterGroup (Maybe Bool)

-- | The name of the parameter group to reset.
resetParameterGroup_parameterGroupName :: Lens' ResetParameterGroup Text

-- | The parameter group being reset.
resetParameterGroupResponse_parameterGroup :: Lens' ResetParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
resetParameterGroupResponse_httpStatus :: Lens' ResetParameterGroupResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be removed
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys of the tags that are to be removed
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The list of tags removed
untagResourceResponse_tagList :: Lens' UntagResourceResponse (Maybe [Tag])

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Indicates ACL status. Can be "creating", "active", "modifying",
--   "deleting".
acl_status :: Lens' ACL (Maybe Text)

-- | The list of user names that belong to the ACL.
acl_userNames :: Lens' ACL (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the ACL
acl_arn :: Lens' ACL (Maybe Text)

-- | The name of the Access Control List
acl_name :: Lens' ACL (Maybe Text)

-- | A list of updates being applied to the ACL.
acl_pendingChanges :: Lens' ACL (Maybe ACLPendingChanges)

-- | The minimum engine version supported for the ACL
acl_minimumEngineVersion :: Lens' ACL (Maybe Text)

-- | A list of clusters associated with the ACL.
acl_clusters :: Lens' ACL (Maybe [Text])

-- | A list of users being added to the ACL
aCLPendingChanges_userNamesToAdd :: Lens' ACLPendingChanges (Maybe [Text])

-- | A list of user names being removed from the ACL
aCLPendingChanges_userNamesToRemove :: Lens' ACLPendingChanges (Maybe [Text])

-- | A list of ACLs pending to be applied.
aCLsUpdateStatus_aCLToApply :: Lens' ACLsUpdateStatus (Maybe Text)

-- | The number of passwords belonging to the user. The maximum is two.
authentication_passwordCount :: Lens' Authentication (Maybe Int)

-- | Indicates whether the user requires a password to authenticate.
authentication_type :: Lens' Authentication (Maybe AuthenticationType)

-- | The password(s) used for authentication
authenticationMode_passwords :: Lens' AuthenticationMode (Maybe (NonEmpty Text))

-- | Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
authenticationMode_type :: Lens' AuthenticationMode (Maybe InputAuthenticationType)

-- | The name of the Availability Zone.
availabilityZone_name :: Lens' AvailabilityZone (Maybe Text)

-- | The Redis engine version used by the cluster
cluster_engineVersion :: Lens' Cluster (Maybe Text)

-- | The status of the cluster. For example, Available, Updating, Creating.
cluster_status :: Lens' Cluster (Maybe Text)

-- | When set to true, the cluster will automatically receive minor engine
--   version upgrades after launch.
cluster_autoMinorVersionUpgrade :: Lens' Cluster (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the SNS notification topic
cluster_snsTopicArn :: Lens' Cluster (Maybe Text)

-- | A list of security groups used by the cluster
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
cluster_availabilityMode :: Lens' Cluster (Maybe AZStatus)

-- | The status of the parameter group used by the cluster, for example
--   'active' or 'applying'.
cluster_parameterGroupStatus :: Lens' Cluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | A group of settings that are currently being applied.
cluster_pendingUpdates :: Lens' Cluster (Maybe ClusterPendingUpdates)

-- | The number of shards in the cluster
cluster_numberOfShards :: Lens' Cluster (Maybe Int)

-- | The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
cluster_snapshotWindow :: Lens' Cluster (Maybe Text)

-- | The name of the subnet group used by the cluster
cluster_subnetGroupName :: Lens' Cluster (Maybe Text)

-- | A flag to indicate if In-transit encryption is enabled
cluster_tLSEnabled :: Lens' Cluster (Maybe Bool)

-- | Specifies the weekly time range during which maintenance on the
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period.
cluster_maintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The ID of the KMS key used to encrypt the cluster
cluster_kmsKeyId :: Lens' Cluster (Maybe Text)

-- | A list of shards that are members of the cluster.
cluster_shards :: Lens' Cluster (Maybe [Shard])

-- | The user-supplied name of the cluster. This identifier is a unique key
--   that identifies a cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Redis engine patch version used by the cluster
cluster_enginePatchVersion :: Lens' Cluster (Maybe Text)

-- | The number of days for which MemoryDB retains automatic snapshots
--   before deleting them. For example, if you set SnapshotRetentionLimit
--   to 5, a snapshot that was taken today is retained for 5 days before
--   being deleted.
cluster_snapshotRetentionLimit :: Lens' Cluster (Maybe Int)

-- | The cluster's node type
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The SNS topic must be in Active status to receive notifications
cluster_snsTopicStatus :: Lens' Cluster (Maybe Text)

-- | A description of the cluster
cluster_description :: Lens' Cluster (Maybe Text)

-- | The name of the Access Control List associated with this cluster.
cluster_aCLName :: Lens' Cluster (Maybe Text)

-- | The cluster's configuration endpoint
cluster_clusterEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The name of the parameter group used by the cluster
cluster_parameterGroupName :: Lens' Cluster (Maybe Text)

-- | The Redis engine version used by the cluster
clusterConfiguration_engineVersion :: Lens' ClusterConfiguration (Maybe Text)

-- | The ID of the VPC the cluster belongs to
clusterConfiguration_vpcId :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot window set by the cluster
clusterConfiguration_snapshotWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The name of the subnet group used by the cluster
clusterConfiguration_subnetGroupName :: Lens' ClusterConfiguration (Maybe Text)

-- | The number of shards in the cluster
clusterConfiguration_numShards :: Lens' ClusterConfiguration (Maybe Int)

-- | The specified maintenance window for the cluster
clusterConfiguration_maintenanceWindow :: Lens' ClusterConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the SNS notification topic for the
--   cluster
clusterConfiguration_topicArn :: Lens' ClusterConfiguration (Maybe Text)

-- | The list of shards in the cluster
clusterConfiguration_shards :: Lens' ClusterConfiguration (Maybe [ShardDetail])

-- | The name of the cluster
clusterConfiguration_name :: Lens' ClusterConfiguration (Maybe Text)

-- | The snapshot retention limit set by the cluster
clusterConfiguration_snapshotRetentionLimit :: Lens' ClusterConfiguration (Maybe Int)

-- | The node type used for the cluster
clusterConfiguration_nodeType :: Lens' ClusterConfiguration (Maybe Text)

-- | The description of the cluster configuration
clusterConfiguration_description :: Lens' ClusterConfiguration (Maybe Text)

-- | The port used by the cluster
clusterConfiguration_port :: Lens' ClusterConfiguration (Maybe Int)

-- | The name of parameter group used by the cluster
clusterConfiguration_parameterGroupName :: Lens' ClusterConfiguration (Maybe Text)

-- | A list of service updates being applied to the cluster
clusterPendingUpdates_serviceUpdates :: Lens' ClusterPendingUpdates (Maybe [PendingModifiedServiceUpdate])

-- | The status of an online resharding operation.
clusterPendingUpdates_resharding :: Lens' ClusterPendingUpdates (Maybe ReshardingStatus)

-- | A list of ACLs associated with the cluster that are being updated
clusterPendingUpdates_aCLs :: Lens' ClusterPendingUpdates (Maybe ACLsUpdateStatus)

-- | The DNS hostname of the node.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that the engine is listening on.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | The engine version
engineVersionInfo_engineVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | The patched engine version
engineVersionInfo_enginePatchVersion :: Lens' EngineVersionInfo (Maybe Text)

-- | Specifies the name of the parameter group family to which the engine
--   default parameters apply.
engineVersionInfo_parameterGroupFamily :: Lens' EngineVersionInfo (Maybe Text)

-- | The name for the source of the event. For example, if the event
--   occurred at the cluster level, the identifier would be the name of the
--   cluster.
event_sourceName :: Lens' Event (Maybe Text)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   security group, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | The text of the event.
event_message :: Lens' Event (Maybe Text)

-- | The property being filtered. For example, UserName.
filter_name :: Lens' Filter Text

-- | The property values to filter on. For example, "user-123".
filter_values :: Lens' Filter (NonEmpty Text)

-- | The status of the service update on the node
node_status :: Lens' Node (Maybe Text)

-- | The Availability Zone in which the node resides
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The node identifier. A node name is a numeric identifier (0001, 0002,
--   etc.). The combination of cluster name, shard name and node name
--   uniquely identifies every node used in a customer's Amazon account.
node_name :: Lens' Node (Maybe Text)

-- | The hostname for connecting to this node.
node_endpoint :: Lens' Node (Maybe Endpoint)

-- | The date and time when the node was created.
node_createTime :: Lens' Node (Maybe UTCTime)

-- | The value of the parameter
parameter_value :: Lens' Parameter (Maybe Text)

-- | The name of the parameter
parameter_name :: Lens' Parameter (Maybe Text)

-- | The earliest engine version to which the parameter can apply.
parameter_minimumEngineVersion :: Lens' Parameter (Maybe Text)

-- | The parameter's data type
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | The valid range of values for the parameter.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)

-- | The Amazon Resource Name (ARN) of the parameter group
parameterGroup_arn :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group family that this parameter group is
--   compatible with.
parameterGroup_family :: Lens' ParameterGroup (Maybe Text)

-- | The name of the parameter group
parameterGroup_name :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)

-- | The value of the parameter
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | The status of the service update
pendingModifiedServiceUpdate_status :: Lens' PendingModifiedServiceUpdate (Maybe ServiceUpdateStatus)

-- | The unique ID of the service update
pendingModifiedServiceUpdate_serviceUpdateName :: Lens' PendingModifiedServiceUpdate (Maybe Text)

-- | The number of replicas to scale up or down to
replicaConfigurationRequest_replicaCount :: Lens' ReplicaConfigurationRequest (Maybe Int)

-- | The status of the online resharding slot migration
reshardingStatus_slotMigration :: Lens' ReshardingStatus (Maybe SlotMigration)

-- | The status of the security group membership. The status changes
--   whenever a security group is modified, or when the security groups
--   assigned to a cluster are modified.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The identifier of the security group.
securityGroupMembership_securityGroupId :: Lens' SecurityGroupMembership (Maybe Text)

-- | The status of the service update
serviceUpdate_status :: Lens' ServiceUpdate (Maybe ServiceUpdateStatus)

-- | The date at which the service update will be automatically applied
serviceUpdate_autoUpdateStartDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The unique ID of the service update
serviceUpdate_serviceUpdateName :: Lens' ServiceUpdate (Maybe Text)

-- | A list of nodes updated by the service update
serviceUpdate_nodesUpdated :: Lens' ServiceUpdate (Maybe Text)

-- | The date when the service update is initially available
serviceUpdate_releaseDate :: Lens' ServiceUpdate (Maybe UTCTime)

-- | The name of the cluster to which the service update applies
serviceUpdate_clusterName :: Lens' ServiceUpdate (Maybe Text)

-- | Reflects the nature of the service update
serviceUpdate_type :: Lens' ServiceUpdate (Maybe ServiceUpdateType)

-- | Provides details of the service update
serviceUpdate_description :: Lens' ServiceUpdate (Maybe Text)

-- | The unique ID of the service update
serviceUpdateRequest_serviceUpdateNameToApply :: Lens' ServiceUpdateRequest (Maybe Text)

-- | The current state of this replication group - creating, available,
--   modifying, deleting.
shard_status :: Lens' Shard (Maybe Text)

-- | The keyspace for this shard.
shard_slots :: Lens' Shard (Maybe Text)

-- | The number of nodes in the shard
shard_numberOfNodes :: Lens' Shard (Maybe Int)

-- | The name of the shard
shard_name :: Lens' Shard (Maybe Text)

-- | A list containing information about individual nodes within the shard
shard_nodes :: Lens' Shard (Maybe [Node])

-- | A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
shardConfiguration_slots :: Lens' ShardConfiguration (Maybe Text)

-- | The number of read replica nodes in this shard.
shardConfiguration_replicaCount :: Lens' ShardConfiguration (Maybe Int)

-- | The number of shards in the cluster
shardConfigurationRequest_shardCount :: Lens' ShardConfigurationRequest (Maybe Int)

-- | The size of the shard's snapshot
shardDetail_size :: Lens' ShardDetail (Maybe Text)

-- | The date and time that the shard's snapshot was created
shardDetail_snapshotCreationTime :: Lens' ShardDetail (Maybe UTCTime)

-- | The name of the shard
shardDetail_name :: Lens' ShardDetail (Maybe Text)

-- | The configuration details of the shard
shardDetail_configuration :: Lens' ShardDetail (Maybe ShardConfiguration)

-- | The percentage of the slot migration that is complete.
slotMigration_progressPercentage :: Lens' SlotMigration (Maybe Double)

-- | The status of the snapshot. Valid values: creating | available |
--   restoring | copying | deleting.
snapshot_status :: Lens' Snapshot (Maybe Text)

-- | The ARN (Amazon Resource Name) of the snapshot.
snapshot_arn :: Lens' Snapshot (Maybe Text)

-- | The ID of the KMS key used to encrypt the snapshot.
snapshot_kmsKeyId :: Lens' Snapshot (Maybe Text)

-- | The name of the snapshot
snapshot_name :: Lens' Snapshot (Maybe Text)

-- | The configuration of the cluster from which the snapshot was taken
snapshot_clusterConfiguration :: Lens' Snapshot (Maybe ClusterConfiguration)

-- | Indicates whether the snapshot is from an automatic backup (automated)
--   or was created manually (manual).
snapshot_source :: Lens' Snapshot (Maybe Text)

-- | The unique identifier for the subnet.
subnet_identifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone where the subnet resides
subnet_availabilityZone :: Lens' Subnet (Maybe AvailabilityZone)

-- | The ARN (Amazon Resource Name) of the subnet group.
subnetGroup_arn :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])

-- | The name of the subnet group
subnetGroup_name :: Lens' SubnetGroup (Maybe Text)

-- | A description of the subnet group
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)

-- | The tag's value. May be null.
tag_value :: Lens' Tag (Maybe Text)

-- | The key for the tag. May not be null.
tag_key :: Lens' Tag (Maybe Text)

-- | The name of the cluster
unprocessedCluster_clusterName :: Lens' UnprocessedCluster (Maybe Text)

-- | The error type associated with the update failure
unprocessedCluster_errorType :: Lens' UnprocessedCluster (Maybe Text)

-- | The error message associated with the update failure
unprocessedCluster_errorMessage :: Lens' UnprocessedCluster (Maybe Text)

-- | Indicates the user status. Can be "active", "modifying" or "deleting".
user_status :: Lens' User (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user.
user_arn :: Lens' User (Maybe Text)

-- | Denotes whether the user requires a password to authenticate.
user_authentication :: Lens' User (Maybe Authentication)

-- | Access permissions string used for this user.
user_accessString :: Lens' User (Maybe Text)

-- | The name of the user
user_name :: Lens' User (Maybe Text)

-- | The names of the Access Control Lists to which the user belongs
user_aCLNames :: Lens' User (Maybe [Text])

-- | The minimum engine version supported for the user
user_minimumEngineVersion :: Lens' User (Maybe Text)


module Amazonka.MemoryDb.Waiters


-- | Derived from API version <tt>2021-01-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   MemoryDB for Redis is a fully managed, Redis-compatible, in-memory
--   database that delivers ultra-fast performance and Multi-AZ durability
--   for modern applications built using microservices architectures.
--   MemoryDB stores the entire database in-memory, enabling low latency
--   and high throughput data access. It is compatible with Redis, a
--   popular open source data store, enabling you to leverage Redis’
--   flexible and friendly data structures, APIs, and commands.
module Amazonka.MemoryDb

-- | API version <tt>2021-01-01</tt> of the Amazon MemoryDB SDK
--   configuration.
defaultService :: Service

_InvalidNodeStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ACLNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError

_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

_ACLAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_ShardNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidUserStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidSnapshotStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_DefaultUserRequired :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SnapshotQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_APICallRateForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_ACLQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidKMSKeyFault :: AsError a => Getting (First ServiceError) a ServiceError

_InsufficientClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

_ParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

_TestFailoverNotAvailableFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetNotAllowedFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidACLStateFault :: AsError a => Getting (First ServiceError) a ServiceError

_ShardsPerClusterQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceUpdateNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_SubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_DuplicateUserNameFault :: AsError a => Getting (First ServiceError) a ServiceError

_ClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

_UserQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

_NoOperationFault :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidCredentialsException :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeClusters</a> smart constructor.
data DescribeClusters
DescribeClusters' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeClusters

-- | Create a value of <a>DescribeClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showShardDetails:DescribeClusters'</a>,
--   <a>describeClusters_showShardDetails</a> - An optional flag that can
--   be included in the request to retrieve information about the
--   individual shard(s).
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClusters_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:clusterName:DescribeClusters'</a>,
--   <a>describeClusters_clusterName</a> - The name of the cluster
--   
--   <a>$sel:maxResults:DescribeClusters'</a>,
--   <a>describeClusters_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeClusters :: DescribeClusters

-- | <i>See:</i> <a>newDescribeClustersResponse</a> smart constructor.
data DescribeClustersResponse
DescribeClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> DescribeClustersResponse

-- | Create a value of <a>DescribeClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClustersResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:clusters:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_clusters</a> - A list of clusters
--   
--   <a>$sel:httpStatus:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeClustersResponse :: Int -> DescribeClustersResponse

-- | <i>See:</i> <a>newBatchUpdateCluster</a> smart constructor.
data BatchUpdateCluster
BatchUpdateCluster' :: Maybe ServiceUpdateRequest -> [Text] -> BatchUpdateCluster

-- | Create a value of <a>BatchUpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdate:BatchUpdateCluster'</a>,
--   <a>batchUpdateCluster_serviceUpdate</a> - The unique ID of the service
--   update
--   
--   <a>$sel:clusterNames:BatchUpdateCluster'</a>,
--   <a>batchUpdateCluster_clusterNames</a> - The cluster names to apply
--   the updates.
newBatchUpdateCluster :: BatchUpdateCluster

-- | <i>See:</i> <a>newBatchUpdateClusterResponse</a> smart constructor.
data BatchUpdateClusterResponse
BatchUpdateClusterResponse' :: Maybe [UnprocessedCluster] -> Maybe [Cluster] -> Int -> BatchUpdateClusterResponse

-- | Create a value of <a>BatchUpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedClusters:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_unprocessedClusters</a> - The list of
--   clusters where updates have not been applied.
--   
--   <a>$sel:processedClusters:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_processedClusters</a> - The list of
--   clusters that have been updated.
--   
--   <a>$sel:httpStatus:BatchUpdateClusterResponse'</a>,
--   <a>batchUpdateClusterResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdateClusterResponse :: Int -> BatchUpdateClusterResponse

-- | <i>See:</i> <a>newDescribeUsers</a> smart constructor.
data DescribeUsers
DescribeUsers' :: Maybe [Filter] -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeUsers

-- | Create a value of <a>DescribeUsers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DescribeUsers'</a>, <a>describeUsers_filters</a> -
--   Filter to determine the list of users to return.
--   
--   <a>$sel:userName:DescribeUsers'</a>, <a>describeUsers_userName</a> -
--   The name of the user
--   
--   <a>$sel:nextToken:DescribeUsers'</a>, <a>describeUsers_nextToken</a> -
--   An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeUsers'</a>, <a>describeUsers_maxResults</a>
--   - The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
newDescribeUsers :: DescribeUsers

-- | <i>See:</i> <a>newDescribeUsersResponse</a> smart constructor.
data DescribeUsersResponse
DescribeUsersResponse' :: Maybe [User] -> Maybe Text -> Int -> DescribeUsersResponse

-- | Create a value of <a>DescribeUsersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_users</a> - A list of users.
--   
--   <a>$sel:nextToken:DescribeUsers'</a>,
--   <a>describeUsersResponse_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeUsersResponse'</a>,
--   <a>describeUsersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUsersResponse :: Int -> DescribeUsersResponse

-- | <i>See:</i> <a>newDescribeParameters</a> smart constructor.
data DescribeParameters
DescribeParameters' :: Maybe Text -> Maybe Int -> Text -> DescribeParameters

-- | Create a value of <a>DescribeParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParameters_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeParameters'</a>,
--   <a>describeParameters_maxResults</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
--   
--   <a>$sel:parameterGroupName:DescribeParameters'</a>,
--   <a>describeParameters_parameterGroupName</a> - he name of a specific
--   parameter group to return details for.
newDescribeParameters :: Text -> DescribeParameters

-- | <i>See:</i> <a>newDescribeParametersResponse</a> smart constructor.
data DescribeParametersResponse
DescribeParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeParametersResponse

-- | Create a value of <a>DescribeParametersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParametersResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:parameters:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_parameters</a> - A list of parameters
--   specific to a particular parameter group. Each element in the list
--   contains detailed information about one parameter.
--   
--   <a>$sel:httpStatus:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeParametersResponse :: Int -> DescribeParametersResponse

-- | <i>See:</i> <a>newDeleteACL</a> smart constructor.
data DeleteACL
DeleteACL' :: Text -> DeleteACL

-- | Create a value of <a>DeleteACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aCLName:DeleteACL'</a>, <a>deleteACL_aCLName</a> - The name of
--   the Access Control List to delete
newDeleteACL :: Text -> DeleteACL

-- | <i>See:</i> <a>newDeleteACLResponse</a> smart constructor.
data DeleteACLResponse
DeleteACLResponse' :: Maybe ACL -> Int -> DeleteACLResponse

-- | Create a value of <a>DeleteACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:DeleteACLResponse'</a>, <a>deleteACLResponse_acl</a> - The
--   Access Control List object that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteACLResponse'</a>,
--   <a>deleteACLResponse_httpStatus</a> - The response's http status code.
newDeleteACLResponse :: Int -> DeleteACLResponse

-- | <i>See:</i> <a>newUpdateACL</a> smart constructor.
data UpdateACL
UpdateACL' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> UpdateACL

-- | Create a value of <a>UpdateACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNamesToAdd:UpdateACL'</a>, <a>updateACL_userNamesToAdd</a>
--   - The list of users to add to the Access Control List
--   
--   <a>$sel:userNamesToRemove:UpdateACL'</a>,
--   <a>updateACL_userNamesToRemove</a> - The list of users to remove from
--   the Access Control List
--   
--   <a>$sel:aCLName:UpdateACL'</a>, <a>updateACL_aCLName</a> - The name of
--   the Access Control List
newUpdateACL :: Text -> UpdateACL

-- | <i>See:</i> <a>newUpdateACLResponse</a> smart constructor.
data UpdateACLResponse
UpdateACLResponse' :: Maybe ACL -> Int -> UpdateACLResponse

-- | Create a value of <a>UpdateACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:UpdateACLResponse'</a>, <a>updateACLResponse_acl</a> - The
--   updated Access Control List
--   
--   <a>$sel:httpStatus:UpdateACLResponse'</a>,
--   <a>updateACLResponse_httpStatus</a> - The response's http status code.
newUpdateACLResponse :: Int -> UpdateACLResponse

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe POSIX -> Maybe SourceType -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> DescribeEvents

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceName:DescribeEvents'</a>,
--   <a>describeEvents_sourceName</a> - The identifier of the event source
--   for which events are returned. If not specified, all sources are
--   included in the response.
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes worth of events to retrieve.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeEvents :: DescribeEvents

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeEventsResponse

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - A list of events. Each element
--   in the list contains detailed information about one event.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | <i>See:</i> <a>newDescribeEngineVersions</a> smart constructor.
data DescribeEngineVersions
DescribeEngineVersions' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeEngineVersions

-- | Create a value of <a>DescribeEngineVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_engineVersion</a> - The Redis engine version
--   
--   <a>$sel:defaultOnly:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_defaultOnly</a> - If true, specifies that
--   only the default version of the specified engine or engine and major
--   version combination is to be returned.
--   
--   <a>$sel:nextToken:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:parameterGroupFamily:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_parameterGroupFamily</a> - The name of a
--   specific parameter group family to return details for.
--   
--   <a>$sel:maxResults:DescribeEngineVersions'</a>,
--   <a>describeEngineVersions_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
newDescribeEngineVersions :: DescribeEngineVersions

-- | <i>See:</i> <a>newDescribeEngineVersionsResponse</a> smart
--   constructor.
data DescribeEngineVersionsResponse
DescribeEngineVersionsResponse' :: Maybe Text -> Maybe [EngineVersionInfo] -> Int -> DescribeEngineVersionsResponse

-- | Create a value of <a>DescribeEngineVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEngineVersions'</a>,
--   <a>describeEngineVersionsResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:engineVersions:DescribeEngineVersionsResponse'</a>,
--   <a>describeEngineVersionsResponse_engineVersions</a> - A list of
--   engine version details. Each element in the list contains detailed
--   information about one engine version.
--   
--   <a>$sel:httpStatus:DescribeEngineVersionsResponse'</a>,
--   <a>describeEngineVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEngineVersionsResponse :: Int -> DescribeEngineVersionsResponse

-- | <i>See:</i> <a>newDescribeACLs</a> smart constructor.
data DescribeACLs
DescribeACLs' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeACLs

-- | Create a value of <a>DescribeACLs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeACLs'</a>, <a>describeACLs_nextToken</a> -
--   An optional argument to pass in case the total number of records
--   exceeds the value of MaxResults. If nextToken is returned, there are
--   more results available. The value of nextToken is a unique pagination
--   token for each page. Make the call again using the returned token to
--   retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeACLs'</a>, <a>describeACLs_maxResults</a> -
--   The maximum number of records to include in the response. If more
--   records exist than the specified MaxResults value, a token is included
--   in the response so that the remaining results can be retrieved.
--   
--   <a>$sel:aCLName:DescribeACLs'</a>, <a>describeACLs_aCLName</a> - The
--   name of the ACL
newDescribeACLs :: DescribeACLs

-- | <i>See:</i> <a>newDescribeACLsResponse</a> smart constructor.
data DescribeACLsResponse
DescribeACLsResponse' :: Maybe Text -> Maybe [ACL] -> Int -> DescribeACLsResponse

-- | Create a value of <a>DescribeACLsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeACLs'</a>,
--   <a>describeACLsResponse_nextToken</a> - If nextToken is returned,
--   there are more results available. The value of nextToken is a unique
--   pagination token for each page. Make the call again using the returned
--   token to retrieve the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:aCLs:DescribeACLsResponse'</a>,
--   <a>describeACLsResponse_aCLs</a> - The list of ACLs
--   
--   <a>$sel:httpStatus:DescribeACLsResponse'</a>,
--   <a>describeACLsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeACLsResponse :: Int -> DescribeACLsResponse

-- | <i>See:</i> <a>newCreateSubnetGroup</a> smart constructor.
data CreateSubnetGroup
CreateSubnetGroup' :: Maybe Text -> Maybe [Tag] -> Text -> [Text] -> CreateSubnetGroup

-- | Create a value of <a>CreateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_description</a> - A description for the subnet
--   group.
--   
--   <a>$sel:tags:CreateSubnetGroup'</a>, <a>createSubnetGroup_tags</a> - A
--   list of tags to be added to this resource. A tag is a key-value pair.
--   A tag key must be accompanied by a tag value, although null is
--   accepted.
--   
--   <a>$sel:subnetGroupName:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group.
--   
--   <a>$sel:subnetIds:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for the
--   subnet group.
newCreateSubnetGroup :: Text -> CreateSubnetGroup

-- | <i>See:</i> <a>newCreateSubnetGroupResponse</a> smart constructor.
data CreateSubnetGroupResponse
CreateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> CreateSubnetGroupResponse

-- | Create a value of <a>CreateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_subnetGroup</a> - The newly-created
--   subnet group
--   
--   <a>$sel:httpStatus:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubnetGroupResponse :: Int -> CreateSubnetGroupResponse

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Maybe Text -> Text -> DeleteCluster

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:finalSnapshotName:DeleteCluster'</a>,
--   <a>deleteCluster_finalSnapshotName</a> - The user-supplied name of a
--   final cluster snapshot. This is the unique name that identifies the
--   snapshot. MemoryDB creates the snapshot, and then deletes the cluster
--   immediately afterward.
--   
--   <a>$sel:clusterName:DeleteCluster'</a>,
--   <a>deleteCluster_clusterName</a> - The name of the cluster to be
--   deleted
newDeleteCluster :: Text -> DeleteCluster

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - The cluster object that has
--   been deleted
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShardConfigurationRequest -> Maybe Int -> Maybe ReplicaConfigurationRequest -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:UpdateCluster'</a>,
--   <a>updateCluster_engineVersion</a> - The upgraded version of the
--   engine to be run on the nodes. You can upgrade to a newer engine
--   version, but you cannot downgrade to an earlier engine version. If you
--   want to use an earlier engine version, you must delete the existing
--   cluster and create it anew with the earlier engine version.
--   
--   <a>$sel:securityGroupIds:UpdateCluster'</a>,
--   <a>updateCluster_securityGroupIds</a> - The SecurityGroupIds to update
--   
--   <a>$sel:snsTopicArn:UpdateCluster'</a>,
--   <a>updateCluster_snsTopicArn</a> - The SNS topic ARN to update
--   
--   <a>$sel:snapshotWindow:UpdateCluster'</a>,
--   <a>updateCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which MemoryDB begins taking a daily snapshot of your cluster.
--   
--   <a>$sel:maintenanceWindow:UpdateCluster'</a>,
--   <a>updateCluster_maintenanceWindow</a> - The maintenance window to
--   update
--   
--   <a>$sel:shardConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_shardConfiguration</a> - The number of shards in the
--   cluster
--   
--   <a>$sel:snapshotRetentionLimit:UpdateCluster'</a>,
--   <a>updateCluster_snapshotRetentionLimit</a> - The number of days for
--   which MemoryDB retains automatic cluster snapshots before deleting
--   them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
--   that was taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:replicaConfiguration:UpdateCluster'</a>,
--   <a>updateCluster_replicaConfiguration</a> - The number of replicas
--   that will reside in each shard
--   
--   <a>$sel:nodeType:UpdateCluster'</a>, <a>updateCluster_nodeType</a> - A
--   valid node type that you want to scale this cluster up or down to.
--   
--   <a>$sel:snsTopicStatus:UpdateCluster'</a>,
--   <a>updateCluster_snsTopicStatus</a> - The status of the Amazon SNS
--   notification topic. Notifications are sent only if the status is
--   active.
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - The description of the cluster to
--   update
--   
--   <a>$sel:aCLName:UpdateCluster'</a>, <a>updateCluster_aCLName</a> - The
--   Access Control List that is associated with the cluster
--   
--   <a>$sel:parameterGroupName:UpdateCluster'</a>,
--   <a>updateCluster_parameterGroupName</a> - The name of the parameter
--   group to update
--   
--   <a>$sel:clusterName:UpdateCluster'</a>,
--   <a>updateCluster_clusterName</a> - The name of the cluster to update
newUpdateCluster :: Text -> UpdateCluster

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Maybe Cluster -> Int -> UpdateClusterResponse

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_cluster</a> - The updated cluster
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Tag] -> Maybe Int -> Maybe Text -> Text -> Text -> Text -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateCluster'</a>,
--   <a>createCluster_engineVersion</a> - The version number of the Redis
--   engine to be used for the cluster.
--   
--   <a>$sel:securityGroupIds:CreateCluster'</a>,
--   <a>createCluster_securityGroupIds</a> - A list of security group names
--   to associate with this cluster.
--   
--   <a>$sel:snapshotArns:CreateCluster'</a>,
--   <a>createCluster_snapshotArns</a> - A list of Amazon Resource Names
--   (ARN) that uniquely identify the RDB snapshot files stored in Amazon
--   S3. The snapshot files are used to populate the new cluster. The
--   Amazon S3 object name in the ARN cannot contain any commas.
--   
--   <a>$sel:autoMinorVersionUpgrade:CreateCluster'</a>,
--   <a>createCluster_autoMinorVersionUpgrade</a> - When set to true, the
--   cluster will automatically receive minor engine version upgrades after
--   launch.
--   
--   <a>$sel:snsTopicArn:CreateCluster'</a>,
--   <a>createCluster_snsTopicArn</a> - The Amazon Resource Name (ARN) of
--   the Amazon Simple Notification Service (SNS) topic to which
--   notifications are sent.
--   
--   <a>$sel:snapshotWindow:CreateCluster'</a>,
--   <a>createCluster_snapshotWindow</a> - The daily time range (in UTC)
--   during which MemoryDB begins taking a daily snapshot of your shard.
--   
--   Example: 05:00-09:00
--   
--   If you do not specify this parameter, MemoryDB automatically chooses
--   an appropriate time range.
--   
--   <a>$sel:subnetGroupName:CreateCluster'</a>,
--   <a>createCluster_subnetGroupName</a> - The name of the subnet group to
--   be used for the cluster.
--   
--   <a>$sel:tLSEnabled:CreateCluster'</a>, <a>createCluster_tLSEnabled</a>
--   - A flag to enable in-transit encryption on the cluster.
--   
--   <a>$sel:numShards:CreateCluster'</a>, <a>createCluster_numShards</a> -
--   The number of shards the cluster will contain. The default value is 1.
--   
--   <a>$sel:maintenanceWindow:CreateCluster'</a>,
--   <a>createCluster_maintenanceWindow</a> - Specifies the weekly time
--   range during which maintenance on the cluster is performed. It is
--   specified as a range in the format <tt>ddd:hh24:mi-ddd:hh24:mi</tt>
--   (24H Clock UTC). The minimum maintenance window is a 60 minute period.
--   
--   <a>$sel:kmsKeyId:CreateCluster'</a>, <a>createCluster_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the cluster.
--   
--   <a>$sel:snapshotRetentionLimit:CreateCluster'</a>,
--   <a>createCluster_snapshotRetentionLimit</a> - The number of days for
--   which MemoryDB retains automatic snapshots before deleting them. For
--   example, if you set SnapshotRetentionLimit to 5, a snapshot that was
--   taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:snapshotName:CreateCluster'</a>,
--   <a>createCluster_snapshotName</a> - The name of a snapshot from which
--   to restore data into the new cluster. The snapshot status changes to
--   restoring while the new cluster is being created.
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - An optional description of the
--   cluster.
--   
--   <a>$sel:numReplicasPerShard:CreateCluster'</a>,
--   <a>createCluster_numReplicasPerShard</a> - The number of replicas to
--   apply to each shard. The default value is 1. The maximum is 5.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - A list of
--   tags to be added to this resource. Tags are comma-separated key,value
--   pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags
--   as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey,
--   Value=mySecondKeyValue.
--   
--   <a>$sel:port:CreateCluster'</a>, <a>createCluster_port</a> - The port
--   number on which each of the nodes accepts connections.
--   
--   <a>$sel:parameterGroupName:CreateCluster'</a>,
--   <a>createCluster_parameterGroupName</a> - The name of the parameter
--   group associated with the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster. This value
--   must be unique as it also serves as the cluster identifier.
--   
--   <a>$sel:nodeType:CreateCluster'</a>, <a>createCluster_nodeType</a> -
--   The compute and memory capacity of the nodes in the cluster.
--   
--   <a>$sel:aCLName:CreateCluster'</a>, <a>createCluster_aCLName</a> - The
--   name of the Access Control List to associate with the cluster.
newCreateCluster :: Text -> Text -> Text -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The newly-created cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newCopySnapshot</a> smart constructor.
data CopySnapshot
CopySnapshot' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> Text -> CopySnapshot

-- | Create a value of <a>CopySnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBucket:CopySnapshot'</a>,
--   <a>copySnapshot_targetBucket</a> - The Amazon S3 bucket to which the
--   snapshot is exported. This parameter is used only when exporting a
--   snapshot for external access. When using this parameter to export a
--   snapshot, be sure MemoryDB has the needed permissions to this S3
--   bucket. For more information, see <a>Step 2: Grant MemoryDB Access to
--   Your Amazon S3 Bucket</a>.
--   
--   <a>$sel:kmsKeyId:CopySnapshot'</a>, <a>copySnapshot_kmsKeyId</a> - The
--   ID of the KMS key used to encrypt the target snapshot.
--   
--   <a>$sel:tags:CopySnapshot'</a>, <a>copySnapshot_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:sourceSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_sourceSnapshotName</a> - The name of an existing
--   snapshot from which to make a copy.
--   
--   <a>$sel:targetSnapshotName:CopySnapshot'</a>,
--   <a>copySnapshot_targetSnapshotName</a> - A name for the snapshot copy.
--   MemoryDB does not permit overwriting a snapshot, therefore this name
--   must be unique within its context - MemoryDB or an Amazon S3 bucket if
--   exporting.
newCopySnapshot :: Text -> Text -> CopySnapshot

-- | <i>See:</i> <a>newCopySnapshotResponse</a> smart constructor.
data CopySnapshotResponse
CopySnapshotResponse' :: Maybe Snapshot -> Int -> CopySnapshotResponse

-- | Create a value of <a>CopySnapshotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_snapshot</a> - Represents a copy of an entire
--   cluster as of the time when the snapshot was taken.
--   
--   <a>$sel:httpStatus:CopySnapshotResponse'</a>,
--   <a>copySnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCopySnapshotResponse :: Int -> CopySnapshotResponse

-- | <i>See:</i> <a>newDeleteParameterGroup</a> smart constructor.
data DeleteParameterGroup
DeleteParameterGroup' :: Text -> DeleteParameterGroup

-- | Create a value of <a>DeleteParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:DeleteParameterGroup'</a>,
--   <a>deleteParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to delete.
newDeleteParameterGroup :: Text -> DeleteParameterGroup

-- | <i>See:</i> <a>newDeleteParameterGroupResponse</a> smart constructor.
data DeleteParameterGroupResponse
DeleteParameterGroupResponse' :: Maybe ParameterGroup -> Int -> DeleteParameterGroupResponse

-- | Create a value of <a>DeleteParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_parameterGroup</a> - The parameter
--   group that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParameterGroupResponse :: Int -> DeleteParameterGroupResponse

-- | <i>See:</i> <a>newUpdateParameterGroup</a> smart constructor.
data UpdateParameterGroup
UpdateParameterGroup' :: Text -> [ParameterNameValue] -> UpdateParameterGroup

-- | Create a value of <a>UpdateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to update.
--   
--   <a>$sel:parameterNameValues:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterNameValues</a> - An array of
--   parameter names and values for the parameter update. You must supply
--   at least one parameter name and value; subsequent arguments are
--   optional. A maximum of 20 parameters may be updated per request.
newUpdateParameterGroup :: Text -> UpdateParameterGroup

-- | <i>See:</i> <a>newUpdateParameterGroupResponse</a> smart constructor.
data UpdateParameterGroupResponse
UpdateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> UpdateParameterGroupResponse

-- | Create a value of <a>UpdateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_parameterGroup</a> - The updated
--   parameter group
--   
--   <a>$sel:httpStatus:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParameterGroupResponse :: Int -> UpdateParameterGroupResponse

-- | <i>See:</i> <a>newDescribeSubnetGroups</a> smart constructor.
data DescribeSubnetGroups
DescribeSubnetGroups' :: Maybe Text -> Maybe Text -> Maybe Int -> DescribeSubnetGroups

-- | Create a value of <a>DescribeSubnetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_subnetGroupName</a> - The name of the subnet
--   group to return details for.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_maxResults</a> - The maximum number of records
--   to include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeSubnetGroups :: DescribeSubnetGroups

-- | <i>See:</i> <a>newDescribeSubnetGroupsResponse</a> smart constructor.
data DescribeSubnetGroupsResponse
DescribeSubnetGroupsResponse' :: Maybe [SubnetGroup] -> Maybe Text -> Int -> DescribeSubnetGroupsResponse

-- | Create a value of <a>DescribeSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroups:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_subnetGroups</a> - A list of subnet
--   groups. Each element in the list contains detailed information about
--   one group.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroupsResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSubnetGroupsResponse :: Int -> DescribeSubnetGroupsResponse

-- | <i>See:</i> <a>newDescribeServiceUpdates</a> smart constructor.
data DescribeServiceUpdates
DescribeServiceUpdates' :: Maybe [ServiceUpdateStatus] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeServiceUpdates

-- | Create a value of <a>DescribeServiceUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_status</a> - The status(es) of the service
--   updates to filter on
--   
--   <a>$sel:serviceUpdateName:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_serviceUpdateName</a> - The unique ID of the
--   service update to describe.
--   
--   <a>$sel:clusterNames:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_clusterNames</a> - The list of cluster names
--   to identify service updates to apply
--   
--   <a>$sel:nextToken:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_nextToken</a> - An optional argument to pass
--   in case the total number of records exceeds the value of MaxResults.
--   If nextToken is returned, there are more results available. The value
--   of nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdates_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
newDescribeServiceUpdates :: DescribeServiceUpdates

-- | <i>See:</i> <a>newDescribeServiceUpdatesResponse</a> smart
--   constructor.
data DescribeServiceUpdatesResponse
DescribeServiceUpdatesResponse' :: Maybe [ServiceUpdate] -> Maybe Text -> Int -> DescribeServiceUpdatesResponse

-- | Create a value of <a>DescribeServiceUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_serviceUpdates</a> - A list of
--   service updates
--   
--   <a>$sel:nextToken:DescribeServiceUpdates'</a>,
--   <a>describeServiceUpdatesResponse_nextToken</a> - An optional argument
--   to pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:httpStatus:DescribeServiceUpdatesResponse'</a>,
--   <a>describeServiceUpdatesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServiceUpdatesResponse :: Int -> DescribeServiceUpdatesResponse

-- | <i>See:</i> <a>newCreateParameterGroup</a> smart constructor.
data CreateParameterGroup
CreateParameterGroup' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateParameterGroup

-- | Create a value of <a>CreateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateParameterGroup'</a>,
--   <a>createParameterGroup_description</a> - An optional description of
--   the parameter group.
--   
--   <a>$sel:tags:CreateParameterGroup'</a>,
--   <a>createParameterGroup_tags</a> - A list of tags to be added to this
--   resource. A tag is a key-value pair. A tag key must be accompanied by
--   a tag value, although null is accepted.
--   
--   <a>$sel:parameterGroupName:CreateParameterGroup'</a>,
--   <a>createParameterGroup_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:family:CreateParameterGroup'</a>,
--   <a>createParameterGroup_family</a> - The name of the parameter group
--   family that the parameter group can be used with.
newCreateParameterGroup :: Text -> Text -> CreateParameterGroup

-- | <i>See:</i> <a>newCreateParameterGroupResponse</a> smart constructor.
data CreateParameterGroupResponse
CreateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> CreateParameterGroupResponse

-- | Create a value of <a>CreateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_parameterGroup</a> - The newly-created
--   parameter group.
--   
--   <a>$sel:httpStatus:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateParameterGroupResponse :: Int -> CreateParameterGroupResponse

-- | <i>See:</i> <a>newDescribeSnapshots</a> smart constructor.
data DescribeSnapshots
DescribeSnapshots' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> DescribeSnapshots

-- | Create a value of <a>DescribeSnapshots</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showDetail:DescribeSnapshots'</a>,
--   <a>describeSnapshots_showDetail</a> - A Boolean value which if true,
--   the shard configuration is included in the snapshot description.
--   
--   <a>$sel:nextToken:DescribeSnapshots'</a>,
--   <a>describeSnapshots_nextToken</a> - An optional argument to pass in
--   case the total number of records exceeds the value of MaxResults. If
--   nextToken is returned, there are more results available. The value of
--   nextToken is a unique pagination token for each page. Make the call
--   again using the returned token to retrieve the next page. Keep all
--   other arguments unchanged.
--   
--   <a>$sel:source:DescribeSnapshots'</a>, <a>describeSnapshots_source</a>
--   - If set to system, the output shows snapshots that were automatically
--   created by MemoryDB. If set to user the output shows snapshots that
--   were manually created. If omitted, the output shows both automatically
--   and manually created snapshots.
--   
--   <a>$sel:clusterName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_clusterName</a> - A user-supplied cluster
--   identifier. If this parameter is specified, only snapshots associated
--   with that specific cluster are described.
--   
--   <a>$sel:snapshotName:DescribeSnapshots'</a>,
--   <a>describeSnapshots_snapshotName</a> - A user-supplied name of the
--   snapshot. If this parameter is specified, only this named snapshot is
--   described.
--   
--   <a>$sel:maxResults:DescribeSnapshots'</a>,
--   <a>describeSnapshots_maxResults</a> - The maximum number of records to
--   include in the response. If more records exist than the specified
--   MaxResults value, a token is included in the response so that the
--   remaining results can be retrieved.
newDescribeSnapshots :: DescribeSnapshots

-- | <i>See:</i> <a>newDescribeSnapshotsResponse</a> smart constructor.
data DescribeSnapshotsResponse
DescribeSnapshotsResponse' :: Maybe Text -> Maybe [Snapshot] -> Int -> DescribeSnapshotsResponse

-- | Create a value of <a>DescribeSnapshotsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSnapshots'</a>,
--   <a>describeSnapshotsResponse_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:snapshots:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_snapshots</a> - A list of snapshots. Each
--   item in the list contains detailed information about one snapshot.
--   
--   <a>$sel:httpStatus:DescribeSnapshotsResponse'</a>,
--   <a>describeSnapshotsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSnapshotsResponse :: Int -> DescribeSnapshotsResponse

-- | <i>See:</i> <a>newCreateACL</a> smart constructor.
data CreateACL
CreateACL' :: Maybe (NonEmpty Text) -> Maybe [Tag] -> Text -> CreateACL

-- | Create a value of <a>CreateACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNames:CreateACL'</a>, <a>createACL_userNames</a> - The
--   list of users that belong to the Access Control List.
--   
--   <a>$sel:tags:CreateACL'</a>, <a>createACL_tags</a> - A list of tags to
--   be added to this resource. A tag is a key-value pair. A tag key must
--   be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:aCLName:CreateACL'</a>, <a>createACL_aCLName</a> - The name of
--   the Access Control List.
newCreateACL :: Text -> CreateACL

-- | <i>See:</i> <a>newCreateACLResponse</a> smart constructor.
data CreateACLResponse
CreateACLResponse' :: Maybe ACL -> Int -> CreateACLResponse

-- | Create a value of <a>CreateACLResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acl:CreateACLResponse'</a>, <a>createACLResponse_acl</a> - The
--   newly-created Access Control List.
--   
--   <a>$sel:httpStatus:CreateACLResponse'</a>,
--   <a>createACLResponse_httpStatus</a> - The response's http status code.
newCreateACLResponse :: Int -> CreateACLResponse

-- | <i>See:</i> <a>newUpdateSubnetGroup</a> smart constructor.
data UpdateSubnetGroup
UpdateSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> UpdateSubnetGroup

-- | Create a value of <a>UpdateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetIds</a> - The EC2 subnet IDs for the subnet
--   group.
--   
--   <a>$sel:description:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_description</a> - A description of the subnet
--   group
--   
--   <a>$sel:subnetGroupName:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group
newUpdateSubnetGroup :: Text -> UpdateSubnetGroup

-- | <i>See:</i> <a>newUpdateSubnetGroupResponse</a> smart constructor.
data UpdateSubnetGroupResponse
UpdateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> UpdateSubnetGroupResponse

-- | Create a value of <a>UpdateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_subnetGroup</a> - The updated subnet
--   group
--   
--   <a>$sel:httpStatus:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubnetGroupResponse :: Int -> UpdateSubnetGroupResponse

-- | <i>See:</i> <a>newDeleteSubnetGroup</a> smart constructor.
data DeleteSubnetGroup
DeleteSubnetGroup' :: Text -> DeleteSubnetGroup

-- | Create a value of <a>DeleteSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DeleteSubnetGroup'</a>,
--   <a>deleteSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group to delete
newDeleteSubnetGroup :: Text -> DeleteSubnetGroup

-- | <i>See:</i> <a>newDeleteSubnetGroupResponse</a> smart constructor.
data DeleteSubnetGroupResponse
DeleteSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> DeleteSubnetGroupResponse

-- | Create a value of <a>DeleteSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_subnetGroup</a> - The subnet group object
--   that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubnetGroupResponse :: Int -> DeleteSubnetGroupResponse

-- | <i>See:</i> <a>newCreateUser</a> smart constructor.
data CreateUser
CreateUser' :: Maybe [Tag] -> Text -> AuthenticationMode -> Text -> CreateUser

-- | Create a value of <a>CreateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateUser'</a>, <a>createUser_tags</a> - A list of tags
--   to be added to this resource. A tag is a key-value pair. A tag key
--   must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:userName:CreateUser'</a>, <a>createUser_userName</a> - The
--   name of the user. This value must be unique as it also serves as the
--   user identifier.
--   
--   <a>$sel:authenticationMode:CreateUser'</a>,
--   <a>createUser_authenticationMode</a> - Denotes the user's
--   authentication properties, such as whether it requires a password to
--   authenticate.
--   
--   <a>$sel:accessString:CreateUser'</a>, <a>createUser_accessString</a> -
--   Access permissions string used for this user.
newCreateUser :: Text -> AuthenticationMode -> Text -> CreateUser

-- | <i>See:</i> <a>newCreateUserResponse</a> smart constructor.
data CreateUserResponse
CreateUserResponse' :: Maybe User -> Int -> CreateUserResponse

-- | Create a value of <a>CreateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:CreateUserResponse'</a>, <a>createUserResponse_user</a> -
--   The newly-created user.
--   
--   <a>$sel:httpStatus:CreateUserResponse'</a>,
--   <a>createUserResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserResponse :: Int -> CreateUserResponse

-- | <i>See:</i> <a>newDeleteSnapshot</a> smart constructor.
data DeleteSnapshot
DeleteSnapshot' :: Text -> DeleteSnapshot

-- | Create a value of <a>DeleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotName:DeleteSnapshot'</a>,
--   <a>deleteSnapshot_snapshotName</a> - The name of the snapshot to
--   delete
newDeleteSnapshot :: Text -> DeleteSnapshot

-- | <i>See:</i> <a>newDeleteSnapshotResponse</a> smart constructor.
data DeleteSnapshotResponse
DeleteSnapshotResponse' :: Maybe Snapshot -> Int -> DeleteSnapshotResponse

-- | Create a value of <a>DeleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_snapshot</a> - The snapshot object that has
--   been deleted.
--   
--   <a>$sel:httpStatus:DeleteSnapshotResponse'</a>,
--   <a>deleteSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSnapshotResponse :: Int -> DeleteSnapshotResponse

-- | <i>See:</i> <a>newFailoverShard</a> smart constructor.
data FailoverShard
FailoverShard' :: Text -> Text -> FailoverShard

-- | Create a value of <a>FailoverShard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:FailoverShard'</a>,
--   <a>failoverShard_clusterName</a> - The cluster being failed over
--   
--   <a>$sel:shardName:FailoverShard'</a>, <a>failoverShard_shardName</a> -
--   The name of the shard
newFailoverShard :: Text -> Text -> FailoverShard

-- | <i>See:</i> <a>newFailoverShardResponse</a> smart constructor.
data FailoverShardResponse
FailoverShardResponse' :: Maybe Cluster -> Int -> FailoverShardResponse

-- | Create a value of <a>FailoverShardResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:FailoverShardResponse'</a>,
--   <a>failoverShardResponse_cluster</a> - The cluster being failed over
--   
--   <a>$sel:httpStatus:FailoverShardResponse'</a>,
--   <a>failoverShardResponse_httpStatus</a> - The response's http status
--   code.
newFailoverShardResponse :: Int -> FailoverShardResponse

-- | <i>See:</i> <a>newUpdateUser</a> smart constructor.
data UpdateUser
UpdateUser' :: Maybe AuthenticationMode -> Maybe Text -> Text -> UpdateUser

-- | Create a value of <a>UpdateUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authenticationMode:UpdateUser'</a>,
--   <a>updateUser_authenticationMode</a> - Denotes the user's
--   authentication properties, such as whether it requires a password to
--   authenticate.
--   
--   <a>$sel:accessString:UpdateUser'</a>, <a>updateUser_accessString</a> -
--   Access permissions string used for this user.
--   
--   <a>$sel:userName:UpdateUser'</a>, <a>updateUser_userName</a> - The
--   name of the user
newUpdateUser :: Text -> UpdateUser

-- | <i>See:</i> <a>newUpdateUserResponse</a> smart constructor.
data UpdateUserResponse
UpdateUserResponse' :: Maybe User -> Int -> UpdateUserResponse

-- | Create a value of <a>UpdateUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:UpdateUserResponse'</a>, <a>updateUserResponse_user</a> -
--   The updated user
--   
--   <a>$sel:httpStatus:UpdateUserResponse'</a>,
--   <a>updateUserResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUserResponse :: Int -> UpdateUserResponse

-- | <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Text -> DeleteUser

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userName:DeleteUser'</a>, <a>deleteUser_userName</a> - The
--   name of the user to delete
newDeleteUser :: Text -> DeleteUser

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: Maybe User -> Int -> DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:DeleteUserResponse'</a>, <a>deleteUserResponse_user</a> -
--   The user object that has been deleted.
--   
--   <a>$sel:httpStatus:DeleteUserResponse'</a>,
--   <a>deleteUserResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUserResponse :: Int -> DeleteUserResponse

-- | <i>See:</i> <a>newListAllowedNodeTypeUpdates</a> smart constructor.
data ListAllowedNodeTypeUpdates
ListAllowedNodeTypeUpdates' :: Text -> ListAllowedNodeTypeUpdates

-- | Create a value of <a>ListAllowedNodeTypeUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:ListAllowedNodeTypeUpdates'</a>,
--   <a>listAllowedNodeTypeUpdates_clusterName</a> - The name of the
--   cluster you want to scale. MemoryDB uses the cluster name to identify
--   the current node type being used by this cluster, and from that to
--   create a list of node types you can scale up to.
newListAllowedNodeTypeUpdates :: Text -> ListAllowedNodeTypeUpdates

-- | <i>See:</i> <a>newListAllowedNodeTypeUpdatesResponse</a> smart
--   constructor.
data ListAllowedNodeTypeUpdatesResponse
ListAllowedNodeTypeUpdatesResponse' :: Maybe [Text] -> Maybe [Text] -> Int -> ListAllowedNodeTypeUpdatesResponse

-- | Create a value of <a>ListAllowedNodeTypeUpdatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scaleUpNodeTypes:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_scaleUpNodeTypes</a> - A list
--   node types which you can use to scale up your cluster.
--   
--   <a>$sel:scaleDownNodeTypes:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_scaleDownNodeTypes</a> - A list
--   node types which you can use to scale down your cluster.
--   
--   <a>$sel:httpStatus:ListAllowedNodeTypeUpdatesResponse'</a>,
--   <a>listAllowedNodeTypeUpdatesResponse_httpStatus</a> - The response's
--   http status code.
newListAllowedNodeTypeUpdatesResponse :: Int -> ListAllowedNodeTypeUpdatesResponse

-- | <i>See:</i> <a>newDescribeParameterGroups</a> smart constructor.
data DescribeParameterGroups
DescribeParameterGroups' :: Maybe Text -> Maybe Int -> Maybe Text -> DescribeParameterGroups

-- | Create a value of <a>DescribeParameterGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_nextToken</a> - An optional argument to
--   pass in case the total number of records exceeds the value of
--   MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:maxResults:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_maxResults</a> - The maximum number of
--   records to include in the response. If more records exist than the
--   specified MaxResults value, a token is included in the response so
--   that the remaining results can be retrieved.
--   
--   <a>$sel:parameterGroupName:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_parameterGroupName</a> - The name of a
--   specific parameter group to return details for.
newDescribeParameterGroups :: DescribeParameterGroups

-- | <i>See:</i> <a>newDescribeParameterGroupsResponse</a> smart
--   constructor.
data DescribeParameterGroupsResponse
DescribeParameterGroupsResponse' :: Maybe Text -> Maybe [ParameterGroup] -> Int -> DescribeParameterGroupsResponse

-- | Create a value of <a>DescribeParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroupsResponse_nextToken</a> - An optional
--   argument to pass in case the total number of records exceeds the value
--   of MaxResults. If nextToken is returned, there are more results
--   available. The value of nextToken is a unique pagination token for
--   each page. Make the call again using the returned token to retrieve
--   the next page. Keep all other arguments unchanged.
--   
--   <a>$sel:parameterGroups:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_parameterGroups</a> - A list of
--   parameter groups. Each element in the list contains detailed
--   information about one parameter group.
--   
--   <a>$sel:httpStatus:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeParameterGroupsResponse :: Int -> DescribeParameterGroupsResponse

-- | <i>See:</i> <a>newCreateSnapshot</a> smart constructor.
data CreateSnapshot
CreateSnapshot' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> CreateSnapshot

-- | Create a value of <a>CreateSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:CreateSnapshot'</a>, <a>createSnapshot_kmsKeyId</a> -
--   The ID of the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:tags:CreateSnapshot'</a>, <a>createSnapshot_tags</a> - A list
--   of tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
--   
--   <a>$sel:clusterName:CreateSnapshot'</a>,
--   <a>createSnapshot_clusterName</a> - The snapshot is created from this
--   cluster.
--   
--   <a>$sel:snapshotName:CreateSnapshot'</a>,
--   <a>createSnapshot_snapshotName</a> - A name for the snapshot being
--   created.
newCreateSnapshot :: Text -> Text -> CreateSnapshot

-- | <i>See:</i> <a>newCreateSnapshotResponse</a> smart constructor.
data CreateSnapshotResponse
CreateSnapshotResponse' :: Maybe Snapshot -> Int -> CreateSnapshotResponse

-- | Create a value of <a>CreateSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshot:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_snapshot</a> - The newly-created snapshot.
--   
--   <a>$sel:httpStatus:CreateSnapshotResponse'</a>,
--   <a>createSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newCreateSnapshotResponse :: Int -> CreateSnapshotResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which the tags are
--   to be added
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags to be added to this resource. A tag is a key-value pair. A tag
--   key must be accompanied by a tag value, although null is accepted.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Maybe [Tag] -> Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:TagResourceResponse'</a>,
--   <a>tagResourceResponse_tagList</a> - A list of tags as key-value
--   pairs.
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Text -> ListTags

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTags'</a>, <a>listTags_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the resource for which you want the list
--   of tags
newListTags :: Text -> ListTags

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe [Tag] -> Int -> ListTagsResponse

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:ListTagsResponse'</a>, <a>listTagsResponse_tagList</a>
--   - A list of tags as key-value pairs.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | <i>See:</i> <a>newResetParameterGroup</a> smart constructor.
data ResetParameterGroup
ResetParameterGroup' :: Maybe [Text] -> Maybe Bool -> Text -> ResetParameterGroup

-- | Create a value of <a>ResetParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterNames:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_parameterNames</a> - An array of parameter
--   names to reset to their default values. If AllParameters is true, do
--   not use ParameterNames. If AllParameters is false, you must specify
--   the name of at least one parameter to reset.
--   
--   <a>$sel:allParameters:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_allParameters</a> - If true, all parameters in
--   the parameter group are reset to their default values. If false, only
--   the parameters listed by ParameterNames are reset to their default
--   values.
--   
--   <a>$sel:parameterGroupName:ResetParameterGroup'</a>,
--   <a>resetParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to reset.
newResetParameterGroup :: Text -> ResetParameterGroup

-- | <i>See:</i> <a>newResetParameterGroupResponse</a> smart constructor.
data ResetParameterGroupResponse
ResetParameterGroupResponse' :: Maybe ParameterGroup -> Int -> ResetParameterGroupResponse

-- | Create a value of <a>ResetParameterGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:ResetParameterGroupResponse'</a>,
--   <a>resetParameterGroupResponse_parameterGroup</a> - The parameter
--   group being reset.
--   
--   <a>$sel:httpStatus:ResetParameterGroupResponse'</a>,
--   <a>resetParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newResetParameterGroupResponse :: Int -> ResetParameterGroupResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which the tags are to be removed
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys of the tags that are to be removed
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Maybe [Tag] -> Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagList:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_tagList</a> - The list of tags removed
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse
newtype AZStatus
AZStatus' :: Text -> AZStatus
[fromAZStatus] :: AZStatus -> Text
pattern AZStatus_Multiaz :: AZStatus
pattern AZStatus_Singleaz :: AZStatus
newtype AuthenticationType
AuthenticationType' :: Text -> AuthenticationType
[fromAuthenticationType] :: AuthenticationType -> Text
pattern AuthenticationType_No_password :: AuthenticationType
pattern AuthenticationType_Password :: AuthenticationType
newtype InputAuthenticationType
InputAuthenticationType' :: Text -> InputAuthenticationType
[fromInputAuthenticationType] :: InputAuthenticationType -> Text
pattern InputAuthenticationType_Password :: InputAuthenticationType
newtype ServiceUpdateStatus
ServiceUpdateStatus' :: Text -> ServiceUpdateStatus
[fromServiceUpdateStatus] :: ServiceUpdateStatus -> Text
pattern ServiceUpdateStatus_Available :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Complete :: ServiceUpdateStatus
pattern ServiceUpdateStatus_In_progress :: ServiceUpdateStatus
pattern ServiceUpdateStatus_Scheduled :: ServiceUpdateStatus
newtype ServiceUpdateType
ServiceUpdateType' :: Text -> ServiceUpdateType
[fromServiceUpdateType] :: ServiceUpdateType -> Text
pattern ServiceUpdateType_Security_update :: ServiceUpdateType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_Acl :: SourceType
pattern SourceType_Cluster :: SourceType
pattern SourceType_Node :: SourceType
pattern SourceType_Parameter_group :: SourceType
pattern SourceType_Subnet_group :: SourceType
pattern SourceType_User :: SourceType

-- | An Access Control List. You can authenticate users with Access Contol
--   Lists. ACLs enable you to control cluster access by grouping users.
--   These Access control lists are designed as a way to organize access to
--   clusters.
--   
--   <i>See:</i> <a>newACL</a> smart constructor.
data ACL
ACL' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe ACLPendingChanges -> Maybe Text -> Maybe [Text] -> ACL

-- | Create a value of <a>ACL</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ACL'</a>, <a>acl_status</a> - Indicates ACL status. Can
--   be "creating", "active", "modifying", "deleting".
--   
--   <a>$sel:userNames:ACL'</a>, <a>acl_userNames</a> - The list of user
--   names that belong to the ACL.
--   
--   <a>$sel:arn:ACL'</a>, <a>acl_arn</a> - The Amazon Resource Name (ARN)
--   of the ACL
--   
--   <a>$sel:name:ACL'</a>, <a>acl_name</a> - The name of the Access
--   Control List
--   
--   <a>$sel:pendingChanges:ACL'</a>, <a>acl_pendingChanges</a> - A list of
--   updates being applied to the ACL.
--   
--   <a>$sel:minimumEngineVersion:ACL'</a>, <a>acl_minimumEngineVersion</a>
--   - The minimum engine version supported for the ACL
--   
--   <a>$sel:clusters:ACL'</a>, <a>acl_clusters</a> - A list of clusters
--   associated with the ACL.
newACL :: ACL

-- | Returns the updates being applied to the ACL.
--   
--   <i>See:</i> <a>newACLPendingChanges</a> smart constructor.
data ACLPendingChanges
ACLPendingChanges' :: Maybe [Text] -> Maybe [Text] -> ACLPendingChanges

-- | Create a value of <a>ACLPendingChanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userNamesToAdd:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToAdd</a> - A list of users being added
--   to the ACL
--   
--   <a>$sel:userNamesToRemove:ACLPendingChanges'</a>,
--   <a>aCLPendingChanges_userNamesToRemove</a> - A list of user names
--   being removed from the ACL
newACLPendingChanges :: ACLPendingChanges

-- | The status of the ACL update
--   
--   <i>See:</i> <a>newACLsUpdateStatus</a> smart constructor.
data ACLsUpdateStatus
ACLsUpdateStatus' :: Maybe Text -> ACLsUpdateStatus

-- | Create a value of <a>ACLsUpdateStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:aCLToApply:ACLsUpdateStatus'</a>,
--   <a>aCLsUpdateStatus_aCLToApply</a> - A list of ACLs pending to be
--   applied.
newACLsUpdateStatus :: ACLsUpdateStatus

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthentication</a> smart constructor.
data Authentication
Authentication' :: Maybe Int -> Maybe AuthenticationType -> Authentication

-- | Create a value of <a>Authentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordCount:Authentication'</a>,
--   <a>authentication_passwordCount</a> - The number of passwords
--   belonging to the user. The maximum is two.
--   
--   <a>$sel:type':Authentication'</a>, <a>authentication_type</a> -
--   Indicates whether the user requires a password to authenticate.
newAuthentication :: Authentication

-- | Denotes the user's authentication properties, such as whether it
--   requires a password to authenticate. Used in output responses.
--   
--   <i>See:</i> <a>newAuthenticationMode</a> smart constructor.
data AuthenticationMode
AuthenticationMode' :: Maybe (NonEmpty Text) -> Maybe InputAuthenticationType -> AuthenticationMode

-- | Create a value of <a>AuthenticationMode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwords:AuthenticationMode'</a>,
--   <a>authenticationMode_passwords</a> - The password(s) used for
--   authentication
--   
--   <a>$sel:type':AuthenticationMode'</a>, <a>authenticationMode_type</a>
--   - Indicates whether the user requires a password to authenticate. All
--   newly-created users require a password.
newAuthenticationMode :: AuthenticationMode

-- | Indicates if the cluster has a Multi-AZ configuration (multiaz) or not
--   (singleaz).
--   
--   <i>See:</i> <a>newAvailabilityZone</a> smart constructor.
data AvailabilityZone
AvailabilityZone' :: Maybe Text -> AvailabilityZone

-- | Create a value of <a>AvailabilityZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AvailabilityZone'</a>, <a>availabilityZone_name</a> - The
--   name of the Availability Zone.
newAvailabilityZone :: AvailabilityZone

-- | Contains all of the attributes of a specific cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [SecurityGroupMembership] -> Maybe AZStatus -> Maybe Text -> Maybe Text -> Maybe ClusterPendingUpdates -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Shard] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe Text -> Cluster

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Cluster'</a>, <a>cluster_engineVersion</a> - The
--   Redis engine version used by the cluster
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The status of the
--   cluster. For example, Available, Updating, Creating.
--   
--   <a>$sel:autoMinorVersionUpgrade:Cluster'</a>,
--   <a>cluster_autoMinorVersionUpgrade</a> - When set to true, the cluster
--   will automatically receive minor engine version upgrades after launch.
--   
--   <a>$sel:snsTopicArn:Cluster'</a>, <a>cluster_snsTopicArn</a> - The
--   Amazon Resource Name (ARN) of the SNS notification topic
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups used by the cluster
--   
--   <a>$sel:availabilityMode:Cluster'</a>, <a>cluster_availabilityMode</a>
--   - Indicates if the cluster has a Multi-AZ configuration (multiaz) or
--   not (singleaz).
--   
--   <a>$sel:parameterGroupStatus:Cluster'</a>,
--   <a>cluster_parameterGroupStatus</a> - The status of the parameter
--   group used by the cluster, for example 'active' or 'applying'.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:pendingUpdates:Cluster'</a>, <a>cluster_pendingUpdates</a> - A
--   group of settings that are currently being applied.
--   
--   <a>$sel:numberOfShards:Cluster'</a>, <a>cluster_numberOfShards</a> -
--   The number of shards in the cluster
--   
--   <a>$sel:snapshotWindow:Cluster'</a>, <a>cluster_snapshotWindow</a> -
--   The daily time range (in UTC) during which MemoryDB begins taking a
--   daily snapshot of your shard. Example: 05:00-09:00 If you do not
--   specify this parameter, MemoryDB automatically chooses an appropriate
--   time range.
--   
--   <a>$sel:subnetGroupName:Cluster'</a>, <a>cluster_subnetGroupName</a> -
--   The name of the subnet group used by the cluster
--   
--   <a>$sel:tLSEnabled:Cluster'</a>, <a>cluster_tLSEnabled</a> - A flag to
--   indicate if In-transit encryption is enabled
--   
--   <a>$sel:maintenanceWindow:Cluster'</a>,
--   <a>cluster_maintenanceWindow</a> - Specifies the weekly time range
--   during which maintenance on the cluster is performed. It is specified
--   as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The
--   minimum maintenance window is a 60 minute period.
--   
--   <a>$sel:kmsKeyId:Cluster'</a>, <a>cluster_kmsKeyId</a> - The ID of the
--   KMS key used to encrypt the cluster
--   
--   <a>$sel:shards:Cluster'</a>, <a>cluster_shards</a> - A list of shards
--   that are members of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The user-supplied
--   name of the cluster. This identifier is a unique key that identifies a
--   cluster.
--   
--   <a>$sel:enginePatchVersion:Cluster'</a>,
--   <a>cluster_enginePatchVersion</a> - The Redis engine patch version
--   used by the cluster
--   
--   <a>$sel:snapshotRetentionLimit:Cluster'</a>,
--   <a>cluster_snapshotRetentionLimit</a> - The number of days for which
--   MemoryDB retains automatic snapshots before deleting them. For
--   example, if you set SnapshotRetentionLimit to 5, a snapshot that was
--   taken today is retained for 5 days before being deleted.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The cluster's
--   node type
--   
--   <a>$sel:snsTopicStatus:Cluster'</a>, <a>cluster_snsTopicStatus</a> -
--   The SNS topic must be in Active status to receive notifications
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - A
--   description of the cluster
--   
--   <a>$sel:aCLName:Cluster'</a>, <a>cluster_aCLName</a> - The name of the
--   Access Control List associated with this cluster.
--   
--   <a>$sel:clusterEndpoint:Cluster'</a>, <a>cluster_clusterEndpoint</a> -
--   The cluster's configuration endpoint
--   
--   <a>$sel:parameterGroupName:Cluster'</a>,
--   <a>cluster_parameterGroupName</a> - The name of the parameter group
--   used by the cluster
newCluster :: Cluster

-- | A list of cluster configuration options.
--   
--   <i>See:</i> <a>newClusterConfiguration</a> smart constructor.
data ClusterConfiguration
ClusterConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [ShardDetail] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ClusterConfiguration

-- | Create a value of <a>ClusterConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_engineVersion</a> - The Redis engine version
--   used by the cluster
--   
--   <a>$sel:vpcId:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_vpcId</a> - The ID of the VPC the cluster
--   belongs to
--   
--   <a>$sel:snapshotWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotWindow</a> - The snapshot window set
--   by the cluster
--   
--   <a>$sel:subnetGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_subnetGroupName</a> - The name of the subnet
--   group used by the cluster
--   
--   <a>$sel:numShards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_numShards</a> - The number of shards in the
--   cluster
--   
--   <a>$sel:maintenanceWindow:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_maintenanceWindow</a> - The specified
--   maintenance window for the cluster
--   
--   <a>$sel:topicArn:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_topicArn</a> - The Amazon Resource Name (ARN)
--   of the SNS notification topic for the cluster
--   
--   <a>$sel:shards:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_shards</a> - The list of shards in the cluster
--   
--   <a>$sel:name:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_name</a> - The name of the cluster
--   
--   <a>$sel:snapshotRetentionLimit:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_snapshotRetentionLimit</a> - The snapshot
--   retention limit set by the cluster
--   
--   <a>$sel:nodeType:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_nodeType</a> - The node type used for the
--   cluster
--   
--   <a>$sel:description:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_description</a> - The description of the
--   cluster configuration
--   
--   <a>$sel:port:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_port</a> - The port used by the cluster
--   
--   <a>$sel:parameterGroupName:ClusterConfiguration'</a>,
--   <a>clusterConfiguration_parameterGroupName</a> - The name of parameter
--   group used by the cluster
newClusterConfiguration :: ClusterConfiguration

-- | A list of updates being applied to the cluster
--   
--   <i>See:</i> <a>newClusterPendingUpdates</a> smart constructor.
data ClusterPendingUpdates
ClusterPendingUpdates' :: Maybe [PendingModifiedServiceUpdate] -> Maybe ReshardingStatus -> Maybe ACLsUpdateStatus -> ClusterPendingUpdates

-- | Create a value of <a>ClusterPendingUpdates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdates:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_serviceUpdates</a> - A list of service
--   updates being applied to the cluster
--   
--   <a>$sel:resharding:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_resharding</a> - The status of an online
--   resharding operation.
--   
--   <a>$sel:aCLs:ClusterPendingUpdates'</a>,
--   <a>clusterPendingUpdates_aCLs</a> - A list of ACLs associated with the
--   cluster that are being updated
newClusterPendingUpdates :: ClusterPendingUpdates

-- | Represents the information required for client programs to connect to
--   the cluster and its nodes.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Endpoint

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the node.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that the engine is listening on.
newEndpoint :: Endpoint

-- | Provides details of the Redis engine version
--   
--   <i>See:</i> <a>newEngineVersionInfo</a> smart constructor.
data EngineVersionInfo
EngineVersionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> EngineVersionInfo

-- | Create a value of <a>EngineVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_engineVersion</a> - The engine version
--   
--   <a>$sel:enginePatchVersion:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_enginePatchVersion</a> - The patched engine
--   version
--   
--   <a>$sel:parameterGroupFamily:EngineVersionInfo'</a>,
--   <a>engineVersionInfo_parameterGroupFamily</a> - Specifies the name of
--   the parameter group family to which the engine default parameters
--   apply.
newEngineVersionInfo :: EngineVersionInfo

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a cluster or adding or
--   removing a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe SourceType -> Maybe POSIX -> Maybe Text -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The name for
--   the source of the event. For example, if the event occurred at the
--   cluster level, the identifier would be the name of the cluster.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a security group,
--   etc.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - The text of the
--   event.
newEvent :: Event

-- | Used to streamline results of a search based on the property being
--   filtered.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Text -> NonEmpty Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The property being
--   filtered. For example, UserName.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The property values
--   to filter on. For example, "user-123".
newFilter :: Text -> NonEmpty Text -> Filter

-- | Represents an individual node within a cluster. Each node runs its own
--   instance of the cluster's protocol-compliant caching software.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Endpoint -> Maybe POSIX -> Node

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the
--   service update on the node
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node resides
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The node identifier. A node
--   name is a numeric identifier (0001, 0002, etc.). The combination of
--   cluster name, shard name and node name uniquely identifies every node
--   used in a customer's Amazon account.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The hostname for
--   connecting to this node.
--   
--   <a>$sel:createTime:Node'</a>, <a>node_createTime</a> - The date and
--   time when the node was created.
newNode :: Node

-- | Describes an individual setting that controls some aspect of MemoryDB
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Parameter

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Parameter'</a>, <a>parameter_value</a> - The value of
--   the parameter
--   
--   <a>$sel:name:Parameter'</a>, <a>parameter_name</a> - The name of the
--   parameter
--   
--   <a>$sel:minimumEngineVersion:Parameter'</a>,
--   <a>parameter_minimumEngineVersion</a> - The earliest engine version to
--   which the parameter can apply.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The
--   parameter's data type
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   The valid range of values for the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
newParameter :: Parameter

-- | Represents the output of a CreateParameterGroup operation. A parameter
--   group represents a combination of specific values for the parameters
--   that are passed to the engine software during startup.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ParameterGroup

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ParameterGroup'</a>, <a>parameterGroup_arn</a> - The
--   Amazon Resource Name (ARN) of the parameter group
--   
--   <a>$sel:family:ParameterGroup'</a>, <a>parameterGroup_family</a> - The
--   name of the parameter group family that this parameter group is
--   compatible with.
--   
--   <a>$sel:name:ParameterGroup'</a>, <a>parameterGroup_name</a> - The
--   name of the parameter group
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group
newParameterGroup :: ParameterGroup

-- | Describes a name-value pair that is used to update the value of a
--   parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter
newParameterNameValue :: ParameterNameValue

-- | Update action that has yet to be processed for the corresponding
--   apply/stop request
--   
--   <i>See:</i> <a>newPendingModifiedServiceUpdate</a> smart constructor.
data PendingModifiedServiceUpdate
PendingModifiedServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe Text -> PendingModifiedServiceUpdate

-- | Create a value of <a>PendingModifiedServiceUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_status</a> - The status of the service
--   update
--   
--   <a>$sel:serviceUpdateName:PendingModifiedServiceUpdate'</a>,
--   <a>pendingModifiedServiceUpdate_serviceUpdateName</a> - The unique ID
--   of the service update
newPendingModifiedServiceUpdate :: PendingModifiedServiceUpdate

-- | A request to configure the number of replicas in a shard
--   
--   <i>See:</i> <a>newReplicaConfigurationRequest</a> smart constructor.
data ReplicaConfigurationRequest
ReplicaConfigurationRequest' :: Maybe Int -> ReplicaConfigurationRequest

-- | Create a value of <a>ReplicaConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicaCount:ReplicaConfigurationRequest'</a>,
--   <a>replicaConfigurationRequest_replicaCount</a> - The number of
--   replicas to scale up or down to
newReplicaConfigurationRequest :: ReplicaConfigurationRequest

-- | The status of the online resharding
--   
--   <i>See:</i> <a>newReshardingStatus</a> smart constructor.
data ReshardingStatus
ReshardingStatus' :: Maybe SlotMigration -> ReshardingStatus

-- | Create a value of <a>ReshardingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotMigration:ReshardingStatus'</a>,
--   <a>reshardingStatus_slotMigration</a> - The status of the online
--   resharding slot migration
newReshardingStatus :: ReshardingStatus

-- | Represents a single security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of the security
--   group membership. The status changes whenever a security group is
--   modified, or when the security groups assigned to a cluster are
--   modified.
--   
--   <a>$sel:securityGroupId:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupId</a> - The identifier of the
--   security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | An update that you can apply to your MemoryDB clusters.
--   
--   <i>See:</i> <a>newServiceUpdate</a> smart constructor.
data ServiceUpdate
ServiceUpdate' :: Maybe ServiceUpdateStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ServiceUpdateType -> Maybe Text -> ServiceUpdate

-- | Create a value of <a>ServiceUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ServiceUpdate'</a>, <a>serviceUpdate_status</a> - The
--   status of the service update
--   
--   <a>$sel:autoUpdateStartDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_autoUpdateStartDate</a> - The date at which the
--   service update will be automatically applied
--   
--   <a>$sel:serviceUpdateName:ServiceUpdate'</a>,
--   <a>serviceUpdate_serviceUpdateName</a> - The unique ID of the service
--   update
--   
--   <a>$sel:nodesUpdated:ServiceUpdate'</a>,
--   <a>serviceUpdate_nodesUpdated</a> - A list of nodes updated by the
--   service update
--   
--   <a>$sel:releaseDate:ServiceUpdate'</a>,
--   <a>serviceUpdate_releaseDate</a> - The date when the service update is
--   initially available
--   
--   <a>$sel:clusterName:ServiceUpdate'</a>,
--   <a>serviceUpdate_clusterName</a> - The name of the cluster to which
--   the service update applies
--   
--   <a>$sel:type':ServiceUpdate'</a>, <a>serviceUpdate_type</a> - Reflects
--   the nature of the service update
--   
--   <a>$sel:description:ServiceUpdate'</a>,
--   <a>serviceUpdate_description</a> - Provides details of the service
--   update
newServiceUpdate :: ServiceUpdate

-- | A request to apply a service update
--   
--   <i>See:</i> <a>newServiceUpdateRequest</a> smart constructor.
data ServiceUpdateRequest
ServiceUpdateRequest' :: Maybe Text -> ServiceUpdateRequest

-- | Create a value of <a>ServiceUpdateRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceUpdateNameToApply:ServiceUpdateRequest'</a>,
--   <a>serviceUpdateRequest_serviceUpdateNameToApply</a> - The unique ID
--   of the service update
newServiceUpdateRequest :: ServiceUpdateRequest

-- | Represents a collection of nodes in a cluster. One node in the node
--   group is the read/write primary node. All the other nodes are
--   read-only Replica nodes.
--   
--   <i>See:</i> <a>newShard</a> smart constructor.
data Shard
Shard' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Node] -> Shard

-- | Create a value of <a>Shard</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Shard'</a>, <a>shard_status</a> - The current state of
--   this replication group - creating, available, modifying, deleting.
--   
--   <a>$sel:slots:Shard'</a>, <a>shard_slots</a> - The keyspace for this
--   shard.
--   
--   <a>$sel:numberOfNodes:Shard'</a>, <a>shard_numberOfNodes</a> - The
--   number of nodes in the shard
--   
--   <a>$sel:name:Shard'</a>, <a>shard_name</a> - The name of the shard
--   
--   <a>$sel:nodes:Shard'</a>, <a>shard_nodes</a> - A list containing
--   information about individual nodes within the shard
newShard :: Shard

-- | Shard configuration options. Each shard configuration has the
--   following: Slots and ReplicaCount.
--   
--   <i>See:</i> <a>newShardConfiguration</a> smart constructor.
data ShardConfiguration
ShardConfiguration' :: Maybe Text -> Maybe Int -> ShardConfiguration

-- | Create a value of <a>ShardConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:ShardConfiguration'</a>, <a>shardConfiguration_slots</a>
--   - A string that specifies the keyspace for a particular node group.
--   Keyspaces range from 0 to 16,383. The string is in the format
--   startkey-endkey.
--   
--   <a>$sel:replicaCount:ShardConfiguration'</a>,
--   <a>shardConfiguration_replicaCount</a> - The number of read replica
--   nodes in this shard.
newShardConfiguration :: ShardConfiguration

-- | A request to configure the sharding properties of a cluster
--   
--   <i>See:</i> <a>newShardConfigurationRequest</a> smart constructor.
data ShardConfigurationRequest
ShardConfigurationRequest' :: Maybe Int -> ShardConfigurationRequest

-- | Create a value of <a>ShardConfigurationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shardCount:ShardConfigurationRequest'</a>,
--   <a>shardConfigurationRequest_shardCount</a> - The number of shards in
--   the cluster
newShardConfigurationRequest :: ShardConfigurationRequest

-- | Provides details of a shard in a snapshot
--   
--   <i>See:</i> <a>newShardDetail</a> smart constructor.
data ShardDetail
ShardDetail' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ShardConfiguration -> ShardDetail

-- | Create a value of <a>ShardDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ShardDetail'</a>, <a>shardDetail_size</a> - The size of
--   the shard's snapshot
--   
--   <a>$sel:snapshotCreationTime:ShardDetail'</a>,
--   <a>shardDetail_snapshotCreationTime</a> - The date and time that the
--   shard's snapshot was created
--   
--   <a>$sel:name:ShardDetail'</a>, <a>shardDetail_name</a> - The name of
--   the shard
--   
--   <a>$sel:configuration:ShardDetail'</a>,
--   <a>shardDetail_configuration</a> - The configuration details of the
--   shard
newShardDetail :: ShardDetail

-- | Represents the progress of an online resharding operation.
--   
--   <i>See:</i> <a>newSlotMigration</a> smart constructor.
data SlotMigration
SlotMigration' :: Maybe Double -> SlotMigration

-- | Create a value of <a>SlotMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressPercentage:SlotMigration'</a>,
--   <a>slotMigration_progressPercentage</a> - The percentage of the slot
--   migration that is complete.
newSlotMigration :: SlotMigration

-- | Represents a copy of an entire cluster as of the time when the
--   snapshot was taken.
--   
--   <i>See:</i> <a>newSnapshot</a> smart constructor.
data Snapshot
Snapshot' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClusterConfiguration -> Maybe Text -> Snapshot

-- | Create a value of <a>Snapshot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Snapshot'</a>, <a>snapshot_status</a> - The status of
--   the snapshot. Valid values: creating | available | restoring | copying
--   | deleting.
--   
--   <a>$sel:arn:Snapshot'</a>, <a>snapshot_arn</a> - The ARN (Amazon
--   Resource Name) of the snapshot.
--   
--   <a>$sel:kmsKeyId:Snapshot'</a>, <a>snapshot_kmsKeyId</a> - The ID of
--   the KMS key used to encrypt the snapshot.
--   
--   <a>$sel:name:Snapshot'</a>, <a>snapshot_name</a> - The name of the
--   snapshot
--   
--   <a>$sel:clusterConfiguration:Snapshot'</a>,
--   <a>snapshot_clusterConfiguration</a> - The configuration of the
--   cluster from which the snapshot was taken
--   
--   <a>$sel:source:Snapshot'</a>, <a>snapshot_source</a> - Indicates
--   whether the snapshot is from an automatic backup (automated) or was
--   created manually (manual).
newSnapshot :: Snapshot

-- | Represents the subnet associated with a cluster. This parameter refers
--   to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
--   used with MemoryDB.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe AvailabilityZone -> Subnet

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Subnet'</a>, <a>subnet_identifier</a> - The unique
--   identifier for the subnet.
--   
--   <a>$sel:availabilityZone:Subnet'</a>, <a>subnet_availabilityZone</a> -
--   The Availability Zone where the subnet resides
newSubnet :: Subnet

-- | Represents the output of one of the following operations:
--   
--   <ul>
--   <li>CreateSubnetGroup</li>
--   <li>UpdateSubnetGroup</li>
--   </ul>
--   
--   A subnet group is a collection of subnets (typically private) that you
--   can designate for your clusters running in an Amazon Virtual Private
--   Cloud (VPC) environment.
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe [Subnet] -> Maybe Text -> Maybe Text -> SubnetGroup

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SubnetGroup'</a>, <a>subnetGroup_arn</a> - The ARN (Amazon
--   Resource Name) of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
--   
--   <a>$sel:name:SubnetGroup'</a>, <a>subnetGroup_name</a> - The name of
--   the subnet group
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   A description of the subnet group
newSubnetGroup :: SubnetGroup

-- | A tag that can be added to an MemoryDB resource. Tags are composed of
--   a Key/Value pair. You can use tags to categorize and track all your
--   MemoryDB resources. When you add or remove tags on clusters, those
--   actions will be replicated to all nodes in the cluster. A tag with a
--   null Value is permitted. For more information, see <a>Tagging your
--   MemoryDB resources</a>
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value. May be
--   null.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. May not be
--   null.
newTag :: Tag

-- | A cluster whose updates have failed
--   
--   <i>See:</i> <a>newUnprocessedCluster</a> smart constructor.
data UnprocessedCluster
UnprocessedCluster' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedCluster

-- | Create a value of <a>UnprocessedCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_clusterName</a> - The name of the cluster
--   
--   <a>$sel:errorType:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorType</a> - The error type associated with
--   the update failure
--   
--   <a>$sel:errorMessage:UnprocessedCluster'</a>,
--   <a>unprocessedCluster_errorMessage</a> - The error message associated
--   with the update failure
newUnprocessedCluster :: UnprocessedCluster

-- | You create users and assign them specific permissions by using an
--   access string. You assign the users to Access Control Lists aligned
--   with a specific role (administrators, human resources) that are then
--   deployed to one or more MemoryDB clusters.
--   
--   <i>See:</i> <a>newUser</a> smart constructor.
data User
User' :: Maybe Text -> Maybe Text -> Maybe Authentication -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> User

-- | Create a value of <a>User</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:User'</a>, <a>user_status</a> - Indicates the user
--   status. Can be "active", "modifying" or "deleting".
--   
--   <a>$sel:arn:User'</a>, <a>user_arn</a> - The Amazon Resource Name
--   (ARN) of the user.
--   
--   <a>$sel:authentication:User'</a>, <a>user_authentication</a> - Denotes
--   whether the user requires a password to authenticate.
--   
--   <a>$sel:accessString:User'</a>, <a>user_accessString</a> - Access
--   permissions string used for this user.
--   
--   <a>$sel:name:User'</a>, <a>user_name</a> - The name of the user
--   
--   <a>$sel:aCLNames:User'</a>, <a>user_aCLNames</a> - The names of the
--   Access Control Lists to which the user belongs
--   
--   <a>$sel:minimumEngineVersion:User'</a>,
--   <a>user_minimumEngineVersion</a> - The minimum engine version
--   supported for the user
newUser :: User
