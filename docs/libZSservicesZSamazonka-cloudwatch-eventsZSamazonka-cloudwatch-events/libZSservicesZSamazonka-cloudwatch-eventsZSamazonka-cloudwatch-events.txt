-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cloudwatch-eventsZSamazonka-cloudwatch-events
@version 2.0


module Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod
newtype ApiDestinationHttpMethod
ApiDestinationHttpMethod' :: Text -> ApiDestinationHttpMethod
[fromApiDestinationHttpMethod] :: ApiDestinationHttpMethod -> Text
pattern ApiDestinationHttpMethod_DELETE :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_GET :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_HEAD :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_OPTIONS :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PATCH :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_POST :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PUT :: ApiDestinationHttpMethod
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ApiDestinationHttpMethod.ApiDestinationHttpMethod


module Amazonka.CloudWatchEvents.Types.ApiDestinationState
newtype ApiDestinationState
ApiDestinationState' :: Text -> ApiDestinationState
[fromApiDestinationState] :: ApiDestinationState -> Text
pattern ApiDestinationState_ACTIVE :: ApiDestinationState
pattern ApiDestinationState_INACTIVE :: ApiDestinationState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ApiDestinationState.ApiDestinationState


module Amazonka.CloudWatchEvents.Types.ApiDestination

-- | Contains details about an API destination.
--   
--   <i>See:</i> <a>newApiDestination</a> smart constructor.
data ApiDestination
ApiDestination' :: Maybe POSIX -> Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe ApiDestinationState -> Maybe Text -> Maybe Text -> ApiDestination

-- | A time stamp for the time that the API destination was created.
[$sel:creationTime:ApiDestination'] :: ApiDestination -> Maybe POSIX

-- | The method to use to connect to the HTTP endpoint.
[$sel:httpMethod:ApiDestination'] :: ApiDestination -> Maybe ApiDestinationHttpMethod

-- | The URL to the endpoint for the API destination.
[$sel:invocationEndpoint:ApiDestination'] :: ApiDestination -> Maybe Text

-- | A time stamp for the time that the API destination was last modified.
[$sel:lastModifiedTime:ApiDestination'] :: ApiDestination -> Maybe POSIX

-- | The name of the API destination.
[$sel:name:ApiDestination'] :: ApiDestination -> Maybe Text

-- | The maximum number of invocations per second to send to the HTTP
--   endpoint.
[$sel:invocationRateLimitPerSecond:ApiDestination'] :: ApiDestination -> Maybe Natural

-- | The state of the API destination.
[$sel:apiDestinationState:ApiDestination'] :: ApiDestination -> Maybe ApiDestinationState

-- | The ARN of the connection specified for the API destination.
[$sel:connectionArn:ApiDestination'] :: ApiDestination -> Maybe Text

-- | The ARN of the API destination.
[$sel:apiDestinationArn:ApiDestination'] :: ApiDestination -> Maybe Text

-- | Create a value of <a>ApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ApiDestination'</a>,
--   <a>apiDestination_creationTime</a> - A time stamp for the time that
--   the API destination was created.
--   
--   <a>$sel:httpMethod:ApiDestination'</a>,
--   <a>apiDestination_httpMethod</a> - The method to use to connect to the
--   HTTP endpoint.
--   
--   <a>$sel:invocationEndpoint:ApiDestination'</a>,
--   <a>apiDestination_invocationEndpoint</a> - The URL to the endpoint for
--   the API destination.
--   
--   <a>$sel:lastModifiedTime:ApiDestination'</a>,
--   <a>apiDestination_lastModifiedTime</a> - A time stamp for the time
--   that the API destination was last modified.
--   
--   <a>$sel:name:ApiDestination'</a>, <a>apiDestination_name</a> - The
--   name of the API destination.
--   
--   <a>$sel:invocationRateLimitPerSecond:ApiDestination'</a>,
--   <a>apiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of invocations per second to send to the HTTP endpoint.
--   
--   <a>$sel:apiDestinationState:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationState</a> - The state of the API
--   destination.
--   
--   <a>$sel:connectionArn:ApiDestination'</a>,
--   <a>apiDestination_connectionArn</a> - The ARN of the connection
--   specified for the API destination.
--   
--   <a>$sel:apiDestinationArn:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationArn</a> - The ARN of the API
--   destination.
newApiDestination :: ApiDestination

-- | A time stamp for the time that the API destination was created.
apiDestination_creationTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The method to use to connect to the HTTP endpoint.
apiDestination_httpMethod :: Lens' ApiDestination (Maybe ApiDestinationHttpMethod)

-- | The URL to the endpoint for the API destination.
apiDestination_invocationEndpoint :: Lens' ApiDestination (Maybe Text)

-- | A time stamp for the time that the API destination was last modified.
apiDestination_lastModifiedTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The name of the API destination.
apiDestination_name :: Lens' ApiDestination (Maybe Text)

-- | The maximum number of invocations per second to send to the HTTP
--   endpoint.
apiDestination_invocationRateLimitPerSecond :: Lens' ApiDestination (Maybe Natural)

-- | The state of the API destination.
apiDestination_apiDestinationState :: Lens' ApiDestination (Maybe ApiDestinationState)

-- | The ARN of the connection specified for the API destination.
apiDestination_connectionArn :: Lens' ApiDestination (Maybe Text)

-- | The ARN of the API destination.
apiDestination_apiDestinationArn :: Lens' ApiDestination (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ApiDestination.ApiDestination


module Amazonka.CloudWatchEvents.Types.ArchiveState
newtype ArchiveState
ArchiveState' :: Text -> ArchiveState
[fromArchiveState] :: ArchiveState -> Text
pattern ArchiveState_CREATE_FAILED :: ArchiveState
pattern ArchiveState_CREATING :: ArchiveState
pattern ArchiveState_DISABLED :: ArchiveState
pattern ArchiveState_ENABLED :: ArchiveState
pattern ArchiveState_UPDATE_FAILED :: ArchiveState
pattern ArchiveState_UPDATING :: ArchiveState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ArchiveState.ArchiveState


module Amazonka.CloudWatchEvents.Types.Archive

-- | An <tt>Archive</tt> object that contains details about an archive.
--   
--   <i>See:</i> <a>newArchive</a> smart constructor.
data Archive
Archive' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe ArchiveState -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Archive

-- | The time stamp for the time that the archive was created.
[$sel:creationTime:Archive'] :: Archive -> Maybe POSIX

-- | The size of the archive, in bytes.
[$sel:sizeBytes:Archive'] :: Archive -> Maybe Integer

-- | The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
[$sel:eventSourceArn:Archive'] :: Archive -> Maybe Text

-- | The current state of the archive.
[$sel:state:Archive'] :: Archive -> Maybe ArchiveState

-- | The number of events in the archive.
[$sel:eventCount:Archive'] :: Archive -> Maybe Integer

-- | The name of the archive.
[$sel:archiveName:Archive'] :: Archive -> Maybe Text

-- | The number of days to retain events in the archive before they are
--   deleted.
[$sel:retentionDays:Archive'] :: Archive -> Maybe Natural

-- | A description for the reason that the archive is in the current state.
[$sel:stateReason:Archive'] :: Archive -> Maybe Text

-- | Create a value of <a>Archive</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Archive'</a>, <a>archive_creationTime</a> - The
--   time stamp for the time that the archive was created.
--   
--   <a>$sel:sizeBytes:Archive'</a>, <a>archive_sizeBytes</a> - The size of
--   the archive, in bytes.
--   
--   <a>$sel:eventSourceArn:Archive'</a>, <a>archive_eventSourceArn</a> -
--   The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
--   
--   <a>$sel:state:Archive'</a>, <a>archive_state</a> - The current state
--   of the archive.
--   
--   <a>$sel:eventCount:Archive'</a>, <a>archive_eventCount</a> - The
--   number of events in the archive.
--   
--   <a>$sel:archiveName:Archive'</a>, <a>archive_archiveName</a> - The
--   name of the archive.
--   
--   <a>$sel:retentionDays:Archive'</a>, <a>archive_retentionDays</a> - The
--   number of days to retain events in the archive before they are
--   deleted.
--   
--   <a>$sel:stateReason:Archive'</a>, <a>archive_stateReason</a> - A
--   description for the reason that the archive is in the current state.
newArchive :: Archive

-- | The time stamp for the time that the archive was created.
archive_creationTime :: Lens' Archive (Maybe UTCTime)

-- | The size of the archive, in bytes.
archive_sizeBytes :: Lens' Archive (Maybe Integer)

-- | The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
archive_eventSourceArn :: Lens' Archive (Maybe Text)

-- | The current state of the archive.
archive_state :: Lens' Archive (Maybe ArchiveState)

-- | The number of events in the archive.
archive_eventCount :: Lens' Archive (Maybe Integer)

-- | The name of the archive.
archive_archiveName :: Lens' Archive (Maybe Text)

-- | The number of days to retain events in the archive before they are
--   deleted.
archive_retentionDays :: Lens' Archive (Maybe Natural)

-- | A description for the reason that the archive is in the current state.
archive_stateReason :: Lens' Archive (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Archive.Archive
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Archive.Archive
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Archive.Archive
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Archive.Archive
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Archive.Archive
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Archive.Archive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Archive.Archive


module Amazonka.CloudWatchEvents.Types.AssignPublicIp
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.AssignPublicIp.AssignPublicIp


module Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration

-- | This structure specifies the VPC subnets and security groups for the
--   task, and whether a public IP address is to be used. This structure is
--   relevant only for ECS tasks that use the <tt>awsvpc</tt> network mode.
--   
--   <i>See:</i> <a>newAwsVpcConfiguration</a> smart constructor.
data AwsVpcConfiguration
AwsVpcConfiguration' :: Maybe [Text] -> Maybe AssignPublicIp -> [Text] -> AwsVpcConfiguration

-- | Specifies the security groups associated with the task. These security
--   groups must all be in the same VPC. You can specify as many as five
--   security groups. If you do not specify a security group, the default
--   security group for the VPC is used.
[$sel:securityGroups:AwsVpcConfiguration'] :: AwsVpcConfiguration -> Maybe [Text]

-- | Specifies whether the task's elastic network interface receives a
--   public IP address. You can specify <tt>ENABLED</tt> only when
--   <tt>LaunchType</tt> in <tt>EcsParameters</tt> is set to
--   <tt>FARGATE</tt>.
[$sel:assignPublicIp:AwsVpcConfiguration'] :: AwsVpcConfiguration -> Maybe AssignPublicIp

-- | Specifies the subnets associated with the task. These subnets must all
--   be in the same VPC. You can specify as many as 16 subnets.
[$sel:subnets:AwsVpcConfiguration'] :: AwsVpcConfiguration -> [Text]

-- | Create a value of <a>AwsVpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_securityGroups</a> - Specifies the security
--   groups associated with the task. These security groups must all be in
--   the same VPC. You can specify as many as five security groups. If you
--   do not specify a security group, the default security group for the
--   VPC is used.
--   
--   <a>$sel:assignPublicIp:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_assignPublicIp</a> - Specifies whether the
--   task's elastic network interface receives a public IP address. You can
--   specify <tt>ENABLED</tt> only when <tt>LaunchType</tt> in
--   <tt>EcsParameters</tt> is set to <tt>FARGATE</tt>.
--   
--   <a>$sel:subnets:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_subnets</a> - Specifies the subnets associated
--   with the task. These subnets must all be in the same VPC. You can
--   specify as many as 16 subnets.
newAwsVpcConfiguration :: AwsVpcConfiguration

-- | Specifies the security groups associated with the task. These security
--   groups must all be in the same VPC. You can specify as many as five
--   security groups. If you do not specify a security group, the default
--   security group for the VPC is used.
awsVpcConfiguration_securityGroups :: Lens' AwsVpcConfiguration (Maybe [Text])

-- | Specifies whether the task's elastic network interface receives a
--   public IP address. You can specify <tt>ENABLED</tt> only when
--   <tt>LaunchType</tt> in <tt>EcsParameters</tt> is set to
--   <tt>FARGATE</tt>.
awsVpcConfiguration_assignPublicIp :: Lens' AwsVpcConfiguration (Maybe AssignPublicIp)

-- | Specifies the subnets associated with the task. These subnets must all
--   be in the same VPC. You can specify as many as 16 subnets.
awsVpcConfiguration_subnets :: Lens' AwsVpcConfiguration [Text]
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.AwsVpcConfiguration.AwsVpcConfiguration


module Amazonka.CloudWatchEvents.Types.BatchArrayProperties

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchArrayProperties</a> smart constructor.
data BatchArrayProperties
BatchArrayProperties' :: Maybe Int -> BatchArrayProperties

-- | The size of the array, if this is an array batch job. Valid values are
--   integers between 2 and 10,000.
[$sel:size:BatchArrayProperties'] :: BatchArrayProperties -> Maybe Int

-- | Create a value of <a>BatchArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:BatchArrayProperties'</a>,
--   <a>batchArrayProperties_size</a> - The size of the array, if this is
--   an array batch job. Valid values are integers between 2 and 10,000.
newBatchArrayProperties :: BatchArrayProperties

-- | The size of the array, if this is an array batch job. Valid values are
--   integers between 2 and 10,000.
batchArrayProperties_size :: Lens' BatchArrayProperties (Maybe Int)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.BatchArrayProperties.BatchArrayProperties


module Amazonka.CloudWatchEvents.Types.BatchRetryStrategy

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. If you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <i>See:</i> <a>newBatchRetryStrategy</a> smart constructor.
data BatchRetryStrategy
BatchRetryStrategy' :: Maybe Int -> BatchRetryStrategy

-- | The number of times to attempt to retry, if the job fails. Valid
--   values are 1–10.
[$sel:attempts:BatchRetryStrategy'] :: BatchRetryStrategy -> Maybe Int

-- | Create a value of <a>BatchRetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attempts:BatchRetryStrategy'</a>,
--   <a>batchRetryStrategy_attempts</a> - The number of times to attempt to
--   retry, if the job fails. Valid values are 1–10.
newBatchRetryStrategy :: BatchRetryStrategy

-- | The number of times to attempt to retry, if the job fails. Valid
--   values are 1–10.
batchRetryStrategy_attempts :: Lens' BatchRetryStrategy (Maybe Int)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.BatchRetryStrategy.BatchRetryStrategy


module Amazonka.CloudWatchEvents.Types.BatchParameters

-- | The custom parameters to be used when the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchParameters</a> smart constructor.
data BatchParameters
BatchParameters' :: Maybe BatchRetryStrategy -> Maybe BatchArrayProperties -> Text -> Text -> BatchParameters

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. The retry strategy is the number of times to retry the failed job
--   execution. Valid values are 1–10. When you specify a retry strategy
--   here, it overrides the retry strategy defined in the job definition.
[$sel:retryStrategy:BatchParameters'] :: BatchParameters -> Maybe BatchRetryStrategy

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
[$sel:arrayProperties:BatchParameters'] :: BatchParameters -> Maybe BatchArrayProperties

-- | The ARN or name of the job definition to use if the event target is an
--   Batch job. This job definition must already exist.
[$sel:jobDefinition:BatchParameters'] :: BatchParameters -> Text

-- | The name to use for this execution of the job, if the target is an
--   Batch job.
[$sel:jobName:BatchParameters'] :: BatchParameters -> Text

-- | Create a value of <a>BatchParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryStrategy:BatchParameters'</a>,
--   <a>batchParameters_retryStrategy</a> - The retry strategy to use for
--   failed jobs, if the target is an Batch job. The retry strategy is the
--   number of times to retry the failed job execution. Valid values are
--   1–10. When you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <a>$sel:arrayProperties:BatchParameters'</a>,
--   <a>batchParameters_arrayProperties</a> - The array properties for the
--   submitted job, such as the size of the array. The array size can be
--   between 2 and 10,000. If you specify array properties for a job, it
--   becomes an array job. This parameter is used only if the target is an
--   Batch job.
--   
--   <a>$sel:jobDefinition:BatchParameters'</a>,
--   <a>batchParameters_jobDefinition</a> - The ARN or name of the job
--   definition to use if the event target is an Batch job. This job
--   definition must already exist.
--   
--   <a>$sel:jobName:BatchParameters'</a>, <a>batchParameters_jobName</a> -
--   The name to use for this execution of the job, if the target is an
--   Batch job.
newBatchParameters :: Text -> Text -> BatchParameters

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. The retry strategy is the number of times to retry the failed job
--   execution. Valid values are 1–10. When you specify a retry strategy
--   here, it overrides the retry strategy defined in the job definition.
batchParameters_retryStrategy :: Lens' BatchParameters (Maybe BatchRetryStrategy)

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
batchParameters_arrayProperties :: Lens' BatchParameters (Maybe BatchArrayProperties)

-- | The ARN or name of the job definition to use if the event target is an
--   Batch job. This job definition must already exist.
batchParameters_jobDefinition :: Lens' BatchParameters Text

-- | The name to use for this execution of the job, if the target is an
--   Batch job.
batchParameters_jobName :: Lens' BatchParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.BatchParameters.BatchParameters


module Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem

-- | The details of a capacity provider strategy. To learn more, see
--   <a>CapacityProviderStrategyItem</a> in the Amazon ECS API Reference.
--   
--   <i>See:</i> <a>newCapacityProviderStrategyItem</a> smart constructor.
data CapacityProviderStrategyItem
CapacityProviderStrategyItem' :: Maybe Natural -> Maybe Natural -> Text -> CapacityProviderStrategyItem

-- | The base value designates how many tasks, at a minimum, to run on the
--   specified capacity provider. Only one capacity provider in a capacity
--   provider strategy can have a base defined. If no value is specified,
--   the default value of 0 is used.
[$sel:base:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Maybe Natural

-- | The weight value designates the relative percentage of the total
--   number of tasks launched that should use the specified capacity
--   provider. The weight value is taken into consideration after the base
--   value, if defined, is satisfied.
[$sel:weight:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Maybe Natural

-- | The short name of the capacity provider.
[$sel:capacityProvider:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Text

-- | Create a value of <a>CapacityProviderStrategyItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:base:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_base</a> - The base value designates
--   how many tasks, at a minimum, to run on the specified capacity
--   provider. Only one capacity provider in a capacity provider strategy
--   can have a base defined. If no value is specified, the default value
--   of 0 is used.
--   
--   <a>$sel:weight:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_weight</a> - The weight value
--   designates the relative percentage of the total number of tasks
--   launched that should use the specified capacity provider. The weight
--   value is taken into consideration after the base value, if defined, is
--   satisfied.
--   
--   <a>$sel:capacityProvider:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_capacityProvider</a> - The short name
--   of the capacity provider.
newCapacityProviderStrategyItem :: Text -> CapacityProviderStrategyItem

-- | The base value designates how many tasks, at a minimum, to run on the
--   specified capacity provider. Only one capacity provider in a capacity
--   provider strategy can have a base defined. If no value is specified,
--   the default value of 0 is used.
capacityProviderStrategyItem_base :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The weight value designates the relative percentage of the total
--   number of tasks launched that should use the specified capacity
--   provider. The weight value is taken into consideration after the base
--   value, if defined, is satisfied.
capacityProviderStrategyItem_weight :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The short name of the capacity provider.
capacityProviderStrategyItem_capacityProvider :: Lens' CapacityProviderStrategyItem Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CapacityProviderStrategyItem.CapacityProviderStrategyItem


module Amazonka.CloudWatchEvents.Types.Condition

-- | A JSON string which you can use to limit the event bus permissions you
--   are granting to only accounts that fulfill the condition. Currently,
--   the only supported condition is membership in a certain Amazon Web
--   Services organization. The string must contain <tt>Type</tt>,
--   <tt>Key</tt>, and <tt>Value</tt> fields. The <tt>Value</tt> field
--   specifies the ID of the Amazon Web Services organization. Following is
--   an example value for <tt>Condition</tt>:
--   
--   <pre>
--   '{"Type" : "StringEquals", "Key": "aws:PrincipalOrgID", "Value": "o-1234567890"}'
--   </pre>
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Text -> Text -> Text -> Condition

-- | Specifies the type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
[$sel:type':Condition'] :: Condition -> Text

-- | Specifies the key for the condition. Currently the only supported key
--   is <tt>aws:PrincipalOrgID</tt>.
[$sel:key:Condition'] :: Condition -> Text

-- | Specifies the value for the key. Currently, this must be the ID of the
--   organization.
[$sel:value:Condition'] :: Condition -> Text

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Condition'</a>, <a>condition_type</a> - Specifies the
--   type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
--   
--   <a>$sel:key:Condition'</a>, <a>condition_key</a> - Specifies the key
--   for the condition. Currently the only supported key is
--   <tt>aws:PrincipalOrgID</tt>.
--   
--   <a>$sel:value:Condition'</a>, <a>condition_value</a> - Specifies the
--   value for the key. Currently, this must be the ID of the organization.
newCondition :: Text -> Text -> Text -> Condition

-- | Specifies the type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
condition_type :: Lens' Condition Text

-- | Specifies the key for the condition. Currently the only supported key
--   is <tt>aws:PrincipalOrgID</tt>.
condition_key :: Lens' Condition Text

-- | Specifies the value for the key. Currently, this must be the ID of the
--   organization.
condition_value :: Lens' Condition Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Condition.Condition
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Condition.Condition
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Condition.Condition
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Condition.Condition
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Condition.Condition
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Condition.Condition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.Condition.Condition


module Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters

-- | Contains the authorization parameters for the connection if API Key is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionApiKeyAuthResponseParameters</a> smart
--   constructor.
data ConnectionApiKeyAuthResponseParameters
ConnectionApiKeyAuthResponseParameters' :: Maybe Text -> ConnectionApiKeyAuthResponseParameters

-- | The name of the header to use for the <tt>APIKeyValue</tt> used for
--   authorization.
[$sel:apiKeyName:ConnectionApiKeyAuthResponseParameters'] :: ConnectionApiKeyAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionApiKeyAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:ConnectionApiKeyAuthResponseParameters'</a>,
--   <a>connectionApiKeyAuthResponseParameters_apiKeyName</a> - The name of
--   the header to use for the <tt>APIKeyValue</tt> used for authorization.
newConnectionApiKeyAuthResponseParameters :: ConnectionApiKeyAuthResponseParameters

-- | The name of the header to use for the <tt>APIKeyValue</tt> used for
--   authorization.
connectionApiKeyAuthResponseParameters_apiKeyName :: Lens' ConnectionApiKeyAuthResponseParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionApiKeyAuthResponseParameters.ConnectionApiKeyAuthResponseParameters


module Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType
newtype ConnectionAuthorizationType
ConnectionAuthorizationType' :: Text -> ConnectionAuthorizationType
[fromConnectionAuthorizationType] :: ConnectionAuthorizationType -> Text
pattern ConnectionAuthorizationType_API_KEY :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_BASIC :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_OAUTH_CLIENT_CREDENTIALS :: ConnectionAuthorizationType
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionAuthorizationType.ConnectionAuthorizationType


module Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters

-- | Contains the authorization parameters for the connection if Basic is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionBasicAuthResponseParameters</a> smart
--   constructor.
data ConnectionBasicAuthResponseParameters
ConnectionBasicAuthResponseParameters' :: Maybe Text -> ConnectionBasicAuthResponseParameters

-- | The user name to use for Basic authorization.
[$sel:username:ConnectionBasicAuthResponseParameters'] :: ConnectionBasicAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionBasicAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:ConnectionBasicAuthResponseParameters'</a>,
--   <a>connectionBasicAuthResponseParameters_username</a> - The user name
--   to use for Basic authorization.
newConnectionBasicAuthResponseParameters :: ConnectionBasicAuthResponseParameters

-- | The user name to use for Basic authorization.
connectionBasicAuthResponseParameters_username :: Lens' ConnectionBasicAuthResponseParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionBasicAuthResponseParameters.ConnectionBasicAuthResponseParameters


module Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter

-- | Additional parameter included in the body. You can include up to 100
--   additional body parameters per request. An event payload cannot exceed
--   64 KB.
--   
--   <i>See:</i> <a>newConnectionBodyParameter</a> smart constructor.
data ConnectionBodyParameter
ConnectionBodyParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionBodyParameter

-- | Specified whether the value is secret.
[$sel:isValueSecret:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Bool

-- | The value associated with the key.
[$sel:value:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Text

-- | The key for the parameter.
[$sel:key:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Text

-- | Create a value of <a>ConnectionBodyParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_isValueSecret</a> - Specified whether the
--   value is secret.
--   
--   <a>$sel:value:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_key</a> - The key for the parameter.
newConnectionBodyParameter :: ConnectionBodyParameter

-- | Specified whether the value is secret.
connectionBodyParameter_isValueSecret :: Lens' ConnectionBodyParameter (Maybe Bool)

-- | The value associated with the key.
connectionBodyParameter_value :: Lens' ConnectionBodyParameter (Maybe Text)

-- | The key for the parameter.
connectionBodyParameter_key :: Lens' ConnectionBodyParameter (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionBodyParameter.ConnectionBodyParameter


module Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter

-- | Additional parameter included in the header. You can include up to 100
--   additional header parameters per request. An event payload cannot
--   exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionHeaderParameter</a> smart constructor.
data ConnectionHeaderParameter
ConnectionHeaderParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionHeaderParameter

-- | Specified whether the value is a secret.
[$sel:isValueSecret:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Bool

-- | The value associated with the key.
[$sel:value:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Text

-- | The key for the parameter.
[$sel:key:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Text

-- | Create a value of <a>ConnectionHeaderParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_isValueSecret</a> - Specified whether the
--   value is a secret.
--   
--   <a>$sel:value:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_key</a> - The key for the parameter.
newConnectionHeaderParameter :: ConnectionHeaderParameter

-- | Specified whether the value is a secret.
connectionHeaderParameter_isValueSecret :: Lens' ConnectionHeaderParameter (Maybe Bool)

-- | The value associated with the key.
connectionHeaderParameter_value :: Lens' ConnectionHeaderParameter (Maybe Text)

-- | The key for the parameter.
connectionHeaderParameter_key :: Lens' ConnectionHeaderParameter (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionHeaderParameter.ConnectionHeaderParameter


module Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters

-- | Contains the client response parameters for the connection when OAuth
--   is specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthClientResponseParameters</a> smart
--   constructor.
data ConnectionOAuthClientResponseParameters
ConnectionOAuthClientResponseParameters' :: Maybe Text -> ConnectionOAuthClientResponseParameters

-- | The client ID associated with the response to the connection request.
[$sel:clientID:ConnectionOAuthClientResponseParameters'] :: ConnectionOAuthClientResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionOAuthClientResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:ConnectionOAuthClientResponseParameters'</a>,
--   <a>connectionOAuthClientResponseParameters_clientID</a> - The client
--   ID associated with the response to the connection request.
newConnectionOAuthClientResponseParameters :: ConnectionOAuthClientResponseParameters

-- | The client ID associated with the response to the connection request.
connectionOAuthClientResponseParameters_clientID :: Lens' ConnectionOAuthClientResponseParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionOAuthClientResponseParameters.ConnectionOAuthClientResponseParameters


module Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod
newtype ConnectionOAuthHttpMethod
ConnectionOAuthHttpMethod' :: Text -> ConnectionOAuthHttpMethod
[fromConnectionOAuthHttpMethod] :: ConnectionOAuthHttpMethod -> Text
pattern ConnectionOAuthHttpMethod_GET :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_POST :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_PUT :: ConnectionOAuthHttpMethod
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionOAuthHttpMethod.ConnectionOAuthHttpMethod


module Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter

-- | Additional query string parameter for the connection. You can include
--   up to 100 additional query string parameters per request. Each
--   additional parameter counts towards the event payload size, which
--   cannot exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionQueryStringParameter</a> smart
--   constructor.
data ConnectionQueryStringParameter
ConnectionQueryStringParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionQueryStringParameter

-- | Specifies whether the value is secret.
[$sel:isValueSecret:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Bool

-- | The value associated with the key for the query string parameter.
[$sel:value:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Text

-- | The key for a query string parameter.
[$sel:key:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Text

-- | Create a value of <a>ConnectionQueryStringParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_isValueSecret</a> - Specifies
--   whether the value is secret.
--   
--   <a>$sel:value:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_value</a> - The value associated
--   with the key for the query string parameter.
--   
--   <a>$sel:key:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_key</a> - The key for a query string
--   parameter.
newConnectionQueryStringParameter :: ConnectionQueryStringParameter

-- | Specifies whether the value is secret.
connectionQueryStringParameter_isValueSecret :: Lens' ConnectionQueryStringParameter (Maybe Bool)

-- | The value associated with the key for the query string parameter.
connectionQueryStringParameter_value :: Lens' ConnectionQueryStringParameter (Maybe Text)

-- | The key for a query string parameter.
connectionQueryStringParameter_key :: Lens' ConnectionQueryStringParameter (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionQueryStringParameter.ConnectionQueryStringParameter


module Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters

-- | Contains additional parameters for the connection.
--   
--   <i>See:</i> <a>newConnectionHttpParameters</a> smart constructor.
data ConnectionHttpParameters
ConnectionHttpParameters' :: Maybe [ConnectionQueryStringParameter] -> Maybe [ConnectionHeaderParameter] -> Maybe [ConnectionBodyParameter] -> ConnectionHttpParameters

-- | Contains additional query string parameters for the connection.
[$sel:queryStringParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionQueryStringParameter]

-- | Contains additional header parameters for the connection.
[$sel:headerParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionHeaderParameter]

-- | Contains additional body string parameters for the connection.
[$sel:bodyParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionBodyParameter]

-- | Create a value of <a>ConnectionHttpParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryStringParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_queryStringParameters</a> - Contains
--   additional query string parameters for the connection.
--   
--   <a>$sel:headerParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_headerParameters</a> - Contains additional
--   header parameters for the connection.
--   
--   <a>$sel:bodyParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_bodyParameters</a> - Contains additional
--   body string parameters for the connection.
newConnectionHttpParameters :: ConnectionHttpParameters

-- | Contains additional query string parameters for the connection.
connectionHttpParameters_queryStringParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionQueryStringParameter])

-- | Contains additional header parameters for the connection.
connectionHttpParameters_headerParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionHeaderParameter])

-- | Contains additional body string parameters for the connection.
connectionHttpParameters_bodyParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionBodyParameter])
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionHttpParameters.ConnectionHttpParameters


module Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters

-- | Contains the response parameters when OAuth is specified as the
--   authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthResponseParameters</a> smart
--   constructor.
data ConnectionOAuthResponseParameters
ConnectionOAuthResponseParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe ConnectionOAuthClientResponseParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> ConnectionOAuthResponseParameters

-- | The method used to connect to the HTTP endpoint.
[$sel:httpMethod:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionOAuthHttpMethod

-- | A <tt>ConnectionOAuthClientResponseParameters</tt> object that
--   contains details about the client parameters returned when OAuth is
--   specified as the authorization type.
[$sel:clientParameters:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionOAuthClientResponseParameters

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
[$sel:oAuthHttpParameters:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionHttpParameters

-- | The URL to the HTTP endpoint that authorized the request.
[$sel:authorizationEndpoint:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionOAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_httpMethod</a> - The method used
--   to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_clientParameters</a> - A
--   <tt>ConnectionOAuthClientResponseParameters</tt> object that contains
--   details about the client parameters returned when OAuth is specified
--   as the authorization type.
--   
--   <a>$sel:oAuthHttpParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_oAuthHttpParameters</a> - The
--   additional HTTP parameters used for the OAuth authorization request.
--   
--   <a>$sel:authorizationEndpoint:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_authorizationEndpoint</a> - The
--   URL to the HTTP endpoint that authorized the request.
newConnectionOAuthResponseParameters :: ConnectionOAuthResponseParameters

-- | The method used to connect to the HTTP endpoint.
connectionOAuthResponseParameters_httpMethod :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>ConnectionOAuthClientResponseParameters</tt> object that
--   contains details about the client parameters returned when OAuth is
--   specified as the authorization type.
connectionOAuthResponseParameters_clientParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthClientResponseParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
connectionOAuthResponseParameters_oAuthHttpParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The URL to the HTTP endpoint that authorized the request.
connectionOAuthResponseParameters_authorizationEndpoint :: Lens' ConnectionOAuthResponseParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionOAuthResponseParameters.ConnectionOAuthResponseParameters


module Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters

-- | Contains the authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newConnectionAuthResponseParameters</a> smart
--   constructor.
data ConnectionAuthResponseParameters
ConnectionAuthResponseParameters' :: Maybe ConnectionOAuthResponseParameters -> Maybe ConnectionHttpParameters -> Maybe ConnectionApiKeyAuthResponseParameters -> Maybe ConnectionBasicAuthResponseParameters -> ConnectionAuthResponseParameters

-- | The OAuth parameters to use for authorization.
[$sel:oAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionOAuthResponseParameters

-- | Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
[$sel:invocationHttpParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionHttpParameters

-- | The API Key parameters to use for authorization.
[$sel:apiKeyAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionApiKeyAuthResponseParameters

-- | The authorization parameters for Basic authorization.
[$sel:basicAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionBasicAuthResponseParameters

-- | Create a value of <a>ConnectionAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_oAuthParameters</a> - The OAuth
--   parameters to use for authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_invocationHttpParameters</a> -
--   Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
--   
--   <a>$sel:apiKeyAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_apiKeyAuthParameters</a> - The API
--   Key parameters to use for authorization.
--   
--   <a>$sel:basicAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_basicAuthParameters</a> - The
--   authorization parameters for Basic authorization.
newConnectionAuthResponseParameters :: ConnectionAuthResponseParameters

-- | The OAuth parameters to use for authorization.
connectionAuthResponseParameters_oAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionOAuthResponseParameters)

-- | Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
connectionAuthResponseParameters_invocationHttpParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The API Key parameters to use for authorization.
connectionAuthResponseParameters_apiKeyAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionApiKeyAuthResponseParameters)

-- | The authorization parameters for Basic authorization.
connectionAuthResponseParameters_basicAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionBasicAuthResponseParameters)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionAuthResponseParameters.ConnectionAuthResponseParameters


module Amazonka.CloudWatchEvents.Types.ConnectionState
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_AUTHORIZED :: ConnectionState
pattern ConnectionState_AUTHORIZING :: ConnectionState
pattern ConnectionState_CREATING :: ConnectionState
pattern ConnectionState_DEAUTHORIZED :: ConnectionState
pattern ConnectionState_DEAUTHORIZING :: ConnectionState
pattern ConnectionState_DELETING :: ConnectionState
pattern ConnectionState_UPDATING :: ConnectionState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ConnectionState.ConnectionState


module Amazonka.CloudWatchEvents.Types.Connection

-- | Contains information about a connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe ConnectionAuthorizationType -> Maybe Text -> Maybe Text -> Maybe ConnectionState -> Connection

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:Connection'] :: Connection -> Maybe POSIX

-- | A time stamp for the time that the connection was last modified.
[$sel:lastModifiedTime:Connection'] :: Connection -> Maybe POSIX

-- | The name of the connection.
[$sel:name:Connection'] :: Connection -> Maybe Text

-- | A time stamp for the time that the connection was last authorized.
[$sel:lastAuthorizedTime:Connection'] :: Connection -> Maybe POSIX

-- | The authorization type specified for the connection.
[$sel:authorizationType:Connection'] :: Connection -> Maybe ConnectionAuthorizationType

-- | The ARN of the connection.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | The reason that the connection is in the connection state.
[$sel:stateReason:Connection'] :: Connection -> Maybe Text

-- | The state of the connection.
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   A time stamp for the time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:Connection'</a>,
--   <a>connection_lastModifiedTime</a> - A time stamp for the time that
--   the connection was last modified.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection.
--   
--   <a>$sel:lastAuthorizedTime:Connection'</a>,
--   <a>connection_lastAuthorizedTime</a> - A time stamp for the time that
--   the connection was last authorized.
--   
--   <a>$sel:authorizationType:Connection'</a>,
--   <a>connection_authorizationType</a> - The authorization type specified
--   for the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The ARN of the connection.
--   
--   <a>$sel:stateReason:Connection'</a>, <a>connection_stateReason</a> -
--   The reason that the connection is in the connection state.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection.
newConnection :: Connection

-- | A time stamp for the time that the connection was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
connection_lastModifiedTime :: Lens' Connection (Maybe UTCTime)

-- | The name of the connection.
connection_name :: Lens' Connection (Maybe Text)

-- | A time stamp for the time that the connection was last authorized.
connection_lastAuthorizedTime :: Lens' Connection (Maybe UTCTime)

-- | The authorization type specified for the connection.
connection_authorizationType :: Lens' Connection (Maybe ConnectionAuthorizationType)

-- | The ARN of the connection.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | The reason that the connection is in the connection state.
connection_stateReason :: Lens' Connection (Maybe Text)

-- | The state of the connection.
connection_connectionState :: Lens' Connection (Maybe ConnectionState)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Connection.Connection
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Connection.Connection
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Connection.Connection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Connection.Connection
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Connection.Connection
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Connection.Connection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Connection.Connection


module Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters

-- | Contains the API key authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data CreateConnectionApiKeyAuthRequestParameters
CreateConnectionApiKeyAuthRequestParameters' :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | The name of the API key to use for authorization.
[$sel:apiKeyName:CreateConnectionApiKeyAuthRequestParameters'] :: CreateConnectionApiKeyAuthRequestParameters -> Text

-- | The value for the API key to use for authorization.
[$sel:apiKeyValue:CreateConnectionApiKeyAuthRequestParameters'] :: CreateConnectionApiKeyAuthRequestParameters -> Text

-- | Create a value of <a>CreateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
--   
--   <a>$sel:apiKeyValue:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value for the API key to use for authorization.
newCreateConnectionApiKeyAuthRequestParameters :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | The name of the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' CreateConnectionApiKeyAuthRequestParameters Text

-- | The value for the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' CreateConnectionApiKeyAuthRequestParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CreateConnectionApiKeyAuthRequestParameters.CreateConnectionApiKeyAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionBasicAuthRequestParameters
CreateConnectionBasicAuthRequestParameters' :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
[$sel:username:CreateConnectionBasicAuthRequestParameters'] :: CreateConnectionBasicAuthRequestParameters -> Text

-- | The password associated with the user name to use for Basic
--   authorization.
[$sel:password:CreateConnectionBasicAuthRequestParameters'] :: CreateConnectionBasicAuthRequestParameters -> Text

-- | Create a value of <a>CreateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newCreateConnectionBasicAuthRequestParameters :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
createConnectionBasicAuthRequestParameters_username :: Lens' CreateConnectionBasicAuthRequestParameters Text

-- | The password associated with the user name to use for Basic
--   authorization.
createConnectionBasicAuthRequestParameters_password :: Lens' CreateConnectionBasicAuthRequestParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CreateConnectionBasicAuthRequestParameters.CreateConnectionBasicAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data CreateConnectionOAuthClientRequestParameters
CreateConnectionOAuthClientRequestParameters' :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization for the connection.
[$sel:clientID:CreateConnectionOAuthClientRequestParameters'] :: CreateConnectionOAuthClientRequestParameters -> Text

-- | The client secret associated with the client ID to use for OAuth
--   authorization for the connection.
[$sel:clientSecret:CreateConnectionOAuthClientRequestParameters'] :: CreateConnectionOAuthClientRequestParameters -> Text

-- | Create a value of <a>CreateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization for the connection.
--   
--   
--   <a>$sel:clientSecret:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret associated with the client ID to use for OAuth
--   authorization for the connection.
newCreateConnectionOAuthClientRequestParameters :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization for the connection.
createConnectionOAuthClientRequestParameters_clientID :: Lens' CreateConnectionOAuthClientRequestParameters Text

-- | The client secret associated with the client ID to use for OAuth
--   authorization for the connection.
createConnectionOAuthClientRequestParameters_clientSecret :: Lens' CreateConnectionOAuthClientRequestParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthClientRequestParameters.CreateConnectionOAuthClientRequestParameters


module Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionOAuthRequestParameters
CreateConnectionOAuthRequestParameters' :: Maybe ConnectionHttpParameters -> CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
[$sel:oAuthHttpParameters:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
[$sel:clientParameters:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> CreateConnectionOAuthClientRequestParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
[$sel:authorizationEndpoint:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> Text

-- | The method to use for the authorization request.
[$sel:httpMethod:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> ConnectionOAuthHttpMethod

-- | Create a value of <a>CreateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:oAuthHttpParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_oAuthHttpParameters</a> - A
--   <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
--   
--   <a>$sel:clientParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
--   
--   
--   <a>$sel:authorizationEndpoint:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
--   
--   <a>$sel:httpMethod:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_httpMethod</a> - The method
--   to use for the authorization request.
newCreateConnectionOAuthRequestParameters :: CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
createConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' CreateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
createConnectionOAuthRequestParameters_clientParameters :: Lens' CreateConnectionOAuthRequestParameters CreateConnectionOAuthClientRequestParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
createConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' CreateConnectionOAuthRequestParameters Text

-- | The method to use for the authorization request.
createConnectionOAuthRequestParameters_httpMethod :: Lens' CreateConnectionOAuthRequestParameters ConnectionOAuthHttpMethod
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CreateConnectionOAuthRequestParameters.CreateConnectionOAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters

-- | Contains the authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionAuthRequestParameters
CreateConnectionAuthRequestParameters' :: Maybe CreateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe CreateConnectionApiKeyAuthRequestParameters -> Maybe CreateConnectionBasicAuthRequestParameters -> CreateConnectionAuthRequestParameters

-- | A <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
[$sel:oAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
[$sel:invocationHttpParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
[$sel:apiKeyAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionApiKeyAuthRequestParameters

-- | A <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
[$sel:basicAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionBasicAuthRequestParameters

-- | Create a value of <a>CreateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
--   
--   
--   <a>$sel:invocationHttpParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
--   
--   
--   <a>$sel:apiKeyAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
--   
--   
--   <a>$sel:basicAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
newCreateConnectionAuthRequestParameters :: CreateConnectionAuthRequestParameters

-- | A <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
createConnectionAuthRequestParameters_oAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
createConnectionAuthRequestParameters_invocationHttpParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
createConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionApiKeyAuthRequestParameters)

-- | A <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
createConnectionAuthRequestParameters_basicAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionBasicAuthRequestParameters)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.CreateConnectionAuthRequestParameters.CreateConnectionAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.DeadLetterConfig

-- | A <tt>DeadLetterConfig</tt> object that contains information about a
--   dead-letter queue configuration.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | The ARN of the SQS queue specified as the target for the dead-letter
--   queue.
[$sel:arn:DeadLetterConfig'] :: DeadLetterConfig -> Maybe Text

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeadLetterConfig'</a>, <a>deadLetterConfig_arn</a> - The
--   ARN of the SQS queue specified as the target for the dead-letter
--   queue.
newDeadLetterConfig :: DeadLetterConfig

-- | The ARN of the SQS queue specified as the target for the dead-letter
--   queue.
deadLetterConfig_arn :: Lens' DeadLetterConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.DeadLetterConfig.DeadLetterConfig


module Amazonka.CloudWatchEvents.Types.EventBus

-- | An event bus receives events from a source and routes them to rules
--   associated with that event bus. Your account's default event bus
--   receives events from Amazon Web Services services. A custom event bus
--   can receive events from your custom applications and services. A
--   partner event bus receives events from an event source created by an
--   SaaS partner. These events come from the partners services or
--   applications.
--   
--   <i>See:</i> <a>newEventBus</a> smart constructor.
data EventBus
EventBus' :: Maybe Text -> Maybe Text -> Maybe Text -> EventBus

-- | The ARN of the event bus.
[$sel:arn:EventBus'] :: EventBus -> Maybe Text

-- | The name of the event bus.
[$sel:name:EventBus'] :: EventBus -> Maybe Text

-- | The permissions policy of the event bus, describing which other Amazon
--   Web Services accounts can write events to this event bus.
[$sel:policy:EventBus'] :: EventBus -> Maybe Text

-- | Create a value of <a>EventBus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:EventBus'</a>, <a>eventBus_arn</a> - The ARN of the event
--   bus.
--   
--   <a>$sel:name:EventBus'</a>, <a>eventBus_name</a> - The name of the
--   event bus.
--   
--   <a>$sel:policy:EventBus'</a>, <a>eventBus_policy</a> - The permissions
--   policy of the event bus, describing which other Amazon Web Services
--   accounts can write events to this event bus.
newEventBus :: EventBus

-- | The ARN of the event bus.
eventBus_arn :: Lens' EventBus (Maybe Text)

-- | The name of the event bus.
eventBus_name :: Lens' EventBus (Maybe Text)

-- | The permissions policy of the event bus, describing which other Amazon
--   Web Services accounts can write events to this event bus.
eventBus_policy :: Lens' EventBus (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.EventBus.EventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.EventBus.EventBus


module Amazonka.CloudWatchEvents.Types.EventSourceState
newtype EventSourceState
EventSourceState' :: Text -> EventSourceState
[fromEventSourceState] :: EventSourceState -> Text
pattern EventSourceState_ACTIVE :: EventSourceState
pattern EventSourceState_DELETED :: EventSourceState
pattern EventSourceState_PENDING :: EventSourceState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.EventSourceState.EventSourceState


module Amazonka.CloudWatchEvents.Types.EventSource

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> EventSource

-- | The date and time the event source was created.
[$sel:creationTime:EventSource'] :: EventSource -> Maybe POSIX

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
[$sel:state:EventSource'] :: EventSource -> Maybe EventSourceState

-- | The ARN of the event source.
[$sel:arn:EventSource'] :: EventSource -> Maybe Text

-- | The name of the partner that created the event source.
[$sel:createdBy:EventSource'] :: EventSource -> Maybe Text

-- | The name of the event source.
[$sel:name:EventSource'] :: EventSource -> Maybe Text

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
[$sel:expirationTime:EventSource'] :: EventSource -> Maybe POSIX

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:EventSource'</a>, <a>eventSource_creationTime</a>
--   - The date and time the event source was created.
--   
--   <a>$sel:state:EventSource'</a>, <a>eventSource_state</a> - The state
--   of the event source. If it is ACTIVE, you have already created a
--   matching event bus for this event source, and that event bus is
--   active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
--   
--   <a>$sel:arn:EventSource'</a>, <a>eventSource_arn</a> - The ARN of the
--   event source.
--   
--   <a>$sel:createdBy:EventSource'</a>, <a>eventSource_createdBy</a> - The
--   name of the partner that created the event source.
--   
--   <a>$sel:name:EventSource'</a>, <a>eventSource_name</a> - The name of
--   the event source.
--   
--   <a>$sel:expirationTime:EventSource'</a>,
--   <a>eventSource_expirationTime</a> - The date and time that the event
--   source will expire, if the Amazon Web Services account doesn't create
--   a matching event bus for it.
newEventSource :: EventSource

-- | The date and time the event source was created.
eventSource_creationTime :: Lens' EventSource (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
eventSource_state :: Lens' EventSource (Maybe EventSourceState)

-- | The ARN of the event source.
eventSource_arn :: Lens' EventSource (Maybe Text)

-- | The name of the partner that created the event source.
eventSource_createdBy :: Lens' EventSource (Maybe Text)

-- | The name of the event source.
eventSource_name :: Lens' EventSource (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
eventSource_expirationTime :: Lens' EventSource (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.EventSource.EventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.EventSource.EventSource


module Amazonka.CloudWatchEvents.Types.HttpParameters

-- | These are custom parameter to be used when the target is an API
--   Gateway REST APIs or EventBridge ApiDestinations. In the latter case,
--   these are merged with any InvocationParameters specified on the
--   Connection, with any values from the Connection taking precedence.
--   
--   <i>See:</i> <a>newHttpParameters</a> smart constructor.
data HttpParameters
HttpParameters' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> HttpParameters

-- | The path parameter values to be used to populate API Gateway REST API
--   or EventBridge ApiDestination path wildcards ("*").
[$sel:pathParameterValues:HttpParameters'] :: HttpParameters -> Maybe [Text]

-- | The query string keys/values that need to be sent as part of request
--   invoking the API Gateway REST API or EventBridge ApiDestination.
[$sel:queryStringParameters:HttpParameters'] :: HttpParameters -> Maybe (HashMap Text Text)

-- | The headers that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
[$sel:headerParameters:HttpParameters'] :: HttpParameters -> Maybe (HashMap Text Text)

-- | Create a value of <a>HttpParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathParameterValues:HttpParameters'</a>,
--   <a>httpParameters_pathParameterValues</a> - The path parameter values
--   to be used to populate API Gateway REST API or EventBridge
--   ApiDestination path wildcards ("*").
--   
--   <a>$sel:queryStringParameters:HttpParameters'</a>,
--   <a>httpParameters_queryStringParameters</a> - The query string
--   keys/values that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
--   
--   <a>$sel:headerParameters:HttpParameters'</a>,
--   <a>httpParameters_headerParameters</a> - The headers that need to be
--   sent as part of request invoking the API Gateway REST API or
--   EventBridge ApiDestination.
newHttpParameters :: HttpParameters

-- | The path parameter values to be used to populate API Gateway REST API
--   or EventBridge ApiDestination path wildcards ("*").
httpParameters_pathParameterValues :: Lens' HttpParameters (Maybe [Text])

-- | The query string keys/values that need to be sent as part of request
--   invoking the API Gateway REST API or EventBridge ApiDestination.
httpParameters_queryStringParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))

-- | The headers that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
httpParameters_headerParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.HttpParameters.HttpParameters


module Amazonka.CloudWatchEvents.Types.InputTransformer

-- | Contains the parameters needed for you to provide custom input to a
--   target based on one or more pieces of data extracted from the event.
--   
--   <i>See:</i> <a>newInputTransformer</a> smart constructor.
data InputTransformer
InputTransformer' :: Maybe (HashMap Text Text) -> Text -> InputTransformer

-- | Map of JSON paths to be extracted from the event. You can then insert
--   these in the template in <tt>InputTemplate</tt> to produce the output
--   you want to be sent to the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
[$sel:inputPathsMap:InputTransformer'] :: InputTransformer -> Maybe (HashMap Text Text)

-- | Input template where you specify placeholders that will be filled with
--   the values of the keys from <tt>InputPathsMap</tt> to customize the
--   data sent to the target. Enclose each <tt>InputPathsMaps</tt> value in
--   brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
[$sel:inputTemplate:InputTransformer'] :: InputTransformer -> Text

-- | Create a value of <a>InputTransformer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPathsMap:InputTransformer'</a>,
--   <a>inputTransformer_inputPathsMap</a> - Map of JSON paths to be
--   extracted from the event. You can then insert these in the template in
--   <tt>InputTemplate</tt> to produce the output you want to be sent to
--   the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
--   
--   <a>$sel:inputTemplate:InputTransformer'</a>,
--   <a>inputTransformer_inputTemplate</a> - Input template where you
--   specify placeholders that will be filled with the values of the keys
--   from <tt>InputPathsMap</tt> to customize the data sent to the target.
--   Enclose each <tt>InputPathsMaps</tt> value in brackets:
--   &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
newInputTransformer :: Text -> InputTransformer

-- | Map of JSON paths to be extracted from the event. You can then insert
--   these in the template in <tt>InputTemplate</tt> to produce the output
--   you want to be sent to the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
inputTransformer_inputPathsMap :: Lens' InputTransformer (Maybe (HashMap Text Text))

-- | Input template where you specify placeholders that will be filled with
--   the values of the keys from <tt>InputPathsMap</tt> to customize the
--   data sent to the target. Enclose each <tt>InputPathsMaps</tt> value in
--   brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
inputTransformer_inputTemplate :: Lens' InputTransformer Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.InputTransformer.InputTransformer


module Amazonka.CloudWatchEvents.Types.KinesisParameters

-- | This object enables you to specify a JSON path to extract from the
--   event and use as the partition key for the Amazon Kinesis data stream,
--   so that you can control the shard to which the event goes. If you do
--   not include this parameter, the default is to use the <tt>eventId</tt>
--   as the partition key.
--   
--   <i>See:</i> <a>newKinesisParameters</a> smart constructor.
data KinesisParameters
KinesisParameters' :: Text -> KinesisParameters

-- | The JSON path to be extracted from the event and used as the partition
--   key. For more information, see <a>Amazon Kinesis Streams Key
--   Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
[$sel:partitionKeyPath:KinesisParameters'] :: KinesisParameters -> Text

-- | Create a value of <a>KinesisParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionKeyPath:KinesisParameters'</a>,
--   <a>kinesisParameters_partitionKeyPath</a> - The JSON path to be
--   extracted from the event and used as the partition key. For more
--   information, see <a>Amazon Kinesis Streams Key Concepts</a> in the
--   <i>Amazon Kinesis Streams Developer Guide</i>.
newKinesisParameters :: Text -> KinesisParameters

-- | The JSON path to be extracted from the event and used as the partition
--   key. For more information, see <a>Amazon Kinesis Streams Key
--   Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
kinesisParameters_partitionKeyPath :: Lens' KinesisParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.KinesisParameters.KinesisParameters


module Amazonka.CloudWatchEvents.Types.LaunchType
newtype LaunchType
LaunchType' :: Text -> LaunchType
[fromLaunchType] :: LaunchType -> Text
pattern LaunchType_EC2 :: LaunchType
pattern LaunchType_EXTERNAL :: LaunchType
pattern LaunchType_FARGATE :: LaunchType
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.LaunchType.LaunchType


module Amazonka.CloudWatchEvents.Types.NetworkConfiguration

-- | This structure specifies the network configuration for an ECS task.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AwsVpcConfiguration -> NetworkConfiguration

-- | Use this structure to specify the VPC subnets and security groups for
--   the task, and whether a public IP address is to be used. This
--   structure is relevant only for ECS tasks that use the <tt>awsvpc</tt>
--   network mode.
[$sel:awsvpcConfiguration:NetworkConfiguration'] :: NetworkConfiguration -> Maybe AwsVpcConfiguration

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsvpcConfiguration:NetworkConfiguration'</a>,
--   <a>networkConfiguration_awsvpcConfiguration</a> - Use this structure
--   to specify the VPC subnets and security groups for the task, and
--   whether a public IP address is to be used. This structure is relevant
--   only for ECS tasks that use the <tt>awsvpc</tt> network mode.
newNetworkConfiguration :: NetworkConfiguration

-- | Use this structure to specify the VPC subnets and security groups for
--   the task, and whether a public IP address is to be used. This
--   structure is relevant only for ECS tasks that use the <tt>awsvpc</tt>
--   network mode.
networkConfiguration_awsvpcConfiguration :: Lens' NetworkConfiguration (Maybe AwsVpcConfiguration)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.NetworkConfiguration.NetworkConfiguration


module Amazonka.CloudWatchEvents.Types.PartnerEventSource

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newPartnerEventSource</a> smart constructor.
data PartnerEventSource
PartnerEventSource' :: Maybe Text -> Maybe Text -> PartnerEventSource

-- | The ARN of the partner event source.
[$sel:arn:PartnerEventSource'] :: PartnerEventSource -> Maybe Text

-- | The name of the partner event source.
[$sel:name:PartnerEventSource'] :: PartnerEventSource -> Maybe Text

-- | Create a value of <a>PartnerEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PartnerEventSource'</a>, <a>partnerEventSource_arn</a> -
--   The ARN of the partner event source.
--   
--   <a>$sel:name:PartnerEventSource'</a>, <a>partnerEventSource_name</a> -
--   The name of the partner event source.
newPartnerEventSource :: PartnerEventSource

-- | The ARN of the partner event source.
partnerEventSource_arn :: Lens' PartnerEventSource (Maybe Text)

-- | The name of the partner event source.
partnerEventSource_name :: Lens' PartnerEventSource (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PartnerEventSource.PartnerEventSource


module Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount

-- | The Amazon Web Services account that a partner event source has been
--   offered to.
--   
--   <i>See:</i> <a>newPartnerEventSourceAccount</a> smart constructor.
data PartnerEventSourceAccount
PartnerEventSourceAccount' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe POSIX -> PartnerEventSourceAccount

-- | The date and time the event source was created.
[$sel:creationTime:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe POSIX

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
[$sel:state:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe EventSourceState

-- | The Amazon Web Services account ID that the partner event source was
--   offered to.
[$sel:account:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe Text

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
[$sel:expirationTime:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe POSIX

-- | Create a value of <a>PartnerEventSourceAccount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_creationTime</a> - The date and time the
--   event source was created.
--   
--   <a>$sel:state:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_state</a> - The state of the event
--   source. If it is ACTIVE, you have already created a matching event bus
--   for this event source, and that event bus is active. If it is PENDING,
--   either you haven't yet created a matching event bus, or that event bus
--   is deactivated. If it is DELETED, you have created a matching event
--   bus, but the event source has since been deleted.
--   
--   <a>$sel:account:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_account</a> - The Amazon Web Services
--   account ID that the partner event source was offered to.
--   
--   <a>$sel:expirationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_expirationTime</a> - The date and time
--   that the event source will expire, if the Amazon Web Services account
--   doesn't create a matching event bus for it.
newPartnerEventSourceAccount :: PartnerEventSourceAccount

-- | The date and time the event source was created.
partnerEventSourceAccount_creationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
partnerEventSourceAccount_state :: Lens' PartnerEventSourceAccount (Maybe EventSourceState)

-- | The Amazon Web Services account ID that the partner event source was
--   offered to.
partnerEventSourceAccount_account :: Lens' PartnerEventSourceAccount (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
partnerEventSourceAccount_expirationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PartnerEventSourceAccount.PartnerEventSourceAccount


module Amazonka.CloudWatchEvents.Types.PlacementConstraintType
newtype PlacementConstraintType
PlacementConstraintType' :: Text -> PlacementConstraintType
[fromPlacementConstraintType] :: PlacementConstraintType -> Text
pattern PlacementConstraintType_DistinctInstance :: PlacementConstraintType
pattern PlacementConstraintType_MemberOf :: PlacementConstraintType
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PlacementConstraintType.PlacementConstraintType


module Amazonka.CloudWatchEvents.Types.PlacementConstraint

-- | An object representing a constraint on task placement. To learn more,
--   see <a>Task Placement Constraints</a> in the Amazon Elastic Container
--   Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementConstraint</a> smart constructor.
data PlacementConstraint
PlacementConstraint' :: Maybe Text -> Maybe PlacementConstraintType -> PlacementConstraint

-- | A cluster query language expression to apply to the constraint. You
--   cannot specify an expression if the constraint type is
--   <tt>distinctInstance</tt>. To learn more, see <a>Cluster Query
--   Language</a> in the Amazon Elastic Container Service Developer Guide.
[$sel:expression:PlacementConstraint'] :: PlacementConstraint -> Maybe Text

-- | The type of constraint. Use distinctInstance to ensure that each task
--   in a particular group is running on a different container instance.
--   Use memberOf to restrict the selection to a group of valid candidates.
[$sel:type':PlacementConstraint'] :: PlacementConstraint -> Maybe PlacementConstraintType

-- | Create a value of <a>PlacementConstraint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:PlacementConstraint'</a>,
--   <a>placementConstraint_expression</a> - A cluster query language
--   expression to apply to the constraint. You cannot specify an
--   expression if the constraint type is <tt>distinctInstance</tt>. To
--   learn more, see <a>Cluster Query Language</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:type':PlacementConstraint'</a>,
--   <a>placementConstraint_type</a> - The type of constraint. Use
--   distinctInstance to ensure that each task in a particular group is
--   running on a different container instance. Use memberOf to restrict
--   the selection to a group of valid candidates.
newPlacementConstraint :: PlacementConstraint

-- | A cluster query language expression to apply to the constraint. You
--   cannot specify an expression if the constraint type is
--   <tt>distinctInstance</tt>. To learn more, see <a>Cluster Query
--   Language</a> in the Amazon Elastic Container Service Developer Guide.
placementConstraint_expression :: Lens' PlacementConstraint (Maybe Text)

-- | The type of constraint. Use distinctInstance to ensure that each task
--   in a particular group is running on a different container instance.
--   Use memberOf to restrict the selection to a group of valid candidates.
placementConstraint_type :: Lens' PlacementConstraint (Maybe PlacementConstraintType)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PlacementConstraint.PlacementConstraint


module Amazonka.CloudWatchEvents.Types.PlacementStrategyType
newtype PlacementStrategyType
PlacementStrategyType' :: Text -> PlacementStrategyType
[fromPlacementStrategyType] :: PlacementStrategyType -> Text
pattern PlacementStrategyType_Binpack :: PlacementStrategyType
pattern PlacementStrategyType_Random :: PlacementStrategyType
pattern PlacementStrategyType_Spread :: PlacementStrategyType
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PlacementStrategyType.PlacementStrategyType


module Amazonka.CloudWatchEvents.Types.PlacementStrategy

-- | The task placement strategy for a task or service. To learn more, see
--   <a>Task Placement Strategies</a> in the Amazon Elastic Container
--   Service Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementStrategy</a> smart constructor.
data PlacementStrategy
PlacementStrategy' :: Maybe Text -> Maybe PlacementStrategyType -> PlacementStrategy

-- | The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
[$sel:field:PlacementStrategy'] :: PlacementStrategy -> Maybe Text

-- | The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
[$sel:type':PlacementStrategy'] :: PlacementStrategy -> Maybe PlacementStrategyType

-- | Create a value of <a>PlacementStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:PlacementStrategy'</a>, <a>placementStrategy_field</a> -
--   The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
--   
--   <a>$sel:type':PlacementStrategy'</a>, <a>placementStrategy_type</a> -
--   The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
newPlacementStrategy :: PlacementStrategy

-- | The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
placementStrategy_field :: Lens' PlacementStrategy (Maybe Text)

-- | The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
placementStrategy_type :: Lens' PlacementStrategy (Maybe PlacementStrategyType)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PlacementStrategy.PlacementStrategy


module Amazonka.CloudWatchEvents.Types.PropagateTags
newtype PropagateTags
PropagateTags' :: Text -> PropagateTags
[fromPropagateTags] :: PropagateTags -> Text
pattern PropagateTags_TASK_DEFINITION :: PropagateTags
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PropagateTags.PropagateTags


module Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry

-- | Represents an event to be submitted.
--   
--   <i>See:</i> <a>newPutEventsRequestEntry</a> smart constructor.
data PutEventsRequestEntry
PutEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PutEventsRequestEntry

-- | The time stamp of the event, per <a>RFC3339</a>. If no time stamp is
--   provided, the time stamp of the <a>PutEvents</a> call is used.
[$sel:time:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe POSIX

-- | Free-form string used to decide what fields to expect in the event
--   detail.
[$sel:detailType:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
[$sel:resources:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe [Text]

-- | The name or ARN of the event bus to receive the event. Only the rules
--   that are associated with this event bus are used to match the event.
--   If you omit this, the default event bus is used.
[$sel:eventBusName:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | The source of the event.
[$sel:source:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that
--   contains the trace-id associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
[$sel:traceHeader:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
[$sel:detail:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | Create a value of <a>PutEventsRequestEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_time</a> - The time stamp of the event, per
--   <a>RFC3339</a>. If no time stamp is provided, the time stamp of the
--   <a>PutEvents</a> call is used.
--   
--   <a>$sel:detailType:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detailType</a> - Free-form string used to
--   decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:eventBusName:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_eventBusName</a> - The name or ARN of the
--   event bus to receive the event. Only the rules that are associated
--   with this event bus are used to match the event. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:source:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_source</a> - The source of the event.
--   
--   <a>$sel:traceHeader:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_traceHeader</a> - An X-Ray trade header,
--   which is an http header (X-Amzn-Trace-Id) that contains the trace-id
--   associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
--   
--   <a>$sel:detail:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detail</a> - A valid JSON string. There is no
--   other schema imposed. The JSON string may contain fields and nested
--   subobjects.
newPutEventsRequestEntry :: PutEventsRequestEntry

-- | The time stamp of the event, per <a>RFC3339</a>. If no time stamp is
--   provided, the time stamp of the <a>PutEvents</a> call is used.
putEventsRequestEntry_time :: Lens' PutEventsRequestEntry (Maybe UTCTime)

-- | Free-form string used to decide what fields to expect in the event
--   detail.
putEventsRequestEntry_detailType :: Lens' PutEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putEventsRequestEntry_resources :: Lens' PutEventsRequestEntry (Maybe [Text])

-- | The name or ARN of the event bus to receive the event. Only the rules
--   that are associated with this event bus are used to match the event.
--   If you omit this, the default event bus is used.
putEventsRequestEntry_eventBusName :: Lens' PutEventsRequestEntry (Maybe Text)

-- | The source of the event.
putEventsRequestEntry_source :: Lens' PutEventsRequestEntry (Maybe Text)

-- | An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that
--   contains the trace-id associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
putEventsRequestEntry_traceHeader :: Lens' PutEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putEventsRequestEntry_detail :: Lens' PutEventsRequestEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PutEventsRequestEntry.PutEventsRequestEntry


module Amazonka.CloudWatchEvents.Types.PutEventsResultEntry

-- | Represents an event that failed to be submitted.
--   
--   <i>See:</i> <a>newPutEventsResultEntry</a> smart constructor.
data PutEventsResultEntry
PutEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutEventsResultEntry

-- | The error code that indicates why the event submission failed.
[$sel:errorCode:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | The error message that explains why the event submission failed.
[$sel:errorMessage:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | The ID of the event.
[$sel:eventId:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | Create a value of <a>PutEventsResultEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorCode</a> - The error code that indicates
--   why the event submission failed.
--   
--   <a>$sel:errorMessage:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorMessage</a> - The error message that
--   explains why the event submission failed.
--   
--   <a>$sel:eventId:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_eventId</a> - The ID of the event.
newPutEventsResultEntry :: PutEventsResultEntry

-- | The error code that indicates why the event submission failed.
putEventsResultEntry_errorCode :: Lens' PutEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putEventsResultEntry_errorMessage :: Lens' PutEventsResultEntry (Maybe Text)

-- | The ID of the event.
putEventsResultEntry_eventId :: Lens' PutEventsResultEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PutEventsResultEntry.PutEventsResultEntry


module Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry

-- | The details about an event generated by an SaaS partner.
--   
--   <i>See:</i> <a>newPutPartnerEventsRequestEntry</a> smart constructor.
data PutPartnerEventsRequestEntry
PutPartnerEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> PutPartnerEventsRequestEntry

-- | The date and time of the event.
[$sel:time:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe POSIX

-- | A free-form string used to decide what fields to expect in the event
--   detail.
[$sel:detailType:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
[$sel:resources:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe [Text]

-- | The event source that is generating the entry.
[$sel:source:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
[$sel:detail:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | Create a value of <a>PutPartnerEventsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_time</a> - The date and time of the
--   event.
--   
--   <a>$sel:detailType:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detailType</a> - A free-form string
--   used to decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:source:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_source</a> - The event source that is
--   generating the entry.
--   
--   <a>$sel:detail:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detail</a> - A valid JSON string.
--   There is no other schema imposed. The JSON string may contain fields
--   and nested subobjects.
newPutPartnerEventsRequestEntry :: PutPartnerEventsRequestEntry

-- | The date and time of the event.
putPartnerEventsRequestEntry_time :: Lens' PutPartnerEventsRequestEntry (Maybe UTCTime)

-- | A free-form string used to decide what fields to expect in the event
--   detail.
putPartnerEventsRequestEntry_detailType :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putPartnerEventsRequestEntry_resources :: Lens' PutPartnerEventsRequestEntry (Maybe [Text])

-- | The event source that is generating the entry.
putPartnerEventsRequestEntry_source :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putPartnerEventsRequestEntry_detail :: Lens' PutPartnerEventsRequestEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.PutPartnerEventsRequestEntry.PutPartnerEventsRequestEntry


module Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry

-- | Represents an event that a partner tried to generate, but failed.
--   
--   <i>See:</i> <a>newPutPartnerEventsResultEntry</a> smart constructor.
data PutPartnerEventsResultEntry
PutPartnerEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutPartnerEventsResultEntry

-- | The error code that indicates why the event submission failed.
[$sel:errorCode:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | The error message that explains why the event submission failed.
[$sel:errorMessage:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | The ID of the event.
[$sel:eventId:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | Create a value of <a>PutPartnerEventsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorCode</a> - The error code that
--   indicates why the event submission failed.
--   
--   <a>$sel:errorMessage:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorMessage</a> - The error message
--   that explains why the event submission failed.
--   
--   <a>$sel:eventId:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_eventId</a> - The ID of the event.
newPutPartnerEventsResultEntry :: PutPartnerEventsResultEntry

-- | The error code that indicates why the event submission failed.
putPartnerEventsResultEntry_errorCode :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putPartnerEventsResultEntry_errorMessage :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The ID of the event.
putPartnerEventsResultEntry_eventId :: Lens' PutPartnerEventsResultEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PutPartnerEventsResultEntry.PutPartnerEventsResultEntry


module Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry

-- | Represents a target that failed to be added to a rule.
--   
--   <i>See:</i> <a>newPutTargetsResultEntry</a> smart constructor.
data PutTargetsResultEntry
PutTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutTargetsResultEntry

-- | The ID of the target.
[$sel:targetId:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | The error code that indicates why the target addition failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
[$sel:errorCode:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | The error message that explains why the target addition failed.
[$sel:errorMessage:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | Create a value of <a>PutTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorCode</a> - The error code that indicates
--   why the target addition failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target addition failed.
newPutTargetsResultEntry :: PutTargetsResultEntry

-- | The ID of the target.
putTargetsResultEntry_targetId :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target addition failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
putTargetsResultEntry_errorCode :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target addition failed.
putTargetsResultEntry_errorMessage :: Lens' PutTargetsResultEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.PutTargetsResultEntry.PutTargetsResultEntry


module Amazonka.CloudWatchEvents.Types.RedshiftDataParameters

-- | These are custom parameters to be used when the target is a Amazon
--   Redshift cluster to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <i>See:</i> <a>newRedshiftDataParameters</a> smart constructor.
data RedshiftDataParameters
RedshiftDataParameters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> RedshiftDataParameters

-- | The database user name. Required when authenticating using temporary
--   credentials.
[$sel:dbUser:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | The name or ARN of the secret that enables access to the database.
--   Required when authenticating using Amazon Web Services Secrets
--   Manager.
[$sel:secretManagerArn:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | The name of the SQL statement. You can name the SQL statement when you
--   create it to identify the query.
[$sel:statementName:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | Indicates whether to send an event back to EventBridge after the SQL
--   statement runs.
[$sel:withEvent:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Bool

-- | The name of the database. Required when authenticating using temporary
--   credentials.
[$sel:database:RedshiftDataParameters'] :: RedshiftDataParameters -> Text

-- | The SQL statement text to run.
[$sel:sql:RedshiftDataParameters'] :: RedshiftDataParameters -> Text

-- | Create a value of <a>RedshiftDataParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dbUser:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_dbUser</a> - The database user name.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:secretManagerArn:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_secretManagerArn</a> - The name or ARN of
--   the secret that enables access to the database. Required when
--   authenticating using Amazon Web Services Secrets Manager.
--   
--   <a>$sel:statementName:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_statementName</a> - The name of the SQL
--   statement. You can name the SQL statement when you create it to
--   identify the query.
--   
--   <a>$sel:withEvent:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_withEvent</a> - Indicates whether to send an
--   event back to EventBridge after the SQL statement runs.
--   
--   <a>$sel:database:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_database</a> - The name of the database.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:sql:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_sql</a> - The SQL statement text to run.
newRedshiftDataParameters :: Text -> Text -> RedshiftDataParameters

-- | The database user name. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_dbUser :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name or ARN of the secret that enables access to the database.
--   Required when authenticating using Amazon Web Services Secrets
--   Manager.
redshiftDataParameters_secretManagerArn :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name of the SQL statement. You can name the SQL statement when you
--   create it to identify the query.
redshiftDataParameters_statementName :: Lens' RedshiftDataParameters (Maybe Text)

-- | Indicates whether to send an event back to EventBridge after the SQL
--   statement runs.
redshiftDataParameters_withEvent :: Lens' RedshiftDataParameters (Maybe Bool)

-- | The name of the database. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_database :: Lens' RedshiftDataParameters Text

-- | The SQL statement text to run.
redshiftDataParameters_sql :: Lens' RedshiftDataParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.RedshiftDataParameters.RedshiftDataParameters


module Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry

-- | Represents a target that failed to be removed from a rule.
--   
--   <i>See:</i> <a>newRemoveTargetsResultEntry</a> smart constructor.
data RemoveTargetsResultEntry
RemoveTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> RemoveTargetsResultEntry

-- | The ID of the target.
[$sel:targetId:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | The error code that indicates why the target removal failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
[$sel:errorCode:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | The error message that explains why the target removal failed.
[$sel:errorMessage:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | Create a value of <a>RemoveTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorCode</a> - The error code that
--   indicates why the target removal failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target removal failed.
newRemoveTargetsResultEntry :: RemoveTargetsResultEntry

-- | The ID of the target.
removeTargetsResultEntry_targetId :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target removal failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
removeTargetsResultEntry_errorCode :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target removal failed.
removeTargetsResultEntry_errorMessage :: Lens' RemoveTargetsResultEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RemoveTargetsResultEntry.RemoveTargetsResultEntry


module Amazonka.CloudWatchEvents.Types.ReplayDestination

-- | A <tt>ReplayDestination</tt> object that contains details about a
--   replay.
--   
--   <i>See:</i> <a>newReplayDestination</a> smart constructor.
data ReplayDestination
ReplayDestination' :: Maybe [Text] -> Text -> ReplayDestination

-- | A list of ARNs for rules to replay events to.
[$sel:filterArns:ReplayDestination'] :: ReplayDestination -> Maybe [Text]

-- | The ARN of the event bus to replay event to. You can replay events
--   only to the event bus specified to create the archive.
[$sel:arn:ReplayDestination'] :: ReplayDestination -> Text

-- | Create a value of <a>ReplayDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArns:ReplayDestination'</a>,
--   <a>replayDestination_filterArns</a> - A list of ARNs for rules to
--   replay events to.
--   
--   <a>$sel:arn:ReplayDestination'</a>, <a>replayDestination_arn</a> - The
--   ARN of the event bus to replay event to. You can replay events only to
--   the event bus specified to create the archive.
newReplayDestination :: Text -> ReplayDestination

-- | A list of ARNs for rules to replay events to.
replayDestination_filterArns :: Lens' ReplayDestination (Maybe [Text])

-- | The ARN of the event bus to replay event to. You can replay events
--   only to the event bus specified to create the archive.
replayDestination_arn :: Lens' ReplayDestination Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ReplayDestination.ReplayDestination


module Amazonka.CloudWatchEvents.Types.ReplayState
newtype ReplayState
ReplayState' :: Text -> ReplayState
[fromReplayState] :: ReplayState -> Text
pattern ReplayState_CANCELLED :: ReplayState
pattern ReplayState_CANCELLING :: ReplayState
pattern ReplayState_COMPLETED :: ReplayState
pattern ReplayState_FAILED :: ReplayState
pattern ReplayState_RUNNING :: ReplayState
pattern ReplayState_STARTING :: ReplayState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.ReplayState.ReplayState


module Amazonka.CloudWatchEvents.Types.Replay

-- | A <tt>Replay</tt> object that contains details about a replay.
--   
--   <i>See:</i> <a>newReplay</a> smart constructor.
data Replay
Replay' :: Maybe Text -> Maybe ReplayState -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Replay

-- | The ARN of the archive to replay event from.
[$sel:eventSourceArn:Replay'] :: Replay -> Maybe Text

-- | The current state of the replay.
[$sel:state:Replay'] :: Replay -> Maybe ReplayState

-- | A time stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
[$sel:eventEndTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the replay started.
[$sel:replayStartTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the replay completed.
[$sel:replayEndTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the last event was replayed.
[$sel:eventLastReplayedTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time to start replaying events. This is
--   determined by the time in the event as described in <a>Time</a>.
[$sel:eventStartTime:Replay'] :: Replay -> Maybe POSIX

-- | The name of the replay.
[$sel:replayName:Replay'] :: Replay -> Maybe Text

-- | A description of why the replay is in the current state.
[$sel:stateReason:Replay'] :: Replay -> Maybe Text

-- | Create a value of <a>Replay</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:Replay'</a>, <a>replay_eventSourceArn</a> - The
--   ARN of the archive to replay event from.
--   
--   <a>$sel:state:Replay'</a>, <a>replay_state</a> - The current state of
--   the replay.
--   
--   <a>$sel:eventEndTime:Replay'</a>, <a>replay_eventEndTime</a> - A time
--   stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
--   
--   <a>$sel:replayStartTime:Replay'</a>, <a>replay_replayStartTime</a> - A
--   time stamp for the time that the replay started.
--   
--   <a>$sel:replayEndTime:Replay'</a>, <a>replay_replayEndTime</a> - A
--   time stamp for the time that the replay completed.
--   
--   <a>$sel:eventLastReplayedTime:Replay'</a>,
--   <a>replay_eventLastReplayedTime</a> - A time stamp for the time that
--   the last event was replayed.
--   
--   <a>$sel:eventStartTime:Replay'</a>, <a>replay_eventStartTime</a> - A
--   time stamp for the time to start replaying events. This is determined
--   by the time in the event as described in <a>Time</a>.
--   
--   <a>$sel:replayName:Replay'</a>, <a>replay_replayName</a> - The name of
--   the replay.
--   
--   <a>$sel:stateReason:Replay'</a>, <a>replay_stateReason</a> - A
--   description of why the replay is in the current state.
newReplay :: Replay

-- | The ARN of the archive to replay event from.
replay_eventSourceArn :: Lens' Replay (Maybe Text)

-- | The current state of the replay.
replay_state :: Lens' Replay (Maybe ReplayState)

-- | A time stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
replay_eventEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay started.
replay_replayStartTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay completed.
replay_replayEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the last event was replayed.
replay_eventLastReplayedTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time to start replaying events. This is
--   determined by the time in the event as described in <a>Time</a>.
replay_eventStartTime :: Lens' Replay (Maybe UTCTime)

-- | The name of the replay.
replay_replayName :: Lens' Replay (Maybe Text)

-- | A description of why the replay is in the current state.
replay_stateReason :: Lens' Replay (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Replay.Replay
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Replay.Replay
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Replay.Replay
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Replay.Replay
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Replay.Replay
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Replay.Replay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Replay.Replay


module Amazonka.CloudWatchEvents.Types.RetryPolicy

-- | A <tt>RetryPolicy</tt> object that includes information about the
--   retry policy settings.
--   
--   <i>See:</i> <a>newRetryPolicy</a> smart constructor.
data RetryPolicy
RetryPolicy' :: Maybe Natural -> Maybe Natural -> RetryPolicy

-- | The maximum amount of time, in seconds, to continue to make retry
--   attempts.
[$sel:maximumEventAgeInSeconds:RetryPolicy'] :: RetryPolicy -> Maybe Natural

-- | The maximum number of retry attempts to make before the request fails.
--   Retry attempts continue until either the maximum number of attempts is
--   made or until the duration of the <tt>MaximumEventAgeInSeconds</tt> is
--   met.
[$sel:maximumRetryAttempts:RetryPolicy'] :: RetryPolicy -> Maybe Natural

-- | Create a value of <a>RetryPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:RetryPolicy'</a>,
--   <a>retryPolicy_maximumEventAgeInSeconds</a> - The maximum amount of
--   time, in seconds, to continue to make retry attempts.
--   
--   <a>$sel:maximumRetryAttempts:RetryPolicy'</a>,
--   <a>retryPolicy_maximumRetryAttempts</a> - The maximum number of retry
--   attempts to make before the request fails. Retry attempts continue
--   until either the maximum number of attempts is made or until the
--   duration of the <tt>MaximumEventAgeInSeconds</tt> is met.
newRetryPolicy :: RetryPolicy

-- | The maximum amount of time, in seconds, to continue to make retry
--   attempts.
retryPolicy_maximumEventAgeInSeconds :: Lens' RetryPolicy (Maybe Natural)

-- | The maximum number of retry attempts to make before the request fails.
--   Retry attempts continue until either the maximum number of attempts is
--   made or until the duration of the <tt>MaximumEventAgeInSeconds</tt> is
--   met.
retryPolicy_maximumRetryAttempts :: Lens' RetryPolicy (Maybe Natural)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.RetryPolicy.RetryPolicy


module Amazonka.CloudWatchEvents.Types.RuleState
newtype RuleState
RuleState' :: Text -> RuleState
[fromRuleState] :: RuleState -> Text
pattern RuleState_DISABLED :: RuleState
pattern RuleState_ENABLED :: RuleState
instance Amazonka.Data.XML.ToXML Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.XML.FromXML Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.Headers.ToHeader Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.Log.ToLog Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.Text.ToText Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Amazonka.Data.Text.FromText Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance GHC.Classes.Ord Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RuleState.RuleState
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RuleState.RuleState


module Amazonka.CloudWatchEvents.Types.Rule

-- | Contains information about a rule in Amazon EventBridge.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Rule

-- | The event pattern of the rule. For more information, see <a>Events and
--   Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
[$sel:eventPattern:Rule'] :: Rule -> Maybe Text

-- | The state of the rule.
[$sel:state:Rule'] :: Rule -> Maybe RuleState

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:arn:Rule'] :: Rule -> Maybe Text

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:Rule'] :: Rule -> Maybe Text

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
[$sel:scheduleExpression:Rule'] :: Rule -> Maybe Text

-- | The name of the rule.
[$sel:name:Rule'] :: Rule -> Maybe Text

-- | The description of the rule.
[$sel:description:Rule'] :: Rule -> Maybe Text

-- | If the rule was created on behalf of your account by an Amazon Web
--   Services service, this field displays the principal name of the
--   service that created the rule.
[$sel:managedBy:Rule'] :: Rule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the role that is used for target
--   invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
[$sel:roleArn:Rule'] :: Rule -> Maybe Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:Rule'</a>, <a>rule_eventPattern</a> - The event
--   pattern of the rule. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
--   
--   <a>$sel:state:Rule'</a>, <a>rule_state</a> - The state of the rule.
--   
--   <a>$sel:arn:Rule'</a>, <a>rule_arn</a> - The Amazon Resource Name
--   (ARN) of the rule.
--   
--   <a>$sel:eventBusName:Rule'</a>, <a>rule_eventBusName</a> - The name or
--   ARN of the event bus associated with the rule. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:scheduleExpression:Rule'</a>, <a>rule_scheduleExpression</a> -
--   The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
--   
--   <a>$sel:name:Rule'</a>, <a>rule_name</a> - The name of the rule.
--   
--   <a>$sel:description:Rule'</a>, <a>rule_description</a> - The
--   description of the rule.
--   
--   <a>$sel:managedBy:Rule'</a>, <a>rule_managedBy</a> - If the rule was
--   created on behalf of your account by an Amazon Web Services service,
--   this field displays the principal name of the service that created the
--   rule.
--   
--   <a>$sel:roleArn:Rule'</a>, <a>rule_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role that is used for target invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
newRule :: Rule

-- | The event pattern of the rule. For more information, see <a>Events and
--   Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
rule_eventPattern :: Lens' Rule (Maybe Text)

-- | The state of the rule.
rule_state :: Lens' Rule (Maybe RuleState)

-- | The Amazon Resource Name (ARN) of the rule.
rule_arn :: Lens' Rule (Maybe Text)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
rule_eventBusName :: Lens' Rule (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
rule_scheduleExpression :: Lens' Rule (Maybe Text)

-- | The name of the rule.
rule_name :: Lens' Rule (Maybe Text)

-- | The description of the rule.
rule_description :: Lens' Rule (Maybe Text)

-- | If the rule was created on behalf of your account by an Amazon Web
--   Services service, this field displays the principal name of the
--   service that created the rule.
rule_managedBy :: Lens' Rule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used for target
--   invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
rule_roleArn :: Lens' Rule (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Rule.Rule
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Rule.Rule
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Rule.Rule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Rule.Rule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Rule.Rule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Rule.Rule


module Amazonka.CloudWatchEvents.Types.RunCommandTarget

-- | Information about the EC2 instances that are to be sent the command,
--   specified as key-value pairs. Each <tt>RunCommandTarget</tt> block can
--   include only one key, but this key may specify multiple values.
--   
--   <i>See:</i> <a>newRunCommandTarget</a> smart constructor.
data RunCommandTarget
RunCommandTarget' :: Text -> NonEmpty Text -> RunCommandTarget

-- | Can be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
[$sel:key:RunCommandTarget'] :: RunCommandTarget -> Text

-- | If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
[$sel:values:RunCommandTarget'] :: RunCommandTarget -> NonEmpty Text

-- | Create a value of <a>RunCommandTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:RunCommandTarget'</a>, <a>runCommandTarget_key</a> - Can
--   be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
--   
--   <a>$sel:values:RunCommandTarget'</a>, <a>runCommandTarget_values</a> -
--   If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
newRunCommandTarget :: Text -> NonEmpty Text -> RunCommandTarget

-- | Can be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
runCommandTarget_key :: Lens' RunCommandTarget Text

-- | If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
runCommandTarget_values :: Lens' RunCommandTarget (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.RunCommandTarget.RunCommandTarget


module Amazonka.CloudWatchEvents.Types.RunCommandParameters

-- | This parameter contains the criteria (either InstanceIds or a tag)
--   used to specify which EC2 instances are to be sent the command.
--   
--   <i>See:</i> <a>newRunCommandParameters</a> smart constructor.
data RunCommandParameters
RunCommandParameters' :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Currently, we support including only one RunCommandTarget block, which
--   specifies either an array of InstanceIds or a tag.
[$sel:runCommandTargets:RunCommandParameters'] :: RunCommandParameters -> NonEmpty RunCommandTarget

-- | Create a value of <a>RunCommandParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandTargets:RunCommandParameters'</a>,
--   <a>runCommandParameters_runCommandTargets</a> - Currently, we support
--   including only one RunCommandTarget block, which specifies either an
--   array of InstanceIds or a tag.
newRunCommandParameters :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Currently, we support including only one RunCommandTarget block, which
--   specifies either an array of InstanceIds or a tag.
runCommandParameters_runCommandTargets :: Lens' RunCommandParameters (NonEmpty RunCommandTarget)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.RunCommandParameters.RunCommandParameters


module Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter

-- | Name/Value pair of a parameter to start execution of a SageMaker Model
--   Building Pipeline.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameter</a> smart constructor.
data SageMakerPipelineParameter
SageMakerPipelineParameter' :: Text -> Text -> SageMakerPipelineParameter

-- | Name of parameter to start execution of a SageMaker Model Building
--   Pipeline.
[$sel:name:SageMakerPipelineParameter'] :: SageMakerPipelineParameter -> Text

-- | Value of parameter to start execution of a SageMaker Model Building
--   Pipeline.
[$sel:value:SageMakerPipelineParameter'] :: SageMakerPipelineParameter -> Text

-- | Create a value of <a>SageMakerPipelineParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_name</a> - Name of parameter to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   <a>$sel:value:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_value</a> - Value of parameter to start
--   execution of a SageMaker Model Building Pipeline.
newSageMakerPipelineParameter :: Text -> Text -> SageMakerPipelineParameter

-- | Name of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_name :: Lens' SageMakerPipelineParameter Text

-- | Value of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_value :: Lens' SageMakerPipelineParameter Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameter.SageMakerPipelineParameter


module Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters

-- | These are custom parameters to use when the target is a SageMaker
--   Model Building Pipeline that starts based on EventBridge events.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameters</a> smart constructor.
data SageMakerPipelineParameters
SageMakerPipelineParameters' :: Maybe [SageMakerPipelineParameter] -> SageMakerPipelineParameters

-- | List of Parameter names and values for SageMaker Model Building
--   Pipeline execution.
[$sel:pipelineParameterList:SageMakerPipelineParameters'] :: SageMakerPipelineParameters -> Maybe [SageMakerPipelineParameter]

-- | Create a value of <a>SageMakerPipelineParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineParameterList:SageMakerPipelineParameters'</a>,
--   <a>sageMakerPipelineParameters_pipelineParameterList</a> - List of
--   Parameter names and values for SageMaker Model Building Pipeline
--   execution.
newSageMakerPipelineParameters :: SageMakerPipelineParameters

-- | List of Parameter names and values for SageMaker Model Building
--   Pipeline execution.
sageMakerPipelineParameters_pipelineParameterList :: Lens' SageMakerPipelineParameters (Maybe [SageMakerPipelineParameter])
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.SageMakerPipelineParameters.SageMakerPipelineParameters


module Amazonka.CloudWatchEvents.Types.SqsParameters

-- | This structure includes the custom parameter to be used when the
--   target is an SQS FIFO queue.
--   
--   <i>See:</i> <a>newSqsParameters</a> smart constructor.
data SqsParameters
SqsParameters' :: Maybe Text -> SqsParameters

-- | The FIFO message group ID to use as the target.
[$sel:messageGroupId:SqsParameters'] :: SqsParameters -> Maybe Text

-- | Create a value of <a>SqsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageGroupId:SqsParameters'</a>,
--   <a>sqsParameters_messageGroupId</a> - The FIFO message group ID to use
--   as the target.
newSqsParameters :: SqsParameters

-- | The FIFO message group ID to use as the target.
sqsParameters_messageGroupId :: Lens' SqsParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.SqsParameters.SqsParameters


module Amazonka.CloudWatchEvents.Types.Tag

-- | A key-value pair associated with an Amazon Web Services resource. In
--   EventBridge, rules and event buses support tagging.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A string you can use to assign a value. The combination of tag keys
--   and values can help you organize and categorize your resources.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string you can use to assign
--   a value. The combination of tag keys and values can help you organize
--   and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag

-- | A string you can use to assign a value. The combination of tag keys
--   and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Tag.Tag
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Tag.Tag
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.Tag.Tag


module Amazonka.CloudWatchEvents.Types.EcsParameters

-- | The custom parameters to be used when the target is an Amazon ECS
--   task.
--   
--   <i>See:</i> <a>newEcsParameters</a> smart constructor.
data EcsParameters
EcsParameters' :: Maybe Text -> Maybe PropagateTags -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [PlacementConstraint] -> Maybe [PlacementStrategy] -> Maybe LaunchType -> Maybe [CapacityProviderStrategyItem] -> Maybe Natural -> Maybe NetworkConfiguration -> Maybe [Tag] -> Maybe Bool -> Text -> EcsParameters

-- | Specifies an ECS task group for the task. The maximum length is 255
--   characters.
[$sel:group':EcsParameters'] :: EcsParameters -> Maybe Text

-- | Specifies whether to propagate the tags from the task definition to
--   the task. If no value is specified, the tags are not propagated. Tags
--   can only be propagated to the task during task creation. To add tags
--   to a task after task creation, use the TagResource API action.
[$sel:propagateTags:EcsParameters'] :: EcsParameters -> Maybe PropagateTags

-- | Specifies the platform version for the task. Specify only the numeric
--   portion of the platform version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
[$sel:platformVersion:EcsParameters'] :: EcsParameters -> Maybe Text

-- | Specifies whether to enable Amazon ECS managed tags for the task. For
--   more information, see <a>Tagging Your Amazon ECS Resources</a> in the
--   Amazon Elastic Container Service Developer Guide.
[$sel:enableECSManagedTags:EcsParameters'] :: EcsParameters -> Maybe Bool

-- | The reference ID to use for the task.
[$sel:referenceId:EcsParameters'] :: EcsParameters -> Maybe Text

-- | An array of placement constraint objects to use for the task. You can
--   specify up to 10 constraints per task (including constraints in the
--   task definition and those specified at runtime).
[$sel:placementConstraints:EcsParameters'] :: EcsParameters -> Maybe [PlacementConstraint]

-- | The placement strategy objects to use for the task. You can specify a
--   maximum of five strategy rules per task.
[$sel:placementStrategy:EcsParameters'] :: EcsParameters -> Maybe [PlacementStrategy]

-- | Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
[$sel:launchType:EcsParameters'] :: EcsParameters -> Maybe LaunchType

-- | The capacity provider strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
[$sel:capacityProviderStrategy:EcsParameters'] :: EcsParameters -> Maybe [CapacityProviderStrategyItem]

-- | The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
[$sel:taskCount:EcsParameters'] :: EcsParameters -> Maybe Natural

-- | Use this structure if the Amazon ECS task uses the <tt>awsvpc</tt>
--   network mode. This structure specifies the VPC subnets and security
--   groups associated with the task, and whether a public IP address is to
--   be used. This structure is required if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt> because the <tt>awsvpc</tt> mode is required for
--   Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
[$sel:networkConfiguration:EcsParameters'] :: EcsParameters -> Maybe NetworkConfiguration

-- | The metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
[$sel:tags:EcsParameters'] :: EcsParameters -> Maybe [Tag]

-- | Whether or not to enable the execute command functionality for the
--   containers in this task. If true, this enables execute command
--   functionality on all containers in the task.
[$sel:enableExecuteCommand:EcsParameters'] :: EcsParameters -> Maybe Bool

-- | The ARN of the task definition to use if the event target is an Amazon
--   ECS task.
[$sel:taskDefinitionArn:EcsParameters'] :: EcsParameters -> Text

-- | Create a value of <a>EcsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':EcsParameters'</a>, <a>ecsParameters_group</a> -
--   Specifies an ECS task group for the task. The maximum length is 255
--   characters.
--   
--   <a>$sel:propagateTags:EcsParameters'</a>,
--   <a>ecsParameters_propagateTags</a> - Specifies whether to propagate
--   the tags from the task definition to the task. If no value is
--   specified, the tags are not propagated. Tags can only be propagated to
--   the task during task creation. To add tags to a task after task
--   creation, use the TagResource API action.
--   
--   <a>$sel:platformVersion:EcsParameters'</a>,
--   <a>ecsParameters_platformVersion</a> - Specifies the platform version
--   for the task. Specify only the numeric portion of the platform
--   version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:enableECSManagedTags:EcsParameters'</a>,
--   <a>ecsParameters_enableECSManagedTags</a> - Specifies whether to
--   enable Amazon ECS managed tags for the task. For more information, see
--   <a>Tagging Your Amazon ECS Resources</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:referenceId:EcsParameters'</a>,
--   <a>ecsParameters_referenceId</a> - The reference ID to use for the
--   task.
--   
--   <a>$sel:placementConstraints:EcsParameters'</a>,
--   <a>ecsParameters_placementConstraints</a> - An array of placement
--   constraint objects to use for the task. You can specify up to 10
--   constraints per task (including constraints in the task definition and
--   those specified at runtime).
--   
--   <a>$sel:placementStrategy:EcsParameters'</a>,
--   <a>ecsParameters_placementStrategy</a> - The placement strategy
--   objects to use for the task. You can specify a maximum of five
--   strategy rules per task.
--   
--   <a>$sel:launchType:EcsParameters'</a>, <a>ecsParameters_launchType</a>
--   - Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:capacityProviderStrategy:EcsParameters'</a>,
--   <a>ecsParameters_capacityProviderStrategy</a> - The capacity provider
--   strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
--   
--   <a>$sel:taskCount:EcsParameters'</a>, <a>ecsParameters_taskCount</a> -
--   The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
--   
--   <a>$sel:networkConfiguration:EcsParameters'</a>,
--   <a>ecsParameters_networkConfiguration</a> - Use this structure if the
--   Amazon ECS task uses the <tt>awsvpc</tt> network mode. This structure
--   specifies the VPC subnets and security groups associated with the
--   task, and whether a public IP address is to be used. This structure is
--   required if <tt>LaunchType</tt> is <tt>FARGATE</tt> because the
--   <tt>awsvpc</tt> mode is required for Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
--   
--   <a>$sel:tags:EcsParameters'</a>, <a>ecsParameters_tags</a> - The
--   metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
--   
--   <a>$sel:enableExecuteCommand:EcsParameters'</a>,
--   <a>ecsParameters_enableExecuteCommand</a> - Whether or not to enable
--   the execute command functionality for the containers in this task. If
--   true, this enables execute command functionality on all containers in
--   the task.
--   
--   <a>$sel:taskDefinitionArn:EcsParameters'</a>,
--   <a>ecsParameters_taskDefinitionArn</a> - The ARN of the task
--   definition to use if the event target is an Amazon ECS task.
newEcsParameters :: Text -> EcsParameters

-- | Specifies an ECS task group for the task. The maximum length is 255
--   characters.
ecsParameters_group :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to propagate the tags from the task definition to
--   the task. If no value is specified, the tags are not propagated. Tags
--   can only be propagated to the task during task creation. To add tags
--   to a task after task creation, use the TagResource API action.
ecsParameters_propagateTags :: Lens' EcsParameters (Maybe PropagateTags)

-- | Specifies the platform version for the task. Specify only the numeric
--   portion of the platform version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
ecsParameters_platformVersion :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to enable Amazon ECS managed tags for the task. For
--   more information, see <a>Tagging Your Amazon ECS Resources</a> in the
--   Amazon Elastic Container Service Developer Guide.
ecsParameters_enableECSManagedTags :: Lens' EcsParameters (Maybe Bool)

-- | The reference ID to use for the task.
ecsParameters_referenceId :: Lens' EcsParameters (Maybe Text)

-- | An array of placement constraint objects to use for the task. You can
--   specify up to 10 constraints per task (including constraints in the
--   task definition and those specified at runtime).
ecsParameters_placementConstraints :: Lens' EcsParameters (Maybe [PlacementConstraint])

-- | The placement strategy objects to use for the task. You can specify a
--   maximum of five strategy rules per task.
ecsParameters_placementStrategy :: Lens' EcsParameters (Maybe [PlacementStrategy])

-- | Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
ecsParameters_launchType :: Lens' EcsParameters (Maybe LaunchType)

-- | The capacity provider strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
ecsParameters_capacityProviderStrategy :: Lens' EcsParameters (Maybe [CapacityProviderStrategyItem])

-- | The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
ecsParameters_taskCount :: Lens' EcsParameters (Maybe Natural)

-- | Use this structure if the Amazon ECS task uses the <tt>awsvpc</tt>
--   network mode. This structure specifies the VPC subnets and security
--   groups associated with the task, and whether a public IP address is to
--   be used. This structure is required if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt> because the <tt>awsvpc</tt> mode is required for
--   Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
ecsParameters_networkConfiguration :: Lens' EcsParameters (Maybe NetworkConfiguration)

-- | The metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
ecsParameters_tags :: Lens' EcsParameters (Maybe [Tag])

-- | Whether or not to enable the execute command functionality for the
--   containers in this task. If true, this enables execute command
--   functionality on all containers in the task.
ecsParameters_enableExecuteCommand :: Lens' EcsParameters (Maybe Bool)

-- | The ARN of the task definition to use if the event target is an Amazon
--   ECS task.
ecsParameters_taskDefinitionArn :: Lens' EcsParameters Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.EcsParameters.EcsParameters


module Amazonka.CloudWatchEvents.Types.Target

-- | Targets are the resources to be invoked when a rule is triggered. For
--   a complete list of services and resources that can be set as a target,
--   see <a>PutTargets</a>.
--   
--   If you are setting the event bus of another account as the target, and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, then you must
--   specify a <tt>RoleArn</tt> with proper permissions in the
--   <tt>Target</tt> structure. For more information, see <a>Sending and
--   Receiving Events Between Amazon Web Services Accounts</a> in the
--   <i>Amazon EventBridge User Guide</i>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe RunCommandParameters -> Maybe HttpParameters -> Maybe KinesisParameters -> Maybe InputTransformer -> Maybe DeadLetterConfig -> Maybe SageMakerPipelineParameters -> Maybe SqsParameters -> Maybe Text -> Maybe BatchParameters -> Maybe RedshiftDataParameters -> Maybe EcsParameters -> Maybe RetryPolicy -> Maybe Text -> Maybe Text -> Text -> Text -> Target

-- | Parameters used when you are using the rule to invoke Amazon EC2 Run
--   Command.
[$sel:runCommandParameters:Target'] :: Target -> Maybe RunCommandParameters

-- | Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
[$sel:httpParameters:Target'] :: Target -> Maybe HttpParameters

-- | The custom parameter you can use to control the shard assignment, when
--   the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
[$sel:kinesisParameters:Target'] :: Target -> Maybe KinesisParameters

-- | Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
[$sel:inputTransformer:Target'] :: Target -> Maybe InputTransformer

-- | The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
[$sel:deadLetterConfig:Target'] :: Target -> Maybe DeadLetterConfig

-- | Contains the SageMaker Model Building Pipeline parameters to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
[$sel:sageMakerPipelineParameters:Target'] :: Target -> Maybe SageMakerPipelineParameters

-- | Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
[$sel:sqsParameters:Target'] :: Target -> Maybe SqsParameters

-- | Valid JSON text passed to the target. In this case, nothing from the
--   event itself is passed to the target. For more information, see <a>The
--   JavaScript Object Notation (JSON) Data Interchange Format</a>.
[$sel:input:Target'] :: Target -> Maybe Text

-- | If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
[$sel:batchParameters:Target'] :: Target -> Maybe BatchParameters

-- | Contains the Amazon Redshift Data API parameters to use when the
--   target is a Amazon Redshift cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
[$sel:redshiftDataParameters:Target'] :: Target -> Maybe RedshiftDataParameters

-- | Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
[$sel:ecsParameters:Target'] :: Target -> Maybe EcsParameters

-- | The <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
[$sel:retryPolicy:Target'] :: Target -> Maybe RetryPolicy

-- | The value of the JSONPath that is used for extracting part of the
--   matched event when passing it to the target. You must use JSON dot
--   notation, not bracket notation. For more information about JSON paths,
--   see <a>JSONPath</a>.
[$sel:inputPath:Target'] :: Target -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role to be used for this
--   target when the rule is triggered. If one rule triggers multiple
--   targets, you can use a different IAM role for each target.
[$sel:roleArn:Target'] :: Target -> Maybe Text

-- | The ID of the target. We recommend using a memorable and unique
--   string.
[$sel:id:Target'] :: Target -> Text

-- | The Amazon Resource Name (ARN) of the target.
[$sel:arn:Target'] :: Target -> Text

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandParameters:Target'</a>,
--   <a>target_runCommandParameters</a> - Parameters used when you are
--   using the rule to invoke Amazon EC2 Run Command.
--   
--   <a>$sel:httpParameters:Target'</a>, <a>target_httpParameters</a> -
--   Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
--   
--   <a>$sel:kinesisParameters:Target'</a>, <a>target_kinesisParameters</a>
--   - The custom parameter you can use to control the shard assignment,
--   when the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
--   
--   <a>$sel:inputTransformer:Target'</a>, <a>target_inputTransformer</a> -
--   Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
--   
--   <a>$sel:deadLetterConfig:Target'</a>, <a>target_deadLetterConfig</a> -
--   The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
--   
--   <a>$sel:sageMakerPipelineParameters:Target'</a>,
--   <a>target_sageMakerPipelineParameters</a> - Contains the SageMaker
--   Model Building Pipeline parameters to start execution of a SageMaker
--   Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
--   
--   <a>$sel:sqsParameters:Target'</a>, <a>target_sqsParameters</a> -
--   Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
--   
--   <a>$sel:input:Target'</a>, <a>target_input</a> - Valid JSON text
--   passed to the target. In this case, nothing from the event itself is
--   passed to the target. For more information, see <a>The JavaScript
--   Object Notation (JSON) Data Interchange Format</a>.
--   
--   <a>$sel:batchParameters:Target'</a>, <a>target_batchParameters</a> -
--   If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
--   
--   <a>$sel:redshiftDataParameters:Target'</a>,
--   <a>target_redshiftDataParameters</a> - Contains the Amazon Redshift
--   Data API parameters to use when the target is a Amazon Redshift
--   cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <a>$sel:ecsParameters:Target'</a>, <a>target_ecsParameters</a> -
--   Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:retryPolicy:Target'</a>, <a>target_retryPolicy</a> - The
--   <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
--   
--   <a>$sel:inputPath:Target'</a>, <a>target_inputPath</a> - The value of
--   the JSONPath that is used for extracting part of the matched event
--   when passing it to the target. You must use JSON dot notation, not
--   bracket notation. For more information about JSON paths, see
--   <a>JSONPath</a>.
--   
--   <a>$sel:roleArn:Target'</a>, <a>target_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role to be used for this target when
--   the rule is triggered. If one rule triggers multiple targets, you can
--   use a different IAM role for each target.
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The ID of the target. We
--   recommend using a memorable and unique string.
--   
--   <a>$sel:arn:Target'</a>, <a>target_arn</a> - The Amazon Resource Name
--   (ARN) of the target.
newTarget :: Text -> Text -> Target

-- | Parameters used when you are using the rule to invoke Amazon EC2 Run
--   Command.
target_runCommandParameters :: Lens' Target (Maybe RunCommandParameters)

-- | Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
target_httpParameters :: Lens' Target (Maybe HttpParameters)

-- | The custom parameter you can use to control the shard assignment, when
--   the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
target_kinesisParameters :: Lens' Target (Maybe KinesisParameters)

-- | Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
target_inputTransformer :: Lens' Target (Maybe InputTransformer)

-- | The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
target_deadLetterConfig :: Lens' Target (Maybe DeadLetterConfig)

-- | Contains the SageMaker Model Building Pipeline parameters to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
target_sageMakerPipelineParameters :: Lens' Target (Maybe SageMakerPipelineParameters)

-- | Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
target_sqsParameters :: Lens' Target (Maybe SqsParameters)

-- | Valid JSON text passed to the target. In this case, nothing from the
--   event itself is passed to the target. For more information, see <a>The
--   JavaScript Object Notation (JSON) Data Interchange Format</a>.
target_input :: Lens' Target (Maybe Text)

-- | If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
target_batchParameters :: Lens' Target (Maybe BatchParameters)

-- | Contains the Amazon Redshift Data API parameters to use when the
--   target is a Amazon Redshift cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
target_redshiftDataParameters :: Lens' Target (Maybe RedshiftDataParameters)

-- | Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
target_ecsParameters :: Lens' Target (Maybe EcsParameters)

-- | The <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
target_retryPolicy :: Lens' Target (Maybe RetryPolicy)

-- | The value of the JSONPath that is used for extracting part of the
--   matched event when passing it to the target. You must use JSON dot
--   notation, not bracket notation. For more information about JSON paths,
--   see <a>JSONPath</a>.
target_inputPath :: Lens' Target (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role to be used for this
--   target when the rule is triggered. If one rule triggers multiple
--   targets, you can use a different IAM role for each target.
target_roleArn :: Lens' Target (Maybe Text)

-- | The ID of the target. We recommend using a memorable and unique
--   string.
target_id :: Lens' Target Text

-- | The Amazon Resource Name (ARN) of the target.
target_arn :: Lens' Target Text
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.Target.Target
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.Target.Target
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.Target.Target
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.Target.Target
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CloudWatchEvents.Types.Target.Target
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.Target.Target
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.Target.Target
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.Target.Target


module Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters

-- | Contains the API key authorization parameters to use to update the
--   connection.
--   
--   <i>See:</i> <a>newUpdateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data UpdateConnectionApiKeyAuthRequestParameters
UpdateConnectionApiKeyAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionApiKeyAuthRequestParameters

-- | The value associated with teh API key to use for authorization.
[$sel:apiKeyValue:UpdateConnectionApiKeyAuthRequestParameters'] :: UpdateConnectionApiKeyAuthRequestParameters -> Maybe Text

-- | The name of the API key to use for authorization.
[$sel:apiKeyName:UpdateConnectionApiKeyAuthRequestParameters'] :: UpdateConnectionApiKeyAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyValue:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value associated with teh API key to use for authorization.
--   
--   <a>$sel:apiKeyName:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
newUpdateConnectionApiKeyAuthRequestParameters :: UpdateConnectionApiKeyAuthRequestParameters

-- | The value associated with teh API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)

-- | The name of the API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.UpdateConnectionApiKeyAuthRequestParameters.UpdateConnectionApiKeyAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters

-- | Contains the Basic authorization parameters for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionBasicAuthRequestParameters
UpdateConnectionBasicAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
[$sel:username:UpdateConnectionBasicAuthRequestParameters'] :: UpdateConnectionBasicAuthRequestParameters -> Maybe Text

-- | The password associated with the user name to use for Basic
--   authorization.
[$sel:password:UpdateConnectionBasicAuthRequestParameters'] :: UpdateConnectionBasicAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newUpdateConnectionBasicAuthRequestParameters :: UpdateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
updateConnectionBasicAuthRequestParameters_username :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)

-- | The password associated with the user name to use for Basic
--   authorization.
updateConnectionBasicAuthRequestParameters_password :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.UpdateConnectionBasicAuthRequestParameters.UpdateConnectionBasicAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data UpdateConnectionOAuthClientRequestParameters
UpdateConnectionOAuthClientRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization.
[$sel:clientID:UpdateConnectionOAuthClientRequestParameters'] :: UpdateConnectionOAuthClientRequestParameters -> Maybe Text

-- | The client secret assciated with the client ID to use for OAuth
--   authorization.
[$sel:clientSecret:UpdateConnectionOAuthClientRequestParameters'] :: UpdateConnectionOAuthClientRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization.
--   
--   
--   <a>$sel:clientSecret:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret assciated with the client ID to use for OAuth
--   authorization.
newUpdateConnectionOAuthClientRequestParameters :: UpdateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization.
updateConnectionOAuthClientRequestParameters_clientID :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)

-- | The client secret assciated with the client ID to use for OAuth
--   authorization.
updateConnectionOAuthClientRequestParameters_clientSecret :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthClientRequestParameters.UpdateConnectionOAuthClientRequestParameters


module Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters

-- | Contains the OAuth request parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionOAuthRequestParameters
UpdateConnectionOAuthRequestParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe UpdateConnectionOAuthClientRequestParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> UpdateConnectionOAuthRequestParameters

-- | The method used to connect to the HTTP endpoint.
[$sel:httpMethod:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe ConnectionOAuthHttpMethod

-- | A <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
[$sel:clientParameters:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe UpdateConnectionOAuthClientRequestParameters

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
[$sel:oAuthHttpParameters:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
[$sel:authorizationEndpoint:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_httpMethod</a> - The method
--   used to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
--   
--   
--   <a>$sel:oAuthHttpParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_oAuthHttpParameters</a> -
--   The additional HTTP parameters used for the OAuth authorization
--   request.
--   
--   
--   <a>$sel:authorizationEndpoint:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
newUpdateConnectionOAuthRequestParameters :: UpdateConnectionOAuthRequestParameters

-- | The method used to connect to the HTTP endpoint.
updateConnectionOAuthRequestParameters_httpMethod :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
updateConnectionOAuthRequestParameters_clientParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe UpdateConnectionOAuthClientRequestParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
updateConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
updateConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' UpdateConnectionOAuthRequestParameters (Maybe Text)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.UpdateConnectionOAuthRequestParameters.UpdateConnectionOAuthRequestParameters


module Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters

-- | Contains the additional parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionAuthRequestParameters
UpdateConnectionAuthRequestParameters' :: Maybe UpdateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe UpdateConnectionApiKeyAuthRequestParameters -> Maybe UpdateConnectionBasicAuthRequestParameters -> UpdateConnectionAuthRequestParameters

-- | A <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
[$sel:oAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
[$sel:invocationHttpParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
[$sel:apiKeyAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionApiKeyAuthRequestParameters

-- | A <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
[$sel:basicAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionBasicAuthRequestParameters

-- | Create a value of <a>UpdateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
--   
--   
--   <a>$sel:apiKeyAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
--   
--   
--   <a>$sel:basicAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
newUpdateConnectionAuthRequestParameters :: UpdateConnectionAuthRequestParameters

-- | A <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
updateConnectionAuthRequestParameters_oAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
updateConnectionAuthRequestParameters_invocationHttpParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
updateConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionApiKeyAuthRequestParameters)

-- | A <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
updateConnectionAuthRequestParameters_basicAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionBasicAuthRequestParameters)
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance GHC.Show.Show Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance GHC.Read.Read Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.Types.UpdateConnectionAuthRequestParameters.UpdateConnectionAuthRequestParameters


module Amazonka.CloudWatchEvents.Types

-- | API version <tt>2015-10-07</tt> of the Amazon EventBridge SDK
--   configuration.
defaultService :: Service

-- | This rule was created by an Amazon Web Services service on behalf of
--   your account. It is managed by that service. If you see this error in
--   response to <tt>DeleteRule</tt> or <tt>RemoveTargets</tt>, you can use
--   the <tt>Force</tt> parameter in those calls to delete the rule or
--   remove targets from the rule. You cannot modify these managed rules by
--   using <tt>DisableRule</tt>, <tt>EnableRule</tt>, <tt>PutTargets</tt>,
--   <tt>PutRule</tt>, <tt>TagResource</tt>, or <tt>UntagResource</tt>.
_ManagedRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred because a replay can be canceled only when the state
--   is Running or Starting.
_IllegalStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event bus policy is too long. For more information, see the
--   limits.
_PolicyLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you are trying to create already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation you are attempting is not available in this region.
_OperationDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is concurrent modification on a rule, target, archive, or
--   replay.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event pattern is not valid.
_InvalidEventPatternException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception occurs due to unexpected causes.
_InternalException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An entity that you specified does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified state is not a valid state for an event source.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because it attempted to create resource beyond the
--   allowed service quota.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApiDestinationHttpMethod
ApiDestinationHttpMethod' :: Text -> ApiDestinationHttpMethod
[fromApiDestinationHttpMethod] :: ApiDestinationHttpMethod -> Text
pattern ApiDestinationHttpMethod_DELETE :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_GET :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_HEAD :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_OPTIONS :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PATCH :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_POST :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PUT :: ApiDestinationHttpMethod
newtype ApiDestinationState
ApiDestinationState' :: Text -> ApiDestinationState
[fromApiDestinationState] :: ApiDestinationState -> Text
pattern ApiDestinationState_ACTIVE :: ApiDestinationState
pattern ApiDestinationState_INACTIVE :: ApiDestinationState
newtype ArchiveState
ArchiveState' :: Text -> ArchiveState
[fromArchiveState] :: ArchiveState -> Text
pattern ArchiveState_CREATE_FAILED :: ArchiveState
pattern ArchiveState_CREATING :: ArchiveState
pattern ArchiveState_DISABLED :: ArchiveState
pattern ArchiveState_ENABLED :: ArchiveState
pattern ArchiveState_UPDATE_FAILED :: ArchiveState
pattern ArchiveState_UPDATING :: ArchiveState
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
newtype ConnectionAuthorizationType
ConnectionAuthorizationType' :: Text -> ConnectionAuthorizationType
[fromConnectionAuthorizationType] :: ConnectionAuthorizationType -> Text
pattern ConnectionAuthorizationType_API_KEY :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_BASIC :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_OAUTH_CLIENT_CREDENTIALS :: ConnectionAuthorizationType
newtype ConnectionOAuthHttpMethod
ConnectionOAuthHttpMethod' :: Text -> ConnectionOAuthHttpMethod
[fromConnectionOAuthHttpMethod] :: ConnectionOAuthHttpMethod -> Text
pattern ConnectionOAuthHttpMethod_GET :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_POST :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_PUT :: ConnectionOAuthHttpMethod
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_AUTHORIZED :: ConnectionState
pattern ConnectionState_AUTHORIZING :: ConnectionState
pattern ConnectionState_CREATING :: ConnectionState
pattern ConnectionState_DEAUTHORIZED :: ConnectionState
pattern ConnectionState_DEAUTHORIZING :: ConnectionState
pattern ConnectionState_DELETING :: ConnectionState
pattern ConnectionState_UPDATING :: ConnectionState
newtype EventSourceState
EventSourceState' :: Text -> EventSourceState
[fromEventSourceState] :: EventSourceState -> Text
pattern EventSourceState_ACTIVE :: EventSourceState
pattern EventSourceState_DELETED :: EventSourceState
pattern EventSourceState_PENDING :: EventSourceState
newtype LaunchType
LaunchType' :: Text -> LaunchType
[fromLaunchType] :: LaunchType -> Text
pattern LaunchType_EC2 :: LaunchType
pattern LaunchType_EXTERNAL :: LaunchType
pattern LaunchType_FARGATE :: LaunchType
newtype PlacementConstraintType
PlacementConstraintType' :: Text -> PlacementConstraintType
[fromPlacementConstraintType] :: PlacementConstraintType -> Text
pattern PlacementConstraintType_DistinctInstance :: PlacementConstraintType
pattern PlacementConstraintType_MemberOf :: PlacementConstraintType
newtype PlacementStrategyType
PlacementStrategyType' :: Text -> PlacementStrategyType
[fromPlacementStrategyType] :: PlacementStrategyType -> Text
pattern PlacementStrategyType_Binpack :: PlacementStrategyType
pattern PlacementStrategyType_Random :: PlacementStrategyType
pattern PlacementStrategyType_Spread :: PlacementStrategyType
newtype PropagateTags
PropagateTags' :: Text -> PropagateTags
[fromPropagateTags] :: PropagateTags -> Text
pattern PropagateTags_TASK_DEFINITION :: PropagateTags
newtype ReplayState
ReplayState' :: Text -> ReplayState
[fromReplayState] :: ReplayState -> Text
pattern ReplayState_CANCELLED :: ReplayState
pattern ReplayState_CANCELLING :: ReplayState
pattern ReplayState_COMPLETED :: ReplayState
pattern ReplayState_FAILED :: ReplayState
pattern ReplayState_RUNNING :: ReplayState
pattern ReplayState_STARTING :: ReplayState
newtype RuleState
RuleState' :: Text -> RuleState
[fromRuleState] :: RuleState -> Text
pattern RuleState_DISABLED :: RuleState
pattern RuleState_ENABLED :: RuleState

-- | Contains details about an API destination.
--   
--   <i>See:</i> <a>newApiDestination</a> smart constructor.
data ApiDestination
ApiDestination' :: Maybe POSIX -> Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe ApiDestinationState -> Maybe Text -> Maybe Text -> ApiDestination

-- | A time stamp for the time that the API destination was created.
[$sel:creationTime:ApiDestination'] :: ApiDestination -> Maybe POSIX

-- | The method to use to connect to the HTTP endpoint.
[$sel:httpMethod:ApiDestination'] :: ApiDestination -> Maybe ApiDestinationHttpMethod

-- | The URL to the endpoint for the API destination.
[$sel:invocationEndpoint:ApiDestination'] :: ApiDestination -> Maybe Text

-- | A time stamp for the time that the API destination was last modified.
[$sel:lastModifiedTime:ApiDestination'] :: ApiDestination -> Maybe POSIX

-- | The name of the API destination.
[$sel:name:ApiDestination'] :: ApiDestination -> Maybe Text

-- | The maximum number of invocations per second to send to the HTTP
--   endpoint.
[$sel:invocationRateLimitPerSecond:ApiDestination'] :: ApiDestination -> Maybe Natural

-- | The state of the API destination.
[$sel:apiDestinationState:ApiDestination'] :: ApiDestination -> Maybe ApiDestinationState

-- | The ARN of the connection specified for the API destination.
[$sel:connectionArn:ApiDestination'] :: ApiDestination -> Maybe Text

-- | The ARN of the API destination.
[$sel:apiDestinationArn:ApiDestination'] :: ApiDestination -> Maybe Text

-- | Create a value of <a>ApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ApiDestination'</a>,
--   <a>apiDestination_creationTime</a> - A time stamp for the time that
--   the API destination was created.
--   
--   <a>$sel:httpMethod:ApiDestination'</a>,
--   <a>apiDestination_httpMethod</a> - The method to use to connect to the
--   HTTP endpoint.
--   
--   <a>$sel:invocationEndpoint:ApiDestination'</a>,
--   <a>apiDestination_invocationEndpoint</a> - The URL to the endpoint for
--   the API destination.
--   
--   <a>$sel:lastModifiedTime:ApiDestination'</a>,
--   <a>apiDestination_lastModifiedTime</a> - A time stamp for the time
--   that the API destination was last modified.
--   
--   <a>$sel:name:ApiDestination'</a>, <a>apiDestination_name</a> - The
--   name of the API destination.
--   
--   <a>$sel:invocationRateLimitPerSecond:ApiDestination'</a>,
--   <a>apiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of invocations per second to send to the HTTP endpoint.
--   
--   <a>$sel:apiDestinationState:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationState</a> - The state of the API
--   destination.
--   
--   <a>$sel:connectionArn:ApiDestination'</a>,
--   <a>apiDestination_connectionArn</a> - The ARN of the connection
--   specified for the API destination.
--   
--   <a>$sel:apiDestinationArn:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationArn</a> - The ARN of the API
--   destination.
newApiDestination :: ApiDestination

-- | A time stamp for the time that the API destination was created.
apiDestination_creationTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The method to use to connect to the HTTP endpoint.
apiDestination_httpMethod :: Lens' ApiDestination (Maybe ApiDestinationHttpMethod)

-- | The URL to the endpoint for the API destination.
apiDestination_invocationEndpoint :: Lens' ApiDestination (Maybe Text)

-- | A time stamp for the time that the API destination was last modified.
apiDestination_lastModifiedTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The name of the API destination.
apiDestination_name :: Lens' ApiDestination (Maybe Text)

-- | The maximum number of invocations per second to send to the HTTP
--   endpoint.
apiDestination_invocationRateLimitPerSecond :: Lens' ApiDestination (Maybe Natural)

-- | The state of the API destination.
apiDestination_apiDestinationState :: Lens' ApiDestination (Maybe ApiDestinationState)

-- | The ARN of the connection specified for the API destination.
apiDestination_connectionArn :: Lens' ApiDestination (Maybe Text)

-- | The ARN of the API destination.
apiDestination_apiDestinationArn :: Lens' ApiDestination (Maybe Text)

-- | An <tt>Archive</tt> object that contains details about an archive.
--   
--   <i>See:</i> <a>newArchive</a> smart constructor.
data Archive
Archive' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe ArchiveState -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Archive

-- | The time stamp for the time that the archive was created.
[$sel:creationTime:Archive'] :: Archive -> Maybe POSIX

-- | The size of the archive, in bytes.
[$sel:sizeBytes:Archive'] :: Archive -> Maybe Integer

-- | The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
[$sel:eventSourceArn:Archive'] :: Archive -> Maybe Text

-- | The current state of the archive.
[$sel:state:Archive'] :: Archive -> Maybe ArchiveState

-- | The number of events in the archive.
[$sel:eventCount:Archive'] :: Archive -> Maybe Integer

-- | The name of the archive.
[$sel:archiveName:Archive'] :: Archive -> Maybe Text

-- | The number of days to retain events in the archive before they are
--   deleted.
[$sel:retentionDays:Archive'] :: Archive -> Maybe Natural

-- | A description for the reason that the archive is in the current state.
[$sel:stateReason:Archive'] :: Archive -> Maybe Text

-- | Create a value of <a>Archive</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Archive'</a>, <a>archive_creationTime</a> - The
--   time stamp for the time that the archive was created.
--   
--   <a>$sel:sizeBytes:Archive'</a>, <a>archive_sizeBytes</a> - The size of
--   the archive, in bytes.
--   
--   <a>$sel:eventSourceArn:Archive'</a>, <a>archive_eventSourceArn</a> -
--   The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
--   
--   <a>$sel:state:Archive'</a>, <a>archive_state</a> - The current state
--   of the archive.
--   
--   <a>$sel:eventCount:Archive'</a>, <a>archive_eventCount</a> - The
--   number of events in the archive.
--   
--   <a>$sel:archiveName:Archive'</a>, <a>archive_archiveName</a> - The
--   name of the archive.
--   
--   <a>$sel:retentionDays:Archive'</a>, <a>archive_retentionDays</a> - The
--   number of days to retain events in the archive before they are
--   deleted.
--   
--   <a>$sel:stateReason:Archive'</a>, <a>archive_stateReason</a> - A
--   description for the reason that the archive is in the current state.
newArchive :: Archive

-- | The time stamp for the time that the archive was created.
archive_creationTime :: Lens' Archive (Maybe UTCTime)

-- | The size of the archive, in bytes.
archive_sizeBytes :: Lens' Archive (Maybe Integer)

-- | The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
archive_eventSourceArn :: Lens' Archive (Maybe Text)

-- | The current state of the archive.
archive_state :: Lens' Archive (Maybe ArchiveState)

-- | The number of events in the archive.
archive_eventCount :: Lens' Archive (Maybe Integer)

-- | The name of the archive.
archive_archiveName :: Lens' Archive (Maybe Text)

-- | The number of days to retain events in the archive before they are
--   deleted.
archive_retentionDays :: Lens' Archive (Maybe Natural)

-- | A description for the reason that the archive is in the current state.
archive_stateReason :: Lens' Archive (Maybe Text)

-- | This structure specifies the VPC subnets and security groups for the
--   task, and whether a public IP address is to be used. This structure is
--   relevant only for ECS tasks that use the <tt>awsvpc</tt> network mode.
--   
--   <i>See:</i> <a>newAwsVpcConfiguration</a> smart constructor.
data AwsVpcConfiguration
AwsVpcConfiguration' :: Maybe [Text] -> Maybe AssignPublicIp -> [Text] -> AwsVpcConfiguration

-- | Specifies the security groups associated with the task. These security
--   groups must all be in the same VPC. You can specify as many as five
--   security groups. If you do not specify a security group, the default
--   security group for the VPC is used.
[$sel:securityGroups:AwsVpcConfiguration'] :: AwsVpcConfiguration -> Maybe [Text]

-- | Specifies whether the task's elastic network interface receives a
--   public IP address. You can specify <tt>ENABLED</tt> only when
--   <tt>LaunchType</tt> in <tt>EcsParameters</tt> is set to
--   <tt>FARGATE</tt>.
[$sel:assignPublicIp:AwsVpcConfiguration'] :: AwsVpcConfiguration -> Maybe AssignPublicIp

-- | Specifies the subnets associated with the task. These subnets must all
--   be in the same VPC. You can specify as many as 16 subnets.
[$sel:subnets:AwsVpcConfiguration'] :: AwsVpcConfiguration -> [Text]

-- | Create a value of <a>AwsVpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_securityGroups</a> - Specifies the security
--   groups associated with the task. These security groups must all be in
--   the same VPC. You can specify as many as five security groups. If you
--   do not specify a security group, the default security group for the
--   VPC is used.
--   
--   <a>$sel:assignPublicIp:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_assignPublicIp</a> - Specifies whether the
--   task's elastic network interface receives a public IP address. You can
--   specify <tt>ENABLED</tt> only when <tt>LaunchType</tt> in
--   <tt>EcsParameters</tt> is set to <tt>FARGATE</tt>.
--   
--   <a>$sel:subnets:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_subnets</a> - Specifies the subnets associated
--   with the task. These subnets must all be in the same VPC. You can
--   specify as many as 16 subnets.
newAwsVpcConfiguration :: AwsVpcConfiguration

-- | Specifies the security groups associated with the task. These security
--   groups must all be in the same VPC. You can specify as many as five
--   security groups. If you do not specify a security group, the default
--   security group for the VPC is used.
awsVpcConfiguration_securityGroups :: Lens' AwsVpcConfiguration (Maybe [Text])

-- | Specifies whether the task's elastic network interface receives a
--   public IP address. You can specify <tt>ENABLED</tt> only when
--   <tt>LaunchType</tt> in <tt>EcsParameters</tt> is set to
--   <tt>FARGATE</tt>.
awsVpcConfiguration_assignPublicIp :: Lens' AwsVpcConfiguration (Maybe AssignPublicIp)

-- | Specifies the subnets associated with the task. These subnets must all
--   be in the same VPC. You can specify as many as 16 subnets.
awsVpcConfiguration_subnets :: Lens' AwsVpcConfiguration [Text]

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchArrayProperties</a> smart constructor.
data BatchArrayProperties
BatchArrayProperties' :: Maybe Int -> BatchArrayProperties

-- | The size of the array, if this is an array batch job. Valid values are
--   integers between 2 and 10,000.
[$sel:size:BatchArrayProperties'] :: BatchArrayProperties -> Maybe Int

-- | Create a value of <a>BatchArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:BatchArrayProperties'</a>,
--   <a>batchArrayProperties_size</a> - The size of the array, if this is
--   an array batch job. Valid values are integers between 2 and 10,000.
newBatchArrayProperties :: BatchArrayProperties

-- | The size of the array, if this is an array batch job. Valid values are
--   integers between 2 and 10,000.
batchArrayProperties_size :: Lens' BatchArrayProperties (Maybe Int)

-- | The custom parameters to be used when the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchParameters</a> smart constructor.
data BatchParameters
BatchParameters' :: Maybe BatchRetryStrategy -> Maybe BatchArrayProperties -> Text -> Text -> BatchParameters

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. The retry strategy is the number of times to retry the failed job
--   execution. Valid values are 1–10. When you specify a retry strategy
--   here, it overrides the retry strategy defined in the job definition.
[$sel:retryStrategy:BatchParameters'] :: BatchParameters -> Maybe BatchRetryStrategy

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
[$sel:arrayProperties:BatchParameters'] :: BatchParameters -> Maybe BatchArrayProperties

-- | The ARN or name of the job definition to use if the event target is an
--   Batch job. This job definition must already exist.
[$sel:jobDefinition:BatchParameters'] :: BatchParameters -> Text

-- | The name to use for this execution of the job, if the target is an
--   Batch job.
[$sel:jobName:BatchParameters'] :: BatchParameters -> Text

-- | Create a value of <a>BatchParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryStrategy:BatchParameters'</a>,
--   <a>batchParameters_retryStrategy</a> - The retry strategy to use for
--   failed jobs, if the target is an Batch job. The retry strategy is the
--   number of times to retry the failed job execution. Valid values are
--   1–10. When you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <a>$sel:arrayProperties:BatchParameters'</a>,
--   <a>batchParameters_arrayProperties</a> - The array properties for the
--   submitted job, such as the size of the array. The array size can be
--   between 2 and 10,000. If you specify array properties for a job, it
--   becomes an array job. This parameter is used only if the target is an
--   Batch job.
--   
--   <a>$sel:jobDefinition:BatchParameters'</a>,
--   <a>batchParameters_jobDefinition</a> - The ARN or name of the job
--   definition to use if the event target is an Batch job. This job
--   definition must already exist.
--   
--   <a>$sel:jobName:BatchParameters'</a>, <a>batchParameters_jobName</a> -
--   The name to use for this execution of the job, if the target is an
--   Batch job.
newBatchParameters :: Text -> Text -> BatchParameters

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. The retry strategy is the number of times to retry the failed job
--   execution. Valid values are 1–10. When you specify a retry strategy
--   here, it overrides the retry strategy defined in the job definition.
batchParameters_retryStrategy :: Lens' BatchParameters (Maybe BatchRetryStrategy)

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
batchParameters_arrayProperties :: Lens' BatchParameters (Maybe BatchArrayProperties)

-- | The ARN or name of the job definition to use if the event target is an
--   Batch job. This job definition must already exist.
batchParameters_jobDefinition :: Lens' BatchParameters Text

-- | The name to use for this execution of the job, if the target is an
--   Batch job.
batchParameters_jobName :: Lens' BatchParameters Text

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. If you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <i>See:</i> <a>newBatchRetryStrategy</a> smart constructor.
data BatchRetryStrategy
BatchRetryStrategy' :: Maybe Int -> BatchRetryStrategy

-- | The number of times to attempt to retry, if the job fails. Valid
--   values are 1–10.
[$sel:attempts:BatchRetryStrategy'] :: BatchRetryStrategy -> Maybe Int

-- | Create a value of <a>BatchRetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attempts:BatchRetryStrategy'</a>,
--   <a>batchRetryStrategy_attempts</a> - The number of times to attempt to
--   retry, if the job fails. Valid values are 1–10.
newBatchRetryStrategy :: BatchRetryStrategy

-- | The number of times to attempt to retry, if the job fails. Valid
--   values are 1–10.
batchRetryStrategy_attempts :: Lens' BatchRetryStrategy (Maybe Int)

-- | The details of a capacity provider strategy. To learn more, see
--   <a>CapacityProviderStrategyItem</a> in the Amazon ECS API Reference.
--   
--   <i>See:</i> <a>newCapacityProviderStrategyItem</a> smart constructor.
data CapacityProviderStrategyItem
CapacityProviderStrategyItem' :: Maybe Natural -> Maybe Natural -> Text -> CapacityProviderStrategyItem

-- | The base value designates how many tasks, at a minimum, to run on the
--   specified capacity provider. Only one capacity provider in a capacity
--   provider strategy can have a base defined. If no value is specified,
--   the default value of 0 is used.
[$sel:base:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Maybe Natural

-- | The weight value designates the relative percentage of the total
--   number of tasks launched that should use the specified capacity
--   provider. The weight value is taken into consideration after the base
--   value, if defined, is satisfied.
[$sel:weight:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Maybe Natural

-- | The short name of the capacity provider.
[$sel:capacityProvider:CapacityProviderStrategyItem'] :: CapacityProviderStrategyItem -> Text

-- | Create a value of <a>CapacityProviderStrategyItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:base:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_base</a> - The base value designates
--   how many tasks, at a minimum, to run on the specified capacity
--   provider. Only one capacity provider in a capacity provider strategy
--   can have a base defined. If no value is specified, the default value
--   of 0 is used.
--   
--   <a>$sel:weight:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_weight</a> - The weight value
--   designates the relative percentage of the total number of tasks
--   launched that should use the specified capacity provider. The weight
--   value is taken into consideration after the base value, if defined, is
--   satisfied.
--   
--   <a>$sel:capacityProvider:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_capacityProvider</a> - The short name
--   of the capacity provider.
newCapacityProviderStrategyItem :: Text -> CapacityProviderStrategyItem

-- | The base value designates how many tasks, at a minimum, to run on the
--   specified capacity provider. Only one capacity provider in a capacity
--   provider strategy can have a base defined. If no value is specified,
--   the default value of 0 is used.
capacityProviderStrategyItem_base :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The weight value designates the relative percentage of the total
--   number of tasks launched that should use the specified capacity
--   provider. The weight value is taken into consideration after the base
--   value, if defined, is satisfied.
capacityProviderStrategyItem_weight :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The short name of the capacity provider.
capacityProviderStrategyItem_capacityProvider :: Lens' CapacityProviderStrategyItem Text

-- | A JSON string which you can use to limit the event bus permissions you
--   are granting to only accounts that fulfill the condition. Currently,
--   the only supported condition is membership in a certain Amazon Web
--   Services organization. The string must contain <tt>Type</tt>,
--   <tt>Key</tt>, and <tt>Value</tt> fields. The <tt>Value</tt> field
--   specifies the ID of the Amazon Web Services organization. Following is
--   an example value for <tt>Condition</tt>:
--   
--   <pre>
--   '{"Type" : "StringEquals", "Key": "aws:PrincipalOrgID", "Value": "o-1234567890"}'
--   </pre>
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Text -> Text -> Text -> Condition

-- | Specifies the type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
[$sel:type':Condition'] :: Condition -> Text

-- | Specifies the key for the condition. Currently the only supported key
--   is <tt>aws:PrincipalOrgID</tt>.
[$sel:key:Condition'] :: Condition -> Text

-- | Specifies the value for the key. Currently, this must be the ID of the
--   organization.
[$sel:value:Condition'] :: Condition -> Text

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Condition'</a>, <a>condition_type</a> - Specifies the
--   type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
--   
--   <a>$sel:key:Condition'</a>, <a>condition_key</a> - Specifies the key
--   for the condition. Currently the only supported key is
--   <tt>aws:PrincipalOrgID</tt>.
--   
--   <a>$sel:value:Condition'</a>, <a>condition_value</a> - Specifies the
--   value for the key. Currently, this must be the ID of the organization.
newCondition :: Text -> Text -> Text -> Condition

-- | Specifies the type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
condition_type :: Lens' Condition Text

-- | Specifies the key for the condition. Currently the only supported key
--   is <tt>aws:PrincipalOrgID</tt>.
condition_key :: Lens' Condition Text

-- | Specifies the value for the key. Currently, this must be the ID of the
--   organization.
condition_value :: Lens' Condition Text

-- | Contains information about a connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe ConnectionAuthorizationType -> Maybe Text -> Maybe Text -> Maybe ConnectionState -> Connection

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:Connection'] :: Connection -> Maybe POSIX

-- | A time stamp for the time that the connection was last modified.
[$sel:lastModifiedTime:Connection'] :: Connection -> Maybe POSIX

-- | The name of the connection.
[$sel:name:Connection'] :: Connection -> Maybe Text

-- | A time stamp for the time that the connection was last authorized.
[$sel:lastAuthorizedTime:Connection'] :: Connection -> Maybe POSIX

-- | The authorization type specified for the connection.
[$sel:authorizationType:Connection'] :: Connection -> Maybe ConnectionAuthorizationType

-- | The ARN of the connection.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | The reason that the connection is in the connection state.
[$sel:stateReason:Connection'] :: Connection -> Maybe Text

-- | The state of the connection.
[$sel:connectionState:Connection'] :: Connection -> Maybe ConnectionState

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   A time stamp for the time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:Connection'</a>,
--   <a>connection_lastModifiedTime</a> - A time stamp for the time that
--   the connection was last modified.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection.
--   
--   <a>$sel:lastAuthorizedTime:Connection'</a>,
--   <a>connection_lastAuthorizedTime</a> - A time stamp for the time that
--   the connection was last authorized.
--   
--   <a>$sel:authorizationType:Connection'</a>,
--   <a>connection_authorizationType</a> - The authorization type specified
--   for the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The ARN of the connection.
--   
--   <a>$sel:stateReason:Connection'</a>, <a>connection_stateReason</a> -
--   The reason that the connection is in the connection state.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection.
newConnection :: Connection

-- | A time stamp for the time that the connection was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
connection_lastModifiedTime :: Lens' Connection (Maybe UTCTime)

-- | The name of the connection.
connection_name :: Lens' Connection (Maybe Text)

-- | A time stamp for the time that the connection was last authorized.
connection_lastAuthorizedTime :: Lens' Connection (Maybe UTCTime)

-- | The authorization type specified for the connection.
connection_authorizationType :: Lens' Connection (Maybe ConnectionAuthorizationType)

-- | The ARN of the connection.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | The reason that the connection is in the connection state.
connection_stateReason :: Lens' Connection (Maybe Text)

-- | The state of the connection.
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | Contains the authorization parameters for the connection if API Key is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionApiKeyAuthResponseParameters</a> smart
--   constructor.
data ConnectionApiKeyAuthResponseParameters
ConnectionApiKeyAuthResponseParameters' :: Maybe Text -> ConnectionApiKeyAuthResponseParameters

-- | The name of the header to use for the <tt>APIKeyValue</tt> used for
--   authorization.
[$sel:apiKeyName:ConnectionApiKeyAuthResponseParameters'] :: ConnectionApiKeyAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionApiKeyAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:ConnectionApiKeyAuthResponseParameters'</a>,
--   <a>connectionApiKeyAuthResponseParameters_apiKeyName</a> - The name of
--   the header to use for the <tt>APIKeyValue</tt> used for authorization.
newConnectionApiKeyAuthResponseParameters :: ConnectionApiKeyAuthResponseParameters

-- | The name of the header to use for the <tt>APIKeyValue</tt> used for
--   authorization.
connectionApiKeyAuthResponseParameters_apiKeyName :: Lens' ConnectionApiKeyAuthResponseParameters (Maybe Text)

-- | Contains the authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newConnectionAuthResponseParameters</a> smart
--   constructor.
data ConnectionAuthResponseParameters
ConnectionAuthResponseParameters' :: Maybe ConnectionOAuthResponseParameters -> Maybe ConnectionHttpParameters -> Maybe ConnectionApiKeyAuthResponseParameters -> Maybe ConnectionBasicAuthResponseParameters -> ConnectionAuthResponseParameters

-- | The OAuth parameters to use for authorization.
[$sel:oAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionOAuthResponseParameters

-- | Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
[$sel:invocationHttpParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionHttpParameters

-- | The API Key parameters to use for authorization.
[$sel:apiKeyAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionApiKeyAuthResponseParameters

-- | The authorization parameters for Basic authorization.
[$sel:basicAuthParameters:ConnectionAuthResponseParameters'] :: ConnectionAuthResponseParameters -> Maybe ConnectionBasicAuthResponseParameters

-- | Create a value of <a>ConnectionAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_oAuthParameters</a> - The OAuth
--   parameters to use for authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_invocationHttpParameters</a> -
--   Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
--   
--   <a>$sel:apiKeyAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_apiKeyAuthParameters</a> - The API
--   Key parameters to use for authorization.
--   
--   <a>$sel:basicAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_basicAuthParameters</a> - The
--   authorization parameters for Basic authorization.
newConnectionAuthResponseParameters :: ConnectionAuthResponseParameters

-- | The OAuth parameters to use for authorization.
connectionAuthResponseParameters_oAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionOAuthResponseParameters)

-- | Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
connectionAuthResponseParameters_invocationHttpParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The API Key parameters to use for authorization.
connectionAuthResponseParameters_apiKeyAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionApiKeyAuthResponseParameters)

-- | The authorization parameters for Basic authorization.
connectionAuthResponseParameters_basicAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionBasicAuthResponseParameters)

-- | Contains the authorization parameters for the connection if Basic is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionBasicAuthResponseParameters</a> smart
--   constructor.
data ConnectionBasicAuthResponseParameters
ConnectionBasicAuthResponseParameters' :: Maybe Text -> ConnectionBasicAuthResponseParameters

-- | The user name to use for Basic authorization.
[$sel:username:ConnectionBasicAuthResponseParameters'] :: ConnectionBasicAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionBasicAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:ConnectionBasicAuthResponseParameters'</a>,
--   <a>connectionBasicAuthResponseParameters_username</a> - The user name
--   to use for Basic authorization.
newConnectionBasicAuthResponseParameters :: ConnectionBasicAuthResponseParameters

-- | The user name to use for Basic authorization.
connectionBasicAuthResponseParameters_username :: Lens' ConnectionBasicAuthResponseParameters (Maybe Text)

-- | Additional parameter included in the body. You can include up to 100
--   additional body parameters per request. An event payload cannot exceed
--   64 KB.
--   
--   <i>See:</i> <a>newConnectionBodyParameter</a> smart constructor.
data ConnectionBodyParameter
ConnectionBodyParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionBodyParameter

-- | Specified whether the value is secret.
[$sel:isValueSecret:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Bool

-- | The value associated with the key.
[$sel:value:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Text

-- | The key for the parameter.
[$sel:key:ConnectionBodyParameter'] :: ConnectionBodyParameter -> Maybe Text

-- | Create a value of <a>ConnectionBodyParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_isValueSecret</a> - Specified whether the
--   value is secret.
--   
--   <a>$sel:value:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_key</a> - The key for the parameter.
newConnectionBodyParameter :: ConnectionBodyParameter

-- | Specified whether the value is secret.
connectionBodyParameter_isValueSecret :: Lens' ConnectionBodyParameter (Maybe Bool)

-- | The value associated with the key.
connectionBodyParameter_value :: Lens' ConnectionBodyParameter (Maybe Text)

-- | The key for the parameter.
connectionBodyParameter_key :: Lens' ConnectionBodyParameter (Maybe Text)

-- | Additional parameter included in the header. You can include up to 100
--   additional header parameters per request. An event payload cannot
--   exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionHeaderParameter</a> smart constructor.
data ConnectionHeaderParameter
ConnectionHeaderParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionHeaderParameter

-- | Specified whether the value is a secret.
[$sel:isValueSecret:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Bool

-- | The value associated with the key.
[$sel:value:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Text

-- | The key for the parameter.
[$sel:key:ConnectionHeaderParameter'] :: ConnectionHeaderParameter -> Maybe Text

-- | Create a value of <a>ConnectionHeaderParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_isValueSecret</a> - Specified whether the
--   value is a secret.
--   
--   <a>$sel:value:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_key</a> - The key for the parameter.
newConnectionHeaderParameter :: ConnectionHeaderParameter

-- | Specified whether the value is a secret.
connectionHeaderParameter_isValueSecret :: Lens' ConnectionHeaderParameter (Maybe Bool)

-- | The value associated with the key.
connectionHeaderParameter_value :: Lens' ConnectionHeaderParameter (Maybe Text)

-- | The key for the parameter.
connectionHeaderParameter_key :: Lens' ConnectionHeaderParameter (Maybe Text)

-- | Contains additional parameters for the connection.
--   
--   <i>See:</i> <a>newConnectionHttpParameters</a> smart constructor.
data ConnectionHttpParameters
ConnectionHttpParameters' :: Maybe [ConnectionQueryStringParameter] -> Maybe [ConnectionHeaderParameter] -> Maybe [ConnectionBodyParameter] -> ConnectionHttpParameters

-- | Contains additional query string parameters for the connection.
[$sel:queryStringParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionQueryStringParameter]

-- | Contains additional header parameters for the connection.
[$sel:headerParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionHeaderParameter]

-- | Contains additional body string parameters for the connection.
[$sel:bodyParameters:ConnectionHttpParameters'] :: ConnectionHttpParameters -> Maybe [ConnectionBodyParameter]

-- | Create a value of <a>ConnectionHttpParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryStringParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_queryStringParameters</a> - Contains
--   additional query string parameters for the connection.
--   
--   <a>$sel:headerParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_headerParameters</a> - Contains additional
--   header parameters for the connection.
--   
--   <a>$sel:bodyParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_bodyParameters</a> - Contains additional
--   body string parameters for the connection.
newConnectionHttpParameters :: ConnectionHttpParameters

-- | Contains additional query string parameters for the connection.
connectionHttpParameters_queryStringParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionQueryStringParameter])

-- | Contains additional header parameters for the connection.
connectionHttpParameters_headerParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionHeaderParameter])

-- | Contains additional body string parameters for the connection.
connectionHttpParameters_bodyParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionBodyParameter])

-- | Contains the client response parameters for the connection when OAuth
--   is specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthClientResponseParameters</a> smart
--   constructor.
data ConnectionOAuthClientResponseParameters
ConnectionOAuthClientResponseParameters' :: Maybe Text -> ConnectionOAuthClientResponseParameters

-- | The client ID associated with the response to the connection request.
[$sel:clientID:ConnectionOAuthClientResponseParameters'] :: ConnectionOAuthClientResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionOAuthClientResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:ConnectionOAuthClientResponseParameters'</a>,
--   <a>connectionOAuthClientResponseParameters_clientID</a> - The client
--   ID associated with the response to the connection request.
newConnectionOAuthClientResponseParameters :: ConnectionOAuthClientResponseParameters

-- | The client ID associated with the response to the connection request.
connectionOAuthClientResponseParameters_clientID :: Lens' ConnectionOAuthClientResponseParameters (Maybe Text)

-- | Contains the response parameters when OAuth is specified as the
--   authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthResponseParameters</a> smart
--   constructor.
data ConnectionOAuthResponseParameters
ConnectionOAuthResponseParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe ConnectionOAuthClientResponseParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> ConnectionOAuthResponseParameters

-- | The method used to connect to the HTTP endpoint.
[$sel:httpMethod:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionOAuthHttpMethod

-- | A <tt>ConnectionOAuthClientResponseParameters</tt> object that
--   contains details about the client parameters returned when OAuth is
--   specified as the authorization type.
[$sel:clientParameters:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionOAuthClientResponseParameters

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
[$sel:oAuthHttpParameters:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe ConnectionHttpParameters

-- | The URL to the HTTP endpoint that authorized the request.
[$sel:authorizationEndpoint:ConnectionOAuthResponseParameters'] :: ConnectionOAuthResponseParameters -> Maybe Text

-- | Create a value of <a>ConnectionOAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_httpMethod</a> - The method used
--   to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_clientParameters</a> - A
--   <tt>ConnectionOAuthClientResponseParameters</tt> object that contains
--   details about the client parameters returned when OAuth is specified
--   as the authorization type.
--   
--   <a>$sel:oAuthHttpParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_oAuthHttpParameters</a> - The
--   additional HTTP parameters used for the OAuth authorization request.
--   
--   <a>$sel:authorizationEndpoint:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_authorizationEndpoint</a> - The
--   URL to the HTTP endpoint that authorized the request.
newConnectionOAuthResponseParameters :: ConnectionOAuthResponseParameters

-- | The method used to connect to the HTTP endpoint.
connectionOAuthResponseParameters_httpMethod :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>ConnectionOAuthClientResponseParameters</tt> object that
--   contains details about the client parameters returned when OAuth is
--   specified as the authorization type.
connectionOAuthResponseParameters_clientParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthClientResponseParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
connectionOAuthResponseParameters_oAuthHttpParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The URL to the HTTP endpoint that authorized the request.
connectionOAuthResponseParameters_authorizationEndpoint :: Lens' ConnectionOAuthResponseParameters (Maybe Text)

-- | Additional query string parameter for the connection. You can include
--   up to 100 additional query string parameters per request. Each
--   additional parameter counts towards the event payload size, which
--   cannot exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionQueryStringParameter</a> smart
--   constructor.
data ConnectionQueryStringParameter
ConnectionQueryStringParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionQueryStringParameter

-- | Specifies whether the value is secret.
[$sel:isValueSecret:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Bool

-- | The value associated with the key for the query string parameter.
[$sel:value:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Text

-- | The key for a query string parameter.
[$sel:key:ConnectionQueryStringParameter'] :: ConnectionQueryStringParameter -> Maybe Text

-- | Create a value of <a>ConnectionQueryStringParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_isValueSecret</a> - Specifies
--   whether the value is secret.
--   
--   <a>$sel:value:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_value</a> - The value associated
--   with the key for the query string parameter.
--   
--   <a>$sel:key:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_key</a> - The key for a query string
--   parameter.
newConnectionQueryStringParameter :: ConnectionQueryStringParameter

-- | Specifies whether the value is secret.
connectionQueryStringParameter_isValueSecret :: Lens' ConnectionQueryStringParameter (Maybe Bool)

-- | The value associated with the key for the query string parameter.
connectionQueryStringParameter_value :: Lens' ConnectionQueryStringParameter (Maybe Text)

-- | The key for a query string parameter.
connectionQueryStringParameter_key :: Lens' ConnectionQueryStringParameter (Maybe Text)

-- | Contains the API key authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data CreateConnectionApiKeyAuthRequestParameters
CreateConnectionApiKeyAuthRequestParameters' :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | The name of the API key to use for authorization.
[$sel:apiKeyName:CreateConnectionApiKeyAuthRequestParameters'] :: CreateConnectionApiKeyAuthRequestParameters -> Text

-- | The value for the API key to use for authorization.
[$sel:apiKeyValue:CreateConnectionApiKeyAuthRequestParameters'] :: CreateConnectionApiKeyAuthRequestParameters -> Text

-- | Create a value of <a>CreateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
--   
--   <a>$sel:apiKeyValue:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value for the API key to use for authorization.
newCreateConnectionApiKeyAuthRequestParameters :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | The name of the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' CreateConnectionApiKeyAuthRequestParameters Text

-- | The value for the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' CreateConnectionApiKeyAuthRequestParameters Text

-- | Contains the authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionAuthRequestParameters
CreateConnectionAuthRequestParameters' :: Maybe CreateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe CreateConnectionApiKeyAuthRequestParameters -> Maybe CreateConnectionBasicAuthRequestParameters -> CreateConnectionAuthRequestParameters

-- | A <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
[$sel:oAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
[$sel:invocationHttpParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
[$sel:apiKeyAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionApiKeyAuthRequestParameters

-- | A <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
[$sel:basicAuthParameters:CreateConnectionAuthRequestParameters'] :: CreateConnectionAuthRequestParameters -> Maybe CreateConnectionBasicAuthRequestParameters

-- | Create a value of <a>CreateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
--   
--   
--   <a>$sel:invocationHttpParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
--   
--   
--   <a>$sel:apiKeyAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
--   
--   
--   <a>$sel:basicAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
newCreateConnectionAuthRequestParameters :: CreateConnectionAuthRequestParameters

-- | A <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
createConnectionAuthRequestParameters_oAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
createConnectionAuthRequestParameters_invocationHttpParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
createConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionApiKeyAuthRequestParameters)

-- | A <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
createConnectionAuthRequestParameters_basicAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionBasicAuthRequestParameters)

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionBasicAuthRequestParameters
CreateConnectionBasicAuthRequestParameters' :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
[$sel:username:CreateConnectionBasicAuthRequestParameters'] :: CreateConnectionBasicAuthRequestParameters -> Text

-- | The password associated with the user name to use for Basic
--   authorization.
[$sel:password:CreateConnectionBasicAuthRequestParameters'] :: CreateConnectionBasicAuthRequestParameters -> Text

-- | Create a value of <a>CreateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newCreateConnectionBasicAuthRequestParameters :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
createConnectionBasicAuthRequestParameters_username :: Lens' CreateConnectionBasicAuthRequestParameters Text

-- | The password associated with the user name to use for Basic
--   authorization.
createConnectionBasicAuthRequestParameters_password :: Lens' CreateConnectionBasicAuthRequestParameters Text

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data CreateConnectionOAuthClientRequestParameters
CreateConnectionOAuthClientRequestParameters' :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization for the connection.
[$sel:clientID:CreateConnectionOAuthClientRequestParameters'] :: CreateConnectionOAuthClientRequestParameters -> Text

-- | The client secret associated with the client ID to use for OAuth
--   authorization for the connection.
[$sel:clientSecret:CreateConnectionOAuthClientRequestParameters'] :: CreateConnectionOAuthClientRequestParameters -> Text

-- | Create a value of <a>CreateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization for the connection.
--   
--   
--   <a>$sel:clientSecret:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret associated with the client ID to use for OAuth
--   authorization for the connection.
newCreateConnectionOAuthClientRequestParameters :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization for the connection.
createConnectionOAuthClientRequestParameters_clientID :: Lens' CreateConnectionOAuthClientRequestParameters Text

-- | The client secret associated with the client ID to use for OAuth
--   authorization for the connection.
createConnectionOAuthClientRequestParameters_clientSecret :: Lens' CreateConnectionOAuthClientRequestParameters Text

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionOAuthRequestParameters
CreateConnectionOAuthRequestParameters' :: Maybe ConnectionHttpParameters -> CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
[$sel:oAuthHttpParameters:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
[$sel:clientParameters:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> CreateConnectionOAuthClientRequestParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
[$sel:authorizationEndpoint:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> Text

-- | The method to use for the authorization request.
[$sel:httpMethod:CreateConnectionOAuthRequestParameters'] :: CreateConnectionOAuthRequestParameters -> ConnectionOAuthHttpMethod

-- | Create a value of <a>CreateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:oAuthHttpParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_oAuthHttpParameters</a> - A
--   <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
--   
--   <a>$sel:clientParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
--   
--   
--   <a>$sel:authorizationEndpoint:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
--   
--   <a>$sel:httpMethod:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_httpMethod</a> - The method
--   to use for the authorization request.
newCreateConnectionOAuthRequestParameters :: CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
createConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' CreateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
createConnectionOAuthRequestParameters_clientParameters :: Lens' CreateConnectionOAuthRequestParameters CreateConnectionOAuthClientRequestParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
createConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' CreateConnectionOAuthRequestParameters Text

-- | The method to use for the authorization request.
createConnectionOAuthRequestParameters_httpMethod :: Lens' CreateConnectionOAuthRequestParameters ConnectionOAuthHttpMethod

-- | A <tt>DeadLetterConfig</tt> object that contains information about a
--   dead-letter queue configuration.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | The ARN of the SQS queue specified as the target for the dead-letter
--   queue.
[$sel:arn:DeadLetterConfig'] :: DeadLetterConfig -> Maybe Text

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeadLetterConfig'</a>, <a>deadLetterConfig_arn</a> - The
--   ARN of the SQS queue specified as the target for the dead-letter
--   queue.
newDeadLetterConfig :: DeadLetterConfig

-- | The ARN of the SQS queue specified as the target for the dead-letter
--   queue.
deadLetterConfig_arn :: Lens' DeadLetterConfig (Maybe Text)

-- | The custom parameters to be used when the target is an Amazon ECS
--   task.
--   
--   <i>See:</i> <a>newEcsParameters</a> smart constructor.
data EcsParameters
EcsParameters' :: Maybe Text -> Maybe PropagateTags -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [PlacementConstraint] -> Maybe [PlacementStrategy] -> Maybe LaunchType -> Maybe [CapacityProviderStrategyItem] -> Maybe Natural -> Maybe NetworkConfiguration -> Maybe [Tag] -> Maybe Bool -> Text -> EcsParameters

-- | Specifies an ECS task group for the task. The maximum length is 255
--   characters.
[$sel:group':EcsParameters'] :: EcsParameters -> Maybe Text

-- | Specifies whether to propagate the tags from the task definition to
--   the task. If no value is specified, the tags are not propagated. Tags
--   can only be propagated to the task during task creation. To add tags
--   to a task after task creation, use the TagResource API action.
[$sel:propagateTags:EcsParameters'] :: EcsParameters -> Maybe PropagateTags

-- | Specifies the platform version for the task. Specify only the numeric
--   portion of the platform version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
[$sel:platformVersion:EcsParameters'] :: EcsParameters -> Maybe Text

-- | Specifies whether to enable Amazon ECS managed tags for the task. For
--   more information, see <a>Tagging Your Amazon ECS Resources</a> in the
--   Amazon Elastic Container Service Developer Guide.
[$sel:enableECSManagedTags:EcsParameters'] :: EcsParameters -> Maybe Bool

-- | The reference ID to use for the task.
[$sel:referenceId:EcsParameters'] :: EcsParameters -> Maybe Text

-- | An array of placement constraint objects to use for the task. You can
--   specify up to 10 constraints per task (including constraints in the
--   task definition and those specified at runtime).
[$sel:placementConstraints:EcsParameters'] :: EcsParameters -> Maybe [PlacementConstraint]

-- | The placement strategy objects to use for the task. You can specify a
--   maximum of five strategy rules per task.
[$sel:placementStrategy:EcsParameters'] :: EcsParameters -> Maybe [PlacementStrategy]

-- | Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
[$sel:launchType:EcsParameters'] :: EcsParameters -> Maybe LaunchType

-- | The capacity provider strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
[$sel:capacityProviderStrategy:EcsParameters'] :: EcsParameters -> Maybe [CapacityProviderStrategyItem]

-- | The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
[$sel:taskCount:EcsParameters'] :: EcsParameters -> Maybe Natural

-- | Use this structure if the Amazon ECS task uses the <tt>awsvpc</tt>
--   network mode. This structure specifies the VPC subnets and security
--   groups associated with the task, and whether a public IP address is to
--   be used. This structure is required if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt> because the <tt>awsvpc</tt> mode is required for
--   Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
[$sel:networkConfiguration:EcsParameters'] :: EcsParameters -> Maybe NetworkConfiguration

-- | The metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
[$sel:tags:EcsParameters'] :: EcsParameters -> Maybe [Tag]

-- | Whether or not to enable the execute command functionality for the
--   containers in this task. If true, this enables execute command
--   functionality on all containers in the task.
[$sel:enableExecuteCommand:EcsParameters'] :: EcsParameters -> Maybe Bool

-- | The ARN of the task definition to use if the event target is an Amazon
--   ECS task.
[$sel:taskDefinitionArn:EcsParameters'] :: EcsParameters -> Text

-- | Create a value of <a>EcsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':EcsParameters'</a>, <a>ecsParameters_group</a> -
--   Specifies an ECS task group for the task. The maximum length is 255
--   characters.
--   
--   <a>$sel:propagateTags:EcsParameters'</a>,
--   <a>ecsParameters_propagateTags</a> - Specifies whether to propagate
--   the tags from the task definition to the task. If no value is
--   specified, the tags are not propagated. Tags can only be propagated to
--   the task during task creation. To add tags to a task after task
--   creation, use the TagResource API action.
--   
--   <a>$sel:platformVersion:EcsParameters'</a>,
--   <a>ecsParameters_platformVersion</a> - Specifies the platform version
--   for the task. Specify only the numeric portion of the platform
--   version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:enableECSManagedTags:EcsParameters'</a>,
--   <a>ecsParameters_enableECSManagedTags</a> - Specifies whether to
--   enable Amazon ECS managed tags for the task. For more information, see
--   <a>Tagging Your Amazon ECS Resources</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:referenceId:EcsParameters'</a>,
--   <a>ecsParameters_referenceId</a> - The reference ID to use for the
--   task.
--   
--   <a>$sel:placementConstraints:EcsParameters'</a>,
--   <a>ecsParameters_placementConstraints</a> - An array of placement
--   constraint objects to use for the task. You can specify up to 10
--   constraints per task (including constraints in the task definition and
--   those specified at runtime).
--   
--   <a>$sel:placementStrategy:EcsParameters'</a>,
--   <a>ecsParameters_placementStrategy</a> - The placement strategy
--   objects to use for the task. You can specify a maximum of five
--   strategy rules per task.
--   
--   <a>$sel:launchType:EcsParameters'</a>, <a>ecsParameters_launchType</a>
--   - Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:capacityProviderStrategy:EcsParameters'</a>,
--   <a>ecsParameters_capacityProviderStrategy</a> - The capacity provider
--   strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
--   
--   <a>$sel:taskCount:EcsParameters'</a>, <a>ecsParameters_taskCount</a> -
--   The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
--   
--   <a>$sel:networkConfiguration:EcsParameters'</a>,
--   <a>ecsParameters_networkConfiguration</a> - Use this structure if the
--   Amazon ECS task uses the <tt>awsvpc</tt> network mode. This structure
--   specifies the VPC subnets and security groups associated with the
--   task, and whether a public IP address is to be used. This structure is
--   required if <tt>LaunchType</tt> is <tt>FARGATE</tt> because the
--   <tt>awsvpc</tt> mode is required for Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
--   
--   <a>$sel:tags:EcsParameters'</a>, <a>ecsParameters_tags</a> - The
--   metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
--   
--   <a>$sel:enableExecuteCommand:EcsParameters'</a>,
--   <a>ecsParameters_enableExecuteCommand</a> - Whether or not to enable
--   the execute command functionality for the containers in this task. If
--   true, this enables execute command functionality on all containers in
--   the task.
--   
--   <a>$sel:taskDefinitionArn:EcsParameters'</a>,
--   <a>ecsParameters_taskDefinitionArn</a> - The ARN of the task
--   definition to use if the event target is an Amazon ECS task.
newEcsParameters :: Text -> EcsParameters

-- | Specifies an ECS task group for the task. The maximum length is 255
--   characters.
ecsParameters_group :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to propagate the tags from the task definition to
--   the task. If no value is specified, the tags are not propagated. Tags
--   can only be propagated to the task during task creation. To add tags
--   to a task after task creation, use the TagResource API action.
ecsParameters_propagateTags :: Lens' EcsParameters (Maybe PropagateTags)

-- | Specifies the platform version for the task. Specify only the numeric
--   portion of the platform version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
ecsParameters_platformVersion :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to enable Amazon ECS managed tags for the task. For
--   more information, see <a>Tagging Your Amazon ECS Resources</a> in the
--   Amazon Elastic Container Service Developer Guide.
ecsParameters_enableECSManagedTags :: Lens' EcsParameters (Maybe Bool)

-- | The reference ID to use for the task.
ecsParameters_referenceId :: Lens' EcsParameters (Maybe Text)

-- | An array of placement constraint objects to use for the task. You can
--   specify up to 10 constraints per task (including constraints in the
--   task definition and those specified at runtime).
ecsParameters_placementConstraints :: Lens' EcsParameters (Maybe [PlacementConstraint])

-- | The placement strategy objects to use for the task. You can specify a
--   maximum of five strategy rules per task.
ecsParameters_placementStrategy :: Lens' EcsParameters (Maybe [PlacementStrategy])

-- | Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
ecsParameters_launchType :: Lens' EcsParameters (Maybe LaunchType)

-- | The capacity provider strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
ecsParameters_capacityProviderStrategy :: Lens' EcsParameters (Maybe [CapacityProviderStrategyItem])

-- | The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
ecsParameters_taskCount :: Lens' EcsParameters (Maybe Natural)

-- | Use this structure if the Amazon ECS task uses the <tt>awsvpc</tt>
--   network mode. This structure specifies the VPC subnets and security
--   groups associated with the task, and whether a public IP address is to
--   be used. This structure is required if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt> because the <tt>awsvpc</tt> mode is required for
--   Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
ecsParameters_networkConfiguration :: Lens' EcsParameters (Maybe NetworkConfiguration)

-- | The metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
ecsParameters_tags :: Lens' EcsParameters (Maybe [Tag])

-- | Whether or not to enable the execute command functionality for the
--   containers in this task. If true, this enables execute command
--   functionality on all containers in the task.
ecsParameters_enableExecuteCommand :: Lens' EcsParameters (Maybe Bool)

-- | The ARN of the task definition to use if the event target is an Amazon
--   ECS task.
ecsParameters_taskDefinitionArn :: Lens' EcsParameters Text

-- | An event bus receives events from a source and routes them to rules
--   associated with that event bus. Your account's default event bus
--   receives events from Amazon Web Services services. A custom event bus
--   can receive events from your custom applications and services. A
--   partner event bus receives events from an event source created by an
--   SaaS partner. These events come from the partners services or
--   applications.
--   
--   <i>See:</i> <a>newEventBus</a> smart constructor.
data EventBus
EventBus' :: Maybe Text -> Maybe Text -> Maybe Text -> EventBus

-- | The ARN of the event bus.
[$sel:arn:EventBus'] :: EventBus -> Maybe Text

-- | The name of the event bus.
[$sel:name:EventBus'] :: EventBus -> Maybe Text

-- | The permissions policy of the event bus, describing which other Amazon
--   Web Services accounts can write events to this event bus.
[$sel:policy:EventBus'] :: EventBus -> Maybe Text

-- | Create a value of <a>EventBus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:EventBus'</a>, <a>eventBus_arn</a> - The ARN of the event
--   bus.
--   
--   <a>$sel:name:EventBus'</a>, <a>eventBus_name</a> - The name of the
--   event bus.
--   
--   <a>$sel:policy:EventBus'</a>, <a>eventBus_policy</a> - The permissions
--   policy of the event bus, describing which other Amazon Web Services
--   accounts can write events to this event bus.
newEventBus :: EventBus

-- | The ARN of the event bus.
eventBus_arn :: Lens' EventBus (Maybe Text)

-- | The name of the event bus.
eventBus_name :: Lens' EventBus (Maybe Text)

-- | The permissions policy of the event bus, describing which other Amazon
--   Web Services accounts can write events to this event bus.
eventBus_policy :: Lens' EventBus (Maybe Text)

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> EventSource

-- | The date and time the event source was created.
[$sel:creationTime:EventSource'] :: EventSource -> Maybe POSIX

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
[$sel:state:EventSource'] :: EventSource -> Maybe EventSourceState

-- | The ARN of the event source.
[$sel:arn:EventSource'] :: EventSource -> Maybe Text

-- | The name of the partner that created the event source.
[$sel:createdBy:EventSource'] :: EventSource -> Maybe Text

-- | The name of the event source.
[$sel:name:EventSource'] :: EventSource -> Maybe Text

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
[$sel:expirationTime:EventSource'] :: EventSource -> Maybe POSIX

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:EventSource'</a>, <a>eventSource_creationTime</a>
--   - The date and time the event source was created.
--   
--   <a>$sel:state:EventSource'</a>, <a>eventSource_state</a> - The state
--   of the event source. If it is ACTIVE, you have already created a
--   matching event bus for this event source, and that event bus is
--   active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
--   
--   <a>$sel:arn:EventSource'</a>, <a>eventSource_arn</a> - The ARN of the
--   event source.
--   
--   <a>$sel:createdBy:EventSource'</a>, <a>eventSource_createdBy</a> - The
--   name of the partner that created the event source.
--   
--   <a>$sel:name:EventSource'</a>, <a>eventSource_name</a> - The name of
--   the event source.
--   
--   <a>$sel:expirationTime:EventSource'</a>,
--   <a>eventSource_expirationTime</a> - The date and time that the event
--   source will expire, if the Amazon Web Services account doesn't create
--   a matching event bus for it.
newEventSource :: EventSource

-- | The date and time the event source was created.
eventSource_creationTime :: Lens' EventSource (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
eventSource_state :: Lens' EventSource (Maybe EventSourceState)

-- | The ARN of the event source.
eventSource_arn :: Lens' EventSource (Maybe Text)

-- | The name of the partner that created the event source.
eventSource_createdBy :: Lens' EventSource (Maybe Text)

-- | The name of the event source.
eventSource_name :: Lens' EventSource (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
eventSource_expirationTime :: Lens' EventSource (Maybe UTCTime)

-- | These are custom parameter to be used when the target is an API
--   Gateway REST APIs or EventBridge ApiDestinations. In the latter case,
--   these are merged with any InvocationParameters specified on the
--   Connection, with any values from the Connection taking precedence.
--   
--   <i>See:</i> <a>newHttpParameters</a> smart constructor.
data HttpParameters
HttpParameters' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> HttpParameters

-- | The path parameter values to be used to populate API Gateway REST API
--   or EventBridge ApiDestination path wildcards ("*").
[$sel:pathParameterValues:HttpParameters'] :: HttpParameters -> Maybe [Text]

-- | The query string keys/values that need to be sent as part of request
--   invoking the API Gateway REST API or EventBridge ApiDestination.
[$sel:queryStringParameters:HttpParameters'] :: HttpParameters -> Maybe (HashMap Text Text)

-- | The headers that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
[$sel:headerParameters:HttpParameters'] :: HttpParameters -> Maybe (HashMap Text Text)

-- | Create a value of <a>HttpParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathParameterValues:HttpParameters'</a>,
--   <a>httpParameters_pathParameterValues</a> - The path parameter values
--   to be used to populate API Gateway REST API or EventBridge
--   ApiDestination path wildcards ("*").
--   
--   <a>$sel:queryStringParameters:HttpParameters'</a>,
--   <a>httpParameters_queryStringParameters</a> - The query string
--   keys/values that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
--   
--   <a>$sel:headerParameters:HttpParameters'</a>,
--   <a>httpParameters_headerParameters</a> - The headers that need to be
--   sent as part of request invoking the API Gateway REST API or
--   EventBridge ApiDestination.
newHttpParameters :: HttpParameters

-- | The path parameter values to be used to populate API Gateway REST API
--   or EventBridge ApiDestination path wildcards ("*").
httpParameters_pathParameterValues :: Lens' HttpParameters (Maybe [Text])

-- | The query string keys/values that need to be sent as part of request
--   invoking the API Gateway REST API or EventBridge ApiDestination.
httpParameters_queryStringParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))

-- | The headers that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
httpParameters_headerParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))

-- | Contains the parameters needed for you to provide custom input to a
--   target based on one or more pieces of data extracted from the event.
--   
--   <i>See:</i> <a>newInputTransformer</a> smart constructor.
data InputTransformer
InputTransformer' :: Maybe (HashMap Text Text) -> Text -> InputTransformer

-- | Map of JSON paths to be extracted from the event. You can then insert
--   these in the template in <tt>InputTemplate</tt> to produce the output
--   you want to be sent to the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
[$sel:inputPathsMap:InputTransformer'] :: InputTransformer -> Maybe (HashMap Text Text)

-- | Input template where you specify placeholders that will be filled with
--   the values of the keys from <tt>InputPathsMap</tt> to customize the
--   data sent to the target. Enclose each <tt>InputPathsMaps</tt> value in
--   brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
[$sel:inputTemplate:InputTransformer'] :: InputTransformer -> Text

-- | Create a value of <a>InputTransformer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPathsMap:InputTransformer'</a>,
--   <a>inputTransformer_inputPathsMap</a> - Map of JSON paths to be
--   extracted from the event. You can then insert these in the template in
--   <tt>InputTemplate</tt> to produce the output you want to be sent to
--   the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
--   
--   <a>$sel:inputTemplate:InputTransformer'</a>,
--   <a>inputTransformer_inputTemplate</a> - Input template where you
--   specify placeholders that will be filled with the values of the keys
--   from <tt>InputPathsMap</tt> to customize the data sent to the target.
--   Enclose each <tt>InputPathsMaps</tt> value in brackets:
--   &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
newInputTransformer :: Text -> InputTransformer

-- | Map of JSON paths to be extracted from the event. You can then insert
--   these in the template in <tt>InputTemplate</tt> to produce the output
--   you want to be sent to the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
inputTransformer_inputPathsMap :: Lens' InputTransformer (Maybe (HashMap Text Text))

-- | Input template where you specify placeholders that will be filled with
--   the values of the keys from <tt>InputPathsMap</tt> to customize the
--   data sent to the target. Enclose each <tt>InputPathsMaps</tt> value in
--   brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
inputTransformer_inputTemplate :: Lens' InputTransformer Text

-- | This object enables you to specify a JSON path to extract from the
--   event and use as the partition key for the Amazon Kinesis data stream,
--   so that you can control the shard to which the event goes. If you do
--   not include this parameter, the default is to use the <tt>eventId</tt>
--   as the partition key.
--   
--   <i>See:</i> <a>newKinesisParameters</a> smart constructor.
data KinesisParameters
KinesisParameters' :: Text -> KinesisParameters

-- | The JSON path to be extracted from the event and used as the partition
--   key. For more information, see <a>Amazon Kinesis Streams Key
--   Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
[$sel:partitionKeyPath:KinesisParameters'] :: KinesisParameters -> Text

-- | Create a value of <a>KinesisParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionKeyPath:KinesisParameters'</a>,
--   <a>kinesisParameters_partitionKeyPath</a> - The JSON path to be
--   extracted from the event and used as the partition key. For more
--   information, see <a>Amazon Kinesis Streams Key Concepts</a> in the
--   <i>Amazon Kinesis Streams Developer Guide</i>.
newKinesisParameters :: Text -> KinesisParameters

-- | The JSON path to be extracted from the event and used as the partition
--   key. For more information, see <a>Amazon Kinesis Streams Key
--   Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
kinesisParameters_partitionKeyPath :: Lens' KinesisParameters Text

-- | This structure specifies the network configuration for an ECS task.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AwsVpcConfiguration -> NetworkConfiguration

-- | Use this structure to specify the VPC subnets and security groups for
--   the task, and whether a public IP address is to be used. This
--   structure is relevant only for ECS tasks that use the <tt>awsvpc</tt>
--   network mode.
[$sel:awsvpcConfiguration:NetworkConfiguration'] :: NetworkConfiguration -> Maybe AwsVpcConfiguration

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsvpcConfiguration:NetworkConfiguration'</a>,
--   <a>networkConfiguration_awsvpcConfiguration</a> - Use this structure
--   to specify the VPC subnets and security groups for the task, and
--   whether a public IP address is to be used. This structure is relevant
--   only for ECS tasks that use the <tt>awsvpc</tt> network mode.
newNetworkConfiguration :: NetworkConfiguration

-- | Use this structure to specify the VPC subnets and security groups for
--   the task, and whether a public IP address is to be used. This
--   structure is relevant only for ECS tasks that use the <tt>awsvpc</tt>
--   network mode.
networkConfiguration_awsvpcConfiguration :: Lens' NetworkConfiguration (Maybe AwsVpcConfiguration)

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newPartnerEventSource</a> smart constructor.
data PartnerEventSource
PartnerEventSource' :: Maybe Text -> Maybe Text -> PartnerEventSource

-- | The ARN of the partner event source.
[$sel:arn:PartnerEventSource'] :: PartnerEventSource -> Maybe Text

-- | The name of the partner event source.
[$sel:name:PartnerEventSource'] :: PartnerEventSource -> Maybe Text

-- | Create a value of <a>PartnerEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PartnerEventSource'</a>, <a>partnerEventSource_arn</a> -
--   The ARN of the partner event source.
--   
--   <a>$sel:name:PartnerEventSource'</a>, <a>partnerEventSource_name</a> -
--   The name of the partner event source.
newPartnerEventSource :: PartnerEventSource

-- | The ARN of the partner event source.
partnerEventSource_arn :: Lens' PartnerEventSource (Maybe Text)

-- | The name of the partner event source.
partnerEventSource_name :: Lens' PartnerEventSource (Maybe Text)

-- | The Amazon Web Services account that a partner event source has been
--   offered to.
--   
--   <i>See:</i> <a>newPartnerEventSourceAccount</a> smart constructor.
data PartnerEventSourceAccount
PartnerEventSourceAccount' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe POSIX -> PartnerEventSourceAccount

-- | The date and time the event source was created.
[$sel:creationTime:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe POSIX

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
[$sel:state:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe EventSourceState

-- | The Amazon Web Services account ID that the partner event source was
--   offered to.
[$sel:account:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe Text

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
[$sel:expirationTime:PartnerEventSourceAccount'] :: PartnerEventSourceAccount -> Maybe POSIX

-- | Create a value of <a>PartnerEventSourceAccount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_creationTime</a> - The date and time the
--   event source was created.
--   
--   <a>$sel:state:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_state</a> - The state of the event
--   source. If it is ACTIVE, you have already created a matching event bus
--   for this event source, and that event bus is active. If it is PENDING,
--   either you haven't yet created a matching event bus, or that event bus
--   is deactivated. If it is DELETED, you have created a matching event
--   bus, but the event source has since been deleted.
--   
--   <a>$sel:account:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_account</a> - The Amazon Web Services
--   account ID that the partner event source was offered to.
--   
--   <a>$sel:expirationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_expirationTime</a> - The date and time
--   that the event source will expire, if the Amazon Web Services account
--   doesn't create a matching event bus for it.
newPartnerEventSourceAccount :: PartnerEventSourceAccount

-- | The date and time the event source was created.
partnerEventSourceAccount_creationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
partnerEventSourceAccount_state :: Lens' PartnerEventSourceAccount (Maybe EventSourceState)

-- | The Amazon Web Services account ID that the partner event source was
--   offered to.
partnerEventSourceAccount_account :: Lens' PartnerEventSourceAccount (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
partnerEventSourceAccount_expirationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)

-- | An object representing a constraint on task placement. To learn more,
--   see <a>Task Placement Constraints</a> in the Amazon Elastic Container
--   Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementConstraint</a> smart constructor.
data PlacementConstraint
PlacementConstraint' :: Maybe Text -> Maybe PlacementConstraintType -> PlacementConstraint

-- | A cluster query language expression to apply to the constraint. You
--   cannot specify an expression if the constraint type is
--   <tt>distinctInstance</tt>. To learn more, see <a>Cluster Query
--   Language</a> in the Amazon Elastic Container Service Developer Guide.
[$sel:expression:PlacementConstraint'] :: PlacementConstraint -> Maybe Text

-- | The type of constraint. Use distinctInstance to ensure that each task
--   in a particular group is running on a different container instance.
--   Use memberOf to restrict the selection to a group of valid candidates.
[$sel:type':PlacementConstraint'] :: PlacementConstraint -> Maybe PlacementConstraintType

-- | Create a value of <a>PlacementConstraint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:PlacementConstraint'</a>,
--   <a>placementConstraint_expression</a> - A cluster query language
--   expression to apply to the constraint. You cannot specify an
--   expression if the constraint type is <tt>distinctInstance</tt>. To
--   learn more, see <a>Cluster Query Language</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:type':PlacementConstraint'</a>,
--   <a>placementConstraint_type</a> - The type of constraint. Use
--   distinctInstance to ensure that each task in a particular group is
--   running on a different container instance. Use memberOf to restrict
--   the selection to a group of valid candidates.
newPlacementConstraint :: PlacementConstraint

-- | A cluster query language expression to apply to the constraint. You
--   cannot specify an expression if the constraint type is
--   <tt>distinctInstance</tt>. To learn more, see <a>Cluster Query
--   Language</a> in the Amazon Elastic Container Service Developer Guide.
placementConstraint_expression :: Lens' PlacementConstraint (Maybe Text)

-- | The type of constraint. Use distinctInstance to ensure that each task
--   in a particular group is running on a different container instance.
--   Use memberOf to restrict the selection to a group of valid candidates.
placementConstraint_type :: Lens' PlacementConstraint (Maybe PlacementConstraintType)

-- | The task placement strategy for a task or service. To learn more, see
--   <a>Task Placement Strategies</a> in the Amazon Elastic Container
--   Service Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementStrategy</a> smart constructor.
data PlacementStrategy
PlacementStrategy' :: Maybe Text -> Maybe PlacementStrategyType -> PlacementStrategy

-- | The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
[$sel:field:PlacementStrategy'] :: PlacementStrategy -> Maybe Text

-- | The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
[$sel:type':PlacementStrategy'] :: PlacementStrategy -> Maybe PlacementStrategyType

-- | Create a value of <a>PlacementStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:PlacementStrategy'</a>, <a>placementStrategy_field</a> -
--   The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
--   
--   <a>$sel:type':PlacementStrategy'</a>, <a>placementStrategy_type</a> -
--   The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
newPlacementStrategy :: PlacementStrategy

-- | The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
placementStrategy_field :: Lens' PlacementStrategy (Maybe Text)

-- | The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
placementStrategy_type :: Lens' PlacementStrategy (Maybe PlacementStrategyType)

-- | Represents an event to be submitted.
--   
--   <i>See:</i> <a>newPutEventsRequestEntry</a> smart constructor.
data PutEventsRequestEntry
PutEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PutEventsRequestEntry

-- | The time stamp of the event, per <a>RFC3339</a>. If no time stamp is
--   provided, the time stamp of the <a>PutEvents</a> call is used.
[$sel:time:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe POSIX

-- | Free-form string used to decide what fields to expect in the event
--   detail.
[$sel:detailType:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
[$sel:resources:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe [Text]

-- | The name or ARN of the event bus to receive the event. Only the rules
--   that are associated with this event bus are used to match the event.
--   If you omit this, the default event bus is used.
[$sel:eventBusName:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | The source of the event.
[$sel:source:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that
--   contains the trace-id associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
[$sel:traceHeader:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
[$sel:detail:PutEventsRequestEntry'] :: PutEventsRequestEntry -> Maybe Text

-- | Create a value of <a>PutEventsRequestEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_time</a> - The time stamp of the event, per
--   <a>RFC3339</a>. If no time stamp is provided, the time stamp of the
--   <a>PutEvents</a> call is used.
--   
--   <a>$sel:detailType:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detailType</a> - Free-form string used to
--   decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:eventBusName:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_eventBusName</a> - The name or ARN of the
--   event bus to receive the event. Only the rules that are associated
--   with this event bus are used to match the event. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:source:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_source</a> - The source of the event.
--   
--   <a>$sel:traceHeader:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_traceHeader</a> - An X-Ray trade header,
--   which is an http header (X-Amzn-Trace-Id) that contains the trace-id
--   associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
--   
--   <a>$sel:detail:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detail</a> - A valid JSON string. There is no
--   other schema imposed. The JSON string may contain fields and nested
--   subobjects.
newPutEventsRequestEntry :: PutEventsRequestEntry

-- | The time stamp of the event, per <a>RFC3339</a>. If no time stamp is
--   provided, the time stamp of the <a>PutEvents</a> call is used.
putEventsRequestEntry_time :: Lens' PutEventsRequestEntry (Maybe UTCTime)

-- | Free-form string used to decide what fields to expect in the event
--   detail.
putEventsRequestEntry_detailType :: Lens' PutEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putEventsRequestEntry_resources :: Lens' PutEventsRequestEntry (Maybe [Text])

-- | The name or ARN of the event bus to receive the event. Only the rules
--   that are associated with this event bus are used to match the event.
--   If you omit this, the default event bus is used.
putEventsRequestEntry_eventBusName :: Lens' PutEventsRequestEntry (Maybe Text)

-- | The source of the event.
putEventsRequestEntry_source :: Lens' PutEventsRequestEntry (Maybe Text)

-- | An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that
--   contains the trace-id associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
putEventsRequestEntry_traceHeader :: Lens' PutEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putEventsRequestEntry_detail :: Lens' PutEventsRequestEntry (Maybe Text)

-- | Represents an event that failed to be submitted.
--   
--   <i>See:</i> <a>newPutEventsResultEntry</a> smart constructor.
data PutEventsResultEntry
PutEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutEventsResultEntry

-- | The error code that indicates why the event submission failed.
[$sel:errorCode:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | The error message that explains why the event submission failed.
[$sel:errorMessage:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | The ID of the event.
[$sel:eventId:PutEventsResultEntry'] :: PutEventsResultEntry -> Maybe Text

-- | Create a value of <a>PutEventsResultEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorCode</a> - The error code that indicates
--   why the event submission failed.
--   
--   <a>$sel:errorMessage:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorMessage</a> - The error message that
--   explains why the event submission failed.
--   
--   <a>$sel:eventId:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_eventId</a> - The ID of the event.
newPutEventsResultEntry :: PutEventsResultEntry

-- | The error code that indicates why the event submission failed.
putEventsResultEntry_errorCode :: Lens' PutEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putEventsResultEntry_errorMessage :: Lens' PutEventsResultEntry (Maybe Text)

-- | The ID of the event.
putEventsResultEntry_eventId :: Lens' PutEventsResultEntry (Maybe Text)

-- | The details about an event generated by an SaaS partner.
--   
--   <i>See:</i> <a>newPutPartnerEventsRequestEntry</a> smart constructor.
data PutPartnerEventsRequestEntry
PutPartnerEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> PutPartnerEventsRequestEntry

-- | The date and time of the event.
[$sel:time:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe POSIX

-- | A free-form string used to decide what fields to expect in the event
--   detail.
[$sel:detailType:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
[$sel:resources:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe [Text]

-- | The event source that is generating the entry.
[$sel:source:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
[$sel:detail:PutPartnerEventsRequestEntry'] :: PutPartnerEventsRequestEntry -> Maybe Text

-- | Create a value of <a>PutPartnerEventsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_time</a> - The date and time of the
--   event.
--   
--   <a>$sel:detailType:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detailType</a> - A free-form string
--   used to decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:source:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_source</a> - The event source that is
--   generating the entry.
--   
--   <a>$sel:detail:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detail</a> - A valid JSON string.
--   There is no other schema imposed. The JSON string may contain fields
--   and nested subobjects.
newPutPartnerEventsRequestEntry :: PutPartnerEventsRequestEntry

-- | The date and time of the event.
putPartnerEventsRequestEntry_time :: Lens' PutPartnerEventsRequestEntry (Maybe UTCTime)

-- | A free-form string used to decide what fields to expect in the event
--   detail.
putPartnerEventsRequestEntry_detailType :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putPartnerEventsRequestEntry_resources :: Lens' PutPartnerEventsRequestEntry (Maybe [Text])

-- | The event source that is generating the entry.
putPartnerEventsRequestEntry_source :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putPartnerEventsRequestEntry_detail :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | Represents an event that a partner tried to generate, but failed.
--   
--   <i>See:</i> <a>newPutPartnerEventsResultEntry</a> smart constructor.
data PutPartnerEventsResultEntry
PutPartnerEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutPartnerEventsResultEntry

-- | The error code that indicates why the event submission failed.
[$sel:errorCode:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | The error message that explains why the event submission failed.
[$sel:errorMessage:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | The ID of the event.
[$sel:eventId:PutPartnerEventsResultEntry'] :: PutPartnerEventsResultEntry -> Maybe Text

-- | Create a value of <a>PutPartnerEventsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorCode</a> - The error code that
--   indicates why the event submission failed.
--   
--   <a>$sel:errorMessage:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorMessage</a> - The error message
--   that explains why the event submission failed.
--   
--   <a>$sel:eventId:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_eventId</a> - The ID of the event.
newPutPartnerEventsResultEntry :: PutPartnerEventsResultEntry

-- | The error code that indicates why the event submission failed.
putPartnerEventsResultEntry_errorCode :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putPartnerEventsResultEntry_errorMessage :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The ID of the event.
putPartnerEventsResultEntry_eventId :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | Represents a target that failed to be added to a rule.
--   
--   <i>See:</i> <a>newPutTargetsResultEntry</a> smart constructor.
data PutTargetsResultEntry
PutTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutTargetsResultEntry

-- | The ID of the target.
[$sel:targetId:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | The error code that indicates why the target addition failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
[$sel:errorCode:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | The error message that explains why the target addition failed.
[$sel:errorMessage:PutTargetsResultEntry'] :: PutTargetsResultEntry -> Maybe Text

-- | Create a value of <a>PutTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorCode</a> - The error code that indicates
--   why the target addition failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target addition failed.
newPutTargetsResultEntry :: PutTargetsResultEntry

-- | The ID of the target.
putTargetsResultEntry_targetId :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target addition failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
putTargetsResultEntry_errorCode :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target addition failed.
putTargetsResultEntry_errorMessage :: Lens' PutTargetsResultEntry (Maybe Text)

-- | These are custom parameters to be used when the target is a Amazon
--   Redshift cluster to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <i>See:</i> <a>newRedshiftDataParameters</a> smart constructor.
data RedshiftDataParameters
RedshiftDataParameters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> RedshiftDataParameters

-- | The database user name. Required when authenticating using temporary
--   credentials.
[$sel:dbUser:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | The name or ARN of the secret that enables access to the database.
--   Required when authenticating using Amazon Web Services Secrets
--   Manager.
[$sel:secretManagerArn:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | The name of the SQL statement. You can name the SQL statement when you
--   create it to identify the query.
[$sel:statementName:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Text

-- | Indicates whether to send an event back to EventBridge after the SQL
--   statement runs.
[$sel:withEvent:RedshiftDataParameters'] :: RedshiftDataParameters -> Maybe Bool

-- | The name of the database. Required when authenticating using temporary
--   credentials.
[$sel:database:RedshiftDataParameters'] :: RedshiftDataParameters -> Text

-- | The SQL statement text to run.
[$sel:sql:RedshiftDataParameters'] :: RedshiftDataParameters -> Text

-- | Create a value of <a>RedshiftDataParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dbUser:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_dbUser</a> - The database user name.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:secretManagerArn:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_secretManagerArn</a> - The name or ARN of
--   the secret that enables access to the database. Required when
--   authenticating using Amazon Web Services Secrets Manager.
--   
--   <a>$sel:statementName:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_statementName</a> - The name of the SQL
--   statement. You can name the SQL statement when you create it to
--   identify the query.
--   
--   <a>$sel:withEvent:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_withEvent</a> - Indicates whether to send an
--   event back to EventBridge after the SQL statement runs.
--   
--   <a>$sel:database:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_database</a> - The name of the database.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:sql:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_sql</a> - The SQL statement text to run.
newRedshiftDataParameters :: Text -> Text -> RedshiftDataParameters

-- | The database user name. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_dbUser :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name or ARN of the secret that enables access to the database.
--   Required when authenticating using Amazon Web Services Secrets
--   Manager.
redshiftDataParameters_secretManagerArn :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name of the SQL statement. You can name the SQL statement when you
--   create it to identify the query.
redshiftDataParameters_statementName :: Lens' RedshiftDataParameters (Maybe Text)

-- | Indicates whether to send an event back to EventBridge after the SQL
--   statement runs.
redshiftDataParameters_withEvent :: Lens' RedshiftDataParameters (Maybe Bool)

-- | The name of the database. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_database :: Lens' RedshiftDataParameters Text

-- | The SQL statement text to run.
redshiftDataParameters_sql :: Lens' RedshiftDataParameters Text

-- | Represents a target that failed to be removed from a rule.
--   
--   <i>See:</i> <a>newRemoveTargetsResultEntry</a> smart constructor.
data RemoveTargetsResultEntry
RemoveTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> RemoveTargetsResultEntry

-- | The ID of the target.
[$sel:targetId:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | The error code that indicates why the target removal failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
[$sel:errorCode:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | The error message that explains why the target removal failed.
[$sel:errorMessage:RemoveTargetsResultEntry'] :: RemoveTargetsResultEntry -> Maybe Text

-- | Create a value of <a>RemoveTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorCode</a> - The error code that
--   indicates why the target removal failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target removal failed.
newRemoveTargetsResultEntry :: RemoveTargetsResultEntry

-- | The ID of the target.
removeTargetsResultEntry_targetId :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target removal failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
removeTargetsResultEntry_errorCode :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target removal failed.
removeTargetsResultEntry_errorMessage :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | A <tt>Replay</tt> object that contains details about a replay.
--   
--   <i>See:</i> <a>newReplay</a> smart constructor.
data Replay
Replay' :: Maybe Text -> Maybe ReplayState -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Replay

-- | The ARN of the archive to replay event from.
[$sel:eventSourceArn:Replay'] :: Replay -> Maybe Text

-- | The current state of the replay.
[$sel:state:Replay'] :: Replay -> Maybe ReplayState

-- | A time stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
[$sel:eventEndTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the replay started.
[$sel:replayStartTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the replay completed.
[$sel:replayEndTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time that the last event was replayed.
[$sel:eventLastReplayedTime:Replay'] :: Replay -> Maybe POSIX

-- | A time stamp for the time to start replaying events. This is
--   determined by the time in the event as described in <a>Time</a>.
[$sel:eventStartTime:Replay'] :: Replay -> Maybe POSIX

-- | The name of the replay.
[$sel:replayName:Replay'] :: Replay -> Maybe Text

-- | A description of why the replay is in the current state.
[$sel:stateReason:Replay'] :: Replay -> Maybe Text

-- | Create a value of <a>Replay</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:Replay'</a>, <a>replay_eventSourceArn</a> - The
--   ARN of the archive to replay event from.
--   
--   <a>$sel:state:Replay'</a>, <a>replay_state</a> - The current state of
--   the replay.
--   
--   <a>$sel:eventEndTime:Replay'</a>, <a>replay_eventEndTime</a> - A time
--   stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
--   
--   <a>$sel:replayStartTime:Replay'</a>, <a>replay_replayStartTime</a> - A
--   time stamp for the time that the replay started.
--   
--   <a>$sel:replayEndTime:Replay'</a>, <a>replay_replayEndTime</a> - A
--   time stamp for the time that the replay completed.
--   
--   <a>$sel:eventLastReplayedTime:Replay'</a>,
--   <a>replay_eventLastReplayedTime</a> - A time stamp for the time that
--   the last event was replayed.
--   
--   <a>$sel:eventStartTime:Replay'</a>, <a>replay_eventStartTime</a> - A
--   time stamp for the time to start replaying events. This is determined
--   by the time in the event as described in <a>Time</a>.
--   
--   <a>$sel:replayName:Replay'</a>, <a>replay_replayName</a> - The name of
--   the replay.
--   
--   <a>$sel:stateReason:Replay'</a>, <a>replay_stateReason</a> - A
--   description of why the replay is in the current state.
newReplay :: Replay

-- | The ARN of the archive to replay event from.
replay_eventSourceArn :: Lens' Replay (Maybe Text)

-- | The current state of the replay.
replay_state :: Lens' Replay (Maybe ReplayState)

-- | A time stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
replay_eventEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay started.
replay_replayStartTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay completed.
replay_replayEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the last event was replayed.
replay_eventLastReplayedTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time to start replaying events. This is
--   determined by the time in the event as described in <a>Time</a>.
replay_eventStartTime :: Lens' Replay (Maybe UTCTime)

-- | The name of the replay.
replay_replayName :: Lens' Replay (Maybe Text)

-- | A description of why the replay is in the current state.
replay_stateReason :: Lens' Replay (Maybe Text)

-- | A <tt>ReplayDestination</tt> object that contains details about a
--   replay.
--   
--   <i>See:</i> <a>newReplayDestination</a> smart constructor.
data ReplayDestination
ReplayDestination' :: Maybe [Text] -> Text -> ReplayDestination

-- | A list of ARNs for rules to replay events to.
[$sel:filterArns:ReplayDestination'] :: ReplayDestination -> Maybe [Text]

-- | The ARN of the event bus to replay event to. You can replay events
--   only to the event bus specified to create the archive.
[$sel:arn:ReplayDestination'] :: ReplayDestination -> Text

-- | Create a value of <a>ReplayDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArns:ReplayDestination'</a>,
--   <a>replayDestination_filterArns</a> - A list of ARNs for rules to
--   replay events to.
--   
--   <a>$sel:arn:ReplayDestination'</a>, <a>replayDestination_arn</a> - The
--   ARN of the event bus to replay event to. You can replay events only to
--   the event bus specified to create the archive.
newReplayDestination :: Text -> ReplayDestination

-- | A list of ARNs for rules to replay events to.
replayDestination_filterArns :: Lens' ReplayDestination (Maybe [Text])

-- | The ARN of the event bus to replay event to. You can replay events
--   only to the event bus specified to create the archive.
replayDestination_arn :: Lens' ReplayDestination Text

-- | A <tt>RetryPolicy</tt> object that includes information about the
--   retry policy settings.
--   
--   <i>See:</i> <a>newRetryPolicy</a> smart constructor.
data RetryPolicy
RetryPolicy' :: Maybe Natural -> Maybe Natural -> RetryPolicy

-- | The maximum amount of time, in seconds, to continue to make retry
--   attempts.
[$sel:maximumEventAgeInSeconds:RetryPolicy'] :: RetryPolicy -> Maybe Natural

-- | The maximum number of retry attempts to make before the request fails.
--   Retry attempts continue until either the maximum number of attempts is
--   made or until the duration of the <tt>MaximumEventAgeInSeconds</tt> is
--   met.
[$sel:maximumRetryAttempts:RetryPolicy'] :: RetryPolicy -> Maybe Natural

-- | Create a value of <a>RetryPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:RetryPolicy'</a>,
--   <a>retryPolicy_maximumEventAgeInSeconds</a> - The maximum amount of
--   time, in seconds, to continue to make retry attempts.
--   
--   <a>$sel:maximumRetryAttempts:RetryPolicy'</a>,
--   <a>retryPolicy_maximumRetryAttempts</a> - The maximum number of retry
--   attempts to make before the request fails. Retry attempts continue
--   until either the maximum number of attempts is made or until the
--   duration of the <tt>MaximumEventAgeInSeconds</tt> is met.
newRetryPolicy :: RetryPolicy

-- | The maximum amount of time, in seconds, to continue to make retry
--   attempts.
retryPolicy_maximumEventAgeInSeconds :: Lens' RetryPolicy (Maybe Natural)

-- | The maximum number of retry attempts to make before the request fails.
--   Retry attempts continue until either the maximum number of attempts is
--   made or until the duration of the <tt>MaximumEventAgeInSeconds</tt> is
--   met.
retryPolicy_maximumRetryAttempts :: Lens' RetryPolicy (Maybe Natural)

-- | Contains information about a rule in Amazon EventBridge.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Rule

-- | The event pattern of the rule. For more information, see <a>Events and
--   Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
[$sel:eventPattern:Rule'] :: Rule -> Maybe Text

-- | The state of the rule.
[$sel:state:Rule'] :: Rule -> Maybe RuleState

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:arn:Rule'] :: Rule -> Maybe Text

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:Rule'] :: Rule -> Maybe Text

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
[$sel:scheduleExpression:Rule'] :: Rule -> Maybe Text

-- | The name of the rule.
[$sel:name:Rule'] :: Rule -> Maybe Text

-- | The description of the rule.
[$sel:description:Rule'] :: Rule -> Maybe Text

-- | If the rule was created on behalf of your account by an Amazon Web
--   Services service, this field displays the principal name of the
--   service that created the rule.
[$sel:managedBy:Rule'] :: Rule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the role that is used for target
--   invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
[$sel:roleArn:Rule'] :: Rule -> Maybe Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:Rule'</a>, <a>rule_eventPattern</a> - The event
--   pattern of the rule. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
--   
--   <a>$sel:state:Rule'</a>, <a>rule_state</a> - The state of the rule.
--   
--   <a>$sel:arn:Rule'</a>, <a>rule_arn</a> - The Amazon Resource Name
--   (ARN) of the rule.
--   
--   <a>$sel:eventBusName:Rule'</a>, <a>rule_eventBusName</a> - The name or
--   ARN of the event bus associated with the rule. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:scheduleExpression:Rule'</a>, <a>rule_scheduleExpression</a> -
--   The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
--   
--   <a>$sel:name:Rule'</a>, <a>rule_name</a> - The name of the rule.
--   
--   <a>$sel:description:Rule'</a>, <a>rule_description</a> - The
--   description of the rule.
--   
--   <a>$sel:managedBy:Rule'</a>, <a>rule_managedBy</a> - If the rule was
--   created on behalf of your account by an Amazon Web Services service,
--   this field displays the principal name of the service that created the
--   rule.
--   
--   <a>$sel:roleArn:Rule'</a>, <a>rule_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role that is used for target invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
newRule :: Rule

-- | The event pattern of the rule. For more information, see <a>Events and
--   Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
rule_eventPattern :: Lens' Rule (Maybe Text)

-- | The state of the rule.
rule_state :: Lens' Rule (Maybe RuleState)

-- | The Amazon Resource Name (ARN) of the rule.
rule_arn :: Lens' Rule (Maybe Text)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
rule_eventBusName :: Lens' Rule (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
rule_scheduleExpression :: Lens' Rule (Maybe Text)

-- | The name of the rule.
rule_name :: Lens' Rule (Maybe Text)

-- | The description of the rule.
rule_description :: Lens' Rule (Maybe Text)

-- | If the rule was created on behalf of your account by an Amazon Web
--   Services service, this field displays the principal name of the
--   service that created the rule.
rule_managedBy :: Lens' Rule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used for target
--   invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
rule_roleArn :: Lens' Rule (Maybe Text)

-- | This parameter contains the criteria (either InstanceIds or a tag)
--   used to specify which EC2 instances are to be sent the command.
--   
--   <i>See:</i> <a>newRunCommandParameters</a> smart constructor.
data RunCommandParameters
RunCommandParameters' :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Currently, we support including only one RunCommandTarget block, which
--   specifies either an array of InstanceIds or a tag.
[$sel:runCommandTargets:RunCommandParameters'] :: RunCommandParameters -> NonEmpty RunCommandTarget

-- | Create a value of <a>RunCommandParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandTargets:RunCommandParameters'</a>,
--   <a>runCommandParameters_runCommandTargets</a> - Currently, we support
--   including only one RunCommandTarget block, which specifies either an
--   array of InstanceIds or a tag.
newRunCommandParameters :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Currently, we support including only one RunCommandTarget block, which
--   specifies either an array of InstanceIds or a tag.
runCommandParameters_runCommandTargets :: Lens' RunCommandParameters (NonEmpty RunCommandTarget)

-- | Information about the EC2 instances that are to be sent the command,
--   specified as key-value pairs. Each <tt>RunCommandTarget</tt> block can
--   include only one key, but this key may specify multiple values.
--   
--   <i>See:</i> <a>newRunCommandTarget</a> smart constructor.
data RunCommandTarget
RunCommandTarget' :: Text -> NonEmpty Text -> RunCommandTarget

-- | Can be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
[$sel:key:RunCommandTarget'] :: RunCommandTarget -> Text

-- | If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
[$sel:values:RunCommandTarget'] :: RunCommandTarget -> NonEmpty Text

-- | Create a value of <a>RunCommandTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:RunCommandTarget'</a>, <a>runCommandTarget_key</a> - Can
--   be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
--   
--   <a>$sel:values:RunCommandTarget'</a>, <a>runCommandTarget_values</a> -
--   If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
newRunCommandTarget :: Text -> NonEmpty Text -> RunCommandTarget

-- | Can be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
runCommandTarget_key :: Lens' RunCommandTarget Text

-- | If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
runCommandTarget_values :: Lens' RunCommandTarget (NonEmpty Text)

-- | Name/Value pair of a parameter to start execution of a SageMaker Model
--   Building Pipeline.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameter</a> smart constructor.
data SageMakerPipelineParameter
SageMakerPipelineParameter' :: Text -> Text -> SageMakerPipelineParameter

-- | Name of parameter to start execution of a SageMaker Model Building
--   Pipeline.
[$sel:name:SageMakerPipelineParameter'] :: SageMakerPipelineParameter -> Text

-- | Value of parameter to start execution of a SageMaker Model Building
--   Pipeline.
[$sel:value:SageMakerPipelineParameter'] :: SageMakerPipelineParameter -> Text

-- | Create a value of <a>SageMakerPipelineParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_name</a> - Name of parameter to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   <a>$sel:value:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_value</a> - Value of parameter to start
--   execution of a SageMaker Model Building Pipeline.
newSageMakerPipelineParameter :: Text -> Text -> SageMakerPipelineParameter

-- | Name of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_name :: Lens' SageMakerPipelineParameter Text

-- | Value of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_value :: Lens' SageMakerPipelineParameter Text

-- | These are custom parameters to use when the target is a SageMaker
--   Model Building Pipeline that starts based on EventBridge events.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameters</a> smart constructor.
data SageMakerPipelineParameters
SageMakerPipelineParameters' :: Maybe [SageMakerPipelineParameter] -> SageMakerPipelineParameters

-- | List of Parameter names and values for SageMaker Model Building
--   Pipeline execution.
[$sel:pipelineParameterList:SageMakerPipelineParameters'] :: SageMakerPipelineParameters -> Maybe [SageMakerPipelineParameter]

-- | Create a value of <a>SageMakerPipelineParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineParameterList:SageMakerPipelineParameters'</a>,
--   <a>sageMakerPipelineParameters_pipelineParameterList</a> - List of
--   Parameter names and values for SageMaker Model Building Pipeline
--   execution.
newSageMakerPipelineParameters :: SageMakerPipelineParameters

-- | List of Parameter names and values for SageMaker Model Building
--   Pipeline execution.
sageMakerPipelineParameters_pipelineParameterList :: Lens' SageMakerPipelineParameters (Maybe [SageMakerPipelineParameter])

-- | This structure includes the custom parameter to be used when the
--   target is an SQS FIFO queue.
--   
--   <i>See:</i> <a>newSqsParameters</a> smart constructor.
data SqsParameters
SqsParameters' :: Maybe Text -> SqsParameters

-- | The FIFO message group ID to use as the target.
[$sel:messageGroupId:SqsParameters'] :: SqsParameters -> Maybe Text

-- | Create a value of <a>SqsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageGroupId:SqsParameters'</a>,
--   <a>sqsParameters_messageGroupId</a> - The FIFO message group ID to use
--   as the target.
newSqsParameters :: SqsParameters

-- | The FIFO message group ID to use as the target.
sqsParameters_messageGroupId :: Lens' SqsParameters (Maybe Text)

-- | A key-value pair associated with an Amazon Web Services resource. In
--   EventBridge, rules and event buses support tagging.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A string you can use to assign a value. The combination of tag keys
--   and values can help you organize and categorize your resources.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string you can use to assign
--   a value. The combination of tag keys and values can help you organize
--   and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag

-- | A string you can use to assign a value. The combination of tag keys
--   and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text

-- | Targets are the resources to be invoked when a rule is triggered. For
--   a complete list of services and resources that can be set as a target,
--   see <a>PutTargets</a>.
--   
--   If you are setting the event bus of another account as the target, and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, then you must
--   specify a <tt>RoleArn</tt> with proper permissions in the
--   <tt>Target</tt> structure. For more information, see <a>Sending and
--   Receiving Events Between Amazon Web Services Accounts</a> in the
--   <i>Amazon EventBridge User Guide</i>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe RunCommandParameters -> Maybe HttpParameters -> Maybe KinesisParameters -> Maybe InputTransformer -> Maybe DeadLetterConfig -> Maybe SageMakerPipelineParameters -> Maybe SqsParameters -> Maybe Text -> Maybe BatchParameters -> Maybe RedshiftDataParameters -> Maybe EcsParameters -> Maybe RetryPolicy -> Maybe Text -> Maybe Text -> Text -> Text -> Target

-- | Parameters used when you are using the rule to invoke Amazon EC2 Run
--   Command.
[$sel:runCommandParameters:Target'] :: Target -> Maybe RunCommandParameters

-- | Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
[$sel:httpParameters:Target'] :: Target -> Maybe HttpParameters

-- | The custom parameter you can use to control the shard assignment, when
--   the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
[$sel:kinesisParameters:Target'] :: Target -> Maybe KinesisParameters

-- | Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
[$sel:inputTransformer:Target'] :: Target -> Maybe InputTransformer

-- | The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
[$sel:deadLetterConfig:Target'] :: Target -> Maybe DeadLetterConfig

-- | Contains the SageMaker Model Building Pipeline parameters to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
[$sel:sageMakerPipelineParameters:Target'] :: Target -> Maybe SageMakerPipelineParameters

-- | Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
[$sel:sqsParameters:Target'] :: Target -> Maybe SqsParameters

-- | Valid JSON text passed to the target. In this case, nothing from the
--   event itself is passed to the target. For more information, see <a>The
--   JavaScript Object Notation (JSON) Data Interchange Format</a>.
[$sel:input:Target'] :: Target -> Maybe Text

-- | If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
[$sel:batchParameters:Target'] :: Target -> Maybe BatchParameters

-- | Contains the Amazon Redshift Data API parameters to use when the
--   target is a Amazon Redshift cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
[$sel:redshiftDataParameters:Target'] :: Target -> Maybe RedshiftDataParameters

-- | Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
[$sel:ecsParameters:Target'] :: Target -> Maybe EcsParameters

-- | The <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
[$sel:retryPolicy:Target'] :: Target -> Maybe RetryPolicy

-- | The value of the JSONPath that is used for extracting part of the
--   matched event when passing it to the target. You must use JSON dot
--   notation, not bracket notation. For more information about JSON paths,
--   see <a>JSONPath</a>.
[$sel:inputPath:Target'] :: Target -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role to be used for this
--   target when the rule is triggered. If one rule triggers multiple
--   targets, you can use a different IAM role for each target.
[$sel:roleArn:Target'] :: Target -> Maybe Text

-- | The ID of the target. We recommend using a memorable and unique
--   string.
[$sel:id:Target'] :: Target -> Text

-- | The Amazon Resource Name (ARN) of the target.
[$sel:arn:Target'] :: Target -> Text

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandParameters:Target'</a>,
--   <a>target_runCommandParameters</a> - Parameters used when you are
--   using the rule to invoke Amazon EC2 Run Command.
--   
--   <a>$sel:httpParameters:Target'</a>, <a>target_httpParameters</a> -
--   Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
--   
--   <a>$sel:kinesisParameters:Target'</a>, <a>target_kinesisParameters</a>
--   - The custom parameter you can use to control the shard assignment,
--   when the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
--   
--   <a>$sel:inputTransformer:Target'</a>, <a>target_inputTransformer</a> -
--   Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
--   
--   <a>$sel:deadLetterConfig:Target'</a>, <a>target_deadLetterConfig</a> -
--   The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
--   
--   <a>$sel:sageMakerPipelineParameters:Target'</a>,
--   <a>target_sageMakerPipelineParameters</a> - Contains the SageMaker
--   Model Building Pipeline parameters to start execution of a SageMaker
--   Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
--   
--   <a>$sel:sqsParameters:Target'</a>, <a>target_sqsParameters</a> -
--   Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
--   
--   <a>$sel:input:Target'</a>, <a>target_input</a> - Valid JSON text
--   passed to the target. In this case, nothing from the event itself is
--   passed to the target. For more information, see <a>The JavaScript
--   Object Notation (JSON) Data Interchange Format</a>.
--   
--   <a>$sel:batchParameters:Target'</a>, <a>target_batchParameters</a> -
--   If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
--   
--   <a>$sel:redshiftDataParameters:Target'</a>,
--   <a>target_redshiftDataParameters</a> - Contains the Amazon Redshift
--   Data API parameters to use when the target is a Amazon Redshift
--   cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <a>$sel:ecsParameters:Target'</a>, <a>target_ecsParameters</a> -
--   Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:retryPolicy:Target'</a>, <a>target_retryPolicy</a> - The
--   <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
--   
--   <a>$sel:inputPath:Target'</a>, <a>target_inputPath</a> - The value of
--   the JSONPath that is used for extracting part of the matched event
--   when passing it to the target. You must use JSON dot notation, not
--   bracket notation. For more information about JSON paths, see
--   <a>JSONPath</a>.
--   
--   <a>$sel:roleArn:Target'</a>, <a>target_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role to be used for this target when
--   the rule is triggered. If one rule triggers multiple targets, you can
--   use a different IAM role for each target.
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The ID of the target. We
--   recommend using a memorable and unique string.
--   
--   <a>$sel:arn:Target'</a>, <a>target_arn</a> - The Amazon Resource Name
--   (ARN) of the target.
newTarget :: Text -> Text -> Target

-- | Parameters used when you are using the rule to invoke Amazon EC2 Run
--   Command.
target_runCommandParameters :: Lens' Target (Maybe RunCommandParameters)

-- | Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
target_httpParameters :: Lens' Target (Maybe HttpParameters)

-- | The custom parameter you can use to control the shard assignment, when
--   the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
target_kinesisParameters :: Lens' Target (Maybe KinesisParameters)

-- | Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
target_inputTransformer :: Lens' Target (Maybe InputTransformer)

-- | The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
target_deadLetterConfig :: Lens' Target (Maybe DeadLetterConfig)

-- | Contains the SageMaker Model Building Pipeline parameters to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
target_sageMakerPipelineParameters :: Lens' Target (Maybe SageMakerPipelineParameters)

-- | Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
target_sqsParameters :: Lens' Target (Maybe SqsParameters)

-- | Valid JSON text passed to the target. In this case, nothing from the
--   event itself is passed to the target. For more information, see <a>The
--   JavaScript Object Notation (JSON) Data Interchange Format</a>.
target_input :: Lens' Target (Maybe Text)

-- | If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
target_batchParameters :: Lens' Target (Maybe BatchParameters)

-- | Contains the Amazon Redshift Data API parameters to use when the
--   target is a Amazon Redshift cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
target_redshiftDataParameters :: Lens' Target (Maybe RedshiftDataParameters)

-- | Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
target_ecsParameters :: Lens' Target (Maybe EcsParameters)

-- | The <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
target_retryPolicy :: Lens' Target (Maybe RetryPolicy)

-- | The value of the JSONPath that is used for extracting part of the
--   matched event when passing it to the target. You must use JSON dot
--   notation, not bracket notation. For more information about JSON paths,
--   see <a>JSONPath</a>.
target_inputPath :: Lens' Target (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role to be used for this
--   target when the rule is triggered. If one rule triggers multiple
--   targets, you can use a different IAM role for each target.
target_roleArn :: Lens' Target (Maybe Text)

-- | The ID of the target. We recommend using a memorable and unique
--   string.
target_id :: Lens' Target Text

-- | The Amazon Resource Name (ARN) of the target.
target_arn :: Lens' Target Text

-- | Contains the API key authorization parameters to use to update the
--   connection.
--   
--   <i>See:</i> <a>newUpdateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data UpdateConnectionApiKeyAuthRequestParameters
UpdateConnectionApiKeyAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionApiKeyAuthRequestParameters

-- | The value associated with teh API key to use for authorization.
[$sel:apiKeyValue:UpdateConnectionApiKeyAuthRequestParameters'] :: UpdateConnectionApiKeyAuthRequestParameters -> Maybe Text

-- | The name of the API key to use for authorization.
[$sel:apiKeyName:UpdateConnectionApiKeyAuthRequestParameters'] :: UpdateConnectionApiKeyAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyValue:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value associated with teh API key to use for authorization.
--   
--   <a>$sel:apiKeyName:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
newUpdateConnectionApiKeyAuthRequestParameters :: UpdateConnectionApiKeyAuthRequestParameters

-- | The value associated with teh API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)

-- | The name of the API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)

-- | Contains the additional parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionAuthRequestParameters
UpdateConnectionAuthRequestParameters' :: Maybe UpdateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe UpdateConnectionApiKeyAuthRequestParameters -> Maybe UpdateConnectionBasicAuthRequestParameters -> UpdateConnectionAuthRequestParameters

-- | A <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
[$sel:oAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionOAuthRequestParameters

-- | A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
[$sel:invocationHttpParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | A <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
[$sel:apiKeyAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionApiKeyAuthRequestParameters

-- | A <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
[$sel:basicAuthParameters:UpdateConnectionAuthRequestParameters'] :: UpdateConnectionAuthRequestParameters -> Maybe UpdateConnectionBasicAuthRequestParameters

-- | Create a value of <a>UpdateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
--   
--   
--   <a>$sel:apiKeyAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
--   
--   
--   <a>$sel:basicAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
newUpdateConnectionAuthRequestParameters :: UpdateConnectionAuthRequestParameters

-- | A <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
updateConnectionAuthRequestParameters_oAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
updateConnectionAuthRequestParameters_invocationHttpParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
updateConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionApiKeyAuthRequestParameters)

-- | A <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
updateConnectionAuthRequestParameters_basicAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionBasicAuthRequestParameters)

-- | Contains the Basic authorization parameters for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionBasicAuthRequestParameters
UpdateConnectionBasicAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
[$sel:username:UpdateConnectionBasicAuthRequestParameters'] :: UpdateConnectionBasicAuthRequestParameters -> Maybe Text

-- | The password associated with the user name to use for Basic
--   authorization.
[$sel:password:UpdateConnectionBasicAuthRequestParameters'] :: UpdateConnectionBasicAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newUpdateConnectionBasicAuthRequestParameters :: UpdateConnectionBasicAuthRequestParameters

-- | The user name to use for Basic authorization.
updateConnectionBasicAuthRequestParameters_username :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)

-- | The password associated with the user name to use for Basic
--   authorization.
updateConnectionBasicAuthRequestParameters_password :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data UpdateConnectionOAuthClientRequestParameters
UpdateConnectionOAuthClientRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization.
[$sel:clientID:UpdateConnectionOAuthClientRequestParameters'] :: UpdateConnectionOAuthClientRequestParameters -> Maybe Text

-- | The client secret assciated with the client ID to use for OAuth
--   authorization.
[$sel:clientSecret:UpdateConnectionOAuthClientRequestParameters'] :: UpdateConnectionOAuthClientRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization.
--   
--   
--   <a>$sel:clientSecret:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret assciated with the client ID to use for OAuth
--   authorization.
newUpdateConnectionOAuthClientRequestParameters :: UpdateConnectionOAuthClientRequestParameters

-- | The client ID to use for OAuth authorization.
updateConnectionOAuthClientRequestParameters_clientID :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)

-- | The client secret assciated with the client ID to use for OAuth
--   authorization.
updateConnectionOAuthClientRequestParameters_clientSecret :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)

-- | Contains the OAuth request parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionOAuthRequestParameters
UpdateConnectionOAuthRequestParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe UpdateConnectionOAuthClientRequestParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> UpdateConnectionOAuthRequestParameters

-- | The method used to connect to the HTTP endpoint.
[$sel:httpMethod:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe ConnectionOAuthHttpMethod

-- | A <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
[$sel:clientParameters:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe UpdateConnectionOAuthClientRequestParameters

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
[$sel:oAuthHttpParameters:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
[$sel:authorizationEndpoint:UpdateConnectionOAuthRequestParameters'] :: UpdateConnectionOAuthRequestParameters -> Maybe Text

-- | Create a value of <a>UpdateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_httpMethod</a> - The method
--   used to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
--   
--   
--   <a>$sel:oAuthHttpParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_oAuthHttpParameters</a> -
--   The additional HTTP parameters used for the OAuth authorization
--   request.
--   
--   
--   <a>$sel:authorizationEndpoint:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
newUpdateConnectionOAuthRequestParameters :: UpdateConnectionOAuthRequestParameters

-- | The method used to connect to the HTTP endpoint.
updateConnectionOAuthRequestParameters_httpMethod :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
updateConnectionOAuthRequestParameters_clientParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe UpdateConnectionOAuthClientRequestParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
updateConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
updateConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' UpdateConnectionOAuthRequestParameters (Maybe Text)


-- | Tests whether the specified event pattern matches the provided event.
--   
--   Most services in Amazon Web Services treat : or / as the same
--   character in Amazon Resource Names (ARNs). However, EventBridge uses
--   an exact match in event patterns and rules. Be sure to use the correct
--   ARN characters when creating event patterns so that they match the ARN
--   syntax in the event you want to match.
module Amazonka.CloudWatchEvents.TestEventPattern

-- | <i>See:</i> <a>newTestEventPattern</a> smart constructor.
data TestEventPattern
TestEventPattern' :: Text -> Text -> TestEventPattern

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
[$sel:eventPattern:TestEventPattern'] :: TestEventPattern -> Text

-- | The event, in JSON format, to test against the event pattern. The JSON
--   must follow the format specified in <a>Amazon Web Services Events</a>,
--   and the following fields are mandatory:
--   
--   <ul>
--   <li><pre>id</pre></li>
--   <li><pre>account</pre></li>
--   <li><pre>source</pre></li>
--   <li><pre>time</pre></li>
--   <li><pre>region</pre></li>
--   <li><pre>resources</pre></li>
--   <li><pre>detail-type</pre></li>
--   </ul>
[$sel:event:TestEventPattern'] :: TestEventPattern -> Text

-- | Create a value of <a>TestEventPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:TestEventPattern'</a>,
--   <a>testEventPattern_eventPattern</a> - The event pattern. For more
--   information, see <a>Events and Event Patterns</a> in the <i>Amazon
--   EventBridge User Guide</i>.
--   
--   <a>$sel:event:TestEventPattern'</a>, <a>testEventPattern_event</a> -
--   The event, in JSON format, to test against the event pattern. The JSON
--   must follow the format specified in <a>Amazon Web Services Events</a>,
--   and the following fields are mandatory:
--   
--   <ul>
--   <li><pre>id</pre></li>
--   <li><pre>account</pre></li>
--   <li><pre>source</pre></li>
--   <li><pre>time</pre></li>
--   <li><pre>region</pre></li>
--   <li><pre>resources</pre></li>
--   <li><pre>detail-type</pre></li>
--   </ul>
newTestEventPattern :: Text -> Text -> TestEventPattern

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
testEventPattern_eventPattern :: Lens' TestEventPattern Text

-- | The event, in JSON format, to test against the event pattern. The JSON
--   must follow the format specified in <a>Amazon Web Services Events</a>,
--   and the following fields are mandatory:
--   
--   <ul>
--   <li><pre>id</pre></li>
--   <li><pre>account</pre></li>
--   <li><pre>source</pre></li>
--   <li><pre>time</pre></li>
--   <li><pre>region</pre></li>
--   <li><pre>resources</pre></li>
--   <li><pre>detail-type</pre></li>
--   </ul>
testEventPattern_event :: Lens' TestEventPattern Text

-- | <i>See:</i> <a>newTestEventPatternResponse</a> smart constructor.
data TestEventPatternResponse
TestEventPatternResponse' :: Maybe Bool -> Int -> TestEventPatternResponse

-- | Indicates whether the event matches the event pattern.
[$sel:result:TestEventPatternResponse'] :: TestEventPatternResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:TestEventPatternResponse'] :: TestEventPatternResponse -> Int

-- | Create a value of <a>TestEventPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:result:TestEventPatternResponse'</a>,
--   <a>testEventPatternResponse_result</a> - Indicates whether the event
--   matches the event pattern.
--   
--   <a>$sel:httpStatus:TestEventPatternResponse'</a>,
--   <a>testEventPatternResponse_httpStatus</a> - The response's http
--   status code.
newTestEventPatternResponse :: Int -> TestEventPatternResponse

-- | Indicates whether the event matches the event pattern.
testEventPatternResponse_result :: Lens' TestEventPatternResponse (Maybe Bool)

-- | The response's http status code.
testEventPatternResponse_httpStatus :: Lens' TestEventPatternResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance GHC.Show.Show Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance GHC.Read.Read Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.TestEventPattern.TestEventPatternResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.TestEventPattern.TestEventPatternResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.TestEventPattern.TestEventPatternResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.TestEventPattern.TestEventPatternResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.TestEventPattern.TestEventPatternResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.TestEventPattern.TestEventPattern


-- | Assigns one or more tags (key-value pairs) to the specified
--   EventBridge resource. Tags can help you organize and categorize your
--   resources. You can also use them to scope user permissions by granting
--   a user permission to access or change only resources with certain tag
--   values. In EventBridge, rules and event buses can be tagged.
--   
--   Tags don't have any semantic meaning to Amazon Web Services and are
--   interpreted strictly as strings of characters.
--   
--   You can use the <tt>TagResource</tt> action with a resource that
--   already has tags. If you specify a new tag key, this tag is appended
--   to the list of tags associated with the resource. If you specify a tag
--   key that is already associated with the resource, the new tag value
--   that you specify replaces the previous value for that tag.
--   
--   You can associate as many as 50 tags with a resource.
module Amazonka.CloudWatchEvents.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ARN of the EventBridge resource that you're adding tags to.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The list of key-value pairs to associate with the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the EventBridge resource that you're adding tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the resource.
newTagResource :: Text -> TagResource

-- | The ARN of the EventBridge resource that you're adding tags to.
tagResource_resourceARN :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.TagResource.TagResource
instance GHC.Show.Show Amazonka.CloudWatchEvents.TagResource.TagResource
instance GHC.Read.Read Amazonka.CloudWatchEvents.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.TagResource.TagResource


-- | Starts the specified replay. Events are not necessarily replayed in
--   the exact same order that they were added to the archive. A replay
--   processes events to replay based on the time in the event, and replays
--   them using 1 minute intervals. If you specify an
--   <tt>EventStartTime</tt> and an <tt>EventEndTime</tt> that covers a 20
--   minute time range, the events are replayed from the first minute of
--   that 20 minute range first. Then the events from the second minute are
--   replayed. You can use <tt>DescribeReplay</tt> to determine the
--   progress of a replay. The value returned for
--   <tt>EventLastReplayedTime</tt> indicates the time within the specified
--   time range associated with the last event replayed.
module Amazonka.CloudWatchEvents.StartReplay

-- | <i>See:</i> <a>newStartReplay</a> smart constructor.
data StartReplay
StartReplay' :: Maybe Text -> Text -> Text -> POSIX -> POSIX -> ReplayDestination -> StartReplay

-- | A description for the replay to start.
[$sel:description:StartReplay'] :: StartReplay -> Maybe Text

-- | The name of the replay to start.
[$sel:replayName:StartReplay'] :: StartReplay -> Text

-- | The ARN of the archive to replay events from.
[$sel:eventSourceArn:StartReplay'] :: StartReplay -> Text

-- | A time stamp for the time to start replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
[$sel:eventStartTime:StartReplay'] :: StartReplay -> POSIX

-- | A time stamp for the time to stop replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
[$sel:eventEndTime:StartReplay'] :: StartReplay -> POSIX

-- | A <tt>ReplayDestination</tt> object that includes details about the
--   destination for the replay.
[$sel:destination:StartReplay'] :: StartReplay -> ReplayDestination

-- | Create a value of <a>StartReplay</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StartReplay'</a>, <a>startReplay_description</a> -
--   A description for the replay to start.
--   
--   <a>$sel:replayName:StartReplay'</a>, <a>startReplay_replayName</a> -
--   The name of the replay to start.
--   
--   <a>$sel:eventSourceArn:StartReplay'</a>,
--   <a>startReplay_eventSourceArn</a> - The ARN of the archive to replay
--   events from.
--   
--   <a>$sel:eventStartTime:StartReplay'</a>,
--   <a>startReplay_eventStartTime</a> - A time stamp for the time to start
--   replaying events. Only events that occurred between the
--   <tt>EventStartTime</tt> and <tt>EventEndTime</tt> are replayed.
--   
--   <a>$sel:eventEndTime:StartReplay'</a>, <a>startReplay_eventEndTime</a>
--   - A time stamp for the time to stop replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
--   
--   <a>$sel:destination:StartReplay'</a>, <a>startReplay_destination</a> -
--   A <tt>ReplayDestination</tt> object that includes details about the
--   destination for the replay.
newStartReplay :: Text -> Text -> UTCTime -> UTCTime -> ReplayDestination -> StartReplay

-- | A description for the replay to start.
startReplay_description :: Lens' StartReplay (Maybe Text)

-- | The name of the replay to start.
startReplay_replayName :: Lens' StartReplay Text

-- | The ARN of the archive to replay events from.
startReplay_eventSourceArn :: Lens' StartReplay Text

-- | A time stamp for the time to start replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
startReplay_eventStartTime :: Lens' StartReplay UTCTime

-- | A time stamp for the time to stop replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
startReplay_eventEndTime :: Lens' StartReplay UTCTime

-- | A <tt>ReplayDestination</tt> object that includes details about the
--   destination for the replay.
startReplay_destination :: Lens' StartReplay ReplayDestination

-- | <i>See:</i> <a>newStartReplayResponse</a> smart constructor.
data StartReplayResponse
StartReplayResponse' :: Maybe ReplayState -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> StartReplayResponse

-- | The state of the replay.
[$sel:state:StartReplayResponse'] :: StartReplayResponse -> Maybe ReplayState

-- | The time at which the replay started.
[$sel:replayStartTime:StartReplayResponse'] :: StartReplayResponse -> Maybe POSIX

-- | The ARN of the replay.
[$sel:replayArn:StartReplayResponse'] :: StartReplayResponse -> Maybe Text

-- | The reason that the replay is in the state.
[$sel:stateReason:StartReplayResponse'] :: StartReplayResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartReplayResponse'] :: StartReplayResponse -> Int

-- | Create a value of <a>StartReplayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StartReplayResponse'</a>,
--   <a>startReplayResponse_state</a> - The state of the replay.
--   
--   <a>$sel:replayStartTime:StartReplayResponse'</a>,
--   <a>startReplayResponse_replayStartTime</a> - The time at which the
--   replay started.
--   
--   <a>$sel:replayArn:StartReplayResponse'</a>,
--   <a>startReplayResponse_replayArn</a> - The ARN of the replay.
--   
--   <a>$sel:stateReason:StartReplayResponse'</a>,
--   <a>startReplayResponse_stateReason</a> - The reason that the replay is
--   in the state.
--   
--   <a>$sel:httpStatus:StartReplayResponse'</a>,
--   <a>startReplayResponse_httpStatus</a> - The response's http status
--   code.
newStartReplayResponse :: Int -> StartReplayResponse

-- | The state of the replay.
startReplayResponse_state :: Lens' StartReplayResponse (Maybe ReplayState)

-- | The time at which the replay started.
startReplayResponse_replayStartTime :: Lens' StartReplayResponse (Maybe UTCTime)

-- | The ARN of the replay.
startReplayResponse_replayArn :: Lens' StartReplayResponse (Maybe Text)

-- | The reason that the replay is in the state.
startReplayResponse_stateReason :: Lens' StartReplayResponse (Maybe Text)

-- | The response's http status code.
startReplayResponse_httpStatus :: Lens' StartReplayResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance GHC.Show.Show Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance GHC.Read.Read Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.StartReplay.StartReplayResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.StartReplay.StartReplayResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.StartReplay.StartReplayResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.StartReplay.StartReplayResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.StartReplay.StartReplayResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.StartReplay.StartReplay
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.StartReplay.StartReplay


-- | Removes the specified targets from the specified rule. When the rule
--   is triggered, those targets are no longer be invoked.
--   
--   When you remove a target, when the associated rule triggers, removed
--   targets might continue to be invoked. Allow a short period of time for
--   changes to take effect.
--   
--   This action can partially fail if too many requests are made at the
--   same time. If that happens, <tt>FailedEntryCount</tt> is non-zero in
--   the response and each entry in <tt>FailedEntries</tt> provides the ID
--   of the failed target and the error code.
module Amazonka.CloudWatchEvents.RemoveTargets

-- | <i>See:</i> <a>newRemoveTargets</a> smart constructor.
data RemoveTargets
RemoveTargets' :: Maybe Bool -> Maybe Text -> Text -> NonEmpty Text -> RemoveTargets

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   remove targets. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
[$sel:force:RemoveTargets'] :: RemoveTargets -> Maybe Bool

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:RemoveTargets'] :: RemoveTargets -> Maybe Text

-- | The name of the rule.
[$sel:rule:RemoveTargets'] :: RemoveTargets -> Text

-- | The IDs of the targets to remove from the rule.
[$sel:ids:RemoveTargets'] :: RemoveTargets -> NonEmpty Text

-- | Create a value of <a>RemoveTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:RemoveTargets'</a>, <a>removeTargets_force</a> - If this
--   is a managed rule, created by an Amazon Web Services service on your
--   behalf, you must specify <tt>Force</tt> as <tt>True</tt> to remove
--   targets. This parameter is ignored for rules that are not managed
--   rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
--   
--   <a>$sel:eventBusName:RemoveTargets'</a>,
--   <a>removeTargets_eventBusName</a> - The name or ARN of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:rule:RemoveTargets'</a>, <a>removeTargets_rule</a> - The name
--   of the rule.
--   
--   <a>$sel:ids:RemoveTargets'</a>, <a>removeTargets_ids</a> - The IDs of
--   the targets to remove from the rule.
newRemoveTargets :: Text -> NonEmpty Text -> RemoveTargets

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   remove targets. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
removeTargets_force :: Lens' RemoveTargets (Maybe Bool)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
removeTargets_eventBusName :: Lens' RemoveTargets (Maybe Text)

-- | The name of the rule.
removeTargets_rule :: Lens' RemoveTargets Text

-- | The IDs of the targets to remove from the rule.
removeTargets_ids :: Lens' RemoveTargets (NonEmpty Text)

-- | <i>See:</i> <a>newRemoveTargetsResponse</a> smart constructor.
data RemoveTargetsResponse
RemoveTargetsResponse' :: Maybe Int -> Maybe [RemoveTargetsResultEntry] -> Int -> RemoveTargetsResponse

-- | The number of failed entries.
[$sel:failedEntryCount:RemoveTargetsResponse'] :: RemoveTargetsResponse -> Maybe Int

-- | The failed target entries.
[$sel:failedEntries:RemoveTargetsResponse'] :: RemoveTargetsResponse -> Maybe [RemoveTargetsResultEntry]

-- | The response's http status code.
[$sel:httpStatus:RemoveTargetsResponse'] :: RemoveTargetsResponse -> Int

-- | Create a value of <a>RemoveTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:failedEntries:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_failedEntries</a> - The failed target
--   entries.
--   
--   <a>$sel:httpStatus:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTargetsResponse :: Int -> RemoveTargetsResponse

-- | The number of failed entries.
removeTargetsResponse_failedEntryCount :: Lens' RemoveTargetsResponse (Maybe Int)

-- | The failed target entries.
removeTargetsResponse_failedEntries :: Lens' RemoveTargetsResponse (Maybe [RemoveTargetsResultEntry])

-- | The response's http status code.
removeTargetsResponse_httpStatus :: Lens' RemoveTargetsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance GHC.Show.Show Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance GHC.Read.Read Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargetsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargetsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargetsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargetsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargetsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.RemoveTargets.RemoveTargets


-- | Revokes the permission of another Amazon Web Services account to be
--   able to put events to the specified event bus. Specify the account to
--   revoke by the <tt>StatementId</tt> value that you associated with the
--   account when you granted it permission with <tt>PutPermission</tt>.
--   You can find the <tt>StatementId</tt> by using
--   <a>DescribeEventBus</a>.
module Amazonka.CloudWatchEvents.RemovePermission

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Maybe Text -> Maybe Bool -> Maybe Text -> RemovePermission

-- | The name of the event bus to revoke permissions for. If you omit this,
--   the default event bus is used.
[$sel:eventBusName:RemovePermission'] :: RemovePermission -> Maybe Text

-- | Specifies whether to remove all permissions.
[$sel:removeAllPermissions:RemovePermission'] :: RemovePermission -> Maybe Bool

-- | The statement ID corresponding to the account that is no longer
--   allowed to put events to the default event bus.
[$sel:statementId:RemovePermission'] :: RemovePermission -> Maybe Text

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:RemovePermission'</a>,
--   <a>removePermission_eventBusName</a> - The name of the event bus to
--   revoke permissions for. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:removeAllPermissions:RemovePermission'</a>,
--   <a>removePermission_removeAllPermissions</a> - Specifies whether to
--   remove all permissions.
--   
--   <a>$sel:statementId:RemovePermission'</a>,
--   <a>removePermission_statementId</a> - The statement ID corresponding
--   to the account that is no longer allowed to put events to the default
--   event bus.
newRemovePermission :: RemovePermission

-- | The name of the event bus to revoke permissions for. If you omit this,
--   the default event bus is used.
removePermission_eventBusName :: Lens' RemovePermission (Maybe Text)

-- | Specifies whether to remove all permissions.
removePermission_removeAllPermissions :: Lens' RemovePermission (Maybe Bool)

-- | The statement ID corresponding to the account that is no longer
--   allowed to put events to the default event bus.
removePermission_statementId :: Lens' RemovePermission (Maybe Text)

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance GHC.Show.Show Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance GHC.Read.Read Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.RemovePermission.RemovePermissionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.RemovePermission.RemovePermissionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.RemovePermission.RemovePermissionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.RemovePermission.RemovePermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.RemovePermission.RemovePermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.RemovePermission.RemovePermission
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.RemovePermission.RemovePermission


-- | Adds the specified targets to the specified rule, or updates the
--   targets if they are already associated with the rule.
--   
--   Targets are the resources that are invoked when a rule is triggered.
--   
--   You can configure the following as targets for Events:
--   
--   <ul>
--   <li><a>API destination</a></li>
--   <li>Amazon API Gateway REST API endpoints</li>
--   <li>API Gateway</li>
--   <li>Batch job queue</li>
--   <li>CloudWatch Logs group</li>
--   <li>CodeBuild project</li>
--   <li>CodePipeline</li>
--   <li>Amazon EC2 <tt>CreateSnapshot</tt> API call</li>
--   <li>Amazon EC2 <tt>RebootInstances</tt> API call</li>
--   <li>Amazon EC2 <tt>StopInstances</tt> API call</li>
--   <li>Amazon EC2 <tt>TerminateInstances</tt> API call</li>
--   <li>Amazon ECS tasks</li>
--   <li>Event bus in a different Amazon Web Services account or Region.You
--   can use an event bus in the US East (N. Virginia) us-east-1, US West
--   (Oregon) us-west-2, or Europe (Ireland) eu-west-1 Regions as a target
--   for a rule.</li>
--   <li>Firehose delivery stream (Kinesis Data Firehose)</li>
--   <li>Inspector assessment template (Amazon Inspector)</li>
--   <li>Kinesis stream (Kinesis Data Stream)</li>
--   <li>Lambda function</li>
--   <li>Redshift clusters (Data API statement execution)</li>
--   <li>Amazon SNS topic</li>
--   <li>Amazon SQS queues (includes FIFO queues</li>
--   <li>SSM Automation</li>
--   <li>SSM OpsItem</li>
--   <li>SSM Run Command</li>
--   <li>Step Functions state machines</li>
--   </ul>
--   
--   Creating rules with built-in targets is supported only in the Amazon
--   Web Services Management Console. The built-in targets are <tt>EC2
--   CreateSnapshot API call</tt>, <tt>EC2 RebootInstances API call</tt>,
--   <tt>EC2 StopInstances API call</tt>, and <tt>EC2 TerminateInstances
--   API call</tt>.
--   
--   For some target types, <tt>PutTargets</tt> provides target-specific
--   parameters. If the target is a Kinesis data stream, you can optionally
--   specify which shard the event goes to by using the
--   <tt>KinesisParameters</tt> argument. To invoke a command on multiple
--   EC2 instances with one rule, you can use the
--   <tt>RunCommandParameters</tt> field.
--   
--   To be able to make API calls against the resources that you own,
--   Amazon EventBridge needs the appropriate permissions. For Lambda and
--   Amazon SNS resources, EventBridge relies on resource-based policies.
--   For EC2 instances, Kinesis Data Streams, Step Functions state machines
--   and API Gateway REST APIs, EventBridge relies on IAM roles that you
--   specify in the <tt>RoleARN</tt> argument in <tt>PutTargets</tt>. For
--   more information, see <a>Authentication and Access Control</a> in the
--   <i>Amazon EventBridge User Guide</i>.
--   
--   If another Amazon Web Services account is in the same region and has
--   granted you permission (using <tt>PutPermission</tt>), you can send
--   events to that account. Set that account's event bus as a target of
--   the rules in your account. To send the matched events to the other
--   account, specify that account's event bus as the <tt>Arn</tt> value
--   when you run <tt>PutTargets</tt>. If your account sends events to
--   another account, your account is charged for each sent event. Each
--   event sent to another account is charged as a custom event. The
--   account receiving the event is not charged. For more information, see
--   <a>Amazon EventBridge Pricing</a>.
--   
--   <tt>Input</tt>, <tt>InputPath</tt>, and <tt>InputTransformer</tt> are
--   not available with <tt>PutTarget</tt> if the target is an event bus of
--   a different Amazon Web Services account.
--   
--   If you are setting the event bus of another account as the target, and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, then you must
--   specify a <tt>RoleArn</tt> with proper permissions in the
--   <tt>Target</tt> structure. For more information, see <a>Sending and
--   Receiving Events Between Amazon Web Services Accounts</a> in the
--   <i>Amazon EventBridge User Guide</i>.
--   
--   For more information about enabling cross-account events, see
--   <a>PutPermission</a>.
--   
--   <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are
--   mutually exclusive and optional parameters of a target. When a rule is
--   triggered due to a matched event:
--   
--   <ul>
--   <li>If none of the following arguments are specified for a target,
--   then the entire event is passed to the target in JSON format (unless
--   the target is Amazon EC2 Run Command or Amazon ECS task, in which case
--   nothing from the event is passed to the target).</li>
--   <li>If <b>Input</b> is specified in the form of valid JSON, then the
--   matched event is overridden with this constant.</li>
--   <li>If <b>InputPath</b> is specified in the form of JSONPath (for
--   example, <tt>$.detail</tt>), then only the part of the event specified
--   in the path is passed to the target (for example, only the detail part
--   of the event is passed).</li>
--   <li>If <b>InputTransformer</b> is specified, then one or more
--   specified JSONPaths are extracted from the event and used as values in
--   a template that you specify as the input to the target.</li>
--   </ul>
--   
--   When you specify <tt>InputPath</tt> or <tt>InputTransformer</tt>, you
--   must use JSON dot notation, not bracket notation.
--   
--   When you add targets to a rule and the associated rule triggers soon
--   after, new or updated targets might not be immediately invoked. Allow
--   a short period of time for changes to take effect.
--   
--   This action can partially fail if too many requests are made at the
--   same time. If that happens, <tt>FailedEntryCount</tt> is non-zero in
--   the response and each entry in <tt>FailedEntries</tt> provides the ID
--   of the failed target and the error code.
module Amazonka.CloudWatchEvents.PutTargets

-- | <i>See:</i> <a>newPutTargets</a> smart constructor.
data PutTargets
PutTargets' :: Maybe Text -> Text -> NonEmpty Target -> PutTargets

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:PutTargets'] :: PutTargets -> Maybe Text

-- | The name of the rule.
[$sel:rule:PutTargets'] :: PutTargets -> Text

-- | The targets to update or add to the rule.
[$sel:targets:PutTargets'] :: PutTargets -> NonEmpty Target

-- | Create a value of <a>PutTargets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:PutTargets'</a>, <a>putTargets_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:rule:PutTargets'</a>, <a>putTargets_rule</a> - The name of the
--   rule.
--   
--   <a>$sel:targets:PutTargets'</a>, <a>putTargets_targets</a> - The
--   targets to update or add to the rule.
newPutTargets :: Text -> NonEmpty Target -> PutTargets

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
putTargets_eventBusName :: Lens' PutTargets (Maybe Text)

-- | The name of the rule.
putTargets_rule :: Lens' PutTargets Text

-- | The targets to update or add to the rule.
putTargets_targets :: Lens' PutTargets (NonEmpty Target)

-- | <i>See:</i> <a>newPutTargetsResponse</a> smart constructor.
data PutTargetsResponse
PutTargetsResponse' :: Maybe Int -> Maybe [PutTargetsResultEntry] -> Int -> PutTargetsResponse

-- | The number of failed entries.
[$sel:failedEntryCount:PutTargetsResponse'] :: PutTargetsResponse -> Maybe Int

-- | The failed target entries.
[$sel:failedEntries:PutTargetsResponse'] :: PutTargetsResponse -> Maybe [PutTargetsResultEntry]

-- | The response's http status code.
[$sel:httpStatus:PutTargetsResponse'] :: PutTargetsResponse -> Int

-- | Create a value of <a>PutTargetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:failedEntries:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_failedEntries</a> - The failed target entries.
--   
--   <a>$sel:httpStatus:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_httpStatus</a> - The response's http status
--   code.
newPutTargetsResponse :: Int -> PutTargetsResponse

-- | The number of failed entries.
putTargetsResponse_failedEntryCount :: Lens' PutTargetsResponse (Maybe Int)

-- | The failed target entries.
putTargetsResponse_failedEntries :: Lens' PutTargetsResponse (Maybe [PutTargetsResultEntry])

-- | The response's http status code.
putTargetsResponse_httpStatus :: Lens' PutTargetsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutTargets.PutTargetsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutTargets.PutTargetsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutTargets.PutTargetsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutTargets.PutTargetsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutTargets.PutTargetsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.PutTargets.PutTargets
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.PutTargets.PutTargets


-- | Creates or updates the specified rule. Rules are enabled by default,
--   or based on value of the state. You can disable a rule using
--   <a>DisableRule</a>.
--   
--   A single rule watches for events from a single event bus. Events
--   generated by Amazon Web Services services go to your account's default
--   event bus. Events generated by SaaS partner services or applications
--   go to the matching partner event bus. If you have custom applications
--   or services, you can specify whether their events go to your default
--   event bus or a custom event bus that you have created. For more
--   information, see <a>CreateEventBus</a>.
--   
--   If you are updating an existing rule, the rule is replaced with what
--   you specify in this <tt>PutRule</tt> command. If you omit arguments in
--   <tt>PutRule</tt>, the old values for those arguments are not kept.
--   Instead, they are replaced with null values.
--   
--   When you create or update a rule, incoming events might not
--   immediately start matching to new or updated rules. Allow a short
--   period of time for changes to take effect.
--   
--   A rule must contain at least an EventPattern or ScheduleExpression.
--   Rules with EventPatterns are triggered when a matching event is
--   observed. Rules with ScheduleExpressions self-trigger based on the
--   given schedule. A rule can have both an EventPattern and a
--   ScheduleExpression, in which case the rule triggers on matching events
--   as well as on a schedule.
--   
--   When you initially create a rule, you can optionally assign one or
--   more tags to the rule. Tags can help you organize and categorize your
--   resources. You can also use them to scope user permissions, by
--   granting a user permission to access or change only rules with certain
--   tag values. To use the <tt>PutRule</tt> operation and assign tags, you
--   must have both the <tt>events:PutRule</tt> and
--   <tt>events:TagResource</tt> permissions.
--   
--   If you are updating an existing rule, any tags you specify in the
--   <tt>PutRule</tt> operation are ignored. To update the tags of an
--   existing rule, use <a>TagResource</a> and <a>UntagResource</a>.
--   
--   Most services in Amazon Web Services treat : or / as the same
--   character in Amazon Resource Names (ARNs). However, EventBridge uses
--   an exact match in event patterns and rules. Be sure to use the correct
--   ARN characters when creating event patterns so that they match the ARN
--   syntax in the event you want to match.
--   
--   In EventBridge, it is possible to create rules that lead to infinite
--   loops, where a rule is fired repeatedly. For example, a rule might
--   detect that ACLs have changed on an S3 bucket, and trigger software to
--   change them to the desired state. If the rule is not written
--   carefully, the subsequent change to the ACLs fires the rule again,
--   creating an infinite loop.
--   
--   To prevent this, write the rules so that the triggered actions do not
--   re-fire the same rule. For example, your rule could fire only if ACLs
--   are found to be in a bad state, instead of after any change.
--   
--   An infinite loop can quickly cause higher than expected charges. We
--   recommend that you use budgeting, which alerts you when charges exceed
--   your specified limit. For more information, see <a>Managing Your Costs
--   with Budgets</a>.
module Amazonka.CloudWatchEvents.PutRule

-- | <i>See:</i> <a>newPutRule</a> smart constructor.
data PutRule
PutRule' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Text -> PutRule

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
[$sel:eventPattern:PutRule'] :: PutRule -> Maybe Text

-- | Indicates whether the rule is enabled or disabled.
[$sel:state:PutRule'] :: PutRule -> Maybe RuleState

-- | The name or ARN of the event bus to associate with this rule. If you
--   omit this, the default event bus is used.
[$sel:eventBusName:PutRule'] :: PutRule -> Maybe Text

-- | The scheduling expression. For example, "cron(0 20 * * ? *)" or
--   "rate(5 minutes)".
[$sel:scheduleExpression:PutRule'] :: PutRule -> Maybe Text

-- | A description of the rule.
[$sel:description:PutRule'] :: PutRule -> Maybe Text

-- | The list of key-value pairs to associate with the rule.
[$sel:tags:PutRule'] :: PutRule -> Maybe [Tag]

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
[$sel:roleArn:PutRule'] :: PutRule -> Maybe Text

-- | The name of the rule that you are creating or updating.
[$sel:name:PutRule'] :: PutRule -> Text

-- | Create a value of <a>PutRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:PutRule'</a>, <a>putRule_eventPattern</a> - The
--   event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
--   
--   <a>$sel:state:PutRule'</a>, <a>putRule_state</a> - Indicates whether
--   the rule is enabled or disabled.
--   
--   <a>$sel:eventBusName:PutRule'</a>, <a>putRule_eventBusName</a> - The
--   name or ARN of the event bus to associate with this rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:scheduleExpression:PutRule'</a>,
--   <a>putRule_scheduleExpression</a> - The scheduling expression. For
--   example, "cron(0 20 * * ? *)" or "rate(5 minutes)".
--   
--   <a>$sel:description:PutRule'</a>, <a>putRule_description</a> - A
--   description of the rule.
--   
--   <a>$sel:tags:PutRule'</a>, <a>putRule_tags</a> - The list of key-value
--   pairs to associate with the rule.
--   
--   <a>$sel:roleArn:PutRule'</a>, <a>putRule_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role associated with the rule.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
--   
--   <a>$sel:name:PutRule'</a>, <a>putRule_name</a> - The name of the rule
--   that you are creating or updating.
newPutRule :: Text -> PutRule

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
putRule_eventPattern :: Lens' PutRule (Maybe Text)

-- | Indicates whether the rule is enabled or disabled.
putRule_state :: Lens' PutRule (Maybe RuleState)

-- | The name or ARN of the event bus to associate with this rule. If you
--   omit this, the default event bus is used.
putRule_eventBusName :: Lens' PutRule (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)" or
--   "rate(5 minutes)".
putRule_scheduleExpression :: Lens' PutRule (Maybe Text)

-- | A description of the rule.
putRule_description :: Lens' PutRule (Maybe Text)

-- | The list of key-value pairs to associate with the rule.
putRule_tags :: Lens' PutRule (Maybe [Tag])

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
putRule_roleArn :: Lens' PutRule (Maybe Text)

-- | The name of the rule that you are creating or updating.
putRule_name :: Lens' PutRule Text

-- | <i>See:</i> <a>newPutRuleResponse</a> smart constructor.
data PutRuleResponse
PutRuleResponse' :: Maybe Text -> Int -> PutRuleResponse

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:ruleArn:PutRuleResponse'] :: PutRuleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutRuleResponse'] :: PutRuleResponse -> Int

-- | Create a value of <a>PutRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleArn:PutRuleResponse'</a>, <a>putRuleResponse_ruleArn</a> -
--   The Amazon Resource Name (ARN) of the rule.
--   
--   <a>$sel:httpStatus:PutRuleResponse'</a>,
--   <a>putRuleResponse_httpStatus</a> - The response's http status code.
newPutRuleResponse :: Int -> PutRuleResponse

-- | The Amazon Resource Name (ARN) of the rule.
putRuleResponse_ruleArn :: Lens' PutRuleResponse (Maybe Text)

-- | The response's http status code.
putRuleResponse_httpStatus :: Lens' PutRuleResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutRule.PutRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutRule.PutRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutRule.PutRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutRule.PutRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutRule.PutRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutRule.PutRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutRule.PutRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutRule.PutRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.PutRule.PutRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutRule.PutRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.PutRule.PutRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutRule.PutRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.PutRule.PutRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.PutRule.PutRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.PutRule.PutRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.PutRule.PutRule


-- | Running <tt>PutPermission</tt> permits the specified Amazon Web
--   Services account or Amazon Web Services organization to put events to
--   the specified <i>event bus</i>. Amazon EventBridge (CloudWatch Events)
--   rules in your account are triggered by these events arriving to an
--   event bus in your account.
--   
--   For another account to send events to your account, that external
--   account must have an EventBridge rule with your account's event bus as
--   a target.
--   
--   To enable multiple Amazon Web Services accounts to put events to your
--   event bus, run <tt>PutPermission</tt> once for each of these accounts.
--   Or, if all the accounts are members of the same Amazon Web Services
--   organization, you can run <tt>PutPermission</tt> once specifying
--   <tt>Principal</tt> as "*" and specifying the Amazon Web Services
--   organization ID in <tt>Condition</tt>, to grant permissions to all
--   accounts in that organization.
--   
--   If you grant permissions using an organization, then accounts in that
--   organization must specify a <tt>RoleArn</tt> with proper permissions
--   when they use <tt>PutTarget</tt> to add your account's event bus as a
--   target. For more information, see <a>Sending and Receiving Events
--   Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
--   User Guide</i>.
--   
--   The permission policy on the event bus cannot exceed 10 KB in size.
module Amazonka.CloudWatchEvents.PutPermission

-- | <i>See:</i> <a>newPutPermission</a> smart constructor.
data PutPermission
PutPermission' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Condition -> PutPermission

-- | The action that you are enabling the other account to perform.
[$sel:action:PutPermission'] :: PutPermission -> Maybe Text

-- | The name of the event bus associated with the rule. If you omit this,
--   the default event bus is used.
[$sel:eventBusName:PutPermission'] :: PutPermission -> Maybe Text

-- | The 12-digit Amazon Web Services account ID that you are permitting to
--   put events to your default event bus. Specify "*" to permit any
--   account to put events to your default event bus.
--   
--   If you specify "*" without specifying <tt>Condition</tt>, avoid
--   creating rules that may match undesirable events. To create more
--   secure rules, make sure that the event pattern for each rule contains
--   an <tt>account</tt> field with a specific account ID from which to
--   receive events. Rules with an account field do not match any events
--   sent from other accounts.
[$sel:principal:PutPermission'] :: PutPermission -> Maybe Text

-- | A JSON string that describes the permission policy statement. You can
--   include a <tt>Policy</tt> parameter in the request instead of using
--   the <tt>StatementId</tt>, <tt>Action</tt>, <tt>Principal</tt>, or
--   <tt>Condition</tt> parameters.
[$sel:policy:PutPermission'] :: PutPermission -> Maybe Text

-- | An identifier string for the external account that you are granting
--   permissions to. If you later want to revoke the permission for this
--   external account, specify this <tt>StatementId</tt> when you run
--   <a>RemovePermission</a>.
[$sel:statementId:PutPermission'] :: PutPermission -> Maybe Text

-- | This parameter enables you to limit the permission to accounts that
--   fulfill a certain condition, such as being a member of a certain
--   Amazon Web Services organization. For more information about Amazon
--   Web Services Organizations, see <a>What Is Amazon Web Services
--   Organizations</a> in the <i>Amazon Web Services Organizations User
--   Guide</i>.
--   
--   If you specify <tt>Condition</tt> with an Amazon Web Services
--   organization ID, and specify "*" as the value for <tt>Principal</tt>,
--   you grant permission to all the accounts in the named organization.
--   
--   The <tt>Condition</tt> is a JSON string which must contain
--   <tt>Type</tt>, <tt>Key</tt>, and <tt>Value</tt> fields.
[$sel:condition:PutPermission'] :: PutPermission -> Maybe Condition

-- | Create a value of <a>PutPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:PutPermission'</a>, <a>putPermission_action</a> - The
--   action that you are enabling the other account to perform.
--   
--   <a>$sel:eventBusName:PutPermission'</a>,
--   <a>putPermission_eventBusName</a> - The name of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:principal:PutPermission'</a>, <a>putPermission_principal</a> -
--   The 12-digit Amazon Web Services account ID that you are permitting to
--   put events to your default event bus. Specify "*" to permit any
--   account to put events to your default event bus.
--   
--   If you specify "*" without specifying <tt>Condition</tt>, avoid
--   creating rules that may match undesirable events. To create more
--   secure rules, make sure that the event pattern for each rule contains
--   an <tt>account</tt> field with a specific account ID from which to
--   receive events. Rules with an account field do not match any events
--   sent from other accounts.
--   
--   <a>$sel:policy:PutPermission'</a>, <a>putPermission_policy</a> - A
--   JSON string that describes the permission policy statement. You can
--   include a <tt>Policy</tt> parameter in the request instead of using
--   the <tt>StatementId</tt>, <tt>Action</tt>, <tt>Principal</tt>, or
--   <tt>Condition</tt> parameters.
--   
--   <a>$sel:statementId:PutPermission'</a>,
--   <a>putPermission_statementId</a> - An identifier string for the
--   external account that you are granting permissions to. If you later
--   want to revoke the permission for this external account, specify this
--   <tt>StatementId</tt> when you run <a>RemovePermission</a>.
--   
--   <a>$sel:condition:PutPermission'</a>, <a>putPermission_condition</a> -
--   This parameter enables you to limit the permission to accounts that
--   fulfill a certain condition, such as being a member of a certain
--   Amazon Web Services organization. For more information about Amazon
--   Web Services Organizations, see <a>What Is Amazon Web Services
--   Organizations</a> in the <i>Amazon Web Services Organizations User
--   Guide</i>.
--   
--   If you specify <tt>Condition</tt> with an Amazon Web Services
--   organization ID, and specify "*" as the value for <tt>Principal</tt>,
--   you grant permission to all the accounts in the named organization.
--   
--   The <tt>Condition</tt> is a JSON string which must contain
--   <tt>Type</tt>, <tt>Key</tt>, and <tt>Value</tt> fields.
newPutPermission :: PutPermission

-- | The action that you are enabling the other account to perform.
putPermission_action :: Lens' PutPermission (Maybe Text)

-- | The name of the event bus associated with the rule. If you omit this,
--   the default event bus is used.
putPermission_eventBusName :: Lens' PutPermission (Maybe Text)

-- | The 12-digit Amazon Web Services account ID that you are permitting to
--   put events to your default event bus. Specify "*" to permit any
--   account to put events to your default event bus.
--   
--   If you specify "*" without specifying <tt>Condition</tt>, avoid
--   creating rules that may match undesirable events. To create more
--   secure rules, make sure that the event pattern for each rule contains
--   an <tt>account</tt> field with a specific account ID from which to
--   receive events. Rules with an account field do not match any events
--   sent from other accounts.
putPermission_principal :: Lens' PutPermission (Maybe Text)

-- | A JSON string that describes the permission policy statement. You can
--   include a <tt>Policy</tt> parameter in the request instead of using
--   the <tt>StatementId</tt>, <tt>Action</tt>, <tt>Principal</tt>, or
--   <tt>Condition</tt> parameters.
putPermission_policy :: Lens' PutPermission (Maybe Text)

-- | An identifier string for the external account that you are granting
--   permissions to. If you later want to revoke the permission for this
--   external account, specify this <tt>StatementId</tt> when you run
--   <a>RemovePermission</a>.
putPermission_statementId :: Lens' PutPermission (Maybe Text)

-- | This parameter enables you to limit the permission to accounts that
--   fulfill a certain condition, such as being a member of a certain
--   Amazon Web Services organization. For more information about Amazon
--   Web Services Organizations, see <a>What Is Amazon Web Services
--   Organizations</a> in the <i>Amazon Web Services Organizations User
--   Guide</i>.
--   
--   If you specify <tt>Condition</tt> with an Amazon Web Services
--   organization ID, and specify "*" as the value for <tt>Principal</tt>,
--   you grant permission to all the accounts in the named organization.
--   
--   The <tt>Condition</tt> is a JSON string which must contain
--   <tt>Type</tt>, <tt>Key</tt>, and <tt>Value</tt> fields.
putPermission_condition :: Lens' PutPermission (Maybe Condition)

-- | <i>See:</i> <a>newPutPermissionResponse</a> smart constructor.
data PutPermissionResponse
PutPermissionResponse' :: PutPermissionResponse

-- | Create a value of <a>PutPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutPermissionResponse :: PutPermissionResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutPermission.PutPermissionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutPermission.PutPermissionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutPermission.PutPermissionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutPermission.PutPermissionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutPermission.PutPermissionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.PutPermission.PutPermission
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.PutPermission.PutPermission


-- | This is used by SaaS partners to write events to a customer's partner
--   event bus. Amazon Web Services customers do not use this operation.
module Amazonka.CloudWatchEvents.PutPartnerEvents

-- | <i>See:</i> <a>newPutPartnerEvents</a> smart constructor.
data PutPartnerEvents
PutPartnerEvents' :: NonEmpty PutPartnerEventsRequestEntry -> PutPartnerEvents

-- | The list of events to write to the event bus.
[$sel:entries:PutPartnerEvents'] :: PutPartnerEvents -> NonEmpty PutPartnerEventsRequestEntry

-- | Create a value of <a>PutPartnerEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entries:PutPartnerEvents'</a>, <a>putPartnerEvents_entries</a>
--   - The list of events to write to the event bus.
newPutPartnerEvents :: NonEmpty PutPartnerEventsRequestEntry -> PutPartnerEvents

-- | The list of events to write to the event bus.
putPartnerEvents_entries :: Lens' PutPartnerEvents (NonEmpty PutPartnerEventsRequestEntry)

-- | <i>See:</i> <a>newPutPartnerEventsResponse</a> smart constructor.
data PutPartnerEventsResponse
PutPartnerEventsResponse' :: Maybe Int -> Maybe [PutPartnerEventsResultEntry] -> Int -> PutPartnerEventsResponse

-- | The number of events from this operation that could not be written to
--   the partner event bus.
[$sel:failedEntryCount:PutPartnerEventsResponse'] :: PutPartnerEventsResponse -> Maybe Int

-- | The list of events from this operation that were successfully written
--   to the partner event bus.
[$sel:entries:PutPartnerEventsResponse'] :: PutPartnerEventsResponse -> Maybe [PutPartnerEventsResultEntry]

-- | The response's http status code.
[$sel:httpStatus:PutPartnerEventsResponse'] :: PutPartnerEventsResponse -> Int

-- | Create a value of <a>PutPartnerEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutPartnerEventsResponse'</a>,
--   <a>putPartnerEventsResponse_failedEntryCount</a> - The number of
--   events from this operation that could not be written to the partner
--   event bus.
--   
--   <a>$sel:entries:PutPartnerEvents'</a>,
--   <a>putPartnerEventsResponse_entries</a> - The list of events from this
--   operation that were successfully written to the partner event bus.
--   
--   <a>$sel:httpStatus:PutPartnerEventsResponse'</a>,
--   <a>putPartnerEventsResponse_httpStatus</a> - The response's http
--   status code.
newPutPartnerEventsResponse :: Int -> PutPartnerEventsResponse

-- | The number of events from this operation that could not be written to
--   the partner event bus.
putPartnerEventsResponse_failedEntryCount :: Lens' PutPartnerEventsResponse (Maybe Int)

-- | The list of events from this operation that were successfully written
--   to the partner event bus.
putPartnerEventsResponse_entries :: Lens' PutPartnerEventsResponse (Maybe [PutPartnerEventsResultEntry])

-- | The response's http status code.
putPartnerEventsResponse_httpStatus :: Lens' PutPartnerEventsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEventsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEventsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEventsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEventsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.PutPartnerEvents.PutPartnerEvents


-- | Sends custom events to Amazon EventBridge so that they can be matched
--   to rules.
module Amazonka.CloudWatchEvents.PutEvents

-- | <i>See:</i> <a>newPutEvents</a> smart constructor.
data PutEvents
PutEvents' :: NonEmpty PutEventsRequestEntry -> PutEvents

-- | The entry that defines an event in your system. You can specify
--   several parameters for the entry such as the source and type of the
--   event, resources associated with the event, and so on.
[$sel:entries:PutEvents'] :: PutEvents -> NonEmpty PutEventsRequestEntry

-- | Create a value of <a>PutEvents</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entries:PutEvents'</a>, <a>putEvents_entries</a> - The entry
--   that defines an event in your system. You can specify several
--   parameters for the entry such as the source and type of the event,
--   resources associated with the event, and so on.
newPutEvents :: NonEmpty PutEventsRequestEntry -> PutEvents

-- | The entry that defines an event in your system. You can specify
--   several parameters for the entry such as the source and type of the
--   event, resources associated with the event, and so on.
putEvents_entries :: Lens' PutEvents (NonEmpty PutEventsRequestEntry)

-- | <i>See:</i> <a>newPutEventsResponse</a> smart constructor.
data PutEventsResponse
PutEventsResponse' :: Maybe Int -> Maybe [PutEventsResultEntry] -> Int -> PutEventsResponse

-- | The number of failed entries.
[$sel:failedEntryCount:PutEventsResponse'] :: PutEventsResponse -> Maybe Int

-- | The successfully and unsuccessfully ingested events results. If the
--   ingestion was successful, the entry has the event ID in it. Otherwise,
--   you can use the error code and error message to identify the problem
--   with the entry.
[$sel:entries:PutEventsResponse'] :: PutEventsResponse -> Maybe [PutEventsResultEntry]

-- | The response's http status code.
[$sel:httpStatus:PutEventsResponse'] :: PutEventsResponse -> Int

-- | Create a value of <a>PutEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutEventsResponse'</a>,
--   <a>putEventsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:entries:PutEvents'</a>, <a>putEventsResponse_entries</a> - The
--   successfully and unsuccessfully ingested events results. If the
--   ingestion was successful, the entry has the event ID in it. Otherwise,
--   you can use the error code and error message to identify the problem
--   with the entry.
--   
--   <a>$sel:httpStatus:PutEventsResponse'</a>,
--   <a>putEventsResponse_httpStatus</a> - The response's http status code.
newPutEventsResponse :: Int -> PutEventsResponse

-- | The number of failed entries.
putEventsResponse_failedEntryCount :: Lens' PutEventsResponse (Maybe Int)

-- | The successfully and unsuccessfully ingested events results. If the
--   ingestion was successful, the entry has the event ID in it. Otherwise,
--   you can use the error code and error message to identify the problem
--   with the entry.
putEventsResponse_entries :: Lens' PutEventsResponse (Maybe [PutEventsResultEntry])

-- | The response's http status code.
putEventsResponse_httpStatus :: Lens' PutEventsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.PutEvents.PutEventsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.PutEvents.PutEventsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.PutEvents.PutEventsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.PutEvents.PutEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutEvents.PutEventsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.PutEvents.PutEvents
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.PutEvents.PutEvents


-- | Lists the targets assigned to the specified rule.
--   
--   This operation returns paginated results.
module Amazonka.CloudWatchEvents.ListTargetsByRule

-- | <i>See:</i> <a>newListTargetsByRule</a> smart constructor.
data ListTargetsByRule
ListTargetsByRule' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListTargetsByRule

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListTargetsByRule'] :: ListTargetsByRule -> Maybe Text

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:ListTargetsByRule'] :: ListTargetsByRule -> Maybe Text

-- | The maximum number of results to return.
[$sel:limit:ListTargetsByRule'] :: ListTargetsByRule -> Maybe Natural

-- | The name of the rule.
[$sel:rule:ListTargetsByRule'] :: ListTargetsByRule -> Text

-- | Create a value of <a>ListTargetsByRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTargetsByRule'</a>,
--   <a>listTargetsByRule_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListTargetsByRule'</a>,
--   <a>listTargetsByRule_eventBusName</a> - The name or ARN of the event
--   bus associated with the rule. If you omit this, the default event bus
--   is used.
--   
--   <a>$sel:limit:ListTargetsByRule'</a>, <a>listTargetsByRule_limit</a> -
--   The maximum number of results to return.
--   
--   <a>$sel:rule:ListTargetsByRule'</a>, <a>listTargetsByRule_rule</a> -
--   The name of the rule.
newListTargetsByRule :: Text -> ListTargetsByRule

-- | The token returned by a previous call to retrieve the next set of
--   results.
listTargetsByRule_nextToken :: Lens' ListTargetsByRule (Maybe Text)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
listTargetsByRule_eventBusName :: Lens' ListTargetsByRule (Maybe Text)

-- | The maximum number of results to return.
listTargetsByRule_limit :: Lens' ListTargetsByRule (Maybe Natural)

-- | The name of the rule.
listTargetsByRule_rule :: Lens' ListTargetsByRule Text

-- | <i>See:</i> <a>newListTargetsByRuleResponse</a> smart constructor.
data ListTargetsByRuleResponse
ListTargetsByRuleResponse' :: Maybe Text -> Maybe (NonEmpty Target) -> Int -> ListTargetsByRuleResponse

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
[$sel:nextToken:ListTargetsByRuleResponse'] :: ListTargetsByRuleResponse -> Maybe Text

-- | The targets assigned to the rule.
[$sel:targets:ListTargetsByRuleResponse'] :: ListTargetsByRuleResponse -> Maybe (NonEmpty Target)

-- | The response's http status code.
[$sel:httpStatus:ListTargetsByRuleResponse'] :: ListTargetsByRuleResponse -> Int

-- | Create a value of <a>ListTargetsByRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTargetsByRule'</a>,
--   <a>listTargetsByRuleResponse_nextToken</a> - Indicates whether there
--   are additional results to retrieve. If there are no more results, the
--   value is null.
--   
--   <a>$sel:targets:ListTargetsByRuleResponse'</a>,
--   <a>listTargetsByRuleResponse_targets</a> - The targets assigned to the
--   rule.
--   
--   <a>$sel:httpStatus:ListTargetsByRuleResponse'</a>,
--   <a>listTargetsByRuleResponse_httpStatus</a> - The response's http
--   status code.
newListTargetsByRuleResponse :: Int -> ListTargetsByRuleResponse

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listTargetsByRuleResponse_nextToken :: Lens' ListTargetsByRuleResponse (Maybe Text)

-- | The targets assigned to the rule.
listTargetsByRuleResponse_targets :: Lens' ListTargetsByRuleResponse (Maybe (NonEmpty Target))

-- | The response's http status code.
listTargetsByRuleResponse_httpStatus :: Lens' ListTargetsByRuleResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRuleResponse
instance Amazonka.Pager.AWSPager Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListTargetsByRule.ListTargetsByRule


-- | Displays the tags associated with an EventBridge resource. In
--   EventBridge, rules and event buses can be tagged.
module Amazonka.CloudWatchEvents.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the EventBridge resource for which you want to view tags.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the EventBridge
--   resource for which you want to view tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the EventBridge resource for which you want to view tags.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the resource you
--   specified
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the resource you specified
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the resource you
--   specified
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListTagsForResource.ListTagsForResource


-- | Lists your Amazon EventBridge rules. You can either list all the rules
--   or you can provide a prefix to match to the rule names.
--   
--   ListRules does not list the targets of a rule. To see the targets
--   associated with a rule, use <a>ListTargetsByRule</a>.
--   
--   This operation returns paginated results.
module Amazonka.CloudWatchEvents.ListRules

-- | <i>See:</i> <a>newListRules</a> smart constructor.
data ListRules
ListRules' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListRules

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListRules'] :: ListRules -> Maybe Text

-- | The name or ARN of the event bus to list the rules for. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:ListRules'] :: ListRules -> Maybe Text

-- | The prefix matching the rule name.
[$sel:namePrefix:ListRules'] :: ListRules -> Maybe Text

-- | The maximum number of results to return.
[$sel:limit:ListRules'] :: ListRules -> Maybe Natural

-- | Create a value of <a>ListRules</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRules'</a>, <a>listRules_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListRules'</a>, <a>listRules_eventBusName</a> -
--   The name or ARN of the event bus to list the rules for. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:namePrefix:ListRules'</a>, <a>listRules_namePrefix</a> - The
--   prefix matching the rule name.
--   
--   <a>$sel:limit:ListRules'</a>, <a>listRules_limit</a> - The maximum
--   number of results to return.
newListRules :: ListRules

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRules_nextToken :: Lens' ListRules (Maybe Text)

-- | The name or ARN of the event bus to list the rules for. If you omit
--   this, the default event bus is used.
listRules_eventBusName :: Lens' ListRules (Maybe Text)

-- | The prefix matching the rule name.
listRules_namePrefix :: Lens' ListRules (Maybe Text)

-- | The maximum number of results to return.
listRules_limit :: Lens' ListRules (Maybe Natural)

-- | <i>See:</i> <a>newListRulesResponse</a> smart constructor.
data ListRulesResponse
ListRulesResponse' :: Maybe [Rule] -> Maybe Text -> Int -> ListRulesResponse

-- | The rules that match the specified criteria.
[$sel:rules:ListRulesResponse'] :: ListRulesResponse -> Maybe [Rule]

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
[$sel:nextToken:ListRulesResponse'] :: ListRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRulesResponse'] :: ListRulesResponse -> Int

-- | Create a value of <a>ListRulesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:ListRulesResponse'</a>, <a>listRulesResponse_rules</a> -
--   The rules that match the specified criteria.
--   
--   <a>$sel:nextToken:ListRules'</a>, <a>listRulesResponse_nextToken</a> -
--   Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
--   
--   <a>$sel:httpStatus:ListRulesResponse'</a>,
--   <a>listRulesResponse_httpStatus</a> - The response's http status code.
newListRulesResponse :: Int -> ListRulesResponse

-- | The rules that match the specified criteria.
listRulesResponse_rules :: Lens' ListRulesResponse (Maybe [Rule])

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listRulesResponse_nextToken :: Lens' ListRulesResponse (Maybe Text)

-- | The response's http status code.
listRulesResponse_httpStatus :: Lens' ListRulesResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListRules.ListRules
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListRules.ListRules
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListRules.ListRules
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListRules.ListRules
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListRules.ListRulesResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListRules.ListRulesResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListRules.ListRulesResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListRules.ListRulesResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListRules.ListRules
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListRules.ListRulesResponse
instance Amazonka.Pager.AWSPager Amazonka.CloudWatchEvents.ListRules.ListRules
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListRules.ListRules
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListRules.ListRules
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListRules.ListRules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListRules.ListRules
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListRules.ListRules
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListRules.ListRules


-- | Lists the rules for the specified target. You can see which of the
--   rules in Amazon EventBridge can invoke a specific target in your
--   account.
--   
--   This operation returns paginated results.
module Amazonka.CloudWatchEvents.ListRuleNamesByTarget

-- | <i>See:</i> <a>newListRuleNamesByTarget</a> smart constructor.
data ListRuleNamesByTarget
ListRuleNamesByTarget' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListRuleNamesByTarget

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListRuleNamesByTarget'] :: ListRuleNamesByTarget -> Maybe Text

-- | The name or ARN of the event bus to list rules for. If you omit this,
--   the default event bus is used.
[$sel:eventBusName:ListRuleNamesByTarget'] :: ListRuleNamesByTarget -> Maybe Text

-- | The maximum number of results to return.
[$sel:limit:ListRuleNamesByTarget'] :: ListRuleNamesByTarget -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the target resource.
[$sel:targetArn:ListRuleNamesByTarget'] :: ListRuleNamesByTarget -> Text

-- | Create a value of <a>ListRuleNamesByTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_eventBusName</a> - The name or ARN of the
--   event bus to list rules for. If you omit this, the default event bus
--   is used.
--   
--   <a>$sel:limit:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_limit</a> - The maximum number of results to
--   return.
--   
--   <a>$sel:targetArn:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_targetArn</a> - The Amazon Resource Name
--   (ARN) of the target resource.
newListRuleNamesByTarget :: Text -> ListRuleNamesByTarget

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRuleNamesByTarget_nextToken :: Lens' ListRuleNamesByTarget (Maybe Text)

-- | The name or ARN of the event bus to list rules for. If you omit this,
--   the default event bus is used.
listRuleNamesByTarget_eventBusName :: Lens' ListRuleNamesByTarget (Maybe Text)

-- | The maximum number of results to return.
listRuleNamesByTarget_limit :: Lens' ListRuleNamesByTarget (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the target resource.
listRuleNamesByTarget_targetArn :: Lens' ListRuleNamesByTarget Text

-- | <i>See:</i> <a>newListRuleNamesByTargetResponse</a> smart constructor.
data ListRuleNamesByTargetResponse
ListRuleNamesByTargetResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListRuleNamesByTargetResponse

-- | The names of the rules that can invoke the given target.
[$sel:ruleNames:ListRuleNamesByTargetResponse'] :: ListRuleNamesByTargetResponse -> Maybe [Text]

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
[$sel:nextToken:ListRuleNamesByTargetResponse'] :: ListRuleNamesByTargetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRuleNamesByTargetResponse'] :: ListRuleNamesByTargetResponse -> Int

-- | Create a value of <a>ListRuleNamesByTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:ListRuleNamesByTargetResponse'</a>,
--   <a>listRuleNamesByTargetResponse_ruleNames</a> - The names of the
--   rules that can invoke the given target.
--   
--   <a>$sel:nextToken:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTargetResponse_nextToken</a> - Indicates whether
--   there are additional results to retrieve. If there are no more
--   results, the value is null.
--   
--   <a>$sel:httpStatus:ListRuleNamesByTargetResponse'</a>,
--   <a>listRuleNamesByTargetResponse_httpStatus</a> - The response's http
--   status code.
newListRuleNamesByTargetResponse :: Int -> ListRuleNamesByTargetResponse

-- | The names of the rules that can invoke the given target.
listRuleNamesByTargetResponse_ruleNames :: Lens' ListRuleNamesByTargetResponse (Maybe [Text])

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listRuleNamesByTargetResponse_nextToken :: Lens' ListRuleNamesByTargetResponse (Maybe Text)

-- | The response's http status code.
listRuleNamesByTargetResponse_httpStatus :: Lens' ListRuleNamesByTargetResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTargetResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTargetResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTargetResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTargetResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTargetResponse
instance Amazonka.Pager.AWSPager Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListRuleNamesByTarget.ListRuleNamesByTarget


-- | Lists your replays. You can either list all the replays or you can
--   provide a prefix to match to the replay names. Filter parameters are
--   exclusive.
module Amazonka.CloudWatchEvents.ListReplays

-- | <i>See:</i> <a>newListReplays</a> smart constructor.
data ListReplays
ListReplays' :: Maybe Text -> Maybe ReplayState -> Maybe Text -> Maybe Text -> Maybe Natural -> ListReplays

-- | The ARN of the archive from which the events are replayed.
[$sel:eventSourceArn:ListReplays'] :: ListReplays -> Maybe Text

-- | The state of the replay.
[$sel:state:ListReplays'] :: ListReplays -> Maybe ReplayState

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListReplays'] :: ListReplays -> Maybe Text

-- | A name prefix to filter the replays returned. Only replays with name
--   that match the prefix are returned.
[$sel:namePrefix:ListReplays'] :: ListReplays -> Maybe Text

-- | The maximum number of replays to retrieve.
[$sel:limit:ListReplays'] :: ListReplays -> Maybe Natural

-- | Create a value of <a>ListReplays</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListReplays'</a>,
--   <a>listReplays_eventSourceArn</a> - The ARN of the archive from which
--   the events are replayed.
--   
--   <a>$sel:state:ListReplays'</a>, <a>listReplays_state</a> - The state
--   of the replay.
--   
--   <a>$sel:nextToken:ListReplays'</a>, <a>listReplays_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListReplays'</a>, <a>listReplays_namePrefix</a> - A
--   name prefix to filter the replays returned. Only replays with name
--   that match the prefix are returned.
--   
--   <a>$sel:limit:ListReplays'</a>, <a>listReplays_limit</a> - The maximum
--   number of replays to retrieve.
newListReplays :: ListReplays

-- | The ARN of the archive from which the events are replayed.
listReplays_eventSourceArn :: Lens' ListReplays (Maybe Text)

-- | The state of the replay.
listReplays_state :: Lens' ListReplays (Maybe ReplayState)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listReplays_nextToken :: Lens' ListReplays (Maybe Text)

-- | A name prefix to filter the replays returned. Only replays with name
--   that match the prefix are returned.
listReplays_namePrefix :: Lens' ListReplays (Maybe Text)

-- | The maximum number of replays to retrieve.
listReplays_limit :: Lens' ListReplays (Maybe Natural)

-- | <i>See:</i> <a>newListReplaysResponse</a> smart constructor.
data ListReplaysResponse
ListReplaysResponse' :: Maybe [Replay] -> Maybe Text -> Int -> ListReplaysResponse

-- | An array of <tt>Replay</tt> objects that contain information about the
--   replay.
[$sel:replays:ListReplaysResponse'] :: ListReplaysResponse -> Maybe [Replay]

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListReplaysResponse'] :: ListReplaysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListReplaysResponse'] :: ListReplaysResponse -> Int

-- | Create a value of <a>ListReplaysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replays:ListReplaysResponse'</a>,
--   <a>listReplaysResponse_replays</a> - An array of <tt>Replay</tt>
--   objects that contain information about the replay.
--   
--   <a>$sel:nextToken:ListReplays'</a>,
--   <a>listReplaysResponse_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListReplaysResponse'</a>,
--   <a>listReplaysResponse_httpStatus</a> - The response's http status
--   code.
newListReplaysResponse :: Int -> ListReplaysResponse

-- | An array of <tt>Replay</tt> objects that contain information about the
--   replay.
listReplaysResponse_replays :: Lens' ListReplaysResponse (Maybe [Replay])

-- | The token returned by a previous call to retrieve the next set of
--   results.
listReplaysResponse_nextToken :: Lens' ListReplaysResponse (Maybe Text)

-- | The response's http status code.
listReplaysResponse_httpStatus :: Lens' ListReplaysResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListReplays.ListReplaysResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListReplays.ListReplaysResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListReplays.ListReplaysResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListReplays.ListReplaysResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListReplays.ListReplaysResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListReplays.ListReplays
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListReplays.ListReplays


-- | An SaaS partner can use this operation to list all the partner event
--   source names that they have created. This operation is not used by
--   Amazon Web Services customers.
module Amazonka.CloudWatchEvents.ListPartnerEventSources

-- | <i>See:</i> <a>newListPartnerEventSources</a> smart constructor.
data ListPartnerEventSources
ListPartnerEventSources' :: Maybe Text -> Maybe Natural -> Text -> ListPartnerEventSources

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
[$sel:nextToken:ListPartnerEventSources'] :: ListPartnerEventSources -> Maybe Text

-- | pecifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
[$sel:limit:ListPartnerEventSources'] :: ListPartnerEventSources -> Maybe Natural

-- | If you specify this, the results are limited to only those partner
--   event sources that start with the string you specify.
[$sel:namePrefix:ListPartnerEventSources'] :: ListPartnerEventSources -> Text

-- | Create a value of <a>ListPartnerEventSources</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_nextToken</a> - The token returned by a
--   previous call to this operation. Specifying this retrieves the next
--   set of results.
--   
--   <a>$sel:limit:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_limit</a> - pecifying this limits the
--   number of results returned by this operation. The operation also
--   returns a NextToken which you can use in a subsequent operation to
--   retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_namePrefix</a> - If you specify this, the
--   results are limited to only those partner event sources that start
--   with the string you specify.
newListPartnerEventSources :: Text -> ListPartnerEventSources

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
listPartnerEventSources_nextToken :: Lens' ListPartnerEventSources (Maybe Text)

-- | pecifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listPartnerEventSources_limit :: Lens' ListPartnerEventSources (Maybe Natural)

-- | If you specify this, the results are limited to only those partner
--   event sources that start with the string you specify.
listPartnerEventSources_namePrefix :: Lens' ListPartnerEventSources Text

-- | <i>See:</i> <a>newListPartnerEventSourcesResponse</a> smart
--   constructor.
data ListPartnerEventSourcesResponse
ListPartnerEventSourcesResponse' :: Maybe [PartnerEventSource] -> Maybe Text -> Int -> ListPartnerEventSourcesResponse

-- | The list of partner event sources returned by the operation.
[$sel:partnerEventSources:ListPartnerEventSourcesResponse'] :: ListPartnerEventSourcesResponse -> Maybe [PartnerEventSource]

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
[$sel:nextToken:ListPartnerEventSourcesResponse'] :: ListPartnerEventSourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPartnerEventSourcesResponse'] :: ListPartnerEventSourcesResponse -> Int

-- | Create a value of <a>ListPartnerEventSourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partnerEventSources:ListPartnerEventSourcesResponse'</a>,
--   <a>listPartnerEventSourcesResponse_partnerEventSources</a> - The list
--   of partner event sources returned by the operation.
--   
--   <a>$sel:nextToken:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSourcesResponse_nextToken</a> - A token you can use
--   in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListPartnerEventSourcesResponse'</a>,
--   <a>listPartnerEventSourcesResponse_httpStatus</a> - The response's
--   http status code.
newListPartnerEventSourcesResponse :: Int -> ListPartnerEventSourcesResponse

-- | The list of partner event sources returned by the operation.
listPartnerEventSourcesResponse_partnerEventSources :: Lens' ListPartnerEventSourcesResponse (Maybe [PartnerEventSource])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listPartnerEventSourcesResponse_nextToken :: Lens' ListPartnerEventSourcesResponse (Maybe Text)

-- | The response's http status code.
listPartnerEventSourcesResponse_httpStatus :: Lens' ListPartnerEventSourcesResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSourcesResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSourcesResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSourcesResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSourcesResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSourcesResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListPartnerEventSources.ListPartnerEventSources


-- | An SaaS partner can use this operation to display the Amazon Web
--   Services account ID that a particular partner event source name is
--   associated with. This operation is not used by Amazon Web Services
--   customers.
module Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts

-- | <i>See:</i> <a>newListPartnerEventSourceAccounts</a> smart
--   constructor.
data ListPartnerEventSourceAccounts
ListPartnerEventSourceAccounts' :: Maybe Text -> Maybe Natural -> Text -> ListPartnerEventSourceAccounts

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
[$sel:nextToken:ListPartnerEventSourceAccounts'] :: ListPartnerEventSourceAccounts -> Maybe Text

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
[$sel:limit:ListPartnerEventSourceAccounts'] :: ListPartnerEventSourceAccounts -> Maybe Natural

-- | The name of the partner event source to display account information
--   about.
[$sel:eventSourceName:ListPartnerEventSourceAccounts'] :: ListPartnerEventSourceAccounts -> Text

-- | Create a value of <a>ListPartnerEventSourceAccounts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_nextToken</a> - The token returned
--   by a previous call to this operation. Specifying this retrieves the
--   next set of results.
--   
--   <a>$sel:limit:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_limit</a> - Specifying this limits
--   the number of results returned by this operation. The operation also
--   returns a NextToken which you can use in a subsequent operation to
--   retrieve the next set of results.
--   
--   <a>$sel:eventSourceName:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_eventSourceName</a> - The name of
--   the partner event source to display account information about.
newListPartnerEventSourceAccounts :: Text -> ListPartnerEventSourceAccounts

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
listPartnerEventSourceAccounts_nextToken :: Lens' ListPartnerEventSourceAccounts (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listPartnerEventSourceAccounts_limit :: Lens' ListPartnerEventSourceAccounts (Maybe Natural)

-- | The name of the partner event source to display account information
--   about.
listPartnerEventSourceAccounts_eventSourceName :: Lens' ListPartnerEventSourceAccounts Text

-- | <i>See:</i> <a>newListPartnerEventSourceAccountsResponse</a> smart
--   constructor.
data ListPartnerEventSourceAccountsResponse
ListPartnerEventSourceAccountsResponse' :: Maybe [PartnerEventSourceAccount] -> Maybe Text -> Int -> ListPartnerEventSourceAccountsResponse

-- | The list of partner event sources returned by the operation.
[$sel:partnerEventSourceAccounts:ListPartnerEventSourceAccountsResponse'] :: ListPartnerEventSourceAccountsResponse -> Maybe [PartnerEventSourceAccount]

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
[$sel:nextToken:ListPartnerEventSourceAccountsResponse'] :: ListPartnerEventSourceAccountsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPartnerEventSourceAccountsResponse'] :: ListPartnerEventSourceAccountsResponse -> Int

-- | Create a value of <a>ListPartnerEventSourceAccountsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:partnerEventSourceAccounts:ListPartnerEventSourceAccountsResponse'</a>,
--   <a>listPartnerEventSourceAccountsResponse_partnerEventSourceAccounts</a>
--   - The list of partner event sources returned by the operation.
--   
--   <a>$sel:nextToken:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccountsResponse_nextToken</a> - A token you
--   can use in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListPartnerEventSourceAccountsResponse'</a>,
--   <a>listPartnerEventSourceAccountsResponse_httpStatus</a> - The
--   response's http status code.
newListPartnerEventSourceAccountsResponse :: Int -> ListPartnerEventSourceAccountsResponse

-- | The list of partner event sources returned by the operation.
listPartnerEventSourceAccountsResponse_partnerEventSourceAccounts :: Lens' ListPartnerEventSourceAccountsResponse (Maybe [PartnerEventSourceAccount])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listPartnerEventSourceAccountsResponse_nextToken :: Lens' ListPartnerEventSourceAccountsResponse (Maybe Text)

-- | The response's http status code.
listPartnerEventSourceAccountsResponse_httpStatus :: Lens' ListPartnerEventSourceAccountsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccountsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccountsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccountsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccountsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccountsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListPartnerEventSourceAccounts.ListPartnerEventSourceAccounts


-- | You can use this to see all the partner event sources that have been
--   shared with your Amazon Web Services account. For more information
--   about partner event sources, see <a>CreateEventBus</a>.
module Amazonka.CloudWatchEvents.ListEventSources

-- | <i>See:</i> <a>newListEventSources</a> smart constructor.
data ListEventSources
ListEventSources' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventSources

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListEventSources'] :: ListEventSources -> Maybe Text

-- | Specifying this limits the results to only those partner event sources
--   with names that start with the specified prefix.
[$sel:namePrefix:ListEventSources'] :: ListEventSources -> Maybe Text

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
[$sel:limit:ListEventSources'] :: ListEventSources -> Maybe Natural

-- | Create a value of <a>ListEventSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventSources'</a>,
--   <a>listEventSources_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListEventSources'</a>,
--   <a>listEventSources_namePrefix</a> - Specifying this limits the
--   results to only those partner event sources with names that start with
--   the specified prefix.
--   
--   <a>$sel:limit:ListEventSources'</a>, <a>listEventSources_limit</a> -
--   Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
newListEventSources :: ListEventSources

-- | The token returned by a previous call to retrieve the next set of
--   results.
listEventSources_nextToken :: Lens' ListEventSources (Maybe Text)

-- | Specifying this limits the results to only those partner event sources
--   with names that start with the specified prefix.
listEventSources_namePrefix :: Lens' ListEventSources (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listEventSources_limit :: Lens' ListEventSources (Maybe Natural)

-- | <i>See:</i> <a>newListEventSourcesResponse</a> smart constructor.
data ListEventSourcesResponse
ListEventSourcesResponse' :: Maybe Text -> Maybe [EventSource] -> Int -> ListEventSourcesResponse

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
[$sel:nextToken:ListEventSourcesResponse'] :: ListEventSourcesResponse -> Maybe Text

-- | The list of event sources.
[$sel:eventSources:ListEventSourcesResponse'] :: ListEventSourcesResponse -> Maybe [EventSource]

-- | The response's http status code.
[$sel:httpStatus:ListEventSourcesResponse'] :: ListEventSourcesResponse -> Int

-- | Create a value of <a>ListEventSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventSources'</a>,
--   <a>listEventSourcesResponse_nextToken</a> - A token you can use in a
--   subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:eventSources:ListEventSourcesResponse'</a>,
--   <a>listEventSourcesResponse_eventSources</a> - The list of event
--   sources.
--   
--   <a>$sel:httpStatus:ListEventSourcesResponse'</a>,
--   <a>listEventSourcesResponse_httpStatus</a> - The response's http
--   status code.
newListEventSourcesResponse :: Int -> ListEventSourcesResponse

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listEventSourcesResponse_nextToken :: Lens' ListEventSourcesResponse (Maybe Text)

-- | The list of event sources.
listEventSourcesResponse_eventSources :: Lens' ListEventSourcesResponse (Maybe [EventSource])

-- | The response's http status code.
listEventSourcesResponse_httpStatus :: Lens' ListEventSourcesResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListEventSources.ListEventSourcesResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListEventSources.ListEventSourcesResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListEventSources.ListEventSourcesResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListEventSources.ListEventSourcesResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListEventSources.ListEventSourcesResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListEventSources.ListEventSources
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListEventSources.ListEventSources


-- | Lists all the event buses in your account, including the default event
--   bus, custom event buses, and partner event buses.
module Amazonka.CloudWatchEvents.ListEventBuses

-- | <i>See:</i> <a>newListEventBuses</a> smart constructor.
data ListEventBuses
ListEventBuses' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventBuses

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListEventBuses'] :: ListEventBuses -> Maybe Text

-- | Specifying this limits the results to only those event buses with
--   names that start with the specified prefix.
[$sel:namePrefix:ListEventBuses'] :: ListEventBuses -> Maybe Text

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
[$sel:limit:ListEventBuses'] :: ListEventBuses -> Maybe Natural

-- | Create a value of <a>ListEventBuses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventBuses'</a>, <a>listEventBuses_nextToken</a>
--   - The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:namePrefix:ListEventBuses'</a>,
--   <a>listEventBuses_namePrefix</a> - Specifying this limits the results
--   to only those event buses with names that start with the specified
--   prefix.
--   
--   <a>$sel:limit:ListEventBuses'</a>, <a>listEventBuses_limit</a> -
--   Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
newListEventBuses :: ListEventBuses

-- | The token returned by a previous call to retrieve the next set of
--   results.
listEventBuses_nextToken :: Lens' ListEventBuses (Maybe Text)

-- | Specifying this limits the results to only those event buses with
--   names that start with the specified prefix.
listEventBuses_namePrefix :: Lens' ListEventBuses (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listEventBuses_limit :: Lens' ListEventBuses (Maybe Natural)

-- | <i>See:</i> <a>newListEventBusesResponse</a> smart constructor.
data ListEventBusesResponse
ListEventBusesResponse' :: Maybe [EventBus] -> Maybe Text -> Int -> ListEventBusesResponse

-- | This list of event buses.
[$sel:eventBuses:ListEventBusesResponse'] :: ListEventBusesResponse -> Maybe [EventBus]

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
[$sel:nextToken:ListEventBusesResponse'] :: ListEventBusesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEventBusesResponse'] :: ListEventBusesResponse -> Int

-- | Create a value of <a>ListEventBusesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBuses:ListEventBusesResponse'</a>,
--   <a>listEventBusesResponse_eventBuses</a> - This list of event buses.
--   
--   <a>$sel:nextToken:ListEventBuses'</a>,
--   <a>listEventBusesResponse_nextToken</a> - A token you can use in a
--   subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListEventBusesResponse'</a>,
--   <a>listEventBusesResponse_httpStatus</a> - The response's http status
--   code.
newListEventBusesResponse :: Int -> ListEventBusesResponse

-- | This list of event buses.
listEventBusesResponse_eventBuses :: Lens' ListEventBusesResponse (Maybe [EventBus])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listEventBusesResponse_nextToken :: Lens' ListEventBusesResponse (Maybe Text)

-- | The response's http status code.
listEventBusesResponse_httpStatus :: Lens' ListEventBusesResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListEventBuses.ListEventBusesResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListEventBuses.ListEventBusesResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListEventBuses.ListEventBusesResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListEventBuses.ListEventBusesResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListEventBuses.ListEventBusesResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListEventBuses.ListEventBuses


-- | Retrieves a list of connections from the account.
module Amazonka.CloudWatchEvents.ListConnections

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ConnectionState -> ListConnections

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListConnections'] :: ListConnections -> Maybe Text

-- | A name prefix to filter results returned. Only connections with a name
--   that starts with the prefix are returned.
[$sel:namePrefix:ListConnections'] :: ListConnections -> Maybe Text

-- | The maximum number of connections to return.
[$sel:limit:ListConnections'] :: ListConnections -> Maybe Natural

-- | The state of the connection.
[$sel:connectionState:ListConnections'] :: ListConnections -> Maybe ConnectionState

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListConnections'</a>,
--   <a>listConnections_namePrefix</a> - A name prefix to filter results
--   returned. Only connections with a name that starts with the prefix are
--   returned.
--   
--   <a>$sel:limit:ListConnections'</a>, <a>listConnections_limit</a> - The
--   maximum number of connections to return.
--   
--   <a>$sel:connectionState:ListConnections'</a>,
--   <a>listConnections_connectionState</a> - The state of the connection.
newListConnections :: ListConnections

-- | The token returned by a previous call to retrieve the next set of
--   results.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | A name prefix to filter results returned. Only connections with a name
--   that starts with the prefix are returned.
listConnections_namePrefix :: Lens' ListConnections (Maybe Text)

-- | The maximum number of connections to return.
listConnections_limit :: Lens' ListConnections (Maybe Natural)

-- | The state of the connection.
listConnections_connectionState :: Lens' ListConnections (Maybe ConnectionState)

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe [Connection] -> Maybe Text -> Int -> ListConnectionsResponse

-- | An array of connections objects that include details about the
--   connections.
[$sel:connections:ListConnectionsResponse'] :: ListConnectionsResponse -> Maybe [Connection]

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
[$sel:nextToken:ListConnectionsResponse'] :: ListConnectionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConnectionsResponse'] :: ListConnectionsResponse -> Int

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connections</a> - An array of connections
--   objects that include details about the connections.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - A token you can use in a
--   subsequent request to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | An array of connections objects that include details about the
--   connections.
listConnectionsResponse_connections :: Lens' ListConnectionsResponse (Maybe [Connection])

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListConnections.ListConnectionsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListConnections.ListConnectionsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListConnections.ListConnectionsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListConnections.ListConnectionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListConnections.ListConnectionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListConnections.ListConnections
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListConnections.ListConnections


-- | Lists your archives. You can either list all the archives or you can
--   provide a prefix to match to the archive names. Filter parameters are
--   exclusive.
module Amazonka.CloudWatchEvents.ListArchives

-- | <i>See:</i> <a>newListArchives</a> smart constructor.
data ListArchives
ListArchives' :: Maybe Text -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Maybe Natural -> ListArchives

-- | The ARN of the event source associated with the archive.
[$sel:eventSourceArn:ListArchives'] :: ListArchives -> Maybe Text

-- | The state of the archive.
[$sel:state:ListArchives'] :: ListArchives -> Maybe ArchiveState

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListArchives'] :: ListArchives -> Maybe Text

-- | A name prefix to filter the archives returned. Only archives with name
--   that match the prefix are returned.
[$sel:namePrefix:ListArchives'] :: ListArchives -> Maybe Text

-- | The maximum number of results to return.
[$sel:limit:ListArchives'] :: ListArchives -> Maybe Natural

-- | Create a value of <a>ListArchives</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListArchives'</a>,
--   <a>listArchives_eventSourceArn</a> - The ARN of the event source
--   associated with the archive.
--   
--   <a>$sel:state:ListArchives'</a>, <a>listArchives_state</a> - The state
--   of the archive.
--   
--   <a>$sel:nextToken:ListArchives'</a>, <a>listArchives_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:namePrefix:ListArchives'</a>, <a>listArchives_namePrefix</a> -
--   A name prefix to filter the archives returned. Only archives with name
--   that match the prefix are returned.
--   
--   <a>$sel:limit:ListArchives'</a>, <a>listArchives_limit</a> - The
--   maximum number of results to return.
newListArchives :: ListArchives

-- | The ARN of the event source associated with the archive.
listArchives_eventSourceArn :: Lens' ListArchives (Maybe Text)

-- | The state of the archive.
listArchives_state :: Lens' ListArchives (Maybe ArchiveState)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listArchives_nextToken :: Lens' ListArchives (Maybe Text)

-- | A name prefix to filter the archives returned. Only archives with name
--   that match the prefix are returned.
listArchives_namePrefix :: Lens' ListArchives (Maybe Text)

-- | The maximum number of results to return.
listArchives_limit :: Lens' ListArchives (Maybe Natural)

-- | <i>See:</i> <a>newListArchivesResponse</a> smart constructor.
data ListArchivesResponse
ListArchivesResponse' :: Maybe [Archive] -> Maybe Text -> Int -> ListArchivesResponse

-- | An array of <tt>Archive</tt> objects that include details about an
--   archive.
[$sel:archives:ListArchivesResponse'] :: ListArchivesResponse -> Maybe [Archive]

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListArchivesResponse'] :: ListArchivesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListArchivesResponse'] :: ListArchivesResponse -> Int

-- | Create a value of <a>ListArchivesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archives:ListArchivesResponse'</a>,
--   <a>listArchivesResponse_archives</a> - An array of <tt>Archive</tt>
--   objects that include details about an archive.
--   
--   <a>$sel:nextToken:ListArchives'</a>,
--   <a>listArchivesResponse_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListArchivesResponse'</a>,
--   <a>listArchivesResponse_httpStatus</a> - The response's http status
--   code.
newListArchivesResponse :: Int -> ListArchivesResponse

-- | An array of <tt>Archive</tt> objects that include details about an
--   archive.
listArchivesResponse_archives :: Lens' ListArchivesResponse (Maybe [Archive])

-- | The token returned by a previous call to retrieve the next set of
--   results.
listArchivesResponse_nextToken :: Lens' ListArchivesResponse (Maybe Text)

-- | The response's http status code.
listArchivesResponse_httpStatus :: Lens' ListArchivesResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListArchives.ListArchivesResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListArchives.ListArchivesResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListArchives.ListArchivesResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListArchives.ListArchivesResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListArchives.ListArchivesResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListArchives.ListArchives
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListArchives.ListArchives


-- | Retrieves a list of API destination in the account in the current
--   Region.
module Amazonka.CloudWatchEvents.ListApiDestinations

-- | <i>See:</i> <a>newListApiDestinations</a> smart constructor.
data ListApiDestinations
ListApiDestinations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListApiDestinations

-- | The token returned by a previous call to retrieve the next set of
--   results.
[$sel:nextToken:ListApiDestinations'] :: ListApiDestinations -> Maybe Text

-- | A name prefix to filter results returned. Only API destinations with a
--   name that starts with the prefix are returned.
[$sel:namePrefix:ListApiDestinations'] :: ListApiDestinations -> Maybe Text

-- | The maximum number of API destinations to include in the response.
[$sel:limit:ListApiDestinations'] :: ListApiDestinations -> Maybe Natural

-- | The ARN of the connection specified for the API destination.
[$sel:connectionArn:ListApiDestinations'] :: ListApiDestinations -> Maybe Text

-- | Create a value of <a>ListApiDestinations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApiDestinations'</a>,
--   <a>listApiDestinations_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListApiDestinations'</a>,
--   <a>listApiDestinations_namePrefix</a> - A name prefix to filter
--   results returned. Only API destinations with a name that starts with
--   the prefix are returned.
--   
--   <a>$sel:limit:ListApiDestinations'</a>,
--   <a>listApiDestinations_limit</a> - The maximum number of API
--   destinations to include in the response.
--   
--   <a>$sel:connectionArn:ListApiDestinations'</a>,
--   <a>listApiDestinations_connectionArn</a> - The ARN of the connection
--   specified for the API destination.
newListApiDestinations :: ListApiDestinations

-- | The token returned by a previous call to retrieve the next set of
--   results.
listApiDestinations_nextToken :: Lens' ListApiDestinations (Maybe Text)

-- | A name prefix to filter results returned. Only API destinations with a
--   name that starts with the prefix are returned.
listApiDestinations_namePrefix :: Lens' ListApiDestinations (Maybe Text)

-- | The maximum number of API destinations to include in the response.
listApiDestinations_limit :: Lens' ListApiDestinations (Maybe Natural)

-- | The ARN of the connection specified for the API destination.
listApiDestinations_connectionArn :: Lens' ListApiDestinations (Maybe Text)

-- | <i>See:</i> <a>newListApiDestinationsResponse</a> smart constructor.
data ListApiDestinationsResponse
ListApiDestinationsResponse' :: Maybe [ApiDestination] -> Maybe Text -> Int -> ListApiDestinationsResponse

-- | An array of <tt>ApiDestination</tt> objects that include information
--   about an API destination.
[$sel:apiDestinations:ListApiDestinationsResponse'] :: ListApiDestinationsResponse -> Maybe [ApiDestination]

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
[$sel:nextToken:ListApiDestinationsResponse'] :: ListApiDestinationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListApiDestinationsResponse'] :: ListApiDestinationsResponse -> Int

-- | Create a value of <a>ListApiDestinationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiDestinations:ListApiDestinationsResponse'</a>,
--   <a>listApiDestinationsResponse_apiDestinations</a> - An array of
--   <tt>ApiDestination</tt> objects that include information about an API
--   destination.
--   
--   <a>$sel:nextToken:ListApiDestinations'</a>,
--   <a>listApiDestinationsResponse_nextToken</a> - A token you can use in
--   a subsequent request to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListApiDestinationsResponse'</a>,
--   <a>listApiDestinationsResponse_httpStatus</a> - The response's http
--   status code.
newListApiDestinationsResponse :: Int -> ListApiDestinationsResponse

-- | An array of <tt>ApiDestination</tt> objects that include information
--   about an API destination.
listApiDestinationsResponse_apiDestinations :: Lens' ListApiDestinationsResponse (Maybe [ApiDestination])

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
listApiDestinationsResponse_nextToken :: Lens' ListApiDestinationsResponse (Maybe Text)

-- | The response's http status code.
listApiDestinationsResponse_httpStatus :: Lens' ListApiDestinationsResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinationsResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinationsResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinationsResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinationsResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinationsResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ListApiDestinations.ListApiDestinations


-- | Enables the specified rule. If the rule does not exist, the operation
--   fails.
--   
--   When you enable a rule, incoming events might not immediately start
--   matching to a newly enabled rule. Allow a short period of time for
--   changes to take effect.
module Amazonka.CloudWatchEvents.EnableRule

-- | <i>See:</i> <a>newEnableRule</a> smart constructor.
data EnableRule
EnableRule' :: Maybe Text -> Text -> EnableRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:EnableRule'] :: EnableRule -> Maybe Text

-- | The name of the rule.
[$sel:name:EnableRule'] :: EnableRule -> Text

-- | Create a value of <a>EnableRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:EnableRule'</a>, <a>enableRule_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:name:EnableRule'</a>, <a>enableRule_name</a> - The name of the
--   rule.
newEnableRule :: Text -> EnableRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
enableRule_eventBusName :: Lens' EnableRule (Maybe Text)

-- | The name of the rule.
enableRule_name :: Lens' EnableRule Text

-- | <i>See:</i> <a>newEnableRuleResponse</a> smart constructor.
data EnableRuleResponse
EnableRuleResponse' :: EnableRuleResponse

-- | Create a value of <a>EnableRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableRuleResponse :: EnableRuleResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.EnableRule.EnableRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.EnableRule.EnableRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.EnableRule.EnableRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.EnableRule.EnableRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.EnableRule.EnableRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.EnableRule.EnableRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.EnableRule.EnableRule


-- | Disables the specified rule. A disabled rule won't match any events,
--   and won't self-trigger if it has a schedule expression.
--   
--   When you disable a rule, incoming events might continue to match to
--   the disabled rule. Allow a short period of time for changes to take
--   effect.
module Amazonka.CloudWatchEvents.DisableRule

-- | <i>See:</i> <a>newDisableRule</a> smart constructor.
data DisableRule
DisableRule' :: Maybe Text -> Text -> DisableRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:DisableRule'] :: DisableRule -> Maybe Text

-- | The name of the rule.
[$sel:name:DisableRule'] :: DisableRule -> Text

-- | Create a value of <a>DisableRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:DisableRule'</a>, <a>disableRule_eventBusName</a>
--   - The name or ARN of the event bus associated with the rule. If you
--   omit this, the default event bus is used.
--   
--   <a>$sel:name:DisableRule'</a>, <a>disableRule_name</a> - The name of
--   the rule.
newDisableRule :: Text -> DisableRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
disableRule_eventBusName :: Lens' DisableRule (Maybe Text)

-- | The name of the rule.
disableRule_name :: Lens' DisableRule Text

-- | <i>See:</i> <a>newDisableRuleResponse</a> smart constructor.
data DisableRuleResponse
DisableRuleResponse' :: DisableRuleResponse

-- | Create a value of <a>DisableRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableRuleResponse :: DisableRuleResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DisableRule.DisableRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DisableRule.DisableRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DisableRule.DisableRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DisableRule.DisableRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DisableRule.DisableRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DisableRule.DisableRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DisableRule.DisableRule


-- | Describes the specified rule.
--   
--   DescribeRule does not list the targets of a rule. To see the targets
--   associated with a rule, use <a>ListTargetsByRule</a>.
module Amazonka.CloudWatchEvents.DescribeRule

-- | <i>See:</i> <a>newDescribeRule</a> smart constructor.
data DescribeRule
DescribeRule' :: Maybe Text -> Text -> DescribeRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:DescribeRule'] :: DescribeRule -> Maybe Text

-- | The name of the rule.
[$sel:name:DescribeRule'] :: DescribeRule -> Text

-- | Create a value of <a>DescribeRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:DescribeRule'</a>,
--   <a>describeRule_eventBusName</a> - The name or ARN of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:name:DescribeRule'</a>, <a>describeRule_name</a> - The name of
--   the rule.
newDescribeRule :: Text -> DescribeRule

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
describeRule_eventBusName :: Lens' DescribeRule (Maybe Text)

-- | The name of the rule.
describeRule_name :: Lens' DescribeRule Text

-- | <i>See:</i> <a>newDescribeRuleResponse</a> smart constructor.
data DescribeRuleResponse
DescribeRuleResponse' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeRuleResponse

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
[$sel:eventPattern:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | Specifies whether the rule is enabled or disabled.
[$sel:state:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe RuleState

-- | The Amazon Resource Name (ARN) of the rule.
[$sel:arn:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The account ID of the user that created the rule. If you use
--   <tt>PutRule</tt> to put a rule on an event bus in another account, the
--   other account is the owner of the rule, and the rule ARN includes the
--   account ID for that account. However, the value for <tt>CreatedBy</tt>
--   is the account ID as the account that created the rule in the other
--   account.
[$sel:createdBy:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The name of the event bus associated with the rule.
[$sel:eventBusName:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)".
[$sel:scheduleExpression:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The name of the rule.
[$sel:name:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The description of the rule.
[$sel:description:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, this field displays the principal name of the Amazon
--   Web Services service that created the rule.
[$sel:managedBy:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
[$sel:roleArn:DescribeRuleResponse'] :: DescribeRuleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeRuleResponse'] :: DescribeRuleResponse -> Int

-- | Create a value of <a>DescribeRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_eventPattern</a> - The event pattern. For more
--   information, see <a>Events and Event Patterns</a> in the <i>Amazon
--   EventBridge User Guide</i>.
--   
--   <a>$sel:state:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_state</a> - Specifies whether the rule is
--   enabled or disabled.
--   
--   <a>$sel:arn:DescribeRuleResponse'</a>, <a>describeRuleResponse_arn</a>
--   - The Amazon Resource Name (ARN) of the rule.
--   
--   <a>$sel:createdBy:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_createdBy</a> - The account ID of the user
--   that created the rule. If you use <tt>PutRule</tt> to put a rule on an
--   event bus in another account, the other account is the owner of the
--   rule, and the rule ARN includes the account ID for that account.
--   However, the value for <tt>CreatedBy</tt> is the account ID as the
--   account that created the rule in the other account.
--   
--   <a>$sel:eventBusName:DescribeRule'</a>,
--   <a>describeRuleResponse_eventBusName</a> - The name of the event bus
--   associated with the rule.
--   
--   <a>$sel:scheduleExpression:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_scheduleExpression</a> - The scheduling
--   expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
--   
--   <a>$sel:name:DescribeRule'</a>, <a>describeRuleResponse_name</a> - The
--   name of the rule.
--   
--   <a>$sel:description:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_description</a> - The description of the rule.
--   
--   <a>$sel:managedBy:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_managedBy</a> - If this is a managed rule,
--   created by an Amazon Web Services service on your behalf, this field
--   displays the principal name of the Amazon Web Services service that
--   created the rule.
--   
--   <a>$sel:roleArn:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_roleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role associated with the rule.
--   
--   <a>$sel:httpStatus:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRuleResponse :: Int -> DescribeRuleResponse

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
describeRuleResponse_eventPattern :: Lens' DescribeRuleResponse (Maybe Text)

-- | Specifies whether the rule is enabled or disabled.
describeRuleResponse_state :: Lens' DescribeRuleResponse (Maybe RuleState)

-- | The Amazon Resource Name (ARN) of the rule.
describeRuleResponse_arn :: Lens' DescribeRuleResponse (Maybe Text)

-- | The account ID of the user that created the rule. If you use
--   <tt>PutRule</tt> to put a rule on an event bus in another account, the
--   other account is the owner of the rule, and the rule ARN includes the
--   account ID for that account. However, the value for <tt>CreatedBy</tt>
--   is the account ID as the account that created the rule in the other
--   account.
describeRuleResponse_createdBy :: Lens' DescribeRuleResponse (Maybe Text)

-- | The name of the event bus associated with the rule.
describeRuleResponse_eventBusName :: Lens' DescribeRuleResponse (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)".
describeRuleResponse_scheduleExpression :: Lens' DescribeRuleResponse (Maybe Text)

-- | The name of the rule.
describeRuleResponse_name :: Lens' DescribeRuleResponse (Maybe Text)

-- | The description of the rule.
describeRuleResponse_description :: Lens' DescribeRuleResponse (Maybe Text)

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, this field displays the principal name of the Amazon
--   Web Services service that created the rule.
describeRuleResponse_managedBy :: Lens' DescribeRuleResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
describeRuleResponse_roleArn :: Lens' DescribeRuleResponse (Maybe Text)

-- | The response's http status code.
describeRuleResponse_httpStatus :: Lens' DescribeRuleResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeRule.DescribeRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeRule.DescribeRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeRule.DescribeRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeRule.DescribeRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeRule.DescribeRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeRule.DescribeRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeRule.DescribeRule


-- | Retrieves details about a replay. Use <tt>DescribeReplay</tt> to
--   determine the progress of a running replay. A replay processes events
--   to replay based on the time in the event, and replays them using 1
--   minute intervals. If you use <tt>StartReplay</tt> and specify an
--   <tt>EventStartTime</tt> and an <tt>EventEndTime</tt> that covers a 20
--   minute time range, the events are replayed from the first minute of
--   that 20 minute range first. Then the events from the second minute are
--   replayed. You can use <tt>DescribeReplay</tt> to determine the
--   progress of a replay. The value returned for
--   <tt>EventLastReplayedTime</tt> indicates the time within the specified
--   time range associated with the last event replayed.
module Amazonka.CloudWatchEvents.DescribeReplay

-- | <i>See:</i> <a>newDescribeReplay</a> smart constructor.
data DescribeReplay
DescribeReplay' :: Text -> DescribeReplay

-- | The name of the replay to retrieve.
[$sel:replayName:DescribeReplay'] :: DescribeReplay -> Text

-- | Create a value of <a>DescribeReplay</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replayName:DescribeReplay'</a>,
--   <a>describeReplay_replayName</a> - The name of the replay to retrieve.
newDescribeReplay :: Text -> DescribeReplay

-- | The name of the replay to retrieve.
describeReplay_replayName :: Lens' DescribeReplay Text

-- | <i>See:</i> <a>newDescribeReplayResponse</a> smart constructor.
data DescribeReplayResponse
DescribeReplayResponse' :: Maybe Text -> Maybe ReplayDestination -> Maybe ReplayState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeReplayResponse

-- | The ARN of the archive events were replayed from.
[$sel:eventSourceArn:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe Text

-- | A <tt>ReplayDestination</tt> object that contains details about the
--   replay.
[$sel:destination:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe ReplayDestination

-- | The current state of the replay.
[$sel:state:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe ReplayState

-- | The time stamp for the last event that was replayed from the archive.
[$sel:eventEndTime:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe POSIX

-- | A time stamp for the time that the replay started.
[$sel:replayStartTime:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe POSIX

-- | The ARN of the replay.
[$sel:replayArn:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe Text

-- | A time stamp for the time that the replay stopped.
[$sel:replayEndTime:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe POSIX

-- | The time that the event was last replayed.
[$sel:eventLastReplayedTime:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe POSIX

-- | The time stamp of the first event that was last replayed from the
--   archive.
[$sel:eventStartTime:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe POSIX

-- | The name of the replay.
[$sel:replayName:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe Text

-- | The reason that the replay is in the current state.
[$sel:stateReason:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe Text

-- | The description of the replay.
[$sel:description:DescribeReplayResponse'] :: DescribeReplayResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeReplayResponse'] :: DescribeReplayResponse -> Int

-- | Create a value of <a>DescribeReplayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventSourceArn</a> - The ARN of the archive
--   events were replayed from.
--   
--   <a>$sel:destination:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_destination</a> - A
--   <tt>ReplayDestination</tt> object that contains details about the
--   replay.
--   
--   <a>$sel:state:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_state</a> - The current state of the replay.
--   
--   <a>$sel:eventEndTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventEndTime</a> - The time stamp for the
--   last event that was replayed from the archive.
--   
--   <a>$sel:replayStartTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayStartTime</a> - A time stamp for the
--   time that the replay started.
--   
--   <a>$sel:replayArn:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayArn</a> - The ARN of the replay.
--   
--   <a>$sel:replayEndTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayEndTime</a> - A time stamp for the
--   time that the replay stopped.
--   
--   <a>$sel:eventLastReplayedTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventLastReplayedTime</a> - The time that
--   the event was last replayed.
--   
--   <a>$sel:eventStartTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventStartTime</a> - The time stamp of the
--   first event that was last replayed from the archive.
--   
--   <a>$sel:replayName:DescribeReplay'</a>,
--   <a>describeReplayResponse_replayName</a> - The name of the replay.
--   
--   <a>$sel:stateReason:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_stateReason</a> - The reason that the replay
--   is in the current state.
--   
--   <a>$sel:description:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_description</a> - The description of the
--   replay.
--   
--   <a>$sel:httpStatus:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_httpStatus</a> - The response's http status
--   code.
newDescribeReplayResponse :: Int -> DescribeReplayResponse

-- | The ARN of the archive events were replayed from.
describeReplayResponse_eventSourceArn :: Lens' DescribeReplayResponse (Maybe Text)

-- | A <tt>ReplayDestination</tt> object that contains details about the
--   replay.
describeReplayResponse_destination :: Lens' DescribeReplayResponse (Maybe ReplayDestination)

-- | The current state of the replay.
describeReplayResponse_state :: Lens' DescribeReplayResponse (Maybe ReplayState)

-- | The time stamp for the last event that was replayed from the archive.
describeReplayResponse_eventEndTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | A time stamp for the time that the replay started.
describeReplayResponse_replayStartTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The ARN of the replay.
describeReplayResponse_replayArn :: Lens' DescribeReplayResponse (Maybe Text)

-- | A time stamp for the time that the replay stopped.
describeReplayResponse_replayEndTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The time that the event was last replayed.
describeReplayResponse_eventLastReplayedTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The time stamp of the first event that was last replayed from the
--   archive.
describeReplayResponse_eventStartTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The name of the replay.
describeReplayResponse_replayName :: Lens' DescribeReplayResponse (Maybe Text)

-- | The reason that the replay is in the current state.
describeReplayResponse_stateReason :: Lens' DescribeReplayResponse (Maybe Text)

-- | The description of the replay.
describeReplayResponse_description :: Lens' DescribeReplayResponse (Maybe Text)

-- | The response's http status code.
describeReplayResponse_httpStatus :: Lens' DescribeReplayResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplayResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplayResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplayResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplayResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplayResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeReplay.DescribeReplay


-- | An SaaS partner can use this operation to list details about a partner
--   event source that they have created. Amazon Web Services customers do
--   not use this operation. Instead, Amazon Web Services customers can use
--   <a>DescribeEventSource</a> to see details about a partner event source
--   that is shared with them.
module Amazonka.CloudWatchEvents.DescribePartnerEventSource

-- | <i>See:</i> <a>newDescribePartnerEventSource</a> smart constructor.
data DescribePartnerEventSource
DescribePartnerEventSource' :: Text -> DescribePartnerEventSource

-- | The name of the event source to display.
[$sel:name:DescribePartnerEventSource'] :: DescribePartnerEventSource -> Text

-- | Create a value of <a>DescribePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribePartnerEventSource'</a>,
--   <a>describePartnerEventSource_name</a> - The name of the event source
--   to display.
newDescribePartnerEventSource :: Text -> DescribePartnerEventSource

-- | The name of the event source to display.
describePartnerEventSource_name :: Lens' DescribePartnerEventSource Text

-- | <i>See:</i> <a>newDescribePartnerEventSourceResponse</a> smart
--   constructor.
data DescribePartnerEventSourceResponse
DescribePartnerEventSourceResponse' :: Maybe Text -> Maybe Text -> Int -> DescribePartnerEventSourceResponse

-- | The ARN of the event source.
[$sel:arn:DescribePartnerEventSourceResponse'] :: DescribePartnerEventSourceResponse -> Maybe Text

-- | The name of the event source.
[$sel:name:DescribePartnerEventSourceResponse'] :: DescribePartnerEventSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribePartnerEventSourceResponse'] :: DescribePartnerEventSourceResponse -> Int

-- | Create a value of <a>DescribePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribePartnerEventSourceResponse'</a>,
--   <a>describePartnerEventSourceResponse_arn</a> - The ARN of the event
--   source.
--   
--   <a>$sel:name:DescribePartnerEventSource'</a>,
--   <a>describePartnerEventSourceResponse_name</a> - The name of the event
--   source.
--   
--   <a>$sel:httpStatus:DescribePartnerEventSourceResponse'</a>,
--   <a>describePartnerEventSourceResponse_httpStatus</a> - The response's
--   http status code.
newDescribePartnerEventSourceResponse :: Int -> DescribePartnerEventSourceResponse

-- | The ARN of the event source.
describePartnerEventSourceResponse_arn :: Lens' DescribePartnerEventSourceResponse (Maybe Text)

-- | The name of the event source.
describePartnerEventSourceResponse_name :: Lens' DescribePartnerEventSourceResponse (Maybe Text)

-- | The response's http status code.
describePartnerEventSourceResponse_httpStatus :: Lens' DescribePartnerEventSourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribePartnerEventSource.DescribePartnerEventSource


-- | This operation lists details about a partner event source that is
--   shared with your account.
module Amazonka.CloudWatchEvents.DescribeEventSource

-- | <i>See:</i> <a>newDescribeEventSource</a> smart constructor.
data DescribeEventSource
DescribeEventSource' :: Text -> DescribeEventSource

-- | The name of the partner event source to display the details of.
[$sel:name:DescribeEventSource'] :: DescribeEventSource -> Text

-- | Create a value of <a>DescribeEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeEventSource'</a>, <a>describeEventSource_name</a>
--   - The name of the partner event source to display the details of.
newDescribeEventSource :: Text -> DescribeEventSource

-- | The name of the partner event source to display the details of.
describeEventSource_name :: Lens' DescribeEventSource Text

-- | <i>See:</i> <a>newDescribeEventSourceResponse</a> smart constructor.
data DescribeEventSourceResponse
DescribeEventSourceResponse' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Int -> DescribeEventSourceResponse

-- | The date and time that the event source was created.
[$sel:creationTime:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe POSIX

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
[$sel:state:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe EventSourceState

-- | The ARN of the partner event source.
[$sel:arn:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe Text

-- | The name of the SaaS partner that created the event source.
[$sel:createdBy:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe Text

-- | The name of the partner event source.
[$sel:name:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe Text

-- | The date and time that the event source will expire if you do not
--   create a matching event bus.
[$sel:expirationTime:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:DescribeEventSourceResponse'] :: DescribeEventSourceResponse -> Int

-- | Create a value of <a>DescribeEventSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_creationTime</a> - The date and time
--   that the event source was created.
--   
--   <a>$sel:state:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_state</a> - The state of the event
--   source. If it is ACTIVE, you have already created a matching event bus
--   for this event source, and that event bus is active. If it is PENDING,
--   either you haven't yet created a matching event bus, or that event bus
--   is deactivated. If it is DELETED, you have created a matching event
--   bus, but the event source has since been deleted.
--   
--   <a>$sel:arn:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_arn</a> - The ARN of the partner event
--   source.
--   
--   <a>$sel:createdBy:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_createdBy</a> - The name of the SaaS
--   partner that created the event source.
--   
--   <a>$sel:name:DescribeEventSource'</a>,
--   <a>describeEventSourceResponse_name</a> - The name of the partner
--   event source.
--   
--   <a>$sel:expirationTime:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_expirationTime</a> - The date and time
--   that the event source will expire if you do not create a matching
--   event bus.
--   
--   <a>$sel:httpStatus:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventSourceResponse :: Int -> DescribeEventSourceResponse

-- | The date and time that the event source was created.
describeEventSourceResponse_creationTime :: Lens' DescribeEventSourceResponse (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
describeEventSourceResponse_state :: Lens' DescribeEventSourceResponse (Maybe EventSourceState)

-- | The ARN of the partner event source.
describeEventSourceResponse_arn :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The name of the SaaS partner that created the event source.
describeEventSourceResponse_createdBy :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The name of the partner event source.
describeEventSourceResponse_name :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The date and time that the event source will expire if you do not
--   create a matching event bus.
describeEventSourceResponse_expirationTime :: Lens' DescribeEventSourceResponse (Maybe UTCTime)

-- | The response's http status code.
describeEventSourceResponse_httpStatus :: Lens' DescribeEventSourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeEventSource.DescribeEventSource


-- | Displays details about an event bus in your account. This can include
--   the external Amazon Web Services accounts that are permitted to write
--   events to your default event bus, and the associated policy. For
--   custom event buses and partner event buses, it displays the name, ARN,
--   policy, state, and creation time.
--   
--   To enable your account to receive events from other accounts on its
--   default event bus, use <a>PutPermission</a>.
--   
--   For more information about partner event buses, see
--   <a>CreateEventBus</a>.
module Amazonka.CloudWatchEvents.DescribeEventBus

-- | <i>See:</i> <a>newDescribeEventBus</a> smart constructor.
data DescribeEventBus
DescribeEventBus' :: Maybe Text -> DescribeEventBus

-- | The name or ARN of the event bus to show details for. If you omit
--   this, the default event bus is displayed.
[$sel:name:DescribeEventBus'] :: DescribeEventBus -> Maybe Text

-- | Create a value of <a>DescribeEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeEventBus'</a>, <a>describeEventBus_name</a> - The
--   name or ARN of the event bus to show details for. If you omit this,
--   the default event bus is displayed.
newDescribeEventBus :: DescribeEventBus

-- | The name or ARN of the event bus to show details for. If you omit
--   this, the default event bus is displayed.
describeEventBus_name :: Lens' DescribeEventBus (Maybe Text)

-- | <i>See:</i> <a>newDescribeEventBusResponse</a> smart constructor.
data DescribeEventBusResponse
DescribeEventBusResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeEventBusResponse

-- | The Amazon Resource Name (ARN) of the account permitted to write
--   events to the current account.
[$sel:arn:DescribeEventBusResponse'] :: DescribeEventBusResponse -> Maybe Text

-- | The name of the event bus. Currently, this is always <tt>default</tt>.
[$sel:name:DescribeEventBusResponse'] :: DescribeEventBusResponse -> Maybe Text

-- | The policy that enables the external account to send events to your
--   account.
[$sel:policy:DescribeEventBusResponse'] :: DescribeEventBusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeEventBusResponse'] :: DescribeEventBusResponse -> Int

-- | Create a value of <a>DescribeEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_arn</a> - The Amazon Resource Name (ARN)
--   of the account permitted to write events to the current account.
--   
--   <a>$sel:name:DescribeEventBus'</a>,
--   <a>describeEventBusResponse_name</a> - The name of the event bus.
--   Currently, this is always <tt>default</tt>.
--   
--   <a>$sel:policy:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_policy</a> - The policy that enables the
--   external account to send events to your account.
--   
--   <a>$sel:httpStatus:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventBusResponse :: Int -> DescribeEventBusResponse

-- | The Amazon Resource Name (ARN) of the account permitted to write
--   events to the current account.
describeEventBusResponse_arn :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The name of the event bus. Currently, this is always <tt>default</tt>.
describeEventBusResponse_name :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The policy that enables the external account to send events to your
--   account.
describeEventBusResponse_policy :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The response's http status code.
describeEventBusResponse_httpStatus :: Lens' DescribeEventBusResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBusResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBusResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBusResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBusResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBusResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeEventBus.DescribeEventBus


-- | Retrieves details about a connection.
module Amazonka.CloudWatchEvents.DescribeConnection

-- | <i>See:</i> <a>newDescribeConnection</a> smart constructor.
data DescribeConnection
DescribeConnection' :: Text -> DescribeConnection

-- | The name of the connection to retrieve.
[$sel:name:DescribeConnection'] :: DescribeConnection -> Text

-- | Create a value of <a>DescribeConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeConnection'</a>, <a>describeConnection_name</a> -
--   The name of the connection to retrieve.
newDescribeConnection :: Text -> DescribeConnection

-- | The name of the connection to retrieve.
describeConnection_name :: Lens' DescribeConnection Text

-- | <i>See:</i> <a>newDescribeConnectionResponse</a> smart constructor.
data DescribeConnectionResponse
DescribeConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionAuthResponseParameters -> Maybe POSIX -> Maybe ConnectionAuthorizationType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConnectionState -> Int -> DescribeConnectionResponse

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last modified.
[$sel:lastModifiedTime:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe POSIX

-- | The name of the connection retrieved.
[$sel:name:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe Text

-- | The parameters to use for authorization for the connection.
[$sel:authParameters:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe ConnectionAuthResponseParameters

-- | A time stamp for the time that the connection was last authorized.
[$sel:lastAuthorizedTime:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe POSIX

-- | The type of authorization specified for the connection.
[$sel:authorizationType:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe ConnectionAuthorizationType

-- | The ARN of the connection retrieved.
[$sel:connectionArn:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe Text

-- | The reason that the connection is in the current connection state.
[$sel:stateReason:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe Text

-- | The ARN of the secret created from the authorization parameters
--   specified for the connection.
[$sel:secretArn:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe Text

-- | The description for the connection retrieved.
[$sel:description:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe Text

-- | The state of the connection retrieved.
[$sel:connectionState:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:DescribeConnectionResponse'] :: DescribeConnectionResponse -> Int

-- | Create a value of <a>DescribeConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified.
--   
--   <a>$sel:name:DescribeConnection'</a>,
--   <a>describeConnectionResponse_name</a> - The name of the connection
--   retrieved.
--   
--   <a>$sel:authParameters:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_authParameters</a> - The parameters to
--   use for authorization for the connection.
--   
--   <a>$sel:lastAuthorizedTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_lastAuthorizedTime</a> - A time stamp
--   for the time that the connection was last authorized.
--   
--   <a>$sel:authorizationType:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_authorizationType</a> - The type of
--   authorization specified for the connection.
--   
--   <a>$sel:connectionArn:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_connectionArn</a> - The ARN of the
--   connection retrieved.
--   
--   <a>$sel:stateReason:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_stateReason</a> - The reason that the
--   connection is in the current connection state.
--   
--   <a>$sel:secretArn:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_secretArn</a> - The ARN of the secret
--   created from the authorization parameters specified for the
--   connection.
--   
--   <a>$sel:description:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_description</a> - The description for
--   the connection retrieved.
--   
--   <a>$sel:connectionState:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_connectionState</a> - The state of the
--   connection retrieved.
--   
--   <a>$sel:httpStatus:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConnectionResponse :: Int -> DescribeConnectionResponse

-- | A time stamp for the time that the connection was created.
describeConnectionResponse_creationTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
describeConnectionResponse_lastModifiedTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | The name of the connection retrieved.
describeConnectionResponse_name :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The parameters to use for authorization for the connection.
describeConnectionResponse_authParameters :: Lens' DescribeConnectionResponse (Maybe ConnectionAuthResponseParameters)

-- | A time stamp for the time that the connection was last authorized.
describeConnectionResponse_lastAuthorizedTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | The type of authorization specified for the connection.
describeConnectionResponse_authorizationType :: Lens' DescribeConnectionResponse (Maybe ConnectionAuthorizationType)

-- | The ARN of the connection retrieved.
describeConnectionResponse_connectionArn :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The reason that the connection is in the current connection state.
describeConnectionResponse_stateReason :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The ARN of the secret created from the authorization parameters
--   specified for the connection.
describeConnectionResponse_secretArn :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The description for the connection retrieved.
describeConnectionResponse_description :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The state of the connection retrieved.
describeConnectionResponse_connectionState :: Lens' DescribeConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
describeConnectionResponse_httpStatus :: Lens' DescribeConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnectionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnectionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnectionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeConnection.DescribeConnection


-- | Retrieves details about an archive.
module Amazonka.CloudWatchEvents.DescribeArchive

-- | <i>See:</i> <a>newDescribeArchive</a> smart constructor.
data DescribeArchive
DescribeArchive' :: Text -> DescribeArchive

-- | The name of the archive to retrieve.
[$sel:archiveName:DescribeArchive'] :: DescribeArchive -> Text

-- | Create a value of <a>DescribeArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archiveName:DescribeArchive'</a>,
--   <a>describeArchive_archiveName</a> - The name of the archive to
--   retrieve.
newDescribeArchive :: Text -> DescribeArchive

-- | The name of the archive to retrieve.
describeArchive_archiveName :: Lens' DescribeArchive Text

-- | <i>See:</i> <a>newDescribeArchiveResponse</a> smart constructor.
data DescribeArchiveResponse
DescribeArchiveResponse' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe ArchiveState -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeArchiveResponse

-- | The time at which the archive was created.
[$sel:creationTime:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe POSIX

-- | The size of the archive in bytes.
[$sel:sizeBytes:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Integer

-- | The ARN of the event source associated with the archive.
[$sel:eventSourceArn:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The event pattern used to filter events sent to the archive.
[$sel:eventPattern:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The state of the archive.
[$sel:state:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe ArchiveState

-- | The number of events in the archive.
[$sel:eventCount:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Integer

-- | The name of the archive.
[$sel:archiveName:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The number of days to retain events for in the archive.
[$sel:retentionDays:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Natural

-- | The ARN of the archive.
[$sel:archiveArn:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The reason that the archive is in the state.
[$sel:stateReason:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The description of the archive.
[$sel:description:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeArchiveResponse'] :: DescribeArchiveResponse -> Int

-- | Create a value of <a>DescribeArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_creationTime</a> - The time at which the
--   archive was created.
--   
--   <a>$sel:sizeBytes:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_sizeBytes</a> - The size of the archive in
--   bytes.
--   
--   <a>$sel:eventSourceArn:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventSourceArn</a> - The ARN of the event
--   source associated with the archive.
--   
--   <a>$sel:eventPattern:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventPattern</a> - The event pattern used
--   to filter events sent to the archive.
--   
--   <a>$sel:state:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_state</a> - The state of the archive.
--   
--   <a>$sel:eventCount:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventCount</a> - The number of events in
--   the archive.
--   
--   <a>$sel:archiveName:DescribeArchive'</a>,
--   <a>describeArchiveResponse_archiveName</a> - The name of the archive.
--   
--   <a>$sel:retentionDays:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_retentionDays</a> - The number of days to
--   retain events for in the archive.
--   
--   <a>$sel:archiveArn:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_archiveArn</a> - The ARN of the archive.
--   
--   <a>$sel:stateReason:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_stateReason</a> - The reason that the
--   archive is in the state.
--   
--   <a>$sel:description:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_description</a> - The description of the
--   archive.
--   
--   <a>$sel:httpStatus:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_httpStatus</a> - The response's http status
--   code.
newDescribeArchiveResponse :: Int -> DescribeArchiveResponse

-- | The time at which the archive was created.
describeArchiveResponse_creationTime :: Lens' DescribeArchiveResponse (Maybe UTCTime)

-- | The size of the archive in bytes.
describeArchiveResponse_sizeBytes :: Lens' DescribeArchiveResponse (Maybe Integer)

-- | The ARN of the event source associated with the archive.
describeArchiveResponse_eventSourceArn :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The event pattern used to filter events sent to the archive.
describeArchiveResponse_eventPattern :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The state of the archive.
describeArchiveResponse_state :: Lens' DescribeArchiveResponse (Maybe ArchiveState)

-- | The number of events in the archive.
describeArchiveResponse_eventCount :: Lens' DescribeArchiveResponse (Maybe Integer)

-- | The name of the archive.
describeArchiveResponse_archiveName :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The number of days to retain events for in the archive.
describeArchiveResponse_retentionDays :: Lens' DescribeArchiveResponse (Maybe Natural)

-- | The ARN of the archive.
describeArchiveResponse_archiveArn :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The reason that the archive is in the state.
describeArchiveResponse_stateReason :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The description of the archive.
describeArchiveResponse_description :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The response's http status code.
describeArchiveResponse_httpStatus :: Lens' DescribeArchiveResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchiveResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchiveResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchiveResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchiveResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchiveResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeArchive.DescribeArchive


-- | Retrieves details about an API destination.
module Amazonka.CloudWatchEvents.DescribeApiDestination

-- | <i>See:</i> <a>newDescribeApiDestination</a> smart constructor.
data DescribeApiDestination
DescribeApiDestination' :: Text -> DescribeApiDestination

-- | The name of the API destination to retrieve.
[$sel:name:DescribeApiDestination'] :: DescribeApiDestination -> Text

-- | Create a value of <a>DescribeApiDestination</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeApiDestination'</a>,
--   <a>describeApiDestination_name</a> - The name of the API destination
--   to retrieve.
newDescribeApiDestination :: Text -> DescribeApiDestination

-- | The name of the API destination to retrieve.
describeApiDestination_name :: Lens' DescribeApiDestination Text

-- | <i>See:</i> <a>newDescribeApiDestinationResponse</a> smart
--   constructor.
data DescribeApiDestinationResponse
DescribeApiDestinationResponse' :: Maybe POSIX -> Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe ApiDestinationState -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeApiDestinationResponse

-- | A time stamp for the time that the API destination was created.
[$sel:creationTime:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe POSIX

-- | The method to use to connect to the HTTP endpoint.
[$sel:httpMethod:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe ApiDestinationHttpMethod

-- | The URL to use to connect to the HTTP endpoint.
[$sel:invocationEndpoint:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Text

-- | A time stamp for the time that the API destination was last modified.
[$sel:lastModifiedTime:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe POSIX

-- | The name of the API destination retrieved.
[$sel:name:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Text

-- | The maximum number of invocations per second to specified for the API
--   destination. Note that if you set the invocation rate maximum to a
--   value lower the rate necessary to send all events received on to the
--   destination HTTP endpoint, some events may not be delivered within the
--   24-hour retry window. If you plan to set the rate lower than the rate
--   necessary to deliver all events, consider using a dead-letter queue to
--   catch events that are not delivered within 24 hours.
[$sel:invocationRateLimitPerSecond:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Natural

-- | The state of the API destination retrieved.
[$sel:apiDestinationState:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe ApiDestinationState

-- | The ARN of the connection specified for the API destination retrieved.
[$sel:connectionArn:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Text

-- | The description for the API destination retrieved.
[$sel:description:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Text

-- | The ARN of the API destination retrieved.
[$sel:apiDestinationArn:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeApiDestinationResponse'] :: DescribeApiDestinationResponse -> Int

-- | Create a value of <a>DescribeApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_creationTime</a> - A time stamp for
--   the time that the API destination was created.
--   
--   <a>$sel:httpMethod:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_httpMethod</a> - The method to use
--   to connect to the HTTP endpoint.
--   
--   <a>$sel:invocationEndpoint:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_invocationEndpoint</a> - The URL to
--   use to connect to the HTTP endpoint.
--   
--   <a>$sel:lastModifiedTime:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   for the time that the API destination was last modified.
--   
--   <a>$sel:name:DescribeApiDestination'</a>,
--   <a>describeApiDestinationResponse_name</a> - The name of the API
--   destination retrieved.
--   
--   
--   <a>$sel:invocationRateLimitPerSecond:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_invocationRateLimitPerSecond</a> -
--   The maximum number of invocations per second to specified for the API
--   destination. Note that if you set the invocation rate maximum to a
--   value lower the rate necessary to send all events received on to the
--   destination HTTP endpoint, some events may not be delivered within the
--   24-hour retry window. If you plan to set the rate lower than the rate
--   necessary to deliver all events, consider using a dead-letter queue to
--   catch events that are not delivered within 24 hours.
--   
--   <a>$sel:apiDestinationState:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_apiDestinationState</a> - The state
--   of the API destination retrieved.
--   
--   <a>$sel:connectionArn:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_connectionArn</a> - The ARN of the
--   connection specified for the API destination retrieved.
--   
--   <a>$sel:description:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_description</a> - The description
--   for the API destination retrieved.
--   
--   <a>$sel:apiDestinationArn:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_apiDestinationArn</a> - The ARN of
--   the API destination retrieved.
--   
--   <a>$sel:httpStatus:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeApiDestinationResponse :: Int -> DescribeApiDestinationResponse

-- | A time stamp for the time that the API destination was created.
describeApiDestinationResponse_creationTime :: Lens' DescribeApiDestinationResponse (Maybe UTCTime)

-- | The method to use to connect to the HTTP endpoint.
describeApiDestinationResponse_httpMethod :: Lens' DescribeApiDestinationResponse (Maybe ApiDestinationHttpMethod)

-- | The URL to use to connect to the HTTP endpoint.
describeApiDestinationResponse_invocationEndpoint :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | A time stamp for the time that the API destination was last modified.
describeApiDestinationResponse_lastModifiedTime :: Lens' DescribeApiDestinationResponse (Maybe UTCTime)

-- | The name of the API destination retrieved.
describeApiDestinationResponse_name :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The maximum number of invocations per second to specified for the API
--   destination. Note that if you set the invocation rate maximum to a
--   value lower the rate necessary to send all events received on to the
--   destination HTTP endpoint, some events may not be delivered within the
--   24-hour retry window. If you plan to set the rate lower than the rate
--   necessary to deliver all events, consider using a dead-letter queue to
--   catch events that are not delivered within 24 hours.
describeApiDestinationResponse_invocationRateLimitPerSecond :: Lens' DescribeApiDestinationResponse (Maybe Natural)

-- | The state of the API destination retrieved.
describeApiDestinationResponse_apiDestinationState :: Lens' DescribeApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the connection specified for the API destination retrieved.
describeApiDestinationResponse_connectionArn :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The description for the API destination retrieved.
describeApiDestinationResponse_description :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The ARN of the API destination retrieved.
describeApiDestinationResponse_apiDestinationArn :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The response's http status code.
describeApiDestinationResponse_httpStatus :: Lens' DescribeApiDestinationResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestinationResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestinationResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestinationResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestinationResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestinationResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DescribeApiDestination.DescribeApiDestination


-- | Deletes the specified rule.
--   
--   Before you can delete the rule, you must remove all targets, using
--   <a>RemoveTargets</a>.
--   
--   When you delete a rule, incoming events might continue to match to the
--   deleted rule. Allow a short period of time for changes to take effect.
--   
--   If you call delete rule multiple times for the same rule, all calls
--   will succeed. When you call delete rule for a non-existent custom
--   eventbus, <tt>ResourceNotFoundException</tt> is returned.
--   
--   Managed rules are rules created and managed by another Amazon Web
--   Services service on your behalf. These rules are created by those
--   other Amazon Web Services services to support functionality in those
--   services. You can delete these rules using the <tt>Force</tt> option,
--   but you should do so only if you are sure the other service is not
--   still using that rule.
module Amazonka.CloudWatchEvents.DeleteRule

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Maybe Bool -> Maybe Text -> Text -> DeleteRule

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   delete the rule. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
[$sel:force:DeleteRule'] :: DeleteRule -> Maybe Bool

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
[$sel:eventBusName:DeleteRule'] :: DeleteRule -> Maybe Text

-- | The name of the rule.
[$sel:name:DeleteRule'] :: DeleteRule -> Text

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:DeleteRule'</a>, <a>deleteRule_force</a> - If this is a
--   managed rule, created by an Amazon Web Services service on your
--   behalf, you must specify <tt>Force</tt> as <tt>True</tt> to delete the
--   rule. This parameter is ignored for rules that are not managed rules.
--   You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
--   
--   <a>$sel:eventBusName:DeleteRule'</a>, <a>deleteRule_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:name:DeleteRule'</a>, <a>deleteRule_name</a> - The name of the
--   rule.
newDeleteRule :: Text -> DeleteRule

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   delete the rule. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
deleteRule_force :: Lens' DeleteRule (Maybe Bool)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
deleteRule_eventBusName :: Lens' DeleteRule (Maybe Text)

-- | The name of the rule.
deleteRule_name :: Lens' DeleteRule Text

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: DeleteRuleResponse

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRuleResponse :: DeleteRuleResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteRule.DeleteRuleResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteRule.DeleteRuleResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteRule.DeleteRuleResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteRule.DeleteRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteRule.DeleteRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeleteRule.DeleteRule
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeleteRule.DeleteRule


-- | This operation is used by SaaS partners to delete a partner event
--   source. This operation is not used by Amazon Web Services customers.
--   
--   When you delete an event source, the status of the corresponding
--   partner event bus in the Amazon Web Services customer account becomes
--   DELETED.
module Amazonka.CloudWatchEvents.DeletePartnerEventSource

-- | <i>See:</i> <a>newDeletePartnerEventSource</a> smart constructor.
data DeletePartnerEventSource
DeletePartnerEventSource' :: Text -> Text -> DeletePartnerEventSource

-- | The name of the event source to delete.
[$sel:name:DeletePartnerEventSource'] :: DeletePartnerEventSource -> Text

-- | The Amazon Web Services account ID of the Amazon Web Services customer
--   that the event source was created for.
[$sel:account:DeletePartnerEventSource'] :: DeletePartnerEventSource -> Text

-- | Create a value of <a>DeletePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePartnerEventSource'</a>,
--   <a>deletePartnerEventSource_name</a> - The name of the event source to
--   delete.
--   
--   <a>$sel:account:DeletePartnerEventSource'</a>,
--   <a>deletePartnerEventSource_account</a> - The Amazon Web Services
--   account ID of the Amazon Web Services customer that the event source
--   was created for.
newDeletePartnerEventSource :: Text -> Text -> DeletePartnerEventSource

-- | The name of the event source to delete.
deletePartnerEventSource_name :: Lens' DeletePartnerEventSource Text

-- | The Amazon Web Services account ID of the Amazon Web Services customer
--   that the event source was created for.
deletePartnerEventSource_account :: Lens' DeletePartnerEventSource Text

-- | <i>See:</i> <a>newDeletePartnerEventSourceResponse</a> smart
--   constructor.
data DeletePartnerEventSourceResponse
DeletePartnerEventSourceResponse' :: DeletePartnerEventSourceResponse

-- | Create a value of <a>DeletePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePartnerEventSourceResponse :: DeletePartnerEventSourceResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeletePartnerEventSource.DeletePartnerEventSource


-- | Deletes the specified custom event bus or partner event bus. All rules
--   associated with this event bus need to be deleted. You can't delete
--   your account's default event bus.
module Amazonka.CloudWatchEvents.DeleteEventBus

-- | <i>See:</i> <a>newDeleteEventBus</a> smart constructor.
data DeleteEventBus
DeleteEventBus' :: Text -> DeleteEventBus

-- | The name of the event bus to delete.
[$sel:name:DeleteEventBus'] :: DeleteEventBus -> Text

-- | Create a value of <a>DeleteEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEventBus'</a>, <a>deleteEventBus_name</a> - The
--   name of the event bus to delete.
newDeleteEventBus :: Text -> DeleteEventBus

-- | The name of the event bus to delete.
deleteEventBus_name :: Lens' DeleteEventBus Text

-- | <i>See:</i> <a>newDeleteEventBusResponse</a> smart constructor.
data DeleteEventBusResponse
DeleteEventBusResponse' :: DeleteEventBusResponse

-- | Create a value of <a>DeleteEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventBusResponse :: DeleteEventBusResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBusResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBusResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBusResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBusResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBusResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeleteEventBus.DeleteEventBus


-- | Deletes a connection.
module Amazonka.CloudWatchEvents.DeleteConnection

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | The name of the connection to delete.
[$sel:name:DeleteConnection'] :: DeleteConnection -> Text

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteConnection'</a>, <a>deleteConnection_name</a> - The
--   name of the connection to delete.
newDeleteConnection :: Text -> DeleteConnection

-- | The name of the connection to delete.
deleteConnection_name :: Lens' DeleteConnection Text

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> DeleteConnectionResponse

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last modified before
--   it was deleted.
[$sel:lastModifiedTime:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last authorized
--   before it wa deleted.
[$sel:lastAuthorizedTime:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe POSIX

-- | The ARN of the connection that was deleted.
[$sel:connectionArn:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe Text

-- | The state of the connection before it was deleted.
[$sel:connectionState:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Int

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified before it was deleted.
--   
--   <a>$sel:lastAuthorizedTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_lastAuthorizedTime</a> - A time stamp for
--   the time that the connection was last authorized before it wa deleted.
--   
--   <a>$sel:connectionArn:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was deleted.
--   
--   <a>$sel:connectionState:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connectionState</a> - The state of the
--   connection before it was deleted.
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | A time stamp for the time that the connection was created.
deleteConnectionResponse_creationTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified before
--   it was deleted.
deleteConnectionResponse_lastModifiedTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized
--   before it wa deleted.
deleteConnectionResponse_lastAuthorizedTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was deleted.
deleteConnectionResponse_connectionArn :: Lens' DeleteConnectionResponse (Maybe Text)

-- | The state of the connection before it was deleted.
deleteConnectionResponse_connectionState :: Lens' DeleteConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnectionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnectionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnectionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeleteConnection.DeleteConnection


-- | Deletes the specified archive.
module Amazonka.CloudWatchEvents.DeleteArchive

-- | <i>See:</i> <a>newDeleteArchive</a> smart constructor.
data DeleteArchive
DeleteArchive' :: Text -> DeleteArchive

-- | The name of the archive to delete.
[$sel:archiveName:DeleteArchive'] :: DeleteArchive -> Text

-- | Create a value of <a>DeleteArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archiveName:DeleteArchive'</a>,
--   <a>deleteArchive_archiveName</a> - The name of the archive to delete.
newDeleteArchive :: Text -> DeleteArchive

-- | The name of the archive to delete.
deleteArchive_archiveName :: Lens' DeleteArchive Text

-- | <i>See:</i> <a>newDeleteArchiveResponse</a> smart constructor.
data DeleteArchiveResponse
DeleteArchiveResponse' :: Int -> DeleteArchiveResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteArchiveResponse'] :: DeleteArchiveResponse -> Int

-- | Create a value of <a>DeleteArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteArchiveResponse'</a>,
--   <a>deleteArchiveResponse_httpStatus</a> - The response's http status
--   code.
newDeleteArchiveResponse :: Int -> DeleteArchiveResponse

-- | The response's http status code.
deleteArchiveResponse_httpStatus :: Lens' DeleteArchiveResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchiveResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchiveResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchiveResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchiveResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchiveResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeleteArchive.DeleteArchive


-- | Deletes the specified API destination.
module Amazonka.CloudWatchEvents.DeleteApiDestination

-- | <i>See:</i> <a>newDeleteApiDestination</a> smart constructor.
data DeleteApiDestination
DeleteApiDestination' :: Text -> DeleteApiDestination

-- | The name of the destination to delete.
[$sel:name:DeleteApiDestination'] :: DeleteApiDestination -> Text

-- | Create a value of <a>DeleteApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteApiDestination'</a>,
--   <a>deleteApiDestination_name</a> - The name of the destination to
--   delete.
newDeleteApiDestination :: Text -> DeleteApiDestination

-- | The name of the destination to delete.
deleteApiDestination_name :: Lens' DeleteApiDestination Text

-- | <i>See:</i> <a>newDeleteApiDestinationResponse</a> smart constructor.
data DeleteApiDestinationResponse
DeleteApiDestinationResponse' :: Int -> DeleteApiDestinationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApiDestinationResponse'] :: DeleteApiDestinationResponse -> Int

-- | Create a value of <a>DeleteApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApiDestinationResponse'</a>,
--   <a>deleteApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApiDestinationResponse :: Int -> DeleteApiDestinationResponse

-- | The response's http status code.
deleteApiDestinationResponse_httpStatus :: Lens' DeleteApiDestinationResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestinationResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestinationResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestinationResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestinationResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestinationResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeleteApiDestination.DeleteApiDestination


-- | Removes all authorization parameters from the connection. This lets
--   you remove the secret from the connection so you can reuse it without
--   having to create a new connection.
module Amazonka.CloudWatchEvents.DeauthorizeConnection

-- | <i>See:</i> <a>newDeauthorizeConnection</a> smart constructor.
data DeauthorizeConnection
DeauthorizeConnection' :: Text -> DeauthorizeConnection

-- | The name of the connection to remove authorization from.
[$sel:name:DeauthorizeConnection'] :: DeauthorizeConnection -> Text

-- | Create a value of <a>DeauthorizeConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeauthorizeConnection'</a>,
--   <a>deauthorizeConnection_name</a> - The name of the connection to
--   remove authorization from.
newDeauthorizeConnection :: Text -> DeauthorizeConnection

-- | The name of the connection to remove authorization from.
deauthorizeConnection_name :: Lens' DeauthorizeConnection Text

-- | <i>See:</i> <a>newDeauthorizeConnectionResponse</a> smart constructor.
data DeauthorizeConnectionResponse
DeauthorizeConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> DeauthorizeConnectionResponse

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last updated.
[$sel:lastModifiedTime:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last authorized.
[$sel:lastAuthorizedTime:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Maybe POSIX

-- | The ARN of the connection that authorization was removed from.
[$sel:connectionArn:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Maybe Text

-- | The state of the connection.
[$sel:connectionState:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:DeauthorizeConnectionResponse'] :: DeauthorizeConnectionResponse -> Int

-- | Create a value of <a>DeauthorizeConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_creationTime</a> - A time stamp for
--   the time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_lastModifiedTime</a> - A time stamp
--   for the time that the connection was last updated.
--   
--   <a>$sel:lastAuthorizedTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_lastAuthorizedTime</a> - A time stamp
--   for the time that the connection was last authorized.
--   
--   <a>$sel:connectionArn:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_connectionArn</a> - The ARN of the
--   connection that authorization was removed from.
--   
--   <a>$sel:connectionState:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_connectionState</a> - The state of
--   the connection.
--   
--   <a>$sel:httpStatus:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeauthorizeConnectionResponse :: Int -> DeauthorizeConnectionResponse

-- | A time stamp for the time that the connection was created.
deauthorizeConnectionResponse_creationTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last updated.
deauthorizeConnectionResponse_lastModifiedTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized.
deauthorizeConnectionResponse_lastAuthorizedTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that authorization was removed from.
deauthorizeConnectionResponse_connectionArn :: Lens' DeauthorizeConnectionResponse (Maybe Text)

-- | The state of the connection.
deauthorizeConnectionResponse_connectionState :: Lens' DeauthorizeConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
deauthorizeConnectionResponse_httpStatus :: Lens' DeauthorizeConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnectionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnectionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnectionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeauthorizeConnection.DeauthorizeConnection


-- | You can use this operation to temporarily stop receiving events from
--   the specified partner event source. The matching event bus is not
--   deleted.
--   
--   When you deactivate a partner event source, the source goes into
--   PENDING state. If it remains in PENDING state for more than two weeks,
--   it is deleted.
--   
--   To activate a deactivated partner event source, use
--   <a>ActivateEventSource</a>.
module Amazonka.CloudWatchEvents.DeactivateEventSource

-- | <i>See:</i> <a>newDeactivateEventSource</a> smart constructor.
data DeactivateEventSource
DeactivateEventSource' :: Text -> DeactivateEventSource

-- | The name of the partner event source to deactivate.
[$sel:name:DeactivateEventSource'] :: DeactivateEventSource -> Text

-- | Create a value of <a>DeactivateEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeactivateEventSource'</a>,
--   <a>deactivateEventSource_name</a> - The name of the partner event
--   source to deactivate.
newDeactivateEventSource :: Text -> DeactivateEventSource

-- | The name of the partner event source to deactivate.
deactivateEventSource_name :: Lens' DeactivateEventSource Text

-- | <i>See:</i> <a>newDeactivateEventSourceResponse</a> smart constructor.
data DeactivateEventSourceResponse
DeactivateEventSourceResponse' :: DeactivateEventSourceResponse

-- | Create a value of <a>DeactivateEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeactivateEventSourceResponse :: DeactivateEventSourceResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.DeactivateEventSource.DeactivateEventSource


-- | Called by an SaaS partner to create a partner event source. This
--   operation is not used by Amazon Web Services customers.
--   
--   Each partner event source can be used by one Amazon Web Services
--   account to create a matching partner event bus in that Amazon Web
--   Services account. A SaaS partner must create one partner event source
--   for each Amazon Web Services account that wants to receive those event
--   types.
--   
--   A partner event source creates events based on resources within the
--   SaaS partner's service or application.
--   
--   An Amazon Web Services account that creates a partner event bus that
--   matches the partner event source can use that event bus to receive
--   events from the partner, and then process them using Amazon Web
--   Services Events rules and targets.
--   
--   Partner event source names follow this format:
--   
--   <pre>
--   partner_name/event_namespace/event_name
--   </pre>
--   
--   <i>partner_name</i> is determined during partner registration and
--   identifies the partner to Amazon Web Services customers.
--   <i>event_namespace</i> is determined by the partner and is a way for
--   the partner to categorize their events. <i>event_name</i> is
--   determined by the partner, and should uniquely identify an
--   event-generating resource within the partner system. The combination
--   of <i>event_namespace</i> and <i>event_name</i> should help Amazon Web
--   Services customers decide whether to create an event bus to receive
--   these events.
module Amazonka.CloudWatchEvents.CreatePartnerEventSource

-- | <i>See:</i> <a>newCreatePartnerEventSource</a> smart constructor.
data CreatePartnerEventSource
CreatePartnerEventSource' :: Text -> Text -> CreatePartnerEventSource

-- | The name of the partner event source. This name must be unique and
--   must be in the format <tt> partner_name/event_namespace/event_name
--   </tt>. The Amazon Web Services account that wants to use this partner
--   event source must create a partner event bus with a name that matches
--   the name of the partner event source.
[$sel:name:CreatePartnerEventSource'] :: CreatePartnerEventSource -> Text

-- | The Amazon Web Services account ID that is permitted to create a
--   matching partner event bus for this partner event source.
[$sel:account:CreatePartnerEventSource'] :: CreatePartnerEventSource -> Text

-- | Create a value of <a>CreatePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreatePartnerEventSource'</a>,
--   <a>createPartnerEventSource_name</a> - The name of the partner event
--   source. This name must be unique and must be in the format <tt>
--   partner_name/event_namespace/event_name </tt>. The Amazon Web Services
--   account that wants to use this partner event source must create a
--   partner event bus with a name that matches the name of the partner
--   event source.
--   
--   <a>$sel:account:CreatePartnerEventSource'</a>,
--   <a>createPartnerEventSource_account</a> - The Amazon Web Services
--   account ID that is permitted to create a matching partner event bus
--   for this partner event source.
newCreatePartnerEventSource :: Text -> Text -> CreatePartnerEventSource

-- | The name of the partner event source. This name must be unique and
--   must be in the format <tt> partner_name/event_namespace/event_name
--   </tt>. The Amazon Web Services account that wants to use this partner
--   event source must create a partner event bus with a name that matches
--   the name of the partner event source.
createPartnerEventSource_name :: Lens' CreatePartnerEventSource Text

-- | The Amazon Web Services account ID that is permitted to create a
--   matching partner event bus for this partner event source.
createPartnerEventSource_account :: Lens' CreatePartnerEventSource Text

-- | <i>See:</i> <a>newCreatePartnerEventSourceResponse</a> smart
--   constructor.
data CreatePartnerEventSourceResponse
CreatePartnerEventSourceResponse' :: Maybe Text -> Int -> CreatePartnerEventSourceResponse

-- | The ARN of the partner event source.
[$sel:eventSourceArn:CreatePartnerEventSourceResponse'] :: CreatePartnerEventSourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePartnerEventSourceResponse'] :: CreatePartnerEventSourceResponse -> Int

-- | Create a value of <a>CreatePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:CreatePartnerEventSourceResponse'</a>,
--   <a>createPartnerEventSourceResponse_eventSourceArn</a> - The ARN of
--   the partner event source.
--   
--   <a>$sel:httpStatus:CreatePartnerEventSourceResponse'</a>,
--   <a>createPartnerEventSourceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePartnerEventSourceResponse :: Int -> CreatePartnerEventSourceResponse

-- | The ARN of the partner event source.
createPartnerEventSourceResponse_eventSourceArn :: Lens' CreatePartnerEventSourceResponse (Maybe Text)

-- | The response's http status code.
createPartnerEventSourceResponse_httpStatus :: Lens' CreatePartnerEventSourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CreatePartnerEventSource.CreatePartnerEventSource


-- | Creates a new event bus within your account. This can be a custom
--   event bus which you can use to receive events from your custom
--   applications and services, or it can be a partner event bus which can
--   be matched to a partner event source.
module Amazonka.CloudWatchEvents.CreateEventBus

-- | <i>See:</i> <a>newCreateEventBus</a> smart constructor.
data CreateEventBus
CreateEventBus' :: Maybe Text -> Maybe [Tag] -> Text -> CreateEventBus

-- | If you are creating a partner event bus, this specifies the partner
--   event source that the new event bus will be matched with.
[$sel:eventSourceName:CreateEventBus'] :: CreateEventBus -> Maybe Text

-- | Tags to associate with the event bus.
[$sel:tags:CreateEventBus'] :: CreateEventBus -> Maybe [Tag]

-- | The name of the new event bus.
--   
--   Event bus names cannot contain the / character. You can't use the name
--   <tt>default</tt> for a custom event bus, as this name is already used
--   for your account's default event bus.
--   
--   If this is a partner event bus, the name must exactly match the name
--   of the partner event source that this event bus is matched to.
[$sel:name:CreateEventBus'] :: CreateEventBus -> Text

-- | Create a value of <a>CreateEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceName:CreateEventBus'</a>,
--   <a>createEventBus_eventSourceName</a> - If you are creating a partner
--   event bus, this specifies the partner event source that the new event
--   bus will be matched with.
--   
--   <a>$sel:tags:CreateEventBus'</a>, <a>createEventBus_tags</a> - Tags to
--   associate with the event bus.
--   
--   <a>$sel:name:CreateEventBus'</a>, <a>createEventBus_name</a> - The
--   name of the new event bus.
--   
--   Event bus names cannot contain the / character. You can't use the name
--   <tt>default</tt> for a custom event bus, as this name is already used
--   for your account's default event bus.
--   
--   If this is a partner event bus, the name must exactly match the name
--   of the partner event source that this event bus is matched to.
newCreateEventBus :: Text -> CreateEventBus

-- | If you are creating a partner event bus, this specifies the partner
--   event source that the new event bus will be matched with.
createEventBus_eventSourceName :: Lens' CreateEventBus (Maybe Text)

-- | Tags to associate with the event bus.
createEventBus_tags :: Lens' CreateEventBus (Maybe [Tag])

-- | The name of the new event bus.
--   
--   Event bus names cannot contain the / character. You can't use the name
--   <tt>default</tt> for a custom event bus, as this name is already used
--   for your account's default event bus.
--   
--   If this is a partner event bus, the name must exactly match the name
--   of the partner event source that this event bus is matched to.
createEventBus_name :: Lens' CreateEventBus Text

-- | <i>See:</i> <a>newCreateEventBusResponse</a> smart constructor.
data CreateEventBusResponse
CreateEventBusResponse' :: Maybe Text -> Int -> CreateEventBusResponse

-- | The ARN of the new event bus.
[$sel:eventBusArn:CreateEventBusResponse'] :: CreateEventBusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateEventBusResponse'] :: CreateEventBusResponse -> Int

-- | Create a value of <a>CreateEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusArn:CreateEventBusResponse'</a>,
--   <a>createEventBusResponse_eventBusArn</a> - The ARN of the new event
--   bus.
--   
--   <a>$sel:httpStatus:CreateEventBusResponse'</a>,
--   <a>createEventBusResponse_httpStatus</a> - The response's http status
--   code.
newCreateEventBusResponse :: Int -> CreateEventBusResponse

-- | The ARN of the new event bus.
createEventBusResponse_eventBusArn :: Lens' CreateEventBusResponse (Maybe Text)

-- | The response's http status code.
createEventBusResponse_httpStatus :: Lens' CreateEventBusResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBusResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBusResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBusResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBusResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBusResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CreateEventBus.CreateEventBus


-- | Creates a connection. A connection defines the authorization type and
--   credentials to use for authorization with an API destination HTTP
--   endpoint.
module Amazonka.CloudWatchEvents.CreateConnection

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Text -> ConnectionAuthorizationType -> CreateConnectionAuthRequestParameters -> CreateConnection

-- | A description for the connection to create.
[$sel:description:CreateConnection'] :: CreateConnection -> Maybe Text

-- | The name for the connection to create.
[$sel:name:CreateConnection'] :: CreateConnection -> Text

-- | The type of authorization to use for the connection.
[$sel:authorizationType:CreateConnection'] :: CreateConnection -> ConnectionAuthorizationType

-- | A <tt>CreateConnectionAuthRequestParameters</tt> object that contains
--   the authorization parameters to use to authorize with the endpoint.
[$sel:authParameters:CreateConnection'] :: CreateConnection -> CreateConnectionAuthRequestParameters

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateConnection'</a>,
--   <a>createConnection_description</a> - A description for the connection
--   to create.
--   
--   <a>$sel:name:CreateConnection'</a>, <a>createConnection_name</a> - The
--   name for the connection to create.
--   
--   <a>$sel:authorizationType:CreateConnection'</a>,
--   <a>createConnection_authorizationType</a> - The type of authorization
--   to use for the connection.
--   
--   <a>$sel:authParameters:CreateConnection'</a>,
--   <a>createConnection_authParameters</a> - A
--   <tt>CreateConnectionAuthRequestParameters</tt> object that contains
--   the authorization parameters to use to authorize with the endpoint.
newCreateConnection :: Text -> ConnectionAuthorizationType -> CreateConnectionAuthRequestParameters -> CreateConnection

-- | A description for the connection to create.
createConnection_description :: Lens' CreateConnection (Maybe Text)

-- | The name for the connection to create.
createConnection_name :: Lens' CreateConnection Text

-- | The type of authorization to use for the connection.
createConnection_authorizationType :: Lens' CreateConnection ConnectionAuthorizationType

-- | A <tt>CreateConnectionAuthRequestParameters</tt> object that contains
--   the authorization parameters to use to authorize with the endpoint.
createConnection_authParameters :: Lens' CreateConnection CreateConnectionAuthRequestParameters

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> CreateConnectionResponse

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:CreateConnectionResponse'] :: CreateConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last updated.
[$sel:lastModifiedTime:CreateConnectionResponse'] :: CreateConnectionResponse -> Maybe POSIX

-- | The ARN of the connection that was created by the request.
[$sel:connectionArn:CreateConnectionResponse'] :: CreateConnectionResponse -> Maybe Text

-- | The state of the connection that was created by the request.
[$sel:connectionState:CreateConnectionResponse'] :: CreateConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:CreateConnectionResponse'] :: CreateConnectionResponse -> Int

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last updated.
--   
--   <a>$sel:connectionArn:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was created by the request.
--   
--   <a>$sel:connectionState:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionState</a> - The state of the
--   connection that was created by the request.
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
newCreateConnectionResponse :: Int -> CreateConnectionResponse

-- | A time stamp for the time that the connection was created.
createConnectionResponse_creationTime :: Lens' CreateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last updated.
createConnectionResponse_lastModifiedTime :: Lens' CreateConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was created by the request.
createConnectionResponse_connectionArn :: Lens' CreateConnectionResponse (Maybe Text)

-- | The state of the connection that was created by the request.
createConnectionResponse_connectionState :: Lens' CreateConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateConnection.CreateConnectionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateConnection.CreateConnectionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateConnection.CreateConnectionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateConnection.CreateConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateConnection.CreateConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CreateConnection.CreateConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CreateConnection.CreateConnection


-- | Creates an archive of events with the specified settings. When you
--   create an archive, incoming events might not immediately start being
--   sent to the archive. Allow a short period of time for changes to take
--   effect. If you do not specify a pattern to filter events sent to the
--   archive, all events are sent to the archive except replayed events.
--   Replayed events are not sent to an archive.
module Amazonka.CloudWatchEvents.CreateArchive

-- | <i>See:</i> <a>newCreateArchive</a> smart constructor.
data CreateArchive
CreateArchive' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> Text -> CreateArchive

-- | An event pattern to use to filter events sent to the archive.
[$sel:eventPattern:CreateArchive'] :: CreateArchive -> Maybe Text

-- | The number of days to retain events for. Default value is 0. If set to
--   0, events are retained indefinitely
[$sel:retentionDays:CreateArchive'] :: CreateArchive -> Maybe Natural

-- | A description for the archive.
[$sel:description:CreateArchive'] :: CreateArchive -> Maybe Text

-- | The name for the archive to create.
[$sel:archiveName:CreateArchive'] :: CreateArchive -> Text

-- | The ARN of the event bus that sends events to the archive.
[$sel:eventSourceArn:CreateArchive'] :: CreateArchive -> Text

-- | Create a value of <a>CreateArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:CreateArchive'</a>,
--   <a>createArchive_eventPattern</a> - An event pattern to use to filter
--   events sent to the archive.
--   
--   <a>$sel:retentionDays:CreateArchive'</a>,
--   <a>createArchive_retentionDays</a> - The number of days to retain
--   events for. Default value is 0. If set to 0, events are retained
--   indefinitely
--   
--   <a>$sel:description:CreateArchive'</a>,
--   <a>createArchive_description</a> - A description for the archive.
--   
--   <a>$sel:archiveName:CreateArchive'</a>,
--   <a>createArchive_archiveName</a> - The name for the archive to create.
--   
--   <a>$sel:eventSourceArn:CreateArchive'</a>,
--   <a>createArchive_eventSourceArn</a> - The ARN of the event bus that
--   sends events to the archive.
newCreateArchive :: Text -> Text -> CreateArchive

-- | An event pattern to use to filter events sent to the archive.
createArchive_eventPattern :: Lens' CreateArchive (Maybe Text)

-- | The number of days to retain events for. Default value is 0. If set to
--   0, events are retained indefinitely
createArchive_retentionDays :: Lens' CreateArchive (Maybe Natural)

-- | A description for the archive.
createArchive_description :: Lens' CreateArchive (Maybe Text)

-- | The name for the archive to create.
createArchive_archiveName :: Lens' CreateArchive Text

-- | The ARN of the event bus that sends events to the archive.
createArchive_eventSourceArn :: Lens' CreateArchive Text

-- | <i>See:</i> <a>newCreateArchiveResponse</a> smart constructor.
data CreateArchiveResponse
CreateArchiveResponse' :: Maybe POSIX -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Int -> CreateArchiveResponse

-- | The time at which the archive was created.
[$sel:creationTime:CreateArchiveResponse'] :: CreateArchiveResponse -> Maybe POSIX

-- | The state of the archive that was created.
[$sel:state:CreateArchiveResponse'] :: CreateArchiveResponse -> Maybe ArchiveState

-- | The ARN of the archive that was created.
[$sel:archiveArn:CreateArchiveResponse'] :: CreateArchiveResponse -> Maybe Text

-- | The reason that the archive is in the state.
[$sel:stateReason:CreateArchiveResponse'] :: CreateArchiveResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateArchiveResponse'] :: CreateArchiveResponse -> Int

-- | Create a value of <a>CreateArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_creationTime</a> - The time at which the
--   archive was created.
--   
--   <a>$sel:state:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_state</a> - The state of the archive that was
--   created.
--   
--   <a>$sel:archiveArn:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_archiveArn</a> - The ARN of the archive that
--   was created.
--   
--   <a>$sel:stateReason:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_stateReason</a> - The reason that the archive
--   is in the state.
--   
--   <a>$sel:httpStatus:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_httpStatus</a> - The response's http status
--   code.
newCreateArchiveResponse :: Int -> CreateArchiveResponse

-- | The time at which the archive was created.
createArchiveResponse_creationTime :: Lens' CreateArchiveResponse (Maybe UTCTime)

-- | The state of the archive that was created.
createArchiveResponse_state :: Lens' CreateArchiveResponse (Maybe ArchiveState)

-- | The ARN of the archive that was created.
createArchiveResponse_archiveArn :: Lens' CreateArchiveResponse (Maybe Text)

-- | The reason that the archive is in the state.
createArchiveResponse_stateReason :: Lens' CreateArchiveResponse (Maybe Text)

-- | The response's http status code.
createArchiveResponse_httpStatus :: Lens' CreateArchiveResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateArchive.CreateArchiveResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateArchive.CreateArchiveResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateArchive.CreateArchiveResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateArchive.CreateArchiveResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateArchive.CreateArchiveResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CreateArchive.CreateArchive
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CreateArchive.CreateArchive


-- | Creates an API destination, which is an HTTP invocation endpoint
--   configured as a target for events.
module Amazonka.CloudWatchEvents.CreateApiDestination

-- | <i>See:</i> <a>newCreateApiDestination</a> smart constructor.
data CreateApiDestination
CreateApiDestination' :: Maybe Natural -> Maybe Text -> Text -> Text -> Text -> ApiDestinationHttpMethod -> CreateApiDestination

-- | The maximum number of requests per second to send to the HTTP
--   invocation endpoint.
[$sel:invocationRateLimitPerSecond:CreateApiDestination'] :: CreateApiDestination -> Maybe Natural

-- | A description for the API destination to create.
[$sel:description:CreateApiDestination'] :: CreateApiDestination -> Maybe Text

-- | The name for the API destination to create.
[$sel:name:CreateApiDestination'] :: CreateApiDestination -> Text

-- | The ARN of the connection to use for the API destination. The
--   destination endpoint must support the authorization type specified for
--   the connection.
[$sel:connectionArn:CreateApiDestination'] :: CreateApiDestination -> Text

-- | The URL to the HTTP invocation endpoint for the API destination.
[$sel:invocationEndpoint:CreateApiDestination'] :: CreateApiDestination -> Text

-- | The method to use for the request to the HTTP invocation endpoint.
[$sel:httpMethod:CreateApiDestination'] :: CreateApiDestination -> ApiDestinationHttpMethod

-- | Create a value of <a>CreateApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationRateLimitPerSecond:CreateApiDestination'</a>,
--   <a>createApiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of requests per second to send to the HTTP invocation endpoint.
--   
--   <a>$sel:description:CreateApiDestination'</a>,
--   <a>createApiDestination_description</a> - A description for the API
--   destination to create.
--   
--   <a>$sel:name:CreateApiDestination'</a>,
--   <a>createApiDestination_name</a> - The name for the API destination to
--   create.
--   
--   <a>$sel:connectionArn:CreateApiDestination'</a>,
--   <a>createApiDestination_connectionArn</a> - The ARN of the connection
--   to use for the API destination. The destination endpoint must support
--   the authorization type specified for the connection.
--   
--   <a>$sel:invocationEndpoint:CreateApiDestination'</a>,
--   <a>createApiDestination_invocationEndpoint</a> - The URL to the HTTP
--   invocation endpoint for the API destination.
--   
--   <a>$sel:httpMethod:CreateApiDestination'</a>,
--   <a>createApiDestination_httpMethod</a> - The method to use for the
--   request to the HTTP invocation endpoint.
newCreateApiDestination :: Text -> Text -> Text -> ApiDestinationHttpMethod -> CreateApiDestination

-- | The maximum number of requests per second to send to the HTTP
--   invocation endpoint.
createApiDestination_invocationRateLimitPerSecond :: Lens' CreateApiDestination (Maybe Natural)

-- | A description for the API destination to create.
createApiDestination_description :: Lens' CreateApiDestination (Maybe Text)

-- | The name for the API destination to create.
createApiDestination_name :: Lens' CreateApiDestination Text

-- | The ARN of the connection to use for the API destination. The
--   destination endpoint must support the authorization type specified for
--   the connection.
createApiDestination_connectionArn :: Lens' CreateApiDestination Text

-- | The URL to the HTTP invocation endpoint for the API destination.
createApiDestination_invocationEndpoint :: Lens' CreateApiDestination Text

-- | The method to use for the request to the HTTP invocation endpoint.
createApiDestination_httpMethod :: Lens' CreateApiDestination ApiDestinationHttpMethod

-- | <i>See:</i> <a>newCreateApiDestinationResponse</a> smart constructor.
data CreateApiDestinationResponse
CreateApiDestinationResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe ApiDestinationState -> Maybe Text -> Int -> CreateApiDestinationResponse

-- | A time stamp indicating the time that the API destination was created.
[$sel:creationTime:CreateApiDestinationResponse'] :: CreateApiDestinationResponse -> Maybe POSIX

-- | A time stamp indicating the time that the API destination was last
--   modified.
[$sel:lastModifiedTime:CreateApiDestinationResponse'] :: CreateApiDestinationResponse -> Maybe POSIX

-- | The state of the API destination that was created by the request.
[$sel:apiDestinationState:CreateApiDestinationResponse'] :: CreateApiDestinationResponse -> Maybe ApiDestinationState

-- | The ARN of the API destination that was created by the request.
[$sel:apiDestinationArn:CreateApiDestinationResponse'] :: CreateApiDestinationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateApiDestinationResponse'] :: CreateApiDestinationResponse -> Int

-- | Create a value of <a>CreateApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_creationTime</a> - A time stamp
--   indicating the time that the API destination was created.
--   
--   <a>$sel:lastModifiedTime:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   indicating the time that the API destination was last modified.
--   
--   <a>$sel:apiDestinationState:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_apiDestinationState</a> - The state of
--   the API destination that was created by the request.
--   
--   <a>$sel:apiDestinationArn:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_apiDestinationArn</a> - The ARN of the
--   API destination that was created by the request.
--   
--   <a>$sel:httpStatus:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApiDestinationResponse :: Int -> CreateApiDestinationResponse

-- | A time stamp indicating the time that the API destination was created.
createApiDestinationResponse_creationTime :: Lens' CreateApiDestinationResponse (Maybe UTCTime)

-- | A time stamp indicating the time that the API destination was last
--   modified.
createApiDestinationResponse_lastModifiedTime :: Lens' CreateApiDestinationResponse (Maybe UTCTime)

-- | The state of the API destination that was created by the request.
createApiDestinationResponse_apiDestinationState :: Lens' CreateApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the API destination that was created by the request.
createApiDestinationResponse_apiDestinationArn :: Lens' CreateApiDestinationResponse (Maybe Text)

-- | The response's http status code.
createApiDestinationResponse_httpStatus :: Lens' CreateApiDestinationResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestinationResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestinationResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestinationResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestinationResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestinationResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CreateApiDestination.CreateApiDestination


-- | Cancels the specified replay.
module Amazonka.CloudWatchEvents.CancelReplay

-- | <i>See:</i> <a>newCancelReplay</a> smart constructor.
data CancelReplay
CancelReplay' :: Text -> CancelReplay

-- | The name of the replay to cancel.
[$sel:replayName:CancelReplay'] :: CancelReplay -> Text

-- | Create a value of <a>CancelReplay</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replayName:CancelReplay'</a>, <a>cancelReplay_replayName</a> -
--   The name of the replay to cancel.
newCancelReplay :: Text -> CancelReplay

-- | The name of the replay to cancel.
cancelReplay_replayName :: Lens' CancelReplay Text

-- | <i>See:</i> <a>newCancelReplayResponse</a> smart constructor.
data CancelReplayResponse
CancelReplayResponse' :: Maybe ReplayState -> Maybe Text -> Maybe Text -> Int -> CancelReplayResponse

-- | The current state of the replay.
[$sel:state:CancelReplayResponse'] :: CancelReplayResponse -> Maybe ReplayState

-- | The ARN of the replay to cancel.
[$sel:replayArn:CancelReplayResponse'] :: CancelReplayResponse -> Maybe Text

-- | The reason that the replay is in the current state.
[$sel:stateReason:CancelReplayResponse'] :: CancelReplayResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelReplayResponse'] :: CancelReplayResponse -> Int

-- | Create a value of <a>CancelReplayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_state</a> - The current state of the replay.
--   
--   <a>$sel:replayArn:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_replayArn</a> - The ARN of the replay to
--   cancel.
--   
--   <a>$sel:stateReason:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_stateReason</a> - The reason that the replay
--   is in the current state.
--   
--   <a>$sel:httpStatus:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_httpStatus</a> - The response's http status
--   code.
newCancelReplayResponse :: Int -> CancelReplayResponse

-- | The current state of the replay.
cancelReplayResponse_state :: Lens' CancelReplayResponse (Maybe ReplayState)

-- | The ARN of the replay to cancel.
cancelReplayResponse_replayArn :: Lens' CancelReplayResponse (Maybe Text)

-- | The reason that the replay is in the current state.
cancelReplayResponse_stateReason :: Lens' CancelReplayResponse (Maybe Text)

-- | The response's http status code.
cancelReplayResponse_httpStatus :: Lens' CancelReplayResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance GHC.Show.Show Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance GHC.Read.Read Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.CancelReplay.CancelReplayResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.CancelReplay.CancelReplayResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.CancelReplay.CancelReplayResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.CancelReplay.CancelReplayResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CancelReplay.CancelReplayResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.CancelReplay.CancelReplay
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.CancelReplay.CancelReplay


-- | Activates a partner event source that has been deactivated. Once
--   activated, your matching event bus will start receiving events from
--   the event source.
module Amazonka.CloudWatchEvents.ActivateEventSource

-- | <i>See:</i> <a>newActivateEventSource</a> smart constructor.
data ActivateEventSource
ActivateEventSource' :: Text -> ActivateEventSource

-- | The name of the partner event source to activate.
[$sel:name:ActivateEventSource'] :: ActivateEventSource -> Text

-- | Create a value of <a>ActivateEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ActivateEventSource'</a>, <a>activateEventSource_name</a>
--   - The name of the partner event source to activate.
newActivateEventSource :: Text -> ActivateEventSource

-- | The name of the partner event source to activate.
activateEventSource_name :: Lens' ActivateEventSource Text

-- | <i>See:</i> <a>newActivateEventSourceResponse</a> smart constructor.
data ActivateEventSourceResponse
ActivateEventSourceResponse' :: ActivateEventSourceResponse

-- | Create a value of <a>ActivateEventSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newActivateEventSourceResponse :: ActivateEventSourceResponse
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance GHC.Show.Show Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance GHC.Read.Read Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.ActivateEventSource.ActivateEventSource


-- | Removes one or more tags from the specified EventBridge resource. In
--   Amazon EventBridge (CloudWatch Events), rules and event buses can be
--   tagged.
module Amazonka.CloudWatchEvents.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the EventBridge resource from which you are removing tags.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the EventBridge resource
--   from which you are removing tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | The ARN of the EventBridge resource from which you are removing tags.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.UntagResource.UntagResource


-- | Updates an API destination.
module Amazonka.CloudWatchEvents.UpdateApiDestination

-- | <i>See:</i> <a>newUpdateApiDestination</a> smart constructor.
data UpdateApiDestination
UpdateApiDestination' :: Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> UpdateApiDestination

-- | The method to use for the API destination.
[$sel:httpMethod:UpdateApiDestination'] :: UpdateApiDestination -> Maybe ApiDestinationHttpMethod

-- | The URL to the endpoint to use for the API destination.
[$sel:invocationEndpoint:UpdateApiDestination'] :: UpdateApiDestination -> Maybe Text

-- | The maximum number of invocations per second to send to the API
--   destination.
[$sel:invocationRateLimitPerSecond:UpdateApiDestination'] :: UpdateApiDestination -> Maybe Natural

-- | The ARN of the connection to use for the API destination.
[$sel:connectionArn:UpdateApiDestination'] :: UpdateApiDestination -> Maybe Text

-- | The name of the API destination to update.
[$sel:description:UpdateApiDestination'] :: UpdateApiDestination -> Maybe Text

-- | The name of the API destination to update.
[$sel:name:UpdateApiDestination'] :: UpdateApiDestination -> Text

-- | Create a value of <a>UpdateApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:UpdateApiDestination'</a>,
--   <a>updateApiDestination_httpMethod</a> - The method to use for the API
--   destination.
--   
--   <a>$sel:invocationEndpoint:UpdateApiDestination'</a>,
--   <a>updateApiDestination_invocationEndpoint</a> - The URL to the
--   endpoint to use for the API destination.
--   
--   <a>$sel:invocationRateLimitPerSecond:UpdateApiDestination'</a>,
--   <a>updateApiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of invocations per second to send to the API destination.
--   
--   <a>$sel:connectionArn:UpdateApiDestination'</a>,
--   <a>updateApiDestination_connectionArn</a> - The ARN of the connection
--   to use for the API destination.
--   
--   <a>$sel:description:UpdateApiDestination'</a>,
--   <a>updateApiDestination_description</a> - The name of the API
--   destination to update.
--   
--   <a>$sel:name:UpdateApiDestination'</a>,
--   <a>updateApiDestination_name</a> - The name of the API destination to
--   update.
newUpdateApiDestination :: Text -> UpdateApiDestination

-- | The method to use for the API destination.
updateApiDestination_httpMethod :: Lens' UpdateApiDestination (Maybe ApiDestinationHttpMethod)

-- | The URL to the endpoint to use for the API destination.
updateApiDestination_invocationEndpoint :: Lens' UpdateApiDestination (Maybe Text)

-- | The maximum number of invocations per second to send to the API
--   destination.
updateApiDestination_invocationRateLimitPerSecond :: Lens' UpdateApiDestination (Maybe Natural)

-- | The ARN of the connection to use for the API destination.
updateApiDestination_connectionArn :: Lens' UpdateApiDestination (Maybe Text)

-- | The name of the API destination to update.
updateApiDestination_description :: Lens' UpdateApiDestination (Maybe Text)

-- | The name of the API destination to update.
updateApiDestination_name :: Lens' UpdateApiDestination Text

-- | <i>See:</i> <a>newUpdateApiDestinationResponse</a> smart constructor.
data UpdateApiDestinationResponse
UpdateApiDestinationResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe ApiDestinationState -> Maybe Text -> Int -> UpdateApiDestinationResponse

-- | A time stamp for the time that the API destination was created.
[$sel:creationTime:UpdateApiDestinationResponse'] :: UpdateApiDestinationResponse -> Maybe POSIX

-- | A time stamp for the time that the API destination was last modified.
[$sel:lastModifiedTime:UpdateApiDestinationResponse'] :: UpdateApiDestinationResponse -> Maybe POSIX

-- | The state of the API destination that was updated.
[$sel:apiDestinationState:UpdateApiDestinationResponse'] :: UpdateApiDestinationResponse -> Maybe ApiDestinationState

-- | The ARN of the API destination that was updated.
[$sel:apiDestinationArn:UpdateApiDestinationResponse'] :: UpdateApiDestinationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateApiDestinationResponse'] :: UpdateApiDestinationResponse -> Int

-- | Create a value of <a>UpdateApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_creationTime</a> - A time stamp for
--   the time that the API destination was created.
--   
--   <a>$sel:lastModifiedTime:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   for the time that the API destination was last modified.
--   
--   <a>$sel:apiDestinationState:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_apiDestinationState</a> - The state of
--   the API destination that was updated.
--   
--   <a>$sel:apiDestinationArn:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_apiDestinationArn</a> - The ARN of the
--   API destination that was updated.
--   
--   <a>$sel:httpStatus:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApiDestinationResponse :: Int -> UpdateApiDestinationResponse

-- | A time stamp for the time that the API destination was created.
updateApiDestinationResponse_creationTime :: Lens' UpdateApiDestinationResponse (Maybe UTCTime)

-- | A time stamp for the time that the API destination was last modified.
updateApiDestinationResponse_lastModifiedTime :: Lens' UpdateApiDestinationResponse (Maybe UTCTime)

-- | The state of the API destination that was updated.
updateApiDestinationResponse_apiDestinationState :: Lens' UpdateApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the API destination that was updated.
updateApiDestinationResponse_apiDestinationArn :: Lens' UpdateApiDestinationResponse (Maybe Text)

-- | The response's http status code.
updateApiDestinationResponse_httpStatus :: Lens' UpdateApiDestinationResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestinationResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestinationResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestinationResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestinationResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestinationResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.UpdateApiDestination.UpdateApiDestination


-- | Updates the specified archive.
module Amazonka.CloudWatchEvents.UpdateArchive

-- | <i>See:</i> <a>newUpdateArchive</a> smart constructor.
data UpdateArchive
UpdateArchive' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> UpdateArchive

-- | The event pattern to use to filter events sent to the archive.
[$sel:eventPattern:UpdateArchive'] :: UpdateArchive -> Maybe Text

-- | The number of days to retain events in the archive.
[$sel:retentionDays:UpdateArchive'] :: UpdateArchive -> Maybe Natural

-- | The description for the archive.
[$sel:description:UpdateArchive'] :: UpdateArchive -> Maybe Text

-- | The name of the archive to update.
[$sel:archiveName:UpdateArchive'] :: UpdateArchive -> Text

-- | Create a value of <a>UpdateArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:UpdateArchive'</a>,
--   <a>updateArchive_eventPattern</a> - The event pattern to use to filter
--   events sent to the archive.
--   
--   <a>$sel:retentionDays:UpdateArchive'</a>,
--   <a>updateArchive_retentionDays</a> - The number of days to retain
--   events in the archive.
--   
--   <a>$sel:description:UpdateArchive'</a>,
--   <a>updateArchive_description</a> - The description for the archive.
--   
--   <a>$sel:archiveName:UpdateArchive'</a>,
--   <a>updateArchive_archiveName</a> - The name of the archive to update.
newUpdateArchive :: Text -> UpdateArchive

-- | The event pattern to use to filter events sent to the archive.
updateArchive_eventPattern :: Lens' UpdateArchive (Maybe Text)

-- | The number of days to retain events in the archive.
updateArchive_retentionDays :: Lens' UpdateArchive (Maybe Natural)

-- | The description for the archive.
updateArchive_description :: Lens' UpdateArchive (Maybe Text)

-- | The name of the archive to update.
updateArchive_archiveName :: Lens' UpdateArchive Text

-- | <i>See:</i> <a>newUpdateArchiveResponse</a> smart constructor.
data UpdateArchiveResponse
UpdateArchiveResponse' :: Maybe POSIX -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Int -> UpdateArchiveResponse

-- | The time at which the archive was updated.
[$sel:creationTime:UpdateArchiveResponse'] :: UpdateArchiveResponse -> Maybe POSIX

-- | The state of the archive.
[$sel:state:UpdateArchiveResponse'] :: UpdateArchiveResponse -> Maybe ArchiveState

-- | The ARN of the archive.
[$sel:archiveArn:UpdateArchiveResponse'] :: UpdateArchiveResponse -> Maybe Text

-- | The reason that the archive is in the current state.
[$sel:stateReason:UpdateArchiveResponse'] :: UpdateArchiveResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateArchiveResponse'] :: UpdateArchiveResponse -> Int

-- | Create a value of <a>UpdateArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_creationTime</a> - The time at which the
--   archive was updated.
--   
--   <a>$sel:state:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_state</a> - The state of the archive.
--   
--   <a>$sel:archiveArn:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_archiveArn</a> - The ARN of the archive.
--   
--   <a>$sel:stateReason:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_stateReason</a> - The reason that the archive
--   is in the current state.
--   
--   <a>$sel:httpStatus:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_httpStatus</a> - The response's http status
--   code.
newUpdateArchiveResponse :: Int -> UpdateArchiveResponse

-- | The time at which the archive was updated.
updateArchiveResponse_creationTime :: Lens' UpdateArchiveResponse (Maybe UTCTime)

-- | The state of the archive.
updateArchiveResponse_state :: Lens' UpdateArchiveResponse (Maybe ArchiveState)

-- | The ARN of the archive.
updateArchiveResponse_archiveArn :: Lens' UpdateArchiveResponse (Maybe Text)

-- | The reason that the archive is in the current state.
updateArchiveResponse_stateReason :: Lens' UpdateArchiveResponse (Maybe Text)

-- | The response's http status code.
updateArchiveResponse_httpStatus :: Lens' UpdateArchiveResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchiveResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchiveResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchiveResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchiveResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchiveResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.UpdateArchive.UpdateArchive


-- | Updates settings for a connection.
module Amazonka.CloudWatchEvents.UpdateConnection

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe UpdateConnectionAuthRequestParameters -> Maybe ConnectionAuthorizationType -> Maybe Text -> Text -> UpdateConnection

-- | The authorization parameters to use for the connection.
[$sel:authParameters:UpdateConnection'] :: UpdateConnection -> Maybe UpdateConnectionAuthRequestParameters

-- | The type of authorization to use for the connection.
[$sel:authorizationType:UpdateConnection'] :: UpdateConnection -> Maybe ConnectionAuthorizationType

-- | A description for the connection.
[$sel:description:UpdateConnection'] :: UpdateConnection -> Maybe Text

-- | The name of the connection to update.
[$sel:name:UpdateConnection'] :: UpdateConnection -> Text

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authParameters:UpdateConnection'</a>,
--   <a>updateConnection_authParameters</a> - The authorization parameters
--   to use for the connection.
--   
--   <a>$sel:authorizationType:UpdateConnection'</a>,
--   <a>updateConnection_authorizationType</a> - The type of authorization
--   to use for the connection.
--   
--   <a>$sel:description:UpdateConnection'</a>,
--   <a>updateConnection_description</a> - A description for the
--   connection.
--   
--   <a>$sel:name:UpdateConnection'</a>, <a>updateConnection_name</a> - The
--   name of the connection to update.
newUpdateConnection :: Text -> UpdateConnection

-- | The authorization parameters to use for the connection.
updateConnection_authParameters :: Lens' UpdateConnection (Maybe UpdateConnectionAuthRequestParameters)

-- | The type of authorization to use for the connection.
updateConnection_authorizationType :: Lens' UpdateConnection (Maybe ConnectionAuthorizationType)

-- | A description for the connection.
updateConnection_description :: Lens' UpdateConnection (Maybe Text)

-- | The name of the connection to update.
updateConnection_name :: Lens' UpdateConnection Text

-- | <i>See:</i> <a>newUpdateConnectionResponse</a> smart constructor.
data UpdateConnectionResponse
UpdateConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> UpdateConnectionResponse

-- | A time stamp for the time that the connection was created.
[$sel:creationTime:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last modified.
[$sel:lastModifiedTime:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Maybe POSIX

-- | A time stamp for the time that the connection was last authorized.
[$sel:lastAuthorizedTime:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Maybe POSIX

-- | The ARN of the connection that was updated.
[$sel:connectionArn:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Maybe Text

-- | The state of the connection that was updated.
[$sel:connectionState:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Maybe ConnectionState

-- | The response's http status code.
[$sel:httpStatus:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Int

-- | Create a value of <a>UpdateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified.
--   
--   <a>$sel:lastAuthorizedTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_lastAuthorizedTime</a> - A time stamp for
--   the time that the connection was last authorized.
--   
--   <a>$sel:connectionArn:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was updated.
--   
--   <a>$sel:connectionState:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_connectionState</a> - The state of the
--   connection that was updated.
--   
--   <a>$sel:httpStatus:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectionResponse :: Int -> UpdateConnectionResponse

-- | A time stamp for the time that the connection was created.
updateConnectionResponse_creationTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
updateConnectionResponse_lastModifiedTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized.
updateConnectionResponse_lastAuthorizedTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was updated.
updateConnectionResponse_connectionArn :: Lens' UpdateConnectionResponse (Maybe Text)

-- | The state of the connection that was updated.
updateConnectionResponse_connectionState :: Lens' UpdateConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
updateConnectionResponse_httpStatus :: Lens' UpdateConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance GHC.Generics.Generic Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnectionResponse
instance GHC.Show.Show Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnectionResponse
instance GHC.Read.Read Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnectionResponse
instance GHC.Classes.Eq Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Control.DeepSeq.NFData Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Amazonka.Data.Path.ToPath Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CloudWatchEvents.UpdateConnection.UpdateConnection


module Amazonka.CloudWatchEvents.Lens

-- | The name of the connection to remove authorization from.
deauthorizeConnection_name :: Lens' DeauthorizeConnection Text

-- | A time stamp for the time that the connection was created.
deauthorizeConnectionResponse_creationTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last updated.
deauthorizeConnectionResponse_lastModifiedTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized.
deauthorizeConnectionResponse_lastAuthorizedTime :: Lens' DeauthorizeConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that authorization was removed from.
deauthorizeConnectionResponse_connectionArn :: Lens' DeauthorizeConnectionResponse (Maybe Text)

-- | The state of the connection.
deauthorizeConnectionResponse_connectionState :: Lens' DeauthorizeConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
deauthorizeConnectionResponse_httpStatus :: Lens' DeauthorizeConnectionResponse Int

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   remove targets. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
removeTargets_force :: Lens' RemoveTargets (Maybe Bool)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
removeTargets_eventBusName :: Lens' RemoveTargets (Maybe Text)

-- | The name of the rule.
removeTargets_rule :: Lens' RemoveTargets Text

-- | The IDs of the targets to remove from the rule.
removeTargets_ids :: Lens' RemoveTargets (NonEmpty Text)

-- | The number of failed entries.
removeTargetsResponse_failedEntryCount :: Lens' RemoveTargetsResponse (Maybe Int)

-- | The failed target entries.
removeTargetsResponse_failedEntries :: Lens' RemoveTargetsResponse (Maybe [RemoveTargetsResultEntry])

-- | The response's http status code.
removeTargetsResponse_httpStatus :: Lens' RemoveTargetsResponse Int

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, you must specify <tt>Force</tt> as <tt>True</tt> to
--   delete the rule. This parameter is ignored for rules that are not
--   managed rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
deleteRule_force :: Lens' DeleteRule (Maybe Bool)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
deleteRule_eventBusName :: Lens' DeleteRule (Maybe Text)

-- | The name of the rule.
deleteRule_name :: Lens' DeleteRule Text

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
listPartnerEventSourceAccounts_nextToken :: Lens' ListPartnerEventSourceAccounts (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listPartnerEventSourceAccounts_limit :: Lens' ListPartnerEventSourceAccounts (Maybe Natural)

-- | The name of the partner event source to display account information
--   about.
listPartnerEventSourceAccounts_eventSourceName :: Lens' ListPartnerEventSourceAccounts Text

-- | The list of partner event sources returned by the operation.
listPartnerEventSourceAccountsResponse_partnerEventSourceAccounts :: Lens' ListPartnerEventSourceAccountsResponse (Maybe [PartnerEventSourceAccount])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listPartnerEventSourceAccountsResponse_nextToken :: Lens' ListPartnerEventSourceAccountsResponse (Maybe Text)

-- | The response's http status code.
listPartnerEventSourceAccountsResponse_httpStatus :: Lens' ListPartnerEventSourceAccountsResponse Int

-- | The token returned by a previous call to retrieve the next set of
--   results.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | A name prefix to filter results returned. Only connections with a name
--   that starts with the prefix are returned.
listConnections_namePrefix :: Lens' ListConnections (Maybe Text)

-- | The maximum number of connections to return.
listConnections_limit :: Lens' ListConnections (Maybe Natural)

-- | The state of the connection.
listConnections_connectionState :: Lens' ListConnections (Maybe ConnectionState)

-- | An array of connections objects that include details about the
--   connections.
listConnectionsResponse_connections :: Lens' ListConnectionsResponse (Maybe [Connection])

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int

-- | The name of the connection to delete.
deleteConnection_name :: Lens' DeleteConnection Text

-- | A time stamp for the time that the connection was created.
deleteConnectionResponse_creationTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified before
--   it was deleted.
deleteConnectionResponse_lastModifiedTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized
--   before it wa deleted.
deleteConnectionResponse_lastAuthorizedTime :: Lens' DeleteConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was deleted.
deleteConnectionResponse_connectionArn :: Lens' DeleteConnectionResponse (Maybe Text)

-- | The state of the connection before it was deleted.
deleteConnectionResponse_connectionState :: Lens' DeleteConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int

-- | The authorization parameters to use for the connection.
updateConnection_authParameters :: Lens' UpdateConnection (Maybe UpdateConnectionAuthRequestParameters)

-- | The type of authorization to use for the connection.
updateConnection_authorizationType :: Lens' UpdateConnection (Maybe ConnectionAuthorizationType)

-- | A description for the connection.
updateConnection_description :: Lens' UpdateConnection (Maybe Text)

-- | The name of the connection to update.
updateConnection_name :: Lens' UpdateConnection Text

-- | A time stamp for the time that the connection was created.
updateConnectionResponse_creationTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
updateConnectionResponse_lastModifiedTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last authorized.
updateConnectionResponse_lastAuthorizedTime :: Lens' UpdateConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was updated.
updateConnectionResponse_connectionArn :: Lens' UpdateConnectionResponse (Maybe Text)

-- | The state of the connection that was updated.
updateConnectionResponse_connectionState :: Lens' UpdateConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
updateConnectionResponse_httpStatus :: Lens' UpdateConnectionResponse Int

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRules_nextToken :: Lens' ListRules (Maybe Text)

-- | The name or ARN of the event bus to list the rules for. If you omit
--   this, the default event bus is used.
listRules_eventBusName :: Lens' ListRules (Maybe Text)

-- | The prefix matching the rule name.
listRules_namePrefix :: Lens' ListRules (Maybe Text)

-- | The maximum number of results to return.
listRules_limit :: Lens' ListRules (Maybe Natural)

-- | The rules that match the specified criteria.
listRulesResponse_rules :: Lens' ListRulesResponse (Maybe [Rule])

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listRulesResponse_nextToken :: Lens' ListRulesResponse (Maybe Text)

-- | The response's http status code.
listRulesResponse_httpStatus :: Lens' ListRulesResponse Int

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
putRule_eventPattern :: Lens' PutRule (Maybe Text)

-- | Indicates whether the rule is enabled or disabled.
putRule_state :: Lens' PutRule (Maybe RuleState)

-- | The name or ARN of the event bus to associate with this rule. If you
--   omit this, the default event bus is used.
putRule_eventBusName :: Lens' PutRule (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)" or
--   "rate(5 minutes)".
putRule_scheduleExpression :: Lens' PutRule (Maybe Text)

-- | A description of the rule.
putRule_description :: Lens' PutRule (Maybe Text)

-- | The list of key-value pairs to associate with the rule.
putRule_tags :: Lens' PutRule (Maybe [Tag])

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
putRule_roleArn :: Lens' PutRule (Maybe Text)

-- | The name of the rule that you are creating or updating.
putRule_name :: Lens' PutRule Text

-- | The Amazon Resource Name (ARN) of the rule.
putRuleResponse_ruleArn :: Lens' PutRuleResponse (Maybe Text)

-- | The response's http status code.
putRuleResponse_httpStatus :: Lens' PutRuleResponse Int

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
disableRule_eventBusName :: Lens' DisableRule (Maybe Text)

-- | The name of the rule.
disableRule_name :: Lens' DisableRule Text

-- | The action that you are enabling the other account to perform.
putPermission_action :: Lens' PutPermission (Maybe Text)

-- | The name of the event bus associated with the rule. If you omit this,
--   the default event bus is used.
putPermission_eventBusName :: Lens' PutPermission (Maybe Text)

-- | The 12-digit Amazon Web Services account ID that you are permitting to
--   put events to your default event bus. Specify "*" to permit any
--   account to put events to your default event bus.
--   
--   If you specify "*" without specifying <tt>Condition</tt>, avoid
--   creating rules that may match undesirable events. To create more
--   secure rules, make sure that the event pattern for each rule contains
--   an <tt>account</tt> field with a specific account ID from which to
--   receive events. Rules with an account field do not match any events
--   sent from other accounts.
putPermission_principal :: Lens' PutPermission (Maybe Text)

-- | A JSON string that describes the permission policy statement. You can
--   include a <tt>Policy</tt> parameter in the request instead of using
--   the <tt>StatementId</tt>, <tt>Action</tt>, <tt>Principal</tt>, or
--   <tt>Condition</tt> parameters.
putPermission_policy :: Lens' PutPermission (Maybe Text)

-- | An identifier string for the external account that you are granting
--   permissions to. If you later want to revoke the permission for this
--   external account, specify this <tt>StatementId</tt> when you run
--   <a>RemovePermission</a>.
putPermission_statementId :: Lens' PutPermission (Maybe Text)

-- | This parameter enables you to limit the permission to accounts that
--   fulfill a certain condition, such as being a member of a certain
--   Amazon Web Services organization. For more information about Amazon
--   Web Services Organizations, see <a>What Is Amazon Web Services
--   Organizations</a> in the <i>Amazon Web Services Organizations User
--   Guide</i>.
--   
--   If you specify <tt>Condition</tt> with an Amazon Web Services
--   organization ID, and specify "*" as the value for <tt>Principal</tt>,
--   you grant permission to all the accounts in the named organization.
--   
--   The <tt>Condition</tt> is a JSON string which must contain
--   <tt>Type</tt>, <tt>Key</tt>, and <tt>Value</tt> fields.
putPermission_condition :: Lens' PutPermission (Maybe Condition)

-- | The ARN of the EventBridge resource for which you want to view tags.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The list of tag keys and values associated with the resource you
--   specified
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ARN of the archive from which the events are replayed.
listReplays_eventSourceArn :: Lens' ListReplays (Maybe Text)

-- | The state of the replay.
listReplays_state :: Lens' ListReplays (Maybe ReplayState)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listReplays_nextToken :: Lens' ListReplays (Maybe Text)

-- | A name prefix to filter the replays returned. Only replays with name
--   that match the prefix are returned.
listReplays_namePrefix :: Lens' ListReplays (Maybe Text)

-- | The maximum number of replays to retrieve.
listReplays_limit :: Lens' ListReplays (Maybe Natural)

-- | An array of <tt>Replay</tt> objects that contain information about the
--   replay.
listReplaysResponse_replays :: Lens' ListReplaysResponse (Maybe [Replay])

-- | The token returned by a previous call to retrieve the next set of
--   results.
listReplaysResponse_nextToken :: Lens' ListReplaysResponse (Maybe Text)

-- | The response's http status code.
listReplaysResponse_httpStatus :: Lens' ListReplaysResponse Int

-- | A description for the connection to create.
createConnection_description :: Lens' CreateConnection (Maybe Text)

-- | The name for the connection to create.
createConnection_name :: Lens' CreateConnection Text

-- | The type of authorization to use for the connection.
createConnection_authorizationType :: Lens' CreateConnection ConnectionAuthorizationType

-- | A <tt>CreateConnectionAuthRequestParameters</tt> object that contains
--   the authorization parameters to use to authorize with the endpoint.
createConnection_authParameters :: Lens' CreateConnection CreateConnectionAuthRequestParameters

-- | A time stamp for the time that the connection was created.
createConnectionResponse_creationTime :: Lens' CreateConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last updated.
createConnectionResponse_lastModifiedTime :: Lens' CreateConnectionResponse (Maybe UTCTime)

-- | The ARN of the connection that was created by the request.
createConnectionResponse_connectionArn :: Lens' CreateConnectionResponse (Maybe Text)

-- | The state of the connection that was created by the request.
createConnectionResponse_connectionState :: Lens' CreateConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | The name of the replay to cancel.
cancelReplay_replayName :: Lens' CancelReplay Text

-- | The current state of the replay.
cancelReplayResponse_state :: Lens' CancelReplayResponse (Maybe ReplayState)

-- | The ARN of the replay to cancel.
cancelReplayResponse_replayArn :: Lens' CancelReplayResponse (Maybe Text)

-- | The reason that the replay is in the current state.
cancelReplayResponse_stateReason :: Lens' CancelReplayResponse (Maybe Text)

-- | The response's http status code.
cancelReplayResponse_httpStatus :: Lens' CancelReplayResponse Int

-- | The token returned by a previous call to retrieve the next set of
--   results.
listTargetsByRule_nextToken :: Lens' ListTargetsByRule (Maybe Text)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
listTargetsByRule_eventBusName :: Lens' ListTargetsByRule (Maybe Text)

-- | The maximum number of results to return.
listTargetsByRule_limit :: Lens' ListTargetsByRule (Maybe Natural)

-- | The name of the rule.
listTargetsByRule_rule :: Lens' ListTargetsByRule Text

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listTargetsByRuleResponse_nextToken :: Lens' ListTargetsByRuleResponse (Maybe Text)

-- | The targets assigned to the rule.
listTargetsByRuleResponse_targets :: Lens' ListTargetsByRuleResponse (Maybe (NonEmpty Target))

-- | The response's http status code.
listTargetsByRuleResponse_httpStatus :: Lens' ListTargetsByRuleResponse Int

-- | The name of the event bus to revoke permissions for. If you omit this,
--   the default event bus is used.
removePermission_eventBusName :: Lens' RemovePermission (Maybe Text)

-- | Specifies whether to remove all permissions.
removePermission_removeAllPermissions :: Lens' RemovePermission (Maybe Bool)

-- | The statement ID corresponding to the account that is no longer
--   allowed to put events to the default event bus.
removePermission_statementId :: Lens' RemovePermission (Maybe Text)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listApiDestinations_nextToken :: Lens' ListApiDestinations (Maybe Text)

-- | A name prefix to filter results returned. Only API destinations with a
--   name that starts with the prefix are returned.
listApiDestinations_namePrefix :: Lens' ListApiDestinations (Maybe Text)

-- | The maximum number of API destinations to include in the response.
listApiDestinations_limit :: Lens' ListApiDestinations (Maybe Natural)

-- | The ARN of the connection specified for the API destination.
listApiDestinations_connectionArn :: Lens' ListApiDestinations (Maybe Text)

-- | An array of <tt>ApiDestination</tt> objects that include information
--   about an API destination.
listApiDestinationsResponse_apiDestinations :: Lens' ListApiDestinationsResponse (Maybe [ApiDestination])

-- | A token you can use in a subsequent request to retrieve the next set
--   of results.
listApiDestinationsResponse_nextToken :: Lens' ListApiDestinationsResponse (Maybe Text)

-- | The response's http status code.
listApiDestinationsResponse_httpStatus :: Lens' ListApiDestinationsResponse Int

-- | The method to use for the API destination.
updateApiDestination_httpMethod :: Lens' UpdateApiDestination (Maybe ApiDestinationHttpMethod)

-- | The URL to the endpoint to use for the API destination.
updateApiDestination_invocationEndpoint :: Lens' UpdateApiDestination (Maybe Text)

-- | The maximum number of invocations per second to send to the API
--   destination.
updateApiDestination_invocationRateLimitPerSecond :: Lens' UpdateApiDestination (Maybe Natural)

-- | The ARN of the connection to use for the API destination.
updateApiDestination_connectionArn :: Lens' UpdateApiDestination (Maybe Text)

-- | The name of the API destination to update.
updateApiDestination_description :: Lens' UpdateApiDestination (Maybe Text)

-- | The name of the API destination to update.
updateApiDestination_name :: Lens' UpdateApiDestination Text

-- | A time stamp for the time that the API destination was created.
updateApiDestinationResponse_creationTime :: Lens' UpdateApiDestinationResponse (Maybe UTCTime)

-- | A time stamp for the time that the API destination was last modified.
updateApiDestinationResponse_lastModifiedTime :: Lens' UpdateApiDestinationResponse (Maybe UTCTime)

-- | The state of the API destination that was updated.
updateApiDestinationResponse_apiDestinationState :: Lens' UpdateApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the API destination that was updated.
updateApiDestinationResponse_apiDestinationArn :: Lens' UpdateApiDestinationResponse (Maybe Text)

-- | The response's http status code.
updateApiDestinationResponse_httpStatus :: Lens' UpdateApiDestinationResponse Int

-- | The name of the destination to delete.
deleteApiDestination_name :: Lens' DeleteApiDestination Text

-- | The response's http status code.
deleteApiDestinationResponse_httpStatus :: Lens' DeleteApiDestinationResponse Int

-- | The name of the partner event source to activate.
activateEventSource_name :: Lens' ActivateEventSource Text

-- | The maximum number of requests per second to send to the HTTP
--   invocation endpoint.
createApiDestination_invocationRateLimitPerSecond :: Lens' CreateApiDestination (Maybe Natural)

-- | A description for the API destination to create.
createApiDestination_description :: Lens' CreateApiDestination (Maybe Text)

-- | The name for the API destination to create.
createApiDestination_name :: Lens' CreateApiDestination Text

-- | The ARN of the connection to use for the API destination. The
--   destination endpoint must support the authorization type specified for
--   the connection.
createApiDestination_connectionArn :: Lens' CreateApiDestination Text

-- | The URL to the HTTP invocation endpoint for the API destination.
createApiDestination_invocationEndpoint :: Lens' CreateApiDestination Text

-- | The method to use for the request to the HTTP invocation endpoint.
createApiDestination_httpMethod :: Lens' CreateApiDestination ApiDestinationHttpMethod

-- | A time stamp indicating the time that the API destination was created.
createApiDestinationResponse_creationTime :: Lens' CreateApiDestinationResponse (Maybe UTCTime)

-- | A time stamp indicating the time that the API destination was last
--   modified.
createApiDestinationResponse_lastModifiedTime :: Lens' CreateApiDestinationResponse (Maybe UTCTime)

-- | The state of the API destination that was created by the request.
createApiDestinationResponse_apiDestinationState :: Lens' CreateApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the API destination that was created by the request.
createApiDestinationResponse_apiDestinationArn :: Lens' CreateApiDestinationResponse (Maybe Text)

-- | The response's http status code.
createApiDestinationResponse_httpStatus :: Lens' CreateApiDestinationResponse Int

-- | The list of events to write to the event bus.
putPartnerEvents_entries :: Lens' PutPartnerEvents (NonEmpty PutPartnerEventsRequestEntry)

-- | The number of events from this operation that could not be written to
--   the partner event bus.
putPartnerEventsResponse_failedEntryCount :: Lens' PutPartnerEventsResponse (Maybe Int)

-- | The list of events from this operation that were successfully written
--   to the partner event bus.
putPartnerEventsResponse_entries :: Lens' PutPartnerEventsResponse (Maybe [PutPartnerEventsResultEntry])

-- | The response's http status code.
putPartnerEventsResponse_httpStatus :: Lens' PutPartnerEventsResponse Int

-- | The name of the connection to retrieve.
describeConnection_name :: Lens' DescribeConnection Text

-- | A time stamp for the time that the connection was created.
describeConnectionResponse_creationTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
describeConnectionResponse_lastModifiedTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | The name of the connection retrieved.
describeConnectionResponse_name :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The parameters to use for authorization for the connection.
describeConnectionResponse_authParameters :: Lens' DescribeConnectionResponse (Maybe ConnectionAuthResponseParameters)

-- | A time stamp for the time that the connection was last authorized.
describeConnectionResponse_lastAuthorizedTime :: Lens' DescribeConnectionResponse (Maybe UTCTime)

-- | The type of authorization specified for the connection.
describeConnectionResponse_authorizationType :: Lens' DescribeConnectionResponse (Maybe ConnectionAuthorizationType)

-- | The ARN of the connection retrieved.
describeConnectionResponse_connectionArn :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The reason that the connection is in the current connection state.
describeConnectionResponse_stateReason :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The ARN of the secret created from the authorization parameters
--   specified for the connection.
describeConnectionResponse_secretArn :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The description for the connection retrieved.
describeConnectionResponse_description :: Lens' DescribeConnectionResponse (Maybe Text)

-- | The state of the connection retrieved.
describeConnectionResponse_connectionState :: Lens' DescribeConnectionResponse (Maybe ConnectionState)

-- | The response's http status code.
describeConnectionResponse_httpStatus :: Lens' DescribeConnectionResponse Int

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
describeRule_eventBusName :: Lens' DescribeRule (Maybe Text)

-- | The name of the rule.
describeRule_name :: Lens' DescribeRule Text

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
describeRuleResponse_eventPattern :: Lens' DescribeRuleResponse (Maybe Text)

-- | Specifies whether the rule is enabled or disabled.
describeRuleResponse_state :: Lens' DescribeRuleResponse (Maybe RuleState)

-- | The Amazon Resource Name (ARN) of the rule.
describeRuleResponse_arn :: Lens' DescribeRuleResponse (Maybe Text)

-- | The account ID of the user that created the rule. If you use
--   <tt>PutRule</tt> to put a rule on an event bus in another account, the
--   other account is the owner of the rule, and the rule ARN includes the
--   account ID for that account. However, the value for <tt>CreatedBy</tt>
--   is the account ID as the account that created the rule in the other
--   account.
describeRuleResponse_createdBy :: Lens' DescribeRuleResponse (Maybe Text)

-- | The name of the event bus associated with the rule.
describeRuleResponse_eventBusName :: Lens' DescribeRuleResponse (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)".
describeRuleResponse_scheduleExpression :: Lens' DescribeRuleResponse (Maybe Text)

-- | The name of the rule.
describeRuleResponse_name :: Lens' DescribeRuleResponse (Maybe Text)

-- | The description of the rule.
describeRuleResponse_description :: Lens' DescribeRuleResponse (Maybe Text)

-- | If this is a managed rule, created by an Amazon Web Services service
--   on your behalf, this field displays the principal name of the Amazon
--   Web Services service that created the rule.
describeRuleResponse_managedBy :: Lens' DescribeRuleResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   rule.
describeRuleResponse_roleArn :: Lens' DescribeRuleResponse (Maybe Text)

-- | The response's http status code.
describeRuleResponse_httpStatus :: Lens' DescribeRuleResponse Int

-- | The ARN of the event source associated with the archive.
listArchives_eventSourceArn :: Lens' ListArchives (Maybe Text)

-- | The state of the archive.
listArchives_state :: Lens' ListArchives (Maybe ArchiveState)

-- | The token returned by a previous call to retrieve the next set of
--   results.
listArchives_nextToken :: Lens' ListArchives (Maybe Text)

-- | A name prefix to filter the archives returned. Only archives with name
--   that match the prefix are returned.
listArchives_namePrefix :: Lens' ListArchives (Maybe Text)

-- | The maximum number of results to return.
listArchives_limit :: Lens' ListArchives (Maybe Natural)

-- | An array of <tt>Archive</tt> objects that include details about an
--   archive.
listArchivesResponse_archives :: Lens' ListArchivesResponse (Maybe [Archive])

-- | The token returned by a previous call to retrieve the next set of
--   results.
listArchivesResponse_nextToken :: Lens' ListArchivesResponse (Maybe Text)

-- | The response's http status code.
listArchivesResponse_httpStatus :: Lens' ListArchivesResponse Int

-- | A description for the replay to start.
startReplay_description :: Lens' StartReplay (Maybe Text)

-- | The name of the replay to start.
startReplay_replayName :: Lens' StartReplay Text

-- | The ARN of the archive to replay events from.
startReplay_eventSourceArn :: Lens' StartReplay Text

-- | A time stamp for the time to start replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
startReplay_eventStartTime :: Lens' StartReplay UTCTime

-- | A time stamp for the time to stop replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
startReplay_eventEndTime :: Lens' StartReplay UTCTime

-- | A <tt>ReplayDestination</tt> object that includes details about the
--   destination for the replay.
startReplay_destination :: Lens' StartReplay ReplayDestination

-- | The state of the replay.
startReplayResponse_state :: Lens' StartReplayResponse (Maybe ReplayState)

-- | The time at which the replay started.
startReplayResponse_replayStartTime :: Lens' StartReplayResponse (Maybe UTCTime)

-- | The ARN of the replay.
startReplayResponse_replayArn :: Lens' StartReplayResponse (Maybe Text)

-- | The reason that the replay is in the state.
startReplayResponse_stateReason :: Lens' StartReplayResponse (Maybe Text)

-- | The response's http status code.
startReplayResponse_httpStatus :: Lens' StartReplayResponse Int

-- | The name of the event source to delete.
deletePartnerEventSource_name :: Lens' DeletePartnerEventSource Text

-- | The Amazon Web Services account ID of the Amazon Web Services customer
--   that the event source was created for.
deletePartnerEventSource_account :: Lens' DeletePartnerEventSource Text

-- | The name of the replay to retrieve.
describeReplay_replayName :: Lens' DescribeReplay Text

-- | The ARN of the archive events were replayed from.
describeReplayResponse_eventSourceArn :: Lens' DescribeReplayResponse (Maybe Text)

-- | A <tt>ReplayDestination</tt> object that contains details about the
--   replay.
describeReplayResponse_destination :: Lens' DescribeReplayResponse (Maybe ReplayDestination)

-- | The current state of the replay.
describeReplayResponse_state :: Lens' DescribeReplayResponse (Maybe ReplayState)

-- | The time stamp for the last event that was replayed from the archive.
describeReplayResponse_eventEndTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | A time stamp for the time that the replay started.
describeReplayResponse_replayStartTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The ARN of the replay.
describeReplayResponse_replayArn :: Lens' DescribeReplayResponse (Maybe Text)

-- | A time stamp for the time that the replay stopped.
describeReplayResponse_replayEndTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The time that the event was last replayed.
describeReplayResponse_eventLastReplayedTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The time stamp of the first event that was last replayed from the
--   archive.
describeReplayResponse_eventStartTime :: Lens' DescribeReplayResponse (Maybe UTCTime)

-- | The name of the replay.
describeReplayResponse_replayName :: Lens' DescribeReplayResponse (Maybe Text)

-- | The reason that the replay is in the current state.
describeReplayResponse_stateReason :: Lens' DescribeReplayResponse (Maybe Text)

-- | The description of the replay.
describeReplayResponse_description :: Lens' DescribeReplayResponse (Maybe Text)

-- | The response's http status code.
describeReplayResponse_httpStatus :: Lens' DescribeReplayResponse Int

-- | The name of the API destination to retrieve.
describeApiDestination_name :: Lens' DescribeApiDestination Text

-- | A time stamp for the time that the API destination was created.
describeApiDestinationResponse_creationTime :: Lens' DescribeApiDestinationResponse (Maybe UTCTime)

-- | The method to use to connect to the HTTP endpoint.
describeApiDestinationResponse_httpMethod :: Lens' DescribeApiDestinationResponse (Maybe ApiDestinationHttpMethod)

-- | The URL to use to connect to the HTTP endpoint.
describeApiDestinationResponse_invocationEndpoint :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | A time stamp for the time that the API destination was last modified.
describeApiDestinationResponse_lastModifiedTime :: Lens' DescribeApiDestinationResponse (Maybe UTCTime)

-- | The name of the API destination retrieved.
describeApiDestinationResponse_name :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The maximum number of invocations per second to specified for the API
--   destination. Note that if you set the invocation rate maximum to a
--   value lower the rate necessary to send all events received on to the
--   destination HTTP endpoint, some events may not be delivered within the
--   24-hour retry window. If you plan to set the rate lower than the rate
--   necessary to deliver all events, consider using a dead-letter queue to
--   catch events that are not delivered within 24 hours.
describeApiDestinationResponse_invocationRateLimitPerSecond :: Lens' DescribeApiDestinationResponse (Maybe Natural)

-- | The state of the API destination retrieved.
describeApiDestinationResponse_apiDestinationState :: Lens' DescribeApiDestinationResponse (Maybe ApiDestinationState)

-- | The ARN of the connection specified for the API destination retrieved.
describeApiDestinationResponse_connectionArn :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The description for the API destination retrieved.
describeApiDestinationResponse_description :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The ARN of the API destination retrieved.
describeApiDestinationResponse_apiDestinationArn :: Lens' DescribeApiDestinationResponse (Maybe Text)

-- | The response's http status code.
describeApiDestinationResponse_httpStatus :: Lens' DescribeApiDestinationResponse Int

-- | The token returned by a previous call to retrieve the next set of
--   results.
listEventBuses_nextToken :: Lens' ListEventBuses (Maybe Text)

-- | Specifying this limits the results to only those event buses with
--   names that start with the specified prefix.
listEventBuses_namePrefix :: Lens' ListEventBuses (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listEventBuses_limit :: Lens' ListEventBuses (Maybe Natural)

-- | This list of event buses.
listEventBusesResponse_eventBuses :: Lens' ListEventBusesResponse (Maybe [EventBus])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listEventBusesResponse_nextToken :: Lens' ListEventBusesResponse (Maybe Text)

-- | The response's http status code.
listEventBusesResponse_httpStatus :: Lens' ListEventBusesResponse Int

-- | If you are creating a partner event bus, this specifies the partner
--   event source that the new event bus will be matched with.
createEventBus_eventSourceName :: Lens' CreateEventBus (Maybe Text)

-- | Tags to associate with the event bus.
createEventBus_tags :: Lens' CreateEventBus (Maybe [Tag])

-- | The name of the new event bus.
--   
--   Event bus names cannot contain the / character. You can't use the name
--   <tt>default</tt> for a custom event bus, as this name is already used
--   for your account's default event bus.
--   
--   If this is a partner event bus, the name must exactly match the name
--   of the partner event source that this event bus is matched to.
createEventBus_name :: Lens' CreateEventBus Text

-- | The ARN of the new event bus.
createEventBusResponse_eventBusArn :: Lens' CreateEventBusResponse (Maybe Text)

-- | The response's http status code.
createEventBusResponse_httpStatus :: Lens' CreateEventBusResponse Int

-- | The name of the partner event source to display the details of.
describeEventSource_name :: Lens' DescribeEventSource Text

-- | The date and time that the event source was created.
describeEventSourceResponse_creationTime :: Lens' DescribeEventSourceResponse (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
describeEventSourceResponse_state :: Lens' DescribeEventSourceResponse (Maybe EventSourceState)

-- | The ARN of the partner event source.
describeEventSourceResponse_arn :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The name of the SaaS partner that created the event source.
describeEventSourceResponse_createdBy :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The name of the partner event source.
describeEventSourceResponse_name :: Lens' DescribeEventSourceResponse (Maybe Text)

-- | The date and time that the event source will expire if you do not
--   create a matching event bus.
describeEventSourceResponse_expirationTime :: Lens' DescribeEventSourceResponse (Maybe UTCTime)

-- | The response's http status code.
describeEventSourceResponse_httpStatus :: Lens' DescribeEventSourceResponse Int

-- | The name of the archive to retrieve.
describeArchive_archiveName :: Lens' DescribeArchive Text

-- | The time at which the archive was created.
describeArchiveResponse_creationTime :: Lens' DescribeArchiveResponse (Maybe UTCTime)

-- | The size of the archive in bytes.
describeArchiveResponse_sizeBytes :: Lens' DescribeArchiveResponse (Maybe Integer)

-- | The ARN of the event source associated with the archive.
describeArchiveResponse_eventSourceArn :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The event pattern used to filter events sent to the archive.
describeArchiveResponse_eventPattern :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The state of the archive.
describeArchiveResponse_state :: Lens' DescribeArchiveResponse (Maybe ArchiveState)

-- | The number of events in the archive.
describeArchiveResponse_eventCount :: Lens' DescribeArchiveResponse (Maybe Integer)

-- | The name of the archive.
describeArchiveResponse_archiveName :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The number of days to retain events for in the archive.
describeArchiveResponse_retentionDays :: Lens' DescribeArchiveResponse (Maybe Natural)

-- | The ARN of the archive.
describeArchiveResponse_archiveArn :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The reason that the archive is in the state.
describeArchiveResponse_stateReason :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The description of the archive.
describeArchiveResponse_description :: Lens' DescribeArchiveResponse (Maybe Text)

-- | The response's http status code.
describeArchiveResponse_httpStatus :: Lens' DescribeArchiveResponse Int

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
enableRule_eventBusName :: Lens' EnableRule (Maybe Text)

-- | The name of the rule.
enableRule_name :: Lens' EnableRule Text

-- | The token returned by a previous call to retrieve the next set of
--   results.
listRuleNamesByTarget_nextToken :: Lens' ListRuleNamesByTarget (Maybe Text)

-- | The name or ARN of the event bus to list rules for. If you omit this,
--   the default event bus is used.
listRuleNamesByTarget_eventBusName :: Lens' ListRuleNamesByTarget (Maybe Text)

-- | The maximum number of results to return.
listRuleNamesByTarget_limit :: Lens' ListRuleNamesByTarget (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the target resource.
listRuleNamesByTarget_targetArn :: Lens' ListRuleNamesByTarget Text

-- | The names of the rules that can invoke the given target.
listRuleNamesByTargetResponse_ruleNames :: Lens' ListRuleNamesByTargetResponse (Maybe [Text])

-- | Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
listRuleNamesByTargetResponse_nextToken :: Lens' ListRuleNamesByTargetResponse (Maybe Text)

-- | The response's http status code.
listRuleNamesByTargetResponse_httpStatus :: Lens' ListRuleNamesByTargetResponse Int

-- | The event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
testEventPattern_eventPattern :: Lens' TestEventPattern Text

-- | The event, in JSON format, to test against the event pattern. The JSON
--   must follow the format specified in <a>Amazon Web Services Events</a>,
--   and the following fields are mandatory:
--   
--   <ul>
--   <li><pre>id</pre></li>
--   <li><pre>account</pre></li>
--   <li><pre>source</pre></li>
--   <li><pre>time</pre></li>
--   <li><pre>region</pre></li>
--   <li><pre>resources</pre></li>
--   <li><pre>detail-type</pre></li>
--   </ul>
testEventPattern_event :: Lens' TestEventPattern Text

-- | Indicates whether the event matches the event pattern.
testEventPatternResponse_result :: Lens' TestEventPatternResponse (Maybe Bool)

-- | The response's http status code.
testEventPatternResponse_httpStatus :: Lens' TestEventPatternResponse Int

-- | The name of the event source to display.
describePartnerEventSource_name :: Lens' DescribePartnerEventSource Text

-- | The ARN of the event source.
describePartnerEventSourceResponse_arn :: Lens' DescribePartnerEventSourceResponse (Maybe Text)

-- | The name of the event source.
describePartnerEventSourceResponse_name :: Lens' DescribePartnerEventSourceResponse (Maybe Text)

-- | The response's http status code.
describePartnerEventSourceResponse_httpStatus :: Lens' DescribePartnerEventSourceResponse Int

-- | The name or ARN of the event bus to show details for. If you omit
--   this, the default event bus is displayed.
describeEventBus_name :: Lens' DescribeEventBus (Maybe Text)

-- | The Amazon Resource Name (ARN) of the account permitted to write
--   events to the current account.
describeEventBusResponse_arn :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The name of the event bus. Currently, this is always <tt>default</tt>.
describeEventBusResponse_name :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The policy that enables the external account to send events to your
--   account.
describeEventBusResponse_policy :: Lens' DescribeEventBusResponse (Maybe Text)

-- | The response's http status code.
describeEventBusResponse_httpStatus :: Lens' DescribeEventBusResponse Int

-- | The token returned by a previous call to retrieve the next set of
--   results.
listEventSources_nextToken :: Lens' ListEventSources (Maybe Text)

-- | Specifying this limits the results to only those partner event sources
--   with names that start with the specified prefix.
listEventSources_namePrefix :: Lens' ListEventSources (Maybe Text)

-- | Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listEventSources_limit :: Lens' ListEventSources (Maybe Natural)

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listEventSourcesResponse_nextToken :: Lens' ListEventSourcesResponse (Maybe Text)

-- | The list of event sources.
listEventSourcesResponse_eventSources :: Lens' ListEventSourcesResponse (Maybe [EventSource])

-- | The response's http status code.
listEventSourcesResponse_httpStatus :: Lens' ListEventSourcesResponse Int

-- | The ARN of the EventBridge resource that you're adding tags to.
tagResource_resourceARN :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The name of the partner event source. This name must be unique and
--   must be in the format <tt> partner_name/event_namespace/event_name
--   </tt>. The Amazon Web Services account that wants to use this partner
--   event source must create a partner event bus with a name that matches
--   the name of the partner event source.
createPartnerEventSource_name :: Lens' CreatePartnerEventSource Text

-- | The Amazon Web Services account ID that is permitted to create a
--   matching partner event bus for this partner event source.
createPartnerEventSource_account :: Lens' CreatePartnerEventSource Text

-- | The ARN of the partner event source.
createPartnerEventSourceResponse_eventSourceArn :: Lens' CreatePartnerEventSourceResponse (Maybe Text)

-- | The response's http status code.
createPartnerEventSourceResponse_httpStatus :: Lens' CreatePartnerEventSourceResponse Int

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
putTargets_eventBusName :: Lens' PutTargets (Maybe Text)

-- | The name of the rule.
putTargets_rule :: Lens' PutTargets Text

-- | The targets to update or add to the rule.
putTargets_targets :: Lens' PutTargets (NonEmpty Target)

-- | The number of failed entries.
putTargetsResponse_failedEntryCount :: Lens' PutTargetsResponse (Maybe Int)

-- | The failed target entries.
putTargetsResponse_failedEntries :: Lens' PutTargetsResponse (Maybe [PutTargetsResultEntry])

-- | The response's http status code.
putTargetsResponse_httpStatus :: Lens' PutTargetsResponse Int

-- | The event pattern to use to filter events sent to the archive.
updateArchive_eventPattern :: Lens' UpdateArchive (Maybe Text)

-- | The number of days to retain events in the archive.
updateArchive_retentionDays :: Lens' UpdateArchive (Maybe Natural)

-- | The description for the archive.
updateArchive_description :: Lens' UpdateArchive (Maybe Text)

-- | The name of the archive to update.
updateArchive_archiveName :: Lens' UpdateArchive Text

-- | The time at which the archive was updated.
updateArchiveResponse_creationTime :: Lens' UpdateArchiveResponse (Maybe UTCTime)

-- | The state of the archive.
updateArchiveResponse_state :: Lens' UpdateArchiveResponse (Maybe ArchiveState)

-- | The ARN of the archive.
updateArchiveResponse_archiveArn :: Lens' UpdateArchiveResponse (Maybe Text)

-- | The reason that the archive is in the current state.
updateArchiveResponse_stateReason :: Lens' UpdateArchiveResponse (Maybe Text)

-- | The response's http status code.
updateArchiveResponse_httpStatus :: Lens' UpdateArchiveResponse Int

-- | The name of the archive to delete.
deleteArchive_archiveName :: Lens' DeleteArchive Text

-- | The response's http status code.
deleteArchiveResponse_httpStatus :: Lens' DeleteArchiveResponse Int

-- | The ARN of the EventBridge resource from which you are removing tags.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The entry that defines an event in your system. You can specify
--   several parameters for the entry such as the source and type of the
--   event, resources associated with the event, and so on.
putEvents_entries :: Lens' PutEvents (NonEmpty PutEventsRequestEntry)

-- | The number of failed entries.
putEventsResponse_failedEntryCount :: Lens' PutEventsResponse (Maybe Int)

-- | The successfully and unsuccessfully ingested events results. If the
--   ingestion was successful, the entry has the event ID in it. Otherwise,
--   you can use the error code and error message to identify the problem
--   with the entry.
putEventsResponse_entries :: Lens' PutEventsResponse (Maybe [PutEventsResultEntry])

-- | The response's http status code.
putEventsResponse_httpStatus :: Lens' PutEventsResponse Int

-- | The token returned by a previous call to this operation. Specifying
--   this retrieves the next set of results.
listPartnerEventSources_nextToken :: Lens' ListPartnerEventSources (Maybe Text)

-- | pecifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
listPartnerEventSources_limit :: Lens' ListPartnerEventSources (Maybe Natural)

-- | If you specify this, the results are limited to only those partner
--   event sources that start with the string you specify.
listPartnerEventSources_namePrefix :: Lens' ListPartnerEventSources Text

-- | The list of partner event sources returned by the operation.
listPartnerEventSourcesResponse_partnerEventSources :: Lens' ListPartnerEventSourcesResponse (Maybe [PartnerEventSource])

-- | A token you can use in a subsequent operation to retrieve the next set
--   of results.
listPartnerEventSourcesResponse_nextToken :: Lens' ListPartnerEventSourcesResponse (Maybe Text)

-- | The response's http status code.
listPartnerEventSourcesResponse_httpStatus :: Lens' ListPartnerEventSourcesResponse Int

-- | An event pattern to use to filter events sent to the archive.
createArchive_eventPattern :: Lens' CreateArchive (Maybe Text)

-- | The number of days to retain events for. Default value is 0. If set to
--   0, events are retained indefinitely
createArchive_retentionDays :: Lens' CreateArchive (Maybe Natural)

-- | A description for the archive.
createArchive_description :: Lens' CreateArchive (Maybe Text)

-- | The name for the archive to create.
createArchive_archiveName :: Lens' CreateArchive Text

-- | The ARN of the event bus that sends events to the archive.
createArchive_eventSourceArn :: Lens' CreateArchive Text

-- | The time at which the archive was created.
createArchiveResponse_creationTime :: Lens' CreateArchiveResponse (Maybe UTCTime)

-- | The state of the archive that was created.
createArchiveResponse_state :: Lens' CreateArchiveResponse (Maybe ArchiveState)

-- | The ARN of the archive that was created.
createArchiveResponse_archiveArn :: Lens' CreateArchiveResponse (Maybe Text)

-- | The reason that the archive is in the state.
createArchiveResponse_stateReason :: Lens' CreateArchiveResponse (Maybe Text)

-- | The response's http status code.
createArchiveResponse_httpStatus :: Lens' CreateArchiveResponse Int

-- | The name of the partner event source to deactivate.
deactivateEventSource_name :: Lens' DeactivateEventSource Text

-- | The name of the event bus to delete.
deleteEventBus_name :: Lens' DeleteEventBus Text

-- | A time stamp for the time that the API destination was created.
apiDestination_creationTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The method to use to connect to the HTTP endpoint.
apiDestination_httpMethod :: Lens' ApiDestination (Maybe ApiDestinationHttpMethod)

-- | The URL to the endpoint for the API destination.
apiDestination_invocationEndpoint :: Lens' ApiDestination (Maybe Text)

-- | A time stamp for the time that the API destination was last modified.
apiDestination_lastModifiedTime :: Lens' ApiDestination (Maybe UTCTime)

-- | The name of the API destination.
apiDestination_name :: Lens' ApiDestination (Maybe Text)

-- | The maximum number of invocations per second to send to the HTTP
--   endpoint.
apiDestination_invocationRateLimitPerSecond :: Lens' ApiDestination (Maybe Natural)

-- | The state of the API destination.
apiDestination_apiDestinationState :: Lens' ApiDestination (Maybe ApiDestinationState)

-- | The ARN of the connection specified for the API destination.
apiDestination_connectionArn :: Lens' ApiDestination (Maybe Text)

-- | The ARN of the API destination.
apiDestination_apiDestinationArn :: Lens' ApiDestination (Maybe Text)

-- | The time stamp for the time that the archive was created.
archive_creationTime :: Lens' Archive (Maybe UTCTime)

-- | The size of the archive, in bytes.
archive_sizeBytes :: Lens' Archive (Maybe Integer)

-- | The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
archive_eventSourceArn :: Lens' Archive (Maybe Text)

-- | The current state of the archive.
archive_state :: Lens' Archive (Maybe ArchiveState)

-- | The number of events in the archive.
archive_eventCount :: Lens' Archive (Maybe Integer)

-- | The name of the archive.
archive_archiveName :: Lens' Archive (Maybe Text)

-- | The number of days to retain events in the archive before they are
--   deleted.
archive_retentionDays :: Lens' Archive (Maybe Natural)

-- | A description for the reason that the archive is in the current state.
archive_stateReason :: Lens' Archive (Maybe Text)

-- | Specifies the security groups associated with the task. These security
--   groups must all be in the same VPC. You can specify as many as five
--   security groups. If you do not specify a security group, the default
--   security group for the VPC is used.
awsVpcConfiguration_securityGroups :: Lens' AwsVpcConfiguration (Maybe [Text])

-- | Specifies whether the task's elastic network interface receives a
--   public IP address. You can specify <tt>ENABLED</tt> only when
--   <tt>LaunchType</tt> in <tt>EcsParameters</tt> is set to
--   <tt>FARGATE</tt>.
awsVpcConfiguration_assignPublicIp :: Lens' AwsVpcConfiguration (Maybe AssignPublicIp)

-- | Specifies the subnets associated with the task. These subnets must all
--   be in the same VPC. You can specify as many as 16 subnets.
awsVpcConfiguration_subnets :: Lens' AwsVpcConfiguration [Text]

-- | The size of the array, if this is an array batch job. Valid values are
--   integers between 2 and 10,000.
batchArrayProperties_size :: Lens' BatchArrayProperties (Maybe Int)

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. The retry strategy is the number of times to retry the failed job
--   execution. Valid values are 1–10. When you specify a retry strategy
--   here, it overrides the retry strategy defined in the job definition.
batchParameters_retryStrategy :: Lens' BatchParameters (Maybe BatchRetryStrategy)

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
batchParameters_arrayProperties :: Lens' BatchParameters (Maybe BatchArrayProperties)

-- | The ARN or name of the job definition to use if the event target is an
--   Batch job. This job definition must already exist.
batchParameters_jobDefinition :: Lens' BatchParameters Text

-- | The name to use for this execution of the job, if the target is an
--   Batch job.
batchParameters_jobName :: Lens' BatchParameters Text

-- | The number of times to attempt to retry, if the job fails. Valid
--   values are 1–10.
batchRetryStrategy_attempts :: Lens' BatchRetryStrategy (Maybe Int)

-- | The base value designates how many tasks, at a minimum, to run on the
--   specified capacity provider. Only one capacity provider in a capacity
--   provider strategy can have a base defined. If no value is specified,
--   the default value of 0 is used.
capacityProviderStrategyItem_base :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The weight value designates the relative percentage of the total
--   number of tasks launched that should use the specified capacity
--   provider. The weight value is taken into consideration after the base
--   value, if defined, is satisfied.
capacityProviderStrategyItem_weight :: Lens' CapacityProviderStrategyItem (Maybe Natural)

-- | The short name of the capacity provider.
capacityProviderStrategyItem_capacityProvider :: Lens' CapacityProviderStrategyItem Text

-- | Specifies the type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
condition_type :: Lens' Condition Text

-- | Specifies the key for the condition. Currently the only supported key
--   is <tt>aws:PrincipalOrgID</tt>.
condition_key :: Lens' Condition Text

-- | Specifies the value for the key. Currently, this must be the ID of the
--   organization.
condition_value :: Lens' Condition Text

-- | A time stamp for the time that the connection was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | A time stamp for the time that the connection was last modified.
connection_lastModifiedTime :: Lens' Connection (Maybe UTCTime)

-- | The name of the connection.
connection_name :: Lens' Connection (Maybe Text)

-- | A time stamp for the time that the connection was last authorized.
connection_lastAuthorizedTime :: Lens' Connection (Maybe UTCTime)

-- | The authorization type specified for the connection.
connection_authorizationType :: Lens' Connection (Maybe ConnectionAuthorizationType)

-- | The ARN of the connection.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | The reason that the connection is in the connection state.
connection_stateReason :: Lens' Connection (Maybe Text)

-- | The state of the connection.
connection_connectionState :: Lens' Connection (Maybe ConnectionState)

-- | The name of the header to use for the <tt>APIKeyValue</tt> used for
--   authorization.
connectionApiKeyAuthResponseParameters_apiKeyName :: Lens' ConnectionApiKeyAuthResponseParameters (Maybe Text)

-- | The OAuth parameters to use for authorization.
connectionAuthResponseParameters_oAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionOAuthResponseParameters)

-- | Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
connectionAuthResponseParameters_invocationHttpParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The API Key parameters to use for authorization.
connectionAuthResponseParameters_apiKeyAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionApiKeyAuthResponseParameters)

-- | The authorization parameters for Basic authorization.
connectionAuthResponseParameters_basicAuthParameters :: Lens' ConnectionAuthResponseParameters (Maybe ConnectionBasicAuthResponseParameters)

-- | The user name to use for Basic authorization.
connectionBasicAuthResponseParameters_username :: Lens' ConnectionBasicAuthResponseParameters (Maybe Text)

-- | Specified whether the value is secret.
connectionBodyParameter_isValueSecret :: Lens' ConnectionBodyParameter (Maybe Bool)

-- | The value associated with the key.
connectionBodyParameter_value :: Lens' ConnectionBodyParameter (Maybe Text)

-- | The key for the parameter.
connectionBodyParameter_key :: Lens' ConnectionBodyParameter (Maybe Text)

-- | Specified whether the value is a secret.
connectionHeaderParameter_isValueSecret :: Lens' ConnectionHeaderParameter (Maybe Bool)

-- | The value associated with the key.
connectionHeaderParameter_value :: Lens' ConnectionHeaderParameter (Maybe Text)

-- | The key for the parameter.
connectionHeaderParameter_key :: Lens' ConnectionHeaderParameter (Maybe Text)

-- | Contains additional query string parameters for the connection.
connectionHttpParameters_queryStringParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionQueryStringParameter])

-- | Contains additional header parameters for the connection.
connectionHttpParameters_headerParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionHeaderParameter])

-- | Contains additional body string parameters for the connection.
connectionHttpParameters_bodyParameters :: Lens' ConnectionHttpParameters (Maybe [ConnectionBodyParameter])

-- | The client ID associated with the response to the connection request.
connectionOAuthClientResponseParameters_clientID :: Lens' ConnectionOAuthClientResponseParameters (Maybe Text)

-- | The method used to connect to the HTTP endpoint.
connectionOAuthResponseParameters_httpMethod :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>ConnectionOAuthClientResponseParameters</tt> object that
--   contains details about the client parameters returned when OAuth is
--   specified as the authorization type.
connectionOAuthResponseParameters_clientParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionOAuthClientResponseParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
connectionOAuthResponseParameters_oAuthHttpParameters :: Lens' ConnectionOAuthResponseParameters (Maybe ConnectionHttpParameters)

-- | The URL to the HTTP endpoint that authorized the request.
connectionOAuthResponseParameters_authorizationEndpoint :: Lens' ConnectionOAuthResponseParameters (Maybe Text)

-- | Specifies whether the value is secret.
connectionQueryStringParameter_isValueSecret :: Lens' ConnectionQueryStringParameter (Maybe Bool)

-- | The value associated with the key for the query string parameter.
connectionQueryStringParameter_value :: Lens' ConnectionQueryStringParameter (Maybe Text)

-- | The key for a query string parameter.
connectionQueryStringParameter_key :: Lens' ConnectionQueryStringParameter (Maybe Text)

-- | The name of the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' CreateConnectionApiKeyAuthRequestParameters Text

-- | The value for the API key to use for authorization.
createConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' CreateConnectionApiKeyAuthRequestParameters Text

-- | A <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
createConnectionAuthRequestParameters_oAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
createConnectionAuthRequestParameters_invocationHttpParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
createConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionApiKeyAuthRequestParameters)

-- | A <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
createConnectionAuthRequestParameters_basicAuthParameters :: Lens' CreateConnectionAuthRequestParameters (Maybe CreateConnectionBasicAuthRequestParameters)

-- | The user name to use for Basic authorization.
createConnectionBasicAuthRequestParameters_username :: Lens' CreateConnectionBasicAuthRequestParameters Text

-- | The password associated with the user name to use for Basic
--   authorization.
createConnectionBasicAuthRequestParameters_password :: Lens' CreateConnectionBasicAuthRequestParameters Text

-- | The client ID to use for OAuth authorization for the connection.
createConnectionOAuthClientRequestParameters_clientID :: Lens' CreateConnectionOAuthClientRequestParameters Text

-- | The client secret associated with the client ID to use for OAuth
--   authorization for the connection.
createConnectionOAuthClientRequestParameters_clientSecret :: Lens' CreateConnectionOAuthClientRequestParameters Text

-- | A <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
createConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' CreateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
createConnectionOAuthRequestParameters_clientParameters :: Lens' CreateConnectionOAuthRequestParameters CreateConnectionOAuthClientRequestParameters

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
createConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' CreateConnectionOAuthRequestParameters Text

-- | The method to use for the authorization request.
createConnectionOAuthRequestParameters_httpMethod :: Lens' CreateConnectionOAuthRequestParameters ConnectionOAuthHttpMethod

-- | The ARN of the SQS queue specified as the target for the dead-letter
--   queue.
deadLetterConfig_arn :: Lens' DeadLetterConfig (Maybe Text)

-- | Specifies an ECS task group for the task. The maximum length is 255
--   characters.
ecsParameters_group :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to propagate the tags from the task definition to
--   the task. If no value is specified, the tags are not propagated. Tags
--   can only be propagated to the task during task creation. To add tags
--   to a task after task creation, use the TagResource API action.
ecsParameters_propagateTags :: Lens' EcsParameters (Maybe PropagateTags)

-- | Specifies the platform version for the task. Specify only the numeric
--   portion of the platform version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
ecsParameters_platformVersion :: Lens' EcsParameters (Maybe Text)

-- | Specifies whether to enable Amazon ECS managed tags for the task. For
--   more information, see <a>Tagging Your Amazon ECS Resources</a> in the
--   Amazon Elastic Container Service Developer Guide.
ecsParameters_enableECSManagedTags :: Lens' EcsParameters (Maybe Bool)

-- | The reference ID to use for the task.
ecsParameters_referenceId :: Lens' EcsParameters (Maybe Text)

-- | An array of placement constraint objects to use for the task. You can
--   specify up to 10 constraints per task (including constraints in the
--   task definition and those specified at runtime).
ecsParameters_placementConstraints :: Lens' EcsParameters (Maybe [PlacementConstraint])

-- | The placement strategy objects to use for the task. You can specify a
--   maximum of five strategy rules per task.
ecsParameters_placementStrategy :: Lens' EcsParameters (Maybe [PlacementStrategy])

-- | Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
ecsParameters_launchType :: Lens' EcsParameters (Maybe LaunchType)

-- | The capacity provider strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
ecsParameters_capacityProviderStrategy :: Lens' EcsParameters (Maybe [CapacityProviderStrategyItem])

-- | The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
ecsParameters_taskCount :: Lens' EcsParameters (Maybe Natural)

-- | Use this structure if the Amazon ECS task uses the <tt>awsvpc</tt>
--   network mode. This structure specifies the VPC subnets and security
--   groups associated with the task, and whether a public IP address is to
--   be used. This structure is required if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt> because the <tt>awsvpc</tt> mode is required for
--   Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
ecsParameters_networkConfiguration :: Lens' EcsParameters (Maybe NetworkConfiguration)

-- | The metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
ecsParameters_tags :: Lens' EcsParameters (Maybe [Tag])

-- | Whether or not to enable the execute command functionality for the
--   containers in this task. If true, this enables execute command
--   functionality on all containers in the task.
ecsParameters_enableExecuteCommand :: Lens' EcsParameters (Maybe Bool)

-- | The ARN of the task definition to use if the event target is an Amazon
--   ECS task.
ecsParameters_taskDefinitionArn :: Lens' EcsParameters Text

-- | The ARN of the event bus.
eventBus_arn :: Lens' EventBus (Maybe Text)

-- | The name of the event bus.
eventBus_name :: Lens' EventBus (Maybe Text)

-- | The permissions policy of the event bus, describing which other Amazon
--   Web Services accounts can write events to this event bus.
eventBus_policy :: Lens' EventBus (Maybe Text)

-- | The date and time the event source was created.
eventSource_creationTime :: Lens' EventSource (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
eventSource_state :: Lens' EventSource (Maybe EventSourceState)

-- | The ARN of the event source.
eventSource_arn :: Lens' EventSource (Maybe Text)

-- | The name of the partner that created the event source.
eventSource_createdBy :: Lens' EventSource (Maybe Text)

-- | The name of the event source.
eventSource_name :: Lens' EventSource (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
eventSource_expirationTime :: Lens' EventSource (Maybe UTCTime)

-- | The path parameter values to be used to populate API Gateway REST API
--   or EventBridge ApiDestination path wildcards ("*").
httpParameters_pathParameterValues :: Lens' HttpParameters (Maybe [Text])

-- | The query string keys/values that need to be sent as part of request
--   invoking the API Gateway REST API or EventBridge ApiDestination.
httpParameters_queryStringParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))

-- | The headers that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
httpParameters_headerParameters :: Lens' HttpParameters (Maybe (HashMap Text Text))

-- | Map of JSON paths to be extracted from the event. You can then insert
--   these in the template in <tt>InputTemplate</tt> to produce the output
--   you want to be sent to the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
inputTransformer_inputPathsMap :: Lens' InputTransformer (Maybe (HashMap Text Text))

-- | Input template where you specify placeholders that will be filled with
--   the values of the keys from <tt>InputPathsMap</tt> to customize the
--   data sent to the target. Enclose each <tt>InputPathsMaps</tt> value in
--   brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
inputTransformer_inputTemplate :: Lens' InputTransformer Text

-- | The JSON path to be extracted from the event and used as the partition
--   key. For more information, see <a>Amazon Kinesis Streams Key
--   Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.
kinesisParameters_partitionKeyPath :: Lens' KinesisParameters Text

-- | Use this structure to specify the VPC subnets and security groups for
--   the task, and whether a public IP address is to be used. This
--   structure is relevant only for ECS tasks that use the <tt>awsvpc</tt>
--   network mode.
networkConfiguration_awsvpcConfiguration :: Lens' NetworkConfiguration (Maybe AwsVpcConfiguration)

-- | The ARN of the partner event source.
partnerEventSource_arn :: Lens' PartnerEventSource (Maybe Text)

-- | The name of the partner event source.
partnerEventSource_name :: Lens' PartnerEventSource (Maybe Text)

-- | The date and time the event source was created.
partnerEventSourceAccount_creationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)

-- | The state of the event source. If it is ACTIVE, you have already
--   created a matching event bus for this event source, and that event bus
--   is active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
partnerEventSourceAccount_state :: Lens' PartnerEventSourceAccount (Maybe EventSourceState)

-- | The Amazon Web Services account ID that the partner event source was
--   offered to.
partnerEventSourceAccount_account :: Lens' PartnerEventSourceAccount (Maybe Text)

-- | The date and time that the event source will expire, if the Amazon Web
--   Services account doesn't create a matching event bus for it.
partnerEventSourceAccount_expirationTime :: Lens' PartnerEventSourceAccount (Maybe UTCTime)

-- | A cluster query language expression to apply to the constraint. You
--   cannot specify an expression if the constraint type is
--   <tt>distinctInstance</tt>. To learn more, see <a>Cluster Query
--   Language</a> in the Amazon Elastic Container Service Developer Guide.
placementConstraint_expression :: Lens' PlacementConstraint (Maybe Text)

-- | The type of constraint. Use distinctInstance to ensure that each task
--   in a particular group is running on a different container instance.
--   Use memberOf to restrict the selection to a group of valid candidates.
placementConstraint_type :: Lens' PlacementConstraint (Maybe PlacementConstraintType)

-- | The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
placementStrategy_field :: Lens' PlacementStrategy (Maybe Text)

-- | The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
placementStrategy_type :: Lens' PlacementStrategy (Maybe PlacementStrategyType)

-- | The time stamp of the event, per <a>RFC3339</a>. If no time stamp is
--   provided, the time stamp of the <a>PutEvents</a> call is used.
putEventsRequestEntry_time :: Lens' PutEventsRequestEntry (Maybe UTCTime)

-- | Free-form string used to decide what fields to expect in the event
--   detail.
putEventsRequestEntry_detailType :: Lens' PutEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putEventsRequestEntry_resources :: Lens' PutEventsRequestEntry (Maybe [Text])

-- | The name or ARN of the event bus to receive the event. Only the rules
--   that are associated with this event bus are used to match the event.
--   If you omit this, the default event bus is used.
putEventsRequestEntry_eventBusName :: Lens' PutEventsRequestEntry (Maybe Text)

-- | The source of the event.
putEventsRequestEntry_source :: Lens' PutEventsRequestEntry (Maybe Text)

-- | An X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that
--   contains the trace-id associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
putEventsRequestEntry_traceHeader :: Lens' PutEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putEventsRequestEntry_detail :: Lens' PutEventsRequestEntry (Maybe Text)

-- | The error code that indicates why the event submission failed.
putEventsResultEntry_errorCode :: Lens' PutEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putEventsResultEntry_errorMessage :: Lens' PutEventsResultEntry (Maybe Text)

-- | The ID of the event.
putEventsResultEntry_eventId :: Lens' PutEventsResultEntry (Maybe Text)

-- | The date and time of the event.
putPartnerEventsRequestEntry_time :: Lens' PutPartnerEventsRequestEntry (Maybe UTCTime)

-- | A free-form string used to decide what fields to expect in the event
--   detail.
putPartnerEventsRequestEntry_detailType :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | Amazon Web Services resources, identified by Amazon Resource Name
--   (ARN), which the event primarily concerns. Any number, including zero,
--   may be present.
putPartnerEventsRequestEntry_resources :: Lens' PutPartnerEventsRequestEntry (Maybe [Text])

-- | The event source that is generating the entry.
putPartnerEventsRequestEntry_source :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | A valid JSON string. There is no other schema imposed. The JSON string
--   may contain fields and nested subobjects.
putPartnerEventsRequestEntry_detail :: Lens' PutPartnerEventsRequestEntry (Maybe Text)

-- | The error code that indicates why the event submission failed.
putPartnerEventsResultEntry_errorCode :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The error message that explains why the event submission failed.
putPartnerEventsResultEntry_errorMessage :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The ID of the event.
putPartnerEventsResultEntry_eventId :: Lens' PutPartnerEventsResultEntry (Maybe Text)

-- | The ID of the target.
putTargetsResultEntry_targetId :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target addition failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
putTargetsResultEntry_errorCode :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target addition failed.
putTargetsResultEntry_errorMessage :: Lens' PutTargetsResultEntry (Maybe Text)

-- | The database user name. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_dbUser :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name or ARN of the secret that enables access to the database.
--   Required when authenticating using Amazon Web Services Secrets
--   Manager.
redshiftDataParameters_secretManagerArn :: Lens' RedshiftDataParameters (Maybe Text)

-- | The name of the SQL statement. You can name the SQL statement when you
--   create it to identify the query.
redshiftDataParameters_statementName :: Lens' RedshiftDataParameters (Maybe Text)

-- | Indicates whether to send an event back to EventBridge after the SQL
--   statement runs.
redshiftDataParameters_withEvent :: Lens' RedshiftDataParameters (Maybe Bool)

-- | The name of the database. Required when authenticating using temporary
--   credentials.
redshiftDataParameters_database :: Lens' RedshiftDataParameters Text

-- | The SQL statement text to run.
redshiftDataParameters_sql :: Lens' RedshiftDataParameters Text

-- | The ID of the target.
removeTargetsResultEntry_targetId :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error code that indicates why the target removal failed. If the
--   value is <tt>ConcurrentModificationException</tt>, too many requests
--   were made at the same time.
removeTargetsResultEntry_errorCode :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The error message that explains why the target removal failed.
removeTargetsResultEntry_errorMessage :: Lens' RemoveTargetsResultEntry (Maybe Text)

-- | The ARN of the archive to replay event from.
replay_eventSourceArn :: Lens' Replay (Maybe Text)

-- | The current state of the replay.
replay_state :: Lens' Replay (Maybe ReplayState)

-- | A time stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
replay_eventEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay started.
replay_replayStartTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the replay completed.
replay_replayEndTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time that the last event was replayed.
replay_eventLastReplayedTime :: Lens' Replay (Maybe UTCTime)

-- | A time stamp for the time to start replaying events. This is
--   determined by the time in the event as described in <a>Time</a>.
replay_eventStartTime :: Lens' Replay (Maybe UTCTime)

-- | The name of the replay.
replay_replayName :: Lens' Replay (Maybe Text)

-- | A description of why the replay is in the current state.
replay_stateReason :: Lens' Replay (Maybe Text)

-- | A list of ARNs for rules to replay events to.
replayDestination_filterArns :: Lens' ReplayDestination (Maybe [Text])

-- | The ARN of the event bus to replay event to. You can replay events
--   only to the event bus specified to create the archive.
replayDestination_arn :: Lens' ReplayDestination Text

-- | The maximum amount of time, in seconds, to continue to make retry
--   attempts.
retryPolicy_maximumEventAgeInSeconds :: Lens' RetryPolicy (Maybe Natural)

-- | The maximum number of retry attempts to make before the request fails.
--   Retry attempts continue until either the maximum number of attempts is
--   made or until the duration of the <tt>MaximumEventAgeInSeconds</tt> is
--   met.
retryPolicy_maximumRetryAttempts :: Lens' RetryPolicy (Maybe Natural)

-- | The event pattern of the rule. For more information, see <a>Events and
--   Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
rule_eventPattern :: Lens' Rule (Maybe Text)

-- | The state of the rule.
rule_state :: Lens' Rule (Maybe RuleState)

-- | The Amazon Resource Name (ARN) of the rule.
rule_arn :: Lens' Rule (Maybe Text)

-- | The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
rule_eventBusName :: Lens' Rule (Maybe Text)

-- | The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
rule_scheduleExpression :: Lens' Rule (Maybe Text)

-- | The name of the rule.
rule_name :: Lens' Rule (Maybe Text)

-- | The description of the rule.
rule_description :: Lens' Rule (Maybe Text)

-- | If the rule was created on behalf of your account by an Amazon Web
--   Services service, this field displays the principal name of the
--   service that created the rule.
rule_managedBy :: Lens' Rule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used for target
--   invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
rule_roleArn :: Lens' Rule (Maybe Text)

-- | Currently, we support including only one RunCommandTarget block, which
--   specifies either an array of InstanceIds or a tag.
runCommandParameters_runCommandTargets :: Lens' RunCommandParameters (NonEmpty RunCommandTarget)

-- | Can be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
runCommandTarget_key :: Lens' RunCommandTarget Text

-- | If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
runCommandTarget_values :: Lens' RunCommandTarget (NonEmpty Text)

-- | Name of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_name :: Lens' SageMakerPipelineParameter Text

-- | Value of parameter to start execution of a SageMaker Model Building
--   Pipeline.
sageMakerPipelineParameter_value :: Lens' SageMakerPipelineParameter Text

-- | List of Parameter names and values for SageMaker Model Building
--   Pipeline execution.
sageMakerPipelineParameters_pipelineParameterList :: Lens' SageMakerPipelineParameters (Maybe [SageMakerPipelineParameter])

-- | The FIFO message group ID to use as the target.
sqsParameters_messageGroupId :: Lens' SqsParameters (Maybe Text)

-- | A string you can use to assign a value. The combination of tag keys
--   and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text

-- | Parameters used when you are using the rule to invoke Amazon EC2 Run
--   Command.
target_runCommandParameters :: Lens' Target (Maybe RunCommandParameters)

-- | Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
target_httpParameters :: Lens' Target (Maybe HttpParameters)

-- | The custom parameter you can use to control the shard assignment, when
--   the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
target_kinesisParameters :: Lens' Target (Maybe KinesisParameters)

-- | Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
target_inputTransformer :: Lens' Target (Maybe InputTransformer)

-- | The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
target_deadLetterConfig :: Lens' Target (Maybe DeadLetterConfig)

-- | Contains the SageMaker Model Building Pipeline parameters to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
target_sageMakerPipelineParameters :: Lens' Target (Maybe SageMakerPipelineParameters)

-- | Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
target_sqsParameters :: Lens' Target (Maybe SqsParameters)

-- | Valid JSON text passed to the target. In this case, nothing from the
--   event itself is passed to the target. For more information, see <a>The
--   JavaScript Object Notation (JSON) Data Interchange Format</a>.
target_input :: Lens' Target (Maybe Text)

-- | If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
target_batchParameters :: Lens' Target (Maybe BatchParameters)

-- | Contains the Amazon Redshift Data API parameters to use when the
--   target is a Amazon Redshift cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
target_redshiftDataParameters :: Lens' Target (Maybe RedshiftDataParameters)

-- | Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
target_ecsParameters :: Lens' Target (Maybe EcsParameters)

-- | The <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
target_retryPolicy :: Lens' Target (Maybe RetryPolicy)

-- | The value of the JSONPath that is used for extracting part of the
--   matched event when passing it to the target. You must use JSON dot
--   notation, not bracket notation. For more information about JSON paths,
--   see <a>JSONPath</a>.
target_inputPath :: Lens' Target (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role to be used for this
--   target when the rule is triggered. If one rule triggers multiple
--   targets, you can use a different IAM role for each target.
target_roleArn :: Lens' Target (Maybe Text)

-- | The ID of the target. We recommend using a memorable and unique
--   string.
target_id :: Lens' Target Text

-- | The Amazon Resource Name (ARN) of the target.
target_arn :: Lens' Target Text

-- | The value associated with teh API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyValue :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)

-- | The name of the API key to use for authorization.
updateConnectionApiKeyAuthRequestParameters_apiKeyName :: Lens' UpdateConnectionApiKeyAuthRequestParameters (Maybe Text)

-- | A <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
updateConnectionAuthRequestParameters_oAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionOAuthRequestParameters)

-- | A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
updateConnectionAuthRequestParameters_invocationHttpParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | A <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
updateConnectionAuthRequestParameters_apiKeyAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionApiKeyAuthRequestParameters)

-- | A <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
updateConnectionAuthRequestParameters_basicAuthParameters :: Lens' UpdateConnectionAuthRequestParameters (Maybe UpdateConnectionBasicAuthRequestParameters)

-- | The user name to use for Basic authorization.
updateConnectionBasicAuthRequestParameters_username :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)

-- | The password associated with the user name to use for Basic
--   authorization.
updateConnectionBasicAuthRequestParameters_password :: Lens' UpdateConnectionBasicAuthRequestParameters (Maybe Text)

-- | The client ID to use for OAuth authorization.
updateConnectionOAuthClientRequestParameters_clientID :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)

-- | The client secret assciated with the client ID to use for OAuth
--   authorization.
updateConnectionOAuthClientRequestParameters_clientSecret :: Lens' UpdateConnectionOAuthClientRequestParameters (Maybe Text)

-- | The method used to connect to the HTTP endpoint.
updateConnectionOAuthRequestParameters_httpMethod :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionOAuthHttpMethod)

-- | A <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
updateConnectionOAuthRequestParameters_clientParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe UpdateConnectionOAuthClientRequestParameters)

-- | The additional HTTP parameters used for the OAuth authorization
--   request.
updateConnectionOAuthRequestParameters_oAuthHttpParameters :: Lens' UpdateConnectionOAuthRequestParameters (Maybe ConnectionHttpParameters)

-- | The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
updateConnectionOAuthRequestParameters_authorizationEndpoint :: Lens' UpdateConnectionOAuthRequestParameters (Maybe Text)


module Amazonka.CloudWatchEvents.Waiters


-- | Derived from API version <tt>2015-10-07</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon EventBridge helps you to respond to state changes in your
--   Amazon Web Services resources. When your resources change state, they
--   automatically send events to an event stream. You can create rules
--   that match selected events in the stream and route them to targets to
--   take action. You can also use rules to take action on a predetermined
--   schedule. For example, you can configure rules to:
--   
--   <ul>
--   <li>Automatically invoke an Lambda function to update DNS entries when
--   an event notifies you that Amazon EC2 instance enters the running
--   state.</li>
--   <li>Direct specific API records from CloudTrail to an Amazon Kinesis
--   data stream for detailed analysis of potential security or
--   availability risks.</li>
--   <li>Periodically invoke a built-in target to create a snapshot of an
--   Amazon EBS volume.</li>
--   </ul>
--   
--   For more information about the features of Amazon EventBridge, see the
--   <a>Amazon EventBridge User Guide</a>.
module Amazonka.CloudWatchEvents

-- | API version <tt>2015-10-07</tt> of the Amazon EventBridge SDK
--   configuration.
defaultService :: Service

-- | This rule was created by an Amazon Web Services service on behalf of
--   your account. It is managed by that service. If you see this error in
--   response to <tt>DeleteRule</tt> or <tt>RemoveTargets</tt>, you can use
--   the <tt>Force</tt> parameter in those calls to delete the rule or
--   remove targets from the rule. You cannot modify these managed rules by
--   using <tt>DisableRule</tt>, <tt>EnableRule</tt>, <tt>PutTargets</tt>,
--   <tt>PutRule</tt>, <tt>TagResource</tt>, or <tt>UntagResource</tt>.
_ManagedRuleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred because a replay can be canceled only when the state
--   is Running or Starting.
_IllegalStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event bus policy is too long. For more information, see the
--   limits.
_PolicyLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you are trying to create already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation you are attempting is not available in this region.
_OperationDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is concurrent modification on a rule, target, archive, or
--   replay.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event pattern is not valid.
_InvalidEventPatternException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception occurs due to unexpected causes.
_InternalException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An entity that you specified does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified state is not a valid state for an event source.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because it attempted to create resource beyond the
--   allowed service quota.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDeauthorizeConnection</a> smart constructor.
data DeauthorizeConnection
DeauthorizeConnection' :: Text -> DeauthorizeConnection

-- | Create a value of <a>DeauthorizeConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeauthorizeConnection'</a>,
--   <a>deauthorizeConnection_name</a> - The name of the connection to
--   remove authorization from.
newDeauthorizeConnection :: Text -> DeauthorizeConnection

-- | <i>See:</i> <a>newDeauthorizeConnectionResponse</a> smart constructor.
data DeauthorizeConnectionResponse
DeauthorizeConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> DeauthorizeConnectionResponse

-- | Create a value of <a>DeauthorizeConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_creationTime</a> - A time stamp for
--   the time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_lastModifiedTime</a> - A time stamp
--   for the time that the connection was last updated.
--   
--   <a>$sel:lastAuthorizedTime:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_lastAuthorizedTime</a> - A time stamp
--   for the time that the connection was last authorized.
--   
--   <a>$sel:connectionArn:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_connectionArn</a> - The ARN of the
--   connection that authorization was removed from.
--   
--   <a>$sel:connectionState:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_connectionState</a> - The state of
--   the connection.
--   
--   <a>$sel:httpStatus:DeauthorizeConnectionResponse'</a>,
--   <a>deauthorizeConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeauthorizeConnectionResponse :: Int -> DeauthorizeConnectionResponse

-- | <i>See:</i> <a>newRemoveTargets</a> smart constructor.
data RemoveTargets
RemoveTargets' :: Maybe Bool -> Maybe Text -> Text -> NonEmpty Text -> RemoveTargets

-- | Create a value of <a>RemoveTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:RemoveTargets'</a>, <a>removeTargets_force</a> - If this
--   is a managed rule, created by an Amazon Web Services service on your
--   behalf, you must specify <tt>Force</tt> as <tt>True</tt> to remove
--   targets. This parameter is ignored for rules that are not managed
--   rules. You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
--   
--   <a>$sel:eventBusName:RemoveTargets'</a>,
--   <a>removeTargets_eventBusName</a> - The name or ARN of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:rule:RemoveTargets'</a>, <a>removeTargets_rule</a> - The name
--   of the rule.
--   
--   <a>$sel:ids:RemoveTargets'</a>, <a>removeTargets_ids</a> - The IDs of
--   the targets to remove from the rule.
newRemoveTargets :: Text -> NonEmpty Text -> RemoveTargets

-- | <i>See:</i> <a>newRemoveTargetsResponse</a> smart constructor.
data RemoveTargetsResponse
RemoveTargetsResponse' :: Maybe Int -> Maybe [RemoveTargetsResultEntry] -> Int -> RemoveTargetsResponse

-- | Create a value of <a>RemoveTargetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:failedEntries:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_failedEntries</a> - The failed target
--   entries.
--   
--   <a>$sel:httpStatus:RemoveTargetsResponse'</a>,
--   <a>removeTargetsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTargetsResponse :: Int -> RemoveTargetsResponse

-- | <i>See:</i> <a>newDeleteRule</a> smart constructor.
data DeleteRule
DeleteRule' :: Maybe Bool -> Maybe Text -> Text -> DeleteRule

-- | Create a value of <a>DeleteRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:DeleteRule'</a>, <a>deleteRule_force</a> - If this is a
--   managed rule, created by an Amazon Web Services service on your
--   behalf, you must specify <tt>Force</tt> as <tt>True</tt> to delete the
--   rule. This parameter is ignored for rules that are not managed rules.
--   You can check whether a rule is a managed rule by using
--   <tt>DescribeRule</tt> or <tt>ListRules</tt> and checking the
--   <tt>ManagedBy</tt> field of the response.
--   
--   <a>$sel:eventBusName:DeleteRule'</a>, <a>deleteRule_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:name:DeleteRule'</a>, <a>deleteRule_name</a> - The name of the
--   rule.
newDeleteRule :: Text -> DeleteRule

-- | <i>See:</i> <a>newDeleteRuleResponse</a> smart constructor.
data DeleteRuleResponse
DeleteRuleResponse' :: DeleteRuleResponse

-- | Create a value of <a>DeleteRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRuleResponse :: DeleteRuleResponse

-- | <i>See:</i> <a>newListPartnerEventSourceAccounts</a> smart
--   constructor.
data ListPartnerEventSourceAccounts
ListPartnerEventSourceAccounts' :: Maybe Text -> Maybe Natural -> Text -> ListPartnerEventSourceAccounts

-- | Create a value of <a>ListPartnerEventSourceAccounts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_nextToken</a> - The token returned
--   by a previous call to this operation. Specifying this retrieves the
--   next set of results.
--   
--   <a>$sel:limit:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_limit</a> - Specifying this limits
--   the number of results returned by this operation. The operation also
--   returns a NextToken which you can use in a subsequent operation to
--   retrieve the next set of results.
--   
--   <a>$sel:eventSourceName:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccounts_eventSourceName</a> - The name of
--   the partner event source to display account information about.
newListPartnerEventSourceAccounts :: Text -> ListPartnerEventSourceAccounts

-- | <i>See:</i> <a>newListPartnerEventSourceAccountsResponse</a> smart
--   constructor.
data ListPartnerEventSourceAccountsResponse
ListPartnerEventSourceAccountsResponse' :: Maybe [PartnerEventSourceAccount] -> Maybe Text -> Int -> ListPartnerEventSourceAccountsResponse

-- | Create a value of <a>ListPartnerEventSourceAccountsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:partnerEventSourceAccounts:ListPartnerEventSourceAccountsResponse'</a>,
--   <a>listPartnerEventSourceAccountsResponse_partnerEventSourceAccounts</a>
--   - The list of partner event sources returned by the operation.
--   
--   <a>$sel:nextToken:ListPartnerEventSourceAccounts'</a>,
--   <a>listPartnerEventSourceAccountsResponse_nextToken</a> - A token you
--   can use in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListPartnerEventSourceAccountsResponse'</a>,
--   <a>listPartnerEventSourceAccountsResponse_httpStatus</a> - The
--   response's http status code.
newListPartnerEventSourceAccountsResponse :: Int -> ListPartnerEventSourceAccountsResponse

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ConnectionState -> ListConnections

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListConnections'</a>,
--   <a>listConnections_namePrefix</a> - A name prefix to filter results
--   returned. Only connections with a name that starts with the prefix are
--   returned.
--   
--   <a>$sel:limit:ListConnections'</a>, <a>listConnections_limit</a> - The
--   maximum number of connections to return.
--   
--   <a>$sel:connectionState:ListConnections'</a>,
--   <a>listConnections_connectionState</a> - The state of the connection.
newListConnections :: ListConnections

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe [Connection] -> Maybe Text -> Int -> ListConnectionsResponse

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connections</a> - An array of connections
--   objects that include details about the connections.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - A token you can use in a
--   subsequent request to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteConnection'</a>, <a>deleteConnection_name</a> - The
--   name of the connection to delete.
newDeleteConnection :: Text -> DeleteConnection

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> DeleteConnectionResponse

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified before it was deleted.
--   
--   <a>$sel:lastAuthorizedTime:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_lastAuthorizedTime</a> - A time stamp for
--   the time that the connection was last authorized before it wa deleted.
--   
--   <a>$sel:connectionArn:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was deleted.
--   
--   <a>$sel:connectionState:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_connectionState</a> - The state of the
--   connection before it was deleted.
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe UpdateConnectionAuthRequestParameters -> Maybe ConnectionAuthorizationType -> Maybe Text -> Text -> UpdateConnection

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authParameters:UpdateConnection'</a>,
--   <a>updateConnection_authParameters</a> - The authorization parameters
--   to use for the connection.
--   
--   <a>$sel:authorizationType:UpdateConnection'</a>,
--   <a>updateConnection_authorizationType</a> - The type of authorization
--   to use for the connection.
--   
--   <a>$sel:description:UpdateConnection'</a>,
--   <a>updateConnection_description</a> - A description for the
--   connection.
--   
--   <a>$sel:name:UpdateConnection'</a>, <a>updateConnection_name</a> - The
--   name of the connection to update.
newUpdateConnection :: Text -> UpdateConnection

-- | <i>See:</i> <a>newUpdateConnectionResponse</a> smart constructor.
data UpdateConnectionResponse
UpdateConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> UpdateConnectionResponse

-- | Create a value of <a>UpdateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified.
--   
--   <a>$sel:lastAuthorizedTime:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_lastAuthorizedTime</a> - A time stamp for
--   the time that the connection was last authorized.
--   
--   <a>$sel:connectionArn:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was updated.
--   
--   <a>$sel:connectionState:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_connectionState</a> - The state of the
--   connection that was updated.
--   
--   <a>$sel:httpStatus:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectionResponse :: Int -> UpdateConnectionResponse

-- | <i>See:</i> <a>newListRules</a> smart constructor.
data ListRules
ListRules' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListRules

-- | Create a value of <a>ListRules</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRules'</a>, <a>listRules_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListRules'</a>, <a>listRules_eventBusName</a> -
--   The name or ARN of the event bus to list the rules for. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:namePrefix:ListRules'</a>, <a>listRules_namePrefix</a> - The
--   prefix matching the rule name.
--   
--   <a>$sel:limit:ListRules'</a>, <a>listRules_limit</a> - The maximum
--   number of results to return.
newListRules :: ListRules

-- | <i>See:</i> <a>newListRulesResponse</a> smart constructor.
data ListRulesResponse
ListRulesResponse' :: Maybe [Rule] -> Maybe Text -> Int -> ListRulesResponse

-- | Create a value of <a>ListRulesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:ListRulesResponse'</a>, <a>listRulesResponse_rules</a> -
--   The rules that match the specified criteria.
--   
--   <a>$sel:nextToken:ListRules'</a>, <a>listRulesResponse_nextToken</a> -
--   Indicates whether there are additional results to retrieve. If there
--   are no more results, the value is null.
--   
--   <a>$sel:httpStatus:ListRulesResponse'</a>,
--   <a>listRulesResponse_httpStatus</a> - The response's http status code.
newListRulesResponse :: Int -> ListRulesResponse

-- | <i>See:</i> <a>newPutRule</a> smart constructor.
data PutRule
PutRule' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Text -> PutRule

-- | Create a value of <a>PutRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:PutRule'</a>, <a>putRule_eventPattern</a> - The
--   event pattern. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
--   
--   <a>$sel:state:PutRule'</a>, <a>putRule_state</a> - Indicates whether
--   the rule is enabled or disabled.
--   
--   <a>$sel:eventBusName:PutRule'</a>, <a>putRule_eventBusName</a> - The
--   name or ARN of the event bus to associate with this rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:scheduleExpression:PutRule'</a>,
--   <a>putRule_scheduleExpression</a> - The scheduling expression. For
--   example, "cron(0 20 * * ? *)" or "rate(5 minutes)".
--   
--   <a>$sel:description:PutRule'</a>, <a>putRule_description</a> - A
--   description of the rule.
--   
--   <a>$sel:tags:PutRule'</a>, <a>putRule_tags</a> - The list of key-value
--   pairs to associate with the rule.
--   
--   <a>$sel:roleArn:PutRule'</a>, <a>putRule_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role associated with the rule.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
--   
--   <a>$sel:name:PutRule'</a>, <a>putRule_name</a> - The name of the rule
--   that you are creating or updating.
newPutRule :: Text -> PutRule

-- | <i>See:</i> <a>newPutRuleResponse</a> smart constructor.
data PutRuleResponse
PutRuleResponse' :: Maybe Text -> Int -> PutRuleResponse

-- | Create a value of <a>PutRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleArn:PutRuleResponse'</a>, <a>putRuleResponse_ruleArn</a> -
--   The Amazon Resource Name (ARN) of the rule.
--   
--   <a>$sel:httpStatus:PutRuleResponse'</a>,
--   <a>putRuleResponse_httpStatus</a> - The response's http status code.
newPutRuleResponse :: Int -> PutRuleResponse

-- | <i>See:</i> <a>newDisableRule</a> smart constructor.
data DisableRule
DisableRule' :: Maybe Text -> Text -> DisableRule

-- | Create a value of <a>DisableRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:DisableRule'</a>, <a>disableRule_eventBusName</a>
--   - The name or ARN of the event bus associated with the rule. If you
--   omit this, the default event bus is used.
--   
--   <a>$sel:name:DisableRule'</a>, <a>disableRule_name</a> - The name of
--   the rule.
newDisableRule :: Text -> DisableRule

-- | <i>See:</i> <a>newDisableRuleResponse</a> smart constructor.
data DisableRuleResponse
DisableRuleResponse' :: DisableRuleResponse

-- | Create a value of <a>DisableRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableRuleResponse :: DisableRuleResponse

-- | <i>See:</i> <a>newPutPermission</a> smart constructor.
data PutPermission
PutPermission' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Condition -> PutPermission

-- | Create a value of <a>PutPermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:PutPermission'</a>, <a>putPermission_action</a> - The
--   action that you are enabling the other account to perform.
--   
--   <a>$sel:eventBusName:PutPermission'</a>,
--   <a>putPermission_eventBusName</a> - The name of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:principal:PutPermission'</a>, <a>putPermission_principal</a> -
--   The 12-digit Amazon Web Services account ID that you are permitting to
--   put events to your default event bus. Specify "*" to permit any
--   account to put events to your default event bus.
--   
--   If you specify "*" without specifying <tt>Condition</tt>, avoid
--   creating rules that may match undesirable events. To create more
--   secure rules, make sure that the event pattern for each rule contains
--   an <tt>account</tt> field with a specific account ID from which to
--   receive events. Rules with an account field do not match any events
--   sent from other accounts.
--   
--   <a>$sel:policy:PutPermission'</a>, <a>putPermission_policy</a> - A
--   JSON string that describes the permission policy statement. You can
--   include a <tt>Policy</tt> parameter in the request instead of using
--   the <tt>StatementId</tt>, <tt>Action</tt>, <tt>Principal</tt>, or
--   <tt>Condition</tt> parameters.
--   
--   <a>$sel:statementId:PutPermission'</a>,
--   <a>putPermission_statementId</a> - An identifier string for the
--   external account that you are granting permissions to. If you later
--   want to revoke the permission for this external account, specify this
--   <tt>StatementId</tt> when you run <a>RemovePermission</a>.
--   
--   <a>$sel:condition:PutPermission'</a>, <a>putPermission_condition</a> -
--   This parameter enables you to limit the permission to accounts that
--   fulfill a certain condition, such as being a member of a certain
--   Amazon Web Services organization. For more information about Amazon
--   Web Services Organizations, see <a>What Is Amazon Web Services
--   Organizations</a> in the <i>Amazon Web Services Organizations User
--   Guide</i>.
--   
--   If you specify <tt>Condition</tt> with an Amazon Web Services
--   organization ID, and specify "*" as the value for <tt>Principal</tt>,
--   you grant permission to all the accounts in the named organization.
--   
--   The <tt>Condition</tt> is a JSON string which must contain
--   <tt>Type</tt>, <tt>Key</tt>, and <tt>Value</tt> fields.
newPutPermission :: PutPermission

-- | <i>See:</i> <a>newPutPermissionResponse</a> smart constructor.
data PutPermissionResponse
PutPermissionResponse' :: PutPermissionResponse

-- | Create a value of <a>PutPermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutPermissionResponse :: PutPermissionResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the EventBridge
--   resource for which you want to view tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the resource you specified
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListReplays</a> smart constructor.
data ListReplays
ListReplays' :: Maybe Text -> Maybe ReplayState -> Maybe Text -> Maybe Text -> Maybe Natural -> ListReplays

-- | Create a value of <a>ListReplays</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListReplays'</a>,
--   <a>listReplays_eventSourceArn</a> - The ARN of the archive from which
--   the events are replayed.
--   
--   <a>$sel:state:ListReplays'</a>, <a>listReplays_state</a> - The state
--   of the replay.
--   
--   <a>$sel:nextToken:ListReplays'</a>, <a>listReplays_nextToken</a> - The
--   token returned by a previous call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListReplays'</a>, <a>listReplays_namePrefix</a> - A
--   name prefix to filter the replays returned. Only replays with name
--   that match the prefix are returned.
--   
--   <a>$sel:limit:ListReplays'</a>, <a>listReplays_limit</a> - The maximum
--   number of replays to retrieve.
newListReplays :: ListReplays

-- | <i>See:</i> <a>newListReplaysResponse</a> smart constructor.
data ListReplaysResponse
ListReplaysResponse' :: Maybe [Replay] -> Maybe Text -> Int -> ListReplaysResponse

-- | Create a value of <a>ListReplaysResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replays:ListReplaysResponse'</a>,
--   <a>listReplaysResponse_replays</a> - An array of <tt>Replay</tt>
--   objects that contain information about the replay.
--   
--   <a>$sel:nextToken:ListReplays'</a>,
--   <a>listReplaysResponse_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListReplaysResponse'</a>,
--   <a>listReplaysResponse_httpStatus</a> - The response's http status
--   code.
newListReplaysResponse :: Int -> ListReplaysResponse

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Text -> ConnectionAuthorizationType -> CreateConnectionAuthRequestParameters -> CreateConnection

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateConnection'</a>,
--   <a>createConnection_description</a> - A description for the connection
--   to create.
--   
--   <a>$sel:name:CreateConnection'</a>, <a>createConnection_name</a> - The
--   name for the connection to create.
--   
--   <a>$sel:authorizationType:CreateConnection'</a>,
--   <a>createConnection_authorizationType</a> - The type of authorization
--   to use for the connection.
--   
--   <a>$sel:authParameters:CreateConnection'</a>,
--   <a>createConnection_authParameters</a> - A
--   <tt>CreateConnectionAuthRequestParameters</tt> object that contains
--   the authorization parameters to use to authorize with the endpoint.
newCreateConnection :: Text -> ConnectionAuthorizationType -> CreateConnectionAuthRequestParameters -> CreateConnection

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionState -> Int -> CreateConnectionResponse

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last updated.
--   
--   <a>$sel:connectionArn:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionArn</a> - The ARN of the
--   connection that was created by the request.
--   
--   <a>$sel:connectionState:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionState</a> - The state of the
--   connection that was created by the request.
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
newCreateConnectionResponse :: Int -> CreateConnectionResponse

-- | <i>See:</i> <a>newCancelReplay</a> smart constructor.
data CancelReplay
CancelReplay' :: Text -> CancelReplay

-- | Create a value of <a>CancelReplay</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replayName:CancelReplay'</a>, <a>cancelReplay_replayName</a> -
--   The name of the replay to cancel.
newCancelReplay :: Text -> CancelReplay

-- | <i>See:</i> <a>newCancelReplayResponse</a> smart constructor.
data CancelReplayResponse
CancelReplayResponse' :: Maybe ReplayState -> Maybe Text -> Maybe Text -> Int -> CancelReplayResponse

-- | Create a value of <a>CancelReplayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_state</a> - The current state of the replay.
--   
--   <a>$sel:replayArn:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_replayArn</a> - The ARN of the replay to
--   cancel.
--   
--   <a>$sel:stateReason:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_stateReason</a> - The reason that the replay
--   is in the current state.
--   
--   <a>$sel:httpStatus:CancelReplayResponse'</a>,
--   <a>cancelReplayResponse_httpStatus</a> - The response's http status
--   code.
newCancelReplayResponse :: Int -> CancelReplayResponse

-- | <i>See:</i> <a>newListTargetsByRule</a> smart constructor.
data ListTargetsByRule
ListTargetsByRule' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListTargetsByRule

-- | Create a value of <a>ListTargetsByRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTargetsByRule'</a>,
--   <a>listTargetsByRule_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListTargetsByRule'</a>,
--   <a>listTargetsByRule_eventBusName</a> - The name or ARN of the event
--   bus associated with the rule. If you omit this, the default event bus
--   is used.
--   
--   <a>$sel:limit:ListTargetsByRule'</a>, <a>listTargetsByRule_limit</a> -
--   The maximum number of results to return.
--   
--   <a>$sel:rule:ListTargetsByRule'</a>, <a>listTargetsByRule_rule</a> -
--   The name of the rule.
newListTargetsByRule :: Text -> ListTargetsByRule

-- | <i>See:</i> <a>newListTargetsByRuleResponse</a> smart constructor.
data ListTargetsByRuleResponse
ListTargetsByRuleResponse' :: Maybe Text -> Maybe (NonEmpty Target) -> Int -> ListTargetsByRuleResponse

-- | Create a value of <a>ListTargetsByRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTargetsByRule'</a>,
--   <a>listTargetsByRuleResponse_nextToken</a> - Indicates whether there
--   are additional results to retrieve. If there are no more results, the
--   value is null.
--   
--   <a>$sel:targets:ListTargetsByRuleResponse'</a>,
--   <a>listTargetsByRuleResponse_targets</a> - The targets assigned to the
--   rule.
--   
--   <a>$sel:httpStatus:ListTargetsByRuleResponse'</a>,
--   <a>listTargetsByRuleResponse_httpStatus</a> - The response's http
--   status code.
newListTargetsByRuleResponse :: Int -> ListTargetsByRuleResponse

-- | <i>See:</i> <a>newRemovePermission</a> smart constructor.
data RemovePermission
RemovePermission' :: Maybe Text -> Maybe Bool -> Maybe Text -> RemovePermission

-- | Create a value of <a>RemovePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:RemovePermission'</a>,
--   <a>removePermission_eventBusName</a> - The name of the event bus to
--   revoke permissions for. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:removeAllPermissions:RemovePermission'</a>,
--   <a>removePermission_removeAllPermissions</a> - Specifies whether to
--   remove all permissions.
--   
--   <a>$sel:statementId:RemovePermission'</a>,
--   <a>removePermission_statementId</a> - The statement ID corresponding
--   to the account that is no longer allowed to put events to the default
--   event bus.
newRemovePermission :: RemovePermission

-- | <i>See:</i> <a>newRemovePermissionResponse</a> smart constructor.
data RemovePermissionResponse
RemovePermissionResponse' :: RemovePermissionResponse

-- | Create a value of <a>RemovePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemovePermissionResponse :: RemovePermissionResponse

-- | <i>See:</i> <a>newListApiDestinations</a> smart constructor.
data ListApiDestinations
ListApiDestinations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> ListApiDestinations

-- | Create a value of <a>ListApiDestinations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApiDestinations'</a>,
--   <a>listApiDestinations_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListApiDestinations'</a>,
--   <a>listApiDestinations_namePrefix</a> - A name prefix to filter
--   results returned. Only API destinations with a name that starts with
--   the prefix are returned.
--   
--   <a>$sel:limit:ListApiDestinations'</a>,
--   <a>listApiDestinations_limit</a> - The maximum number of API
--   destinations to include in the response.
--   
--   <a>$sel:connectionArn:ListApiDestinations'</a>,
--   <a>listApiDestinations_connectionArn</a> - The ARN of the connection
--   specified for the API destination.
newListApiDestinations :: ListApiDestinations

-- | <i>See:</i> <a>newListApiDestinationsResponse</a> smart constructor.
data ListApiDestinationsResponse
ListApiDestinationsResponse' :: Maybe [ApiDestination] -> Maybe Text -> Int -> ListApiDestinationsResponse

-- | Create a value of <a>ListApiDestinationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiDestinations:ListApiDestinationsResponse'</a>,
--   <a>listApiDestinationsResponse_apiDestinations</a> - An array of
--   <tt>ApiDestination</tt> objects that include information about an API
--   destination.
--   
--   <a>$sel:nextToken:ListApiDestinations'</a>,
--   <a>listApiDestinationsResponse_nextToken</a> - A token you can use in
--   a subsequent request to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListApiDestinationsResponse'</a>,
--   <a>listApiDestinationsResponse_httpStatus</a> - The response's http
--   status code.
newListApiDestinationsResponse :: Int -> ListApiDestinationsResponse

-- | <i>See:</i> <a>newUpdateApiDestination</a> smart constructor.
data UpdateApiDestination
UpdateApiDestination' :: Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> UpdateApiDestination

-- | Create a value of <a>UpdateApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:UpdateApiDestination'</a>,
--   <a>updateApiDestination_httpMethod</a> - The method to use for the API
--   destination.
--   
--   <a>$sel:invocationEndpoint:UpdateApiDestination'</a>,
--   <a>updateApiDestination_invocationEndpoint</a> - The URL to the
--   endpoint to use for the API destination.
--   
--   <a>$sel:invocationRateLimitPerSecond:UpdateApiDestination'</a>,
--   <a>updateApiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of invocations per second to send to the API destination.
--   
--   <a>$sel:connectionArn:UpdateApiDestination'</a>,
--   <a>updateApiDestination_connectionArn</a> - The ARN of the connection
--   to use for the API destination.
--   
--   <a>$sel:description:UpdateApiDestination'</a>,
--   <a>updateApiDestination_description</a> - The name of the API
--   destination to update.
--   
--   <a>$sel:name:UpdateApiDestination'</a>,
--   <a>updateApiDestination_name</a> - The name of the API destination to
--   update.
newUpdateApiDestination :: Text -> UpdateApiDestination

-- | <i>See:</i> <a>newUpdateApiDestinationResponse</a> smart constructor.
data UpdateApiDestinationResponse
UpdateApiDestinationResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe ApiDestinationState -> Maybe Text -> Int -> UpdateApiDestinationResponse

-- | Create a value of <a>UpdateApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_creationTime</a> - A time stamp for
--   the time that the API destination was created.
--   
--   <a>$sel:lastModifiedTime:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   for the time that the API destination was last modified.
--   
--   <a>$sel:apiDestinationState:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_apiDestinationState</a> - The state of
--   the API destination that was updated.
--   
--   <a>$sel:apiDestinationArn:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_apiDestinationArn</a> - The ARN of the
--   API destination that was updated.
--   
--   <a>$sel:httpStatus:UpdateApiDestinationResponse'</a>,
--   <a>updateApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApiDestinationResponse :: Int -> UpdateApiDestinationResponse

-- | <i>See:</i> <a>newDeleteApiDestination</a> smart constructor.
data DeleteApiDestination
DeleteApiDestination' :: Text -> DeleteApiDestination

-- | Create a value of <a>DeleteApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteApiDestination'</a>,
--   <a>deleteApiDestination_name</a> - The name of the destination to
--   delete.
newDeleteApiDestination :: Text -> DeleteApiDestination

-- | <i>See:</i> <a>newDeleteApiDestinationResponse</a> smart constructor.
data DeleteApiDestinationResponse
DeleteApiDestinationResponse' :: Int -> DeleteApiDestinationResponse

-- | Create a value of <a>DeleteApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApiDestinationResponse'</a>,
--   <a>deleteApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApiDestinationResponse :: Int -> DeleteApiDestinationResponse

-- | <i>See:</i> <a>newActivateEventSource</a> smart constructor.
data ActivateEventSource
ActivateEventSource' :: Text -> ActivateEventSource

-- | Create a value of <a>ActivateEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ActivateEventSource'</a>, <a>activateEventSource_name</a>
--   - The name of the partner event source to activate.
newActivateEventSource :: Text -> ActivateEventSource

-- | <i>See:</i> <a>newActivateEventSourceResponse</a> smart constructor.
data ActivateEventSourceResponse
ActivateEventSourceResponse' :: ActivateEventSourceResponse

-- | Create a value of <a>ActivateEventSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newActivateEventSourceResponse :: ActivateEventSourceResponse

-- | <i>See:</i> <a>newCreateApiDestination</a> smart constructor.
data CreateApiDestination
CreateApiDestination' :: Maybe Natural -> Maybe Text -> Text -> Text -> Text -> ApiDestinationHttpMethod -> CreateApiDestination

-- | Create a value of <a>CreateApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invocationRateLimitPerSecond:CreateApiDestination'</a>,
--   <a>createApiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of requests per second to send to the HTTP invocation endpoint.
--   
--   <a>$sel:description:CreateApiDestination'</a>,
--   <a>createApiDestination_description</a> - A description for the API
--   destination to create.
--   
--   <a>$sel:name:CreateApiDestination'</a>,
--   <a>createApiDestination_name</a> - The name for the API destination to
--   create.
--   
--   <a>$sel:connectionArn:CreateApiDestination'</a>,
--   <a>createApiDestination_connectionArn</a> - The ARN of the connection
--   to use for the API destination. The destination endpoint must support
--   the authorization type specified for the connection.
--   
--   <a>$sel:invocationEndpoint:CreateApiDestination'</a>,
--   <a>createApiDestination_invocationEndpoint</a> - The URL to the HTTP
--   invocation endpoint for the API destination.
--   
--   <a>$sel:httpMethod:CreateApiDestination'</a>,
--   <a>createApiDestination_httpMethod</a> - The method to use for the
--   request to the HTTP invocation endpoint.
newCreateApiDestination :: Text -> Text -> Text -> ApiDestinationHttpMethod -> CreateApiDestination

-- | <i>See:</i> <a>newCreateApiDestinationResponse</a> smart constructor.
data CreateApiDestinationResponse
CreateApiDestinationResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe ApiDestinationState -> Maybe Text -> Int -> CreateApiDestinationResponse

-- | Create a value of <a>CreateApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_creationTime</a> - A time stamp
--   indicating the time that the API destination was created.
--   
--   <a>$sel:lastModifiedTime:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   indicating the time that the API destination was last modified.
--   
--   <a>$sel:apiDestinationState:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_apiDestinationState</a> - The state of
--   the API destination that was created by the request.
--   
--   <a>$sel:apiDestinationArn:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_apiDestinationArn</a> - The ARN of the
--   API destination that was created by the request.
--   
--   <a>$sel:httpStatus:CreateApiDestinationResponse'</a>,
--   <a>createApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApiDestinationResponse :: Int -> CreateApiDestinationResponse

-- | <i>See:</i> <a>newPutPartnerEvents</a> smart constructor.
data PutPartnerEvents
PutPartnerEvents' :: NonEmpty PutPartnerEventsRequestEntry -> PutPartnerEvents

-- | Create a value of <a>PutPartnerEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entries:PutPartnerEvents'</a>, <a>putPartnerEvents_entries</a>
--   - The list of events to write to the event bus.
newPutPartnerEvents :: NonEmpty PutPartnerEventsRequestEntry -> PutPartnerEvents

-- | <i>See:</i> <a>newPutPartnerEventsResponse</a> smart constructor.
data PutPartnerEventsResponse
PutPartnerEventsResponse' :: Maybe Int -> Maybe [PutPartnerEventsResultEntry] -> Int -> PutPartnerEventsResponse

-- | Create a value of <a>PutPartnerEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutPartnerEventsResponse'</a>,
--   <a>putPartnerEventsResponse_failedEntryCount</a> - The number of
--   events from this operation that could not be written to the partner
--   event bus.
--   
--   <a>$sel:entries:PutPartnerEvents'</a>,
--   <a>putPartnerEventsResponse_entries</a> - The list of events from this
--   operation that were successfully written to the partner event bus.
--   
--   <a>$sel:httpStatus:PutPartnerEventsResponse'</a>,
--   <a>putPartnerEventsResponse_httpStatus</a> - The response's http
--   status code.
newPutPartnerEventsResponse :: Int -> PutPartnerEventsResponse

-- | <i>See:</i> <a>newDescribeConnection</a> smart constructor.
data DescribeConnection
DescribeConnection' :: Text -> DescribeConnection

-- | Create a value of <a>DescribeConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeConnection'</a>, <a>describeConnection_name</a> -
--   The name of the connection to retrieve.
newDescribeConnection :: Text -> DescribeConnection

-- | <i>See:</i> <a>newDescribeConnectionResponse</a> smart constructor.
data DescribeConnectionResponse
DescribeConnectionResponse' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ConnectionAuthResponseParameters -> Maybe POSIX -> Maybe ConnectionAuthorizationType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConnectionState -> Int -> DescribeConnectionResponse

-- | Create a value of <a>DescribeConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_creationTime</a> - A time stamp for the
--   time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_lastModifiedTime</a> - A time stamp for
--   the time that the connection was last modified.
--   
--   <a>$sel:name:DescribeConnection'</a>,
--   <a>describeConnectionResponse_name</a> - The name of the connection
--   retrieved.
--   
--   <a>$sel:authParameters:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_authParameters</a> - The parameters to
--   use for authorization for the connection.
--   
--   <a>$sel:lastAuthorizedTime:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_lastAuthorizedTime</a> - A time stamp
--   for the time that the connection was last authorized.
--   
--   <a>$sel:authorizationType:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_authorizationType</a> - The type of
--   authorization specified for the connection.
--   
--   <a>$sel:connectionArn:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_connectionArn</a> - The ARN of the
--   connection retrieved.
--   
--   <a>$sel:stateReason:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_stateReason</a> - The reason that the
--   connection is in the current connection state.
--   
--   <a>$sel:secretArn:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_secretArn</a> - The ARN of the secret
--   created from the authorization parameters specified for the
--   connection.
--   
--   <a>$sel:description:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_description</a> - The description for
--   the connection retrieved.
--   
--   <a>$sel:connectionState:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_connectionState</a> - The state of the
--   connection retrieved.
--   
--   <a>$sel:httpStatus:DescribeConnectionResponse'</a>,
--   <a>describeConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConnectionResponse :: Int -> DescribeConnectionResponse

-- | <i>See:</i> <a>newDescribeRule</a> smart constructor.
data DescribeRule
DescribeRule' :: Maybe Text -> Text -> DescribeRule

-- | Create a value of <a>DescribeRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:DescribeRule'</a>,
--   <a>describeRule_eventBusName</a> - The name or ARN of the event bus
--   associated with the rule. If you omit this, the default event bus is
--   used.
--   
--   <a>$sel:name:DescribeRule'</a>, <a>describeRule_name</a> - The name of
--   the rule.
newDescribeRule :: Text -> DescribeRule

-- | <i>See:</i> <a>newDescribeRuleResponse</a> smart constructor.
data DescribeRuleResponse
DescribeRuleResponse' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeRuleResponse

-- | Create a value of <a>DescribeRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_eventPattern</a> - The event pattern. For more
--   information, see <a>Events and Event Patterns</a> in the <i>Amazon
--   EventBridge User Guide</i>.
--   
--   <a>$sel:state:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_state</a> - Specifies whether the rule is
--   enabled or disabled.
--   
--   <a>$sel:arn:DescribeRuleResponse'</a>, <a>describeRuleResponse_arn</a>
--   - The Amazon Resource Name (ARN) of the rule.
--   
--   <a>$sel:createdBy:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_createdBy</a> - The account ID of the user
--   that created the rule. If you use <tt>PutRule</tt> to put a rule on an
--   event bus in another account, the other account is the owner of the
--   rule, and the rule ARN includes the account ID for that account.
--   However, the value for <tt>CreatedBy</tt> is the account ID as the
--   account that created the rule in the other account.
--   
--   <a>$sel:eventBusName:DescribeRule'</a>,
--   <a>describeRuleResponse_eventBusName</a> - The name of the event bus
--   associated with the rule.
--   
--   <a>$sel:scheduleExpression:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_scheduleExpression</a> - The scheduling
--   expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".
--   
--   <a>$sel:name:DescribeRule'</a>, <a>describeRuleResponse_name</a> - The
--   name of the rule.
--   
--   <a>$sel:description:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_description</a> - The description of the rule.
--   
--   <a>$sel:managedBy:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_managedBy</a> - If this is a managed rule,
--   created by an Amazon Web Services service on your behalf, this field
--   displays the principal name of the Amazon Web Services service that
--   created the rule.
--   
--   <a>$sel:roleArn:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_roleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role associated with the rule.
--   
--   <a>$sel:httpStatus:DescribeRuleResponse'</a>,
--   <a>describeRuleResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRuleResponse :: Int -> DescribeRuleResponse

-- | <i>See:</i> <a>newListArchives</a> smart constructor.
data ListArchives
ListArchives' :: Maybe Text -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Maybe Natural -> ListArchives

-- | Create a value of <a>ListArchives</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:ListArchives'</a>,
--   <a>listArchives_eventSourceArn</a> - The ARN of the event source
--   associated with the archive.
--   
--   <a>$sel:state:ListArchives'</a>, <a>listArchives_state</a> - The state
--   of the archive.
--   
--   <a>$sel:nextToken:ListArchives'</a>, <a>listArchives_nextToken</a> -
--   The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:namePrefix:ListArchives'</a>, <a>listArchives_namePrefix</a> -
--   A name prefix to filter the archives returned. Only archives with name
--   that match the prefix are returned.
--   
--   <a>$sel:limit:ListArchives'</a>, <a>listArchives_limit</a> - The
--   maximum number of results to return.
newListArchives :: ListArchives

-- | <i>See:</i> <a>newListArchivesResponse</a> smart constructor.
data ListArchivesResponse
ListArchivesResponse' :: Maybe [Archive] -> Maybe Text -> Int -> ListArchivesResponse

-- | Create a value of <a>ListArchivesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archives:ListArchivesResponse'</a>,
--   <a>listArchivesResponse_archives</a> - An array of <tt>Archive</tt>
--   objects that include details about an archive.
--   
--   <a>$sel:nextToken:ListArchives'</a>,
--   <a>listArchivesResponse_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListArchivesResponse'</a>,
--   <a>listArchivesResponse_httpStatus</a> - The response's http status
--   code.
newListArchivesResponse :: Int -> ListArchivesResponse

-- | <i>See:</i> <a>newStartReplay</a> smart constructor.
data StartReplay
StartReplay' :: Maybe Text -> Text -> Text -> POSIX -> POSIX -> ReplayDestination -> StartReplay

-- | Create a value of <a>StartReplay</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:StartReplay'</a>, <a>startReplay_description</a> -
--   A description for the replay to start.
--   
--   <a>$sel:replayName:StartReplay'</a>, <a>startReplay_replayName</a> -
--   The name of the replay to start.
--   
--   <a>$sel:eventSourceArn:StartReplay'</a>,
--   <a>startReplay_eventSourceArn</a> - The ARN of the archive to replay
--   events from.
--   
--   <a>$sel:eventStartTime:StartReplay'</a>,
--   <a>startReplay_eventStartTime</a> - A time stamp for the time to start
--   replaying events. Only events that occurred between the
--   <tt>EventStartTime</tt> and <tt>EventEndTime</tt> are replayed.
--   
--   <a>$sel:eventEndTime:StartReplay'</a>, <a>startReplay_eventEndTime</a>
--   - A time stamp for the time to stop replaying events. Only events that
--   occurred between the <tt>EventStartTime</tt> and <tt>EventEndTime</tt>
--   are replayed.
--   
--   <a>$sel:destination:StartReplay'</a>, <a>startReplay_destination</a> -
--   A <tt>ReplayDestination</tt> object that includes details about the
--   destination for the replay.
newStartReplay :: Text -> Text -> UTCTime -> UTCTime -> ReplayDestination -> StartReplay

-- | <i>See:</i> <a>newStartReplayResponse</a> smart constructor.
data StartReplayResponse
StartReplayResponse' :: Maybe ReplayState -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> StartReplayResponse

-- | Create a value of <a>StartReplayResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StartReplayResponse'</a>,
--   <a>startReplayResponse_state</a> - The state of the replay.
--   
--   <a>$sel:replayStartTime:StartReplayResponse'</a>,
--   <a>startReplayResponse_replayStartTime</a> - The time at which the
--   replay started.
--   
--   <a>$sel:replayArn:StartReplayResponse'</a>,
--   <a>startReplayResponse_replayArn</a> - The ARN of the replay.
--   
--   <a>$sel:stateReason:StartReplayResponse'</a>,
--   <a>startReplayResponse_stateReason</a> - The reason that the replay is
--   in the state.
--   
--   <a>$sel:httpStatus:StartReplayResponse'</a>,
--   <a>startReplayResponse_httpStatus</a> - The response's http status
--   code.
newStartReplayResponse :: Int -> StartReplayResponse

-- | <i>See:</i> <a>newDeletePartnerEventSource</a> smart constructor.
data DeletePartnerEventSource
DeletePartnerEventSource' :: Text -> Text -> DeletePartnerEventSource

-- | Create a value of <a>DeletePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeletePartnerEventSource'</a>,
--   <a>deletePartnerEventSource_name</a> - The name of the event source to
--   delete.
--   
--   <a>$sel:account:DeletePartnerEventSource'</a>,
--   <a>deletePartnerEventSource_account</a> - The Amazon Web Services
--   account ID of the Amazon Web Services customer that the event source
--   was created for.
newDeletePartnerEventSource :: Text -> Text -> DeletePartnerEventSource

-- | <i>See:</i> <a>newDeletePartnerEventSourceResponse</a> smart
--   constructor.
data DeletePartnerEventSourceResponse
DeletePartnerEventSourceResponse' :: DeletePartnerEventSourceResponse

-- | Create a value of <a>DeletePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePartnerEventSourceResponse :: DeletePartnerEventSourceResponse

-- | <i>See:</i> <a>newDescribeReplay</a> smart constructor.
data DescribeReplay
DescribeReplay' :: Text -> DescribeReplay

-- | Create a value of <a>DescribeReplay</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replayName:DescribeReplay'</a>,
--   <a>describeReplay_replayName</a> - The name of the replay to retrieve.
newDescribeReplay :: Text -> DescribeReplay

-- | <i>See:</i> <a>newDescribeReplayResponse</a> smart constructor.
data DescribeReplayResponse
DescribeReplayResponse' :: Maybe Text -> Maybe ReplayDestination -> Maybe ReplayState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeReplayResponse

-- | Create a value of <a>DescribeReplayResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventSourceArn</a> - The ARN of the archive
--   events were replayed from.
--   
--   <a>$sel:destination:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_destination</a> - A
--   <tt>ReplayDestination</tt> object that contains details about the
--   replay.
--   
--   <a>$sel:state:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_state</a> - The current state of the replay.
--   
--   <a>$sel:eventEndTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventEndTime</a> - The time stamp for the
--   last event that was replayed from the archive.
--   
--   <a>$sel:replayStartTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayStartTime</a> - A time stamp for the
--   time that the replay started.
--   
--   <a>$sel:replayArn:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayArn</a> - The ARN of the replay.
--   
--   <a>$sel:replayEndTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_replayEndTime</a> - A time stamp for the
--   time that the replay stopped.
--   
--   <a>$sel:eventLastReplayedTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventLastReplayedTime</a> - The time that
--   the event was last replayed.
--   
--   <a>$sel:eventStartTime:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_eventStartTime</a> - The time stamp of the
--   first event that was last replayed from the archive.
--   
--   <a>$sel:replayName:DescribeReplay'</a>,
--   <a>describeReplayResponse_replayName</a> - The name of the replay.
--   
--   <a>$sel:stateReason:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_stateReason</a> - The reason that the replay
--   is in the current state.
--   
--   <a>$sel:description:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_description</a> - The description of the
--   replay.
--   
--   <a>$sel:httpStatus:DescribeReplayResponse'</a>,
--   <a>describeReplayResponse_httpStatus</a> - The response's http status
--   code.
newDescribeReplayResponse :: Int -> DescribeReplayResponse

-- | <i>See:</i> <a>newDescribeApiDestination</a> smart constructor.
data DescribeApiDestination
DescribeApiDestination' :: Text -> DescribeApiDestination

-- | Create a value of <a>DescribeApiDestination</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeApiDestination'</a>,
--   <a>describeApiDestination_name</a> - The name of the API destination
--   to retrieve.
newDescribeApiDestination :: Text -> DescribeApiDestination

-- | <i>See:</i> <a>newDescribeApiDestinationResponse</a> smart
--   constructor.
data DescribeApiDestinationResponse
DescribeApiDestinationResponse' :: Maybe POSIX -> Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe ApiDestinationState -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeApiDestinationResponse

-- | Create a value of <a>DescribeApiDestinationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_creationTime</a> - A time stamp for
--   the time that the API destination was created.
--   
--   <a>$sel:httpMethod:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_httpMethod</a> - The method to use
--   to connect to the HTTP endpoint.
--   
--   <a>$sel:invocationEndpoint:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_invocationEndpoint</a> - The URL to
--   use to connect to the HTTP endpoint.
--   
--   <a>$sel:lastModifiedTime:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_lastModifiedTime</a> - A time stamp
--   for the time that the API destination was last modified.
--   
--   <a>$sel:name:DescribeApiDestination'</a>,
--   <a>describeApiDestinationResponse_name</a> - The name of the API
--   destination retrieved.
--   
--   
--   <a>$sel:invocationRateLimitPerSecond:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_invocationRateLimitPerSecond</a> -
--   The maximum number of invocations per second to specified for the API
--   destination. Note that if you set the invocation rate maximum to a
--   value lower the rate necessary to send all events received on to the
--   destination HTTP endpoint, some events may not be delivered within the
--   24-hour retry window. If you plan to set the rate lower than the rate
--   necessary to deliver all events, consider using a dead-letter queue to
--   catch events that are not delivered within 24 hours.
--   
--   <a>$sel:apiDestinationState:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_apiDestinationState</a> - The state
--   of the API destination retrieved.
--   
--   <a>$sel:connectionArn:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_connectionArn</a> - The ARN of the
--   connection specified for the API destination retrieved.
--   
--   <a>$sel:description:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_description</a> - The description
--   for the API destination retrieved.
--   
--   <a>$sel:apiDestinationArn:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_apiDestinationArn</a> - The ARN of
--   the API destination retrieved.
--   
--   <a>$sel:httpStatus:DescribeApiDestinationResponse'</a>,
--   <a>describeApiDestinationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeApiDestinationResponse :: Int -> DescribeApiDestinationResponse

-- | <i>See:</i> <a>newListEventBuses</a> smart constructor.
data ListEventBuses
ListEventBuses' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventBuses

-- | Create a value of <a>ListEventBuses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventBuses'</a>, <a>listEventBuses_nextToken</a>
--   - The token returned by a previous call to retrieve the next set of
--   results.
--   
--   <a>$sel:namePrefix:ListEventBuses'</a>,
--   <a>listEventBuses_namePrefix</a> - Specifying this limits the results
--   to only those event buses with names that start with the specified
--   prefix.
--   
--   <a>$sel:limit:ListEventBuses'</a>, <a>listEventBuses_limit</a> -
--   Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
newListEventBuses :: ListEventBuses

-- | <i>See:</i> <a>newListEventBusesResponse</a> smart constructor.
data ListEventBusesResponse
ListEventBusesResponse' :: Maybe [EventBus] -> Maybe Text -> Int -> ListEventBusesResponse

-- | Create a value of <a>ListEventBusesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBuses:ListEventBusesResponse'</a>,
--   <a>listEventBusesResponse_eventBuses</a> - This list of event buses.
--   
--   <a>$sel:nextToken:ListEventBuses'</a>,
--   <a>listEventBusesResponse_nextToken</a> - A token you can use in a
--   subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListEventBusesResponse'</a>,
--   <a>listEventBusesResponse_httpStatus</a> - The response's http status
--   code.
newListEventBusesResponse :: Int -> ListEventBusesResponse

-- | <i>See:</i> <a>newCreateEventBus</a> smart constructor.
data CreateEventBus
CreateEventBus' :: Maybe Text -> Maybe [Tag] -> Text -> CreateEventBus

-- | Create a value of <a>CreateEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceName:CreateEventBus'</a>,
--   <a>createEventBus_eventSourceName</a> - If you are creating a partner
--   event bus, this specifies the partner event source that the new event
--   bus will be matched with.
--   
--   <a>$sel:tags:CreateEventBus'</a>, <a>createEventBus_tags</a> - Tags to
--   associate with the event bus.
--   
--   <a>$sel:name:CreateEventBus'</a>, <a>createEventBus_name</a> - The
--   name of the new event bus.
--   
--   Event bus names cannot contain the / character. You can't use the name
--   <tt>default</tt> for a custom event bus, as this name is already used
--   for your account's default event bus.
--   
--   If this is a partner event bus, the name must exactly match the name
--   of the partner event source that this event bus is matched to.
newCreateEventBus :: Text -> CreateEventBus

-- | <i>See:</i> <a>newCreateEventBusResponse</a> smart constructor.
data CreateEventBusResponse
CreateEventBusResponse' :: Maybe Text -> Int -> CreateEventBusResponse

-- | Create a value of <a>CreateEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusArn:CreateEventBusResponse'</a>,
--   <a>createEventBusResponse_eventBusArn</a> - The ARN of the new event
--   bus.
--   
--   <a>$sel:httpStatus:CreateEventBusResponse'</a>,
--   <a>createEventBusResponse_httpStatus</a> - The response's http status
--   code.
newCreateEventBusResponse :: Int -> CreateEventBusResponse

-- | <i>See:</i> <a>newDescribeEventSource</a> smart constructor.
data DescribeEventSource
DescribeEventSource' :: Text -> DescribeEventSource

-- | Create a value of <a>DescribeEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeEventSource'</a>, <a>describeEventSource_name</a>
--   - The name of the partner event source to display the details of.
newDescribeEventSource :: Text -> DescribeEventSource

-- | <i>See:</i> <a>newDescribeEventSourceResponse</a> smart constructor.
data DescribeEventSourceResponse
DescribeEventSourceResponse' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Int -> DescribeEventSourceResponse

-- | Create a value of <a>DescribeEventSourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_creationTime</a> - The date and time
--   that the event source was created.
--   
--   <a>$sel:state:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_state</a> - The state of the event
--   source. If it is ACTIVE, you have already created a matching event bus
--   for this event source, and that event bus is active. If it is PENDING,
--   either you haven't yet created a matching event bus, or that event bus
--   is deactivated. If it is DELETED, you have created a matching event
--   bus, but the event source has since been deleted.
--   
--   <a>$sel:arn:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_arn</a> - The ARN of the partner event
--   source.
--   
--   <a>$sel:createdBy:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_createdBy</a> - The name of the SaaS
--   partner that created the event source.
--   
--   <a>$sel:name:DescribeEventSource'</a>,
--   <a>describeEventSourceResponse_name</a> - The name of the partner
--   event source.
--   
--   <a>$sel:expirationTime:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_expirationTime</a> - The date and time
--   that the event source will expire if you do not create a matching
--   event bus.
--   
--   <a>$sel:httpStatus:DescribeEventSourceResponse'</a>,
--   <a>describeEventSourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventSourceResponse :: Int -> DescribeEventSourceResponse

-- | <i>See:</i> <a>newDescribeArchive</a> smart constructor.
data DescribeArchive
DescribeArchive' :: Text -> DescribeArchive

-- | Create a value of <a>DescribeArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archiveName:DescribeArchive'</a>,
--   <a>describeArchive_archiveName</a> - The name of the archive to
--   retrieve.
newDescribeArchive :: Text -> DescribeArchive

-- | <i>See:</i> <a>newDescribeArchiveResponse</a> smart constructor.
data DescribeArchiveResponse
DescribeArchiveResponse' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe ArchiveState -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeArchiveResponse

-- | Create a value of <a>DescribeArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_creationTime</a> - The time at which the
--   archive was created.
--   
--   <a>$sel:sizeBytes:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_sizeBytes</a> - The size of the archive in
--   bytes.
--   
--   <a>$sel:eventSourceArn:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventSourceArn</a> - The ARN of the event
--   source associated with the archive.
--   
--   <a>$sel:eventPattern:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventPattern</a> - The event pattern used
--   to filter events sent to the archive.
--   
--   <a>$sel:state:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_state</a> - The state of the archive.
--   
--   <a>$sel:eventCount:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_eventCount</a> - The number of events in
--   the archive.
--   
--   <a>$sel:archiveName:DescribeArchive'</a>,
--   <a>describeArchiveResponse_archiveName</a> - The name of the archive.
--   
--   <a>$sel:retentionDays:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_retentionDays</a> - The number of days to
--   retain events for in the archive.
--   
--   <a>$sel:archiveArn:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_archiveArn</a> - The ARN of the archive.
--   
--   <a>$sel:stateReason:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_stateReason</a> - The reason that the
--   archive is in the state.
--   
--   <a>$sel:description:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_description</a> - The description of the
--   archive.
--   
--   <a>$sel:httpStatus:DescribeArchiveResponse'</a>,
--   <a>describeArchiveResponse_httpStatus</a> - The response's http status
--   code.
newDescribeArchiveResponse :: Int -> DescribeArchiveResponse

-- | <i>See:</i> <a>newEnableRule</a> smart constructor.
data EnableRule
EnableRule' :: Maybe Text -> Text -> EnableRule

-- | Create a value of <a>EnableRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:EnableRule'</a>, <a>enableRule_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:name:EnableRule'</a>, <a>enableRule_name</a> - The name of the
--   rule.
newEnableRule :: Text -> EnableRule

-- | <i>See:</i> <a>newEnableRuleResponse</a> smart constructor.
data EnableRuleResponse
EnableRuleResponse' :: EnableRuleResponse

-- | Create a value of <a>EnableRuleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableRuleResponse :: EnableRuleResponse

-- | <i>See:</i> <a>newListRuleNamesByTarget</a> smart constructor.
data ListRuleNamesByTarget
ListRuleNamesByTarget' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListRuleNamesByTarget

-- | Create a value of <a>ListRuleNamesByTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_nextToken</a> - The token returned by a
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:eventBusName:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_eventBusName</a> - The name or ARN of the
--   event bus to list rules for. If you omit this, the default event bus
--   is used.
--   
--   <a>$sel:limit:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_limit</a> - The maximum number of results to
--   return.
--   
--   <a>$sel:targetArn:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTarget_targetArn</a> - The Amazon Resource Name
--   (ARN) of the target resource.
newListRuleNamesByTarget :: Text -> ListRuleNamesByTarget

-- | <i>See:</i> <a>newListRuleNamesByTargetResponse</a> smart constructor.
data ListRuleNamesByTargetResponse
ListRuleNamesByTargetResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListRuleNamesByTargetResponse

-- | Create a value of <a>ListRuleNamesByTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:ListRuleNamesByTargetResponse'</a>,
--   <a>listRuleNamesByTargetResponse_ruleNames</a> - The names of the
--   rules that can invoke the given target.
--   
--   <a>$sel:nextToken:ListRuleNamesByTarget'</a>,
--   <a>listRuleNamesByTargetResponse_nextToken</a> - Indicates whether
--   there are additional results to retrieve. If there are no more
--   results, the value is null.
--   
--   <a>$sel:httpStatus:ListRuleNamesByTargetResponse'</a>,
--   <a>listRuleNamesByTargetResponse_httpStatus</a> - The response's http
--   status code.
newListRuleNamesByTargetResponse :: Int -> ListRuleNamesByTargetResponse

-- | <i>See:</i> <a>newTestEventPattern</a> smart constructor.
data TestEventPattern
TestEventPattern' :: Text -> Text -> TestEventPattern

-- | Create a value of <a>TestEventPattern</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:TestEventPattern'</a>,
--   <a>testEventPattern_eventPattern</a> - The event pattern. For more
--   information, see <a>Events and Event Patterns</a> in the <i>Amazon
--   EventBridge User Guide</i>.
--   
--   <a>$sel:event:TestEventPattern'</a>, <a>testEventPattern_event</a> -
--   The event, in JSON format, to test against the event pattern. The JSON
--   must follow the format specified in <a>Amazon Web Services Events</a>,
--   and the following fields are mandatory:
--   
--   <ul>
--   <li><pre>id</pre></li>
--   <li><pre>account</pre></li>
--   <li><pre>source</pre></li>
--   <li><pre>time</pre></li>
--   <li><pre>region</pre></li>
--   <li><pre>resources</pre></li>
--   <li><pre>detail-type</pre></li>
--   </ul>
newTestEventPattern :: Text -> Text -> TestEventPattern

-- | <i>See:</i> <a>newTestEventPatternResponse</a> smart constructor.
data TestEventPatternResponse
TestEventPatternResponse' :: Maybe Bool -> Int -> TestEventPatternResponse

-- | Create a value of <a>TestEventPatternResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:result:TestEventPatternResponse'</a>,
--   <a>testEventPatternResponse_result</a> - Indicates whether the event
--   matches the event pattern.
--   
--   <a>$sel:httpStatus:TestEventPatternResponse'</a>,
--   <a>testEventPatternResponse_httpStatus</a> - The response's http
--   status code.
newTestEventPatternResponse :: Int -> TestEventPatternResponse

-- | <i>See:</i> <a>newDescribePartnerEventSource</a> smart constructor.
data DescribePartnerEventSource
DescribePartnerEventSource' :: Text -> DescribePartnerEventSource

-- | Create a value of <a>DescribePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribePartnerEventSource'</a>,
--   <a>describePartnerEventSource_name</a> - The name of the event source
--   to display.
newDescribePartnerEventSource :: Text -> DescribePartnerEventSource

-- | <i>See:</i> <a>newDescribePartnerEventSourceResponse</a> smart
--   constructor.
data DescribePartnerEventSourceResponse
DescribePartnerEventSourceResponse' :: Maybe Text -> Maybe Text -> Int -> DescribePartnerEventSourceResponse

-- | Create a value of <a>DescribePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribePartnerEventSourceResponse'</a>,
--   <a>describePartnerEventSourceResponse_arn</a> - The ARN of the event
--   source.
--   
--   <a>$sel:name:DescribePartnerEventSource'</a>,
--   <a>describePartnerEventSourceResponse_name</a> - The name of the event
--   source.
--   
--   <a>$sel:httpStatus:DescribePartnerEventSourceResponse'</a>,
--   <a>describePartnerEventSourceResponse_httpStatus</a> - The response's
--   http status code.
newDescribePartnerEventSourceResponse :: Int -> DescribePartnerEventSourceResponse

-- | <i>See:</i> <a>newDescribeEventBus</a> smart constructor.
data DescribeEventBus
DescribeEventBus' :: Maybe Text -> DescribeEventBus

-- | Create a value of <a>DescribeEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeEventBus'</a>, <a>describeEventBus_name</a> - The
--   name or ARN of the event bus to show details for. If you omit this,
--   the default event bus is displayed.
newDescribeEventBus :: DescribeEventBus

-- | <i>See:</i> <a>newDescribeEventBusResponse</a> smart constructor.
data DescribeEventBusResponse
DescribeEventBusResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeEventBusResponse

-- | Create a value of <a>DescribeEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_arn</a> - The Amazon Resource Name (ARN)
--   of the account permitted to write events to the current account.
--   
--   <a>$sel:name:DescribeEventBus'</a>,
--   <a>describeEventBusResponse_name</a> - The name of the event bus.
--   Currently, this is always <tt>default</tt>.
--   
--   <a>$sel:policy:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_policy</a> - The policy that enables the
--   external account to send events to your account.
--   
--   <a>$sel:httpStatus:DescribeEventBusResponse'</a>,
--   <a>describeEventBusResponse_httpStatus</a> - The response's http
--   status code.
newDescribeEventBusResponse :: Int -> DescribeEventBusResponse

-- | <i>See:</i> <a>newListEventSources</a> smart constructor.
data ListEventSources
ListEventSources' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListEventSources

-- | Create a value of <a>ListEventSources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventSources'</a>,
--   <a>listEventSources_nextToken</a> - The token returned by a previous
--   call to retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListEventSources'</a>,
--   <a>listEventSources_namePrefix</a> - Specifying this limits the
--   results to only those partner event sources with names that start with
--   the specified prefix.
--   
--   <a>$sel:limit:ListEventSources'</a>, <a>listEventSources_limit</a> -
--   Specifying this limits the number of results returned by this
--   operation. The operation also returns a NextToken which you can use in
--   a subsequent operation to retrieve the next set of results.
newListEventSources :: ListEventSources

-- | <i>See:</i> <a>newListEventSourcesResponse</a> smart constructor.
data ListEventSourcesResponse
ListEventSourcesResponse' :: Maybe Text -> Maybe [EventSource] -> Int -> ListEventSourcesResponse

-- | Create a value of <a>ListEventSourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEventSources'</a>,
--   <a>listEventSourcesResponse_nextToken</a> - A token you can use in a
--   subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:eventSources:ListEventSourcesResponse'</a>,
--   <a>listEventSourcesResponse_eventSources</a> - The list of event
--   sources.
--   
--   <a>$sel:httpStatus:ListEventSourcesResponse'</a>,
--   <a>listEventSourcesResponse_httpStatus</a> - The response's http
--   status code.
newListEventSourcesResponse :: Int -> ListEventSourcesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the EventBridge resource that you're adding tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newCreatePartnerEventSource</a> smart constructor.
data CreatePartnerEventSource
CreatePartnerEventSource' :: Text -> Text -> CreatePartnerEventSource

-- | Create a value of <a>CreatePartnerEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreatePartnerEventSource'</a>,
--   <a>createPartnerEventSource_name</a> - The name of the partner event
--   source. This name must be unique and must be in the format <tt>
--   partner_name/event_namespace/event_name </tt>. The Amazon Web Services
--   account that wants to use this partner event source must create a
--   partner event bus with a name that matches the name of the partner
--   event source.
--   
--   <a>$sel:account:CreatePartnerEventSource'</a>,
--   <a>createPartnerEventSource_account</a> - The Amazon Web Services
--   account ID that is permitted to create a matching partner event bus
--   for this partner event source.
newCreatePartnerEventSource :: Text -> Text -> CreatePartnerEventSource

-- | <i>See:</i> <a>newCreatePartnerEventSourceResponse</a> smart
--   constructor.
data CreatePartnerEventSourceResponse
CreatePartnerEventSourceResponse' :: Maybe Text -> Int -> CreatePartnerEventSourceResponse

-- | Create a value of <a>CreatePartnerEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:CreatePartnerEventSourceResponse'</a>,
--   <a>createPartnerEventSourceResponse_eventSourceArn</a> - The ARN of
--   the partner event source.
--   
--   <a>$sel:httpStatus:CreatePartnerEventSourceResponse'</a>,
--   <a>createPartnerEventSourceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePartnerEventSourceResponse :: Int -> CreatePartnerEventSourceResponse

-- | <i>See:</i> <a>newPutTargets</a> smart constructor.
data PutTargets
PutTargets' :: Maybe Text -> Text -> NonEmpty Target -> PutTargets

-- | Create a value of <a>PutTargets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventBusName:PutTargets'</a>, <a>putTargets_eventBusName</a> -
--   The name or ARN of the event bus associated with the rule. If you omit
--   this, the default event bus is used.
--   
--   <a>$sel:rule:PutTargets'</a>, <a>putTargets_rule</a> - The name of the
--   rule.
--   
--   <a>$sel:targets:PutTargets'</a>, <a>putTargets_targets</a> - The
--   targets to update or add to the rule.
newPutTargets :: Text -> NonEmpty Target -> PutTargets

-- | <i>See:</i> <a>newPutTargetsResponse</a> smart constructor.
data PutTargetsResponse
PutTargetsResponse' :: Maybe Int -> Maybe [PutTargetsResultEntry] -> Int -> PutTargetsResponse

-- | Create a value of <a>PutTargetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:failedEntries:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_failedEntries</a> - The failed target entries.
--   
--   <a>$sel:httpStatus:PutTargetsResponse'</a>,
--   <a>putTargetsResponse_httpStatus</a> - The response's http status
--   code.
newPutTargetsResponse :: Int -> PutTargetsResponse

-- | <i>See:</i> <a>newUpdateArchive</a> smart constructor.
data UpdateArchive
UpdateArchive' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> UpdateArchive

-- | Create a value of <a>UpdateArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:UpdateArchive'</a>,
--   <a>updateArchive_eventPattern</a> - The event pattern to use to filter
--   events sent to the archive.
--   
--   <a>$sel:retentionDays:UpdateArchive'</a>,
--   <a>updateArchive_retentionDays</a> - The number of days to retain
--   events in the archive.
--   
--   <a>$sel:description:UpdateArchive'</a>,
--   <a>updateArchive_description</a> - The description for the archive.
--   
--   <a>$sel:archiveName:UpdateArchive'</a>,
--   <a>updateArchive_archiveName</a> - The name of the archive to update.
newUpdateArchive :: Text -> UpdateArchive

-- | <i>See:</i> <a>newUpdateArchiveResponse</a> smart constructor.
data UpdateArchiveResponse
UpdateArchiveResponse' :: Maybe POSIX -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Int -> UpdateArchiveResponse

-- | Create a value of <a>UpdateArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_creationTime</a> - The time at which the
--   archive was updated.
--   
--   <a>$sel:state:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_state</a> - The state of the archive.
--   
--   <a>$sel:archiveArn:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_archiveArn</a> - The ARN of the archive.
--   
--   <a>$sel:stateReason:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_stateReason</a> - The reason that the archive
--   is in the current state.
--   
--   <a>$sel:httpStatus:UpdateArchiveResponse'</a>,
--   <a>updateArchiveResponse_httpStatus</a> - The response's http status
--   code.
newUpdateArchiveResponse :: Int -> UpdateArchiveResponse

-- | <i>See:</i> <a>newDeleteArchive</a> smart constructor.
data DeleteArchive
DeleteArchive' :: Text -> DeleteArchive

-- | Create a value of <a>DeleteArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:archiveName:DeleteArchive'</a>,
--   <a>deleteArchive_archiveName</a> - The name of the archive to delete.
newDeleteArchive :: Text -> DeleteArchive

-- | <i>See:</i> <a>newDeleteArchiveResponse</a> smart constructor.
data DeleteArchiveResponse
DeleteArchiveResponse' :: Int -> DeleteArchiveResponse

-- | Create a value of <a>DeleteArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteArchiveResponse'</a>,
--   <a>deleteArchiveResponse_httpStatus</a> - The response's http status
--   code.
newDeleteArchiveResponse :: Int -> DeleteArchiveResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the EventBridge resource
--   from which you are removing tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newPutEvents</a> smart constructor.
data PutEvents
PutEvents' :: NonEmpty PutEventsRequestEntry -> PutEvents

-- | Create a value of <a>PutEvents</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entries:PutEvents'</a>, <a>putEvents_entries</a> - The entry
--   that defines an event in your system. You can specify several
--   parameters for the entry such as the source and type of the event,
--   resources associated with the event, and so on.
newPutEvents :: NonEmpty PutEventsRequestEntry -> PutEvents

-- | <i>See:</i> <a>newPutEventsResponse</a> smart constructor.
data PutEventsResponse
PutEventsResponse' :: Maybe Int -> Maybe [PutEventsResultEntry] -> Int -> PutEventsResponse

-- | Create a value of <a>PutEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedEntryCount:PutEventsResponse'</a>,
--   <a>putEventsResponse_failedEntryCount</a> - The number of failed
--   entries.
--   
--   <a>$sel:entries:PutEvents'</a>, <a>putEventsResponse_entries</a> - The
--   successfully and unsuccessfully ingested events results. If the
--   ingestion was successful, the entry has the event ID in it. Otherwise,
--   you can use the error code and error message to identify the problem
--   with the entry.
--   
--   <a>$sel:httpStatus:PutEventsResponse'</a>,
--   <a>putEventsResponse_httpStatus</a> - The response's http status code.
newPutEventsResponse :: Int -> PutEventsResponse

-- | <i>See:</i> <a>newListPartnerEventSources</a> smart constructor.
data ListPartnerEventSources
ListPartnerEventSources' :: Maybe Text -> Maybe Natural -> Text -> ListPartnerEventSources

-- | Create a value of <a>ListPartnerEventSources</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_nextToken</a> - The token returned by a
--   previous call to this operation. Specifying this retrieves the next
--   set of results.
--   
--   <a>$sel:limit:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_limit</a> - pecifying this limits the
--   number of results returned by this operation. The operation also
--   returns a NextToken which you can use in a subsequent operation to
--   retrieve the next set of results.
--   
--   <a>$sel:namePrefix:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSources_namePrefix</a> - If you specify this, the
--   results are limited to only those partner event sources that start
--   with the string you specify.
newListPartnerEventSources :: Text -> ListPartnerEventSources

-- | <i>See:</i> <a>newListPartnerEventSourcesResponse</a> smart
--   constructor.
data ListPartnerEventSourcesResponse
ListPartnerEventSourcesResponse' :: Maybe [PartnerEventSource] -> Maybe Text -> Int -> ListPartnerEventSourcesResponse

-- | Create a value of <a>ListPartnerEventSourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partnerEventSources:ListPartnerEventSourcesResponse'</a>,
--   <a>listPartnerEventSourcesResponse_partnerEventSources</a> - The list
--   of partner event sources returned by the operation.
--   
--   <a>$sel:nextToken:ListPartnerEventSources'</a>,
--   <a>listPartnerEventSourcesResponse_nextToken</a> - A token you can use
--   in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:httpStatus:ListPartnerEventSourcesResponse'</a>,
--   <a>listPartnerEventSourcesResponse_httpStatus</a> - The response's
--   http status code.
newListPartnerEventSourcesResponse :: Int -> ListPartnerEventSourcesResponse

-- | <i>See:</i> <a>newCreateArchive</a> smart constructor.
data CreateArchive
CreateArchive' :: Maybe Text -> Maybe Natural -> Maybe Text -> Text -> Text -> CreateArchive

-- | Create a value of <a>CreateArchive</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:CreateArchive'</a>,
--   <a>createArchive_eventPattern</a> - An event pattern to use to filter
--   events sent to the archive.
--   
--   <a>$sel:retentionDays:CreateArchive'</a>,
--   <a>createArchive_retentionDays</a> - The number of days to retain
--   events for. Default value is 0. If set to 0, events are retained
--   indefinitely
--   
--   <a>$sel:description:CreateArchive'</a>,
--   <a>createArchive_description</a> - A description for the archive.
--   
--   <a>$sel:archiveName:CreateArchive'</a>,
--   <a>createArchive_archiveName</a> - The name for the archive to create.
--   
--   <a>$sel:eventSourceArn:CreateArchive'</a>,
--   <a>createArchive_eventSourceArn</a> - The ARN of the event bus that
--   sends events to the archive.
newCreateArchive :: Text -> Text -> CreateArchive

-- | <i>See:</i> <a>newCreateArchiveResponse</a> smart constructor.
data CreateArchiveResponse
CreateArchiveResponse' :: Maybe POSIX -> Maybe ArchiveState -> Maybe Text -> Maybe Text -> Int -> CreateArchiveResponse

-- | Create a value of <a>CreateArchiveResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_creationTime</a> - The time at which the
--   archive was created.
--   
--   <a>$sel:state:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_state</a> - The state of the archive that was
--   created.
--   
--   <a>$sel:archiveArn:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_archiveArn</a> - The ARN of the archive that
--   was created.
--   
--   <a>$sel:stateReason:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_stateReason</a> - The reason that the archive
--   is in the state.
--   
--   <a>$sel:httpStatus:CreateArchiveResponse'</a>,
--   <a>createArchiveResponse_httpStatus</a> - The response's http status
--   code.
newCreateArchiveResponse :: Int -> CreateArchiveResponse

-- | <i>See:</i> <a>newDeactivateEventSource</a> smart constructor.
data DeactivateEventSource
DeactivateEventSource' :: Text -> DeactivateEventSource

-- | Create a value of <a>DeactivateEventSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeactivateEventSource'</a>,
--   <a>deactivateEventSource_name</a> - The name of the partner event
--   source to deactivate.
newDeactivateEventSource :: Text -> DeactivateEventSource

-- | <i>See:</i> <a>newDeactivateEventSourceResponse</a> smart constructor.
data DeactivateEventSourceResponse
DeactivateEventSourceResponse' :: DeactivateEventSourceResponse

-- | Create a value of <a>DeactivateEventSourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeactivateEventSourceResponse :: DeactivateEventSourceResponse

-- | <i>See:</i> <a>newDeleteEventBus</a> smart constructor.
data DeleteEventBus
DeleteEventBus' :: Text -> DeleteEventBus

-- | Create a value of <a>DeleteEventBus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteEventBus'</a>, <a>deleteEventBus_name</a> - The
--   name of the event bus to delete.
newDeleteEventBus :: Text -> DeleteEventBus

-- | <i>See:</i> <a>newDeleteEventBusResponse</a> smart constructor.
data DeleteEventBusResponse
DeleteEventBusResponse' :: DeleteEventBusResponse

-- | Create a value of <a>DeleteEventBusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteEventBusResponse :: DeleteEventBusResponse
newtype ApiDestinationHttpMethod
ApiDestinationHttpMethod' :: Text -> ApiDestinationHttpMethod
[fromApiDestinationHttpMethod] :: ApiDestinationHttpMethod -> Text
pattern ApiDestinationHttpMethod_DELETE :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_GET :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_HEAD :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_OPTIONS :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PATCH :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_POST :: ApiDestinationHttpMethod
pattern ApiDestinationHttpMethod_PUT :: ApiDestinationHttpMethod
newtype ApiDestinationState
ApiDestinationState' :: Text -> ApiDestinationState
[fromApiDestinationState] :: ApiDestinationState -> Text
pattern ApiDestinationState_ACTIVE :: ApiDestinationState
pattern ApiDestinationState_INACTIVE :: ApiDestinationState
newtype ArchiveState
ArchiveState' :: Text -> ArchiveState
[fromArchiveState] :: ArchiveState -> Text
pattern ArchiveState_CREATE_FAILED :: ArchiveState
pattern ArchiveState_CREATING :: ArchiveState
pattern ArchiveState_DISABLED :: ArchiveState
pattern ArchiveState_ENABLED :: ArchiveState
pattern ArchiveState_UPDATE_FAILED :: ArchiveState
pattern ArchiveState_UPDATING :: ArchiveState
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
newtype ConnectionAuthorizationType
ConnectionAuthorizationType' :: Text -> ConnectionAuthorizationType
[fromConnectionAuthorizationType] :: ConnectionAuthorizationType -> Text
pattern ConnectionAuthorizationType_API_KEY :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_BASIC :: ConnectionAuthorizationType
pattern ConnectionAuthorizationType_OAUTH_CLIENT_CREDENTIALS :: ConnectionAuthorizationType
newtype ConnectionOAuthHttpMethod
ConnectionOAuthHttpMethod' :: Text -> ConnectionOAuthHttpMethod
[fromConnectionOAuthHttpMethod] :: ConnectionOAuthHttpMethod -> Text
pattern ConnectionOAuthHttpMethod_GET :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_POST :: ConnectionOAuthHttpMethod
pattern ConnectionOAuthHttpMethod_PUT :: ConnectionOAuthHttpMethod
newtype ConnectionState
ConnectionState' :: Text -> ConnectionState
[fromConnectionState] :: ConnectionState -> Text
pattern ConnectionState_AUTHORIZED :: ConnectionState
pattern ConnectionState_AUTHORIZING :: ConnectionState
pattern ConnectionState_CREATING :: ConnectionState
pattern ConnectionState_DEAUTHORIZED :: ConnectionState
pattern ConnectionState_DEAUTHORIZING :: ConnectionState
pattern ConnectionState_DELETING :: ConnectionState
pattern ConnectionState_UPDATING :: ConnectionState
newtype EventSourceState
EventSourceState' :: Text -> EventSourceState
[fromEventSourceState] :: EventSourceState -> Text
pattern EventSourceState_ACTIVE :: EventSourceState
pattern EventSourceState_DELETED :: EventSourceState
pattern EventSourceState_PENDING :: EventSourceState
newtype LaunchType
LaunchType' :: Text -> LaunchType
[fromLaunchType] :: LaunchType -> Text
pattern LaunchType_EC2 :: LaunchType
pattern LaunchType_EXTERNAL :: LaunchType
pattern LaunchType_FARGATE :: LaunchType
newtype PlacementConstraintType
PlacementConstraintType' :: Text -> PlacementConstraintType
[fromPlacementConstraintType] :: PlacementConstraintType -> Text
pattern PlacementConstraintType_DistinctInstance :: PlacementConstraintType
pattern PlacementConstraintType_MemberOf :: PlacementConstraintType
newtype PlacementStrategyType
PlacementStrategyType' :: Text -> PlacementStrategyType
[fromPlacementStrategyType] :: PlacementStrategyType -> Text
pattern PlacementStrategyType_Binpack :: PlacementStrategyType
pattern PlacementStrategyType_Random :: PlacementStrategyType
pattern PlacementStrategyType_Spread :: PlacementStrategyType
newtype PropagateTags
PropagateTags' :: Text -> PropagateTags
[fromPropagateTags] :: PropagateTags -> Text
pattern PropagateTags_TASK_DEFINITION :: PropagateTags
newtype ReplayState
ReplayState' :: Text -> ReplayState
[fromReplayState] :: ReplayState -> Text
pattern ReplayState_CANCELLED :: ReplayState
pattern ReplayState_CANCELLING :: ReplayState
pattern ReplayState_COMPLETED :: ReplayState
pattern ReplayState_FAILED :: ReplayState
pattern ReplayState_RUNNING :: ReplayState
pattern ReplayState_STARTING :: ReplayState
newtype RuleState
RuleState' :: Text -> RuleState
[fromRuleState] :: RuleState -> Text
pattern RuleState_DISABLED :: RuleState
pattern RuleState_ENABLED :: RuleState

-- | Contains details about an API destination.
--   
--   <i>See:</i> <a>newApiDestination</a> smart constructor.
data ApiDestination
ApiDestination' :: Maybe POSIX -> Maybe ApiDestinationHttpMethod -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Natural -> Maybe ApiDestinationState -> Maybe Text -> Maybe Text -> ApiDestination

-- | Create a value of <a>ApiDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ApiDestination'</a>,
--   <a>apiDestination_creationTime</a> - A time stamp for the time that
--   the API destination was created.
--   
--   <a>$sel:httpMethod:ApiDestination'</a>,
--   <a>apiDestination_httpMethod</a> - The method to use to connect to the
--   HTTP endpoint.
--   
--   <a>$sel:invocationEndpoint:ApiDestination'</a>,
--   <a>apiDestination_invocationEndpoint</a> - The URL to the endpoint for
--   the API destination.
--   
--   <a>$sel:lastModifiedTime:ApiDestination'</a>,
--   <a>apiDestination_lastModifiedTime</a> - A time stamp for the time
--   that the API destination was last modified.
--   
--   <a>$sel:name:ApiDestination'</a>, <a>apiDestination_name</a> - The
--   name of the API destination.
--   
--   <a>$sel:invocationRateLimitPerSecond:ApiDestination'</a>,
--   <a>apiDestination_invocationRateLimitPerSecond</a> - The maximum
--   number of invocations per second to send to the HTTP endpoint.
--   
--   <a>$sel:apiDestinationState:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationState</a> - The state of the API
--   destination.
--   
--   <a>$sel:connectionArn:ApiDestination'</a>,
--   <a>apiDestination_connectionArn</a> - The ARN of the connection
--   specified for the API destination.
--   
--   <a>$sel:apiDestinationArn:ApiDestination'</a>,
--   <a>apiDestination_apiDestinationArn</a> - The ARN of the API
--   destination.
newApiDestination :: ApiDestination

-- | An <tt>Archive</tt> object that contains details about an archive.
--   
--   <i>See:</i> <a>newArchive</a> smart constructor.
data Archive
Archive' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe ArchiveState -> Maybe Integer -> Maybe Text -> Maybe Natural -> Maybe Text -> Archive

-- | Create a value of <a>Archive</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Archive'</a>, <a>archive_creationTime</a> - The
--   time stamp for the time that the archive was created.
--   
--   <a>$sel:sizeBytes:Archive'</a>, <a>archive_sizeBytes</a> - The size of
--   the archive, in bytes.
--   
--   <a>$sel:eventSourceArn:Archive'</a>, <a>archive_eventSourceArn</a> -
--   The ARN of the event bus associated with the archive. Only events from
--   this event bus are sent to the archive.
--   
--   <a>$sel:state:Archive'</a>, <a>archive_state</a> - The current state
--   of the archive.
--   
--   <a>$sel:eventCount:Archive'</a>, <a>archive_eventCount</a> - The
--   number of events in the archive.
--   
--   <a>$sel:archiveName:Archive'</a>, <a>archive_archiveName</a> - The
--   name of the archive.
--   
--   <a>$sel:retentionDays:Archive'</a>, <a>archive_retentionDays</a> - The
--   number of days to retain events in the archive before they are
--   deleted.
--   
--   <a>$sel:stateReason:Archive'</a>, <a>archive_stateReason</a> - A
--   description for the reason that the archive is in the current state.
newArchive :: Archive

-- | This structure specifies the VPC subnets and security groups for the
--   task, and whether a public IP address is to be used. This structure is
--   relevant only for ECS tasks that use the <tt>awsvpc</tt> network mode.
--   
--   <i>See:</i> <a>newAwsVpcConfiguration</a> smart constructor.
data AwsVpcConfiguration
AwsVpcConfiguration' :: Maybe [Text] -> Maybe AssignPublicIp -> [Text] -> AwsVpcConfiguration

-- | Create a value of <a>AwsVpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_securityGroups</a> - Specifies the security
--   groups associated with the task. These security groups must all be in
--   the same VPC. You can specify as many as five security groups. If you
--   do not specify a security group, the default security group for the
--   VPC is used.
--   
--   <a>$sel:assignPublicIp:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_assignPublicIp</a> - Specifies whether the
--   task's elastic network interface receives a public IP address. You can
--   specify <tt>ENABLED</tt> only when <tt>LaunchType</tt> in
--   <tt>EcsParameters</tt> is set to <tt>FARGATE</tt>.
--   
--   <a>$sel:subnets:AwsVpcConfiguration'</a>,
--   <a>awsVpcConfiguration_subnets</a> - Specifies the subnets associated
--   with the task. These subnets must all be in the same VPC. You can
--   specify as many as 16 subnets.
newAwsVpcConfiguration :: AwsVpcConfiguration

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. This parameter is
--   used only if the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchArrayProperties</a> smart constructor.
data BatchArrayProperties
BatchArrayProperties' :: Maybe Int -> BatchArrayProperties

-- | Create a value of <a>BatchArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:BatchArrayProperties'</a>,
--   <a>batchArrayProperties_size</a> - The size of the array, if this is
--   an array batch job. Valid values are integers between 2 and 10,000.
newBatchArrayProperties :: BatchArrayProperties

-- | The custom parameters to be used when the target is an Batch job.
--   
--   <i>See:</i> <a>newBatchParameters</a> smart constructor.
data BatchParameters
BatchParameters' :: Maybe BatchRetryStrategy -> Maybe BatchArrayProperties -> Text -> Text -> BatchParameters

-- | Create a value of <a>BatchParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryStrategy:BatchParameters'</a>,
--   <a>batchParameters_retryStrategy</a> - The retry strategy to use for
--   failed jobs, if the target is an Batch job. The retry strategy is the
--   number of times to retry the failed job execution. Valid values are
--   1–10. When you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <a>$sel:arrayProperties:BatchParameters'</a>,
--   <a>batchParameters_arrayProperties</a> - The array properties for the
--   submitted job, such as the size of the array. The array size can be
--   between 2 and 10,000. If you specify array properties for a job, it
--   becomes an array job. This parameter is used only if the target is an
--   Batch job.
--   
--   <a>$sel:jobDefinition:BatchParameters'</a>,
--   <a>batchParameters_jobDefinition</a> - The ARN or name of the job
--   definition to use if the event target is an Batch job. This job
--   definition must already exist.
--   
--   <a>$sel:jobName:BatchParameters'</a>, <a>batchParameters_jobName</a> -
--   The name to use for this execution of the job, if the target is an
--   Batch job.
newBatchParameters :: Text -> Text -> BatchParameters

-- | The retry strategy to use for failed jobs, if the target is an Batch
--   job. If you specify a retry strategy here, it overrides the retry
--   strategy defined in the job definition.
--   
--   <i>See:</i> <a>newBatchRetryStrategy</a> smart constructor.
data BatchRetryStrategy
BatchRetryStrategy' :: Maybe Int -> BatchRetryStrategy

-- | Create a value of <a>BatchRetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attempts:BatchRetryStrategy'</a>,
--   <a>batchRetryStrategy_attempts</a> - The number of times to attempt to
--   retry, if the job fails. Valid values are 1–10.
newBatchRetryStrategy :: BatchRetryStrategy

-- | The details of a capacity provider strategy. To learn more, see
--   <a>CapacityProviderStrategyItem</a> in the Amazon ECS API Reference.
--   
--   <i>See:</i> <a>newCapacityProviderStrategyItem</a> smart constructor.
data CapacityProviderStrategyItem
CapacityProviderStrategyItem' :: Maybe Natural -> Maybe Natural -> Text -> CapacityProviderStrategyItem

-- | Create a value of <a>CapacityProviderStrategyItem</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:base:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_base</a> - The base value designates
--   how many tasks, at a minimum, to run on the specified capacity
--   provider. Only one capacity provider in a capacity provider strategy
--   can have a base defined. If no value is specified, the default value
--   of 0 is used.
--   
--   <a>$sel:weight:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_weight</a> - The weight value
--   designates the relative percentage of the total number of tasks
--   launched that should use the specified capacity provider. The weight
--   value is taken into consideration after the base value, if defined, is
--   satisfied.
--   
--   <a>$sel:capacityProvider:CapacityProviderStrategyItem'</a>,
--   <a>capacityProviderStrategyItem_capacityProvider</a> - The short name
--   of the capacity provider.
newCapacityProviderStrategyItem :: Text -> CapacityProviderStrategyItem

-- | A JSON string which you can use to limit the event bus permissions you
--   are granting to only accounts that fulfill the condition. Currently,
--   the only supported condition is membership in a certain Amazon Web
--   Services organization. The string must contain <tt>Type</tt>,
--   <tt>Key</tt>, and <tt>Value</tt> fields. The <tt>Value</tt> field
--   specifies the ID of the Amazon Web Services organization. Following is
--   an example value for <tt>Condition</tt>:
--   
--   <pre>
--   '{"Type" : "StringEquals", "Key": "aws:PrincipalOrgID", "Value": "o-1234567890"}'
--   </pre>
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Text -> Text -> Text -> Condition

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Condition'</a>, <a>condition_type</a> - Specifies the
--   type of condition. Currently the only supported value is
--   <tt>StringEquals</tt>.
--   
--   <a>$sel:key:Condition'</a>, <a>condition_key</a> - Specifies the key
--   for the condition. Currently the only supported key is
--   <tt>aws:PrincipalOrgID</tt>.
--   
--   <a>$sel:value:Condition'</a>, <a>condition_value</a> - Specifies the
--   value for the key. Currently, this must be the ID of the organization.
newCondition :: Text -> Text -> Text -> Condition

-- | Contains information about a connection.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe ConnectionAuthorizationType -> Maybe Text -> Maybe Text -> Maybe ConnectionState -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   A time stamp for the time that the connection was created.
--   
--   <a>$sel:lastModifiedTime:Connection'</a>,
--   <a>connection_lastModifiedTime</a> - A time stamp for the time that
--   the connection was last modified.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection.
--   
--   <a>$sel:lastAuthorizedTime:Connection'</a>,
--   <a>connection_lastAuthorizedTime</a> - A time stamp for the time that
--   the connection was last authorized.
--   
--   <a>$sel:authorizationType:Connection'</a>,
--   <a>connection_authorizationType</a> - The authorization type specified
--   for the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The ARN of the connection.
--   
--   <a>$sel:stateReason:Connection'</a>, <a>connection_stateReason</a> -
--   The reason that the connection is in the connection state.
--   
--   <a>$sel:connectionState:Connection'</a>,
--   <a>connection_connectionState</a> - The state of the connection.
newConnection :: Connection

-- | Contains the authorization parameters for the connection if API Key is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionApiKeyAuthResponseParameters</a> smart
--   constructor.
data ConnectionApiKeyAuthResponseParameters
ConnectionApiKeyAuthResponseParameters' :: Maybe Text -> ConnectionApiKeyAuthResponseParameters

-- | Create a value of <a>ConnectionApiKeyAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:ConnectionApiKeyAuthResponseParameters'</a>,
--   <a>connectionApiKeyAuthResponseParameters_apiKeyName</a> - The name of
--   the header to use for the <tt>APIKeyValue</tt> used for authorization.
newConnectionApiKeyAuthResponseParameters :: ConnectionApiKeyAuthResponseParameters

-- | Contains the authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newConnectionAuthResponseParameters</a> smart
--   constructor.
data ConnectionAuthResponseParameters
ConnectionAuthResponseParameters' :: Maybe ConnectionOAuthResponseParameters -> Maybe ConnectionHttpParameters -> Maybe ConnectionApiKeyAuthResponseParameters -> Maybe ConnectionBasicAuthResponseParameters -> ConnectionAuthResponseParameters

-- | Create a value of <a>ConnectionAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_oAuthParameters</a> - The OAuth
--   parameters to use for authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_invocationHttpParameters</a> -
--   Additional parameters for the connection that are passed through with
--   every invocation to the HTTP endpoint.
--   
--   <a>$sel:apiKeyAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_apiKeyAuthParameters</a> - The API
--   Key parameters to use for authorization.
--   
--   <a>$sel:basicAuthParameters:ConnectionAuthResponseParameters'</a>,
--   <a>connectionAuthResponseParameters_basicAuthParameters</a> - The
--   authorization parameters for Basic authorization.
newConnectionAuthResponseParameters :: ConnectionAuthResponseParameters

-- | Contains the authorization parameters for the connection if Basic is
--   specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionBasicAuthResponseParameters</a> smart
--   constructor.
data ConnectionBasicAuthResponseParameters
ConnectionBasicAuthResponseParameters' :: Maybe Text -> ConnectionBasicAuthResponseParameters

-- | Create a value of <a>ConnectionBasicAuthResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:ConnectionBasicAuthResponseParameters'</a>,
--   <a>connectionBasicAuthResponseParameters_username</a> - The user name
--   to use for Basic authorization.
newConnectionBasicAuthResponseParameters :: ConnectionBasicAuthResponseParameters

-- | Additional parameter included in the body. You can include up to 100
--   additional body parameters per request. An event payload cannot exceed
--   64 KB.
--   
--   <i>See:</i> <a>newConnectionBodyParameter</a> smart constructor.
data ConnectionBodyParameter
ConnectionBodyParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionBodyParameter

-- | Create a value of <a>ConnectionBodyParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_isValueSecret</a> - Specified whether the
--   value is secret.
--   
--   <a>$sel:value:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionBodyParameter'</a>,
--   <a>connectionBodyParameter_key</a> - The key for the parameter.
newConnectionBodyParameter :: ConnectionBodyParameter

-- | Additional parameter included in the header. You can include up to 100
--   additional header parameters per request. An event payload cannot
--   exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionHeaderParameter</a> smart constructor.
data ConnectionHeaderParameter
ConnectionHeaderParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionHeaderParameter

-- | Create a value of <a>ConnectionHeaderParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_isValueSecret</a> - Specified whether the
--   value is a secret.
--   
--   <a>$sel:value:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_value</a> - The value associated with the
--   key.
--   
--   <a>$sel:key:ConnectionHeaderParameter'</a>,
--   <a>connectionHeaderParameter_key</a> - The key for the parameter.
newConnectionHeaderParameter :: ConnectionHeaderParameter

-- | Contains additional parameters for the connection.
--   
--   <i>See:</i> <a>newConnectionHttpParameters</a> smart constructor.
data ConnectionHttpParameters
ConnectionHttpParameters' :: Maybe [ConnectionQueryStringParameter] -> Maybe [ConnectionHeaderParameter] -> Maybe [ConnectionBodyParameter] -> ConnectionHttpParameters

-- | Create a value of <a>ConnectionHttpParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryStringParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_queryStringParameters</a> - Contains
--   additional query string parameters for the connection.
--   
--   <a>$sel:headerParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_headerParameters</a> - Contains additional
--   header parameters for the connection.
--   
--   <a>$sel:bodyParameters:ConnectionHttpParameters'</a>,
--   <a>connectionHttpParameters_bodyParameters</a> - Contains additional
--   body string parameters for the connection.
newConnectionHttpParameters :: ConnectionHttpParameters

-- | Contains the client response parameters for the connection when OAuth
--   is specified as the authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthClientResponseParameters</a> smart
--   constructor.
data ConnectionOAuthClientResponseParameters
ConnectionOAuthClientResponseParameters' :: Maybe Text -> ConnectionOAuthClientResponseParameters

-- | Create a value of <a>ConnectionOAuthClientResponseParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:ConnectionOAuthClientResponseParameters'</a>,
--   <a>connectionOAuthClientResponseParameters_clientID</a> - The client
--   ID associated with the response to the connection request.
newConnectionOAuthClientResponseParameters :: ConnectionOAuthClientResponseParameters

-- | Contains the response parameters when OAuth is specified as the
--   authorization type.
--   
--   <i>See:</i> <a>newConnectionOAuthResponseParameters</a> smart
--   constructor.
data ConnectionOAuthResponseParameters
ConnectionOAuthResponseParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe ConnectionOAuthClientResponseParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> ConnectionOAuthResponseParameters

-- | Create a value of <a>ConnectionOAuthResponseParameters</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_httpMethod</a> - The method used
--   to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_clientParameters</a> - A
--   <tt>ConnectionOAuthClientResponseParameters</tt> object that contains
--   details about the client parameters returned when OAuth is specified
--   as the authorization type.
--   
--   <a>$sel:oAuthHttpParameters:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_oAuthHttpParameters</a> - The
--   additional HTTP parameters used for the OAuth authorization request.
--   
--   <a>$sel:authorizationEndpoint:ConnectionOAuthResponseParameters'</a>,
--   <a>connectionOAuthResponseParameters_authorizationEndpoint</a> - The
--   URL to the HTTP endpoint that authorized the request.
newConnectionOAuthResponseParameters :: ConnectionOAuthResponseParameters

-- | Additional query string parameter for the connection. You can include
--   up to 100 additional query string parameters per request. Each
--   additional parameter counts towards the event payload size, which
--   cannot exceed 64 KB.
--   
--   <i>See:</i> <a>newConnectionQueryStringParameter</a> smart
--   constructor.
data ConnectionQueryStringParameter
ConnectionQueryStringParameter' :: Maybe Bool -> Maybe Text -> Maybe Text -> ConnectionQueryStringParameter

-- | Create a value of <a>ConnectionQueryStringParameter</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isValueSecret:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_isValueSecret</a> - Specifies
--   whether the value is secret.
--   
--   <a>$sel:value:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_value</a> - The value associated
--   with the key for the query string parameter.
--   
--   <a>$sel:key:ConnectionQueryStringParameter'</a>,
--   <a>connectionQueryStringParameter_key</a> - The key for a query string
--   parameter.
newConnectionQueryStringParameter :: ConnectionQueryStringParameter

-- | Contains the API key authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data CreateConnectionApiKeyAuthRequestParameters
CreateConnectionApiKeyAuthRequestParameters' :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | Create a value of <a>CreateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyName:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
--   
--   <a>$sel:apiKeyValue:CreateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>createConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value for the API key to use for authorization.
newCreateConnectionApiKeyAuthRequestParameters :: Text -> Text -> CreateConnectionApiKeyAuthRequestParameters

-- | Contains the authorization parameters for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionAuthRequestParameters
CreateConnectionAuthRequestParameters' :: Maybe CreateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe CreateConnectionApiKeyAuthRequestParameters -> Maybe CreateConnectionBasicAuthRequestParameters -> CreateConnectionAuthRequestParameters

-- | Create a value of <a>CreateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>CreateConnectionOAuthRequestParameters</tt> object that contains
--   the OAuth authorization parameters to use for the connection.
--   
--   
--   <a>$sel:invocationHttpParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the API key
--   authorization parameters to use for the connection. Note that if you
--   include additional parameters for the target of a rule via
--   <tt>HttpParameters</tt>, including query strings, the parameters added
--   for the connection take precedence.
--   
--   
--   <a>$sel:apiKeyAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>CreateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the API key authorization parameters to use for the
--   connection.
--   
--   
--   <a>$sel:basicAuthParameters:CreateConnectionAuthRequestParameters'</a>,
--   <a>createConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>CreateConnectionBasicAuthRequestParameters</tt> object that
--   contains the Basic authorization parameters to use for the connection.
newCreateConnectionAuthRequestParameters :: CreateConnectionAuthRequestParameters

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionBasicAuthRequestParameters
CreateConnectionBasicAuthRequestParameters' :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | Create a value of <a>CreateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:CreateConnectionBasicAuthRequestParameters'</a>,
--   <a>createConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newCreateConnectionBasicAuthRequestParameters :: Text -> Text -> CreateConnectionBasicAuthRequestParameters

-- | Contains the Basic authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data CreateConnectionOAuthClientRequestParameters
CreateConnectionOAuthClientRequestParameters' :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | Create a value of <a>CreateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization for the connection.
--   
--   
--   <a>$sel:clientSecret:CreateConnectionOAuthClientRequestParameters'</a>,
--   <a>createConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret associated with the client ID to use for OAuth
--   authorization for the connection.
newCreateConnectionOAuthClientRequestParameters :: Text -> Text -> CreateConnectionOAuthClientRequestParameters

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newCreateConnectionOAuthRequestParameters</a> smart
--   constructor.
data CreateConnectionOAuthRequestParameters
CreateConnectionOAuthRequestParameters' :: Maybe ConnectionHttpParameters -> CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | Create a value of <a>CreateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:oAuthHttpParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_oAuthHttpParameters</a> - A
--   <tt>ConnectionHttpParameters</tt> object that contains details about
--   the additional parameters to use for the connection.
--   
--   <a>$sel:clientParameters:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>CreateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters for OAuth authorization.
--   
--   
--   <a>$sel:authorizationEndpoint:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
--   
--   <a>$sel:httpMethod:CreateConnectionOAuthRequestParameters'</a>,
--   <a>createConnectionOAuthRequestParameters_httpMethod</a> - The method
--   to use for the authorization request.
newCreateConnectionOAuthRequestParameters :: CreateConnectionOAuthClientRequestParameters -> Text -> ConnectionOAuthHttpMethod -> CreateConnectionOAuthRequestParameters

-- | A <tt>DeadLetterConfig</tt> object that contains information about a
--   dead-letter queue configuration.
--   
--   <i>See:</i> <a>newDeadLetterConfig</a> smart constructor.
data DeadLetterConfig
DeadLetterConfig' :: Maybe Text -> DeadLetterConfig

-- | Create a value of <a>DeadLetterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeadLetterConfig'</a>, <a>deadLetterConfig_arn</a> - The
--   ARN of the SQS queue specified as the target for the dead-letter
--   queue.
newDeadLetterConfig :: DeadLetterConfig

-- | The custom parameters to be used when the target is an Amazon ECS
--   task.
--   
--   <i>See:</i> <a>newEcsParameters</a> smart constructor.
data EcsParameters
EcsParameters' :: Maybe Text -> Maybe PropagateTags -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [PlacementConstraint] -> Maybe [PlacementStrategy] -> Maybe LaunchType -> Maybe [CapacityProviderStrategyItem] -> Maybe Natural -> Maybe NetworkConfiguration -> Maybe [Tag] -> Maybe Bool -> Text -> EcsParameters

-- | Create a value of <a>EcsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':EcsParameters'</a>, <a>ecsParameters_group</a> -
--   Specifies an ECS task group for the task. The maximum length is 255
--   characters.
--   
--   <a>$sel:propagateTags:EcsParameters'</a>,
--   <a>ecsParameters_propagateTags</a> - Specifies whether to propagate
--   the tags from the task definition to the task. If no value is
--   specified, the tags are not propagated. Tags can only be propagated to
--   the task during task creation. To add tags to a task after task
--   creation, use the TagResource API action.
--   
--   <a>$sel:platformVersion:EcsParameters'</a>,
--   <a>ecsParameters_platformVersion</a> - Specifies the platform version
--   for the task. Specify only the numeric portion of the platform
--   version, such as <tt>1.1.0</tt>.
--   
--   This structure is used only if <tt>LaunchType</tt> is
--   <tt>FARGATE</tt>. For more information about valid platform versions,
--   see <a>Fargate Platform Versions</a> in the <i>Amazon Elastic
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:enableECSManagedTags:EcsParameters'</a>,
--   <a>ecsParameters_enableECSManagedTags</a> - Specifies whether to
--   enable Amazon ECS managed tags for the task. For more information, see
--   <a>Tagging Your Amazon ECS Resources</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:referenceId:EcsParameters'</a>,
--   <a>ecsParameters_referenceId</a> - The reference ID to use for the
--   task.
--   
--   <a>$sel:placementConstraints:EcsParameters'</a>,
--   <a>ecsParameters_placementConstraints</a> - An array of placement
--   constraint objects to use for the task. You can specify up to 10
--   constraints per task (including constraints in the task definition and
--   those specified at runtime).
--   
--   <a>$sel:placementStrategy:EcsParameters'</a>,
--   <a>ecsParameters_placementStrategy</a> - The placement strategy
--   objects to use for the task. You can specify a maximum of five
--   strategy rules per task.
--   
--   <a>$sel:launchType:EcsParameters'</a>, <a>ecsParameters_launchType</a>
--   - Specifies the launch type on which your task is running. The launch
--   type that you specify here must match one of the launch type
--   (compatibilities) of the target task. The <tt>FARGATE</tt> value is
--   supported only in the Regions where Fargate witt Amazon ECS is
--   supported. For more information, see <a>Fargate on Amazon ECS</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:capacityProviderStrategy:EcsParameters'</a>,
--   <a>ecsParameters_capacityProviderStrategy</a> - The capacity provider
--   strategy to use for the task.
--   
--   If a <tt>capacityProviderStrategy</tt> is specified, the
--   <tt>launchType</tt> parameter must be omitted. If no
--   <tt>capacityProviderStrategy</tt> or launchType is specified, the
--   <tt>defaultCapacityProviderStrategy</tt> for the cluster is used.
--   
--   <a>$sel:taskCount:EcsParameters'</a>, <a>ecsParameters_taskCount</a> -
--   The number of tasks to create based on <tt>TaskDefinition</tt>. The
--   default is 1.
--   
--   <a>$sel:networkConfiguration:EcsParameters'</a>,
--   <a>ecsParameters_networkConfiguration</a> - Use this structure if the
--   Amazon ECS task uses the <tt>awsvpc</tt> network mode. This structure
--   specifies the VPC subnets and security groups associated with the
--   task, and whether a public IP address is to be used. This structure is
--   required if <tt>LaunchType</tt> is <tt>FARGATE</tt> because the
--   <tt>awsvpc</tt> mode is required for Fargate tasks.
--   
--   If you specify <tt>NetworkConfiguration</tt> when the target ECS task
--   does not use the <tt>awsvpc</tt> network mode, the task fails.
--   
--   <a>$sel:tags:EcsParameters'</a>, <a>ecsParameters_tags</a> - The
--   metadata that you apply to the task to help you categorize and
--   organize them. Each tag consists of a key and an optional value, both
--   of which you define. To learn more, see <a>RunTask</a> in the Amazon
--   ECS API Reference.
--   
--   <a>$sel:enableExecuteCommand:EcsParameters'</a>,
--   <a>ecsParameters_enableExecuteCommand</a> - Whether or not to enable
--   the execute command functionality for the containers in this task. If
--   true, this enables execute command functionality on all containers in
--   the task.
--   
--   <a>$sel:taskDefinitionArn:EcsParameters'</a>,
--   <a>ecsParameters_taskDefinitionArn</a> - The ARN of the task
--   definition to use if the event target is an Amazon ECS task.
newEcsParameters :: Text -> EcsParameters

-- | An event bus receives events from a source and routes them to rules
--   associated with that event bus. Your account's default event bus
--   receives events from Amazon Web Services services. A custom event bus
--   can receive events from your custom applications and services. A
--   partner event bus receives events from an event source created by an
--   SaaS partner. These events come from the partners services or
--   applications.
--   
--   <i>See:</i> <a>newEventBus</a> smart constructor.
data EventBus
EventBus' :: Maybe Text -> Maybe Text -> Maybe Text -> EventBus

-- | Create a value of <a>EventBus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:EventBus'</a>, <a>eventBus_arn</a> - The ARN of the event
--   bus.
--   
--   <a>$sel:name:EventBus'</a>, <a>eventBus_name</a> - The name of the
--   event bus.
--   
--   <a>$sel:policy:EventBus'</a>, <a>eventBus_policy</a> - The permissions
--   policy of the event bus, describing which other Amazon Web Services
--   accounts can write events to this event bus.
newEventBus :: EventBus

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newEventSource</a> smart constructor.
data EventSource
EventSource' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> EventSource

-- | Create a value of <a>EventSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:EventSource'</a>, <a>eventSource_creationTime</a>
--   - The date and time the event source was created.
--   
--   <a>$sel:state:EventSource'</a>, <a>eventSource_state</a> - The state
--   of the event source. If it is ACTIVE, you have already created a
--   matching event bus for this event source, and that event bus is
--   active. If it is PENDING, either you haven't yet created a matching
--   event bus, or that event bus is deactivated. If it is DELETED, you
--   have created a matching event bus, but the event source has since been
--   deleted.
--   
--   <a>$sel:arn:EventSource'</a>, <a>eventSource_arn</a> - The ARN of the
--   event source.
--   
--   <a>$sel:createdBy:EventSource'</a>, <a>eventSource_createdBy</a> - The
--   name of the partner that created the event source.
--   
--   <a>$sel:name:EventSource'</a>, <a>eventSource_name</a> - The name of
--   the event source.
--   
--   <a>$sel:expirationTime:EventSource'</a>,
--   <a>eventSource_expirationTime</a> - The date and time that the event
--   source will expire, if the Amazon Web Services account doesn't create
--   a matching event bus for it.
newEventSource :: EventSource

-- | These are custom parameter to be used when the target is an API
--   Gateway REST APIs or EventBridge ApiDestinations. In the latter case,
--   these are merged with any InvocationParameters specified on the
--   Connection, with any values from the Connection taking precedence.
--   
--   <i>See:</i> <a>newHttpParameters</a> smart constructor.
data HttpParameters
HttpParameters' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> HttpParameters

-- | Create a value of <a>HttpParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pathParameterValues:HttpParameters'</a>,
--   <a>httpParameters_pathParameterValues</a> - The path parameter values
--   to be used to populate API Gateway REST API or EventBridge
--   ApiDestination path wildcards ("*").
--   
--   <a>$sel:queryStringParameters:HttpParameters'</a>,
--   <a>httpParameters_queryStringParameters</a> - The query string
--   keys/values that need to be sent as part of request invoking the API
--   Gateway REST API or EventBridge ApiDestination.
--   
--   <a>$sel:headerParameters:HttpParameters'</a>,
--   <a>httpParameters_headerParameters</a> - The headers that need to be
--   sent as part of request invoking the API Gateway REST API or
--   EventBridge ApiDestination.
newHttpParameters :: HttpParameters

-- | Contains the parameters needed for you to provide custom input to a
--   target based on one or more pieces of data extracted from the event.
--   
--   <i>See:</i> <a>newInputTransformer</a> smart constructor.
data InputTransformer
InputTransformer' :: Maybe (HashMap Text Text) -> Text -> InputTransformer

-- | Create a value of <a>InputTransformer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputPathsMap:InputTransformer'</a>,
--   <a>inputTransformer_inputPathsMap</a> - Map of JSON paths to be
--   extracted from the event. You can then insert these in the template in
--   <tt>InputTemplate</tt> to produce the output you want to be sent to
--   the target.
--   
--   <tt>InputPathsMap</tt> is an array key-value pairs, where each value
--   is a valid JSON path. You can have as many as 100 key-value pairs. You
--   must use JSON dot notation, not bracket notation.
--   
--   The keys cannot start with "Amazon Web Services."
--   
--   <a>$sel:inputTemplate:InputTransformer'</a>,
--   <a>inputTransformer_inputTemplate</a> - Input template where you
--   specify placeholders that will be filled with the values of the keys
--   from <tt>InputPathsMap</tt> to customize the data sent to the target.
--   Enclose each <tt>InputPathsMaps</tt> value in brackets:
--   &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.
--   
--   If <tt>InputTemplate</tt> is a JSON object (surrounded by curly
--   braces), the following restrictions apply:
--   
--   <ul>
--   <li>The placeholder cannot be used as an object key.</li>
--   </ul>
--   
--   The following example shows the syntax for using
--   <tt>InputPathsMap</tt> and <tt>InputTemplate</tt>.
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   To have the <tt>InputTemplate</tt> include quote marks within a JSON
--   string, escape each quote marks with a slash, as in the following
--   example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""
--   </pre>
--   
--   <pre>
--   }
--   </pre>
--   
--   The <tt>InputTemplate</tt> can also be valid JSON with varibles in
--   quotes or out, as in the following example:
--   
--   <pre>
--   "InputTransformer":
--   </pre>
--   
--   <pre>
--   {
--   </pre>
--   
--   <pre>
--   "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
--   </pre>
--   
--   <pre>
--   "InputTemplate": '{"myInstance": &lt;instance&gt;,"myStatus": "&lt;instance&gt; is in state \"&lt;status&gt;\""}'
--   </pre>
--   
--   <pre>
--   }
--   </pre>
newInputTransformer :: Text -> InputTransformer

-- | This object enables you to specify a JSON path to extract from the
--   event and use as the partition key for the Amazon Kinesis data stream,
--   so that you can control the shard to which the event goes. If you do
--   not include this parameter, the default is to use the <tt>eventId</tt>
--   as the partition key.
--   
--   <i>See:</i> <a>newKinesisParameters</a> smart constructor.
data KinesisParameters
KinesisParameters' :: Text -> KinesisParameters

-- | Create a value of <a>KinesisParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionKeyPath:KinesisParameters'</a>,
--   <a>kinesisParameters_partitionKeyPath</a> - The JSON path to be
--   extracted from the event and used as the partition key. For more
--   information, see <a>Amazon Kinesis Streams Key Concepts</a> in the
--   <i>Amazon Kinesis Streams Developer Guide</i>.
newKinesisParameters :: Text -> KinesisParameters

-- | This structure specifies the network configuration for an ECS task.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AwsVpcConfiguration -> NetworkConfiguration

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsvpcConfiguration:NetworkConfiguration'</a>,
--   <a>networkConfiguration_awsvpcConfiguration</a> - Use this structure
--   to specify the VPC subnets and security groups for the task, and
--   whether a public IP address is to be used. This structure is relevant
--   only for ECS tasks that use the <tt>awsvpc</tt> network mode.
newNetworkConfiguration :: NetworkConfiguration

-- | A partner event source is created by an SaaS partner. If a customer
--   creates a partner event bus that matches this event source, that
--   Amazon Web Services account can receive events from the partner's
--   applications or services.
--   
--   <i>See:</i> <a>newPartnerEventSource</a> smart constructor.
data PartnerEventSource
PartnerEventSource' :: Maybe Text -> Maybe Text -> PartnerEventSource

-- | Create a value of <a>PartnerEventSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PartnerEventSource'</a>, <a>partnerEventSource_arn</a> -
--   The ARN of the partner event source.
--   
--   <a>$sel:name:PartnerEventSource'</a>, <a>partnerEventSource_name</a> -
--   The name of the partner event source.
newPartnerEventSource :: PartnerEventSource

-- | The Amazon Web Services account that a partner event source has been
--   offered to.
--   
--   <i>See:</i> <a>newPartnerEventSourceAccount</a> smart constructor.
data PartnerEventSourceAccount
PartnerEventSourceAccount' :: Maybe POSIX -> Maybe EventSourceState -> Maybe Text -> Maybe POSIX -> PartnerEventSourceAccount

-- | Create a value of <a>PartnerEventSourceAccount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_creationTime</a> - The date and time the
--   event source was created.
--   
--   <a>$sel:state:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_state</a> - The state of the event
--   source. If it is ACTIVE, you have already created a matching event bus
--   for this event source, and that event bus is active. If it is PENDING,
--   either you haven't yet created a matching event bus, or that event bus
--   is deactivated. If it is DELETED, you have created a matching event
--   bus, but the event source has since been deleted.
--   
--   <a>$sel:account:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_account</a> - The Amazon Web Services
--   account ID that the partner event source was offered to.
--   
--   <a>$sel:expirationTime:PartnerEventSourceAccount'</a>,
--   <a>partnerEventSourceAccount_expirationTime</a> - The date and time
--   that the event source will expire, if the Amazon Web Services account
--   doesn't create a matching event bus for it.
newPartnerEventSourceAccount :: PartnerEventSourceAccount

-- | An object representing a constraint on task placement. To learn more,
--   see <a>Task Placement Constraints</a> in the Amazon Elastic Container
--   Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementConstraint</a> smart constructor.
data PlacementConstraint
PlacementConstraint' :: Maybe Text -> Maybe PlacementConstraintType -> PlacementConstraint

-- | Create a value of <a>PlacementConstraint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:PlacementConstraint'</a>,
--   <a>placementConstraint_expression</a> - A cluster query language
--   expression to apply to the constraint. You cannot specify an
--   expression if the constraint type is <tt>distinctInstance</tt>. To
--   learn more, see <a>Cluster Query Language</a> in the Amazon Elastic
--   Container Service Developer Guide.
--   
--   <a>$sel:type':PlacementConstraint'</a>,
--   <a>placementConstraint_type</a> - The type of constraint. Use
--   distinctInstance to ensure that each task in a particular group is
--   running on a different container instance. Use memberOf to restrict
--   the selection to a group of valid candidates.
newPlacementConstraint :: PlacementConstraint

-- | The task placement strategy for a task or service. To learn more, see
--   <a>Task Placement Strategies</a> in the Amazon Elastic Container
--   Service Service Developer Guide.
--   
--   <i>See:</i> <a>newPlacementStrategy</a> smart constructor.
data PlacementStrategy
PlacementStrategy' :: Maybe Text -> Maybe PlacementStrategyType -> PlacementStrategy

-- | Create a value of <a>PlacementStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:PlacementStrategy'</a>, <a>placementStrategy_field</a> -
--   The field to apply the placement strategy against. For the spread
--   placement strategy, valid values are instanceId (or host, which has
--   the same effect), or any platform or custom attribute that is applied
--   to a container instance, such as attribute:ecs.availability-zone. For
--   the binpack placement strategy, valid values are cpu and memory. For
--   the random placement strategy, this field is not used.
--   
--   <a>$sel:type':PlacementStrategy'</a>, <a>placementStrategy_type</a> -
--   The type of placement strategy. The random placement strategy randomly
--   places tasks on available candidates. The spread placement strategy
--   spreads placement across available candidates evenly based on the
--   field parameter. The binpack strategy places tasks on available
--   candidates that have the least available amount of the resource that
--   is specified with the field parameter. For example, if you binpack on
--   memory, a task is placed on the instance with the least amount of
--   remaining memory (but still enough to run the task).
newPlacementStrategy :: PlacementStrategy

-- | Represents an event to be submitted.
--   
--   <i>See:</i> <a>newPutEventsRequestEntry</a> smart constructor.
data PutEventsRequestEntry
PutEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PutEventsRequestEntry

-- | Create a value of <a>PutEventsRequestEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_time</a> - The time stamp of the event, per
--   <a>RFC3339</a>. If no time stamp is provided, the time stamp of the
--   <a>PutEvents</a> call is used.
--   
--   <a>$sel:detailType:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detailType</a> - Free-form string used to
--   decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:eventBusName:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_eventBusName</a> - The name or ARN of the
--   event bus to receive the event. Only the rules that are associated
--   with this event bus are used to match the event. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:source:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_source</a> - The source of the event.
--   
--   <a>$sel:traceHeader:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_traceHeader</a> - An X-Ray trade header,
--   which is an http header (X-Amzn-Trace-Id) that contains the trace-id
--   associated with the event.
--   
--   To learn more about X-Ray trace headers, see <a>Tracing header</a> in
--   the X-Ray Developer Guide.
--   
--   <a>$sel:detail:PutEventsRequestEntry'</a>,
--   <a>putEventsRequestEntry_detail</a> - A valid JSON string. There is no
--   other schema imposed. The JSON string may contain fields and nested
--   subobjects.
newPutEventsRequestEntry :: PutEventsRequestEntry

-- | Represents an event that failed to be submitted.
--   
--   <i>See:</i> <a>newPutEventsResultEntry</a> smart constructor.
data PutEventsResultEntry
PutEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutEventsResultEntry

-- | Create a value of <a>PutEventsResultEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorCode</a> - The error code that indicates
--   why the event submission failed.
--   
--   <a>$sel:errorMessage:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_errorMessage</a> - The error message that
--   explains why the event submission failed.
--   
--   <a>$sel:eventId:PutEventsResultEntry'</a>,
--   <a>putEventsResultEntry_eventId</a> - The ID of the event.
newPutEventsResultEntry :: PutEventsResultEntry

-- | The details about an event generated by an SaaS partner.
--   
--   <i>See:</i> <a>newPutPartnerEventsRequestEntry</a> smart constructor.
data PutPartnerEventsRequestEntry
PutPartnerEventsRequestEntry' :: Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> PutPartnerEventsRequestEntry

-- | Create a value of <a>PutPartnerEventsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_time</a> - The date and time of the
--   event.
--   
--   <a>$sel:detailType:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detailType</a> - A free-form string
--   used to decide what fields to expect in the event detail.
--   
--   <a>$sel:resources:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_resources</a> - Amazon Web Services
--   resources, identified by Amazon Resource Name (ARN), which the event
--   primarily concerns. Any number, including zero, may be present.
--   
--   <a>$sel:source:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_source</a> - The event source that is
--   generating the entry.
--   
--   <a>$sel:detail:PutPartnerEventsRequestEntry'</a>,
--   <a>putPartnerEventsRequestEntry_detail</a> - A valid JSON string.
--   There is no other schema imposed. The JSON string may contain fields
--   and nested subobjects.
newPutPartnerEventsRequestEntry :: PutPartnerEventsRequestEntry

-- | Represents an event that a partner tried to generate, but failed.
--   
--   <i>See:</i> <a>newPutPartnerEventsResultEntry</a> smart constructor.
data PutPartnerEventsResultEntry
PutPartnerEventsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutPartnerEventsResultEntry

-- | Create a value of <a>PutPartnerEventsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorCode</a> - The error code that
--   indicates why the event submission failed.
--   
--   <a>$sel:errorMessage:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_errorMessage</a> - The error message
--   that explains why the event submission failed.
--   
--   <a>$sel:eventId:PutPartnerEventsResultEntry'</a>,
--   <a>putPartnerEventsResultEntry_eventId</a> - The ID of the event.
newPutPartnerEventsResultEntry :: PutPartnerEventsResultEntry

-- | Represents a target that failed to be added to a rule.
--   
--   <i>See:</i> <a>newPutTargetsResultEntry</a> smart constructor.
data PutTargetsResultEntry
PutTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> PutTargetsResultEntry

-- | Create a value of <a>PutTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorCode</a> - The error code that indicates
--   why the target addition failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:PutTargetsResultEntry'</a>,
--   <a>putTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target addition failed.
newPutTargetsResultEntry :: PutTargetsResultEntry

-- | These are custom parameters to be used when the target is a Amazon
--   Redshift cluster to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <i>See:</i> <a>newRedshiftDataParameters</a> smart constructor.
data RedshiftDataParameters
RedshiftDataParameters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> RedshiftDataParameters

-- | Create a value of <a>RedshiftDataParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dbUser:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_dbUser</a> - The database user name.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:secretManagerArn:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_secretManagerArn</a> - The name or ARN of
--   the secret that enables access to the database. Required when
--   authenticating using Amazon Web Services Secrets Manager.
--   
--   <a>$sel:statementName:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_statementName</a> - The name of the SQL
--   statement. You can name the SQL statement when you create it to
--   identify the query.
--   
--   <a>$sel:withEvent:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_withEvent</a> - Indicates whether to send an
--   event back to EventBridge after the SQL statement runs.
--   
--   <a>$sel:database:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_database</a> - The name of the database.
--   Required when authenticating using temporary credentials.
--   
--   <a>$sel:sql:RedshiftDataParameters'</a>,
--   <a>redshiftDataParameters_sql</a> - The SQL statement text to run.
newRedshiftDataParameters :: Text -> Text -> RedshiftDataParameters

-- | Represents a target that failed to be removed from a rule.
--   
--   <i>See:</i> <a>newRemoveTargetsResultEntry</a> smart constructor.
data RemoveTargetsResultEntry
RemoveTargetsResultEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> RemoveTargetsResultEntry

-- | Create a value of <a>RemoveTargetsResultEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_targetId</a> - The ID of the target.
--   
--   <a>$sel:errorCode:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorCode</a> - The error code that
--   indicates why the target removal failed. If the value is
--   <tt>ConcurrentModificationException</tt>, too many requests were made
--   at the same time.
--   
--   <a>$sel:errorMessage:RemoveTargetsResultEntry'</a>,
--   <a>removeTargetsResultEntry_errorMessage</a> - The error message that
--   explains why the target removal failed.
newRemoveTargetsResultEntry :: RemoveTargetsResultEntry

-- | A <tt>Replay</tt> object that contains details about a replay.
--   
--   <i>See:</i> <a>newReplay</a> smart constructor.
data Replay
Replay' :: Maybe Text -> Maybe ReplayState -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Replay

-- | Create a value of <a>Replay</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventSourceArn:Replay'</a>, <a>replay_eventSourceArn</a> - The
--   ARN of the archive to replay event from.
--   
--   <a>$sel:state:Replay'</a>, <a>replay_state</a> - The current state of
--   the replay.
--   
--   <a>$sel:eventEndTime:Replay'</a>, <a>replay_eventEndTime</a> - A time
--   stamp for the time to start replaying events. Any event with a
--   creation time prior to the <tt>EventEndTime</tt> specified is
--   replayed.
--   
--   <a>$sel:replayStartTime:Replay'</a>, <a>replay_replayStartTime</a> - A
--   time stamp for the time that the replay started.
--   
--   <a>$sel:replayEndTime:Replay'</a>, <a>replay_replayEndTime</a> - A
--   time stamp for the time that the replay completed.
--   
--   <a>$sel:eventLastReplayedTime:Replay'</a>,
--   <a>replay_eventLastReplayedTime</a> - A time stamp for the time that
--   the last event was replayed.
--   
--   <a>$sel:eventStartTime:Replay'</a>, <a>replay_eventStartTime</a> - A
--   time stamp for the time to start replaying events. This is determined
--   by the time in the event as described in <a>Time</a>.
--   
--   <a>$sel:replayName:Replay'</a>, <a>replay_replayName</a> - The name of
--   the replay.
--   
--   <a>$sel:stateReason:Replay'</a>, <a>replay_stateReason</a> - A
--   description of why the replay is in the current state.
newReplay :: Replay

-- | A <tt>ReplayDestination</tt> object that contains details about a
--   replay.
--   
--   <i>See:</i> <a>newReplayDestination</a> smart constructor.
data ReplayDestination
ReplayDestination' :: Maybe [Text] -> Text -> ReplayDestination

-- | Create a value of <a>ReplayDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterArns:ReplayDestination'</a>,
--   <a>replayDestination_filterArns</a> - A list of ARNs for rules to
--   replay events to.
--   
--   <a>$sel:arn:ReplayDestination'</a>, <a>replayDestination_arn</a> - The
--   ARN of the event bus to replay event to. You can replay events only to
--   the event bus specified to create the archive.
newReplayDestination :: Text -> ReplayDestination

-- | A <tt>RetryPolicy</tt> object that includes information about the
--   retry policy settings.
--   
--   <i>See:</i> <a>newRetryPolicy</a> smart constructor.
data RetryPolicy
RetryPolicy' :: Maybe Natural -> Maybe Natural -> RetryPolicy

-- | Create a value of <a>RetryPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumEventAgeInSeconds:RetryPolicy'</a>,
--   <a>retryPolicy_maximumEventAgeInSeconds</a> - The maximum amount of
--   time, in seconds, to continue to make retry attempts.
--   
--   <a>$sel:maximumRetryAttempts:RetryPolicy'</a>,
--   <a>retryPolicy_maximumRetryAttempts</a> - The maximum number of retry
--   attempts to make before the request fails. Retry attempts continue
--   until either the maximum number of attempts is made or until the
--   duration of the <tt>MaximumEventAgeInSeconds</tt> is met.
newRetryPolicy :: RetryPolicy

-- | Contains information about a rule in Amazon EventBridge.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe Text -> Maybe RuleState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventPattern:Rule'</a>, <a>rule_eventPattern</a> - The event
--   pattern of the rule. For more information, see <a>Events and Event
--   Patterns</a> in the <i>Amazon EventBridge User Guide</i>.
--   
--   <a>$sel:state:Rule'</a>, <a>rule_state</a> - The state of the rule.
--   
--   <a>$sel:arn:Rule'</a>, <a>rule_arn</a> - The Amazon Resource Name
--   (ARN) of the rule.
--   
--   <a>$sel:eventBusName:Rule'</a>, <a>rule_eventBusName</a> - The name or
--   ARN of the event bus associated with the rule. If you omit this, the
--   default event bus is used.
--   
--   <a>$sel:scheduleExpression:Rule'</a>, <a>rule_scheduleExpression</a> -
--   The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5
--   minutes)". For more information, see <a>Creating an Amazon EventBridge
--   rule that runs on a schedule</a>.
--   
--   <a>$sel:name:Rule'</a>, <a>rule_name</a> - The name of the rule.
--   
--   <a>$sel:description:Rule'</a>, <a>rule_description</a> - The
--   description of the rule.
--   
--   <a>$sel:managedBy:Rule'</a>, <a>rule_managedBy</a> - If the rule was
--   created on behalf of your account by an Amazon Web Services service,
--   this field displays the principal name of the service that created the
--   rule.
--   
--   <a>$sel:roleArn:Rule'</a>, <a>rule_roleArn</a> - The Amazon Resource
--   Name (ARN) of the role that is used for target invocation.
--   
--   If you're setting an event bus in another account as the target and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, you must specify a
--   <tt>RoleArn</tt> with proper permissions in the <tt>Target</tt>
--   structure, instead of here in this parameter.
newRule :: Rule

-- | This parameter contains the criteria (either InstanceIds or a tag)
--   used to specify which EC2 instances are to be sent the command.
--   
--   <i>See:</i> <a>newRunCommandParameters</a> smart constructor.
data RunCommandParameters
RunCommandParameters' :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Create a value of <a>RunCommandParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandTargets:RunCommandParameters'</a>,
--   <a>runCommandParameters_runCommandTargets</a> - Currently, we support
--   including only one RunCommandTarget block, which specifies either an
--   array of InstanceIds or a tag.
newRunCommandParameters :: NonEmpty RunCommandTarget -> RunCommandParameters

-- | Information about the EC2 instances that are to be sent the command,
--   specified as key-value pairs. Each <tt>RunCommandTarget</tt> block can
--   include only one key, but this key may specify multiple values.
--   
--   <i>See:</i> <a>newRunCommandTarget</a> smart constructor.
data RunCommandTarget
RunCommandTarget' :: Text -> NonEmpty Text -> RunCommandTarget

-- | Create a value of <a>RunCommandTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:RunCommandTarget'</a>, <a>runCommandTarget_key</a> - Can
--   be either <tt>tag:</tt> <i>tag-key</i> or <tt>InstanceIds</tt>.
--   
--   <a>$sel:values:RunCommandTarget'</a>, <a>runCommandTarget_values</a> -
--   If <tt>Key</tt> is <tt>tag:</tt> <i>tag-key</i>, <tt>Values</tt> is a
--   list of tag values. If <tt>Key</tt> is <tt>InstanceIds</tt>,
--   <tt>Values</tt> is a list of Amazon EC2 instance IDs.
newRunCommandTarget :: Text -> NonEmpty Text -> RunCommandTarget

-- | Name/Value pair of a parameter to start execution of a SageMaker Model
--   Building Pipeline.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameter</a> smart constructor.
data SageMakerPipelineParameter
SageMakerPipelineParameter' :: Text -> Text -> SageMakerPipelineParameter

-- | Create a value of <a>SageMakerPipelineParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_name</a> - Name of parameter to start
--   execution of a SageMaker Model Building Pipeline.
--   
--   <a>$sel:value:SageMakerPipelineParameter'</a>,
--   <a>sageMakerPipelineParameter_value</a> - Value of parameter to start
--   execution of a SageMaker Model Building Pipeline.
newSageMakerPipelineParameter :: Text -> Text -> SageMakerPipelineParameter

-- | These are custom parameters to use when the target is a SageMaker
--   Model Building Pipeline that starts based on EventBridge events.
--   
--   <i>See:</i> <a>newSageMakerPipelineParameters</a> smart constructor.
data SageMakerPipelineParameters
SageMakerPipelineParameters' :: Maybe [SageMakerPipelineParameter] -> SageMakerPipelineParameters

-- | Create a value of <a>SageMakerPipelineParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineParameterList:SageMakerPipelineParameters'</a>,
--   <a>sageMakerPipelineParameters_pipelineParameterList</a> - List of
--   Parameter names and values for SageMaker Model Building Pipeline
--   execution.
newSageMakerPipelineParameters :: SageMakerPipelineParameters

-- | This structure includes the custom parameter to be used when the
--   target is an SQS FIFO queue.
--   
--   <i>See:</i> <a>newSqsParameters</a> smart constructor.
data SqsParameters
SqsParameters' :: Maybe Text -> SqsParameters

-- | Create a value of <a>SqsParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageGroupId:SqsParameters'</a>,
--   <a>sqsParameters_messageGroupId</a> - The FIFO message group ID to use
--   as the target.
newSqsParameters :: SqsParameters

-- | A key-value pair associated with an Amazon Web Services resource. In
--   EventBridge, rules and event buses support tagging.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string you can use to assign
--   a value. The combination of tag keys and values can help you organize
--   and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag

-- | Targets are the resources to be invoked when a rule is triggered. For
--   a complete list of services and resources that can be set as a target,
--   see <a>PutTargets</a>.
--   
--   If you are setting the event bus of another account as the target, and
--   that account granted permission to your account through an
--   organization instead of directly by the account ID, then you must
--   specify a <tt>RoleArn</tt> with proper permissions in the
--   <tt>Target</tt> structure. For more information, see <a>Sending and
--   Receiving Events Between Amazon Web Services Accounts</a> in the
--   <i>Amazon EventBridge User Guide</i>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe RunCommandParameters -> Maybe HttpParameters -> Maybe KinesisParameters -> Maybe InputTransformer -> Maybe DeadLetterConfig -> Maybe SageMakerPipelineParameters -> Maybe SqsParameters -> Maybe Text -> Maybe BatchParameters -> Maybe RedshiftDataParameters -> Maybe EcsParameters -> Maybe RetryPolicy -> Maybe Text -> Maybe Text -> Text -> Text -> Target

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runCommandParameters:Target'</a>,
--   <a>target_runCommandParameters</a> - Parameters used when you are
--   using the rule to invoke Amazon EC2 Run Command.
--   
--   <a>$sel:httpParameters:Target'</a>, <a>target_httpParameters</a> -
--   Contains the HTTP parameters to use when the target is a API Gateway
--   REST endpoint or EventBridge ApiDestination.
--   
--   If you specify an API Gateway REST API or EventBridge ApiDestination
--   as a target, you can use this parameter to specify headers, path
--   parameters, and query string keys/values as part of your target
--   invoking request. If you're using ApiDestinations, the corresponding
--   Connection can also have these values configured. In case of any
--   conflicting keys, values from the Connection take precedence.
--   
--   <a>$sel:kinesisParameters:Target'</a>, <a>target_kinesisParameters</a>
--   - The custom parameter you can use to control the shard assignment,
--   when the target is a Kinesis data stream. If you do not include this
--   parameter, the default is to use the <tt>eventId</tt> as the partition
--   key.
--   
--   <a>$sel:inputTransformer:Target'</a>, <a>target_inputTransformer</a> -
--   Settings to enable you to provide custom input to a target based on
--   certain event data. You can extract one or more key-value pairs from
--   the event and then use that data to send customized input to the
--   target.
--   
--   <a>$sel:deadLetterConfig:Target'</a>, <a>target_deadLetterConfig</a> -
--   The <tt>DeadLetterConfig</tt> that defines the target queue to send
--   dead-letter queue events to.
--   
--   <a>$sel:sageMakerPipelineParameters:Target'</a>,
--   <a>target_sageMakerPipelineParameters</a> - Contains the SageMaker
--   Model Building Pipeline parameters to start execution of a SageMaker
--   Model Building Pipeline.
--   
--   If you specify a SageMaker Model Building Pipeline as a target, you
--   can use this to specify parameters to start a pipeline execution based
--   on EventBridge events.
--   
--   <a>$sel:sqsParameters:Target'</a>, <a>target_sqsParameters</a> -
--   Contains the message group ID to use when the target is a FIFO queue.
--   
--   If you specify an SQS FIFO queue as a target, the queue must have
--   content-based deduplication enabled.
--   
--   <a>$sel:input:Target'</a>, <a>target_input</a> - Valid JSON text
--   passed to the target. In this case, nothing from the event itself is
--   passed to the target. For more information, see <a>The JavaScript
--   Object Notation (JSON) Data Interchange Format</a>.
--   
--   <a>$sel:batchParameters:Target'</a>, <a>target_batchParameters</a> -
--   If the event target is an Batch job, this contains the job definition,
--   job name, and other parameters. For more information, see <a>Jobs</a>
--   in the <i>Batch User Guide</i>.
--   
--   <a>$sel:redshiftDataParameters:Target'</a>,
--   <a>target_redshiftDataParameters</a> - Contains the Amazon Redshift
--   Data API parameters to use when the target is a Amazon Redshift
--   cluster.
--   
--   If you specify a Amazon Redshift Cluster as a Target, you can use this
--   to specify parameters to invoke the Amazon Redshift Data API
--   ExecuteStatement based on EventBridge events.
--   
--   <a>$sel:ecsParameters:Target'</a>, <a>target_ecsParameters</a> -
--   Contains the Amazon ECS task definition and task count to be used, if
--   the event target is an Amazon ECS task. For more information about
--   Amazon ECS tasks, see <a>Task Definitions</a> in the <i>Amazon EC2
--   Container Service Developer Guide</i>.
--   
--   <a>$sel:retryPolicy:Target'</a>, <a>target_retryPolicy</a> - The
--   <tt>RetryPolicy</tt> object that contains the retry policy
--   configuration to use for the dead-letter queue.
--   
--   <a>$sel:inputPath:Target'</a>, <a>target_inputPath</a> - The value of
--   the JSONPath that is used for extracting part of the matched event
--   when passing it to the target. You must use JSON dot notation, not
--   bracket notation. For more information about JSON paths, see
--   <a>JSONPath</a>.
--   
--   <a>$sel:roleArn:Target'</a>, <a>target_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role to be used for this target when
--   the rule is triggered. If one rule triggers multiple targets, you can
--   use a different IAM role for each target.
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The ID of the target. We
--   recommend using a memorable and unique string.
--   
--   <a>$sel:arn:Target'</a>, <a>target_arn</a> - The Amazon Resource Name
--   (ARN) of the target.
newTarget :: Text -> Text -> Target

-- | Contains the API key authorization parameters to use to update the
--   connection.
--   
--   <i>See:</i> <a>newUpdateConnectionApiKeyAuthRequestParameters</a>
--   smart constructor.
data UpdateConnectionApiKeyAuthRequestParameters
UpdateConnectionApiKeyAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionApiKeyAuthRequestParameters

-- | Create a value of <a>UpdateConnectionApiKeyAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiKeyValue:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyValue</a> - The
--   value associated with teh API key to use for authorization.
--   
--   <a>$sel:apiKeyName:UpdateConnectionApiKeyAuthRequestParameters'</a>,
--   <a>updateConnectionApiKeyAuthRequestParameters_apiKeyName</a> - The
--   name of the API key to use for authorization.
newUpdateConnectionApiKeyAuthRequestParameters :: UpdateConnectionApiKeyAuthRequestParameters

-- | Contains the additional parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionAuthRequestParameters
UpdateConnectionAuthRequestParameters' :: Maybe UpdateConnectionOAuthRequestParameters -> Maybe ConnectionHttpParameters -> Maybe UpdateConnectionApiKeyAuthRequestParameters -> Maybe UpdateConnectionBasicAuthRequestParameters -> UpdateConnectionAuthRequestParameters

-- | Create a value of <a>UpdateConnectionAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_oAuthParameters</a> - A
--   <tt>UpdateConnectionOAuthRequestParameters</tt> object that contains
--   the authorization parameters for OAuth authorization.
--   
--   
--   <a>$sel:invocationHttpParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_invocationHttpParameters</a>
--   - A <tt>ConnectionHttpParameters</tt> object that contains the
--   additional parameters to use for the connection.
--   
--   
--   <a>$sel:apiKeyAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_apiKeyAuthParameters</a> - A
--   <tt>UpdateConnectionApiKeyAuthRequestParameters</tt> object that
--   contains the authorization parameters for API key authorization.
--   
--   
--   <a>$sel:basicAuthParameters:UpdateConnectionAuthRequestParameters'</a>,
--   <a>updateConnectionAuthRequestParameters_basicAuthParameters</a> - A
--   <tt>UpdateConnectionBasicAuthRequestParameters</tt> object that
--   contains the authorization parameters for Basic authorization.
newUpdateConnectionAuthRequestParameters :: UpdateConnectionAuthRequestParameters

-- | Contains the Basic authorization parameters for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionBasicAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionBasicAuthRequestParameters
UpdateConnectionBasicAuthRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionBasicAuthRequestParameters

-- | Create a value of <a>UpdateConnectionBasicAuthRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:username:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_username</a> - The user
--   name to use for Basic authorization.
--   
--   <a>$sel:password:UpdateConnectionBasicAuthRequestParameters'</a>,
--   <a>updateConnectionBasicAuthRequestParameters_password</a> - The
--   password associated with the user name to use for Basic authorization.
newUpdateConnectionBasicAuthRequestParameters :: UpdateConnectionBasicAuthRequestParameters

-- | Contains the OAuth authorization parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthClientRequestParameters</a>
--   smart constructor.
data UpdateConnectionOAuthClientRequestParameters
UpdateConnectionOAuthClientRequestParameters' :: Maybe Text -> Maybe Text -> UpdateConnectionOAuthClientRequestParameters

-- | Create a value of <a>UpdateConnectionOAuthClientRequestParameters</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientID:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientID</a> - The
--   client ID to use for OAuth authorization.
--   
--   
--   <a>$sel:clientSecret:UpdateConnectionOAuthClientRequestParameters'</a>,
--   <a>updateConnectionOAuthClientRequestParameters_clientSecret</a> - The
--   client secret assciated with the client ID to use for OAuth
--   authorization.
newUpdateConnectionOAuthClientRequestParameters :: UpdateConnectionOAuthClientRequestParameters

-- | Contains the OAuth request parameters to use for the connection.
--   
--   <i>See:</i> <a>newUpdateConnectionOAuthRequestParameters</a> smart
--   constructor.
data UpdateConnectionOAuthRequestParameters
UpdateConnectionOAuthRequestParameters' :: Maybe ConnectionOAuthHttpMethod -> Maybe UpdateConnectionOAuthClientRequestParameters -> Maybe ConnectionHttpParameters -> Maybe Text -> UpdateConnectionOAuthRequestParameters

-- | Create a value of <a>UpdateConnectionOAuthRequestParameters</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpMethod:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_httpMethod</a> - The method
--   used to connect to the HTTP endpoint.
--   
--   <a>$sel:clientParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_clientParameters</a> - A
--   <tt>UpdateConnectionOAuthClientRequestParameters</tt> object that
--   contains the client parameters to use for the connection when OAuth is
--   specified as the authorization type.
--   
--   
--   <a>$sel:oAuthHttpParameters:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_oAuthHttpParameters</a> -
--   The additional HTTP parameters used for the OAuth authorization
--   request.
--   
--   
--   <a>$sel:authorizationEndpoint:UpdateConnectionOAuthRequestParameters'</a>,
--   <a>updateConnectionOAuthRequestParameters_authorizationEndpoint</a> -
--   The URL to the authorization endpoint when OAuth is specified as the
--   authorization type.
newUpdateConnectionOAuthRequestParameters :: UpdateConnectionOAuthRequestParameters
