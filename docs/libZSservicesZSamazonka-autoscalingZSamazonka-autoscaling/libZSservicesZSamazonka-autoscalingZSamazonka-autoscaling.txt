-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-autoscalingZSamazonka-autoscaling
@version 1.6.1


module Network.AWS.AutoScaling.Types.AdjustmentType

-- | Describes a policy adjustment type.
--   
--   <i>See:</i> <a>newAdjustmentType</a> smart constructor.
data AdjustmentType
AdjustmentType' :: Maybe Text -> AdjustmentType

-- | The policy adjustment type. The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
[$sel:adjustmentType:AdjustmentType'] :: AdjustmentType -> Maybe Text

-- | Create a value of <a>AdjustmentType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adjustmentType:AdjustmentType'</a>,
--   <a>adjustmentType_adjustmentType</a> - The policy adjustment type. The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
newAdjustmentType :: AdjustmentType

-- | The policy adjustment type. The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
adjustmentType_adjustmentType :: Lens' AdjustmentType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.AdjustmentType.AdjustmentType


module Network.AWS.AutoScaling.Types.Alarm

-- | Describes an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe Text -> Alarm

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmARN:Alarm'] :: Alarm -> Maybe Text

-- | The name of the alarm.
[$sel:alarmName:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
newAlarm :: Alarm

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm (Maybe Text)

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Alarm.Alarm
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Alarm.Alarm
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Alarm.Alarm
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Alarm.Alarm
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.Alarm.Alarm
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Alarm.Alarm
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Alarm.Alarm


module Network.AWS.AutoScaling.Types.CapacityForecast

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the capacity
--   forecast for a predictive scaling policy. This structure includes the
--   data points for that capacity forecast, along with the timestamps of
--   those data points.
--   
--   <i>See:</i> <a>newCapacityForecast</a> smart constructor.
data CapacityForecast
CapacityForecast' :: [ISO8601] -> [Double] -> CapacityForecast

-- | The time stamps for the data points, in UTC format.
[$sel:timestamps:CapacityForecast'] :: CapacityForecast -> [ISO8601]

-- | The values of the data points.
[$sel:values:CapacityForecast'] :: CapacityForecast -> [Double]

-- | Create a value of <a>CapacityForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:CapacityForecast'</a>,
--   <a>capacityForecast_timestamps</a> - The time stamps for the data
--   points, in UTC format.
--   
--   <a>$sel:values:CapacityForecast'</a>, <a>capacityForecast_values</a> -
--   The values of the data points.
newCapacityForecast :: CapacityForecast

-- | The time stamps for the data points, in UTC format.
capacityForecast_timestamps :: Lens' CapacityForecast [UTCTime]

-- | The values of the data points.
capacityForecast_values :: Lens' CapacityForecast [Double]
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance GHC.Show.Show Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance GHC.Read.Read Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.CapacityForecast.CapacityForecast


module Network.AWS.AutoScaling.Types.Ebs

-- | Describes information used to set up an Amazon EBS volume specified in
--   a block device mapping.
--   
--   <i>See:</i> <a>newEbs</a> smart constructor.
data Ebs
Ebs' :: Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Ebs

-- | Specifies whether the volume should be encrypted. Encrypted EBS
--   volumes can only be attached to instances that support Amazon EBS
--   encryption. For more information, see <a>Supported Instance Types</a>.
--   If your AMI uses encrypted volumes, you can also only launch it on
--   supported instance types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:encrypted:Ebs'] :: Ebs -> Maybe Bool

-- | The throughput (MiBps) to provision for a <tt>gp3</tt> volume.
[$sel:throughput:Ebs'] :: Ebs -> Maybe Natural

-- | Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
[$sel:deleteOnTermination:Ebs'] :: Ebs -> Maybe Bool

-- | The snapshot ID of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
[$sel:snapshotId:Ebs'] :: Ebs -> Maybe Text

-- | The volume type. For more information, see <a>Amazon EBS Volume
--   Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
[$sel:volumeType:Ebs'] :: Ebs -> Maybe Text

-- | The number of input/output (I/O) operations per second (IOPS) to
--   provision for the volume. For <tt>gp3</tt> and <tt>io1</tt> volumes,
--   this represents the number of IOPS that are provisioned for the
--   volume. For <tt>gp2</tt> volumes, this represents the baseline
--   performance of the volume and the rate at which the volume accumulates
--   I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
[$sel:iops:Ebs'] :: Ebs -> Maybe Natural

-- | The volume size, in GiBs. The following are the supported volumes
--   sizes for each volume type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
[$sel:volumeSize:Ebs'] :: Ebs -> Maybe Natural

-- | Create a value of <a>Ebs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encrypted:Ebs'</a>, <a>ebs_encrypted</a> - Specifies whether
--   the volume should be encrypted. Encrypted EBS volumes can only be
--   attached to instances that support Amazon EBS encryption. For more
--   information, see <a>Supported Instance Types</a>. If your AMI uses
--   encrypted volumes, you can also only launch it on supported instance
--   types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:throughput:Ebs'</a>, <a>ebs_throughput</a> - The throughput
--   (MiBps) to provision for a <tt>gp3</tt> volume.
--   
--   <a>$sel:deleteOnTermination:Ebs'</a>, <a>ebs_deleteOnTermination</a> -
--   Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
--   
--   <a>$sel:snapshotId:Ebs'</a>, <a>ebs_snapshotId</a> - The snapshot ID
--   of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
--   
--   <a>$sel:volumeType:Ebs'</a>, <a>ebs_volumeType</a> - The volume type.
--   For more information, see <a>Amazon EBS Volume Types</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
--   
--   <a>$sel:iops:Ebs'</a>, <a>ebs_iops</a> - The number of input/output
--   (I/O) operations per second (IOPS) to provision for the volume. For
--   <tt>gp3</tt> and <tt>io1</tt> volumes, this represents the number of
--   IOPS that are provisioned for the volume. For <tt>gp2</tt> volumes,
--   this represents the baseline performance of the volume and the rate at
--   which the volume accumulates I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
--   
--   <a>$sel:volumeSize:Ebs'</a>, <a>ebs_volumeSize</a> - The volume size,
--   in GiBs. The following are the supported volumes sizes for each volume
--   type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
newEbs :: Ebs

-- | Specifies whether the volume should be encrypted. Encrypted EBS
--   volumes can only be attached to instances that support Amazon EBS
--   encryption. For more information, see <a>Supported Instance Types</a>.
--   If your AMI uses encrypted volumes, you can also only launch it on
--   supported instance types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
ebs_encrypted :: Lens' Ebs (Maybe Bool)

-- | The throughput (MiBps) to provision for a <tt>gp3</tt> volume.
ebs_throughput :: Lens' Ebs (Maybe Natural)

-- | Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
ebs_deleteOnTermination :: Lens' Ebs (Maybe Bool)

-- | The snapshot ID of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
ebs_snapshotId :: Lens' Ebs (Maybe Text)

-- | The volume type. For more information, see <a>Amazon EBS Volume
--   Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
ebs_volumeType :: Lens' Ebs (Maybe Text)

-- | The number of input/output (I/O) operations per second (IOPS) to
--   provision for the volume. For <tt>gp3</tt> and <tt>io1</tt> volumes,
--   this represents the number of IOPS that are provisioned for the
--   volume. For <tt>gp2</tt> volumes, this represents the baseline
--   performance of the volume and the rate at which the volume accumulates
--   I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
ebs_iops :: Lens' Ebs (Maybe Natural)

-- | The volume size, in GiBs. The following are the supported volumes
--   sizes for each volume type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
ebs_volumeSize :: Lens' Ebs (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Ebs.Ebs
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Ebs.Ebs
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Ebs.Ebs
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Ebs.Ebs
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.Ebs.Ebs
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Ebs.Ebs
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Ebs.Ebs
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.Ebs.Ebs


module Network.AWS.AutoScaling.Types.BlockDeviceMapping

-- | Describes a block device mapping.
--   
--   <i>See:</i> <a>newBlockDeviceMapping</a> smart constructor.
data BlockDeviceMapping
BlockDeviceMapping' :: Maybe Ebs -> Maybe Bool -> Maybe Text -> Text -> BlockDeviceMapping

-- | Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
[$sel:ebs:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Ebs

-- | Setting this value to <tt>true</tt> suppresses the specified device
--   included in the block device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
[$sel:noDevice:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Bool

-- | The name of the virtual device (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
[$sel:virtualName:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Text

-- | The device name exposed to the EC2 instance (for example,
--   <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For more information, see
--   <a>Device Naming on Linux Instances</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
[$sel:deviceName:BlockDeviceMapping'] :: BlockDeviceMapping -> Text

-- | Create a value of <a>BlockDeviceMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:BlockDeviceMapping'</a>, <a>blockDeviceMapping_ebs</a> -
--   Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:noDevice:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_noDevice</a> - Setting this value to
--   <tt>true</tt> suppresses the specified device included in the block
--   device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
--   
--   <a>$sel:virtualName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_virtualName</a> - The name of the virtual device
--   (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:deviceName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_deviceName</a> - The device name exposed to the
--   EC2 instance (for example, <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For
--   more information, see <a>Device Naming on Linux Instances</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
newBlockDeviceMapping :: Text -> BlockDeviceMapping

-- | Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_ebs :: Lens' BlockDeviceMapping (Maybe Ebs)

-- | Setting this value to <tt>true</tt> suppresses the specified device
--   included in the block device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
blockDeviceMapping_noDevice :: Lens' BlockDeviceMapping (Maybe Bool)

-- | The name of the virtual device (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_virtualName :: Lens' BlockDeviceMapping (Maybe Text)

-- | The device name exposed to the EC2 instance (for example,
--   <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For more information, see
--   <a>Device Naming on Linux Instances</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
blockDeviceMapping_deviceName :: Lens' BlockDeviceMapping Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance GHC.Show.Show Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance GHC.Read.Read Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.BlockDeviceMapping.BlockDeviceMapping


module Network.AWS.AutoScaling.Types.EnabledMetric

-- | Describes an enabled metric.
--   
--   <i>See:</i> <a>newEnabledMetric</a> smart constructor.
data EnabledMetric
EnabledMetric' :: Maybe Text -> Maybe Text -> EnabledMetric

-- | The granularity of the metric. The only valid value is
--   <tt>1Minute</tt>.
[$sel:granularity:EnabledMetric'] :: EnabledMetric -> Maybe Text

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
[$sel:metric:EnabledMetric'] :: EnabledMetric -> Maybe Text

-- | Create a value of <a>EnabledMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:EnabledMetric'</a>,
--   <a>enabledMetric_granularity</a> - The granularity of the metric. The
--   only valid value is <tt>1Minute</tt>.
--   
--   <a>$sel:metric:EnabledMetric'</a>, <a>enabledMetric_metric</a> - One
--   of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newEnabledMetric :: EnabledMetric

-- | The granularity of the metric. The only valid value is
--   <tt>1Minute</tt>.
enabledMetric_granularity :: Lens' EnabledMetric (Maybe Text)

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
enabledMetric_metric :: Lens' EnabledMetric (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance GHC.Show.Show Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance GHC.Read.Read Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.EnabledMetric.EnabledMetric


module Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest

-- | Describes a scheduled action that could not be created, updated, or
--   deleted.
--   
--   <i>See:</i> <a>newFailedScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data FailedScheduledUpdateGroupActionRequest
FailedScheduledUpdateGroupActionRequest' :: Maybe Text -> Maybe Text -> Text -> FailedScheduledUpdateGroupActionRequest

-- | The error message accompanying the error code.
[$sel:errorMessage:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Maybe Text

-- | The error code.
[$sel:errorCode:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Maybe Text

-- | The name of the scheduled action.
[$sel:scheduledActionName:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Text

-- | Create a value of <a>FailedScheduledUpdateGroupActionRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorMessage</a> - The
--   error message accompanying the error code.
--   
--   <a>$sel:errorCode:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorCode</a> - The error
--   code.
--   
--   
--   <a>$sel:scheduledActionName:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_scheduledActionName</a> -
--   The name of the scheduled action.
newFailedScheduledUpdateGroupActionRequest :: Text -> FailedScheduledUpdateGroupActionRequest

-- | The error message accompanying the error code.
failedScheduledUpdateGroupActionRequest_errorMessage :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The error code.
failedScheduledUpdateGroupActionRequest_errorCode :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scheduled action.
failedScheduledUpdateGroupActionRequest_scheduledActionName :: Lens' FailedScheduledUpdateGroupActionRequest Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance GHC.Show.Show Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance GHC.Read.Read Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.FailedScheduledUpdateGroupActionRequest.FailedScheduledUpdateGroupActionRequest


module Network.AWS.AutoScaling.Types.Filter

-- | Describes a filter that is used to return a more specific list of
--   results when describing tags.
--   
--   For more information, see <a>Tagging Auto Scaling groups and
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Text -> Filter

-- | One or more filter values. Filter values are case-sensitive.
[$sel:values:Filter'] :: Filter -> Maybe [Text]

-- | The name of the filter. The valid values are:
--   <tt>auto-scaling-group</tt>, <tt>key</tt>, <tt>value</tt>, and
--   <tt>propagate-at-launch</tt>.
[$sel:name:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - One or more filter
--   values. Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   The valid values are: <tt>auto-scaling-group</tt>, <tt>key</tt>,
--   <tt>value</tt>, and <tt>propagate-at-launch</tt>.
newFilter :: Text -> Filter

-- | One or more filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the filter. The valid values are:
--   <tt>auto-scaling-group</tt>, <tt>key</tt>, <tt>value</tt>, and
--   <tt>propagate-at-launch</tt>.
filter_name :: Lens' Filter Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Filter.Filter
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Filter.Filter
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.Filter.Filter


module Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState
newtype InstanceMetadataEndpointState
InstanceMetadataEndpointState' :: Text -> InstanceMetadataEndpointState
[fromInstanceMetadataEndpointState] :: InstanceMetadataEndpointState -> Text
pattern InstanceMetadataEndpointState_Disabled :: InstanceMetadataEndpointState
pattern InstanceMetadataEndpointState_Enabled :: InstanceMetadataEndpointState
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceMetadataEndpointState.InstanceMetadataEndpointState


module Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState
newtype InstanceMetadataHttpTokensState
InstanceMetadataHttpTokensState' :: Text -> InstanceMetadataHttpTokensState
[fromInstanceMetadataHttpTokensState] :: InstanceMetadataHttpTokensState -> Text
pattern InstanceMetadataHttpTokensState_Optional :: InstanceMetadataHttpTokensState
pattern InstanceMetadataHttpTokensState_Required :: InstanceMetadataHttpTokensState
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceMetadataHttpTokensState.InstanceMetadataHttpTokensState


module Network.AWS.AutoScaling.Types.InstanceMetadataOptions

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe InstanceMetadataEndpointState -> Maybe Natural -> Maybe InstanceMetadataHttpTokensState -> InstanceMetadataOptions

-- | This parameter enables or disables the HTTP metadata endpoint on your
--   instances. If the parameter is not specified, the default state is
--   <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
[$sel:httpEndpoint:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe InstanceMetadataEndpointState

-- | The desired HTTP PUT response hop limit for instance metadata
--   requests. The larger the number, the further instance metadata
--   requests can travel.
--   
--   Default: 1
[$sel:httpPutResponseHopLimit:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Natural

-- | The state of token usage for your instance metadata requests. If the
--   parameter is not specified in the request, the default state is
--   <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
[$sel:httpTokens:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe InstanceMetadataHttpTokensState

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpEndpoint</a> - This parameter enables
--   or disables the HTTP metadata endpoint on your instances. If the
--   parameter is not specified, the default state is <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - The desired
--   HTTP PUT response hop limit for instance metadata requests. The larger
--   the number, the further instance metadata requests can travel.
--   
--   Default: 1
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - The state of token usage
--   for your instance metadata requests. If the parameter is not specified
--   in the request, the default state is <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | This parameter enables or disables the HTTP metadata endpoint on your
--   instances. If the parameter is not specified, the default state is
--   <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
instanceMetadataOptions_httpEndpoint :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataEndpointState)

-- | The desired HTTP PUT response hop limit for instance metadata
--   requests. The larger the number, the further instance metadata
--   requests can travel.
--   
--   Default: 1
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | The state of token usage for your instance metadata requests. If the
--   parameter is not specified in the request, the default state is
--   <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataHttpTokensState)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstanceMetadataOptions.InstanceMetadataOptions


module Network.AWS.AutoScaling.Types.InstanceMonitoring

-- | Describes whether detailed monitoring is enabled for the Auto Scaling
--   instances.
--   
--   <i>See:</i> <a>newInstanceMonitoring</a> smart constructor.
data InstanceMonitoring
InstanceMonitoring' :: Maybe Bool -> InstanceMonitoring

-- | If <tt>true</tt>, detailed monitoring is enabled. Otherwise, basic
--   monitoring is enabled.
[$sel:enabled:InstanceMonitoring'] :: InstanceMonitoring -> Maybe Bool

-- | Create a value of <a>InstanceMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:InstanceMonitoring'</a>,
--   <a>instanceMonitoring_enabled</a> - If <tt>true</tt>, detailed
--   monitoring is enabled. Otherwise, basic monitoring is enabled.
newInstanceMonitoring :: InstanceMonitoring

-- | If <tt>true</tt>, detailed monitoring is enabled. Otherwise, basic
--   monitoring is enabled.
instanceMonitoring_enabled :: Lens' InstanceMonitoring (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstanceMonitoring.InstanceMonitoring


module Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress

-- | Reports the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefreshLivePoolProgress</a> smart
--   constructor.
data InstanceRefreshLivePoolProgress
InstanceRefreshLivePoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshLivePoolProgress

-- | The percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
[$sel:percentageComplete:InstanceRefreshLivePoolProgress'] :: InstanceRefreshLivePoolProgress -> Maybe Natural

-- | The number of instances remaining to update.
[$sel:instancesToUpdate:InstanceRefreshLivePoolProgress'] :: InstanceRefreshLivePoolProgress -> Maybe Natural

-- | Create a value of <a>InstanceRefreshLivePoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_percentageComplete</a> - The
--   percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshLivePoolProgress :: InstanceRefreshLivePoolProgress

-- | The percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
instanceRefreshLivePoolProgress_percentageComplete :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshLivePoolProgress_instancesToUpdate :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceRefreshLivePoolProgress.InstanceRefreshLivePoolProgress


module Network.AWS.AutoScaling.Types.InstanceRefreshStatus
newtype InstanceRefreshStatus
InstanceRefreshStatus' :: Text -> InstanceRefreshStatus
[fromInstanceRefreshStatus] :: InstanceRefreshStatus -> Text
pattern InstanceRefreshStatus_Cancelled :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Cancelling :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Failed :: InstanceRefreshStatus
pattern InstanceRefreshStatus_InProgress :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Pending :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Successful :: InstanceRefreshStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceRefreshStatus.InstanceRefreshStatus


module Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress

-- | Reports the progress of an instance refresh on instances that are in
--   the warm pool.
--   
--   <i>See:</i> <a>newInstanceRefreshWarmPoolProgress</a> smart
--   constructor.
data InstanceRefreshWarmPoolProgress
InstanceRefreshWarmPoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshWarmPoolProgress

-- | The percentage of instances in the warm pool that have been replaced.
--   For each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
[$sel:percentageComplete:InstanceRefreshWarmPoolProgress'] :: InstanceRefreshWarmPoolProgress -> Maybe Natural

-- | The number of instances remaining to update.
[$sel:instancesToUpdate:InstanceRefreshWarmPoolProgress'] :: InstanceRefreshWarmPoolProgress -> Maybe Natural

-- | Create a value of <a>InstanceRefreshWarmPoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_percentageComplete</a> - The
--   percentage of instances in the warm pool that have been replaced. For
--   each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshWarmPoolProgress :: InstanceRefreshWarmPoolProgress

-- | The percentage of instances in the warm pool that have been replaced.
--   For each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
instanceRefreshWarmPoolProgress_percentageComplete :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshWarmPoolProgress_instancesToUpdate :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceRefreshWarmPoolProgress.InstanceRefreshWarmPoolProgress


module Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails

-- | Reports the progress of an instance refresh on an Auto Scaling group
--   that has a warm pool. This includes separate details for instances in
--   the warm pool and instances in the Auto Scaling group (the live pool).
--   
--   <i>See:</i> <a>newInstanceRefreshProgressDetails</a> smart
--   constructor.
data InstanceRefreshProgressDetails
InstanceRefreshProgressDetails' :: Maybe InstanceRefreshLivePoolProgress -> Maybe InstanceRefreshWarmPoolProgress -> InstanceRefreshProgressDetails

-- | Indicates the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
[$sel:livePoolProgress:InstanceRefreshProgressDetails'] :: InstanceRefreshProgressDetails -> Maybe InstanceRefreshLivePoolProgress

-- | Indicates the progress of an instance refresh on instances that are in
--   the warm pool.
[$sel:warmPoolProgress:InstanceRefreshProgressDetails'] :: InstanceRefreshProgressDetails -> Maybe InstanceRefreshWarmPoolProgress

-- | Create a value of <a>InstanceRefreshProgressDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:livePoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_livePoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the Auto
--   Scaling group.
--   
--   <a>$sel:warmPoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_warmPoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the warm
--   pool.
newInstanceRefreshProgressDetails :: InstanceRefreshProgressDetails

-- | Indicates the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
instanceRefreshProgressDetails_livePoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshLivePoolProgress)

-- | Indicates the progress of an instance refresh on instances that are in
--   the warm pool.
instanceRefreshProgressDetails_warmPoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshWarmPoolProgress)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceRefreshProgressDetails.InstanceRefreshProgressDetails


module Network.AWS.AutoScaling.Types.InstancesDistribution

-- | Describes an instances distribution for an Auto Scaling group with a
--   MixedInstancesPolicy.
--   
--   The instances distribution specifies the distribution of On-Demand
--   Instances and Spot Instances, the maximum price to pay for Spot
--   Instances, and how the Auto Scaling group allocates instance types to
--   fulfill On-Demand and Spot capacities.
--   
--   When you modify <tt>SpotAllocationStrategy</tt>,
--   <tt>SpotInstancePools</tt>, or <tt>SpotMaxPrice</tt> in the
--   UpdateAutoScalingGroup API call, this update action does not deploy
--   any changes across the running Amazon EC2 instances in the group. Your
--   existing Spot Instances continue to run as long as the maximum price
--   for those instances is higher than the current Spot price. When scale
--   out occurs, Amazon EC2 Auto Scaling launches instances based on the
--   new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates
--   instances according to the group's termination policies.
--   
--   <i>See:</i> <a>newInstancesDistribution</a> smart constructor.
data InstancesDistribution
InstancesDistribution' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> InstancesDistribution

-- | The maximum price per unit hour that you are willing to pay for a Spot
--   Instance. If you leave the value at its default (empty), Amazon EC2
--   Auto Scaling uses the On-Demand price as the maximum Spot price. To
--   remove a value that you previously set, include the property but
--   specify an empty string ("") for the value.
[$sel:spotMaxPrice:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | The number of Spot Instance pools across which to allocate your Spot
--   Instances. The Spot pools are determined from the different instance
--   types in the overrides. Valid only when the Spot allocation strategy
--   is <tt>lowest-price</tt>. Value must be in the range of 1 to 20.
--   Defaults to 2 if not specified.
[$sel:spotInstancePools:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Indicates how to allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
[$sel:spotAllocationStrategy:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
[$sel:onDemandPercentageAboveBaseCapacity:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Indicates how to allocate instance types to fulfill On-Demand
--   capacity. The only valid value is <tt>prioritized</tt>, which is also
--   the default value. This strategy uses the order of instance types in
--   the <tt>LaunchTemplateOverrides</tt> to define the launch priority of
--   each instance type. The first instance type in the array is
--   prioritized higher than the last. If all your On-Demand capacity
--   cannot be fulfilled using your highest priority instance, then the
--   Auto Scaling groups launches the remaining capacity using the second
--   priority instance type, and so on.
[$sel:onDemandAllocationStrategy:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | The minimum amount of the Auto Scaling group's capacity that must be
--   fulfilled by On-Demand Instances. This base portion is provisioned
--   first as your group scales. Defaults to 0 if not specified. If you
--   specify weights for the instance types in the overrides, set the value
--   of <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
[$sel:onDemandBaseCapacity:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Create a value of <a>InstancesDistribution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spotMaxPrice:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotMaxPrice</a> - The maximum price per unit
--   hour that you are willing to pay for a Spot Instance. If you leave the
--   value at its default (empty), Amazon EC2 Auto Scaling uses the
--   On-Demand price as the maximum Spot price. To remove a value that you
--   previously set, include the property but specify an empty string ("")
--   for the value.
--   
--   <a>$sel:spotInstancePools:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotInstancePools</a> - The number of Spot
--   Instance pools across which to allocate your Spot Instances. The Spot
--   pools are determined from the different instance types in the
--   overrides. Valid only when the Spot allocation strategy is
--   <tt>lowest-price</tt>. Value must be in the range of 1 to 20. Defaults
--   to 2 if not specified.
--   
--   <a>$sel:spotAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotAllocationStrategy</a> - Indicates how to
--   allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
--   
--   
--   <a>$sel:onDemandPercentageAboveBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandPercentageAboveBaseCapacity</a> -
--   Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
--   
--   <a>$sel:onDemandAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandAllocationStrategy</a> - Indicates
--   how to allocate instance types to fulfill On-Demand capacity. The only
--   valid value is <tt>prioritized</tt>, which is also the default value.
--   This strategy uses the order of instance types in the
--   <tt>LaunchTemplateOverrides</tt> to define the launch priority of each
--   instance type. The first instance type in the array is prioritized
--   higher than the last. If all your On-Demand capacity cannot be
--   fulfilled using your highest priority instance, then the Auto Scaling
--   groups launches the remaining capacity using the second priority
--   instance type, and so on.
--   
--   <a>$sel:onDemandBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandBaseCapacity</a> - The minimum amount
--   of the Auto Scaling group's capacity that must be fulfilled by
--   On-Demand Instances. This base portion is provisioned first as your
--   group scales. Defaults to 0 if not specified. If you specify weights
--   for the instance types in the overrides, set the value of
--   <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
newInstancesDistribution :: InstancesDistribution

-- | The maximum price per unit hour that you are willing to pay for a Spot
--   Instance. If you leave the value at its default (empty), Amazon EC2
--   Auto Scaling uses the On-Demand price as the maximum Spot price. To
--   remove a value that you previously set, include the property but
--   specify an empty string ("") for the value.
instancesDistribution_spotMaxPrice :: Lens' InstancesDistribution (Maybe Text)

-- | The number of Spot Instance pools across which to allocate your Spot
--   Instances. The Spot pools are determined from the different instance
--   types in the overrides. Valid only when the Spot allocation strategy
--   is <tt>lowest-price</tt>. Value must be in the range of 1 to 20.
--   Defaults to 2 if not specified.
instancesDistribution_spotInstancePools :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
instancesDistribution_spotAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
instancesDistribution_onDemandPercentageAboveBaseCapacity :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instance types to fulfill On-Demand
--   capacity. The only valid value is <tt>prioritized</tt>, which is also
--   the default value. This strategy uses the order of instance types in
--   the <tt>LaunchTemplateOverrides</tt> to define the launch priority of
--   each instance type. The first instance type in the array is
--   prioritized higher than the last. If all your On-Demand capacity
--   cannot be fulfilled using your highest priority instance, then the
--   Auto Scaling groups launches the remaining capacity using the second
--   priority instance type, and so on.
instancesDistribution_onDemandAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | The minimum amount of the Auto Scaling group's capacity that must be
--   fulfilled by On-Demand Instances. This base portion is provisioned
--   first as your group scales. Defaults to 0 if not specified. If you
--   specify weights for the instance types in the overrides, set the value
--   of <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
instancesDistribution_onDemandBaseCapacity :: Lens' InstancesDistribution (Maybe Int)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.InstancesDistribution.InstancesDistribution


module Network.AWS.AutoScaling.Types.LaunchConfiguration

-- | Describes a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfiguration</a> smart constructor.
data LaunchConfiguration
LaunchConfiguration' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [BlockDeviceMapping] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMonitoring -> Maybe InstanceMetadataOptions -> Text -> Text -> Text -> ISO8601 -> LaunchConfiguration

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). For more information, see
--   <a>Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
[$sel:ebsOptimized:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Bool

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
[$sel:userData:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The ID of the RAM disk associated with the AMI.
[$sel:ramdiskId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The IDs of one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:classicLinkVPCSecurityGroups:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [Text]

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
[$sel:spotPrice:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | For Auto Scaling groups that are running in a VPC, specifies whether
--   to assign a public IP address to the group's instances. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:associatePublicIpAddress:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Bool

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group. For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
[$sel:securityGroups:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [Text]

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role. For more information, see <a>IAM role for
--   applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
[$sel:iamInstanceProfile:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:classicLinkVPCId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | A block device mapping, which specifies the block devices for the
--   instance. For more information, see <a>Block Device Mapping</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
[$sel:blockDeviceMappings:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [BlockDeviceMapping]

-- | The ID of the kernel associated with the AMI.
[$sel:kernelId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The tenancy of the instance, either <tt>default</tt> or
--   <tt>dedicated</tt>. An instance with <tt>dedicated</tt> tenancy runs
--   on isolated, single-tenant hardware and can only be launched into a
--   VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:placementTenancy:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the launch configuration.
[$sel:launchConfigurationARN:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
[$sel:keyName:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:instanceMonitoring:LaunchConfiguration'] :: LaunchConfiguration -> Maybe InstanceMonitoring

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
[$sel:metadataOptions:LaunchConfiguration'] :: LaunchConfiguration -> Maybe InstanceMetadataOptions

-- | The name of the launch configuration.
[$sel:launchConfigurationName:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The ID of the Amazon Machine Image (AMI) to use to launch your EC2
--   instances. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
[$sel:imageId:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The instance type for the instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
[$sel:instanceType:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The creation date and time for the launch configuration.
[$sel:createdTime:LaunchConfiguration'] :: LaunchConfiguration -> ISO8601

-- | Create a value of <a>LaunchConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsOptimized:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ebsOptimized</a> - Specifies whether the launch
--   configuration is optimized for EBS I/O (<tt>true</tt>) or not
--   (<tt>false</tt>). For more information, see <a>Amazon EBS-Optimized
--   Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:userData:LaunchConfiguration'</a>,
--   <a>launchConfiguration_userData</a> - The user data to make available
--   to the launched EC2 instances. For more information, see <a>Instance
--   metadata and user data</a> (Linux) and <a>Instance metadata and user
--   data</a> (Windows). If you are using a command line tool,
--   base64-encoding is performed for you, and you can load the text from a
--   file. Otherwise, you must provide base64-encoded text. User data is
--   limited to 16 KB.
--   
--   <a>$sel:ramdiskId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ramdiskId</a> - The ID of the RAM disk
--   associated with the AMI.
--   
--   <a>$sel:classicLinkVPCSecurityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCSecurityGroups</a> - The IDs of
--   one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:spotPrice:LaunchConfiguration'</a>,
--   <a>launchConfiguration_spotPrice</a> - The maximum hourly price to be
--   paid for any Spot Instance launched to fulfill the request. Spot
--   Instances are launched when the price you specify exceeds the current
--   Spot price. For more information, see <a>Requesting Spot Instances</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:associatePublicIpAddress:LaunchConfiguration'</a>,
--   <a>launchConfiguration_associatePublicIpAddress</a> - For Auto Scaling
--   groups that are running in a VPC, specifies whether to assign a public
--   IP address to the group's instances. For more information, see
--   <a>Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <a>$sel:securityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_securityGroups</a> - A list that contains the
--   security groups to assign to the instances in the Auto Scaling group.
--   For more information, see <a>Security Groups for Your VPC</a> in the
--   <i>Amazon Virtual Private Cloud User Guide</i>.
--   
--   <a>$sel:iamInstanceProfile:LaunchConfiguration'</a>,
--   <a>launchConfiguration_iamInstanceProfile</a> - The name or the Amazon
--   Resource Name (ARN) of the instance profile associated with the IAM
--   role for the instance. The instance profile contains the IAM role. For
--   more information, see <a>IAM role for applications that run on Amazon
--   EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:classicLinkVPCId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCId</a> - The ID of a
--   ClassicLink-enabled VPC to link your EC2-Classic instances to. For
--   more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:blockDeviceMappings:LaunchConfiguration'</a>,
--   <a>launchConfiguration_blockDeviceMappings</a> - A block device
--   mapping, which specifies the block devices for the instance. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   <a>$sel:kernelId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_kernelId</a> - The ID of the kernel associated
--   with the AMI.
--   
--   <a>$sel:placementTenancy:LaunchConfiguration'</a>,
--   <a>launchConfiguration_placementTenancy</a> - The tenancy of the
--   instance, either <tt>default</tt> or <tt>dedicated</tt>. An instance
--   with <tt>dedicated</tt> tenancy runs on isolated, single-tenant
--   hardware and can only be launched into a VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationARN:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationARN</a> - The Amazon
--   Resource Name (ARN) of the launch configuration.
--   
--   <a>$sel:keyName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_keyName</a> - The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:instanceMonitoring:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceMonitoring</a> - Controls whether
--   instances in this group are launched with detailed (<tt>true</tt>) or
--   basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:metadataOptions:LaunchConfiguration'</a>,
--   <a>launchConfiguration_metadataOptions</a> - The metadata options for
--   the instances. For more information, see <a>Configuring the Instance
--   Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationName</a> - The name of the
--   launch configuration.
--   
--   <a>$sel:imageId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_imageId</a> - The ID of the Amazon Machine
--   Image (AMI) to use to launch your EC2 instances. For more information,
--   see <a>Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:instanceType:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceType</a> - The instance type for the
--   instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:createdTime:LaunchConfiguration'</a>,
--   <a>launchConfiguration_createdTime</a> - The creation date and time
--   for the launch configuration.
newLaunchConfiguration :: Text -> Text -> Text -> UTCTime -> LaunchConfiguration

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). For more information, see
--   <a>Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
launchConfiguration_ebsOptimized :: Lens' LaunchConfiguration (Maybe Bool)

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
launchConfiguration_userData :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of the RAM disk associated with the AMI.
launchConfiguration_ramdiskId :: Lens' LaunchConfiguration (Maybe Text)

-- | The IDs of one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_classicLinkVPCSecurityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
launchConfiguration_spotPrice :: Lens' LaunchConfiguration (Maybe Text)

-- | For Auto Scaling groups that are running in a VPC, specifies whether
--   to assign a public IP address to the group's instances. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_associatePublicIpAddress :: Lens' LaunchConfiguration (Maybe Bool)

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group. For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
launchConfiguration_securityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role. For more information, see <a>IAM role for
--   applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_iamInstanceProfile :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchConfiguration_classicLinkVPCId :: Lens' LaunchConfiguration (Maybe Text)

-- | A block device mapping, which specifies the block devices for the
--   instance. For more information, see <a>Block Device Mapping</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_blockDeviceMappings :: Lens' LaunchConfiguration (Maybe [BlockDeviceMapping])

-- | The ID of the kernel associated with the AMI.
launchConfiguration_kernelId :: Lens' LaunchConfiguration (Maybe Text)

-- | The tenancy of the instance, either <tt>default</tt> or
--   <tt>dedicated</tt>. An instance with <tt>dedicated</tt> tenancy runs
--   on isolated, single-tenant hardware and can only be launched into a
--   VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_placementTenancy :: Lens' LaunchConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the launch configuration.
launchConfiguration_launchConfigurationARN :: Lens' LaunchConfiguration (Maybe Text)

-- | The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
launchConfiguration_keyName :: Lens' LaunchConfiguration (Maybe Text)

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_instanceMonitoring :: Lens' LaunchConfiguration (Maybe InstanceMonitoring)

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_metadataOptions :: Lens' LaunchConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the launch configuration.
launchConfiguration_launchConfigurationName :: Lens' LaunchConfiguration Text

-- | The ID of the Amazon Machine Image (AMI) to use to launch your EC2
--   instances. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_imageId :: Lens' LaunchConfiguration Text

-- | The instance type for the instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
launchConfiguration_instanceType :: Lens' LaunchConfiguration Text

-- | The creation date and time for the launch configuration.
launchConfiguration_createdTime :: Lens' LaunchConfiguration UTCTime
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LaunchConfiguration.LaunchConfiguration


module Network.AWS.AutoScaling.Types.LaunchTemplateSpecification

-- | Describes the launch template and the version of the launch template
--   that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For
--   more information about launch templates, see <a>Launch templates</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The ID of the launch template. To get the template ID, use the Amazon
--   EC2 <a>DescribeLaunchTemplates</a> API operation. New launch templates
--   can be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version number, <tt>$Latest</tt>, or <tt>$Default</tt>. To get the
--   version number, use the Amazon EC2
--   <a>DescribeLaunchTemplateVersions</a> API operation. New launch
--   template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The name of the launch template. To get the template name, use the
--   Amazon EC2 <a>DescribeLaunchTemplates</a> API operation. New launch
--   templates can be created using the Amazon EC2
--   <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template. To get the template ID, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number,
--   <tt>$Latest</tt>, or <tt>$Default</tt>. To get the version number, use
--   the Amazon EC2 <a>DescribeLaunchTemplateVersions</a> API operation.
--   New launch template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template. To get the template name, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The ID of the launch template. To get the template ID, use the Amazon
--   EC2 <a>DescribeLaunchTemplates</a> API operation. New launch templates
--   can be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number, <tt>$Latest</tt>, or <tt>$Default</tt>. To get the
--   version number, use the Amazon EC2
--   <a>DescribeLaunchTemplateVersions</a> API operation. New launch
--   template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The name of the launch template. To get the template name, use the
--   Amazon EC2 <a>DescribeLaunchTemplates</a> API operation. New launch
--   templates can be created using the Amazon EC2
--   <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.LaunchTemplateSpecification.LaunchTemplateSpecification


module Network.AWS.AutoScaling.Types.LaunchTemplateOverrides

-- | Describes an override for a launch template. The maximum number of
--   instance types that can be associated with an Auto Scaling group is
--   40. The maximum number of distinct launch templates you can define for
--   an Auto Scaling group is 20. For more information about configuring
--   overrides, see <a>Configuring overrides</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateOverrides</a> smart constructor.
data LaunchTemplateOverrides
LaunchTemplateOverrides' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> LaunchTemplateOverrides

-- | The instance type, such as <tt>m3.xlarge</tt>. You must use an
--   instance type that is supported in your requested Region and
--   Availability Zones. For more information, see <a>Instance types</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
[$sel:instanceType:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe Text

-- | Provides the launch template to be used when launching the instance
--   type. For example, some instance types might require a launch template
--   with a different AMI. If not provided, Amazon EC2 Auto Scaling uses
--   the launch template that's defined for your mixed instances policy.
--   For more information, see <a>Specifying a different launch template
--   for an instance type</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:launchTemplateSpecification:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe LaunchTemplateSpecification

-- | The number of capacity units provided by the specified instance type
--   in terms of virtual CPUs, memory, storage, throughput, or other
--   relative performance characteristic. When a Spot or On-Demand Instance
--   is provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
[$sel:weightedCapacity:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe Text

-- | Create a value of <a>LaunchTemplateOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_instanceType</a> - The instance type, such
--   as <tt>m3.xlarge</tt>. You must use an instance type that is supported
--   in your requested Region and Availability Zones. For more information,
--   see <a>Instance types</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_launchTemplateSpecification</a> - Provides
--   the launch template to be used when launching the instance type. For
--   example, some instance types might require a launch template with a
--   different AMI. If not provided, Amazon EC2 Auto Scaling uses the
--   launch template that's defined for your mixed instances policy. For
--   more information, see <a>Specifying a different launch template for an
--   instance type</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:weightedCapacity:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_weightedCapacity</a> - The number of
--   capacity units provided by the specified instance type in terms of
--   virtual CPUs, memory, storage, throughput, or other relative
--   performance characteristic. When a Spot or On-Demand Instance is
--   provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
newLaunchTemplateOverrides :: LaunchTemplateOverrides

-- | The instance type, such as <tt>m3.xlarge</tt>. You must use an
--   instance type that is supported in your requested Region and
--   Availability Zones. For more information, see <a>Instance types</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
launchTemplateOverrides_instanceType :: Lens' LaunchTemplateOverrides (Maybe Text)

-- | Provides the launch template to be used when launching the instance
--   type. For example, some instance types might require a launch template
--   with a different AMI. If not provided, Amazon EC2 Auto Scaling uses
--   the launch template that's defined for your mixed instances policy.
--   For more information, see <a>Specifying a different launch template
--   for an instance type</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchTemplateOverrides_launchTemplateSpecification :: Lens' LaunchTemplateOverrides (Maybe LaunchTemplateSpecification)

-- | The number of capacity units provided by the specified instance type
--   in terms of virtual CPUs, memory, storage, throughput, or other
--   relative performance characteristic. When a Spot or On-Demand Instance
--   is provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
launchTemplateOverrides_weightedCapacity :: Lens' LaunchTemplateOverrides (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.LaunchTemplateOverrides.LaunchTemplateOverrides


module Network.AWS.AutoScaling.Types.LaunchTemplate

-- | Describes a launch template and overrides.
--   
--   You specify these properties as part of a mixed instances policy.
--   
--   When you update the launch template or overrides in the
--   UpdateAutoScalingGroup API call, existing Amazon EC2 instances
--   continue to run. When scale out occurs, Amazon EC2 Auto Scaling
--   launches instances to match the new settings. When scale in occurs,
--   Amazon EC2 Auto Scaling terminates instances according to the group's
--   termination policies.
--   
--   <i>See:</i> <a>newLaunchTemplate</a> smart constructor.
data LaunchTemplate
LaunchTemplate' :: Maybe LaunchTemplateSpecification -> Maybe [LaunchTemplateOverrides] -> LaunchTemplate

-- | The launch template to use.
[$sel:launchTemplateSpecification:LaunchTemplate'] :: LaunchTemplate -> Maybe LaunchTemplateSpecification

-- | Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
[$sel:overrides:LaunchTemplate'] :: LaunchTemplate -> Maybe [LaunchTemplateOverrides]

-- | Create a value of <a>LaunchTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplate'</a>,
--   <a>launchTemplate_launchTemplateSpecification</a> - The launch
--   template to use.
--   
--   <a>$sel:overrides:LaunchTemplate'</a>, <a>launchTemplate_overrides</a>
--   - Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
newLaunchTemplate :: LaunchTemplate

-- | The launch template to use.
launchTemplate_launchTemplateSpecification :: Lens' LaunchTemplate (Maybe LaunchTemplateSpecification)

-- | Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
launchTemplate_overrides :: Lens' LaunchTemplate (Maybe [LaunchTemplateOverrides])
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.LaunchTemplate.LaunchTemplate


module Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails

-- | Describes an EC2 instance associated with an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingInstanceDetails</a> smart constructor.
data AutoScalingInstanceDetails
AutoScalingInstanceDetails' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | The instance type of the EC2 instance.
[$sel:instanceType:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The launch template for the instance.
[$sel:launchTemplate:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe LaunchTemplateSpecification

-- | The launch configuration used to launch the instance. This value is
--   not available if you attached the instance to the Auto Scaling group.
[$sel:launchConfigurationName:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
[$sel:weightedCapacity:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The ID of the instance.
[$sel:instanceId:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The name of the Auto Scaling group for the instance.
[$sel:autoScalingGroupName:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The Availability Zone for the instance.
[$sel:availabilityZone:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The lifecycle state for the instance. The <tt>Quarantined</tt> state
--   is not used. For information about lifecycle states, see <a>Instance
--   lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
[$sel:lifecycleState:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The last reported health status of this instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and Amazon EC2 Auto Scaling
--   should terminate and replace it.
[$sel:healthStatus:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
[$sel:protectedFromScaleIn:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Bool

-- | Create a value of <a>AutoScalingInstanceDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceType</a> - The instance type of
--   the EC2 instance.
--   
--   <a>$sel:launchTemplate:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchTemplate</a> - The launch template
--   for the instance.
--   
--   <a>$sel:launchConfigurationName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchConfigurationName</a> - The launch
--   configuration used to launch the instance. This value is not available
--   if you attached the instance to the Auto Scaling group.
--   
--   <a>$sel:weightedCapacity:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_weightedCapacity</a> - The number of
--   capacity units contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_autoScalingGroupName</a> - The name of
--   the Auto Scaling group for the instance.
--   
--   <a>$sel:availabilityZone:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_availabilityZone</a> - The Availability
--   Zone for the instance.
--   
--   <a>$sel:lifecycleState:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_lifecycleState</a> - The lifecycle state
--   for the instance. The <tt>Quarantined</tt> state is not used. For
--   information about lifecycle states, see <a>Instance lifecycle</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
--   
--   <a>$sel:healthStatus:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_healthStatus</a> - The last reported
--   health status of this instance. "Healthy" means that the instance is
--   healthy and should remain in service. "Unhealthy" means that the
--   instance is unhealthy and Amazon EC2 Auto Scaling should terminate and
--   replace it.
--   
--   <a>$sel:protectedFromScaleIn:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_protectedFromScaleIn</a> - Indicates
--   whether the instance is protected from termination by Amazon EC2 Auto
--   Scaling when scaling in.
newAutoScalingInstanceDetails :: Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | The instance type of the EC2 instance.
autoScalingInstanceDetails_instanceType :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The launch template for the instance.
autoScalingInstanceDetails_launchTemplate :: Lens' AutoScalingInstanceDetails (Maybe LaunchTemplateSpecification)

-- | The launch configuration used to launch the instance. This value is
--   not available if you attached the instance to the Auto Scaling group.
autoScalingInstanceDetails_launchConfigurationName :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
autoScalingInstanceDetails_weightedCapacity :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The ID of the instance.
autoScalingInstanceDetails_instanceId :: Lens' AutoScalingInstanceDetails Text

-- | The name of the Auto Scaling group for the instance.
autoScalingInstanceDetails_autoScalingGroupName :: Lens' AutoScalingInstanceDetails Text

-- | The Availability Zone for the instance.
autoScalingInstanceDetails_availabilityZone :: Lens' AutoScalingInstanceDetails Text

-- | The lifecycle state for the instance. The <tt>Quarantined</tt> state
--   is not used. For information about lifecycle states, see <a>Instance
--   lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
autoScalingInstanceDetails_lifecycleState :: Lens' AutoScalingInstanceDetails Text

-- | The last reported health status of this instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and Amazon EC2 Auto Scaling
--   should terminate and replace it.
autoScalingInstanceDetails_healthStatus :: Lens' AutoScalingInstanceDetails Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
autoScalingInstanceDetails_protectedFromScaleIn :: Lens' AutoScalingInstanceDetails Bool
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance GHC.Show.Show Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance GHC.Read.Read Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.AutoScalingInstanceDetails.AutoScalingInstanceDetails


module Network.AWS.AutoScaling.Types.LifecycleHook

-- | Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that
--   you want to perform an action whenever it launches instances or
--   terminates instances.
--   
--   <i>See:</i> <a>newLifecycleHook</a> smart constructor.
data LifecycleHook
LifecycleHook' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target.
[$sel:roleARN:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The state of the EC2 instance to which to attach the lifecycle hook.
--   The following are possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
[$sel:lifecycleTransition:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
[$sel:notificationTargetARN:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. If the lifecycle hook times out, Amazon EC2 Auto
--   Scaling performs the action that you specified in the
--   <tt>DefaultResult</tt> parameter.
[$sel:heartbeatTimeout:LifecycleHook'] :: LifecycleHook -> Maybe Int

-- | The maximum time, in seconds, that an instance can remain in a
--   <tt>Pending:Wait</tt> or <tt>Terminating:Wait</tt> state. The maximum
--   is 172800 seconds (48 hours) or 100 times <tt>HeartbeatTimeout</tt>,
--   whichever is smaller.
[$sel:globalTimeout:LifecycleHook'] :: LifecycleHook -> Maybe Int

-- | Additional information that is included any time Amazon EC2 Auto
--   Scaling sends a message to the notification target.
[$sel:notificationMetadata:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   possible values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
[$sel:defaultResult:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The name of the Auto Scaling group for the lifecycle hook.
[$sel:autoScalingGroupName:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | Create a value of <a>LifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHook'</a>, <a>lifecycleHook_roleARN</a> - The
--   ARN of the IAM role that allows the Auto Scaling group to publish to
--   the specified notification target.
--   
--   <a>$sel:lifecycleTransition:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleTransition</a> - The state of the EC2
--   instance to which to attach the lifecycle hook. The following are
--   possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   <a>$sel:notificationTargetARN:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationTargetARN</a> - The ARN of the target
--   that Amazon EC2 Auto Scaling sends notifications to when an instance
--   is in the transition state for the lifecycle hook. The notification
--   target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_heartbeatTimeout</a> - The maximum time, in seconds,
--   that can elapse before the lifecycle hook times out. If the lifecycle
--   hook times out, Amazon EC2 Auto Scaling performs the action that you
--   specified in the <tt>DefaultResult</tt> parameter.
--   
--   <a>$sel:globalTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_globalTimeout</a> - The maximum time, in seconds,
--   that an instance can remain in a <tt>Pending:Wait</tt> or
--   <tt>Terminating:Wait</tt> state. The maximum is 172800 seconds (48
--   hours) or 100 times <tt>HeartbeatTimeout</tt>, whichever is smaller.
--   
--   <a>$sel:notificationMetadata:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationMetadata</a> - Additional information
--   that is included any time Amazon EC2 Auto Scaling sends a message to
--   the notification target.
--   
--   <a>$sel:lifecycleHookName:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleHookName</a> - The name of the lifecycle
--   hook.
--   
--   <a>$sel:defaultResult:LifecycleHook'</a>,
--   <a>lifecycleHook_defaultResult</a> - Defines the action the Auto
--   Scaling group should take when the lifecycle hook timeout elapses or
--   if an unexpected failure occurs. The possible values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
--   
--   <a>$sel:autoScalingGroupName:LifecycleHook'</a>,
--   <a>lifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group for the lifecycle hook.
newLifecycleHook :: LifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target.
lifecycleHook_roleARN :: Lens' LifecycleHook (Maybe Text)

-- | The state of the EC2 instance to which to attach the lifecycle hook.
--   The following are possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHook_lifecycleTransition :: Lens' LifecycleHook (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHook_notificationTargetARN :: Lens' LifecycleHook (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. If the lifecycle hook times out, Amazon EC2 Auto
--   Scaling performs the action that you specified in the
--   <tt>DefaultResult</tt> parameter.
lifecycleHook_heartbeatTimeout :: Lens' LifecycleHook (Maybe Int)

-- | The maximum time, in seconds, that an instance can remain in a
--   <tt>Pending:Wait</tt> or <tt>Terminating:Wait</tt> state. The maximum
--   is 172800 seconds (48 hours) or 100 times <tt>HeartbeatTimeout</tt>,
--   whichever is smaller.
lifecycleHook_globalTimeout :: Lens' LifecycleHook (Maybe Int)

-- | Additional information that is included any time Amazon EC2 Auto
--   Scaling sends a message to the notification target.
lifecycleHook_notificationMetadata :: Lens' LifecycleHook (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHook_lifecycleHookName :: Lens' LifecycleHook (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   possible values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
lifecycleHook_defaultResult :: Lens' LifecycleHook (Maybe Text)

-- | The name of the Auto Scaling group for the lifecycle hook.
lifecycleHook_autoScalingGroupName :: Lens' LifecycleHook (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LifecycleHook.LifecycleHook


module Network.AWS.AutoScaling.Types.LifecycleHookSpecification

-- | Describes information used to specify a lifecycle hook for an Auto
--   Scaling group.
--   
--   A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on
--   an instance when the instance launches (before it is put into service)
--   or as the instance terminates (before it is fully terminated).
--   
--   This step is a part of the procedure for creating a lifecycle hook for
--   an Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>__Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.__</li>
--   <li>If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state.</li>
--   <li>If you finish before the timeout period ends, complete the
--   lifecycle action.</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLifecycleHookSpecification</a> smart constructor.
data LifecycleHookSpecification
LifecycleHookSpecification' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleHookSpecification

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
[$sel:roleARN:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
[$sel:notificationTargetARN:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
[$sel:heartbeatTimeout:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Int

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
[$sel:notificationMetadata:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   valid values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default
--   value is <tt>ABANDON</tt>.
[$sel:defaultResult:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Text

-- | The state of the EC2 instance to which you want to attach the
--   lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
[$sel:lifecycleTransition:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Text

-- | Create a value of <a>LifecycleHookSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_roleARN</a> - The ARN of the IAM role
--   that allows the Auto Scaling group to publish to the specified
--   notification target, for example, an Amazon SNS topic or an Amazon SQS
--   queue.
--   
--   <a>$sel:notificationTargetARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationTargetARN</a> - The ARN of
--   the target that Amazon EC2 Auto Scaling sends notifications to when an
--   instance is in the transition state for the lifecycle hook. The
--   notification target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_heartbeatTimeout</a> - The maximum time,
--   in seconds, that can elapse before the lifecycle hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
--   
--   <a>$sel:notificationMetadata:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationMetadata</a> - Additional
--   information that you want to include any time Amazon EC2 Auto Scaling
--   sends a message to the notification target.
--   
--   <a>$sel:defaultResult:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_defaultResult</a> - Defines the action
--   the Auto Scaling group should take when the lifecycle hook timeout
--   elapses or if an unexpected failure occurs. The valid values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default value is
--   <tt>ABANDON</tt>.
--   
--   <a>$sel:lifecycleHookName:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:lifecycleTransition:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleTransition</a> - The state of
--   the EC2 instance to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
newLifecycleHookSpecification :: Text -> Text -> LifecycleHookSpecification

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
lifecycleHookSpecification_roleARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHookSpecification_notificationTargetARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
lifecycleHookSpecification_heartbeatTimeout :: Lens' LifecycleHookSpecification (Maybe Int)

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
lifecycleHookSpecification_notificationMetadata :: Lens' LifecycleHookSpecification (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   valid values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default
--   value is <tt>ABANDON</tt>.
lifecycleHookSpecification_defaultResult :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHookSpecification_lifecycleHookName :: Lens' LifecycleHookSpecification Text

-- | The state of the EC2 instance to which you want to attach the
--   lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHookSpecification_lifecycleTransition :: Lens' LifecycleHookSpecification Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.LifecycleHookSpecification.LifecycleHookSpecification


module Network.AWS.AutoScaling.Types.LifecycleState
newtype LifecycleState
LifecycleState' :: Text -> LifecycleState
[fromLifecycleState] :: LifecycleState -> Text
pattern LifecycleState_Detached :: LifecycleState
pattern LifecycleState_Detaching :: LifecycleState
pattern LifecycleState_EnteringStandby :: LifecycleState
pattern LifecycleState_InService :: LifecycleState
pattern LifecycleState_Pending :: LifecycleState
pattern LifecycleState_Pending_Proceed :: LifecycleState
pattern LifecycleState_Pending_Wait :: LifecycleState
pattern LifecycleState_Quarantined :: LifecycleState
pattern LifecycleState_Standby :: LifecycleState
pattern LifecycleState_Terminated :: LifecycleState
pattern LifecycleState_Terminating :: LifecycleState
pattern LifecycleState_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Terminating_Wait :: LifecycleState
pattern LifecycleState_Warmed_Pending :: LifecycleState
pattern LifecycleState_Warmed_Pending_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Pending_Wait :: LifecycleState
pattern LifecycleState_Warmed_Running :: LifecycleState
pattern LifecycleState_Warmed_Stopped :: LifecycleState
pattern LifecycleState_Warmed_Terminated :: LifecycleState
pattern LifecycleState_Warmed_Terminating :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Wait :: LifecycleState
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LifecycleState.LifecycleState


module Network.AWS.AutoScaling.Types.Instance

-- | Describes an EC2 instance.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | The instance type of the EC2 instance.
[$sel:instanceType:Instance'] :: Instance -> Maybe Text

-- | The launch template for the instance.
[$sel:launchTemplate:Instance'] :: Instance -> Maybe LaunchTemplateSpecification

-- | The launch configuration associated with the instance.
[$sel:launchConfigurationName:Instance'] :: Instance -> Maybe Text

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
[$sel:weightedCapacity:Instance'] :: Instance -> Maybe Text

-- | The ID of the instance.
[$sel:instanceId:Instance'] :: Instance -> Text

-- | The Availability Zone in which the instance is running.
[$sel:availabilityZone:Instance'] :: Instance -> Text

-- | A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:lifecycleState:Instance'] :: Instance -> LifecycleState

-- | The last reported health status of the instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and that Amazon EC2 Auto Scaling
--   should terminate and replace it.
[$sel:healthStatus:Instance'] :: Instance -> Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
[$sel:protectedFromScaleIn:Instance'] :: Instance -> Bool

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type of the EC2 instance.
--   
--   <a>$sel:launchTemplate:Instance'</a>, <a>instance_launchTemplate</a> -
--   The launch template for the instance.
--   
--   <a>$sel:launchConfigurationName:Instance'</a>,
--   <a>instance_launchConfigurationName</a> - The launch configuration
--   associated with the instance.
--   
--   <a>$sel:weightedCapacity:Instance'</a>,
--   <a>instance_weightedCapacity</a> - The number of capacity units
--   contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:availabilityZone:Instance'</a>,
--   <a>instance_availabilityZone</a> - The Availability Zone in which the
--   instance is running.
--   
--   <a>$sel:lifecycleState:Instance'</a>, <a>instance_lifecycleState</a> -
--   A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:healthStatus:Instance'</a>, <a>instance_healthStatus</a> - The
--   last reported health status of the instance. "Healthy" means that the
--   instance is healthy and should remain in service. "Unhealthy" means
--   that the instance is unhealthy and that Amazon EC2 Auto Scaling should
--   terminate and replace it.
--   
--   <a>$sel:protectedFromScaleIn:Instance'</a>,
--   <a>instance_protectedFromScaleIn</a> - Indicates whether the instance
--   is protected from termination by Amazon EC2 Auto Scaling when scaling
--   in.
newInstance :: Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | The instance type of the EC2 instance.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The launch template for the instance.
instance_launchTemplate :: Lens' Instance (Maybe LaunchTemplateSpecification)

-- | The launch configuration associated with the instance.
instance_launchConfigurationName :: Lens' Instance (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
instance_weightedCapacity :: Lens' Instance (Maybe Text)

-- | The ID of the instance.
instance_instanceId :: Lens' Instance Text

-- | The Availability Zone in which the instance is running.
instance_availabilityZone :: Lens' Instance Text

-- | A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
instance_lifecycleState :: Lens' Instance LifecycleState

-- | The last reported health status of the instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and that Amazon EC2 Auto Scaling
--   should terminate and replace it.
instance_healthStatus :: Lens' Instance Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
instance_protectedFromScaleIn :: Lens' Instance Bool
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Instance.Instance
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Instance.Instance
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Instance.Instance
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Instance.Instance
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.Instance.Instance
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Instance.Instance
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Instance.Instance


module Network.AWS.AutoScaling.Types.LoadBalancerState

-- | Describes the state of a Classic Load Balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe Text -> LoadBalancerState

-- | One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
[$sel:state:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | The name of the load balancer.
[$sel:loadBalancerName:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerState'</a>, <a>loadBalancerState_state</a> -
--   One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerName:LoadBalancerState'</a>,
--   <a>loadBalancerState_loadBalancerName</a> - The name of the load
--   balancer.
newLoadBalancerState :: LoadBalancerState

-- | One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
loadBalancerState_state :: Lens' LoadBalancerState (Maybe Text)

-- | The name of the load balancer.
loadBalancerState_loadBalancerName :: Lens' LoadBalancerState (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LoadBalancerState.LoadBalancerState


module Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState

-- | Describes the state of a target group.
--   
--   <i>See:</i> <a>newLoadBalancerTargetGroupState</a> smart constructor.
data LoadBalancerTargetGroupState
LoadBalancerTargetGroupState' :: Maybe Text -> Maybe Text -> LoadBalancerTargetGroupState

-- | The state of the target group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
[$sel:state:LoadBalancerTargetGroupState'] :: LoadBalancerTargetGroupState -> Maybe Text

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:loadBalancerTargetGroupARN:LoadBalancerTargetGroupState'] :: LoadBalancerTargetGroupState -> Maybe Text

-- | Create a value of <a>LoadBalancerTargetGroupState</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_state</a> - The state of the target
--   group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerTargetGroupARN:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_loadBalancerTargetGroupARN</a> - The
--   Amazon Resource Name (ARN) of the target group.
newLoadBalancerTargetGroupState :: LoadBalancerTargetGroupState

-- | The state of the target group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
loadBalancerTargetGroupState_state :: Lens' LoadBalancerTargetGroupState (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
loadBalancerTargetGroupState_loadBalancerTargetGroupARN :: Lens' LoadBalancerTargetGroupState (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LoadBalancerTargetGroupState.LoadBalancerTargetGroupState


module Network.AWS.AutoScaling.Types.MetricCollectionType

-- | Describes a metric.
--   
--   <i>See:</i> <a>newMetricCollectionType</a> smart constructor.
data MetricCollectionType
MetricCollectionType' :: Maybe Text -> MetricCollectionType

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
[$sel:metric:MetricCollectionType'] :: MetricCollectionType -> Maybe Text

-- | Create a value of <a>MetricCollectionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metric:MetricCollectionType'</a>,
--   <a>metricCollectionType_metric</a> - One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newMetricCollectionType :: MetricCollectionType

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
metricCollectionType_metric :: Lens' MetricCollectionType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MetricCollectionType.MetricCollectionType


module Network.AWS.AutoScaling.Types.MetricDimension

-- | Describes the dimension of a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.MetricDimension.MetricDimension


module Network.AWS.AutoScaling.Types.MetricGranularityType

-- | Describes a granularity of a metric.
--   
--   <i>See:</i> <a>newMetricGranularityType</a> smart constructor.
data MetricGranularityType
MetricGranularityType' :: Maybe Text -> MetricGranularityType

-- | The granularity. The only valid value is <tt>1Minute</tt>.
[$sel:granularity:MetricGranularityType'] :: MetricGranularityType -> Maybe Text

-- | Create a value of <a>MetricGranularityType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:MetricGranularityType'</a>,
--   <a>metricGranularityType_granularity</a> - The granularity. The only
--   valid value is <tt>1Minute</tt>.
newMetricGranularityType :: MetricGranularityType

-- | The granularity. The only valid value is <tt>1Minute</tt>.
metricGranularityType_granularity :: Lens' MetricGranularityType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MetricGranularityType.MetricGranularityType


module Network.AWS.AutoScaling.Types.MetricStatistic
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MetricStatistic.MetricStatistic


module Network.AWS.AutoScaling.Types.CustomizedMetricSpecification

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Amazon EC2 Auto Scaling.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
[$sel:dimensions:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification


module Network.AWS.AutoScaling.Types.MetricType
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_ASGAverageCPUUtilization :: MetricType
pattern MetricType_ASGAverageNetworkIn :: MetricType
pattern MetricType_ASGAverageNetworkOut :: MetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MetricType.MetricType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MetricType.MetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MetricType.MetricType
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.MetricType.MetricType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MetricType.MetricType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MetricType.MetricType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MetricType.MetricType


module Network.AWS.AutoScaling.Types.MixedInstancesPolicy

-- | Describes a mixed instances policy. A mixed instances policy contains
--   the instance types Amazon EC2 Auto Scaling can launch, and other
--   information Amazon EC2 Auto Scaling can use to launch instances to
--   help you optimize your costs. For more information, see <a>Auto
--   Scaling groups with multiple instance types and purchase options</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newMixedInstancesPolicy</a> smart constructor.
data MixedInstancesPolicy
MixedInstancesPolicy' :: Maybe InstancesDistribution -> Maybe LaunchTemplate -> MixedInstancesPolicy

-- | Specifies the instances distribution. If not provided, the value for
--   each property in <tt>InstancesDistribution</tt> uses a default value.
[$sel:instancesDistribution:MixedInstancesPolicy'] :: MixedInstancesPolicy -> Maybe InstancesDistribution

-- | Specifies the launch template to use and the instance types
--   (overrides) that are used to provision EC2 instances to fulfill
--   On-Demand and Spot capacities. Required when creating a mixed
--   instances policy.
[$sel:launchTemplate:MixedInstancesPolicy'] :: MixedInstancesPolicy -> Maybe LaunchTemplate

-- | Create a value of <a>MixedInstancesPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instancesDistribution:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_instancesDistribution</a> - Specifies the
--   instances distribution. If not provided, the value for each property
--   in <tt>InstancesDistribution</tt> uses a default value.
--   
--   <a>$sel:launchTemplate:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_launchTemplate</a> - Specifies the launch
--   template to use and the instance types (overrides) that are used to
--   provision EC2 instances to fulfill On-Demand and Spot capacities.
--   Required when creating a mixed instances policy.
newMixedInstancesPolicy :: MixedInstancesPolicy

-- | Specifies the instances distribution. If not provided, the value for
--   each property in <tt>InstancesDistribution</tt> uses a default value.
mixedInstancesPolicy_instancesDistribution :: Lens' MixedInstancesPolicy (Maybe InstancesDistribution)

-- | Specifies the launch template to use and the instance types
--   (overrides) that are used to provision EC2 instances to fulfill
--   On-Demand and Spot capacities. Required when creating a mixed
--   instances policy.
mixedInstancesPolicy_launchTemplate :: Lens' MixedInstancesPolicy (Maybe LaunchTemplate)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance GHC.Show.Show Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance GHC.Read.Read Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.MixedInstancesPolicy.MixedInstancesPolicy


module Network.AWS.AutoScaling.Types.DesiredConfiguration

-- | Describes the desired configuration for an instance refresh.
--   
--   If you specify a desired configuration, you must specify either a
--   <tt>LaunchTemplate</tt> or a <tt>MixedInstancesPolicy</tt>.
--   
--   <i>See:</i> <a>newDesiredConfiguration</a> smart constructor.
data DesiredConfiguration
DesiredConfiguration' :: Maybe LaunchTemplateSpecification -> Maybe MixedInstancesPolicy -> DesiredConfiguration
[$sel:launchTemplate:DesiredConfiguration'] :: DesiredConfiguration -> Maybe LaunchTemplateSpecification
[$sel:mixedInstancesPolicy:DesiredConfiguration'] :: DesiredConfiguration -> Maybe MixedInstancesPolicy

-- | Create a value of <a>DesiredConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplate:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_launchTemplate</a> - Undocumented member.
--   
--   <a>$sel:mixedInstancesPolicy:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_mixedInstancesPolicy</a> - Undocumented
--   member.
newDesiredConfiguration :: DesiredConfiguration

-- | Undocumented member.
desiredConfiguration_launchTemplate :: Lens' DesiredConfiguration (Maybe LaunchTemplateSpecification)

-- | Undocumented member.
desiredConfiguration_mixedInstancesPolicy :: Lens' DesiredConfiguration (Maybe MixedInstancesPolicy)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.DesiredConfiguration.DesiredConfiguration


module Network.AWS.AutoScaling.Types.NotificationConfiguration

-- | Describes a notification.
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> NotificationConfiguration

-- | One of the following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
[$sel:notificationType:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
[$sel:topicARN:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationType:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_notificationType</a> - One of the
--   following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
--   
--   <a>$sel:topicARN:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicARN</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
--   
--   <a>$sel:autoScalingGroupName:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newNotificationConfiguration :: NotificationConfiguration

-- | One of the following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
notificationConfiguration_notificationType :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
notificationConfiguration_topicARN :: Lens' NotificationConfiguration (Maybe Text)

-- | The name of the Auto Scaling group.
notificationConfiguration_autoScalingGroupName :: Lens' NotificationConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.NotificationConfiguration.NotificationConfiguration


module Network.AWS.AutoScaling.Types.PredefinedLoadMetricType
newtype PredefinedLoadMetricType
PredefinedLoadMetricType' :: Text -> PredefinedLoadMetricType
[fromPredefinedLoadMetricType] :: PredefinedLoadMetricType -> Text
pattern PredefinedLoadMetricType_ALBTargetGroupRequestCount :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalCPUUtilization :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkIn :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkOut :: PredefinedLoadMetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredefinedLoadMetricType.PredefinedLoadMetricType


module Network.AWS.AutoScaling.Types.PredefinedMetricPairType
newtype PredefinedMetricPairType
PredefinedMetricPairType' :: Text -> PredefinedMetricPairType
[fromPredefinedMetricPairType] :: PredefinedMetricPairType -> Text
pattern PredefinedMetricPairType_ALBRequestCount :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGCPUUtilization :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkIn :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkOut :: PredefinedMetricPairType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredefinedMetricPairType.PredefinedMetricPairType


module Network.AWS.AutoScaling.Types.PredefinedMetricSpecification

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> Maybe Text

-- | The metric type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
[$sel:predefinedMetricType:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> MetricType

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - A label that
--   uniquely identifies a specific Application Load Balancer target group
--   from which to determine the average request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification


module Network.AWS.AutoScaling.Types.PredefinedScalingMetricType
newtype PredefinedScalingMetricType
PredefinedScalingMetricType' :: Text -> PredefinedScalingMetricType
[fromPredefinedScalingMetricType] :: PredefinedScalingMetricType -> Text
pattern PredefinedScalingMetricType_ALBRequestCountPerTarget :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageCPUUtilization :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkIn :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkOut :: PredefinedScalingMetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredefinedScalingMetricType.PredefinedScalingMetricType


module Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior
newtype PredictiveScalingMaxCapacityBreachBehavior
PredictiveScalingMaxCapacityBreachBehavior' :: Text -> PredictiveScalingMaxCapacityBreachBehavior
[fromPredictiveScalingMaxCapacityBreachBehavior] :: PredictiveScalingMaxCapacityBreachBehavior -> Text
pattern PredictiveScalingMaxCapacityBreachBehavior_HonorMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
pattern PredictiveScalingMaxCapacityBreachBehavior_IncreaseMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingMaxCapacityBreachBehavior.PredictiveScalingMaxCapacityBreachBehavior


module Network.AWS.AutoScaling.Types.PredictiveScalingMode
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingMode.PredictiveScalingMode


module Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric

-- | Describes a load metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedLoadMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedLoadMetric
PredictiveScalingPredefinedLoadMetric' :: Maybe Text -> PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the request count served by your
--   Auto Scaling group. You can't specify a resource label unless the
--   target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedLoadMetric'] :: PredictiveScalingPredefinedLoadMetric -> Maybe Text

-- | The metric type.
[$sel:predefinedMetricType:PredictiveScalingPredefinedLoadMetric'] :: PredictiveScalingPredefinedLoadMetric -> PredefinedLoadMetricType

-- | Create a value of <a>PredictiveScalingPredefinedLoadMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedLoadMetric :: PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the request count served by your
--   Auto Scaling group. You can't specify a resource label unless the
--   target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedLoadMetric_resourceLabel :: Lens' PredictiveScalingPredefinedLoadMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedLoadMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedLoadMetric PredefinedLoadMetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedLoadMetric.PredictiveScalingPredefinedLoadMetric


module Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair

-- | Represents a metric pair for a predictive scaling policy.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedMetricPair</a> smart
--   constructor.
data PredictiveScalingPredefinedMetricPair
PredictiveScalingPredefinedMetricPair' :: Maybe Text -> PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the total and average request
--   count served by your Auto Scaling group. You can't specify a resource
--   label unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedMetricPair'] :: PredictiveScalingPredefinedMetricPair -> Maybe Text

-- | Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
[$sel:predefinedMetricType:PredictiveScalingPredefinedMetricPair'] :: PredictiveScalingPredefinedMetricPair -> PredefinedMetricPairType

-- | Create a value of <a>PredictiveScalingPredefinedMetricPair</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the total and average request count
--   served by your Auto Scaling group. You can't specify a resource label
--   unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_predefinedMetricType</a> -
--   Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
newPredictiveScalingPredefinedMetricPair :: PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the total and average request
--   count served by your Auto Scaling group. You can't specify a resource
--   label unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedMetricPair_resourceLabel :: Lens' PredictiveScalingPredefinedMetricPair (Maybe Text)

-- | Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
predictiveScalingPredefinedMetricPair_predefinedMetricType :: Lens' PredictiveScalingPredefinedMetricPair PredefinedMetricPairType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedMetricPair.PredictiveScalingPredefinedMetricPair


module Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric

-- | Describes a scaling metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedScalingMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedScalingMetric
PredictiveScalingPredefinedScalingMetric' :: Maybe Text -> PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedScalingMetric'] :: PredictiveScalingPredefinedScalingMetric -> Maybe Text

-- | The metric type.
[$sel:predefinedMetricType:PredictiveScalingPredefinedScalingMetric'] :: PredictiveScalingPredefinedScalingMetric -> PredefinedScalingMetricType

-- | Create a value of <a>PredictiveScalingPredefinedScalingMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_resourceLabel</a> - A
--   label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedScalingMetric :: PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedScalingMetric_resourceLabel :: Lens' PredictiveScalingPredefinedScalingMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedScalingMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedScalingMetric PredefinedScalingMetricType
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingPredefinedScalingMetric.PredictiveScalingPredefinedScalingMetric


module Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification

-- | This structure specifies the metrics and target utilization settings
--   for a predictive scaling policy.
--   
--   You must specify either a metric pair, or a load metric and a scaling
--   metric individually. Specifying a metric pair instead of individual
--   metrics provides a simpler way to configure metrics for a scaling
--   policy. You choose the metric pair, and the policy automatically knows
--   the correct sum and average statistics to use for the load metric and
--   the scaling metric.
--   
--   Example
--   
--   <ul>
--   <li>You create a predictive scaling policy and specify
--   <tt>ALBRequestCount</tt> as the value for the metric pair and
--   <tt>1000.0</tt> as the target value. For this type of metric, you must
--   provide the metric dimension for the corresponding target group, so
--   you also provide a resource label for the Application Load Balancer
--   target group that is attached to your Auto Scaling group.</li>
--   <li>The number of requests the target group receives per minute
--   provides the load metric, and the request count averaged between the
--   members of the target group provides the scaling metric. In
--   CloudWatch, this refers to the <tt>RequestCount</tt> and
--   <tt>RequestCountPerTarget</tt> metrics, respectively.</li>
--   <li>For optimal use of predictive scaling, you adhere to the best
--   practice of using a dynamic scaling policy to automatically scale
--   between the minimum capacity and maximum capacity in response to
--   real-time changes in resource utilization.</li>
--   <li>Amazon EC2 Auto Scaling consumes data points for the load metric
--   over the last 14 days and creates an hourly load forecast for
--   predictive scaling. (A minimum of 24 hours of data is required.)</li>
--   <li>After creating the load forecast, Amazon EC2 Auto Scaling
--   determines when to reduce or increase the capacity of your Auto
--   Scaling group in each hour of the forecast period so that the average
--   number of requests received by each instance is as close to 1000
--   requests per minute as possible at all times.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPredictiveScalingMetricSpecification</a> smart
--   constructor.
data PredictiveScalingMetricSpecification
PredictiveScalingMetricSpecification' :: Maybe PredictiveScalingPredefinedLoadMetric -> Maybe PredictiveScalingPredefinedScalingMetric -> Maybe PredictiveScalingPredefinedMetricPair -> Double -> PredictiveScalingMetricSpecification

-- | The load metric specification.
[$sel:predefinedLoadMetricSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedLoadMetric

-- | The scaling metric specification.
[$sel:predefinedScalingMetricSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedScalingMetric

-- | The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
[$sel:predefinedMetricPairSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedMetricPair

-- | Specifies the target utilization.
[$sel:targetValue:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Double

-- | Create a value of <a>PredictiveScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:predefinedLoadMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedLoadMetricSpecification</a>
--   - The load metric specification.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedScalingMetricSpecification</a>
--   - The scaling metric specification.
--   
--   
--   <a>$sel:predefinedMetricPairSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedMetricPairSpecification</a>
--   - The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
--   
--   <a>$sel:targetValue:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_targetValue</a> - Specifies
--   the target utilization.
newPredictiveScalingMetricSpecification :: Double -> PredictiveScalingMetricSpecification

-- | The load metric specification.
predictiveScalingMetricSpecification_predefinedLoadMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedLoadMetric)

-- | The scaling metric specification.
predictiveScalingMetricSpecification_predefinedScalingMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedScalingMetric)

-- | The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
predictiveScalingMetricSpecification_predefinedMetricPairSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedMetricPair)

-- | Specifies the target utilization.
predictiveScalingMetricSpecification_targetValue :: Lens' PredictiveScalingMetricSpecification Double
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingMetricSpecification.PredictiveScalingMetricSpecification


module Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration

-- | Represents a predictive scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredictiveScalingConfiguration</a> smart
--   constructor.
data PredictiveScalingConfiguration
PredictiveScalingConfiguration' :: Maybe PredictiveScalingMaxCapacityBreachBehavior -> Maybe PredictiveScalingMode -> Maybe Natural -> Maybe Natural -> [PredictiveScalingMetricSpecification] -> PredictiveScalingConfiguration

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
[$sel:maxCapacityBreachBehavior:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe PredictiveScalingMaxCapacityBreachBehavior

-- | The predictive scaling mode. Defaults to <tt>ForecastOnly</tt> if not
--   specified.
[$sel:mode:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe PredictiveScalingMode

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
[$sel:maxCapacityBuffer:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe Natural

-- | The amount of time, in seconds, by which the instance launch time can
--   be advanced. For example, the forecast says to add capacity at 10:00
--   AM, and you choose to pre-launch instances by 5 minutes. In that case,
--   the instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
[$sel:schedulingBufferTime:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe Natural

-- | This structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
[$sel:metricSpecifications:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> [PredictiveScalingMetricSpecification]

-- | Create a value of <a>PredictiveScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacityBreachBehavior:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBreachBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
--   
--   <a>$sel:mode:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_mode</a> - The predictive scaling
--   mode. Defaults to <tt>ForecastOnly</tt> if not specified.
--   
--   <a>$sel:maxCapacityBuffer:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBuffer</a> - The size of
--   the capacity buffer to use when the forecast capacity is close to or
--   exceeds the maximum capacity. The value is specified as a percentage
--   relative to the forecast capacity. For example, if the buffer is 10,
--   this means a 10 percent buffer, such that if the forecast capacity is
--   50, and the maximum capacity is 40, then the effective maximum
--   capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
--   
--   <a>$sel:schedulingBufferTime:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_schedulingBufferTime</a> - The
--   amount of time, in seconds, by which the instance launch time can be
--   advanced. For example, the forecast says to add capacity at 10:00 AM,
--   and you choose to pre-launch instances by 5 minutes. In that case, the
--   instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
--   
--   <a>$sel:metricSpecifications:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_metricSpecifications</a> - This
--   structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
newPredictiveScalingConfiguration :: PredictiveScalingConfiguration

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
predictiveScalingConfiguration_maxCapacityBreachBehavior :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMaxCapacityBreachBehavior)

-- | The predictive scaling mode. Defaults to <tt>ForecastOnly</tt> if not
--   specified.
predictiveScalingConfiguration_mode :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMode)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
predictiveScalingConfiguration_maxCapacityBuffer :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | The amount of time, in seconds, by which the instance launch time can
--   be advanced. For example, the forecast says to add capacity at 10:00
--   AM, and you choose to pre-launch instances by 5 minutes. In that case,
--   the instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
predictiveScalingConfiguration_schedulingBufferTime :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | This structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
predictiveScalingConfiguration_metricSpecifications :: Lens' PredictiveScalingConfiguration [PredictiveScalingMetricSpecification]
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.PredictiveScalingConfiguration.PredictiveScalingConfiguration


module Network.AWS.AutoScaling.Types.LoadForecast

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the load forecast
--   for a predictive scaling policy. This structure includes the data
--   points for that load forecast, along with the timestamps of those data
--   points and the metric specification.
--   
--   <i>See:</i> <a>newLoadForecast</a> smart constructor.
data LoadForecast
LoadForecast' :: [ISO8601] -> [Double] -> PredictiveScalingMetricSpecification -> LoadForecast

-- | The time stamps for the data points, in UTC format.
[$sel:timestamps:LoadForecast'] :: LoadForecast -> [ISO8601]

-- | The values of the data points.
[$sel:values:LoadForecast'] :: LoadForecast -> [Double]

-- | The metric specification for the load forecast.
[$sel:metricSpecification:LoadForecast'] :: LoadForecast -> PredictiveScalingMetricSpecification

-- | Create a value of <a>LoadForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:LoadForecast'</a>, <a>loadForecast_timestamps</a> -
--   The time stamps for the data points, in UTC format.
--   
--   <a>$sel:values:LoadForecast'</a>, <a>loadForecast_values</a> - The
--   values of the data points.
--   
--   <a>$sel:metricSpecification:LoadForecast'</a>,
--   <a>loadForecast_metricSpecification</a> - The metric specification for
--   the load forecast.
newLoadForecast :: PredictiveScalingMetricSpecification -> LoadForecast

-- | The time stamps for the data points, in UTC format.
loadForecast_timestamps :: Lens' LoadForecast [UTCTime]

-- | The values of the data points.
loadForecast_values :: Lens' LoadForecast [Double]

-- | The metric specification for the load forecast.
loadForecast_metricSpecification :: Lens' LoadForecast PredictiveScalingMetricSpecification
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance GHC.Show.Show Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance GHC.Read.Read Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.LoadForecast.LoadForecast


module Network.AWS.AutoScaling.Types.ProcessType

-- | Describes a process type.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newProcessType</a> smart constructor.
data ProcessType
ProcessType' :: Text -> ProcessType

-- | One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
[$sel:processName:ProcessType'] :: ProcessType -> Text

-- | Create a value of <a>ProcessType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:ProcessType'</a>, <a>processType_processName</a> -
--   One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
newProcessType :: Text -> ProcessType

-- | One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
processType_processName :: Lens' ProcessType Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ProcessType.ProcessType
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ProcessType.ProcessType


module Network.AWS.AutoScaling.Types.RefreshPreferences

-- | Describes the preferences for an instance refresh.
--   
--   <i>See:</i> <a>newRefreshPreferences</a> smart constructor.
data RefreshPreferences
RefreshPreferences' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe [Natural] -> RefreshPreferences

-- | The amount of time, in seconds, to wait after a checkpoint before
--   continuing. This property is optional, but if you specify a value for
--   it, you must also specify a value for <tt>CheckpointPercentages</tt>.
--   If you specify a value for <tt>CheckpointPercentages</tt> and not for
--   <tt>CheckpointDelay</tt>, the <tt>CheckpointDelay</tt> defaults to
--   <tt>3600</tt> (1 hour).
[$sel:checkpointDelay:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | The amount of capacity in the Auto Scaling group that must remain
--   healthy during an instance refresh to allow the operation to continue.
--   The value is expressed as a percentage of the desired capacity of the
--   Auto Scaling group (rounded up to the nearest integer). The default is
--   <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
[$sel:minHealthyPercentage:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | The number of seconds until a newly launched instance is configured
--   and ready to use. During this time, Amazon EC2 Auto Scaling does not
--   immediately move on to the next replacement. The default is to use the
--   value for the health check grace period defined for the group.
[$sel:instanceWarmup:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | A boolean value that indicates whether skip matching is enabled. If
--   true, then Amazon EC2 Auto Scaling skips replacing instances that
--   match the desired configuration. If no desired configuration is
--   specified, then it skips replacing instances that have the same
--   configuration that is already set on the group. The default is
--   <tt>false</tt>.
[$sel:skipMatching:RefreshPreferences'] :: RefreshPreferences -> Maybe Bool

-- | Threshold values for each checkpoint in ascending order. Each number
--   must be unique. To replace all instances in the Auto Scaling group,
--   the last number in the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:checkpointPercentages:RefreshPreferences'] :: RefreshPreferences -> Maybe [Natural]

-- | Create a value of <a>RefreshPreferences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkpointDelay:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointDelay</a> - The amount of time, in
--   seconds, to wait after a checkpoint before continuing. This property
--   is optional, but if you specify a value for it, you must also specify
--   a value for <tt>CheckpointPercentages</tt>. If you specify a value for
--   <tt>CheckpointPercentages</tt> and not for <tt>CheckpointDelay</tt>,
--   the <tt>CheckpointDelay</tt> defaults to <tt>3600</tt> (1 hour).
--   
--   <a>$sel:minHealthyPercentage:RefreshPreferences'</a>,
--   <a>refreshPreferences_minHealthyPercentage</a> - The amount of
--   capacity in the Auto Scaling group that must remain healthy during an
--   instance refresh to allow the operation to continue. The value is
--   expressed as a percentage of the desired capacity of the Auto Scaling
--   group (rounded up to the nearest integer). The default is <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
--   
--   <a>$sel:instanceWarmup:RefreshPreferences'</a>,
--   <a>refreshPreferences_instanceWarmup</a> - The number of seconds until
--   a newly launched instance is configured and ready to use. During this
--   time, Amazon EC2 Auto Scaling does not immediately move on to the next
--   replacement. The default is to use the value for the health check
--   grace period defined for the group.
--   
--   <a>$sel:skipMatching:RefreshPreferences'</a>,
--   <a>refreshPreferences_skipMatching</a> - A boolean value that
--   indicates whether skip matching is enabled. If true, then Amazon EC2
--   Auto Scaling skips replacing instances that match the desired
--   configuration. If no desired configuration is specified, then it skips
--   replacing instances that have the same configuration that is already
--   set on the group. The default is <tt>false</tt>.
--   
--   <a>$sel:checkpointPercentages:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointPercentages</a> - Threshold values for
--   each checkpoint in ascending order. Each number must be unique. To
--   replace all instances in the Auto Scaling group, the last number in
--   the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
newRefreshPreferences :: RefreshPreferences

-- | The amount of time, in seconds, to wait after a checkpoint before
--   continuing. This property is optional, but if you specify a value for
--   it, you must also specify a value for <tt>CheckpointPercentages</tt>.
--   If you specify a value for <tt>CheckpointPercentages</tt> and not for
--   <tt>CheckpointDelay</tt>, the <tt>CheckpointDelay</tt> defaults to
--   <tt>3600</tt> (1 hour).
refreshPreferences_checkpointDelay :: Lens' RefreshPreferences (Maybe Natural)

-- | The amount of capacity in the Auto Scaling group that must remain
--   healthy during an instance refresh to allow the operation to continue.
--   The value is expressed as a percentage of the desired capacity of the
--   Auto Scaling group (rounded up to the nearest integer). The default is
--   <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
refreshPreferences_minHealthyPercentage :: Lens' RefreshPreferences (Maybe Natural)

-- | The number of seconds until a newly launched instance is configured
--   and ready to use. During this time, Amazon EC2 Auto Scaling does not
--   immediately move on to the next replacement. The default is to use the
--   value for the health check grace period defined for the group.
refreshPreferences_instanceWarmup :: Lens' RefreshPreferences (Maybe Natural)

-- | A boolean value that indicates whether skip matching is enabled. If
--   true, then Amazon EC2 Auto Scaling skips replacing instances that
--   match the desired configuration. If no desired configuration is
--   specified, then it skips replacing instances that have the same
--   configuration that is already set on the group. The default is
--   <tt>false</tt>.
refreshPreferences_skipMatching :: Lens' RefreshPreferences (Maybe Bool)

-- | Threshold values for each checkpoint in ascending order. Each number
--   must be unique. To replace all instances in the Auto Scaling group,
--   the last number in the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
refreshPreferences_checkpointPercentages :: Lens' RefreshPreferences (Maybe [Natural])
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance GHC.Show.Show Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance GHC.Read.Read Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.RefreshPreferences.RefreshPreferences


module Network.AWS.AutoScaling.Types.InstanceRefresh

-- | Describes an instance refresh for an Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefresh</a> smart constructor.
data InstanceRefresh
InstanceRefresh' :: Maybe InstanceRefreshStatus -> Maybe Text -> Maybe Natural -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe InstanceRefreshProgressDetails -> Maybe DesiredConfiguration -> Maybe RefreshPreferences -> Maybe Text -> Maybe Natural -> Maybe Text -> InstanceRefresh

-- | The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
[$sel:status:InstanceRefresh'] :: InstanceRefresh -> Maybe InstanceRefreshStatus

-- | The instance refresh ID.
[$sel:instanceRefreshId:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | The percentage of the instance refresh that is complete. For each
--   instance replacement, Amazon EC2 Auto Scaling tracks the instance's
--   health status and warm-up time. When the instance's health status
--   changes to healthy and the specified warm-up time passes, the instance
--   is considered updated and is added to the percentage complete.
[$sel:percentageComplete:InstanceRefresh'] :: InstanceRefresh -> Maybe Natural

-- | The date and time at which the instance refresh began.
[$sel:startTime:InstanceRefresh'] :: InstanceRefresh -> Maybe ISO8601

-- | The date and time at which the instance refresh ended.
[$sel:endTime:InstanceRefresh'] :: InstanceRefresh -> Maybe ISO8601

-- | Additional progress details for an Auto Scaling group that has a warm
--   pool.
[$sel:progressDetails:InstanceRefresh'] :: InstanceRefresh -> Maybe InstanceRefreshProgressDetails

-- | Describes the specific update you want to deploy.
[$sel:desiredConfiguration:InstanceRefresh'] :: InstanceRefresh -> Maybe DesiredConfiguration
[$sel:preferences:InstanceRefresh'] :: InstanceRefresh -> Maybe RefreshPreferences

-- | Provides more details about the current status of the instance
--   refresh.
[$sel:statusReason:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | The number of instances remaining to update before the instance
--   refresh is complete.
[$sel:instancesToUpdate:InstanceRefresh'] :: InstanceRefresh -> Maybe Natural

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | Create a value of <a>InstanceRefresh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InstanceRefresh'</a>, <a>instanceRefresh_status</a> -
--   The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
--   
--   <a>$sel:instanceRefreshId:InstanceRefresh'</a>,
--   <a>instanceRefresh_instanceRefreshId</a> - The instance refresh ID.
--   
--   <a>$sel:percentageComplete:InstanceRefresh'</a>,
--   <a>instanceRefresh_percentageComplete</a> - The percentage of the
--   instance refresh that is complete. For each instance replacement,
--   Amazon EC2 Auto Scaling tracks the instance's health status and
--   warm-up time. When the instance's health status changes to healthy and
--   the specified warm-up time passes, the instance is considered updated
--   and is added to the percentage complete.
--   
--   <a>$sel:startTime:InstanceRefresh'</a>,
--   <a>instanceRefresh_startTime</a> - The date and time at which the
--   instance refresh began.
--   
--   <a>$sel:endTime:InstanceRefresh'</a>, <a>instanceRefresh_endTime</a> -
--   The date and time at which the instance refresh ended.
--   
--   <a>$sel:progressDetails:InstanceRefresh'</a>,
--   <a>instanceRefresh_progressDetails</a> - Additional progress details
--   for an Auto Scaling group that has a warm pool.
--   
--   <a>$sel:desiredConfiguration:InstanceRefresh'</a>,
--   <a>instanceRefresh_desiredConfiguration</a> - Describes the specific
--   update you want to deploy.
--   
--   <a>$sel:preferences:InstanceRefresh'</a>,
--   <a>instanceRefresh_preferences</a> - Undocumented member.
--   
--   <a>$sel:statusReason:InstanceRefresh'</a>,
--   <a>instanceRefresh_statusReason</a> - Provides more details about the
--   current status of the instance refresh.
--   
--   <a>$sel:instancesToUpdate:InstanceRefresh'</a>,
--   <a>instanceRefresh_instancesToUpdate</a> - The number of instances
--   remaining to update before the instance refresh is complete.
--   
--   <a>$sel:autoScalingGroupName:InstanceRefresh'</a>,
--   <a>instanceRefresh_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newInstanceRefresh :: InstanceRefresh

-- | The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
instanceRefresh_status :: Lens' InstanceRefresh (Maybe InstanceRefreshStatus)

-- | The instance refresh ID.
instanceRefresh_instanceRefreshId :: Lens' InstanceRefresh (Maybe Text)

-- | The percentage of the instance refresh that is complete. For each
--   instance replacement, Amazon EC2 Auto Scaling tracks the instance's
--   health status and warm-up time. When the instance's health status
--   changes to healthy and the specified warm-up time passes, the instance
--   is considered updated and is added to the percentage complete.
instanceRefresh_percentageComplete :: Lens' InstanceRefresh (Maybe Natural)

-- | The date and time at which the instance refresh began.
instanceRefresh_startTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | The date and time at which the instance refresh ended.
instanceRefresh_endTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | Additional progress details for an Auto Scaling group that has a warm
--   pool.
instanceRefresh_progressDetails :: Lens' InstanceRefresh (Maybe InstanceRefreshProgressDetails)

-- | Describes the specific update you want to deploy.
instanceRefresh_desiredConfiguration :: Lens' InstanceRefresh (Maybe DesiredConfiguration)

-- | Undocumented member.
instanceRefresh_preferences :: Lens' InstanceRefresh (Maybe RefreshPreferences)

-- | Provides more details about the current status of the instance
--   refresh.
instanceRefresh_statusReason :: Lens' InstanceRefresh (Maybe Text)

-- | The number of instances remaining to update before the instance
--   refresh is complete.
instanceRefresh_instancesToUpdate :: Lens' InstanceRefresh (Maybe Natural)

-- | The name of the Auto Scaling group.
instanceRefresh_autoScalingGroupName :: Lens' InstanceRefresh (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance GHC.Show.Show Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance GHC.Read.Read Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.InstanceRefresh.InstanceRefresh


module Network.AWS.AutoScaling.Types.RefreshStrategy
newtype RefreshStrategy
RefreshStrategy' :: Text -> RefreshStrategy
[fromRefreshStrategy] :: RefreshStrategy -> Text
pattern RefreshStrategy_Rolling :: RefreshStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance GHC.Read.Read Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy
instance GHC.Show.Show Network.AWS.AutoScaling.Types.RefreshStrategy.RefreshStrategy


module Network.AWS.AutoScaling.Types.ScalingActivityStatusCode
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Cancelled :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_MidLifecycleAction :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PendingSpotBidPlacement :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PreInService :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForELBConnectionDraining :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceWarmup :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceRequestId :: ScalingActivityStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode


module Network.AWS.AutoScaling.Types.Activity

-- | Describes scaling activity, which is a long-running process that
--   represents a change to your Auto Scaling group, such as changing its
--   size or replacing an instance.
--   
--   <i>See:</i> <a>newActivity</a> smart constructor.
data Activity
Activity' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> ISO8601 -> ScalingActivityStatusCode -> Activity

-- | A friendly, more verbose description of the activity status.
[$sel:statusMessage:Activity'] :: Activity -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
[$sel:autoScalingGroupARN:Activity'] :: Activity -> Maybe Text

-- | The end time of the activity.
[$sel:endTime:Activity'] :: Activity -> Maybe ISO8601

-- | The state of the Auto Scaling group, which is either
--   <tt>InService</tt> or <tt>Deleted</tt>.
[$sel:autoScalingGroupState:Activity'] :: Activity -> Maybe Text

-- | The details about the activity.
[$sel:details:Activity'] :: Activity -> Maybe Text

-- | A friendly, more verbose description of the activity.
[$sel:description:Activity'] :: Activity -> Maybe Text

-- | A value between 0 and 100 that indicates the progress of the activity.
[$sel:progress:Activity'] :: Activity -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:Activity'] :: Activity -> Maybe Text

-- | The ID of the activity.
[$sel:activityId:Activity'] :: Activity -> Text

-- | The reason the activity began.
[$sel:cause:Activity'] :: Activity -> Text

-- | The start time of the activity.
[$sel:startTime:Activity'] :: Activity -> ISO8601

-- | The current status of the activity.
[$sel:statusCode:Activity'] :: Activity -> ScalingActivityStatusCode

-- | Create a value of <a>Activity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:Activity'</a>, <a>activity_statusMessage</a> - A
--   friendly, more verbose description of the activity status.
--   
--   <a>$sel:autoScalingGroupARN:Activity'</a>,
--   <a>activity_autoScalingGroupARN</a> - The Amazon Resource Name (ARN)
--   of the Auto Scaling group.
--   
--   <a>$sel:endTime:Activity'</a>, <a>activity_endTime</a> - The end time
--   of the activity.
--   
--   <a>$sel:autoScalingGroupState:Activity'</a>,
--   <a>activity_autoScalingGroupState</a> - The state of the Auto Scaling
--   group, which is either <tt>InService</tt> or <tt>Deleted</tt>.
--   
--   <a>$sel:details:Activity'</a>, <a>activity_details</a> - The details
--   about the activity.
--   
--   <a>$sel:description:Activity'</a>, <a>activity_description</a> - A
--   friendly, more verbose description of the activity.
--   
--   <a>$sel:progress:Activity'</a>, <a>activity_progress</a> - A value
--   between 0 and 100 that indicates the progress of the activity.
--   
--   <a>$sel:autoScalingGroupName:Activity'</a>,
--   <a>activity_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
--   
--   <a>$sel:activityId:Activity'</a>, <a>activity_activityId</a> - The ID
--   of the activity.
--   
--   <a>$sel:cause:Activity'</a>, <a>activity_cause</a> - The reason the
--   activity began.
--   
--   <a>$sel:startTime:Activity'</a>, <a>activity_startTime</a> - The start
--   time of the activity.
--   
--   <a>$sel:statusCode:Activity'</a>, <a>activity_statusCode</a> - The
--   current status of the activity.
newActivity :: Text -> Text -> UTCTime -> ScalingActivityStatusCode -> Activity

-- | A friendly, more verbose description of the activity status.
activity_statusMessage :: Lens' Activity (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
activity_autoScalingGroupARN :: Lens' Activity (Maybe Text)

-- | The end time of the activity.
activity_endTime :: Lens' Activity (Maybe UTCTime)

-- | The state of the Auto Scaling group, which is either
--   <tt>InService</tt> or <tt>Deleted</tt>.
activity_autoScalingGroupState :: Lens' Activity (Maybe Text)

-- | The details about the activity.
activity_details :: Lens' Activity (Maybe Text)

-- | A friendly, more verbose description of the activity.
activity_description :: Lens' Activity (Maybe Text)

-- | A value between 0 and 100 that indicates the progress of the activity.
activity_progress :: Lens' Activity (Maybe Int)

-- | The name of the Auto Scaling group.
activity_autoScalingGroupName :: Lens' Activity (Maybe Text)

-- | The ID of the activity.
activity_activityId :: Lens' Activity Text

-- | The reason the activity began.
activity_cause :: Lens' Activity Text

-- | The start time of the activity.
activity_startTime :: Lens' Activity UTCTime

-- | The current status of the activity.
activity_statusCode :: Lens' Activity ScalingActivityStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Activity.Activity
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Activity.Activity
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Activity.Activity
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Activity.Activity
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.Activity.Activity
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Activity.Activity
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Activity.Activity


module Network.AWS.AutoScaling.Types.ScalingProcessQuery

-- | <i>See:</i> <a>newScalingProcessQuery</a> smart constructor.
data ScalingProcessQuery
ScalingProcessQuery' :: Maybe [Text] -> Text -> ScalingProcessQuery

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
[$sel:scalingProcesses:ScalingProcessQuery'] :: ScalingProcessQuery -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScalingProcessQuery'] :: ScalingProcessQuery -> Text

-- | Create a value of <a>ScalingProcessQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_scalingProcesses</a> - One or more of the
--   following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingProcessQuery :: Text -> ScalingProcessQuery

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
scalingProcessQuery_scalingProcesses :: Lens' ScalingProcessQuery (Maybe [Text])

-- | The name of the Auto Scaling group.
scalingProcessQuery_autoScalingGroupName :: Lens' ScalingProcessQuery Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.ScalingProcessQuery.ScalingProcessQuery


module Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction

-- | Describes a scheduled scaling action.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupAction</a> smart constructor.
data ScheduledUpdateGroupAction
ScheduledUpdateGroupAction' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> ScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
[$sel:desiredCapacity:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The date and time in UTC for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
[$sel:startTime:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The date and time in UTC for the recurring schedule to end. For
--   example, <tt>"2019-06-01T00:00:00Z"</tt>.
[$sel:endTime:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The Amazon Resource Name (ARN) of the scheduled action.
[$sel:scheduledActionARN:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The recurring schedule for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
[$sel:recurrence:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The maximum size of the Auto Scaling group.
[$sel:maxSize:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The time zone for the cron expression.
[$sel:timeZone:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The name of the scheduled action.
[$sel:scheduledActionName:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | This parameter is no longer used.
[$sel:time:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | Create a value of <a>ScheduledUpdateGroupAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_minSize</a> - The minimum size of the
--   Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_startTime</a> - The date and time in UTC
--   for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_endTime</a> - The date and time in UTC
--   for the recurring schedule to end. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:scheduledActionARN:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionARN</a> - The Amazon
--   Resource Name (ARN) of the scheduled action.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_recurrence</a> - The recurring schedule
--   for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_maxSize</a> - The maximum size of the
--   Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_timeZone</a> - The time zone for the
--   cron expression.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionName</a> - The name of
--   the scheduled action.
--   
--   <a>$sel:time:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_time</a> - This parameter is no longer
--   used.
--   
--   <a>$sel:autoScalingGroupName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newScheduledUpdateGroupAction :: ScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupAction_minSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupAction_desiredCapacity :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The date and time in UTC for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_startTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The date and time in UTC for the recurring schedule to end. For
--   example, <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_endTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledUpdateGroupAction_scheduledActionARN :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
scheduledUpdateGroupAction_recurrence :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupAction_maxSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The time zone for the cron expression.
scheduledUpdateGroupAction_timeZone :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The name of the scheduled action.
scheduledUpdateGroupAction_scheduledActionName :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | This parameter is no longer used.
scheduledUpdateGroupAction_time :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The name of the Auto Scaling group.
scheduledUpdateGroupAction_autoScalingGroupName :: Lens' ScheduledUpdateGroupAction (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ScheduledUpdateGroupAction.ScheduledUpdateGroupAction


module Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest

-- | Describes information used for one or more scheduled scaling action
--   updates in a BatchPutScheduledUpdateGroupAction operation.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data ScheduledUpdateGroupActionRequest
ScheduledUpdateGroupActionRequest' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ScheduledUpdateGroupActionRequest

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
[$sel:desiredCapacity:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
[$sel:startTime:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe ISO8601

-- | The date and time for the recurring schedule to end, in UTC.
[$sel:endTime:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe ISO8601

-- | The recurring schedule for the action, in Unix cron syntax format.
--   This format consists of five fields separated by white spaces:
--   [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
--   value must be in quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For
--   more information about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
[$sel:recurrence:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Text

-- | The maximum size of the Auto Scaling group.
[$sel:maxSize:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
[$sel:timeZone:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Text

-- | The name of the scaling action.
[$sel:scheduledActionName:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Text

-- | Create a value of <a>ScheduledUpdateGroupActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_minSize</a> - The minimum size of
--   the Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_startTime</a> - The date and time
--   for the action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
--   only and in quotes (for example, <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_endTime</a> - The date and time
--   for the recurring schedule to end, in UTC.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_recurrence</a> - The recurring
--   schedule for the action, in Unix cron syntax format. This format
--   consists of five fields separated by white spaces: [Minute] [Hour]
--   [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in
--   quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For more information
--   about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_maxSize</a> - The maximum size of
--   the Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_timeZone</a> - Specifies the time
--   zone for a cron expression. If a time zone is not provided, UTC is
--   used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_scheduledActionName</a> - The
--   name of the scaling action.
newScheduledUpdateGroupActionRequest :: Text -> ScheduledUpdateGroupActionRequest

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_minSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupActionRequest_desiredCapacity :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
scheduledUpdateGroupActionRequest_startTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
scheduledUpdateGroupActionRequest_endTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   This format consists of five fields separated by white spaces:
--   [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
--   value must be in quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For
--   more information about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
scheduledUpdateGroupActionRequest_recurrence :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_maxSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
scheduledUpdateGroupActionRequest_timeZone :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scaling action.
scheduledUpdateGroupActionRequest_scheduledActionName :: Lens' ScheduledUpdateGroupActionRequest Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.ScheduledUpdateGroupActionRequest.ScheduledUpdateGroupActionRequest


module Network.AWS.AutoScaling.Types.StepAdjustment

-- | Describes information used to create a step adjustment for a step
--   scaling policy.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most, one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most, one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   For more information, see <a>Step adjustments</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
[$sel:metricIntervalUpperBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
[$sel:metricIntervalLowerBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
[$sel:scalingAdjustment:StepAdjustment'] :: StepAdjustment -> Int

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity.
newStepAdjustment :: Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Show.Show Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Read.Read Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.StepAdjustment.StepAdjustment


module Network.AWS.AutoScaling.Types.SuspendedProcess

-- | Describes an auto scaling process that has been suspended.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newSuspendedProcess</a> smart constructor.
data SuspendedProcess
SuspendedProcess' :: Maybe Text -> Maybe Text -> SuspendedProcess

-- | The name of the suspended process.
[$sel:processName:SuspendedProcess'] :: SuspendedProcess -> Maybe Text

-- | The reason that the process was suspended.
[$sel:suspensionReason:SuspendedProcess'] :: SuspendedProcess -> Maybe Text

-- | Create a value of <a>SuspendedProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:SuspendedProcess'</a>,
--   <a>suspendedProcess_processName</a> - The name of the suspended
--   process.
--   
--   <a>$sel:suspensionReason:SuspendedProcess'</a>,
--   <a>suspendedProcess_suspensionReason</a> - The reason that the process
--   was suspended.
newSuspendedProcess :: SuspendedProcess

-- | The name of the suspended process.
suspendedProcess_processName :: Lens' SuspendedProcess (Maybe Text)

-- | The reason that the process was suspended.
suspendedProcess_suspensionReason :: Lens' SuspendedProcess (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance GHC.Show.Show Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance GHC.Read.Read Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.SuspendedProcess.SuspendedProcess


module Network.AWS.AutoScaling.Types.Tag

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The name of the Auto Scaling group.
[$sel:resourceId:Tag'] :: Tag -> Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
[$sel:resourceType:Tag'] :: Tag -> Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
[$sel:propagateAtLaunch:Tag'] :: Tag -> Bool

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:resourceId:Tag'</a>, <a>tag_resourceId</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:resourceType:Tag'</a>, <a>tag_resourceType</a> - The type of
--   resource. The only supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:propagateAtLaunch:Tag'</a>, <a>tag_propagateAtLaunch</a> -
--   Determines whether the tag is added to new instances as they are
--   launched in the group.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The name of the Auto Scaling group.
tag_resourceId :: Lens' Tag Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tag_resourceType :: Lens' Tag Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tag_propagateAtLaunch :: Lens' Tag Bool

-- | The tag value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.AutoScaling.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.AutoScaling.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.Tag.Tag


module Network.AWS.AutoScaling.Types.TagDescription

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | The name of the group.
[$sel:resourceId:TagDescription'] :: TagDescription -> Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
[$sel:resourceType:TagDescription'] :: TagDescription -> Text

-- | The tag key.
[$sel:key:TagDescription'] :: TagDescription -> Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
[$sel:propagateAtLaunch:TagDescription'] :: TagDescription -> Bool

-- | The tag value.
[$sel:value:TagDescription'] :: TagDescription -> Text

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:TagDescription'</a>,
--   <a>tagDescription_resourceId</a> - The name of the group.
--   
--   <a>$sel:resourceType:TagDescription'</a>,
--   <a>tagDescription_resourceType</a> - The type of resource. The only
--   supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:key:TagDescription'</a>, <a>tagDescription_key</a> - The tag
--   key.
--   
--   <a>$sel:propagateAtLaunch:TagDescription'</a>,
--   <a>tagDescription_propagateAtLaunch</a> - Determines whether the tag
--   is added to new instances as they are launched in the group.
--   
--   <a>$sel:value:TagDescription'</a>, <a>tagDescription_value</a> - The
--   tag value.
newTagDescription :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | The name of the group.
tagDescription_resourceId :: Lens' TagDescription Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tagDescription_resourceType :: Lens' TagDescription Text

-- | The tag key.
tagDescription_key :: Lens' TagDescription Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tagDescription_propagateAtLaunch :: Lens' TagDescription Bool

-- | The tag value.
tagDescription_value :: Lens' TagDescription Text
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance GHC.Show.Show Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance GHC.Read.Read Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.TagDescription.TagDescription
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.TagDescription.TagDescription


module Network.AWS.AutoScaling.Types.TargetTrackingConfiguration

-- | Represents a target tracking scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe CustomizedMetricSpecification -> Double -> TargetTrackingConfiguration

-- | Indicates whether scaling in by the target tracking scaling policy is
--   disabled. If scaling in is disabled, the target tracking scaling
--   policy doesn't remove instances from the Auto Scaling group.
--   Otherwise, the target tracking scaling policy can remove instances
--   from the Auto Scaling group. The default is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Bool

-- | A predefined metric. You must specify either a predefined metric or a
--   customized metric.
[$sel:predefinedMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe PredefinedMetricSpecification

-- | A customized metric. You must specify either a predefined metric or a
--   customized metric.
[$sel:customizedMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe CustomizedMetricSpecification

-- | The target value for the metric.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scaling in by the target tracking scaling policy is disabled. If
--   scaling in is disabled, the target tracking scaling policy doesn't
--   remove instances from the Auto Scaling group. Otherwise, the target
--   tracking scaling policy can remove instances from the Auto Scaling
--   group. The default is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedMetricSpecification</a> - A
--   predefined metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedMetricSpecification</a> - A
--   customized metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Indicates whether scaling in by the target tracking scaling policy is
--   disabled. If scaling in is disabled, the target tracking scaling
--   policy doesn't remove instances from the Auto Scaling group.
--   Otherwise, the target tracking scaling policy can remove instances
--   from the Auto Scaling group. The default is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A predefined metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedMetricSpecification)

-- | A customized metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedMetricSpecification)

-- | The target value for the metric.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.TargetTrackingConfiguration.TargetTrackingConfiguration


module Network.AWS.AutoScaling.Types.ScalingPolicy

-- | Describes a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Text -> Maybe TargetTrackingConfiguration -> Maybe [StepAdjustment] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe [Alarm] -> Maybe Text -> Maybe PredictiveScalingConfiguration -> Maybe Text -> ScalingPolicy

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | A target tracking scaling policy.
[$sel:targetTrackingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
[$sel:stepAdjustments:ScalingPolicy'] :: ScalingPolicy -> Maybe [StepAdjustment]

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>.
[$sel:metricAggregationType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
[$sel:enabled:ScalingPolicy'] :: ScalingPolicy -> Maybe Bool

-- | The duration of the policy's cooldown period, in seconds.
[$sel:cooldown:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
[$sel:scalingAdjustment:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
[$sel:adjustmentType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
[$sel:minAdjustmentStep:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics.
[$sel:estimatedInstanceWarmup:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>.
[$sel:minAdjustmentMagnitude:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The CloudWatch alarms related to the policy.
[$sel:alarms:ScalingPolicy'] :: ScalingPolicy -> Maybe [Alarm]

-- | The Amazon Resource Name (ARN) of the policy.
[$sel:policyARN:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | A predictive scaling policy.
[$sel:predictiveScalingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe PredictiveScalingConfiguration

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - A target tracking
--   scaling policy.
--   
--   <a>$sel:stepAdjustments:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepAdjustments</a> - A set of adjustments that
--   enable you to scale based on the size of the alarm breach.
--   
--   <a>$sel:metricAggregationType:ScalingPolicy'</a>,
--   <a>scalingPolicy_metricAggregationType</a> - The aggregation type for
--   the CloudWatch metrics. The valid values are <tt>Minimum</tt>,
--   <tt>Maximum</tt>, and <tt>Average</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:enabled:ScalingPolicy'</a>, <a>scalingPolicy_enabled</a> -
--   Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
--   
--   <a>$sel:cooldown:ScalingPolicy'</a>, <a>scalingPolicy_cooldown</a> -
--   The duration of the policy's cooldown period, in seconds.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - The amount by which to scale,
--   based on the specified adjustment type. A positive value adds to the
--   current capacity while a negative number removes from the current
--   capacity.
--   
--   <a>$sel:adjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_adjustmentType</a> - Specifies how the scaling
--   adjustment is interpreted (for example, an absolute number or a
--   percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:minAdjustmentStep:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentStep</a> - Available for backward
--   compatibility. Use <tt>MinAdjustmentMagnitude</tt> instead.
--   
--   <a>$sel:estimatedInstanceWarmup:ScalingPolicy'</a>,
--   <a>scalingPolicy_estimatedInstanceWarmup</a> - The estimated time, in
--   seconds, until a newly launched instance can contribute to the
--   CloudWatch metrics.
--   
--   <a>$sel:minAdjustmentMagnitude:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentMagnitude</a> - The minimum value to
--   scale by when the adjustment type is <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms related to the policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the policy.
--   
--   <a>$sel:predictiveScalingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_predictiveScalingConfiguration</a> - A predictive
--   scaling policy.
--   
--   <a>$sel:autoScalingGroupName:ScalingPolicy'</a>,
--   <a>scalingPolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingPolicy :: ScalingPolicy

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy (Maybe Text)

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
scalingPolicy_stepAdjustments :: Lens' ScalingPolicy (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>.
scalingPolicy_metricAggregationType :: Lens' ScalingPolicy (Maybe Text)

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe Text)

-- | Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
scalingPolicy_enabled :: Lens' ScalingPolicy (Maybe Bool)

-- | The duration of the policy's cooldown period, in seconds.
scalingPolicy_cooldown :: Lens' ScalingPolicy (Maybe Int)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_adjustmentType :: Lens' ScalingPolicy (Maybe Text)

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
scalingPolicy_minAdjustmentStep :: Lens' ScalingPolicy (Maybe Int)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics.
scalingPolicy_estimatedInstanceWarmup :: Lens' ScalingPolicy (Maybe Int)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_minAdjustmentMagnitude :: Lens' ScalingPolicy (Maybe Int)

-- | The CloudWatch alarms related to the policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy (Maybe Text)

-- | A predictive scaling policy.
scalingPolicy_predictiveScalingConfiguration :: Lens' ScalingPolicy (Maybe PredictiveScalingConfiguration)

-- | The name of the Auto Scaling group.
scalingPolicy_autoScalingGroupName :: Lens' ScalingPolicy (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Show.Show Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Read.Read Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.ScalingPolicy.ScalingPolicy


module Network.AWS.AutoScaling.Types.WarmPoolState
newtype WarmPoolState
WarmPoolState' :: Text -> WarmPoolState
[fromWarmPoolState] :: WarmPoolState -> Text
pattern WarmPoolState_Running :: WarmPoolState
pattern WarmPoolState_Stopped :: WarmPoolState
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance GHC.Read.Read Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState
instance GHC.Show.Show Network.AWS.AutoScaling.Types.WarmPoolState.WarmPoolState


module Network.AWS.AutoScaling.Types.WarmPoolStatus
newtype WarmPoolStatus
WarmPoolStatus' :: Text -> WarmPoolStatus
[fromWarmPoolStatus] :: WarmPoolStatus -> Text
pattern WarmPoolStatus_PendingDelete :: WarmPoolStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance GHC.Classes.Ord Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance GHC.Read.Read Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus
instance GHC.Show.Show Network.AWS.AutoScaling.Types.WarmPoolStatus.WarmPoolStatus


module Network.AWS.AutoScaling.Types.WarmPoolConfiguration

-- | Describes a warm pool configuration.
--   
--   <i>See:</i> <a>newWarmPoolConfiguration</a> smart constructor.
data WarmPoolConfiguration
WarmPoolConfiguration' :: Maybe Natural -> Maybe WarmPoolStatus -> Maybe WarmPoolState -> Maybe Int -> WarmPoolConfiguration

-- | The minimum number of instances to maintain in the warm pool.
[$sel:minSize:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe Natural

-- | The status of a warm pool that is marked for deletion.
[$sel:status:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe WarmPoolStatus

-- | The instance state to transition to after the lifecycle actions are
--   complete.
[$sel:poolState:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe WarmPoolState

-- | The maximum number of instances that are allowed to be in the warm
--   pool or in any state except <tt>Terminated</tt> for the Auto Scaling
--   group.
[$sel:maxGroupPreparedCapacity:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe Int

-- | Create a value of <a>WarmPoolConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_minSize</a> - The minimum number of instances
--   to maintain in the warm pool.
--   
--   <a>$sel:status:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_status</a> - The status of a warm pool that
--   is marked for deletion.
--   
--   <a>$sel:poolState:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_poolState</a> - The instance state to
--   transition to after the lifecycle actions are complete.
--   
--   <a>$sel:maxGroupPreparedCapacity:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_maxGroupPreparedCapacity</a> - The maximum
--   number of instances that are allowed to be in the warm pool or in any
--   state except <tt>Terminated</tt> for the Auto Scaling group.
newWarmPoolConfiguration :: WarmPoolConfiguration

-- | The minimum number of instances to maintain in the warm pool.
warmPoolConfiguration_minSize :: Lens' WarmPoolConfiguration (Maybe Natural)

-- | The status of a warm pool that is marked for deletion.
warmPoolConfiguration_status :: Lens' WarmPoolConfiguration (Maybe WarmPoolStatus)

-- | The instance state to transition to after the lifecycle actions are
--   complete.
warmPoolConfiguration_poolState :: Lens' WarmPoolConfiguration (Maybe WarmPoolState)

-- | The maximum number of instances that are allowed to be in the warm
--   pool or in any state except <tt>Terminated</tt> for the Auto Scaling
--   group.
warmPoolConfiguration_maxGroupPreparedCapacity :: Lens' WarmPoolConfiguration (Maybe Int)
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.WarmPoolConfiguration.WarmPoolConfiguration


module Network.AWS.AutoScaling.Types.AutoScalingGroup

-- | Describes an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [SuspendedProcess] -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe [Instance] -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe [TagDescription] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe WarmPoolConfiguration -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [EnabledMetric] -> Maybe [Text] -> Text -> Int -> Int -> Int -> Int -> [Text] -> Text -> ISO8601 -> AutoScalingGroup

-- | The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
[$sel:status:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The maximum amount of time, in seconds, that an instance can be in
--   service.
--   
--   Valid Range: Minimum value of 0.
[$sel:maxInstanceLifetime:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The name of the placement group into which to launch your instances,
--   if any.
[$sel:placementGroup:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The suspended processes associated with the group.
[$sel:suspendedProcesses:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [SuspendedProcess]

-- | The predicted capacity of the group when it has a predictive scaling
--   policy.
[$sel:predictedCapacity:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
[$sel:autoScalingGroupARN:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The launch template for the group.
[$sel:launchTemplate:AutoScalingGroup'] :: AutoScalingGroup -> Maybe LaunchTemplateSpecification

-- | The name of the associated launch configuration.
[$sel:launchConfigurationName:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The EC2 instances associated with the group.
[$sel:instances:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Instance]

-- | Reserved.
[$sel:context:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The mixed instances policy for the group.
[$sel:mixedInstancesPolicy:AutoScalingGroup'] :: AutoScalingGroup -> Maybe MixedInstancesPolicy

-- | The tags for the group.
[$sel:tags:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [TagDescription]

-- | One or more load balancers associated with the group.
[$sel:loadBalancerNames:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | The Amazon Resource Names (ARN) of the target groups for your load
--   balancer.
[$sel:targetGroupARNs:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | One or more subnet IDs, if applicable, separated by commas.
[$sel:vPCZoneIdentifier:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The current size of the warm pool.
[$sel:warmPoolSize:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The warm pool for the group.
[$sel:warmPoolConfiguration:AutoScalingGroup'] :: AutoScalingGroup -> Maybe WarmPoolConfiguration

-- | Indicates whether Capacity Rebalancing is enabled.
[$sel:capacityRebalance:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf.
[$sel:serviceLinkedRoleARN:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service.
[$sel:healthCheckGracePeriod:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in.
[$sel:newInstancesProtectedFromScaleIn':AutoScalingGroup'] :: AutoScalingGroup -> Maybe Bool

-- | The metrics enabled for the group.
[$sel:enabledMetrics:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [EnabledMetric]

-- | The termination policies for the group.
[$sel:terminationPolicies:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:AutoScalingGroup'] :: AutoScalingGroup -> Text

-- | The minimum size of the group.
[$sel:minSize:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The maximum size of the group.
[$sel:maxSize:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The desired size of the group.
[$sel:desiredCapacity:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The duration of the default cooldown period, in seconds.
[$sel:defaultCooldown:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | One or more Availability Zones for the group.
[$sel:availabilityZones:AutoScalingGroup'] :: AutoScalingGroup -> [Text]

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
[$sel:healthCheckType:AutoScalingGroup'] :: AutoScalingGroup -> Text

-- | The date and time the group was created.
[$sel:createdTime:AutoScalingGroup'] :: AutoScalingGroup -> ISO8601

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingGroup'</a>, <a>autoScalingGroup_status</a> -
--   The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
--   
--   <a>$sel:maxInstanceLifetime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_maxInstanceLifetime</a> - The maximum amount of
--   time, in seconds, that an instance can be in service.
--   
--   Valid Range: Minimum value of 0.
--   
--   <a>$sel:placementGroup:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_placementGroup</a> - The name of the placement
--   group into which to launch your instances, if any.
--   
--   <a>$sel:suspendedProcesses:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_suspendedProcesses</a> - The suspended processes
--   associated with the group.
--   
--   <a>$sel:predictedCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_predictedCapacity</a> - The predicted capacity of
--   the group when it has a predictive scaling policy.
--   
--   <a>$sel:autoScalingGroupARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupARN</a> - The Amazon Resource Name
--   (ARN) of the Auto Scaling group.
--   
--   <a>$sel:launchTemplate:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchTemplate</a> - The launch template for the
--   group.
--   
--   <a>$sel:launchConfigurationName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchConfigurationName</a> - The name of the
--   associated launch configuration.
--   
--   <a>$sel:instances:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_instances</a> - The EC2 instances associated with
--   the group.
--   
--   <a>$sel:context:AutoScalingGroup'</a>, <a>autoScalingGroup_context</a>
--   - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_mixedInstancesPolicy</a> - The mixed instances
--   policy for the group.
--   
--   <a>$sel:tags:AutoScalingGroup'</a>, <a>autoScalingGroup_tags</a> - The
--   tags for the group.
--   
--   <a>$sel:loadBalancerNames:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_loadBalancerNames</a> - One or more load balancers
--   associated with the group.
--   
--   <a>$sel:targetGroupARNs:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_targetGroupARNs</a> - The Amazon Resource Names
--   (ARN) of the target groups for your load balancer.
--   
--   <a>$sel:vPCZoneIdentifier:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_vPCZoneIdentifier</a> - One or more subnet IDs, if
--   applicable, separated by commas.
--   
--   <a>$sel:warmPoolSize:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolSize</a> - The current size of the warm
--   pool.
--   
--   <a>$sel:warmPoolConfiguration:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolConfiguration</a> - The warm pool for the
--   group.
--   
--   <a>$sel:capacityRebalance:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_capacityRebalance</a> - Indicates whether Capacity
--   Rebalancing is enabled.
--   
--   <a>$sel:serviceLinkedRoleARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_serviceLinkedRoleARN</a> - The Amazon Resource
--   Name (ARN) of the service-linked role that the Auto Scaling group uses
--   to call other Amazon Web Services on your behalf.
--   
--   <a>$sel:healthCheckGracePeriod:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckGracePeriod</a> - The amount of time,
--   in seconds, that Amazon EC2 Auto Scaling waits before checking the
--   health status of an EC2 instance that has come into service.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':AutoScalingGroup'</a>,
--   <a>autoScalingGroup_newInstancesProtectedFromScaleIn</a> - Indicates
--   whether newly launched instances are protected from termination by
--   Amazon EC2 Auto Scaling when scaling in.
--   
--   <a>$sel:enabledMetrics:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_enabledMetrics</a> - The metrics enabled for the
--   group.
--   
--   <a>$sel:terminationPolicies:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_terminationPolicies</a> - The termination policies
--   for the group.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:minSize:AutoScalingGroup'</a>, <a>autoScalingGroup_minSize</a>
--   - The minimum size of the group.
--   
--   <a>$sel:maxSize:AutoScalingGroup'</a>, <a>autoScalingGroup_maxSize</a>
--   - The maximum size of the group.
--   
--   <a>$sel:desiredCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_desiredCapacity</a> - The desired size of the
--   group.
--   
--   <a>$sel:defaultCooldown:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_defaultCooldown</a> - The duration of the default
--   cooldown period, in seconds.
--   
--   <a>$sel:availabilityZones:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_availabilityZones</a> - One or more Availability
--   Zones for the group.
--   
--   <a>$sel:healthCheckType:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckType</a> - The service to use for the
--   health checks. The valid values are <tt>EC2</tt> and <tt>ELB</tt>. If
--   you configure an Auto Scaling group to use <tt>ELB</tt> health checks,
--   it considers the instance unhealthy if it fails either the EC2 status
--   checks or the load balancer health checks.
--   
--   <a>$sel:createdTime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_createdTime</a> - The date and time the group was
--   created.
newAutoScalingGroup :: Text -> Int -> Int -> Int -> Int -> Text -> UTCTime -> AutoScalingGroup

-- | The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
autoScalingGroup_status :: Lens' AutoScalingGroup (Maybe Text)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service.
--   
--   Valid Range: Minimum value of 0.
autoScalingGroup_maxInstanceLifetime :: Lens' AutoScalingGroup (Maybe Int)

-- | The name of the placement group into which to launch your instances,
--   if any.
autoScalingGroup_placementGroup :: Lens' AutoScalingGroup (Maybe Text)

-- | The suspended processes associated with the group.
autoScalingGroup_suspendedProcesses :: Lens' AutoScalingGroup (Maybe [SuspendedProcess])

-- | The predicted capacity of the group when it has a predictive scaling
--   policy.
autoScalingGroup_predictedCapacity :: Lens' AutoScalingGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
autoScalingGroup_autoScalingGroupARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The launch template for the group.
autoScalingGroup_launchTemplate :: Lens' AutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the associated launch configuration.
autoScalingGroup_launchConfigurationName :: Lens' AutoScalingGroup (Maybe Text)

-- | The EC2 instances associated with the group.
autoScalingGroup_instances :: Lens' AutoScalingGroup (Maybe [Instance])

-- | Reserved.
autoScalingGroup_context :: Lens' AutoScalingGroup (Maybe Text)

-- | The mixed instances policy for the group.
autoScalingGroup_mixedInstancesPolicy :: Lens' AutoScalingGroup (Maybe MixedInstancesPolicy)

-- | The tags for the group.
autoScalingGroup_tags :: Lens' AutoScalingGroup (Maybe [TagDescription])

-- | One or more load balancers associated with the group.
autoScalingGroup_loadBalancerNames :: Lens' AutoScalingGroup (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the target groups for your load
--   balancer.
autoScalingGroup_targetGroupARNs :: Lens' AutoScalingGroup (Maybe [Text])

-- | One or more subnet IDs, if applicable, separated by commas.
autoScalingGroup_vPCZoneIdentifier :: Lens' AutoScalingGroup (Maybe Text)

-- | The current size of the warm pool.
autoScalingGroup_warmPoolSize :: Lens' AutoScalingGroup (Maybe Int)

-- | The warm pool for the group.
autoScalingGroup_warmPoolConfiguration :: Lens' AutoScalingGroup (Maybe WarmPoolConfiguration)

-- | Indicates whether Capacity Rebalancing is enabled.
autoScalingGroup_capacityRebalance :: Lens' AutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf.
autoScalingGroup_serviceLinkedRoleARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service.
autoScalingGroup_healthCheckGracePeriod :: Lens' AutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in.
autoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' AutoScalingGroup (Maybe Bool)

-- | The metrics enabled for the group.
autoScalingGroup_enabledMetrics :: Lens' AutoScalingGroup (Maybe [EnabledMetric])

-- | The termination policies for the group.
autoScalingGroup_terminationPolicies :: Lens' AutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group.
autoScalingGroup_autoScalingGroupName :: Lens' AutoScalingGroup Text

-- | The minimum size of the group.
autoScalingGroup_minSize :: Lens' AutoScalingGroup Int

-- | The maximum size of the group.
autoScalingGroup_maxSize :: Lens' AutoScalingGroup Int

-- | The desired size of the group.
autoScalingGroup_desiredCapacity :: Lens' AutoScalingGroup Int

-- | The duration of the default cooldown period, in seconds.
autoScalingGroup_defaultCooldown :: Lens' AutoScalingGroup Int

-- | One or more Availability Zones for the group.
autoScalingGroup_availabilityZones :: Lens' AutoScalingGroup [Text]

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
autoScalingGroup_healthCheckType :: Lens' AutoScalingGroup Text

-- | The date and time the group was created.
autoScalingGroup_createdTime :: Lens' AutoScalingGroup UTCTime
instance GHC.Generics.Generic Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Show.Show Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Read.Read Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Classes.Eq Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.Types.AutoScalingGroup.AutoScalingGroup


module Network.AWS.AutoScaling.Types

-- | API version <tt>2011-01-01</tt> of the Amazon Auto Scaling SDK
--   configuration.
defaultService :: Service

-- | The request failed because an active instance refresh operation
--   already exists for the specified Auto Scaling group.
_InstanceRefreshInProgressFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be performed because the resource is in use.
_ResourceInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have an Auto Scaling group or launch configuration with
--   this name.
_AlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have already reached a limit for your Amazon EC2 Auto Scaling
--   resources (for example, Auto Scaling groups, launch configurations, or
--   lifecycle hooks). For more information, see
--   <a>DescribeAccountLimits</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
_LimitExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be performed because there are scaling activities
--   in progress.
_ScalingActivityInProgressFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a pending update to an Amazon EC2 Auto Scaling
--   resource (for example, an Auto Scaling group, instance, or load
--   balancer).
_ResourceContentionFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because an active instance refresh for the
--   specified Auto Scaling group was not found.
_ActiveInstanceRefreshNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service-linked role is not yet ready for use.
_ServiceLinkedRoleFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> value is not valid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError
newtype InstanceMetadataEndpointState
InstanceMetadataEndpointState' :: Text -> InstanceMetadataEndpointState
[fromInstanceMetadataEndpointState] :: InstanceMetadataEndpointState -> Text
pattern InstanceMetadataEndpointState_Disabled :: InstanceMetadataEndpointState
pattern InstanceMetadataEndpointState_Enabled :: InstanceMetadataEndpointState
newtype InstanceMetadataHttpTokensState
InstanceMetadataHttpTokensState' :: Text -> InstanceMetadataHttpTokensState
[fromInstanceMetadataHttpTokensState] :: InstanceMetadataHttpTokensState -> Text
pattern InstanceMetadataHttpTokensState_Optional :: InstanceMetadataHttpTokensState
pattern InstanceMetadataHttpTokensState_Required :: InstanceMetadataHttpTokensState
newtype InstanceRefreshStatus
InstanceRefreshStatus' :: Text -> InstanceRefreshStatus
[fromInstanceRefreshStatus] :: InstanceRefreshStatus -> Text
pattern InstanceRefreshStatus_Cancelled :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Cancelling :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Failed :: InstanceRefreshStatus
pattern InstanceRefreshStatus_InProgress :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Pending :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Successful :: InstanceRefreshStatus
newtype LifecycleState
LifecycleState' :: Text -> LifecycleState
[fromLifecycleState] :: LifecycleState -> Text
pattern LifecycleState_Detached :: LifecycleState
pattern LifecycleState_Detaching :: LifecycleState
pattern LifecycleState_EnteringStandby :: LifecycleState
pattern LifecycleState_InService :: LifecycleState
pattern LifecycleState_Pending :: LifecycleState
pattern LifecycleState_Pending_Proceed :: LifecycleState
pattern LifecycleState_Pending_Wait :: LifecycleState
pattern LifecycleState_Quarantined :: LifecycleState
pattern LifecycleState_Standby :: LifecycleState
pattern LifecycleState_Terminated :: LifecycleState
pattern LifecycleState_Terminating :: LifecycleState
pattern LifecycleState_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Terminating_Wait :: LifecycleState
pattern LifecycleState_Warmed_Pending :: LifecycleState
pattern LifecycleState_Warmed_Pending_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Pending_Wait :: LifecycleState
pattern LifecycleState_Warmed_Running :: LifecycleState
pattern LifecycleState_Warmed_Stopped :: LifecycleState
pattern LifecycleState_Warmed_Terminated :: LifecycleState
pattern LifecycleState_Warmed_Terminating :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Wait :: LifecycleState
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_ASGAverageCPUUtilization :: MetricType
pattern MetricType_ASGAverageNetworkIn :: MetricType
pattern MetricType_ASGAverageNetworkOut :: MetricType
newtype PredefinedLoadMetricType
PredefinedLoadMetricType' :: Text -> PredefinedLoadMetricType
[fromPredefinedLoadMetricType] :: PredefinedLoadMetricType -> Text
pattern PredefinedLoadMetricType_ALBTargetGroupRequestCount :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalCPUUtilization :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkIn :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkOut :: PredefinedLoadMetricType
newtype PredefinedMetricPairType
PredefinedMetricPairType' :: Text -> PredefinedMetricPairType
[fromPredefinedMetricPairType] :: PredefinedMetricPairType -> Text
pattern PredefinedMetricPairType_ALBRequestCount :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGCPUUtilization :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkIn :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkOut :: PredefinedMetricPairType
newtype PredefinedScalingMetricType
PredefinedScalingMetricType' :: Text -> PredefinedScalingMetricType
[fromPredefinedScalingMetricType] :: PredefinedScalingMetricType -> Text
pattern PredefinedScalingMetricType_ALBRequestCountPerTarget :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageCPUUtilization :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkIn :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkOut :: PredefinedScalingMetricType
newtype PredictiveScalingMaxCapacityBreachBehavior
PredictiveScalingMaxCapacityBreachBehavior' :: Text -> PredictiveScalingMaxCapacityBreachBehavior
[fromPredictiveScalingMaxCapacityBreachBehavior] :: PredictiveScalingMaxCapacityBreachBehavior -> Text
pattern PredictiveScalingMaxCapacityBreachBehavior_HonorMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
pattern PredictiveScalingMaxCapacityBreachBehavior_IncreaseMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
newtype RefreshStrategy
RefreshStrategy' :: Text -> RefreshStrategy
[fromRefreshStrategy] :: RefreshStrategy -> Text
pattern RefreshStrategy_Rolling :: RefreshStrategy
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Cancelled :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_MidLifecycleAction :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PendingSpotBidPlacement :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PreInService :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForELBConnectionDraining :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceWarmup :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceRequestId :: ScalingActivityStatusCode
newtype WarmPoolState
WarmPoolState' :: Text -> WarmPoolState
[fromWarmPoolState] :: WarmPoolState -> Text
pattern WarmPoolState_Running :: WarmPoolState
pattern WarmPoolState_Stopped :: WarmPoolState
newtype WarmPoolStatus
WarmPoolStatus' :: Text -> WarmPoolStatus
[fromWarmPoolStatus] :: WarmPoolStatus -> Text
pattern WarmPoolStatus_PendingDelete :: WarmPoolStatus

-- | Describes scaling activity, which is a long-running process that
--   represents a change to your Auto Scaling group, such as changing its
--   size or replacing an instance.
--   
--   <i>See:</i> <a>newActivity</a> smart constructor.
data Activity
Activity' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> ISO8601 -> ScalingActivityStatusCode -> Activity

-- | A friendly, more verbose description of the activity status.
[$sel:statusMessage:Activity'] :: Activity -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
[$sel:autoScalingGroupARN:Activity'] :: Activity -> Maybe Text

-- | The end time of the activity.
[$sel:endTime:Activity'] :: Activity -> Maybe ISO8601

-- | The state of the Auto Scaling group, which is either
--   <tt>InService</tt> or <tt>Deleted</tt>.
[$sel:autoScalingGroupState:Activity'] :: Activity -> Maybe Text

-- | The details about the activity.
[$sel:details:Activity'] :: Activity -> Maybe Text

-- | A friendly, more verbose description of the activity.
[$sel:description:Activity'] :: Activity -> Maybe Text

-- | A value between 0 and 100 that indicates the progress of the activity.
[$sel:progress:Activity'] :: Activity -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:Activity'] :: Activity -> Maybe Text

-- | The ID of the activity.
[$sel:activityId:Activity'] :: Activity -> Text

-- | The reason the activity began.
[$sel:cause:Activity'] :: Activity -> Text

-- | The start time of the activity.
[$sel:startTime:Activity'] :: Activity -> ISO8601

-- | The current status of the activity.
[$sel:statusCode:Activity'] :: Activity -> ScalingActivityStatusCode

-- | Create a value of <a>Activity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:Activity'</a>, <a>activity_statusMessage</a> - A
--   friendly, more verbose description of the activity status.
--   
--   <a>$sel:autoScalingGroupARN:Activity'</a>,
--   <a>activity_autoScalingGroupARN</a> - The Amazon Resource Name (ARN)
--   of the Auto Scaling group.
--   
--   <a>$sel:endTime:Activity'</a>, <a>activity_endTime</a> - The end time
--   of the activity.
--   
--   <a>$sel:autoScalingGroupState:Activity'</a>,
--   <a>activity_autoScalingGroupState</a> - The state of the Auto Scaling
--   group, which is either <tt>InService</tt> or <tt>Deleted</tt>.
--   
--   <a>$sel:details:Activity'</a>, <a>activity_details</a> - The details
--   about the activity.
--   
--   <a>$sel:description:Activity'</a>, <a>activity_description</a> - A
--   friendly, more verbose description of the activity.
--   
--   <a>$sel:progress:Activity'</a>, <a>activity_progress</a> - A value
--   between 0 and 100 that indicates the progress of the activity.
--   
--   <a>$sel:autoScalingGroupName:Activity'</a>,
--   <a>activity_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
--   
--   <a>$sel:activityId:Activity'</a>, <a>activity_activityId</a> - The ID
--   of the activity.
--   
--   <a>$sel:cause:Activity'</a>, <a>activity_cause</a> - The reason the
--   activity began.
--   
--   <a>$sel:startTime:Activity'</a>, <a>activity_startTime</a> - The start
--   time of the activity.
--   
--   <a>$sel:statusCode:Activity'</a>, <a>activity_statusCode</a> - The
--   current status of the activity.
newActivity :: Text -> Text -> UTCTime -> ScalingActivityStatusCode -> Activity

-- | A friendly, more verbose description of the activity status.
activity_statusMessage :: Lens' Activity (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
activity_autoScalingGroupARN :: Lens' Activity (Maybe Text)

-- | The end time of the activity.
activity_endTime :: Lens' Activity (Maybe UTCTime)

-- | The state of the Auto Scaling group, which is either
--   <tt>InService</tt> or <tt>Deleted</tt>.
activity_autoScalingGroupState :: Lens' Activity (Maybe Text)

-- | The details about the activity.
activity_details :: Lens' Activity (Maybe Text)

-- | A friendly, more verbose description of the activity.
activity_description :: Lens' Activity (Maybe Text)

-- | A value between 0 and 100 that indicates the progress of the activity.
activity_progress :: Lens' Activity (Maybe Int)

-- | The name of the Auto Scaling group.
activity_autoScalingGroupName :: Lens' Activity (Maybe Text)

-- | The ID of the activity.
activity_activityId :: Lens' Activity Text

-- | The reason the activity began.
activity_cause :: Lens' Activity Text

-- | The start time of the activity.
activity_startTime :: Lens' Activity UTCTime

-- | The current status of the activity.
activity_statusCode :: Lens' Activity ScalingActivityStatusCode

-- | Describes a policy adjustment type.
--   
--   <i>See:</i> <a>newAdjustmentType</a> smart constructor.
data AdjustmentType
AdjustmentType' :: Maybe Text -> AdjustmentType

-- | The policy adjustment type. The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
[$sel:adjustmentType:AdjustmentType'] :: AdjustmentType -> Maybe Text

-- | Create a value of <a>AdjustmentType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adjustmentType:AdjustmentType'</a>,
--   <a>adjustmentType_adjustmentType</a> - The policy adjustment type. The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
newAdjustmentType :: AdjustmentType

-- | The policy adjustment type. The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
adjustmentType_adjustmentType :: Lens' AdjustmentType (Maybe Text)

-- | Describes an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe Text -> Alarm

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmARN:Alarm'] :: Alarm -> Maybe Text

-- | The name of the alarm.
[$sel:alarmName:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
newAlarm :: Alarm

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm (Maybe Text)

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm (Maybe Text)

-- | Describes an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [SuspendedProcess] -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe [Instance] -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe [TagDescription] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe WarmPoolConfiguration -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [EnabledMetric] -> Maybe [Text] -> Text -> Int -> Int -> Int -> Int -> [Text] -> Text -> ISO8601 -> AutoScalingGroup

-- | The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
[$sel:status:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The maximum amount of time, in seconds, that an instance can be in
--   service.
--   
--   Valid Range: Minimum value of 0.
[$sel:maxInstanceLifetime:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The name of the placement group into which to launch your instances,
--   if any.
[$sel:placementGroup:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The suspended processes associated with the group.
[$sel:suspendedProcesses:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [SuspendedProcess]

-- | The predicted capacity of the group when it has a predictive scaling
--   policy.
[$sel:predictedCapacity:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
[$sel:autoScalingGroupARN:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The launch template for the group.
[$sel:launchTemplate:AutoScalingGroup'] :: AutoScalingGroup -> Maybe LaunchTemplateSpecification

-- | The name of the associated launch configuration.
[$sel:launchConfigurationName:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The EC2 instances associated with the group.
[$sel:instances:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Instance]

-- | Reserved.
[$sel:context:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The mixed instances policy for the group.
[$sel:mixedInstancesPolicy:AutoScalingGroup'] :: AutoScalingGroup -> Maybe MixedInstancesPolicy

-- | The tags for the group.
[$sel:tags:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [TagDescription]

-- | One or more load balancers associated with the group.
[$sel:loadBalancerNames:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | The Amazon Resource Names (ARN) of the target groups for your load
--   balancer.
[$sel:targetGroupARNs:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | One or more subnet IDs, if applicable, separated by commas.
[$sel:vPCZoneIdentifier:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The current size of the warm pool.
[$sel:warmPoolSize:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | The warm pool for the group.
[$sel:warmPoolConfiguration:AutoScalingGroup'] :: AutoScalingGroup -> Maybe WarmPoolConfiguration

-- | Indicates whether Capacity Rebalancing is enabled.
[$sel:capacityRebalance:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf.
[$sel:serviceLinkedRoleARN:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service.
[$sel:healthCheckGracePeriod:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Int

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in.
[$sel:newInstancesProtectedFromScaleIn':AutoScalingGroup'] :: AutoScalingGroup -> Maybe Bool

-- | The metrics enabled for the group.
[$sel:enabledMetrics:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [EnabledMetric]

-- | The termination policies for the group.
[$sel:terminationPolicies:AutoScalingGroup'] :: AutoScalingGroup -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:AutoScalingGroup'] :: AutoScalingGroup -> Text

-- | The minimum size of the group.
[$sel:minSize:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The maximum size of the group.
[$sel:maxSize:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The desired size of the group.
[$sel:desiredCapacity:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | The duration of the default cooldown period, in seconds.
[$sel:defaultCooldown:AutoScalingGroup'] :: AutoScalingGroup -> Int

-- | One or more Availability Zones for the group.
[$sel:availabilityZones:AutoScalingGroup'] :: AutoScalingGroup -> [Text]

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
[$sel:healthCheckType:AutoScalingGroup'] :: AutoScalingGroup -> Text

-- | The date and time the group was created.
[$sel:createdTime:AutoScalingGroup'] :: AutoScalingGroup -> ISO8601

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingGroup'</a>, <a>autoScalingGroup_status</a> -
--   The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
--   
--   <a>$sel:maxInstanceLifetime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_maxInstanceLifetime</a> - The maximum amount of
--   time, in seconds, that an instance can be in service.
--   
--   Valid Range: Minimum value of 0.
--   
--   <a>$sel:placementGroup:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_placementGroup</a> - The name of the placement
--   group into which to launch your instances, if any.
--   
--   <a>$sel:suspendedProcesses:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_suspendedProcesses</a> - The suspended processes
--   associated with the group.
--   
--   <a>$sel:predictedCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_predictedCapacity</a> - The predicted capacity of
--   the group when it has a predictive scaling policy.
--   
--   <a>$sel:autoScalingGroupARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupARN</a> - The Amazon Resource Name
--   (ARN) of the Auto Scaling group.
--   
--   <a>$sel:launchTemplate:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchTemplate</a> - The launch template for the
--   group.
--   
--   <a>$sel:launchConfigurationName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchConfigurationName</a> - The name of the
--   associated launch configuration.
--   
--   <a>$sel:instances:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_instances</a> - The EC2 instances associated with
--   the group.
--   
--   <a>$sel:context:AutoScalingGroup'</a>, <a>autoScalingGroup_context</a>
--   - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_mixedInstancesPolicy</a> - The mixed instances
--   policy for the group.
--   
--   <a>$sel:tags:AutoScalingGroup'</a>, <a>autoScalingGroup_tags</a> - The
--   tags for the group.
--   
--   <a>$sel:loadBalancerNames:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_loadBalancerNames</a> - One or more load balancers
--   associated with the group.
--   
--   <a>$sel:targetGroupARNs:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_targetGroupARNs</a> - The Amazon Resource Names
--   (ARN) of the target groups for your load balancer.
--   
--   <a>$sel:vPCZoneIdentifier:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_vPCZoneIdentifier</a> - One or more subnet IDs, if
--   applicable, separated by commas.
--   
--   <a>$sel:warmPoolSize:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolSize</a> - The current size of the warm
--   pool.
--   
--   <a>$sel:warmPoolConfiguration:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolConfiguration</a> - The warm pool for the
--   group.
--   
--   <a>$sel:capacityRebalance:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_capacityRebalance</a> - Indicates whether Capacity
--   Rebalancing is enabled.
--   
--   <a>$sel:serviceLinkedRoleARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_serviceLinkedRoleARN</a> - The Amazon Resource
--   Name (ARN) of the service-linked role that the Auto Scaling group uses
--   to call other Amazon Web Services on your behalf.
--   
--   <a>$sel:healthCheckGracePeriod:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckGracePeriod</a> - The amount of time,
--   in seconds, that Amazon EC2 Auto Scaling waits before checking the
--   health status of an EC2 instance that has come into service.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':AutoScalingGroup'</a>,
--   <a>autoScalingGroup_newInstancesProtectedFromScaleIn</a> - Indicates
--   whether newly launched instances are protected from termination by
--   Amazon EC2 Auto Scaling when scaling in.
--   
--   <a>$sel:enabledMetrics:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_enabledMetrics</a> - The metrics enabled for the
--   group.
--   
--   <a>$sel:terminationPolicies:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_terminationPolicies</a> - The termination policies
--   for the group.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:minSize:AutoScalingGroup'</a>, <a>autoScalingGroup_minSize</a>
--   - The minimum size of the group.
--   
--   <a>$sel:maxSize:AutoScalingGroup'</a>, <a>autoScalingGroup_maxSize</a>
--   - The maximum size of the group.
--   
--   <a>$sel:desiredCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_desiredCapacity</a> - The desired size of the
--   group.
--   
--   <a>$sel:defaultCooldown:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_defaultCooldown</a> - The duration of the default
--   cooldown period, in seconds.
--   
--   <a>$sel:availabilityZones:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_availabilityZones</a> - One or more Availability
--   Zones for the group.
--   
--   <a>$sel:healthCheckType:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckType</a> - The service to use for the
--   health checks. The valid values are <tt>EC2</tt> and <tt>ELB</tt>. If
--   you configure an Auto Scaling group to use <tt>ELB</tt> health checks,
--   it considers the instance unhealthy if it fails either the EC2 status
--   checks or the load balancer health checks.
--   
--   <a>$sel:createdTime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_createdTime</a> - The date and time the group was
--   created.
newAutoScalingGroup :: Text -> Int -> Int -> Int -> Int -> Text -> UTCTime -> AutoScalingGroup

-- | The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
autoScalingGroup_status :: Lens' AutoScalingGroup (Maybe Text)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service.
--   
--   Valid Range: Minimum value of 0.
autoScalingGroup_maxInstanceLifetime :: Lens' AutoScalingGroup (Maybe Int)

-- | The name of the placement group into which to launch your instances,
--   if any.
autoScalingGroup_placementGroup :: Lens' AutoScalingGroup (Maybe Text)

-- | The suspended processes associated with the group.
autoScalingGroup_suspendedProcesses :: Lens' AutoScalingGroup (Maybe [SuspendedProcess])

-- | The predicted capacity of the group when it has a predictive scaling
--   policy.
autoScalingGroup_predictedCapacity :: Lens' AutoScalingGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
autoScalingGroup_autoScalingGroupARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The launch template for the group.
autoScalingGroup_launchTemplate :: Lens' AutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the associated launch configuration.
autoScalingGroup_launchConfigurationName :: Lens' AutoScalingGroup (Maybe Text)

-- | The EC2 instances associated with the group.
autoScalingGroup_instances :: Lens' AutoScalingGroup (Maybe [Instance])

-- | Reserved.
autoScalingGroup_context :: Lens' AutoScalingGroup (Maybe Text)

-- | The mixed instances policy for the group.
autoScalingGroup_mixedInstancesPolicy :: Lens' AutoScalingGroup (Maybe MixedInstancesPolicy)

-- | The tags for the group.
autoScalingGroup_tags :: Lens' AutoScalingGroup (Maybe [TagDescription])

-- | One or more load balancers associated with the group.
autoScalingGroup_loadBalancerNames :: Lens' AutoScalingGroup (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the target groups for your load
--   balancer.
autoScalingGroup_targetGroupARNs :: Lens' AutoScalingGroup (Maybe [Text])

-- | One or more subnet IDs, if applicable, separated by commas.
autoScalingGroup_vPCZoneIdentifier :: Lens' AutoScalingGroup (Maybe Text)

-- | The current size of the warm pool.
autoScalingGroup_warmPoolSize :: Lens' AutoScalingGroup (Maybe Int)

-- | The warm pool for the group.
autoScalingGroup_warmPoolConfiguration :: Lens' AutoScalingGroup (Maybe WarmPoolConfiguration)

-- | Indicates whether Capacity Rebalancing is enabled.
autoScalingGroup_capacityRebalance :: Lens' AutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf.
autoScalingGroup_serviceLinkedRoleARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service.
autoScalingGroup_healthCheckGracePeriod :: Lens' AutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in.
autoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' AutoScalingGroup (Maybe Bool)

-- | The metrics enabled for the group.
autoScalingGroup_enabledMetrics :: Lens' AutoScalingGroup (Maybe [EnabledMetric])

-- | The termination policies for the group.
autoScalingGroup_terminationPolicies :: Lens' AutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group.
autoScalingGroup_autoScalingGroupName :: Lens' AutoScalingGroup Text

-- | The minimum size of the group.
autoScalingGroup_minSize :: Lens' AutoScalingGroup Int

-- | The maximum size of the group.
autoScalingGroup_maxSize :: Lens' AutoScalingGroup Int

-- | The desired size of the group.
autoScalingGroup_desiredCapacity :: Lens' AutoScalingGroup Int

-- | The duration of the default cooldown period, in seconds.
autoScalingGroup_defaultCooldown :: Lens' AutoScalingGroup Int

-- | One or more Availability Zones for the group.
autoScalingGroup_availabilityZones :: Lens' AutoScalingGroup [Text]

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
autoScalingGroup_healthCheckType :: Lens' AutoScalingGroup Text

-- | The date and time the group was created.
autoScalingGroup_createdTime :: Lens' AutoScalingGroup UTCTime

-- | Describes an EC2 instance associated with an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingInstanceDetails</a> smart constructor.
data AutoScalingInstanceDetails
AutoScalingInstanceDetails' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | The instance type of the EC2 instance.
[$sel:instanceType:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The launch template for the instance.
[$sel:launchTemplate:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe LaunchTemplateSpecification

-- | The launch configuration used to launch the instance. This value is
--   not available if you attached the instance to the Auto Scaling group.
[$sel:launchConfigurationName:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
[$sel:weightedCapacity:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Maybe Text

-- | The ID of the instance.
[$sel:instanceId:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The name of the Auto Scaling group for the instance.
[$sel:autoScalingGroupName:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The Availability Zone for the instance.
[$sel:availabilityZone:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The lifecycle state for the instance. The <tt>Quarantined</tt> state
--   is not used. For information about lifecycle states, see <a>Instance
--   lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
[$sel:lifecycleState:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | The last reported health status of this instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and Amazon EC2 Auto Scaling
--   should terminate and replace it.
[$sel:healthStatus:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
[$sel:protectedFromScaleIn:AutoScalingInstanceDetails'] :: AutoScalingInstanceDetails -> Bool

-- | Create a value of <a>AutoScalingInstanceDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceType</a> - The instance type of
--   the EC2 instance.
--   
--   <a>$sel:launchTemplate:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchTemplate</a> - The launch template
--   for the instance.
--   
--   <a>$sel:launchConfigurationName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchConfigurationName</a> - The launch
--   configuration used to launch the instance. This value is not available
--   if you attached the instance to the Auto Scaling group.
--   
--   <a>$sel:weightedCapacity:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_weightedCapacity</a> - The number of
--   capacity units contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_autoScalingGroupName</a> - The name of
--   the Auto Scaling group for the instance.
--   
--   <a>$sel:availabilityZone:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_availabilityZone</a> - The Availability
--   Zone for the instance.
--   
--   <a>$sel:lifecycleState:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_lifecycleState</a> - The lifecycle state
--   for the instance. The <tt>Quarantined</tt> state is not used. For
--   information about lifecycle states, see <a>Instance lifecycle</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
--   
--   <a>$sel:healthStatus:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_healthStatus</a> - The last reported
--   health status of this instance. "Healthy" means that the instance is
--   healthy and should remain in service. "Unhealthy" means that the
--   instance is unhealthy and Amazon EC2 Auto Scaling should terminate and
--   replace it.
--   
--   <a>$sel:protectedFromScaleIn:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_protectedFromScaleIn</a> - Indicates
--   whether the instance is protected from termination by Amazon EC2 Auto
--   Scaling when scaling in.
newAutoScalingInstanceDetails :: Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | The instance type of the EC2 instance.
autoScalingInstanceDetails_instanceType :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The launch template for the instance.
autoScalingInstanceDetails_launchTemplate :: Lens' AutoScalingInstanceDetails (Maybe LaunchTemplateSpecification)

-- | The launch configuration used to launch the instance. This value is
--   not available if you attached the instance to the Auto Scaling group.
autoScalingInstanceDetails_launchConfigurationName :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
autoScalingInstanceDetails_weightedCapacity :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The ID of the instance.
autoScalingInstanceDetails_instanceId :: Lens' AutoScalingInstanceDetails Text

-- | The name of the Auto Scaling group for the instance.
autoScalingInstanceDetails_autoScalingGroupName :: Lens' AutoScalingInstanceDetails Text

-- | The Availability Zone for the instance.
autoScalingInstanceDetails_availabilityZone :: Lens' AutoScalingInstanceDetails Text

-- | The lifecycle state for the instance. The <tt>Quarantined</tt> state
--   is not used. For information about lifecycle states, see <a>Instance
--   lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
autoScalingInstanceDetails_lifecycleState :: Lens' AutoScalingInstanceDetails Text

-- | The last reported health status of this instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and Amazon EC2 Auto Scaling
--   should terminate and replace it.
autoScalingInstanceDetails_healthStatus :: Lens' AutoScalingInstanceDetails Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
autoScalingInstanceDetails_protectedFromScaleIn :: Lens' AutoScalingInstanceDetails Bool

-- | Describes a block device mapping.
--   
--   <i>See:</i> <a>newBlockDeviceMapping</a> smart constructor.
data BlockDeviceMapping
BlockDeviceMapping' :: Maybe Ebs -> Maybe Bool -> Maybe Text -> Text -> BlockDeviceMapping

-- | Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
[$sel:ebs:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Ebs

-- | Setting this value to <tt>true</tt> suppresses the specified device
--   included in the block device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
[$sel:noDevice:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Bool

-- | The name of the virtual device (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
[$sel:virtualName:BlockDeviceMapping'] :: BlockDeviceMapping -> Maybe Text

-- | The device name exposed to the EC2 instance (for example,
--   <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For more information, see
--   <a>Device Naming on Linux Instances</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
[$sel:deviceName:BlockDeviceMapping'] :: BlockDeviceMapping -> Text

-- | Create a value of <a>BlockDeviceMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:BlockDeviceMapping'</a>, <a>blockDeviceMapping_ebs</a> -
--   Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:noDevice:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_noDevice</a> - Setting this value to
--   <tt>true</tt> suppresses the specified device included in the block
--   device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
--   
--   <a>$sel:virtualName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_virtualName</a> - The name of the virtual device
--   (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:deviceName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_deviceName</a> - The device name exposed to the
--   EC2 instance (for example, <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For
--   more information, see <a>Device Naming on Linux Instances</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
newBlockDeviceMapping :: Text -> BlockDeviceMapping

-- | Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_ebs :: Lens' BlockDeviceMapping (Maybe Ebs)

-- | Setting this value to <tt>true</tt> suppresses the specified device
--   included in the block device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
blockDeviceMapping_noDevice :: Lens' BlockDeviceMapping (Maybe Bool)

-- | The name of the virtual device (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_virtualName :: Lens' BlockDeviceMapping (Maybe Text)

-- | The device name exposed to the EC2 instance (for example,
--   <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For more information, see
--   <a>Device Naming on Linux Instances</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
blockDeviceMapping_deviceName :: Lens' BlockDeviceMapping Text

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the capacity
--   forecast for a predictive scaling policy. This structure includes the
--   data points for that capacity forecast, along with the timestamps of
--   those data points.
--   
--   <i>See:</i> <a>newCapacityForecast</a> smart constructor.
data CapacityForecast
CapacityForecast' :: [ISO8601] -> [Double] -> CapacityForecast

-- | The time stamps for the data points, in UTC format.
[$sel:timestamps:CapacityForecast'] :: CapacityForecast -> [ISO8601]

-- | The values of the data points.
[$sel:values:CapacityForecast'] :: CapacityForecast -> [Double]

-- | Create a value of <a>CapacityForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:CapacityForecast'</a>,
--   <a>capacityForecast_timestamps</a> - The time stamps for the data
--   points, in UTC format.
--   
--   <a>$sel:values:CapacityForecast'</a>, <a>capacityForecast_values</a> -
--   The values of the data points.
newCapacityForecast :: CapacityForecast

-- | The time stamps for the data points, in UTC format.
capacityForecast_timestamps :: Lens' CapacityForecast [UTCTime]

-- | The values of the data points.
capacityForecast_values :: Lens' CapacityForecast [Double]

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Amazon EC2 Auto Scaling.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
[$sel:dimensions:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic

-- | Describes the desired configuration for an instance refresh.
--   
--   If you specify a desired configuration, you must specify either a
--   <tt>LaunchTemplate</tt> or a <tt>MixedInstancesPolicy</tt>.
--   
--   <i>See:</i> <a>newDesiredConfiguration</a> smart constructor.
data DesiredConfiguration
DesiredConfiguration' :: Maybe LaunchTemplateSpecification -> Maybe MixedInstancesPolicy -> DesiredConfiguration
[$sel:launchTemplate:DesiredConfiguration'] :: DesiredConfiguration -> Maybe LaunchTemplateSpecification
[$sel:mixedInstancesPolicy:DesiredConfiguration'] :: DesiredConfiguration -> Maybe MixedInstancesPolicy

-- | Create a value of <a>DesiredConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplate:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_launchTemplate</a> - Undocumented member.
--   
--   <a>$sel:mixedInstancesPolicy:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_mixedInstancesPolicy</a> - Undocumented
--   member.
newDesiredConfiguration :: DesiredConfiguration

-- | Undocumented member.
desiredConfiguration_launchTemplate :: Lens' DesiredConfiguration (Maybe LaunchTemplateSpecification)

-- | Undocumented member.
desiredConfiguration_mixedInstancesPolicy :: Lens' DesiredConfiguration (Maybe MixedInstancesPolicy)

-- | Describes information used to set up an Amazon EBS volume specified in
--   a block device mapping.
--   
--   <i>See:</i> <a>newEbs</a> smart constructor.
data Ebs
Ebs' :: Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Ebs

-- | Specifies whether the volume should be encrypted. Encrypted EBS
--   volumes can only be attached to instances that support Amazon EBS
--   encryption. For more information, see <a>Supported Instance Types</a>.
--   If your AMI uses encrypted volumes, you can also only launch it on
--   supported instance types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:encrypted:Ebs'] :: Ebs -> Maybe Bool

-- | The throughput (MiBps) to provision for a <tt>gp3</tt> volume.
[$sel:throughput:Ebs'] :: Ebs -> Maybe Natural

-- | Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
[$sel:deleteOnTermination:Ebs'] :: Ebs -> Maybe Bool

-- | The snapshot ID of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
[$sel:snapshotId:Ebs'] :: Ebs -> Maybe Text

-- | The volume type. For more information, see <a>Amazon EBS Volume
--   Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
[$sel:volumeType:Ebs'] :: Ebs -> Maybe Text

-- | The number of input/output (I/O) operations per second (IOPS) to
--   provision for the volume. For <tt>gp3</tt> and <tt>io1</tt> volumes,
--   this represents the number of IOPS that are provisioned for the
--   volume. For <tt>gp2</tt> volumes, this represents the baseline
--   performance of the volume and the rate at which the volume accumulates
--   I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
[$sel:iops:Ebs'] :: Ebs -> Maybe Natural

-- | The volume size, in GiBs. The following are the supported volumes
--   sizes for each volume type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
[$sel:volumeSize:Ebs'] :: Ebs -> Maybe Natural

-- | Create a value of <a>Ebs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encrypted:Ebs'</a>, <a>ebs_encrypted</a> - Specifies whether
--   the volume should be encrypted. Encrypted EBS volumes can only be
--   attached to instances that support Amazon EBS encryption. For more
--   information, see <a>Supported Instance Types</a>. If your AMI uses
--   encrypted volumes, you can also only launch it on supported instance
--   types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:throughput:Ebs'</a>, <a>ebs_throughput</a> - The throughput
--   (MiBps) to provision for a <tt>gp3</tt> volume.
--   
--   <a>$sel:deleteOnTermination:Ebs'</a>, <a>ebs_deleteOnTermination</a> -
--   Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
--   
--   <a>$sel:snapshotId:Ebs'</a>, <a>ebs_snapshotId</a> - The snapshot ID
--   of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
--   
--   <a>$sel:volumeType:Ebs'</a>, <a>ebs_volumeType</a> - The volume type.
--   For more information, see <a>Amazon EBS Volume Types</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
--   
--   <a>$sel:iops:Ebs'</a>, <a>ebs_iops</a> - The number of input/output
--   (I/O) operations per second (IOPS) to provision for the volume. For
--   <tt>gp3</tt> and <tt>io1</tt> volumes, this represents the number of
--   IOPS that are provisioned for the volume. For <tt>gp2</tt> volumes,
--   this represents the baseline performance of the volume and the rate at
--   which the volume accumulates I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
--   
--   <a>$sel:volumeSize:Ebs'</a>, <a>ebs_volumeSize</a> - The volume size,
--   in GiBs. The following are the supported volumes sizes for each volume
--   type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
newEbs :: Ebs

-- | Specifies whether the volume should be encrypted. Encrypted EBS
--   volumes can only be attached to instances that support Amazon EBS
--   encryption. For more information, see <a>Supported Instance Types</a>.
--   If your AMI uses encrypted volumes, you can also only launch it on
--   supported instance types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
ebs_encrypted :: Lens' Ebs (Maybe Bool)

-- | The throughput (MiBps) to provision for a <tt>gp3</tt> volume.
ebs_throughput :: Lens' Ebs (Maybe Natural)

-- | Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
ebs_deleteOnTermination :: Lens' Ebs (Maybe Bool)

-- | The snapshot ID of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
ebs_snapshotId :: Lens' Ebs (Maybe Text)

-- | The volume type. For more information, see <a>Amazon EBS Volume
--   Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
ebs_volumeType :: Lens' Ebs (Maybe Text)

-- | The number of input/output (I/O) operations per second (IOPS) to
--   provision for the volume. For <tt>gp3</tt> and <tt>io1</tt> volumes,
--   this represents the number of IOPS that are provisioned for the
--   volume. For <tt>gp2</tt> volumes, this represents the baseline
--   performance of the volume and the rate at which the volume accumulates
--   I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
ebs_iops :: Lens' Ebs (Maybe Natural)

-- | The volume size, in GiBs. The following are the supported volumes
--   sizes for each volume type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
ebs_volumeSize :: Lens' Ebs (Maybe Natural)

-- | Describes an enabled metric.
--   
--   <i>See:</i> <a>newEnabledMetric</a> smart constructor.
data EnabledMetric
EnabledMetric' :: Maybe Text -> Maybe Text -> EnabledMetric

-- | The granularity of the metric. The only valid value is
--   <tt>1Minute</tt>.
[$sel:granularity:EnabledMetric'] :: EnabledMetric -> Maybe Text

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
[$sel:metric:EnabledMetric'] :: EnabledMetric -> Maybe Text

-- | Create a value of <a>EnabledMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:EnabledMetric'</a>,
--   <a>enabledMetric_granularity</a> - The granularity of the metric. The
--   only valid value is <tt>1Minute</tt>.
--   
--   <a>$sel:metric:EnabledMetric'</a>, <a>enabledMetric_metric</a> - One
--   of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newEnabledMetric :: EnabledMetric

-- | The granularity of the metric. The only valid value is
--   <tt>1Minute</tt>.
enabledMetric_granularity :: Lens' EnabledMetric (Maybe Text)

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
enabledMetric_metric :: Lens' EnabledMetric (Maybe Text)

-- | Describes a scheduled action that could not be created, updated, or
--   deleted.
--   
--   <i>See:</i> <a>newFailedScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data FailedScheduledUpdateGroupActionRequest
FailedScheduledUpdateGroupActionRequest' :: Maybe Text -> Maybe Text -> Text -> FailedScheduledUpdateGroupActionRequest

-- | The error message accompanying the error code.
[$sel:errorMessage:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Maybe Text

-- | The error code.
[$sel:errorCode:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Maybe Text

-- | The name of the scheduled action.
[$sel:scheduledActionName:FailedScheduledUpdateGroupActionRequest'] :: FailedScheduledUpdateGroupActionRequest -> Text

-- | Create a value of <a>FailedScheduledUpdateGroupActionRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorMessage</a> - The
--   error message accompanying the error code.
--   
--   <a>$sel:errorCode:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorCode</a> - The error
--   code.
--   
--   
--   <a>$sel:scheduledActionName:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_scheduledActionName</a> -
--   The name of the scheduled action.
newFailedScheduledUpdateGroupActionRequest :: Text -> FailedScheduledUpdateGroupActionRequest

-- | The error message accompanying the error code.
failedScheduledUpdateGroupActionRequest_errorMessage :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The error code.
failedScheduledUpdateGroupActionRequest_errorCode :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scheduled action.
failedScheduledUpdateGroupActionRequest_scheduledActionName :: Lens' FailedScheduledUpdateGroupActionRequest Text

-- | Describes a filter that is used to return a more specific list of
--   results when describing tags.
--   
--   For more information, see <a>Tagging Auto Scaling groups and
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Text -> Filter

-- | One or more filter values. Filter values are case-sensitive.
[$sel:values:Filter'] :: Filter -> Maybe [Text]

-- | The name of the filter. The valid values are:
--   <tt>auto-scaling-group</tt>, <tt>key</tt>, <tt>value</tt>, and
--   <tt>propagate-at-launch</tt>.
[$sel:name:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - One or more filter
--   values. Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   The valid values are: <tt>auto-scaling-group</tt>, <tt>key</tt>,
--   <tt>value</tt>, and <tt>propagate-at-launch</tt>.
newFilter :: Text -> Filter

-- | One or more filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the filter. The valid values are:
--   <tt>auto-scaling-group</tt>, <tt>key</tt>, <tt>value</tt>, and
--   <tt>propagate-at-launch</tt>.
filter_name :: Lens' Filter Text

-- | Describes an EC2 instance.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | The instance type of the EC2 instance.
[$sel:instanceType:Instance'] :: Instance -> Maybe Text

-- | The launch template for the instance.
[$sel:launchTemplate:Instance'] :: Instance -> Maybe LaunchTemplateSpecification

-- | The launch configuration associated with the instance.
[$sel:launchConfigurationName:Instance'] :: Instance -> Maybe Text

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
[$sel:weightedCapacity:Instance'] :: Instance -> Maybe Text

-- | The ID of the instance.
[$sel:instanceId:Instance'] :: Instance -> Text

-- | The Availability Zone in which the instance is running.
[$sel:availabilityZone:Instance'] :: Instance -> Text

-- | A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:lifecycleState:Instance'] :: Instance -> LifecycleState

-- | The last reported health status of the instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and that Amazon EC2 Auto Scaling
--   should terminate and replace it.
[$sel:healthStatus:Instance'] :: Instance -> Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
[$sel:protectedFromScaleIn:Instance'] :: Instance -> Bool

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type of the EC2 instance.
--   
--   <a>$sel:launchTemplate:Instance'</a>, <a>instance_launchTemplate</a> -
--   The launch template for the instance.
--   
--   <a>$sel:launchConfigurationName:Instance'</a>,
--   <a>instance_launchConfigurationName</a> - The launch configuration
--   associated with the instance.
--   
--   <a>$sel:weightedCapacity:Instance'</a>,
--   <a>instance_weightedCapacity</a> - The number of capacity units
--   contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:availabilityZone:Instance'</a>,
--   <a>instance_availabilityZone</a> - The Availability Zone in which the
--   instance is running.
--   
--   <a>$sel:lifecycleState:Instance'</a>, <a>instance_lifecycleState</a> -
--   A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:healthStatus:Instance'</a>, <a>instance_healthStatus</a> - The
--   last reported health status of the instance. "Healthy" means that the
--   instance is healthy and should remain in service. "Unhealthy" means
--   that the instance is unhealthy and that Amazon EC2 Auto Scaling should
--   terminate and replace it.
--   
--   <a>$sel:protectedFromScaleIn:Instance'</a>,
--   <a>instance_protectedFromScaleIn</a> - Indicates whether the instance
--   is protected from termination by Amazon EC2 Auto Scaling when scaling
--   in.
newInstance :: Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | The instance type of the EC2 instance.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The launch template for the instance.
instance_launchTemplate :: Lens' Instance (Maybe LaunchTemplateSpecification)

-- | The launch configuration associated with the instance.
instance_launchConfigurationName :: Lens' Instance (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
instance_weightedCapacity :: Lens' Instance (Maybe Text)

-- | The ID of the instance.
instance_instanceId :: Lens' Instance Text

-- | The Availability Zone in which the instance is running.
instance_availabilityZone :: Lens' Instance Text

-- | A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
instance_lifecycleState :: Lens' Instance LifecycleState

-- | The last reported health status of the instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and that Amazon EC2 Auto Scaling
--   should terminate and replace it.
instance_healthStatus :: Lens' Instance Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
instance_protectedFromScaleIn :: Lens' Instance Bool

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe InstanceMetadataEndpointState -> Maybe Natural -> Maybe InstanceMetadataHttpTokensState -> InstanceMetadataOptions

-- | This parameter enables or disables the HTTP metadata endpoint on your
--   instances. If the parameter is not specified, the default state is
--   <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
[$sel:httpEndpoint:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe InstanceMetadataEndpointState

-- | The desired HTTP PUT response hop limit for instance metadata
--   requests. The larger the number, the further instance metadata
--   requests can travel.
--   
--   Default: 1
[$sel:httpPutResponseHopLimit:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Natural

-- | The state of token usage for your instance metadata requests. If the
--   parameter is not specified in the request, the default state is
--   <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
[$sel:httpTokens:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe InstanceMetadataHttpTokensState

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpEndpoint</a> - This parameter enables
--   or disables the HTTP metadata endpoint on your instances. If the
--   parameter is not specified, the default state is <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - The desired
--   HTTP PUT response hop limit for instance metadata requests. The larger
--   the number, the further instance metadata requests can travel.
--   
--   Default: 1
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - The state of token usage
--   for your instance metadata requests. If the parameter is not specified
--   in the request, the default state is <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | This parameter enables or disables the HTTP metadata endpoint on your
--   instances. If the parameter is not specified, the default state is
--   <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
instanceMetadataOptions_httpEndpoint :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataEndpointState)

-- | The desired HTTP PUT response hop limit for instance metadata
--   requests. The larger the number, the further instance metadata
--   requests can travel.
--   
--   Default: 1
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | The state of token usage for your instance metadata requests. If the
--   parameter is not specified in the request, the default state is
--   <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataHttpTokensState)

-- | Describes whether detailed monitoring is enabled for the Auto Scaling
--   instances.
--   
--   <i>See:</i> <a>newInstanceMonitoring</a> smart constructor.
data InstanceMonitoring
InstanceMonitoring' :: Maybe Bool -> InstanceMonitoring

-- | If <tt>true</tt>, detailed monitoring is enabled. Otherwise, basic
--   monitoring is enabled.
[$sel:enabled:InstanceMonitoring'] :: InstanceMonitoring -> Maybe Bool

-- | Create a value of <a>InstanceMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:InstanceMonitoring'</a>,
--   <a>instanceMonitoring_enabled</a> - If <tt>true</tt>, detailed
--   monitoring is enabled. Otherwise, basic monitoring is enabled.
newInstanceMonitoring :: InstanceMonitoring

-- | If <tt>true</tt>, detailed monitoring is enabled. Otherwise, basic
--   monitoring is enabled.
instanceMonitoring_enabled :: Lens' InstanceMonitoring (Maybe Bool)

-- | Describes an instance refresh for an Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefresh</a> smart constructor.
data InstanceRefresh
InstanceRefresh' :: Maybe InstanceRefreshStatus -> Maybe Text -> Maybe Natural -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe InstanceRefreshProgressDetails -> Maybe DesiredConfiguration -> Maybe RefreshPreferences -> Maybe Text -> Maybe Natural -> Maybe Text -> InstanceRefresh

-- | The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
[$sel:status:InstanceRefresh'] :: InstanceRefresh -> Maybe InstanceRefreshStatus

-- | The instance refresh ID.
[$sel:instanceRefreshId:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | The percentage of the instance refresh that is complete. For each
--   instance replacement, Amazon EC2 Auto Scaling tracks the instance's
--   health status and warm-up time. When the instance's health status
--   changes to healthy and the specified warm-up time passes, the instance
--   is considered updated and is added to the percentage complete.
[$sel:percentageComplete:InstanceRefresh'] :: InstanceRefresh -> Maybe Natural

-- | The date and time at which the instance refresh began.
[$sel:startTime:InstanceRefresh'] :: InstanceRefresh -> Maybe ISO8601

-- | The date and time at which the instance refresh ended.
[$sel:endTime:InstanceRefresh'] :: InstanceRefresh -> Maybe ISO8601

-- | Additional progress details for an Auto Scaling group that has a warm
--   pool.
[$sel:progressDetails:InstanceRefresh'] :: InstanceRefresh -> Maybe InstanceRefreshProgressDetails

-- | Describes the specific update you want to deploy.
[$sel:desiredConfiguration:InstanceRefresh'] :: InstanceRefresh -> Maybe DesiredConfiguration
[$sel:preferences:InstanceRefresh'] :: InstanceRefresh -> Maybe RefreshPreferences

-- | Provides more details about the current status of the instance
--   refresh.
[$sel:statusReason:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | The number of instances remaining to update before the instance
--   refresh is complete.
[$sel:instancesToUpdate:InstanceRefresh'] :: InstanceRefresh -> Maybe Natural

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:InstanceRefresh'] :: InstanceRefresh -> Maybe Text

-- | Create a value of <a>InstanceRefresh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InstanceRefresh'</a>, <a>instanceRefresh_status</a> -
--   The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
--   
--   <a>$sel:instanceRefreshId:InstanceRefresh'</a>,
--   <a>instanceRefresh_instanceRefreshId</a> - The instance refresh ID.
--   
--   <a>$sel:percentageComplete:InstanceRefresh'</a>,
--   <a>instanceRefresh_percentageComplete</a> - The percentage of the
--   instance refresh that is complete. For each instance replacement,
--   Amazon EC2 Auto Scaling tracks the instance's health status and
--   warm-up time. When the instance's health status changes to healthy and
--   the specified warm-up time passes, the instance is considered updated
--   and is added to the percentage complete.
--   
--   <a>$sel:startTime:InstanceRefresh'</a>,
--   <a>instanceRefresh_startTime</a> - The date and time at which the
--   instance refresh began.
--   
--   <a>$sel:endTime:InstanceRefresh'</a>, <a>instanceRefresh_endTime</a> -
--   The date and time at which the instance refresh ended.
--   
--   <a>$sel:progressDetails:InstanceRefresh'</a>,
--   <a>instanceRefresh_progressDetails</a> - Additional progress details
--   for an Auto Scaling group that has a warm pool.
--   
--   <a>$sel:desiredConfiguration:InstanceRefresh'</a>,
--   <a>instanceRefresh_desiredConfiguration</a> - Describes the specific
--   update you want to deploy.
--   
--   <a>$sel:preferences:InstanceRefresh'</a>,
--   <a>instanceRefresh_preferences</a> - Undocumented member.
--   
--   <a>$sel:statusReason:InstanceRefresh'</a>,
--   <a>instanceRefresh_statusReason</a> - Provides more details about the
--   current status of the instance refresh.
--   
--   <a>$sel:instancesToUpdate:InstanceRefresh'</a>,
--   <a>instanceRefresh_instancesToUpdate</a> - The number of instances
--   remaining to update before the instance refresh is complete.
--   
--   <a>$sel:autoScalingGroupName:InstanceRefresh'</a>,
--   <a>instanceRefresh_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newInstanceRefresh :: InstanceRefresh

-- | The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
instanceRefresh_status :: Lens' InstanceRefresh (Maybe InstanceRefreshStatus)

-- | The instance refresh ID.
instanceRefresh_instanceRefreshId :: Lens' InstanceRefresh (Maybe Text)

-- | The percentage of the instance refresh that is complete. For each
--   instance replacement, Amazon EC2 Auto Scaling tracks the instance's
--   health status and warm-up time. When the instance's health status
--   changes to healthy and the specified warm-up time passes, the instance
--   is considered updated and is added to the percentage complete.
instanceRefresh_percentageComplete :: Lens' InstanceRefresh (Maybe Natural)

-- | The date and time at which the instance refresh began.
instanceRefresh_startTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | The date and time at which the instance refresh ended.
instanceRefresh_endTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | Additional progress details for an Auto Scaling group that has a warm
--   pool.
instanceRefresh_progressDetails :: Lens' InstanceRefresh (Maybe InstanceRefreshProgressDetails)

-- | Describes the specific update you want to deploy.
instanceRefresh_desiredConfiguration :: Lens' InstanceRefresh (Maybe DesiredConfiguration)

-- | Undocumented member.
instanceRefresh_preferences :: Lens' InstanceRefresh (Maybe RefreshPreferences)

-- | Provides more details about the current status of the instance
--   refresh.
instanceRefresh_statusReason :: Lens' InstanceRefresh (Maybe Text)

-- | The number of instances remaining to update before the instance
--   refresh is complete.
instanceRefresh_instancesToUpdate :: Lens' InstanceRefresh (Maybe Natural)

-- | The name of the Auto Scaling group.
instanceRefresh_autoScalingGroupName :: Lens' InstanceRefresh (Maybe Text)

-- | Reports the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefreshLivePoolProgress</a> smart
--   constructor.
data InstanceRefreshLivePoolProgress
InstanceRefreshLivePoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshLivePoolProgress

-- | The percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
[$sel:percentageComplete:InstanceRefreshLivePoolProgress'] :: InstanceRefreshLivePoolProgress -> Maybe Natural

-- | The number of instances remaining to update.
[$sel:instancesToUpdate:InstanceRefreshLivePoolProgress'] :: InstanceRefreshLivePoolProgress -> Maybe Natural

-- | Create a value of <a>InstanceRefreshLivePoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_percentageComplete</a> - The
--   percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshLivePoolProgress :: InstanceRefreshLivePoolProgress

-- | The percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
instanceRefreshLivePoolProgress_percentageComplete :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshLivePoolProgress_instancesToUpdate :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)

-- | Reports the progress of an instance refresh on an Auto Scaling group
--   that has a warm pool. This includes separate details for instances in
--   the warm pool and instances in the Auto Scaling group (the live pool).
--   
--   <i>See:</i> <a>newInstanceRefreshProgressDetails</a> smart
--   constructor.
data InstanceRefreshProgressDetails
InstanceRefreshProgressDetails' :: Maybe InstanceRefreshLivePoolProgress -> Maybe InstanceRefreshWarmPoolProgress -> InstanceRefreshProgressDetails

-- | Indicates the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
[$sel:livePoolProgress:InstanceRefreshProgressDetails'] :: InstanceRefreshProgressDetails -> Maybe InstanceRefreshLivePoolProgress

-- | Indicates the progress of an instance refresh on instances that are in
--   the warm pool.
[$sel:warmPoolProgress:InstanceRefreshProgressDetails'] :: InstanceRefreshProgressDetails -> Maybe InstanceRefreshWarmPoolProgress

-- | Create a value of <a>InstanceRefreshProgressDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:livePoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_livePoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the Auto
--   Scaling group.
--   
--   <a>$sel:warmPoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_warmPoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the warm
--   pool.
newInstanceRefreshProgressDetails :: InstanceRefreshProgressDetails

-- | Indicates the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
instanceRefreshProgressDetails_livePoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshLivePoolProgress)

-- | Indicates the progress of an instance refresh on instances that are in
--   the warm pool.
instanceRefreshProgressDetails_warmPoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshWarmPoolProgress)

-- | Reports the progress of an instance refresh on instances that are in
--   the warm pool.
--   
--   <i>See:</i> <a>newInstanceRefreshWarmPoolProgress</a> smart
--   constructor.
data InstanceRefreshWarmPoolProgress
InstanceRefreshWarmPoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshWarmPoolProgress

-- | The percentage of instances in the warm pool that have been replaced.
--   For each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
[$sel:percentageComplete:InstanceRefreshWarmPoolProgress'] :: InstanceRefreshWarmPoolProgress -> Maybe Natural

-- | The number of instances remaining to update.
[$sel:instancesToUpdate:InstanceRefreshWarmPoolProgress'] :: InstanceRefreshWarmPoolProgress -> Maybe Natural

-- | Create a value of <a>InstanceRefreshWarmPoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_percentageComplete</a> - The
--   percentage of instances in the warm pool that have been replaced. For
--   each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshWarmPoolProgress :: InstanceRefreshWarmPoolProgress

-- | The percentage of instances in the warm pool that have been replaced.
--   For each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
instanceRefreshWarmPoolProgress_percentageComplete :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshWarmPoolProgress_instancesToUpdate :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)

-- | Describes an instances distribution for an Auto Scaling group with a
--   MixedInstancesPolicy.
--   
--   The instances distribution specifies the distribution of On-Demand
--   Instances and Spot Instances, the maximum price to pay for Spot
--   Instances, and how the Auto Scaling group allocates instance types to
--   fulfill On-Demand and Spot capacities.
--   
--   When you modify <tt>SpotAllocationStrategy</tt>,
--   <tt>SpotInstancePools</tt>, or <tt>SpotMaxPrice</tt> in the
--   UpdateAutoScalingGroup API call, this update action does not deploy
--   any changes across the running Amazon EC2 instances in the group. Your
--   existing Spot Instances continue to run as long as the maximum price
--   for those instances is higher than the current Spot price. When scale
--   out occurs, Amazon EC2 Auto Scaling launches instances based on the
--   new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates
--   instances according to the group's termination policies.
--   
--   <i>See:</i> <a>newInstancesDistribution</a> smart constructor.
data InstancesDistribution
InstancesDistribution' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> InstancesDistribution

-- | The maximum price per unit hour that you are willing to pay for a Spot
--   Instance. If you leave the value at its default (empty), Amazon EC2
--   Auto Scaling uses the On-Demand price as the maximum Spot price. To
--   remove a value that you previously set, include the property but
--   specify an empty string ("") for the value.
[$sel:spotMaxPrice:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | The number of Spot Instance pools across which to allocate your Spot
--   Instances. The Spot pools are determined from the different instance
--   types in the overrides. Valid only when the Spot allocation strategy
--   is <tt>lowest-price</tt>. Value must be in the range of 1 to 20.
--   Defaults to 2 if not specified.
[$sel:spotInstancePools:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Indicates how to allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
[$sel:spotAllocationStrategy:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
[$sel:onDemandPercentageAboveBaseCapacity:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Indicates how to allocate instance types to fulfill On-Demand
--   capacity. The only valid value is <tt>prioritized</tt>, which is also
--   the default value. This strategy uses the order of instance types in
--   the <tt>LaunchTemplateOverrides</tt> to define the launch priority of
--   each instance type. The first instance type in the array is
--   prioritized higher than the last. If all your On-Demand capacity
--   cannot be fulfilled using your highest priority instance, then the
--   Auto Scaling groups launches the remaining capacity using the second
--   priority instance type, and so on.
[$sel:onDemandAllocationStrategy:InstancesDistribution'] :: InstancesDistribution -> Maybe Text

-- | The minimum amount of the Auto Scaling group's capacity that must be
--   fulfilled by On-Demand Instances. This base portion is provisioned
--   first as your group scales. Defaults to 0 if not specified. If you
--   specify weights for the instance types in the overrides, set the value
--   of <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
[$sel:onDemandBaseCapacity:InstancesDistribution'] :: InstancesDistribution -> Maybe Int

-- | Create a value of <a>InstancesDistribution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spotMaxPrice:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotMaxPrice</a> - The maximum price per unit
--   hour that you are willing to pay for a Spot Instance. If you leave the
--   value at its default (empty), Amazon EC2 Auto Scaling uses the
--   On-Demand price as the maximum Spot price. To remove a value that you
--   previously set, include the property but specify an empty string ("")
--   for the value.
--   
--   <a>$sel:spotInstancePools:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotInstancePools</a> - The number of Spot
--   Instance pools across which to allocate your Spot Instances. The Spot
--   pools are determined from the different instance types in the
--   overrides. Valid only when the Spot allocation strategy is
--   <tt>lowest-price</tt>. Value must be in the range of 1 to 20. Defaults
--   to 2 if not specified.
--   
--   <a>$sel:spotAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotAllocationStrategy</a> - Indicates how to
--   allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
--   
--   
--   <a>$sel:onDemandPercentageAboveBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandPercentageAboveBaseCapacity</a> -
--   Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
--   
--   <a>$sel:onDemandAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandAllocationStrategy</a> - Indicates
--   how to allocate instance types to fulfill On-Demand capacity. The only
--   valid value is <tt>prioritized</tt>, which is also the default value.
--   This strategy uses the order of instance types in the
--   <tt>LaunchTemplateOverrides</tt> to define the launch priority of each
--   instance type. The first instance type in the array is prioritized
--   higher than the last. If all your On-Demand capacity cannot be
--   fulfilled using your highest priority instance, then the Auto Scaling
--   groups launches the remaining capacity using the second priority
--   instance type, and so on.
--   
--   <a>$sel:onDemandBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandBaseCapacity</a> - The minimum amount
--   of the Auto Scaling group's capacity that must be fulfilled by
--   On-Demand Instances. This base portion is provisioned first as your
--   group scales. Defaults to 0 if not specified. If you specify weights
--   for the instance types in the overrides, set the value of
--   <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
newInstancesDistribution :: InstancesDistribution

-- | The maximum price per unit hour that you are willing to pay for a Spot
--   Instance. If you leave the value at its default (empty), Amazon EC2
--   Auto Scaling uses the On-Demand price as the maximum Spot price. To
--   remove a value that you previously set, include the property but
--   specify an empty string ("") for the value.
instancesDistribution_spotMaxPrice :: Lens' InstancesDistribution (Maybe Text)

-- | The number of Spot Instance pools across which to allocate your Spot
--   Instances. The Spot pools are determined from the different instance
--   types in the overrides. Valid only when the Spot allocation strategy
--   is <tt>lowest-price</tt>. Value must be in the range of 1 to 20.
--   Defaults to 2 if not specified.
instancesDistribution_spotInstancePools :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
instancesDistribution_spotAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
instancesDistribution_onDemandPercentageAboveBaseCapacity :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instance types to fulfill On-Demand
--   capacity. The only valid value is <tt>prioritized</tt>, which is also
--   the default value. This strategy uses the order of instance types in
--   the <tt>LaunchTemplateOverrides</tt> to define the launch priority of
--   each instance type. The first instance type in the array is
--   prioritized higher than the last. If all your On-Demand capacity
--   cannot be fulfilled using your highest priority instance, then the
--   Auto Scaling groups launches the remaining capacity using the second
--   priority instance type, and so on.
instancesDistribution_onDemandAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | The minimum amount of the Auto Scaling group's capacity that must be
--   fulfilled by On-Demand Instances. This base portion is provisioned
--   first as your group scales. Defaults to 0 if not specified. If you
--   specify weights for the instance types in the overrides, set the value
--   of <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
instancesDistribution_onDemandBaseCapacity :: Lens' InstancesDistribution (Maybe Int)

-- | Describes a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfiguration</a> smart constructor.
data LaunchConfiguration
LaunchConfiguration' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [BlockDeviceMapping] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMonitoring -> Maybe InstanceMetadataOptions -> Text -> Text -> Text -> ISO8601 -> LaunchConfiguration

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). For more information, see
--   <a>Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
[$sel:ebsOptimized:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Bool

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
[$sel:userData:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The ID of the RAM disk associated with the AMI.
[$sel:ramdiskId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The IDs of one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:classicLinkVPCSecurityGroups:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [Text]

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
[$sel:spotPrice:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | For Auto Scaling groups that are running in a VPC, specifies whether
--   to assign a public IP address to the group's instances. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:associatePublicIpAddress:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Bool

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group. For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
[$sel:securityGroups:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [Text]

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role. For more information, see <a>IAM role for
--   applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
[$sel:iamInstanceProfile:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:classicLinkVPCId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | A block device mapping, which specifies the block devices for the
--   instance. For more information, see <a>Block Device Mapping</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
[$sel:blockDeviceMappings:LaunchConfiguration'] :: LaunchConfiguration -> Maybe [BlockDeviceMapping]

-- | The ID of the kernel associated with the AMI.
[$sel:kernelId:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The tenancy of the instance, either <tt>default</tt> or
--   <tt>dedicated</tt>. An instance with <tt>dedicated</tt> tenancy runs
--   on isolated, single-tenant hardware and can only be launched into a
--   VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:placementTenancy:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the launch configuration.
[$sel:launchConfigurationARN:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
[$sel:keyName:LaunchConfiguration'] :: LaunchConfiguration -> Maybe Text

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:instanceMonitoring:LaunchConfiguration'] :: LaunchConfiguration -> Maybe InstanceMonitoring

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
[$sel:metadataOptions:LaunchConfiguration'] :: LaunchConfiguration -> Maybe InstanceMetadataOptions

-- | The name of the launch configuration.
[$sel:launchConfigurationName:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The ID of the Amazon Machine Image (AMI) to use to launch your EC2
--   instances. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
[$sel:imageId:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The instance type for the instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
[$sel:instanceType:LaunchConfiguration'] :: LaunchConfiguration -> Text

-- | The creation date and time for the launch configuration.
[$sel:createdTime:LaunchConfiguration'] :: LaunchConfiguration -> ISO8601

-- | Create a value of <a>LaunchConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsOptimized:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ebsOptimized</a> - Specifies whether the launch
--   configuration is optimized for EBS I/O (<tt>true</tt>) or not
--   (<tt>false</tt>). For more information, see <a>Amazon EBS-Optimized
--   Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:userData:LaunchConfiguration'</a>,
--   <a>launchConfiguration_userData</a> - The user data to make available
--   to the launched EC2 instances. For more information, see <a>Instance
--   metadata and user data</a> (Linux) and <a>Instance metadata and user
--   data</a> (Windows). If you are using a command line tool,
--   base64-encoding is performed for you, and you can load the text from a
--   file. Otherwise, you must provide base64-encoded text. User data is
--   limited to 16 KB.
--   
--   <a>$sel:ramdiskId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ramdiskId</a> - The ID of the RAM disk
--   associated with the AMI.
--   
--   <a>$sel:classicLinkVPCSecurityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCSecurityGroups</a> - The IDs of
--   one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:spotPrice:LaunchConfiguration'</a>,
--   <a>launchConfiguration_spotPrice</a> - The maximum hourly price to be
--   paid for any Spot Instance launched to fulfill the request. Spot
--   Instances are launched when the price you specify exceeds the current
--   Spot price. For more information, see <a>Requesting Spot Instances</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:associatePublicIpAddress:LaunchConfiguration'</a>,
--   <a>launchConfiguration_associatePublicIpAddress</a> - For Auto Scaling
--   groups that are running in a VPC, specifies whether to assign a public
--   IP address to the group's instances. For more information, see
--   <a>Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <a>$sel:securityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_securityGroups</a> - A list that contains the
--   security groups to assign to the instances in the Auto Scaling group.
--   For more information, see <a>Security Groups for Your VPC</a> in the
--   <i>Amazon Virtual Private Cloud User Guide</i>.
--   
--   <a>$sel:iamInstanceProfile:LaunchConfiguration'</a>,
--   <a>launchConfiguration_iamInstanceProfile</a> - The name or the Amazon
--   Resource Name (ARN) of the instance profile associated with the IAM
--   role for the instance. The instance profile contains the IAM role. For
--   more information, see <a>IAM role for applications that run on Amazon
--   EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:classicLinkVPCId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCId</a> - The ID of a
--   ClassicLink-enabled VPC to link your EC2-Classic instances to. For
--   more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:blockDeviceMappings:LaunchConfiguration'</a>,
--   <a>launchConfiguration_blockDeviceMappings</a> - A block device
--   mapping, which specifies the block devices for the instance. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   <a>$sel:kernelId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_kernelId</a> - The ID of the kernel associated
--   with the AMI.
--   
--   <a>$sel:placementTenancy:LaunchConfiguration'</a>,
--   <a>launchConfiguration_placementTenancy</a> - The tenancy of the
--   instance, either <tt>default</tt> or <tt>dedicated</tt>. An instance
--   with <tt>dedicated</tt> tenancy runs on isolated, single-tenant
--   hardware and can only be launched into a VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationARN:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationARN</a> - The Amazon
--   Resource Name (ARN) of the launch configuration.
--   
--   <a>$sel:keyName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_keyName</a> - The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:instanceMonitoring:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceMonitoring</a> - Controls whether
--   instances in this group are launched with detailed (<tt>true</tt>) or
--   basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:metadataOptions:LaunchConfiguration'</a>,
--   <a>launchConfiguration_metadataOptions</a> - The metadata options for
--   the instances. For more information, see <a>Configuring the Instance
--   Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationName</a> - The name of the
--   launch configuration.
--   
--   <a>$sel:imageId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_imageId</a> - The ID of the Amazon Machine
--   Image (AMI) to use to launch your EC2 instances. For more information,
--   see <a>Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:instanceType:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceType</a> - The instance type for the
--   instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:createdTime:LaunchConfiguration'</a>,
--   <a>launchConfiguration_createdTime</a> - The creation date and time
--   for the launch configuration.
newLaunchConfiguration :: Text -> Text -> Text -> UTCTime -> LaunchConfiguration

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). For more information, see
--   <a>Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
launchConfiguration_ebsOptimized :: Lens' LaunchConfiguration (Maybe Bool)

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
launchConfiguration_userData :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of the RAM disk associated with the AMI.
launchConfiguration_ramdiskId :: Lens' LaunchConfiguration (Maybe Text)

-- | The IDs of one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_classicLinkVPCSecurityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
launchConfiguration_spotPrice :: Lens' LaunchConfiguration (Maybe Text)

-- | For Auto Scaling groups that are running in a VPC, specifies whether
--   to assign a public IP address to the group's instances. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_associatePublicIpAddress :: Lens' LaunchConfiguration (Maybe Bool)

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group. For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
launchConfiguration_securityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role. For more information, see <a>IAM role for
--   applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_iamInstanceProfile :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchConfiguration_classicLinkVPCId :: Lens' LaunchConfiguration (Maybe Text)

-- | A block device mapping, which specifies the block devices for the
--   instance. For more information, see <a>Block Device Mapping</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_blockDeviceMappings :: Lens' LaunchConfiguration (Maybe [BlockDeviceMapping])

-- | The ID of the kernel associated with the AMI.
launchConfiguration_kernelId :: Lens' LaunchConfiguration (Maybe Text)

-- | The tenancy of the instance, either <tt>default</tt> or
--   <tt>dedicated</tt>. An instance with <tt>dedicated</tt> tenancy runs
--   on isolated, single-tenant hardware and can only be launched into a
--   VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_placementTenancy :: Lens' LaunchConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the launch configuration.
launchConfiguration_launchConfigurationARN :: Lens' LaunchConfiguration (Maybe Text)

-- | The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
launchConfiguration_keyName :: Lens' LaunchConfiguration (Maybe Text)

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_instanceMonitoring :: Lens' LaunchConfiguration (Maybe InstanceMonitoring)

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_metadataOptions :: Lens' LaunchConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the launch configuration.
launchConfiguration_launchConfigurationName :: Lens' LaunchConfiguration Text

-- | The ID of the Amazon Machine Image (AMI) to use to launch your EC2
--   instances. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_imageId :: Lens' LaunchConfiguration Text

-- | The instance type for the instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
launchConfiguration_instanceType :: Lens' LaunchConfiguration Text

-- | The creation date and time for the launch configuration.
launchConfiguration_createdTime :: Lens' LaunchConfiguration UTCTime

-- | Describes a launch template and overrides.
--   
--   You specify these properties as part of a mixed instances policy.
--   
--   When you update the launch template or overrides in the
--   UpdateAutoScalingGroup API call, existing Amazon EC2 instances
--   continue to run. When scale out occurs, Amazon EC2 Auto Scaling
--   launches instances to match the new settings. When scale in occurs,
--   Amazon EC2 Auto Scaling terminates instances according to the group's
--   termination policies.
--   
--   <i>See:</i> <a>newLaunchTemplate</a> smart constructor.
data LaunchTemplate
LaunchTemplate' :: Maybe LaunchTemplateSpecification -> Maybe [LaunchTemplateOverrides] -> LaunchTemplate

-- | The launch template to use.
[$sel:launchTemplateSpecification:LaunchTemplate'] :: LaunchTemplate -> Maybe LaunchTemplateSpecification

-- | Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
[$sel:overrides:LaunchTemplate'] :: LaunchTemplate -> Maybe [LaunchTemplateOverrides]

-- | Create a value of <a>LaunchTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplate'</a>,
--   <a>launchTemplate_launchTemplateSpecification</a> - The launch
--   template to use.
--   
--   <a>$sel:overrides:LaunchTemplate'</a>, <a>launchTemplate_overrides</a>
--   - Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
newLaunchTemplate :: LaunchTemplate

-- | The launch template to use.
launchTemplate_launchTemplateSpecification :: Lens' LaunchTemplate (Maybe LaunchTemplateSpecification)

-- | Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
launchTemplate_overrides :: Lens' LaunchTemplate (Maybe [LaunchTemplateOverrides])

-- | Describes an override for a launch template. The maximum number of
--   instance types that can be associated with an Auto Scaling group is
--   40. The maximum number of distinct launch templates you can define for
--   an Auto Scaling group is 20. For more information about configuring
--   overrides, see <a>Configuring overrides</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateOverrides</a> smart constructor.
data LaunchTemplateOverrides
LaunchTemplateOverrides' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> LaunchTemplateOverrides

-- | The instance type, such as <tt>m3.xlarge</tt>. You must use an
--   instance type that is supported in your requested Region and
--   Availability Zones. For more information, see <a>Instance types</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
[$sel:instanceType:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe Text

-- | Provides the launch template to be used when launching the instance
--   type. For example, some instance types might require a launch template
--   with a different AMI. If not provided, Amazon EC2 Auto Scaling uses
--   the launch template that's defined for your mixed instances policy.
--   For more information, see <a>Specifying a different launch template
--   for an instance type</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:launchTemplateSpecification:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe LaunchTemplateSpecification

-- | The number of capacity units provided by the specified instance type
--   in terms of virtual CPUs, memory, storage, throughput, or other
--   relative performance characteristic. When a Spot or On-Demand Instance
--   is provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
[$sel:weightedCapacity:LaunchTemplateOverrides'] :: LaunchTemplateOverrides -> Maybe Text

-- | Create a value of <a>LaunchTemplateOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_instanceType</a> - The instance type, such
--   as <tt>m3.xlarge</tt>. You must use an instance type that is supported
--   in your requested Region and Availability Zones. For more information,
--   see <a>Instance types</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_launchTemplateSpecification</a> - Provides
--   the launch template to be used when launching the instance type. For
--   example, some instance types might require a launch template with a
--   different AMI. If not provided, Amazon EC2 Auto Scaling uses the
--   launch template that's defined for your mixed instances policy. For
--   more information, see <a>Specifying a different launch template for an
--   instance type</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:weightedCapacity:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_weightedCapacity</a> - The number of
--   capacity units provided by the specified instance type in terms of
--   virtual CPUs, memory, storage, throughput, or other relative
--   performance characteristic. When a Spot or On-Demand Instance is
--   provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
newLaunchTemplateOverrides :: LaunchTemplateOverrides

-- | The instance type, such as <tt>m3.xlarge</tt>. You must use an
--   instance type that is supported in your requested Region and
--   Availability Zones. For more information, see <a>Instance types</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
launchTemplateOverrides_instanceType :: Lens' LaunchTemplateOverrides (Maybe Text)

-- | Provides the launch template to be used when launching the instance
--   type. For example, some instance types might require a launch template
--   with a different AMI. If not provided, Amazon EC2 Auto Scaling uses
--   the launch template that's defined for your mixed instances policy.
--   For more information, see <a>Specifying a different launch template
--   for an instance type</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchTemplateOverrides_launchTemplateSpecification :: Lens' LaunchTemplateOverrides (Maybe LaunchTemplateSpecification)

-- | The number of capacity units provided by the specified instance type
--   in terms of virtual CPUs, memory, storage, throughput, or other
--   relative performance characteristic. When a Spot or On-Demand Instance
--   is provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
launchTemplateOverrides_weightedCapacity :: Lens' LaunchTemplateOverrides (Maybe Text)

-- | Describes the launch template and the version of the launch template
--   that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For
--   more information about launch templates, see <a>Launch templates</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The ID of the launch template. To get the template ID, use the Amazon
--   EC2 <a>DescribeLaunchTemplates</a> API operation. New launch templates
--   can be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version number, <tt>$Latest</tt>, or <tt>$Default</tt>. To get the
--   version number, use the Amazon EC2
--   <a>DescribeLaunchTemplateVersions</a> API operation. New launch
--   template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The name of the launch template. To get the template name, use the
--   Amazon EC2 <a>DescribeLaunchTemplates</a> API operation. New launch
--   templates can be created using the Amazon EC2
--   <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template. To get the template ID, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number,
--   <tt>$Latest</tt>, or <tt>$Default</tt>. To get the version number, use
--   the Amazon EC2 <a>DescribeLaunchTemplateVersions</a> API operation.
--   New launch template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template. To get the template name, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The ID of the launch template. To get the template ID, use the Amazon
--   EC2 <a>DescribeLaunchTemplates</a> API operation. New launch templates
--   can be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number, <tt>$Latest</tt>, or <tt>$Default</tt>. To get the
--   version number, use the Amazon EC2
--   <a>DescribeLaunchTemplateVersions</a> API operation. New launch
--   template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The name of the launch template. To get the template name, use the
--   Amazon EC2 <a>DescribeLaunchTemplates</a> API operation. New launch
--   templates can be created using the Amazon EC2
--   <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that
--   you want to perform an action whenever it launches instances or
--   terminates instances.
--   
--   <i>See:</i> <a>newLifecycleHook</a> smart constructor.
data LifecycleHook
LifecycleHook' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target.
[$sel:roleARN:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The state of the EC2 instance to which to attach the lifecycle hook.
--   The following are possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
[$sel:lifecycleTransition:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
[$sel:notificationTargetARN:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. If the lifecycle hook times out, Amazon EC2 Auto
--   Scaling performs the action that you specified in the
--   <tt>DefaultResult</tt> parameter.
[$sel:heartbeatTimeout:LifecycleHook'] :: LifecycleHook -> Maybe Int

-- | The maximum time, in seconds, that an instance can remain in a
--   <tt>Pending:Wait</tt> or <tt>Terminating:Wait</tt> state. The maximum
--   is 172800 seconds (48 hours) or 100 times <tt>HeartbeatTimeout</tt>,
--   whichever is smaller.
[$sel:globalTimeout:LifecycleHook'] :: LifecycleHook -> Maybe Int

-- | Additional information that is included any time Amazon EC2 Auto
--   Scaling sends a message to the notification target.
[$sel:notificationMetadata:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   possible values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
[$sel:defaultResult:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | The name of the Auto Scaling group for the lifecycle hook.
[$sel:autoScalingGroupName:LifecycleHook'] :: LifecycleHook -> Maybe Text

-- | Create a value of <a>LifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHook'</a>, <a>lifecycleHook_roleARN</a> - The
--   ARN of the IAM role that allows the Auto Scaling group to publish to
--   the specified notification target.
--   
--   <a>$sel:lifecycleTransition:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleTransition</a> - The state of the EC2
--   instance to which to attach the lifecycle hook. The following are
--   possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   <a>$sel:notificationTargetARN:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationTargetARN</a> - The ARN of the target
--   that Amazon EC2 Auto Scaling sends notifications to when an instance
--   is in the transition state for the lifecycle hook. The notification
--   target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_heartbeatTimeout</a> - The maximum time, in seconds,
--   that can elapse before the lifecycle hook times out. If the lifecycle
--   hook times out, Amazon EC2 Auto Scaling performs the action that you
--   specified in the <tt>DefaultResult</tt> parameter.
--   
--   <a>$sel:globalTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_globalTimeout</a> - The maximum time, in seconds,
--   that an instance can remain in a <tt>Pending:Wait</tt> or
--   <tt>Terminating:Wait</tt> state. The maximum is 172800 seconds (48
--   hours) or 100 times <tt>HeartbeatTimeout</tt>, whichever is smaller.
--   
--   <a>$sel:notificationMetadata:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationMetadata</a> - Additional information
--   that is included any time Amazon EC2 Auto Scaling sends a message to
--   the notification target.
--   
--   <a>$sel:lifecycleHookName:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleHookName</a> - The name of the lifecycle
--   hook.
--   
--   <a>$sel:defaultResult:LifecycleHook'</a>,
--   <a>lifecycleHook_defaultResult</a> - Defines the action the Auto
--   Scaling group should take when the lifecycle hook timeout elapses or
--   if an unexpected failure occurs. The possible values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
--   
--   <a>$sel:autoScalingGroupName:LifecycleHook'</a>,
--   <a>lifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group for the lifecycle hook.
newLifecycleHook :: LifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target.
lifecycleHook_roleARN :: Lens' LifecycleHook (Maybe Text)

-- | The state of the EC2 instance to which to attach the lifecycle hook.
--   The following are possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHook_lifecycleTransition :: Lens' LifecycleHook (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHook_notificationTargetARN :: Lens' LifecycleHook (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. If the lifecycle hook times out, Amazon EC2 Auto
--   Scaling performs the action that you specified in the
--   <tt>DefaultResult</tt> parameter.
lifecycleHook_heartbeatTimeout :: Lens' LifecycleHook (Maybe Int)

-- | The maximum time, in seconds, that an instance can remain in a
--   <tt>Pending:Wait</tt> or <tt>Terminating:Wait</tt> state. The maximum
--   is 172800 seconds (48 hours) or 100 times <tt>HeartbeatTimeout</tt>,
--   whichever is smaller.
lifecycleHook_globalTimeout :: Lens' LifecycleHook (Maybe Int)

-- | Additional information that is included any time Amazon EC2 Auto
--   Scaling sends a message to the notification target.
lifecycleHook_notificationMetadata :: Lens' LifecycleHook (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHook_lifecycleHookName :: Lens' LifecycleHook (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   possible values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
lifecycleHook_defaultResult :: Lens' LifecycleHook (Maybe Text)

-- | The name of the Auto Scaling group for the lifecycle hook.
lifecycleHook_autoScalingGroupName :: Lens' LifecycleHook (Maybe Text)

-- | Describes information used to specify a lifecycle hook for an Auto
--   Scaling group.
--   
--   A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on
--   an instance when the instance launches (before it is put into service)
--   or as the instance terminates (before it is fully terminated).
--   
--   This step is a part of the procedure for creating a lifecycle hook for
--   an Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>__Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.__</li>
--   <li>If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state.</li>
--   <li>If you finish before the timeout period ends, complete the
--   lifecycle action.</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLifecycleHookSpecification</a> smart constructor.
data LifecycleHookSpecification
LifecycleHookSpecification' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleHookSpecification

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
[$sel:roleARN:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
[$sel:notificationTargetARN:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
[$sel:heartbeatTimeout:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Int

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
[$sel:notificationMetadata:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   valid values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default
--   value is <tt>ABANDON</tt>.
[$sel:defaultResult:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Text

-- | The state of the EC2 instance to which you want to attach the
--   lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
[$sel:lifecycleTransition:LifecycleHookSpecification'] :: LifecycleHookSpecification -> Text

-- | Create a value of <a>LifecycleHookSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_roleARN</a> - The ARN of the IAM role
--   that allows the Auto Scaling group to publish to the specified
--   notification target, for example, an Amazon SNS topic or an Amazon SQS
--   queue.
--   
--   <a>$sel:notificationTargetARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationTargetARN</a> - The ARN of
--   the target that Amazon EC2 Auto Scaling sends notifications to when an
--   instance is in the transition state for the lifecycle hook. The
--   notification target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_heartbeatTimeout</a> - The maximum time,
--   in seconds, that can elapse before the lifecycle hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
--   
--   <a>$sel:notificationMetadata:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationMetadata</a> - Additional
--   information that you want to include any time Amazon EC2 Auto Scaling
--   sends a message to the notification target.
--   
--   <a>$sel:defaultResult:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_defaultResult</a> - Defines the action
--   the Auto Scaling group should take when the lifecycle hook timeout
--   elapses or if an unexpected failure occurs. The valid values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default value is
--   <tt>ABANDON</tt>.
--   
--   <a>$sel:lifecycleHookName:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:lifecycleTransition:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleTransition</a> - The state of
--   the EC2 instance to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
newLifecycleHookSpecification :: Text -> Text -> LifecycleHookSpecification

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
lifecycleHookSpecification_roleARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHookSpecification_notificationTargetARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
lifecycleHookSpecification_heartbeatTimeout :: Lens' LifecycleHookSpecification (Maybe Int)

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
lifecycleHookSpecification_notificationMetadata :: Lens' LifecycleHookSpecification (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   valid values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default
--   value is <tt>ABANDON</tt>.
lifecycleHookSpecification_defaultResult :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHookSpecification_lifecycleHookName :: Lens' LifecycleHookSpecification Text

-- | The state of the EC2 instance to which you want to attach the
--   lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHookSpecification_lifecycleTransition :: Lens' LifecycleHookSpecification Text

-- | Describes the state of a Classic Load Balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe Text -> LoadBalancerState

-- | One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
[$sel:state:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | The name of the load balancer.
[$sel:loadBalancerName:LoadBalancerState'] :: LoadBalancerState -> Maybe Text

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerState'</a>, <a>loadBalancerState_state</a> -
--   One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerName:LoadBalancerState'</a>,
--   <a>loadBalancerState_loadBalancerName</a> - The name of the load
--   balancer.
newLoadBalancerState :: LoadBalancerState

-- | One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
loadBalancerState_state :: Lens' LoadBalancerState (Maybe Text)

-- | The name of the load balancer.
loadBalancerState_loadBalancerName :: Lens' LoadBalancerState (Maybe Text)

-- | Describes the state of a target group.
--   
--   <i>See:</i> <a>newLoadBalancerTargetGroupState</a> smart constructor.
data LoadBalancerTargetGroupState
LoadBalancerTargetGroupState' :: Maybe Text -> Maybe Text -> LoadBalancerTargetGroupState

-- | The state of the target group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
[$sel:state:LoadBalancerTargetGroupState'] :: LoadBalancerTargetGroupState -> Maybe Text

-- | The Amazon Resource Name (ARN) of the target group.
[$sel:loadBalancerTargetGroupARN:LoadBalancerTargetGroupState'] :: LoadBalancerTargetGroupState -> Maybe Text

-- | Create a value of <a>LoadBalancerTargetGroupState</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_state</a> - The state of the target
--   group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerTargetGroupARN:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_loadBalancerTargetGroupARN</a> - The
--   Amazon Resource Name (ARN) of the target group.
newLoadBalancerTargetGroupState :: LoadBalancerTargetGroupState

-- | The state of the target group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
loadBalancerTargetGroupState_state :: Lens' LoadBalancerTargetGroupState (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
loadBalancerTargetGroupState_loadBalancerTargetGroupARN :: Lens' LoadBalancerTargetGroupState (Maybe Text)

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the load forecast
--   for a predictive scaling policy. This structure includes the data
--   points for that load forecast, along with the timestamps of those data
--   points and the metric specification.
--   
--   <i>See:</i> <a>newLoadForecast</a> smart constructor.
data LoadForecast
LoadForecast' :: [ISO8601] -> [Double] -> PredictiveScalingMetricSpecification -> LoadForecast

-- | The time stamps for the data points, in UTC format.
[$sel:timestamps:LoadForecast'] :: LoadForecast -> [ISO8601]

-- | The values of the data points.
[$sel:values:LoadForecast'] :: LoadForecast -> [Double]

-- | The metric specification for the load forecast.
[$sel:metricSpecification:LoadForecast'] :: LoadForecast -> PredictiveScalingMetricSpecification

-- | Create a value of <a>LoadForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:LoadForecast'</a>, <a>loadForecast_timestamps</a> -
--   The time stamps for the data points, in UTC format.
--   
--   <a>$sel:values:LoadForecast'</a>, <a>loadForecast_values</a> - The
--   values of the data points.
--   
--   <a>$sel:metricSpecification:LoadForecast'</a>,
--   <a>loadForecast_metricSpecification</a> - The metric specification for
--   the load forecast.
newLoadForecast :: PredictiveScalingMetricSpecification -> LoadForecast

-- | The time stamps for the data points, in UTC format.
loadForecast_timestamps :: Lens' LoadForecast [UTCTime]

-- | The values of the data points.
loadForecast_values :: Lens' LoadForecast [Double]

-- | The metric specification for the load forecast.
loadForecast_metricSpecification :: Lens' LoadForecast PredictiveScalingMetricSpecification

-- | Describes a metric.
--   
--   <i>See:</i> <a>newMetricCollectionType</a> smart constructor.
data MetricCollectionType
MetricCollectionType' :: Maybe Text -> MetricCollectionType

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
[$sel:metric:MetricCollectionType'] :: MetricCollectionType -> Maybe Text

-- | Create a value of <a>MetricCollectionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metric:MetricCollectionType'</a>,
--   <a>metricCollectionType_metric</a> - One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newMetricCollectionType :: MetricCollectionType

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
metricCollectionType_metric :: Lens' MetricCollectionType (Maybe Text)

-- | Describes the dimension of a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | Describes a granularity of a metric.
--   
--   <i>See:</i> <a>newMetricGranularityType</a> smart constructor.
data MetricGranularityType
MetricGranularityType' :: Maybe Text -> MetricGranularityType

-- | The granularity. The only valid value is <tt>1Minute</tt>.
[$sel:granularity:MetricGranularityType'] :: MetricGranularityType -> Maybe Text

-- | Create a value of <a>MetricGranularityType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:MetricGranularityType'</a>,
--   <a>metricGranularityType_granularity</a> - The granularity. The only
--   valid value is <tt>1Minute</tt>.
newMetricGranularityType :: MetricGranularityType

-- | The granularity. The only valid value is <tt>1Minute</tt>.
metricGranularityType_granularity :: Lens' MetricGranularityType (Maybe Text)

-- | Describes a mixed instances policy. A mixed instances policy contains
--   the instance types Amazon EC2 Auto Scaling can launch, and other
--   information Amazon EC2 Auto Scaling can use to launch instances to
--   help you optimize your costs. For more information, see <a>Auto
--   Scaling groups with multiple instance types and purchase options</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newMixedInstancesPolicy</a> smart constructor.
data MixedInstancesPolicy
MixedInstancesPolicy' :: Maybe InstancesDistribution -> Maybe LaunchTemplate -> MixedInstancesPolicy

-- | Specifies the instances distribution. If not provided, the value for
--   each property in <tt>InstancesDistribution</tt> uses a default value.
[$sel:instancesDistribution:MixedInstancesPolicy'] :: MixedInstancesPolicy -> Maybe InstancesDistribution

-- | Specifies the launch template to use and the instance types
--   (overrides) that are used to provision EC2 instances to fulfill
--   On-Demand and Spot capacities. Required when creating a mixed
--   instances policy.
[$sel:launchTemplate:MixedInstancesPolicy'] :: MixedInstancesPolicy -> Maybe LaunchTemplate

-- | Create a value of <a>MixedInstancesPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instancesDistribution:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_instancesDistribution</a> - Specifies the
--   instances distribution. If not provided, the value for each property
--   in <tt>InstancesDistribution</tt> uses a default value.
--   
--   <a>$sel:launchTemplate:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_launchTemplate</a> - Specifies the launch
--   template to use and the instance types (overrides) that are used to
--   provision EC2 instances to fulfill On-Demand and Spot capacities.
--   Required when creating a mixed instances policy.
newMixedInstancesPolicy :: MixedInstancesPolicy

-- | Specifies the instances distribution. If not provided, the value for
--   each property in <tt>InstancesDistribution</tt> uses a default value.
mixedInstancesPolicy_instancesDistribution :: Lens' MixedInstancesPolicy (Maybe InstancesDistribution)

-- | Specifies the launch template to use and the instance types
--   (overrides) that are used to provision EC2 instances to fulfill
--   On-Demand and Spot capacities. Required when creating a mixed
--   instances policy.
mixedInstancesPolicy_launchTemplate :: Lens' MixedInstancesPolicy (Maybe LaunchTemplate)

-- | Describes a notification.
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> NotificationConfiguration

-- | One of the following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
[$sel:notificationType:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
[$sel:topicARN:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationType:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_notificationType</a> - One of the
--   following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
--   
--   <a>$sel:topicARN:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicARN</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
--   
--   <a>$sel:autoScalingGroupName:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newNotificationConfiguration :: NotificationConfiguration

-- | One of the following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
notificationConfiguration_notificationType :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
notificationConfiguration_topicARN :: Lens' NotificationConfiguration (Maybe Text)

-- | The name of the Auto Scaling group.
notificationConfiguration_autoScalingGroupName :: Lens' NotificationConfiguration (Maybe Text)

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> Maybe Text

-- | The metric type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
[$sel:predefinedMetricType:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> MetricType

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - A label that
--   uniquely identifies a specific Application Load Balancer target group
--   from which to determine the average request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType

-- | Represents a predictive scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredictiveScalingConfiguration</a> smart
--   constructor.
data PredictiveScalingConfiguration
PredictiveScalingConfiguration' :: Maybe PredictiveScalingMaxCapacityBreachBehavior -> Maybe PredictiveScalingMode -> Maybe Natural -> Maybe Natural -> [PredictiveScalingMetricSpecification] -> PredictiveScalingConfiguration

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
[$sel:maxCapacityBreachBehavior:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe PredictiveScalingMaxCapacityBreachBehavior

-- | The predictive scaling mode. Defaults to <tt>ForecastOnly</tt> if not
--   specified.
[$sel:mode:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe PredictiveScalingMode

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
[$sel:maxCapacityBuffer:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe Natural

-- | The amount of time, in seconds, by which the instance launch time can
--   be advanced. For example, the forecast says to add capacity at 10:00
--   AM, and you choose to pre-launch instances by 5 minutes. In that case,
--   the instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
[$sel:schedulingBufferTime:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> Maybe Natural

-- | This structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
[$sel:metricSpecifications:PredictiveScalingConfiguration'] :: PredictiveScalingConfiguration -> [PredictiveScalingMetricSpecification]

-- | Create a value of <a>PredictiveScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacityBreachBehavior:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBreachBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
--   
--   <a>$sel:mode:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_mode</a> - The predictive scaling
--   mode. Defaults to <tt>ForecastOnly</tt> if not specified.
--   
--   <a>$sel:maxCapacityBuffer:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBuffer</a> - The size of
--   the capacity buffer to use when the forecast capacity is close to or
--   exceeds the maximum capacity. The value is specified as a percentage
--   relative to the forecast capacity. For example, if the buffer is 10,
--   this means a 10 percent buffer, such that if the forecast capacity is
--   50, and the maximum capacity is 40, then the effective maximum
--   capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
--   
--   <a>$sel:schedulingBufferTime:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_schedulingBufferTime</a> - The
--   amount of time, in seconds, by which the instance launch time can be
--   advanced. For example, the forecast says to add capacity at 10:00 AM,
--   and you choose to pre-launch instances by 5 minutes. In that case, the
--   instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
--   
--   <a>$sel:metricSpecifications:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_metricSpecifications</a> - This
--   structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
newPredictiveScalingConfiguration :: PredictiveScalingConfiguration

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
predictiveScalingConfiguration_maxCapacityBreachBehavior :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMaxCapacityBreachBehavior)

-- | The predictive scaling mode. Defaults to <tt>ForecastOnly</tt> if not
--   specified.
predictiveScalingConfiguration_mode :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMode)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
predictiveScalingConfiguration_maxCapacityBuffer :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | The amount of time, in seconds, by which the instance launch time can
--   be advanced. For example, the forecast says to add capacity at 10:00
--   AM, and you choose to pre-launch instances by 5 minutes. In that case,
--   the instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
predictiveScalingConfiguration_schedulingBufferTime :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | This structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
predictiveScalingConfiguration_metricSpecifications :: Lens' PredictiveScalingConfiguration [PredictiveScalingMetricSpecification]

-- | This structure specifies the metrics and target utilization settings
--   for a predictive scaling policy.
--   
--   You must specify either a metric pair, or a load metric and a scaling
--   metric individually. Specifying a metric pair instead of individual
--   metrics provides a simpler way to configure metrics for a scaling
--   policy. You choose the metric pair, and the policy automatically knows
--   the correct sum and average statistics to use for the load metric and
--   the scaling metric.
--   
--   Example
--   
--   <ul>
--   <li>You create a predictive scaling policy and specify
--   <tt>ALBRequestCount</tt> as the value for the metric pair and
--   <tt>1000.0</tt> as the target value. For this type of metric, you must
--   provide the metric dimension for the corresponding target group, so
--   you also provide a resource label for the Application Load Balancer
--   target group that is attached to your Auto Scaling group.</li>
--   <li>The number of requests the target group receives per minute
--   provides the load metric, and the request count averaged between the
--   members of the target group provides the scaling metric. In
--   CloudWatch, this refers to the <tt>RequestCount</tt> and
--   <tt>RequestCountPerTarget</tt> metrics, respectively.</li>
--   <li>For optimal use of predictive scaling, you adhere to the best
--   practice of using a dynamic scaling policy to automatically scale
--   between the minimum capacity and maximum capacity in response to
--   real-time changes in resource utilization.</li>
--   <li>Amazon EC2 Auto Scaling consumes data points for the load metric
--   over the last 14 days and creates an hourly load forecast for
--   predictive scaling. (A minimum of 24 hours of data is required.)</li>
--   <li>After creating the load forecast, Amazon EC2 Auto Scaling
--   determines when to reduce or increase the capacity of your Auto
--   Scaling group in each hour of the forecast period so that the average
--   number of requests received by each instance is as close to 1000
--   requests per minute as possible at all times.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPredictiveScalingMetricSpecification</a> smart
--   constructor.
data PredictiveScalingMetricSpecification
PredictiveScalingMetricSpecification' :: Maybe PredictiveScalingPredefinedLoadMetric -> Maybe PredictiveScalingPredefinedScalingMetric -> Maybe PredictiveScalingPredefinedMetricPair -> Double -> PredictiveScalingMetricSpecification

-- | The load metric specification.
[$sel:predefinedLoadMetricSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedLoadMetric

-- | The scaling metric specification.
[$sel:predefinedScalingMetricSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedScalingMetric

-- | The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
[$sel:predefinedMetricPairSpecification:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Maybe PredictiveScalingPredefinedMetricPair

-- | Specifies the target utilization.
[$sel:targetValue:PredictiveScalingMetricSpecification'] :: PredictiveScalingMetricSpecification -> Double

-- | Create a value of <a>PredictiveScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:predefinedLoadMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedLoadMetricSpecification</a>
--   - The load metric specification.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedScalingMetricSpecification</a>
--   - The scaling metric specification.
--   
--   
--   <a>$sel:predefinedMetricPairSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedMetricPairSpecification</a>
--   - The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
--   
--   <a>$sel:targetValue:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_targetValue</a> - Specifies
--   the target utilization.
newPredictiveScalingMetricSpecification :: Double -> PredictiveScalingMetricSpecification

-- | The load metric specification.
predictiveScalingMetricSpecification_predefinedLoadMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedLoadMetric)

-- | The scaling metric specification.
predictiveScalingMetricSpecification_predefinedScalingMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedScalingMetric)

-- | The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
predictiveScalingMetricSpecification_predefinedMetricPairSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedMetricPair)

-- | Specifies the target utilization.
predictiveScalingMetricSpecification_targetValue :: Lens' PredictiveScalingMetricSpecification Double

-- | Describes a load metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedLoadMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedLoadMetric
PredictiveScalingPredefinedLoadMetric' :: Maybe Text -> PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the request count served by your
--   Auto Scaling group. You can't specify a resource label unless the
--   target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedLoadMetric'] :: PredictiveScalingPredefinedLoadMetric -> Maybe Text

-- | The metric type.
[$sel:predefinedMetricType:PredictiveScalingPredefinedLoadMetric'] :: PredictiveScalingPredefinedLoadMetric -> PredefinedLoadMetricType

-- | Create a value of <a>PredictiveScalingPredefinedLoadMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedLoadMetric :: PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the request count served by your
--   Auto Scaling group. You can't specify a resource label unless the
--   target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedLoadMetric_resourceLabel :: Lens' PredictiveScalingPredefinedLoadMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedLoadMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedLoadMetric PredefinedLoadMetricType

-- | Represents a metric pair for a predictive scaling policy.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedMetricPair</a> smart
--   constructor.
data PredictiveScalingPredefinedMetricPair
PredictiveScalingPredefinedMetricPair' :: Maybe Text -> PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the total and average request
--   count served by your Auto Scaling group. You can't specify a resource
--   label unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedMetricPair'] :: PredictiveScalingPredefinedMetricPair -> Maybe Text

-- | Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
[$sel:predefinedMetricType:PredictiveScalingPredefinedMetricPair'] :: PredictiveScalingPredefinedMetricPair -> PredefinedMetricPairType

-- | Create a value of <a>PredictiveScalingPredefinedMetricPair</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the total and average request count
--   served by your Auto Scaling group. You can't specify a resource label
--   unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_predefinedMetricType</a> -
--   Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
newPredictiveScalingPredefinedMetricPair :: PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the total and average request
--   count served by your Auto Scaling group. You can't specify a resource
--   label unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedMetricPair_resourceLabel :: Lens' PredictiveScalingPredefinedMetricPair (Maybe Text)

-- | Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
predictiveScalingPredefinedMetricPair_predefinedMetricType :: Lens' PredictiveScalingPredefinedMetricPair PredefinedMetricPairType

-- | Describes a scaling metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedScalingMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedScalingMetric
PredictiveScalingPredefinedScalingMetric' :: Maybe Text -> PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredictiveScalingPredefinedScalingMetric'] :: PredictiveScalingPredefinedScalingMetric -> Maybe Text

-- | The metric type.
[$sel:predefinedMetricType:PredictiveScalingPredefinedScalingMetric'] :: PredictiveScalingPredefinedScalingMetric -> PredefinedScalingMetricType

-- | Create a value of <a>PredictiveScalingPredefinedScalingMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_resourceLabel</a> - A
--   label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedScalingMetric :: PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedScalingMetric_resourceLabel :: Lens' PredictiveScalingPredefinedScalingMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedScalingMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedScalingMetric PredefinedScalingMetricType

-- | Describes a process type.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newProcessType</a> smart constructor.
data ProcessType
ProcessType' :: Text -> ProcessType

-- | One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
[$sel:processName:ProcessType'] :: ProcessType -> Text

-- | Create a value of <a>ProcessType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:ProcessType'</a>, <a>processType_processName</a> -
--   One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
newProcessType :: Text -> ProcessType

-- | One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
processType_processName :: Lens' ProcessType Text

-- | Describes the preferences for an instance refresh.
--   
--   <i>See:</i> <a>newRefreshPreferences</a> smart constructor.
data RefreshPreferences
RefreshPreferences' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe [Natural] -> RefreshPreferences

-- | The amount of time, in seconds, to wait after a checkpoint before
--   continuing. This property is optional, but if you specify a value for
--   it, you must also specify a value for <tt>CheckpointPercentages</tt>.
--   If you specify a value for <tt>CheckpointPercentages</tt> and not for
--   <tt>CheckpointDelay</tt>, the <tt>CheckpointDelay</tt> defaults to
--   <tt>3600</tt> (1 hour).
[$sel:checkpointDelay:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | The amount of capacity in the Auto Scaling group that must remain
--   healthy during an instance refresh to allow the operation to continue.
--   The value is expressed as a percentage of the desired capacity of the
--   Auto Scaling group (rounded up to the nearest integer). The default is
--   <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
[$sel:minHealthyPercentage:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | The number of seconds until a newly launched instance is configured
--   and ready to use. During this time, Amazon EC2 Auto Scaling does not
--   immediately move on to the next replacement. The default is to use the
--   value for the health check grace period defined for the group.
[$sel:instanceWarmup:RefreshPreferences'] :: RefreshPreferences -> Maybe Natural

-- | A boolean value that indicates whether skip matching is enabled. If
--   true, then Amazon EC2 Auto Scaling skips replacing instances that
--   match the desired configuration. If no desired configuration is
--   specified, then it skips replacing instances that have the same
--   configuration that is already set on the group. The default is
--   <tt>false</tt>.
[$sel:skipMatching:RefreshPreferences'] :: RefreshPreferences -> Maybe Bool

-- | Threshold values for each checkpoint in ascending order. Each number
--   must be unique. To replace all instances in the Auto Scaling group,
--   the last number in the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:checkpointPercentages:RefreshPreferences'] :: RefreshPreferences -> Maybe [Natural]

-- | Create a value of <a>RefreshPreferences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkpointDelay:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointDelay</a> - The amount of time, in
--   seconds, to wait after a checkpoint before continuing. This property
--   is optional, but if you specify a value for it, you must also specify
--   a value for <tt>CheckpointPercentages</tt>. If you specify a value for
--   <tt>CheckpointPercentages</tt> and not for <tt>CheckpointDelay</tt>,
--   the <tt>CheckpointDelay</tt> defaults to <tt>3600</tt> (1 hour).
--   
--   <a>$sel:minHealthyPercentage:RefreshPreferences'</a>,
--   <a>refreshPreferences_minHealthyPercentage</a> - The amount of
--   capacity in the Auto Scaling group that must remain healthy during an
--   instance refresh to allow the operation to continue. The value is
--   expressed as a percentage of the desired capacity of the Auto Scaling
--   group (rounded up to the nearest integer). The default is <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
--   
--   <a>$sel:instanceWarmup:RefreshPreferences'</a>,
--   <a>refreshPreferences_instanceWarmup</a> - The number of seconds until
--   a newly launched instance is configured and ready to use. During this
--   time, Amazon EC2 Auto Scaling does not immediately move on to the next
--   replacement. The default is to use the value for the health check
--   grace period defined for the group.
--   
--   <a>$sel:skipMatching:RefreshPreferences'</a>,
--   <a>refreshPreferences_skipMatching</a> - A boolean value that
--   indicates whether skip matching is enabled. If true, then Amazon EC2
--   Auto Scaling skips replacing instances that match the desired
--   configuration. If no desired configuration is specified, then it skips
--   replacing instances that have the same configuration that is already
--   set on the group. The default is <tt>false</tt>.
--   
--   <a>$sel:checkpointPercentages:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointPercentages</a> - Threshold values for
--   each checkpoint in ascending order. Each number must be unique. To
--   replace all instances in the Auto Scaling group, the last number in
--   the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
newRefreshPreferences :: RefreshPreferences

-- | The amount of time, in seconds, to wait after a checkpoint before
--   continuing. This property is optional, but if you specify a value for
--   it, you must also specify a value for <tt>CheckpointPercentages</tt>.
--   If you specify a value for <tt>CheckpointPercentages</tt> and not for
--   <tt>CheckpointDelay</tt>, the <tt>CheckpointDelay</tt> defaults to
--   <tt>3600</tt> (1 hour).
refreshPreferences_checkpointDelay :: Lens' RefreshPreferences (Maybe Natural)

-- | The amount of capacity in the Auto Scaling group that must remain
--   healthy during an instance refresh to allow the operation to continue.
--   The value is expressed as a percentage of the desired capacity of the
--   Auto Scaling group (rounded up to the nearest integer). The default is
--   <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
refreshPreferences_minHealthyPercentage :: Lens' RefreshPreferences (Maybe Natural)

-- | The number of seconds until a newly launched instance is configured
--   and ready to use. During this time, Amazon EC2 Auto Scaling does not
--   immediately move on to the next replacement. The default is to use the
--   value for the health check grace period defined for the group.
refreshPreferences_instanceWarmup :: Lens' RefreshPreferences (Maybe Natural)

-- | A boolean value that indicates whether skip matching is enabled. If
--   true, then Amazon EC2 Auto Scaling skips replacing instances that
--   match the desired configuration. If no desired configuration is
--   specified, then it skips replacing instances that have the same
--   configuration that is already set on the group. The default is
--   <tt>false</tt>.
refreshPreferences_skipMatching :: Lens' RefreshPreferences (Maybe Bool)

-- | Threshold values for each checkpoint in ascending order. Each number
--   must be unique. To replace all instances in the Auto Scaling group,
--   the last number in the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
refreshPreferences_checkpointPercentages :: Lens' RefreshPreferences (Maybe [Natural])

-- | Describes a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Text -> Maybe TargetTrackingConfiguration -> Maybe [StepAdjustment] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe [Alarm] -> Maybe Text -> Maybe PredictiveScalingConfiguration -> Maybe Text -> ScalingPolicy

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | A target tracking scaling policy.
[$sel:targetTrackingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
[$sel:stepAdjustments:ScalingPolicy'] :: ScalingPolicy -> Maybe [StepAdjustment]

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>.
[$sel:metricAggregationType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
[$sel:enabled:ScalingPolicy'] :: ScalingPolicy -> Maybe Bool

-- | The duration of the policy's cooldown period, in seconds.
[$sel:cooldown:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
[$sel:scalingAdjustment:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
[$sel:adjustmentType:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
[$sel:minAdjustmentStep:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics.
[$sel:estimatedInstanceWarmup:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>.
[$sel:minAdjustmentMagnitude:ScalingPolicy'] :: ScalingPolicy -> Maybe Int

-- | The CloudWatch alarms related to the policy.
[$sel:alarms:ScalingPolicy'] :: ScalingPolicy -> Maybe [Alarm]

-- | The Amazon Resource Name (ARN) of the policy.
[$sel:policyARN:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | A predictive scaling policy.
[$sel:predictiveScalingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe PredictiveScalingConfiguration

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScalingPolicy'] :: ScalingPolicy -> Maybe Text

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - A target tracking
--   scaling policy.
--   
--   <a>$sel:stepAdjustments:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepAdjustments</a> - A set of adjustments that
--   enable you to scale based on the size of the alarm breach.
--   
--   <a>$sel:metricAggregationType:ScalingPolicy'</a>,
--   <a>scalingPolicy_metricAggregationType</a> - The aggregation type for
--   the CloudWatch metrics. The valid values are <tt>Minimum</tt>,
--   <tt>Maximum</tt>, and <tt>Average</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:enabled:ScalingPolicy'</a>, <a>scalingPolicy_enabled</a> -
--   Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
--   
--   <a>$sel:cooldown:ScalingPolicy'</a>, <a>scalingPolicy_cooldown</a> -
--   The duration of the policy's cooldown period, in seconds.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - The amount by which to scale,
--   based on the specified adjustment type. A positive value adds to the
--   current capacity while a negative number removes from the current
--   capacity.
--   
--   <a>$sel:adjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_adjustmentType</a> - Specifies how the scaling
--   adjustment is interpreted (for example, an absolute number or a
--   percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:minAdjustmentStep:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentStep</a> - Available for backward
--   compatibility. Use <tt>MinAdjustmentMagnitude</tt> instead.
--   
--   <a>$sel:estimatedInstanceWarmup:ScalingPolicy'</a>,
--   <a>scalingPolicy_estimatedInstanceWarmup</a> - The estimated time, in
--   seconds, until a newly launched instance can contribute to the
--   CloudWatch metrics.
--   
--   <a>$sel:minAdjustmentMagnitude:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentMagnitude</a> - The minimum value to
--   scale by when the adjustment type is <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms related to the policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the policy.
--   
--   <a>$sel:predictiveScalingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_predictiveScalingConfiguration</a> - A predictive
--   scaling policy.
--   
--   <a>$sel:autoScalingGroupName:ScalingPolicy'</a>,
--   <a>scalingPolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingPolicy :: ScalingPolicy

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy (Maybe Text)

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
scalingPolicy_stepAdjustments :: Lens' ScalingPolicy (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>.
scalingPolicy_metricAggregationType :: Lens' ScalingPolicy (Maybe Text)

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe Text)

-- | Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
scalingPolicy_enabled :: Lens' ScalingPolicy (Maybe Bool)

-- | The duration of the policy's cooldown period, in seconds.
scalingPolicy_cooldown :: Lens' ScalingPolicy (Maybe Int)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_adjustmentType :: Lens' ScalingPolicy (Maybe Text)

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
scalingPolicy_minAdjustmentStep :: Lens' ScalingPolicy (Maybe Int)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics.
scalingPolicy_estimatedInstanceWarmup :: Lens' ScalingPolicy (Maybe Int)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_minAdjustmentMagnitude :: Lens' ScalingPolicy (Maybe Int)

-- | The CloudWatch alarms related to the policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy (Maybe Text)

-- | A predictive scaling policy.
scalingPolicy_predictiveScalingConfiguration :: Lens' ScalingPolicy (Maybe PredictiveScalingConfiguration)

-- | The name of the Auto Scaling group.
scalingPolicy_autoScalingGroupName :: Lens' ScalingPolicy (Maybe Text)

-- | <i>See:</i> <a>newScalingProcessQuery</a> smart constructor.
data ScalingProcessQuery
ScalingProcessQuery' :: Maybe [Text] -> Text -> ScalingProcessQuery

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
[$sel:scalingProcesses:ScalingProcessQuery'] :: ScalingProcessQuery -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScalingProcessQuery'] :: ScalingProcessQuery -> Text

-- | Create a value of <a>ScalingProcessQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_scalingProcesses</a> - One or more of the
--   following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingProcessQuery :: Text -> ScalingProcessQuery

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
scalingProcessQuery_scalingProcesses :: Lens' ScalingProcessQuery (Maybe [Text])

-- | The name of the Auto Scaling group.
scalingProcessQuery_autoScalingGroupName :: Lens' ScalingProcessQuery Text

-- | Describes a scheduled scaling action.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupAction</a> smart constructor.
data ScheduledUpdateGroupAction
ScheduledUpdateGroupAction' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> ScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
[$sel:desiredCapacity:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The date and time in UTC for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
[$sel:startTime:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The date and time in UTC for the recurring schedule to end. For
--   example, <tt>"2019-06-01T00:00:00Z"</tt>.
[$sel:endTime:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The Amazon Resource Name (ARN) of the scheduled action.
[$sel:scheduledActionARN:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The recurring schedule for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
[$sel:recurrence:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The maximum size of the Auto Scaling group.
[$sel:maxSize:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Int

-- | The time zone for the cron expression.
[$sel:timeZone:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | The name of the scheduled action.
[$sel:scheduledActionName:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | This parameter is no longer used.
[$sel:time:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe ISO8601

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ScheduledUpdateGroupAction'] :: ScheduledUpdateGroupAction -> Maybe Text

-- | Create a value of <a>ScheduledUpdateGroupAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_minSize</a> - The minimum size of the
--   Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_startTime</a> - The date and time in UTC
--   for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_endTime</a> - The date and time in UTC
--   for the recurring schedule to end. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:scheduledActionARN:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionARN</a> - The Amazon
--   Resource Name (ARN) of the scheduled action.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_recurrence</a> - The recurring schedule
--   for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_maxSize</a> - The maximum size of the
--   Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_timeZone</a> - The time zone for the
--   cron expression.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionName</a> - The name of
--   the scheduled action.
--   
--   <a>$sel:time:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_time</a> - This parameter is no longer
--   used.
--   
--   <a>$sel:autoScalingGroupName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newScheduledUpdateGroupAction :: ScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupAction_minSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupAction_desiredCapacity :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The date and time in UTC for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_startTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The date and time in UTC for the recurring schedule to end. For
--   example, <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_endTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledUpdateGroupAction_scheduledActionARN :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
scheduledUpdateGroupAction_recurrence :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupAction_maxSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The time zone for the cron expression.
scheduledUpdateGroupAction_timeZone :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The name of the scheduled action.
scheduledUpdateGroupAction_scheduledActionName :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | This parameter is no longer used.
scheduledUpdateGroupAction_time :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The name of the Auto Scaling group.
scheduledUpdateGroupAction_autoScalingGroupName :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | Describes information used for one or more scheduled scaling action
--   updates in a BatchPutScheduledUpdateGroupAction operation.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data ScheduledUpdateGroupActionRequest
ScheduledUpdateGroupActionRequest' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ScheduledUpdateGroupActionRequest

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
[$sel:desiredCapacity:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
[$sel:startTime:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe ISO8601

-- | The date and time for the recurring schedule to end, in UTC.
[$sel:endTime:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe ISO8601

-- | The recurring schedule for the action, in Unix cron syntax format.
--   This format consists of five fields separated by white spaces:
--   [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
--   value must be in quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For
--   more information about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
[$sel:recurrence:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Text

-- | The maximum size of the Auto Scaling group.
[$sel:maxSize:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Int

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
[$sel:timeZone:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Maybe Text

-- | The name of the scaling action.
[$sel:scheduledActionName:ScheduledUpdateGroupActionRequest'] :: ScheduledUpdateGroupActionRequest -> Text

-- | Create a value of <a>ScheduledUpdateGroupActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_minSize</a> - The minimum size of
--   the Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_startTime</a> - The date and time
--   for the action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
--   only and in quotes (for example, <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_endTime</a> - The date and time
--   for the recurring schedule to end, in UTC.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_recurrence</a> - The recurring
--   schedule for the action, in Unix cron syntax format. This format
--   consists of five fields separated by white spaces: [Minute] [Hour]
--   [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in
--   quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For more information
--   about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_maxSize</a> - The maximum size of
--   the Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_timeZone</a> - Specifies the time
--   zone for a cron expression. If a time zone is not provided, UTC is
--   used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_scheduledActionName</a> - The
--   name of the scaling action.
newScheduledUpdateGroupActionRequest :: Text -> ScheduledUpdateGroupActionRequest

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_minSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupActionRequest_desiredCapacity :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
scheduledUpdateGroupActionRequest_startTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
scheduledUpdateGroupActionRequest_endTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   This format consists of five fields separated by white spaces:
--   [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
--   value must be in quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For
--   more information about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
scheduledUpdateGroupActionRequest_recurrence :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_maxSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
scheduledUpdateGroupActionRequest_timeZone :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scaling action.
scheduledUpdateGroupActionRequest_scheduledActionName :: Lens' ScheduledUpdateGroupActionRequest Text

-- | Describes information used to create a step adjustment for a step
--   scaling policy.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most, one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most, one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   For more information, see <a>Step adjustments</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
[$sel:metricIntervalUpperBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
[$sel:metricIntervalLowerBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
[$sel:scalingAdjustment:StepAdjustment'] :: StepAdjustment -> Int

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity.
newStepAdjustment :: Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int

-- | Describes an auto scaling process that has been suspended.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newSuspendedProcess</a> smart constructor.
data SuspendedProcess
SuspendedProcess' :: Maybe Text -> Maybe Text -> SuspendedProcess

-- | The name of the suspended process.
[$sel:processName:SuspendedProcess'] :: SuspendedProcess -> Maybe Text

-- | The reason that the process was suspended.
[$sel:suspensionReason:SuspendedProcess'] :: SuspendedProcess -> Maybe Text

-- | Create a value of <a>SuspendedProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:SuspendedProcess'</a>,
--   <a>suspendedProcess_processName</a> - The name of the suspended
--   process.
--   
--   <a>$sel:suspensionReason:SuspendedProcess'</a>,
--   <a>suspendedProcess_suspensionReason</a> - The reason that the process
--   was suspended.
newSuspendedProcess :: SuspendedProcess

-- | The name of the suspended process.
suspendedProcess_processName :: Lens' SuspendedProcess (Maybe Text)

-- | The reason that the process was suspended.
suspendedProcess_suspensionReason :: Lens' SuspendedProcess (Maybe Text)

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | The tag key.
[$sel:key:Tag'] :: Tag -> Text

-- | The name of the Auto Scaling group.
[$sel:resourceId:Tag'] :: Tag -> Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
[$sel:resourceType:Tag'] :: Tag -> Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
[$sel:propagateAtLaunch:Tag'] :: Tag -> Bool

-- | The tag value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:resourceId:Tag'</a>, <a>tag_resourceId</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:resourceType:Tag'</a>, <a>tag_resourceType</a> - The type of
--   resource. The only supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:propagateAtLaunch:Tag'</a>, <a>tag_propagateAtLaunch</a> -
--   Determines whether the tag is added to new instances as they are
--   launched in the group.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The name of the Auto Scaling group.
tag_resourceId :: Lens' Tag Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tag_resourceType :: Lens' Tag Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tag_propagateAtLaunch :: Lens' Tag Bool

-- | The tag value.
tag_value :: Lens' Tag Text

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | The name of the group.
[$sel:resourceId:TagDescription'] :: TagDescription -> Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
[$sel:resourceType:TagDescription'] :: TagDescription -> Text

-- | The tag key.
[$sel:key:TagDescription'] :: TagDescription -> Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
[$sel:propagateAtLaunch:TagDescription'] :: TagDescription -> Bool

-- | The tag value.
[$sel:value:TagDescription'] :: TagDescription -> Text

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:TagDescription'</a>,
--   <a>tagDescription_resourceId</a> - The name of the group.
--   
--   <a>$sel:resourceType:TagDescription'</a>,
--   <a>tagDescription_resourceType</a> - The type of resource. The only
--   supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:key:TagDescription'</a>, <a>tagDescription_key</a> - The tag
--   key.
--   
--   <a>$sel:propagateAtLaunch:TagDescription'</a>,
--   <a>tagDescription_propagateAtLaunch</a> - Determines whether the tag
--   is added to new instances as they are launched in the group.
--   
--   <a>$sel:value:TagDescription'</a>, <a>tagDescription_value</a> - The
--   tag value.
newTagDescription :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | The name of the group.
tagDescription_resourceId :: Lens' TagDescription Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tagDescription_resourceType :: Lens' TagDescription Text

-- | The tag key.
tagDescription_key :: Lens' TagDescription Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tagDescription_propagateAtLaunch :: Lens' TagDescription Bool

-- | The tag value.
tagDescription_value :: Lens' TagDescription Text

-- | Represents a target tracking scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe CustomizedMetricSpecification -> Double -> TargetTrackingConfiguration

-- | Indicates whether scaling in by the target tracking scaling policy is
--   disabled. If scaling in is disabled, the target tracking scaling
--   policy doesn't remove instances from the Auto Scaling group.
--   Otherwise, the target tracking scaling policy can remove instances
--   from the Auto Scaling group. The default is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Bool

-- | A predefined metric. You must specify either a predefined metric or a
--   customized metric.
[$sel:predefinedMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe PredefinedMetricSpecification

-- | A customized metric. You must specify either a predefined metric or a
--   customized metric.
[$sel:customizedMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe CustomizedMetricSpecification

-- | The target value for the metric.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scaling in by the target tracking scaling policy is disabled. If
--   scaling in is disabled, the target tracking scaling policy doesn't
--   remove instances from the Auto Scaling group. Otherwise, the target
--   tracking scaling policy can remove instances from the Auto Scaling
--   group. The default is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedMetricSpecification</a> - A
--   predefined metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedMetricSpecification</a> - A
--   customized metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Indicates whether scaling in by the target tracking scaling policy is
--   disabled. If scaling in is disabled, the target tracking scaling
--   policy doesn't remove instances from the Auto Scaling group.
--   Otherwise, the target tracking scaling policy can remove instances
--   from the Auto Scaling group. The default is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A predefined metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedMetricSpecification)

-- | A customized metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedMetricSpecification)

-- | The target value for the metric.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double

-- | Describes a warm pool configuration.
--   
--   <i>See:</i> <a>newWarmPoolConfiguration</a> smart constructor.
data WarmPoolConfiguration
WarmPoolConfiguration' :: Maybe Natural -> Maybe WarmPoolStatus -> Maybe WarmPoolState -> Maybe Int -> WarmPoolConfiguration

-- | The minimum number of instances to maintain in the warm pool.
[$sel:minSize:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe Natural

-- | The status of a warm pool that is marked for deletion.
[$sel:status:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe WarmPoolStatus

-- | The instance state to transition to after the lifecycle actions are
--   complete.
[$sel:poolState:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe WarmPoolState

-- | The maximum number of instances that are allowed to be in the warm
--   pool or in any state except <tt>Terminated</tt> for the Auto Scaling
--   group.
[$sel:maxGroupPreparedCapacity:WarmPoolConfiguration'] :: WarmPoolConfiguration -> Maybe Int

-- | Create a value of <a>WarmPoolConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_minSize</a> - The minimum number of instances
--   to maintain in the warm pool.
--   
--   <a>$sel:status:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_status</a> - The status of a warm pool that
--   is marked for deletion.
--   
--   <a>$sel:poolState:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_poolState</a> - The instance state to
--   transition to after the lifecycle actions are complete.
--   
--   <a>$sel:maxGroupPreparedCapacity:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_maxGroupPreparedCapacity</a> - The maximum
--   number of instances that are allowed to be in the warm pool or in any
--   state except <tt>Terminated</tt> for the Auto Scaling group.
newWarmPoolConfiguration :: WarmPoolConfiguration

-- | The minimum number of instances to maintain in the warm pool.
warmPoolConfiguration_minSize :: Lens' WarmPoolConfiguration (Maybe Natural)

-- | The status of a warm pool that is marked for deletion.
warmPoolConfiguration_status :: Lens' WarmPoolConfiguration (Maybe WarmPoolStatus)

-- | The instance state to transition to after the lifecycle actions are
--   complete.
warmPoolConfiguration_poolState :: Lens' WarmPoolConfiguration (Maybe WarmPoolState)

-- | The maximum number of instances that are allowed to be in the warm
--   pool or in any state except <tt>Terminated</tt> for the Auto Scaling
--   group.
warmPoolConfiguration_maxGroupPreparedCapacity :: Lens' WarmPoolConfiguration (Maybe Int)


-- | Terminates the specified instance and optionally adjusts the desired
--   group size. This operation cannot be called on instances in a warm
--   pool.
--   
--   This call simply makes a termination request. The instance is not
--   terminated immediately. When an instance is terminated, the instance
--   status changes to <tt>terminated</tt>. You can't connect to or start
--   an instance after you've terminated it.
--   
--   If you do not specify the option to decrement the desired capacity,
--   Amazon EC2 Auto Scaling launches instances to replace the ones that
--   are terminated.
--   
--   By default, Amazon EC2 Auto Scaling balances instances across all
--   Availability Zones. If you decrement the desired capacity, your Auto
--   Scaling group can become unbalanced between Availability Zones. Amazon
--   EC2 Auto Scaling tries to rebalance the group, and rebalancing might
--   terminate instances in other zones. For more information, see
--   <a>Rebalancing activities</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
module Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup

-- | <i>See:</i> <a>newTerminateInstanceInAutoScalingGroup</a> smart
--   constructor.
data TerminateInstanceInAutoScalingGroup
TerminateInstanceInAutoScalingGroup' :: Text -> Bool -> TerminateInstanceInAutoScalingGroup

-- | The ID of the instance.
[$sel:instanceId:TerminateInstanceInAutoScalingGroup'] :: TerminateInstanceInAutoScalingGroup -> Text

-- | Indicates whether terminating the instance also decrements the size of
--   the Auto Scaling group.
[$sel:shouldDecrementDesiredCapacity:TerminateInstanceInAutoScalingGroup'] :: TerminateInstanceInAutoScalingGroup -> Bool

-- | Create a value of <a>TerminateInstanceInAutoScalingGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:TerminateInstanceInAutoScalingGroup'</a>,
--   <a>terminateInstanceInAutoScalingGroup_instanceId</a> - The ID of the
--   instance.
--   
--   
--   <a>$sel:shouldDecrementDesiredCapacity:TerminateInstanceInAutoScalingGroup'</a>,
--   <a>terminateInstanceInAutoScalingGroup_shouldDecrementDesiredCapacity</a>
--   - Indicates whether terminating the instance also decrements the size
--   of the Auto Scaling group.
newTerminateInstanceInAutoScalingGroup :: Text -> Bool -> TerminateInstanceInAutoScalingGroup

-- | The ID of the instance.
terminateInstanceInAutoScalingGroup_instanceId :: Lens' TerminateInstanceInAutoScalingGroup Text

-- | Indicates whether terminating the instance also decrements the size of
--   the Auto Scaling group.
terminateInstanceInAutoScalingGroup_shouldDecrementDesiredCapacity :: Lens' TerminateInstanceInAutoScalingGroup Bool

-- | <i>See:</i> <a>newTerminateInstanceInAutoScalingGroupResponse</a>
--   smart constructor.
data TerminateInstanceInAutoScalingGroupResponse
TerminateInstanceInAutoScalingGroupResponse' :: Maybe Activity -> Int -> TerminateInstanceInAutoScalingGroupResponse

-- | A scaling activity.
[$sel:activity:TerminateInstanceInAutoScalingGroupResponse'] :: TerminateInstanceInAutoScalingGroupResponse -> Maybe Activity

-- | The response's http status code.
[$sel:httpStatus:TerminateInstanceInAutoScalingGroupResponse'] :: TerminateInstanceInAutoScalingGroupResponse -> Int

-- | Create a value of <a>TerminateInstanceInAutoScalingGroupResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activity:TerminateInstanceInAutoScalingGroupResponse'</a>,
--   <a>terminateInstanceInAutoScalingGroupResponse_activity</a> - A
--   scaling activity.
--   
--   <a>$sel:httpStatus:TerminateInstanceInAutoScalingGroupResponse'</a>,
--   <a>terminateInstanceInAutoScalingGroupResponse_httpStatus</a> - The
--   response's http status code.
newTerminateInstanceInAutoScalingGroupResponse :: Int -> TerminateInstanceInAutoScalingGroupResponse

-- | A scaling activity.
terminateInstanceInAutoScalingGroupResponse_activity :: Lens' TerminateInstanceInAutoScalingGroupResponse (Maybe Activity)

-- | The response's http status code.
terminateInstanceInAutoScalingGroupResponse_httpStatus :: Lens' TerminateInstanceInAutoScalingGroupResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance GHC.Show.Show Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance GHC.Read.Read Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance GHC.Classes.Eq Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance GHC.Generics.Generic Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroupResponse
instance GHC.Show.Show Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroupResponse
instance GHC.Read.Read Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroupResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup.TerminateInstanceInAutoScalingGroup


-- | Suspends the specified auto scaling processes, or all processes, for
--   the specified Auto Scaling group.
--   
--   If you suspend either the <tt>Launch</tt> or <tt>Terminate</tt>
--   process types, it can prevent other process types from functioning
--   properly. For more information, see <a>Suspending and resuming scaling
--   processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   To resume processes that have been suspended, call the ResumeProcesses
--   API.
module Network.AWS.AutoScaling.SuspendProcesses

-- | <i>See:</i> <a>newSuspendProcesses</a> smart constructor.
data SuspendProcesses
SuspendProcesses' :: Maybe [Text] -> Text -> SuspendProcesses

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
[$sel:scalingProcesses:SuspendProcesses'] :: SuspendProcesses -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:SuspendProcesses'] :: SuspendProcesses -> Text

-- | Create a value of <a>SuspendProcesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:SuspendProcesses'</a>,
--   <a>suspendProcesses_scalingProcesses</a> - One or more of the
--   following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:SuspendProcesses'</a>,
--   <a>suspendProcesses_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newSuspendProcesses :: Text -> SuspendProcesses

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
suspendProcesses_scalingProcesses :: Lens' SuspendProcesses (Maybe [Text])

-- | The name of the Auto Scaling group.
suspendProcesses_autoScalingGroupName :: Lens' SuspendProcesses Text

-- | <i>See:</i> <a>newSuspendProcessesResponse</a> smart constructor.
data SuspendProcessesResponse
SuspendProcessesResponse' :: SuspendProcessesResponse

-- | Create a value of <a>SuspendProcessesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSuspendProcessesResponse :: SuspendProcessesResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance GHC.Show.Show Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance GHC.Read.Read Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance GHC.Classes.Eq Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance GHC.Generics.Generic Network.AWS.AutoScaling.SuspendProcesses.SuspendProcessesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.SuspendProcesses.SuspendProcessesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.SuspendProcesses.SuspendProcessesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.SuspendProcesses.SuspendProcessesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SuspendProcesses.SuspendProcessesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.SuspendProcesses.SuspendProcesses


-- | Starts a new instance refresh operation. An instance refresh performs
--   a rolling replacement of all or some instances in an Auto Scaling
--   group. Each instance is terminated first and then replaced, which
--   temporarily reduces the capacity available within your Auto Scaling
--   group.
--   
--   This operation is part of the <a>instance refresh feature</a> in
--   Amazon EC2 Auto Scaling, which helps you update instances in your Auto
--   Scaling group. This feature is helpful, for example, when you have a
--   new AMI or a new user data script. You just need to create a new
--   launch template that specifies the new AMI or user data script. Then
--   start an instance refresh to immediately begin the process of updating
--   instances in the group.
--   
--   If the call succeeds, it creates a new instance refresh request with a
--   unique ID that you can use to track its progress. To query its status,
--   call the DescribeInstanceRefreshes API. To describe the instance
--   refreshes that have already run, call the DescribeInstanceRefreshes
--   API. To cancel an instance refresh operation in progress, use the
--   CancelInstanceRefresh API.
module Network.AWS.AutoScaling.StartInstanceRefresh

-- | <i>See:</i> <a>newStartInstanceRefresh</a> smart constructor.
data StartInstanceRefresh
StartInstanceRefresh' :: Maybe RefreshStrategy -> Maybe DesiredConfiguration -> Maybe RefreshPreferences -> Text -> StartInstanceRefresh

-- | The strategy to use for the instance refresh. The only valid value is
--   <tt>Rolling</tt>.
--   
--   A rolling update helps you update your instances gradually. A rolling
--   update can fail due to failed health checks or if instances are on
--   standby or are protected from scale in. If the rolling update process
--   fails, any instances that are replaced are not rolled back to their
--   previous configuration.
[$sel:strategy:StartInstanceRefresh'] :: StartInstanceRefresh -> Maybe RefreshStrategy

-- | The desired configuration. For example, the desired configuration can
--   specify a new launch template or a new version of the current launch
--   template.
--   
--   Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates
--   the settings of the Auto Scaling group to reflect the new desired
--   configuration.
--   
--   When you specify a new launch template or a new version of the current
--   launch template for your desired configuration, consider enabling the
--   <tt>SkipMatching</tt> property in preferences. If it's enabled, Amazon
--   EC2 Auto Scaling skips replacing instances that already use the
--   specified launch template and version. This can help you reduce the
--   number of replacements that are required to apply updates.
[$sel:desiredConfiguration:StartInstanceRefresh'] :: StartInstanceRefresh -> Maybe DesiredConfiguration

-- | Set of preferences associated with the instance refresh request. If
--   not provided, the default values are used.
[$sel:preferences:StartInstanceRefresh'] :: StartInstanceRefresh -> Maybe RefreshPreferences

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:StartInstanceRefresh'] :: StartInstanceRefresh -> Text

-- | Create a value of <a>StartInstanceRefresh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:strategy:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_strategy</a> - The strategy to use for the
--   instance refresh. The only valid value is <tt>Rolling</tt>.
--   
--   A rolling update helps you update your instances gradually. A rolling
--   update can fail due to failed health checks or if instances are on
--   standby or are protected from scale in. If the rolling update process
--   fails, any instances that are replaced are not rolled back to their
--   previous configuration.
--   
--   <a>$sel:desiredConfiguration:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_desiredConfiguration</a> - The desired
--   configuration. For example, the desired configuration can specify a
--   new launch template or a new version of the current launch template.
--   
--   Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates
--   the settings of the Auto Scaling group to reflect the new desired
--   configuration.
--   
--   When you specify a new launch template or a new version of the current
--   launch template for your desired configuration, consider enabling the
--   <tt>SkipMatching</tt> property in preferences. If it's enabled, Amazon
--   EC2 Auto Scaling skips replacing instances that already use the
--   specified launch template and version. This can help you reduce the
--   number of replacements that are required to apply updates.
--   
--   <a>$sel:preferences:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_preferences</a> - Set of preferences
--   associated with the instance refresh request. If not provided, the
--   default values are used.
--   
--   <a>$sel:autoScalingGroupName:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newStartInstanceRefresh :: Text -> StartInstanceRefresh

-- | The strategy to use for the instance refresh. The only valid value is
--   <tt>Rolling</tt>.
--   
--   A rolling update helps you update your instances gradually. A rolling
--   update can fail due to failed health checks or if instances are on
--   standby or are protected from scale in. If the rolling update process
--   fails, any instances that are replaced are not rolled back to their
--   previous configuration.
startInstanceRefresh_strategy :: Lens' StartInstanceRefresh (Maybe RefreshStrategy)

-- | The desired configuration. For example, the desired configuration can
--   specify a new launch template or a new version of the current launch
--   template.
--   
--   Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates
--   the settings of the Auto Scaling group to reflect the new desired
--   configuration.
--   
--   When you specify a new launch template or a new version of the current
--   launch template for your desired configuration, consider enabling the
--   <tt>SkipMatching</tt> property in preferences. If it's enabled, Amazon
--   EC2 Auto Scaling skips replacing instances that already use the
--   specified launch template and version. This can help you reduce the
--   number of replacements that are required to apply updates.
startInstanceRefresh_desiredConfiguration :: Lens' StartInstanceRefresh (Maybe DesiredConfiguration)

-- | Set of preferences associated with the instance refresh request. If
--   not provided, the default values are used.
startInstanceRefresh_preferences :: Lens' StartInstanceRefresh (Maybe RefreshPreferences)

-- | The name of the Auto Scaling group.
startInstanceRefresh_autoScalingGroupName :: Lens' StartInstanceRefresh Text

-- | <i>See:</i> <a>newStartInstanceRefreshResponse</a> smart constructor.
data StartInstanceRefreshResponse
StartInstanceRefreshResponse' :: Maybe Text -> Int -> StartInstanceRefreshResponse

-- | A unique ID for tracking the progress of the request.
[$sel:instanceRefreshId:StartInstanceRefreshResponse'] :: StartInstanceRefreshResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartInstanceRefreshResponse'] :: StartInstanceRefreshResponse -> Int

-- | Create a value of <a>StartInstanceRefreshResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceRefreshId:StartInstanceRefreshResponse'</a>,
--   <a>startInstanceRefreshResponse_instanceRefreshId</a> - A unique ID
--   for tracking the progress of the request.
--   
--   <a>$sel:httpStatus:StartInstanceRefreshResponse'</a>,
--   <a>startInstanceRefreshResponse_httpStatus</a> - The response's http
--   status code.
newStartInstanceRefreshResponse :: Int -> StartInstanceRefreshResponse

-- | A unique ID for tracking the progress of the request.
startInstanceRefreshResponse_instanceRefreshId :: Lens' StartInstanceRefreshResponse (Maybe Text)

-- | The response's http status code.
startInstanceRefreshResponse_httpStatus :: Lens' StartInstanceRefreshResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance GHC.Show.Show Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance GHC.Read.Read Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance GHC.Classes.Eq Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance GHC.Generics.Generic Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefreshResponse
instance GHC.Show.Show Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefreshResponse
instance GHC.Read.Read Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefreshResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefreshResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefreshResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.StartInstanceRefresh.StartInstanceRefresh


-- | Updates the instance protection settings of the specified instances.
--   This operation cannot be called on instances in a warm pool.
--   
--   For more information about preventing instances that are part of an
--   Auto Scaling group from terminating on scale in, see <a>Instance
--   scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   If you exceed your maximum limit of instance IDs, which is 50 per Auto
--   Scaling group, the call fails.
module Network.AWS.AutoScaling.SetInstanceProtection

-- | <i>See:</i> <a>newSetInstanceProtection</a> smart constructor.
data SetInstanceProtection
SetInstanceProtection' :: [Text] -> Text -> Bool -> SetInstanceProtection

-- | One or more instance IDs. You can specify up to 50 instances.
[$sel:instanceIds:SetInstanceProtection'] :: SetInstanceProtection -> [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:SetInstanceProtection'] :: SetInstanceProtection -> Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
[$sel:protectedFromScaleIn:SetInstanceProtection'] :: SetInstanceProtection -> Bool

-- | Create a value of <a>SetInstanceProtection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_instanceIds</a> - One or more instance IDs.
--   You can specify up to 50 instances.
--   
--   <a>$sel:autoScalingGroupName:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:protectedFromScaleIn:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_protectedFromScaleIn</a> - Indicates whether
--   the instance is protected from termination by Amazon EC2 Auto Scaling
--   when scaling in.
newSetInstanceProtection :: Text -> Bool -> SetInstanceProtection

-- | One or more instance IDs. You can specify up to 50 instances.
setInstanceProtection_instanceIds :: Lens' SetInstanceProtection [Text]

-- | The name of the Auto Scaling group.
setInstanceProtection_autoScalingGroupName :: Lens' SetInstanceProtection Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
setInstanceProtection_protectedFromScaleIn :: Lens' SetInstanceProtection Bool

-- | <i>See:</i> <a>newSetInstanceProtectionResponse</a> smart constructor.
data SetInstanceProtectionResponse
SetInstanceProtectionResponse' :: Int -> SetInstanceProtectionResponse

-- | The response's http status code.
[$sel:httpStatus:SetInstanceProtectionResponse'] :: SetInstanceProtectionResponse -> Int

-- | Create a value of <a>SetInstanceProtectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetInstanceProtectionResponse'</a>,
--   <a>setInstanceProtectionResponse_httpStatus</a> - The response's http
--   status code.
newSetInstanceProtectionResponse :: Int -> SetInstanceProtectionResponse

-- | The response's http status code.
setInstanceProtectionResponse_httpStatus :: Lens' SetInstanceProtectionResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance GHC.Show.Show Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance GHC.Read.Read Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtectionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtectionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtectionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.SetInstanceProtection.SetInstanceProtection


-- | Sets the health status of the specified instance.
--   
--   For more information, see <a>Health checks for Auto Scaling
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.SetInstanceHealth

-- | <i>See:</i> <a>newSetInstanceHealth</a> smart constructor.
data SetInstanceHealth
SetInstanceHealth' :: Maybe Bool -> Text -> Text -> SetInstanceHealth

-- | If the Auto Scaling group of the specified instance has a
--   <tt>HealthCheckGracePeriod</tt> specified for the group, by default,
--   this call respects the grace period. Set this to <tt>False</tt>, to
--   have the call not respect the grace period associated with the group.
--   
--   For more information about the health check grace period, see
--   <a>CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
[$sel:shouldRespectGracePeriod:SetInstanceHealth'] :: SetInstanceHealth -> Maybe Bool

-- | The ID of the instance.
[$sel:instanceId:SetInstanceHealth'] :: SetInstanceHealth -> Text

-- | The health status of the instance. Set to <tt>Healthy</tt> to have the
--   instance remain in service. Set to <tt>Unhealthy</tt> to have the
--   instance be out of service. Amazon EC2 Auto Scaling terminates and
--   replaces the unhealthy instance.
[$sel:healthStatus:SetInstanceHealth'] :: SetInstanceHealth -> Text

-- | Create a value of <a>SetInstanceHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shouldRespectGracePeriod:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_shouldRespectGracePeriod</a> - If the Auto
--   Scaling group of the specified instance has a
--   <tt>HealthCheckGracePeriod</tt> specified for the group, by default,
--   this call respects the grace period. Set this to <tt>False</tt>, to
--   have the call not respect the grace period associated with the group.
--   
--   For more information about the health check grace period, see
--   <a>CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
--   
--   <a>$sel:instanceId:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:healthStatus:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_healthStatus</a> - The health status of the
--   instance. Set to <tt>Healthy</tt> to have the instance remain in
--   service. Set to <tt>Unhealthy</tt> to have the instance be out of
--   service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy
--   instance.
newSetInstanceHealth :: Text -> Text -> SetInstanceHealth

-- | If the Auto Scaling group of the specified instance has a
--   <tt>HealthCheckGracePeriod</tt> specified for the group, by default,
--   this call respects the grace period. Set this to <tt>False</tt>, to
--   have the call not respect the grace period associated with the group.
--   
--   For more information about the health check grace period, see
--   <a>CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
setInstanceHealth_shouldRespectGracePeriod :: Lens' SetInstanceHealth (Maybe Bool)

-- | The ID of the instance.
setInstanceHealth_instanceId :: Lens' SetInstanceHealth Text

-- | The health status of the instance. Set to <tt>Healthy</tt> to have the
--   instance remain in service. Set to <tt>Unhealthy</tt> to have the
--   instance be out of service. Amazon EC2 Auto Scaling terminates and
--   replaces the unhealthy instance.
setInstanceHealth_healthStatus :: Lens' SetInstanceHealth Text

-- | <i>See:</i> <a>newSetInstanceHealthResponse</a> smart constructor.
data SetInstanceHealthResponse
SetInstanceHealthResponse' :: SetInstanceHealthResponse

-- | Create a value of <a>SetInstanceHealthResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetInstanceHealthResponse :: SetInstanceHealthResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance GHC.Show.Show Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance GHC.Read.Read Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealthResponse
instance GHC.Show.Show Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealthResponse
instance GHC.Read.Read Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealthResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealthResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealthResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.SetInstanceHealth.SetInstanceHealth


-- | Sets the size of the specified Auto Scaling group.
--   
--   If a scale-in activity occurs as a result of a new
--   <tt>DesiredCapacity</tt> value that is lower than the current size of
--   the group, the Auto Scaling group uses its termination policy to
--   determine which instances to terminate.
--   
--   For more information, see <a>Manual scaling</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.SetDesiredCapacity

-- | <i>See:</i> <a>newSetDesiredCapacity</a> smart constructor.
data SetDesiredCapacity
SetDesiredCapacity' :: Maybe Bool -> Text -> Int -> SetDesiredCapacity

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before initiating a scaling activity to set your
--   Auto Scaling group to its new capacity. By default, Amazon EC2 Auto
--   Scaling does not honor the cooldown period during manual scaling
--   activities.
[$sel:honorCooldown:SetDesiredCapacity'] :: SetDesiredCapacity -> Maybe Bool

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:SetDesiredCapacity'] :: SetDesiredCapacity -> Text

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain.
[$sel:desiredCapacity:SetDesiredCapacity'] :: SetDesiredCapacity -> Int

-- | Create a value of <a>SetDesiredCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:honorCooldown:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_honorCooldown</a> - Indicates whether Amazon EC2
--   Auto Scaling waits for the cooldown period to complete before
--   initiating a scaling activity to set your Auto Scaling group to its
--   new capacity. By default, Amazon EC2 Auto Scaling does not honor the
--   cooldown period during manual scaling activities.
--   
--   <a>$sel:autoScalingGroupName:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:desiredCapacity:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_desiredCapacity</a> - The desired capacity is
--   the initial capacity of the Auto Scaling group after this operation
--   completes and the capacity it attempts to maintain.
newSetDesiredCapacity :: Text -> Int -> SetDesiredCapacity

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before initiating a scaling activity to set your
--   Auto Scaling group to its new capacity. By default, Amazon EC2 Auto
--   Scaling does not honor the cooldown period during manual scaling
--   activities.
setDesiredCapacity_honorCooldown :: Lens' SetDesiredCapacity (Maybe Bool)

-- | The name of the Auto Scaling group.
setDesiredCapacity_autoScalingGroupName :: Lens' SetDesiredCapacity Text

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain.
setDesiredCapacity_desiredCapacity :: Lens' SetDesiredCapacity Int

-- | <i>See:</i> <a>newSetDesiredCapacityResponse</a> smart constructor.
data SetDesiredCapacityResponse
SetDesiredCapacityResponse' :: SetDesiredCapacityResponse

-- | Create a value of <a>SetDesiredCapacityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetDesiredCapacityResponse :: SetDesiredCapacityResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance GHC.Show.Show Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance GHC.Read.Read Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance GHC.Generics.Generic Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacityResponse
instance GHC.Show.Show Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacityResponse
instance GHC.Read.Read Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacityResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacityResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.SetDesiredCapacity.SetDesiredCapacity


-- | Resumes the specified suspended auto scaling processes, or all
--   suspended process, for the specified Auto Scaling group.
--   
--   For more information, see <a>Suspending and resuming scaling
--   processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.ResumeProcesses

-- | <i>See:</i> <a>newResumeProcesses</a> smart constructor.
data ResumeProcesses
ResumeProcesses' :: Maybe [Text] -> Text -> ResumeProcesses

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
[$sel:scalingProcesses:ResumeProcesses'] :: ResumeProcesses -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ResumeProcesses'] :: ResumeProcesses -> Text

-- | Create a value of <a>ResumeProcesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:ResumeProcesses'</a>,
--   <a>resumeProcesses_scalingProcesses</a> - One or more of the following
--   processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:ResumeProcesses'</a>,
--   <a>resumeProcesses_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newResumeProcesses :: Text -> ResumeProcesses

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
resumeProcesses_scalingProcesses :: Lens' ResumeProcesses (Maybe [Text])

-- | The name of the Auto Scaling group.
resumeProcesses_autoScalingGroupName :: Lens' ResumeProcesses Text

-- | <i>See:</i> <a>newResumeProcessesResponse</a> smart constructor.
data ResumeProcessesResponse
ResumeProcessesResponse' :: ResumeProcessesResponse

-- | Create a value of <a>ResumeProcessesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newResumeProcessesResponse :: ResumeProcessesResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance GHC.Show.Show Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance GHC.Read.Read Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance GHC.Classes.Eq Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance GHC.Generics.Generic Network.AWS.AutoScaling.ResumeProcesses.ResumeProcessesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.ResumeProcesses.ResumeProcessesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.ResumeProcesses.ResumeProcessesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.ResumeProcesses.ResumeProcessesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ResumeProcesses.ResumeProcessesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.ResumeProcesses.ResumeProcesses


-- | Records a heartbeat for the lifecycle action associated with the
--   specified token or instance. This extends the timeout by the length of
--   time defined using the PutLifecycleHook API call.
--   
--   This step is a part of the procedure for adding a lifecycle hook to an
--   Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.</li>
--   <li>__If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state.__</li>
--   <li>If you finish before the timeout period ends, complete the
--   lifecycle action.</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat

-- | <i>See:</i> <a>newRecordLifecycleActionHeartbeat</a> smart
--   constructor.
data RecordLifecycleActionHeartbeat
RecordLifecycleActionHeartbeat' :: Maybe Text -> Maybe Text -> Text -> Text -> RecordLifecycleActionHeartbeat

-- | The ID of the instance.
[$sel:instanceId:RecordLifecycleActionHeartbeat'] :: RecordLifecycleActionHeartbeat -> Maybe Text

-- | A token that uniquely identifies a specific lifecycle action
--   associated with an instance. Amazon EC2 Auto Scaling sends this token
--   to the notification target that you specified when you created the
--   lifecycle hook.
[$sel:lifecycleActionToken:RecordLifecycleActionHeartbeat'] :: RecordLifecycleActionHeartbeat -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:RecordLifecycleActionHeartbeat'] :: RecordLifecycleActionHeartbeat -> Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:RecordLifecycleActionHeartbeat'] :: RecordLifecycleActionHeartbeat -> Text

-- | Create a value of <a>RecordLifecycleActionHeartbeat</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_instanceId</a> - The ID of the
--   instance.
--   
--   <a>$sel:lifecycleActionToken:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_lifecycleActionToken</a> - A token
--   that uniquely identifies a specific lifecycle action associated with
--   an instance. Amazon EC2 Auto Scaling sends this token to the
--   notification target that you specified when you created the lifecycle
--   hook.
--   
--   <a>$sel:lifecycleHookName:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_lifecycleHookName</a> - The name of
--   the lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
newRecordLifecycleActionHeartbeat :: Text -> Text -> RecordLifecycleActionHeartbeat

-- | The ID of the instance.
recordLifecycleActionHeartbeat_instanceId :: Lens' RecordLifecycleActionHeartbeat (Maybe Text)

-- | A token that uniquely identifies a specific lifecycle action
--   associated with an instance. Amazon EC2 Auto Scaling sends this token
--   to the notification target that you specified when you created the
--   lifecycle hook.
recordLifecycleActionHeartbeat_lifecycleActionToken :: Lens' RecordLifecycleActionHeartbeat (Maybe Text)

-- | The name of the lifecycle hook.
recordLifecycleActionHeartbeat_lifecycleHookName :: Lens' RecordLifecycleActionHeartbeat Text

-- | The name of the Auto Scaling group.
recordLifecycleActionHeartbeat_autoScalingGroupName :: Lens' RecordLifecycleActionHeartbeat Text

-- | <i>See:</i> <a>newRecordLifecycleActionHeartbeatResponse</a> smart
--   constructor.
data RecordLifecycleActionHeartbeatResponse
RecordLifecycleActionHeartbeatResponse' :: Int -> RecordLifecycleActionHeartbeatResponse

-- | The response's http status code.
[$sel:httpStatus:RecordLifecycleActionHeartbeatResponse'] :: RecordLifecycleActionHeartbeatResponse -> Int

-- | Create a value of <a>RecordLifecycleActionHeartbeatResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RecordLifecycleActionHeartbeatResponse'</a>,
--   <a>recordLifecycleActionHeartbeatResponse_httpStatus</a> - The
--   response's http status code.
newRecordLifecycleActionHeartbeatResponse :: Int -> RecordLifecycleActionHeartbeatResponse

-- | The response's http status code.
recordLifecycleActionHeartbeatResponse_httpStatus :: Lens' RecordLifecycleActionHeartbeatResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance GHC.Show.Show Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance GHC.Read.Read Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance GHC.Classes.Eq Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance GHC.Generics.Generic Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeatResponse
instance GHC.Show.Show Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeatResponse
instance GHC.Read.Read Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeatResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeatResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeatResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat.RecordLifecycleActionHeartbeat


-- | Creates or updates a warm pool for the specified Auto Scaling group. A
--   warm pool is a pool of pre-initialized EC2 instances that sits
--   alongside the Auto Scaling group. Whenever your application needs to
--   scale out, the Auto Scaling group can draw on the warm pool to meet
--   its new desired capacity. For more information and example
--   configurations, see <a>Warm pools for Amazon EC2 Auto Scaling</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   This operation must be called from the Region in which the Auto
--   Scaling group was created. This operation cannot be called on an Auto
--   Scaling group that has a mixed instances policy or a launch template
--   or launch configuration that requests Spot Instances.
--   
--   You can view the instances in the warm pool using the DescribeWarmPool
--   API call. If you are no longer using a warm pool, you can delete it by
--   calling the DeleteWarmPool API.
module Network.AWS.AutoScaling.PutWarmPool

-- | <i>See:</i> <a>newPutWarmPool</a> smart constructor.
data PutWarmPool
PutWarmPool' :: Maybe Natural -> Maybe WarmPoolState -> Maybe Int -> Text -> PutWarmPool

-- | Specifies the minimum number of instances to maintain in the warm
--   pool. This helps you to ensure that there is always a certain number
--   of warmed instances available to handle traffic spikes. Defaults to 0
--   if not specified.
[$sel:minSize:PutWarmPool'] :: PutWarmPool -> Maybe Natural

-- | Sets the instance state to transition to after the lifecycle actions
--   are complete. Default is <tt>Stopped</tt>.
[$sel:poolState:PutWarmPool'] :: PutWarmPool -> Maybe WarmPoolState

-- | Specifies the maximum number of instances that are allowed to be in
--   the warm pool or in any state except <tt>Terminated</tt> for the Auto
--   Scaling group. This is an optional property. Specify it only if you do
--   not want the warm pool size to be determined by the difference between
--   the group's maximum capacity and its desired capacity.
--   
--   If a value for <tt>MaxGroupPreparedCapacity</tt> is not specified,
--   Amazon EC2 Auto Scaling launches and maintains the difference between
--   the group's maximum capacity and its desired capacity. If you specify
--   a value for <tt>MaxGroupPreparedCapacity</tt>, Amazon EC2 Auto Scaling
--   uses the difference between the <tt>MaxGroupPreparedCapacity</tt> and
--   the desired capacity instead.
--   
--   The size of the warm pool is dynamic. Only when
--   <tt>MaxGroupPreparedCapacity</tt> and <tt>MinSize</tt> are set to the
--   same value does the warm pool have an absolute size.
--   
--   If the desired capacity of the Auto Scaling group is higher than the
--   <tt>MaxGroupPreparedCapacity</tt>, the capacity of the warm pool is 0,
--   unless you specify a value for <tt>MinSize</tt>. To remove a value
--   that you previously set, include the property but specify -1 for the
--   value.
[$sel:maxGroupPreparedCapacity:PutWarmPool'] :: PutWarmPool -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:PutWarmPool'] :: PutWarmPool -> Text

-- | Create a value of <a>PutWarmPool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:PutWarmPool'</a>, <a>putWarmPool_minSize</a> -
--   Specifies the minimum number of instances to maintain in the warm
--   pool. This helps you to ensure that there is always a certain number
--   of warmed instances available to handle traffic spikes. Defaults to 0
--   if not specified.
--   
--   <a>$sel:poolState:PutWarmPool'</a>, <a>putWarmPool_poolState</a> -
--   Sets the instance state to transition to after the lifecycle actions
--   are complete. Default is <tt>Stopped</tt>.
--   
--   <a>$sel:maxGroupPreparedCapacity:PutWarmPool'</a>,
--   <a>putWarmPool_maxGroupPreparedCapacity</a> - Specifies the maximum
--   number of instances that are allowed to be in the warm pool or in any
--   state except <tt>Terminated</tt> for the Auto Scaling group. This is
--   an optional property. Specify it only if you do not want the warm pool
--   size to be determined by the difference between the group's maximum
--   capacity and its desired capacity.
--   
--   If a value for <tt>MaxGroupPreparedCapacity</tt> is not specified,
--   Amazon EC2 Auto Scaling launches and maintains the difference between
--   the group's maximum capacity and its desired capacity. If you specify
--   a value for <tt>MaxGroupPreparedCapacity</tt>, Amazon EC2 Auto Scaling
--   uses the difference between the <tt>MaxGroupPreparedCapacity</tt> and
--   the desired capacity instead.
--   
--   The size of the warm pool is dynamic. Only when
--   <tt>MaxGroupPreparedCapacity</tt> and <tt>MinSize</tt> are set to the
--   same value does the warm pool have an absolute size.
--   
--   If the desired capacity of the Auto Scaling group is higher than the
--   <tt>MaxGroupPreparedCapacity</tt>, the capacity of the warm pool is 0,
--   unless you specify a value for <tt>MinSize</tt>. To remove a value
--   that you previously set, include the property but specify -1 for the
--   value.
--   
--   <a>$sel:autoScalingGroupName:PutWarmPool'</a>,
--   <a>putWarmPool_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
newPutWarmPool :: Text -> PutWarmPool

-- | Specifies the minimum number of instances to maintain in the warm
--   pool. This helps you to ensure that there is always a certain number
--   of warmed instances available to handle traffic spikes. Defaults to 0
--   if not specified.
putWarmPool_minSize :: Lens' PutWarmPool (Maybe Natural)

-- | Sets the instance state to transition to after the lifecycle actions
--   are complete. Default is <tt>Stopped</tt>.
putWarmPool_poolState :: Lens' PutWarmPool (Maybe WarmPoolState)

-- | Specifies the maximum number of instances that are allowed to be in
--   the warm pool or in any state except <tt>Terminated</tt> for the Auto
--   Scaling group. This is an optional property. Specify it only if you do
--   not want the warm pool size to be determined by the difference between
--   the group's maximum capacity and its desired capacity.
--   
--   If a value for <tt>MaxGroupPreparedCapacity</tt> is not specified,
--   Amazon EC2 Auto Scaling launches and maintains the difference between
--   the group's maximum capacity and its desired capacity. If you specify
--   a value for <tt>MaxGroupPreparedCapacity</tt>, Amazon EC2 Auto Scaling
--   uses the difference between the <tt>MaxGroupPreparedCapacity</tt> and
--   the desired capacity instead.
--   
--   The size of the warm pool is dynamic. Only when
--   <tt>MaxGroupPreparedCapacity</tt> and <tt>MinSize</tt> are set to the
--   same value does the warm pool have an absolute size.
--   
--   If the desired capacity of the Auto Scaling group is higher than the
--   <tt>MaxGroupPreparedCapacity</tt>, the capacity of the warm pool is 0,
--   unless you specify a value for <tt>MinSize</tt>. To remove a value
--   that you previously set, include the property but specify -1 for the
--   value.
putWarmPool_maxGroupPreparedCapacity :: Lens' PutWarmPool (Maybe Int)

-- | The name of the Auto Scaling group.
putWarmPool_autoScalingGroupName :: Lens' PutWarmPool Text

-- | <i>See:</i> <a>newPutWarmPoolResponse</a> smart constructor.
data PutWarmPoolResponse
PutWarmPoolResponse' :: Int -> PutWarmPoolResponse

-- | The response's http status code.
[$sel:httpStatus:PutWarmPoolResponse'] :: PutWarmPoolResponse -> Int

-- | Create a value of <a>PutWarmPoolResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutWarmPoolResponse'</a>,
--   <a>putWarmPoolResponse_httpStatus</a> - The response's http status
--   code.
newPutWarmPoolResponse :: Int -> PutWarmPoolResponse

-- | The response's http status code.
putWarmPoolResponse_httpStatus :: Lens' PutWarmPoolResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance GHC.Show.Show Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance GHC.Read.Read Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutWarmPool.PutWarmPoolResponse
instance GHC.Show.Show Network.AWS.AutoScaling.PutWarmPool.PutWarmPoolResponse
instance GHC.Read.Read Network.AWS.AutoScaling.PutWarmPool.PutWarmPoolResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutWarmPool.PutWarmPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutWarmPool.PutWarmPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.PutWarmPool.PutWarmPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.PutWarmPool.PutWarmPool


-- | Creates or updates a scheduled scaling action for an Auto Scaling
--   group.
--   
--   For more information, see <a>Scheduled scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   You can view the scheduled actions for an Auto Scaling group using the
--   DescribeScheduledActions API call. If you are no longer using a
--   scheduled action, you can delete it by calling the
--   DeleteScheduledAction API.
module Network.AWS.AutoScaling.PutScheduledUpdateGroupAction

-- | <i>See:</i> <a>newPutScheduledUpdateGroupAction</a> smart constructor.
data PutScheduledUpdateGroupAction
PutScheduledUpdateGroupAction' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe ISO8601 -> Text -> Text -> PutScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe Int

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain. It can scale beyond this capacity if you add more scaling
--   conditions.
[$sel:desiredCapacity:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe Int

-- | The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule your action in the past, Amazon EC2 Auto
--   Scaling returns an error message.
[$sel:startTime:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe ISO8601

-- | The date and time for the recurring schedule to end, in UTC.
[$sel:endTime:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe ISO8601

-- | The recurring schedule for this action. This format consists of five
--   fields separated by white spaces: [Minute] [Hour] [Day_of_Month]
--   [Month_of_Year] [Day_of_Week]. The value must be in quotes (for
--   example, <tt>"30 0 1 1,6,12 *"</tt>). For more information about this
--   format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
[$sel:recurrence:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe Text

-- | The maximum size of the Auto Scaling group.
[$sel:maxSize:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe Int

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
[$sel:timeZone:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe Text

-- | This parameter is no longer used.
[$sel:time:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Maybe ISO8601

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Text

-- | The name of this scaling action.
[$sel:scheduledActionName:PutScheduledUpdateGroupAction'] :: PutScheduledUpdateGroupAction -> Text

-- | Create a value of <a>PutScheduledUpdateGroupAction</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_minSize</a> - The minimum size of the
--   Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain. It can
--   scale beyond this capacity if you add more scaling conditions.
--   
--   <a>$sel:startTime:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_startTime</a> - The date and time for
--   this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only
--   and in quotes (for example, <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule your action in the past, Amazon EC2 Auto
--   Scaling returns an error message.
--   
--   <a>$sel:endTime:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_endTime</a> - The date and time for
--   the recurring schedule to end, in UTC.
--   
--   <a>$sel:recurrence:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_recurrence</a> - The recurring
--   schedule for this action. This format consists of five fields
--   separated by white spaces: [Minute] [Hour] [Day_of_Month]
--   [Month_of_Year] [Day_of_Week]. The value must be in quotes (for
--   example, <tt>"30 0 1 1,6,12 *"</tt>). For more information about this
--   format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
--   
--   <a>$sel:maxSize:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_maxSize</a> - The maximum size of the
--   Auto Scaling group.
--   
--   <a>$sel:timeZone:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_timeZone</a> - Specifies the time
--   zone for a cron expression. If a time zone is not provided, UTC is
--   used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
--   
--   <a>$sel:time:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_time</a> - This parameter is no
--   longer used.
--   
--   <a>$sel:autoScalingGroupName:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:scheduledActionName:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_scheduledActionName</a> - The name of
--   this scaling action.
newPutScheduledUpdateGroupAction :: Text -> Text -> PutScheduledUpdateGroupAction

-- | The minimum size of the Auto Scaling group.
putScheduledUpdateGroupAction_minSize :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain. It can scale beyond this capacity if you add more scaling
--   conditions.
putScheduledUpdateGroupAction_desiredCapacity :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule your action in the past, Amazon EC2 Auto
--   Scaling returns an error message.
putScheduledUpdateGroupAction_startTime :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
putScheduledUpdateGroupAction_endTime :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The recurring schedule for this action. This format consists of five
--   fields separated by white spaces: [Minute] [Hour] [Day_of_Month]
--   [Month_of_Year] [Day_of_Week]. The value must be in quotes (for
--   example, <tt>"30 0 1 1,6,12 *"</tt>). For more information about this
--   format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
putScheduledUpdateGroupAction_recurrence :: Lens' PutScheduledUpdateGroupAction (Maybe Text)

-- | The maximum size of the Auto Scaling group.
putScheduledUpdateGroupAction_maxSize :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
putScheduledUpdateGroupAction_timeZone :: Lens' PutScheduledUpdateGroupAction (Maybe Text)

-- | This parameter is no longer used.
putScheduledUpdateGroupAction_time :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The name of the Auto Scaling group.
putScheduledUpdateGroupAction_autoScalingGroupName :: Lens' PutScheduledUpdateGroupAction Text

-- | The name of this scaling action.
putScheduledUpdateGroupAction_scheduledActionName :: Lens' PutScheduledUpdateGroupAction Text

-- | <i>See:</i> <a>newPutScheduledUpdateGroupActionResponse</a> smart
--   constructor.
data PutScheduledUpdateGroupActionResponse
PutScheduledUpdateGroupActionResponse' :: PutScheduledUpdateGroupActionResponse

-- | Create a value of <a>PutScheduledUpdateGroupActionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutScheduledUpdateGroupActionResponse :: PutScheduledUpdateGroupActionResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance GHC.Show.Show Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance GHC.Read.Read Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupActionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupActionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupActionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.PutScheduledUpdateGroupAction.PutScheduledUpdateGroupAction


-- | Creates or updates a scaling policy for an Auto Scaling group. Scaling
--   policies are used to scale an Auto Scaling group based on configurable
--   metrics. If no policies are defined, the dynamic scaling and
--   predictive scaling features are not used.
--   
--   For more information about using dynamic scaling, see <a>Target
--   tracking scaling policies</a> and <a>Step and simple scaling
--   policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   For more information about using predictive scaling, see <a>Predictive
--   scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   You can view the scaling policies for an Auto Scaling group using the
--   DescribePolicies API call. If you are no longer using a scaling
--   policy, you can delete it by calling the DeletePolicy API.
module Network.AWS.AutoScaling.PutScalingPolicy

-- | <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe TargetTrackingConfiguration -> Maybe [StepAdjustment] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe PredictiveScalingConfiguration -> Text -> Text -> PutScalingPolicy

-- | A target tracking scaling policy. Provides support for predefined or
--   customized metrics.
--   
--   The following predefined metrics are available:
--   
--   <ul>
--   <li><pre>ASGAverageCPUUtilization</pre></li>
--   <li><pre>ASGAverageNetworkIn</pre></li>
--   <li><pre>ASGAverageNetworkOut</pre></li>
--   <li><pre>ALBRequestCountPerTarget</pre></li>
--   </ul>
--   
--   If you specify <tt>ALBRequestCountPerTarget</tt> for the metric, you
--   must specify the <tt>ResourceLabel</tt> parameter with the
--   <tt>PredefinedMetricSpecification</tt>.
--   
--   For more information, see <a>TargetTrackingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>TargetTrackingScaling</tt>.
[$sel:targetTrackingConfiguration:PutScalingPolicy'] :: PutScalingPolicy -> Maybe TargetTrackingConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   Required if the policy type is <tt>StepScaling</tt>. (Not used with
--   any other policy type.)
[$sel:stepAdjustments:PutScalingPolicy'] :: PutScalingPolicy -> Maybe [StepAdjustment]

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   Valid only if the policy type is <tt>StepScaling</tt>.
[$sel:metricAggregationType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Text

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
[$sel:policyType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Text

-- | Indicates whether the scaling policy is enabled or disabled. The
--   default is enabled. For more information, see <a>Disabling a scaling
--   policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
[$sel:enabled:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Bool

-- | The duration of the policy's cooldown period, in seconds. When a
--   cooldown period is specified here, it overrides the default cooldown
--   period defined for the Auto Scaling group.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:cooldown:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
--   
--   Required if the policy type is <tt>SimpleScaling</tt>. (Not used with
--   any other policy type.)
[$sel:scalingAdjustment:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
--   
--   Required if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:adjustmentType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Text

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
[$sel:minAdjustmentStep:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. If not provided, the default is
--   to use the value from the default cooldown period for the Auto Scaling
--   group.
--   
--   Valid only if the policy type is <tt>TargetTrackingScaling</tt> or
--   <tt>StepScaling</tt>.
[$sel:estimatedInstanceWarmup:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Auto Scaling group by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the group
--   has 4 instances and the scaling policy is performed, 25 percent of 4
--   is 1. However, because you specified a <tt>MinAdjustmentMagnitude</tt>
--   of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
--   
--   Valid only if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Some Auto Scaling groups use instance weights. In this case, set the
--   <tt>MinAdjustmentMagnitude</tt> to a value that is at least as large
--   as your largest instance weight.
[$sel:minAdjustmentMagnitude:PutScalingPolicy'] :: PutScalingPolicy -> Maybe Int

-- | A predictive scaling policy. Provides support for only predefined
--   metrics.
--   
--   Predictive scaling works with CPU utilization, network in/out, and the
--   Application Load Balancer request count.
--   
--   For more information, see <a>PredictiveScalingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>PredictiveScaling</tt>.
[$sel:predictiveScalingConfiguration:PutScalingPolicy'] :: PutScalingPolicy -> Maybe PredictiveScalingConfiguration

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | The name of the policy.
[$sel:policyName:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetTrackingConfiguration</a> - A target
--   tracking scaling policy. Provides support for predefined or customized
--   metrics.
--   
--   The following predefined metrics are available:
--   
--   <ul>
--   <li><pre>ASGAverageCPUUtilization</pre></li>
--   <li><pre>ASGAverageNetworkIn</pre></li>
--   <li><pre>ASGAverageNetworkOut</pre></li>
--   <li><pre>ALBRequestCountPerTarget</pre></li>
--   </ul>
--   
--   If you specify <tt>ALBRequestCountPerTarget</tt> for the metric, you
--   must specify the <tt>ResourceLabel</tt> parameter with the
--   <tt>PredefinedMetricSpecification</tt>.
--   
--   For more information, see <a>TargetTrackingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>TargetTrackingScaling</tt>.
--   
--   <a>$sel:stepAdjustments:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_stepAdjustments</a> - A set of adjustments that
--   enable you to scale based on the size of the alarm breach.
--   
--   Required if the policy type is <tt>StepScaling</tt>. (Not used with
--   any other policy type.)
--   
--   <a>$sel:metricAggregationType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_metricAggregationType</a> - The aggregation type
--   for the CloudWatch metrics. The valid values are <tt>Minimum</tt>,
--   <tt>Maximum</tt>, and <tt>Average</tt>. If the aggregation type is
--   null, the value is treated as <tt>Average</tt>.
--   
--   Valid only if the policy type is <tt>StepScaling</tt>.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - One of the following policy
--   types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   <a>$sel:enabled:PutScalingPolicy'</a>, <a>putScalingPolicy_enabled</a>
--   - Indicates whether the scaling policy is enabled or disabled. The
--   default is enabled. For more information, see <a>Disabling a scaling
--   policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:cooldown:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_cooldown</a> - The duration of the policy's
--   cooldown period, in seconds. When a cooldown period is specified here,
--   it overrides the default cooldown period defined for the Auto Scaling
--   group.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:scalingAdjustment:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity. For exact capacity, you must specify a positive
--   value.
--   
--   Required if the policy type is <tt>SimpleScaling</tt>. (Not used with
--   any other policy type.)
--   
--   <a>$sel:adjustmentType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_adjustmentType</a> - Specifies how the scaling
--   adjustment is interpreted (for example, an absolute number or a
--   percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   Required if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:minAdjustmentStep:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_minAdjustmentStep</a> - Available for backward
--   compatibility. Use <tt>MinAdjustmentMagnitude</tt> instead.
--   
--   <a>$sel:estimatedInstanceWarmup:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_estimatedInstanceWarmup</a> - The estimated time,
--   in seconds, until a newly launched instance can contribute to the
--   CloudWatch metrics. If not provided, the default is to use the value
--   from the default cooldown period for the Auto Scaling group.
--   
--   Valid only if the policy type is <tt>TargetTrackingScaling</tt> or
--   <tt>StepScaling</tt>.
--   
--   <a>$sel:minAdjustmentMagnitude:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_minAdjustmentMagnitude</a> - The minimum value to
--   scale by when the adjustment type is <tt>PercentChangeInCapacity</tt>.
--   For example, suppose that you create a step scaling policy to scale
--   out an Auto Scaling group by 25 percent and you specify a
--   <tt>MinAdjustmentMagnitude</tt> of 2. If the group has 4 instances and
--   the scaling policy is performed, 25 percent of 4 is 1. However,
--   because you specified a <tt>MinAdjustmentMagnitude</tt> of 2, Amazon
--   EC2 Auto Scaling scales out the group by 2 instances.
--   
--   Valid only if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Some Auto Scaling groups use instance weights. In this case, set the
--   <tt>MinAdjustmentMagnitude</tt> to a value that is at least as large
--   as your largest instance weight.
--   
--   <a>$sel:predictiveScalingConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_predictiveScalingConfiguration</a> - A predictive
--   scaling policy. Provides support for only predefined metrics.
--   
--   Predictive scaling works with CPU utilization, network in/out, and the
--   Application Load Balancer request count.
--   
--   For more information, see <a>PredictiveScalingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>PredictiveScaling</tt>.
--   
--   <a>$sel:autoScalingGroupName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyName</a> - The name of the policy.
newPutScalingPolicy :: Text -> Text -> PutScalingPolicy

-- | A target tracking scaling policy. Provides support for predefined or
--   customized metrics.
--   
--   The following predefined metrics are available:
--   
--   <ul>
--   <li><pre>ASGAverageCPUUtilization</pre></li>
--   <li><pre>ASGAverageNetworkIn</pre></li>
--   <li><pre>ASGAverageNetworkOut</pre></li>
--   <li><pre>ALBRequestCountPerTarget</pre></li>
--   </ul>
--   
--   If you specify <tt>ALBRequestCountPerTarget</tt> for the metric, you
--   must specify the <tt>ResourceLabel</tt> parameter with the
--   <tt>PredefinedMetricSpecification</tt>.
--   
--   For more information, see <a>TargetTrackingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>TargetTrackingScaling</tt>.
putScalingPolicy_targetTrackingConfiguration :: Lens' PutScalingPolicy (Maybe TargetTrackingConfiguration)

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   Required if the policy type is <tt>StepScaling</tt>. (Not used with
--   any other policy type.)
putScalingPolicy_stepAdjustments :: Lens' PutScalingPolicy (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   Valid only if the policy type is <tt>StepScaling</tt>.
putScalingPolicy_metricAggregationType :: Lens' PutScalingPolicy (Maybe Text)

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe Text)

-- | Indicates whether the scaling policy is enabled or disabled. The
--   default is enabled. For more information, see <a>Disabling a scaling
--   policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
putScalingPolicy_enabled :: Lens' PutScalingPolicy (Maybe Bool)

-- | The duration of the policy's cooldown period, in seconds. When a
--   cooldown period is specified here, it overrides the default cooldown
--   period defined for the Auto Scaling group.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
putScalingPolicy_cooldown :: Lens' PutScalingPolicy (Maybe Int)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
--   
--   Required if the policy type is <tt>SimpleScaling</tt>. (Not used with
--   any other policy type.)
putScalingPolicy_scalingAdjustment :: Lens' PutScalingPolicy (Maybe Int)

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
--   
--   Required if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
putScalingPolicy_adjustmentType :: Lens' PutScalingPolicy (Maybe Text)

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
putScalingPolicy_minAdjustmentStep :: Lens' PutScalingPolicy (Maybe Int)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. If not provided, the default is
--   to use the value from the default cooldown period for the Auto Scaling
--   group.
--   
--   Valid only if the policy type is <tt>TargetTrackingScaling</tt> or
--   <tt>StepScaling</tt>.
putScalingPolicy_estimatedInstanceWarmup :: Lens' PutScalingPolicy (Maybe Int)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Auto Scaling group by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the group
--   has 4 instances and the scaling policy is performed, 25 percent of 4
--   is 1. However, because you specified a <tt>MinAdjustmentMagnitude</tt>
--   of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
--   
--   Valid only if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Some Auto Scaling groups use instance weights. In this case, set the
--   <tt>MinAdjustmentMagnitude</tt> to a value that is at least as large
--   as your largest instance weight.
putScalingPolicy_minAdjustmentMagnitude :: Lens' PutScalingPolicy (Maybe Int)

-- | A predictive scaling policy. Provides support for only predefined
--   metrics.
--   
--   Predictive scaling works with CPU utilization, network in/out, and the
--   Application Load Balancer request count.
--   
--   For more information, see <a>PredictiveScalingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>PredictiveScaling</tt>.
putScalingPolicy_predictiveScalingConfiguration :: Lens' PutScalingPolicy (Maybe PredictiveScalingConfiguration)

-- | The name of the Auto Scaling group.
putScalingPolicy_autoScalingGroupName :: Lens' PutScalingPolicy Text

-- | The name of the policy.
putScalingPolicy_policyName :: Lens' PutScalingPolicy Text

-- | Contains the output of PutScalingPolicy.
--   
--   <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe [Alarm] -> Maybe Text -> Int -> PutScalingPolicyResponse

-- | The CloudWatch alarms created for the target tracking scaling policy.
[$sel:alarms:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Maybe [Alarm]

-- | The Amazon Resource Name (ARN) of the policy.
[$sel:policyARN:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Int

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarms:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_alarms</a> - The CloudWatch alarms created
--   for the target tracking scaling policy.
--   
--   <a>$sel:policyARN:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_policyARN</a> - The Amazon Resource Name
--   (ARN) of the policy.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutScalingPolicyResponse :: Int -> PutScalingPolicyResponse

-- | The CloudWatch alarms created for the target tracking scaling policy.
putScalingPolicyResponse_alarms :: Lens' PutScalingPolicyResponse (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the policy.
putScalingPolicyResponse_policyARN :: Lens' PutScalingPolicyResponse (Maybe Text)

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Show.Show Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Read.Read Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Show.Show Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Read.Read Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.PutScalingPolicy.PutScalingPolicy


-- | Configures an Auto Scaling group to send notifications when specified
--   events take place. Subscribers to the specified topic can have
--   messages delivered to an endpoint such as a web server or an email
--   address.
--   
--   This configuration overwrites any existing configuration.
--   
--   For more information, see <a>Getting Amazon SNS notifications when
--   your Auto Scaling group scales</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you exceed your maximum limit of SNS topics, which is 10 per Auto
--   Scaling group, the call fails.
module Network.AWS.AutoScaling.PutNotificationConfiguration

-- | <i>See:</i> <a>newPutNotificationConfiguration</a> smart constructor.
data PutNotificationConfiguration
PutNotificationConfiguration' :: Text -> Text -> [Text] -> PutNotificationConfiguration

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:PutNotificationConfiguration'] :: PutNotificationConfiguration -> Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
[$sel:topicARN:PutNotificationConfiguration'] :: PutNotificationConfiguration -> Text

-- | The type of event that causes the notification to be sent. To query
--   the notification types supported by Amazon EC2 Auto Scaling, call the
--   DescribeAutoScalingNotificationTypes API.
[$sel:notificationTypes:PutNotificationConfiguration'] :: PutNotificationConfiguration -> [Text]

-- | Create a value of <a>PutNotificationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:topicARN:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_topicARN</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
--   topic.
--   
--   <a>$sel:notificationTypes:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_notificationTypes</a> - The type of
--   event that causes the notification to be sent. To query the
--   notification types supported by Amazon EC2 Auto Scaling, call the
--   DescribeAutoScalingNotificationTypes API.
newPutNotificationConfiguration :: Text -> Text -> PutNotificationConfiguration

-- | The name of the Auto Scaling group.
putNotificationConfiguration_autoScalingGroupName :: Lens' PutNotificationConfiguration Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
putNotificationConfiguration_topicARN :: Lens' PutNotificationConfiguration Text

-- | The type of event that causes the notification to be sent. To query
--   the notification types supported by Amazon EC2 Auto Scaling, call the
--   DescribeAutoScalingNotificationTypes API.
putNotificationConfiguration_notificationTypes :: Lens' PutNotificationConfiguration [Text]

-- | <i>See:</i> <a>newPutNotificationConfigurationResponse</a> smart
--   constructor.
data PutNotificationConfigurationResponse
PutNotificationConfigurationResponse' :: PutNotificationConfigurationResponse

-- | Create a value of <a>PutNotificationConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutNotificationConfigurationResponse :: PutNotificationConfigurationResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfigurationResponse
instance GHC.Show.Show Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfigurationResponse
instance GHC.Read.Read Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfigurationResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.PutNotificationConfiguration.PutNotificationConfiguration


-- | Creates or updates a lifecycle hook for the specified Auto Scaling
--   group.
--   
--   A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on
--   an instance when the instance launches (before it is put into service)
--   or as the instance terminates (before it is fully terminated).
--   
--   This step is a part of the procedure for adding a lifecycle hook to an
--   Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>__Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.__</li>
--   <li>If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state using the
--   RecordLifecycleActionHeartbeat API call.</li>
--   <li>If you finish before the timeout period ends, complete the
--   lifecycle action using the CompleteLifecycleAction API call.</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you exceed your maximum limit of lifecycle hooks, which by default
--   is 50 per Auto Scaling group, the call fails.
--   
--   You can view the lifecycle hooks for an Auto Scaling group using the
--   DescribeLifecycleHooks API call. If you are no longer using a
--   lifecycle hook, you can delete it by calling the DeleteLifecycleHook
--   API.
module Network.AWS.AutoScaling.PutLifecycleHook

-- | <i>See:</i> <a>newPutLifecycleHook</a> smart constructor.
data PutLifecycleHook
PutLifecycleHook' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> Text -> PutLifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
[$sel:roleARN:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Text

-- | The instance state to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
[$sel:lifecycleTransition:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Text

-- | The ARN of the notification target that Amazon EC2 Auto Scaling uses
--   to notify you when an instance is in the transition state for the
--   lifecycle hook. This target can be either an SQS queue or an SNS
--   topic.
--   
--   If you specify an empty string, this overrides the current ARN.
--   
--   This operation uses the JSON format when sending notifications to an
--   Amazon SQS queue, and an email key-value pair format when sending
--   notifications to an Amazon SNS topic.
--   
--   When you specify a notification target, Amazon EC2 Auto Scaling sends
--   it a test message. Test messages contain the following additional
--   key-value pair: <tt>"Event": "autoscaling:TEST_NOTIFICATION"</tt>.
[$sel:notificationTargetARN:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Text

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. The range is from <tt>30</tt> to <tt>7200</tt>
--   seconds. The default value is <tt>3600</tt> seconds (1 hour).
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling the
--   RecordLifecycleActionHeartbeat API.
[$sel:heartbeatTimeout:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Int

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
[$sel:notificationMetadata:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Text

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs.
--   This parameter can be either <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
--   The default value is <tt>ABANDON</tt>.
[$sel:defaultResult:PutLifecycleHook'] :: PutLifecycleHook -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:PutLifecycleHook'] :: PutLifecycleHook -> Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:PutLifecycleHook'] :: PutLifecycleHook -> Text

-- | Create a value of <a>PutLifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:PutLifecycleHook'</a>, <a>putLifecycleHook_roleARN</a>
--   - The ARN of the IAM role that allows the Auto Scaling group to
--   publish to the specified notification target, for example, an Amazon
--   SNS topic or an Amazon SQS queue.
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
--   
--   <a>$sel:lifecycleTransition:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_lifecycleTransition</a> - The instance state to
--   which you want to attach the lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
--   
--   <a>$sel:notificationTargetARN:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_notificationTargetARN</a> - The ARN of the
--   notification target that Amazon EC2 Auto Scaling uses to notify you
--   when an instance is in the transition state for the lifecycle hook.
--   This target can be either an SQS queue or an SNS topic.
--   
--   If you specify an empty string, this overrides the current ARN.
--   
--   This operation uses the JSON format when sending notifications to an
--   Amazon SQS queue, and an email key-value pair format when sending
--   notifications to an Amazon SNS topic.
--   
--   When you specify a notification target, Amazon EC2 Auto Scaling sends
--   it a test message. Test messages contain the following additional
--   key-value pair: <tt>"Event": "autoscaling:TEST_NOTIFICATION"</tt>.
--   
--   <a>$sel:heartbeatTimeout:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_heartbeatTimeout</a> - The maximum time, in
--   seconds, that can elapse before the lifecycle hook times out. The
--   range is from <tt>30</tt> to <tt>7200</tt> seconds. The default value
--   is <tt>3600</tt> seconds (1 hour).
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling the
--   RecordLifecycleActionHeartbeat API.
--   
--   <a>$sel:notificationMetadata:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_notificationMetadata</a> - Additional information
--   that you want to include any time Amazon EC2 Auto Scaling sends a
--   message to the notification target.
--   
--   <a>$sel:defaultResult:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_defaultResult</a> - Defines the action the Auto
--   Scaling group should take when the lifecycle hook timeout elapses or
--   if an unexpected failure occurs. This parameter can be either
--   <tt>CONTINUE</tt> or <tt>ABANDON</tt>. The default value is
--   <tt>ABANDON</tt>.
--   
--   <a>$sel:lifecycleHookName:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_lifecycleHookName</a> - The name of the lifecycle
--   hook.
--   
--   <a>$sel:autoScalingGroupName:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newPutLifecycleHook :: Text -> Text -> PutLifecycleHook

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
putLifecycleHook_roleARN :: Lens' PutLifecycleHook (Maybe Text)

-- | The instance state to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
putLifecycleHook_lifecycleTransition :: Lens' PutLifecycleHook (Maybe Text)

-- | The ARN of the notification target that Amazon EC2 Auto Scaling uses
--   to notify you when an instance is in the transition state for the
--   lifecycle hook. This target can be either an SQS queue or an SNS
--   topic.
--   
--   If you specify an empty string, this overrides the current ARN.
--   
--   This operation uses the JSON format when sending notifications to an
--   Amazon SQS queue, and an email key-value pair format when sending
--   notifications to an Amazon SNS topic.
--   
--   When you specify a notification target, Amazon EC2 Auto Scaling sends
--   it a test message. Test messages contain the following additional
--   key-value pair: <tt>"Event": "autoscaling:TEST_NOTIFICATION"</tt>.
putLifecycleHook_notificationTargetARN :: Lens' PutLifecycleHook (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. The range is from <tt>30</tt> to <tt>7200</tt>
--   seconds. The default value is <tt>3600</tt> seconds (1 hour).
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling the
--   RecordLifecycleActionHeartbeat API.
putLifecycleHook_heartbeatTimeout :: Lens' PutLifecycleHook (Maybe Int)

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
putLifecycleHook_notificationMetadata :: Lens' PutLifecycleHook (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs.
--   This parameter can be either <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
--   The default value is <tt>ABANDON</tt>.
putLifecycleHook_defaultResult :: Lens' PutLifecycleHook (Maybe Text)

-- | The name of the lifecycle hook.
putLifecycleHook_lifecycleHookName :: Lens' PutLifecycleHook Text

-- | The name of the Auto Scaling group.
putLifecycleHook_autoScalingGroupName :: Lens' PutLifecycleHook Text

-- | <i>See:</i> <a>newPutLifecycleHookResponse</a> smart constructor.
data PutLifecycleHookResponse
PutLifecycleHookResponse' :: Int -> PutLifecycleHookResponse

-- | The response's http status code.
[$sel:httpStatus:PutLifecycleHookResponse'] :: PutLifecycleHookResponse -> Int

-- | Create a value of <a>PutLifecycleHookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLifecycleHookResponse'</a>,
--   <a>putLifecycleHookResponse_httpStatus</a> - The response's http
--   status code.
newPutLifecycleHookResponse :: Int -> PutLifecycleHookResponse

-- | The response's http status code.
putLifecycleHookResponse_httpStatus :: Lens' PutLifecycleHookResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance GHC.Show.Show Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance GHC.Read.Read Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance GHC.Generics.Generic Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHookResponse
instance GHC.Show.Show Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHookResponse
instance GHC.Read.Read Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHookResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHookResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHookResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.PutLifecycleHook.PutLifecycleHook


-- | Retrieves the forecast data for a predictive scaling policy.
--   
--   Load forecasts are predictions of the hourly load values using
--   historical load data from CloudWatch and an analysis of historical
--   trends. Capacity forecasts are represented as predicted values for the
--   minimum capacity that is needed on an hourly basis, based on the
--   hourly load forecast.
--   
--   A minimum of 24 hours of data is required to create the initial
--   forecasts. However, having a full 14 days of historical data results
--   in more accurate forecasts.
--   
--   For more information, see <a>Predictive scaling for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.GetPredictiveScalingForecast

-- | <i>See:</i> <a>newGetPredictiveScalingForecast</a> smart constructor.
data GetPredictiveScalingForecast
GetPredictiveScalingForecast' :: Text -> Text -> ISO8601 -> ISO8601 -> GetPredictiveScalingForecast

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:GetPredictiveScalingForecast'] :: GetPredictiveScalingForecast -> Text

-- | The name of the policy.
[$sel:policyName:GetPredictiveScalingForecast'] :: GetPredictiveScalingForecast -> Text

-- | The inclusive start time of the time range for the forecast data to
--   get. At most, the date and time can be one year before the current
--   date and time.
[$sel:startTime:GetPredictiveScalingForecast'] :: GetPredictiveScalingForecast -> ISO8601

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is 30 days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   Amazon EC2 Auto Scaling only issues forecasts for periods of two days
--   in advance.
[$sel:endTime:GetPredictiveScalingForecast'] :: GetPredictiveScalingForecast -> ISO8601

-- | Create a value of <a>GetPredictiveScalingForecast</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:policyName:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_policyName</a> - The name of the
--   policy.
--   
--   <a>$sel:startTime:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_startTime</a> - The inclusive start
--   time of the time range for the forecast data to get. At most, the date
--   and time can be one year before the current date and time.
--   
--   <a>$sel:endTime:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_endTime</a> - The exclusive end time
--   of the time range for the forecast data to get. The maximum time
--   duration between the start and end time is 30 days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   Amazon EC2 Auto Scaling only issues forecasts for periods of two days
--   in advance.
newGetPredictiveScalingForecast :: Text -> Text -> UTCTime -> UTCTime -> GetPredictiveScalingForecast

-- | The name of the Auto Scaling group.
getPredictiveScalingForecast_autoScalingGroupName :: Lens' GetPredictiveScalingForecast Text

-- | The name of the policy.
getPredictiveScalingForecast_policyName :: Lens' GetPredictiveScalingForecast Text

-- | The inclusive start time of the time range for the forecast data to
--   get. At most, the date and time can be one year before the current
--   date and time.
getPredictiveScalingForecast_startTime :: Lens' GetPredictiveScalingForecast UTCTime

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is 30 days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   Amazon EC2 Auto Scaling only issues forecasts for periods of two days
--   in advance.
getPredictiveScalingForecast_endTime :: Lens' GetPredictiveScalingForecast UTCTime

-- | <i>See:</i> <a>newGetPredictiveScalingForecastResponse</a> smart
--   constructor.
data GetPredictiveScalingForecastResponse
GetPredictiveScalingForecastResponse' :: Int -> [LoadForecast] -> CapacityForecast -> ISO8601 -> GetPredictiveScalingForecastResponse

-- | The response's http status code.
[$sel:httpStatus:GetPredictiveScalingForecastResponse'] :: GetPredictiveScalingForecastResponse -> Int

-- | The load forecast.
[$sel:loadForecast:GetPredictiveScalingForecastResponse'] :: GetPredictiveScalingForecastResponse -> [LoadForecast]

-- | The capacity forecast.
[$sel:capacityForecast:GetPredictiveScalingForecastResponse'] :: GetPredictiveScalingForecastResponse -> CapacityForecast

-- | The time the forecast was made.
[$sel:updateTime:GetPredictiveScalingForecastResponse'] :: GetPredictiveScalingForecastResponse -> ISO8601

-- | Create a value of <a>GetPredictiveScalingForecastResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:loadForecast:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_loadForecast</a> - The load
--   forecast.
--   
--   <a>$sel:capacityForecast:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_capacityForecast</a> - The
--   capacity forecast.
--   
--   <a>$sel:updateTime:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_updateTime</a> - The time the
--   forecast was made.
newGetPredictiveScalingForecastResponse :: Int -> CapacityForecast -> UTCTime -> GetPredictiveScalingForecastResponse

-- | The response's http status code.
getPredictiveScalingForecastResponse_httpStatus :: Lens' GetPredictiveScalingForecastResponse Int

-- | The load forecast.
getPredictiveScalingForecastResponse_loadForecast :: Lens' GetPredictiveScalingForecastResponse [LoadForecast]

-- | The capacity forecast.
getPredictiveScalingForecastResponse_capacityForecast :: Lens' GetPredictiveScalingForecastResponse CapacityForecast

-- | The time the forecast was made.
getPredictiveScalingForecastResponse_updateTime :: Lens' GetPredictiveScalingForecastResponse UTCTime
instance GHC.Generics.Generic Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance GHC.Show.Show Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance GHC.Read.Read Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance GHC.Classes.Eq Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance GHC.Generics.Generic Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecastResponse
instance GHC.Show.Show Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecastResponse
instance GHC.Read.Read Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecastResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecastResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecastResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.GetPredictiveScalingForecast.GetPredictiveScalingForecast


-- | Moves the specified instances out of the standby state.
--   
--   After you put the instances back in service, the desired capacity is
--   incremented.
--   
--   For more information, see <a>Temporarily removing instances from your
--   Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
module Network.AWS.AutoScaling.ExitStandby

-- | <i>See:</i> <a>newExitStandby</a> smart constructor.
data ExitStandby
ExitStandby' :: Maybe [Text] -> Text -> ExitStandby

-- | The IDs of the instances. You can specify up to 20 instances.
[$sel:instanceIds:ExitStandby'] :: ExitStandby -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ExitStandby'] :: ExitStandby -> Text

-- | Create a value of <a>ExitStandby</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:ExitStandby'</a>, <a>exitStandby_instanceIds</a> -
--   The IDs of the instances. You can specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:ExitStandby'</a>,
--   <a>exitStandby_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
newExitStandby :: Text -> ExitStandby

-- | The IDs of the instances. You can specify up to 20 instances.
exitStandby_instanceIds :: Lens' ExitStandby (Maybe [Text])

-- | The name of the Auto Scaling group.
exitStandby_autoScalingGroupName :: Lens' ExitStandby Text

-- | <i>See:</i> <a>newExitStandbyResponse</a> smart constructor.
data ExitStandbyResponse
ExitStandbyResponse' :: Maybe [Activity] -> Int -> ExitStandbyResponse

-- | The activities related to moving instances out of <tt>Standby</tt>
--   mode.
[$sel:activities:ExitStandbyResponse'] :: ExitStandbyResponse -> Maybe [Activity]

-- | The response's http status code.
[$sel:httpStatus:ExitStandbyResponse'] :: ExitStandbyResponse -> Int

-- | Create a value of <a>ExitStandbyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:ExitStandbyResponse'</a>,
--   <a>exitStandbyResponse_activities</a> - The activities related to
--   moving instances out of <tt>Standby</tt> mode.
--   
--   <a>$sel:httpStatus:ExitStandbyResponse'</a>,
--   <a>exitStandbyResponse_httpStatus</a> - The response's http status
--   code.
newExitStandbyResponse :: Int -> ExitStandbyResponse

-- | The activities related to moving instances out of <tt>Standby</tt>
--   mode.
exitStandbyResponse_activities :: Lens' ExitStandbyResponse (Maybe [Activity])

-- | The response's http status code.
exitStandbyResponse_httpStatus :: Lens' ExitStandbyResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance GHC.Show.Show Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance GHC.Read.Read Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance GHC.Classes.Eq Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance GHC.Generics.Generic Network.AWS.AutoScaling.ExitStandby.ExitStandbyResponse
instance GHC.Show.Show Network.AWS.AutoScaling.ExitStandby.ExitStandbyResponse
instance GHC.Read.Read Network.AWS.AutoScaling.ExitStandby.ExitStandbyResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.ExitStandby.ExitStandbyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ExitStandby.ExitStandbyResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.ExitStandby.ExitStandby
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.ExitStandby.ExitStandby


-- | Executes the specified policy. This can be useful for testing the
--   design of your scaling policy.
module Network.AWS.AutoScaling.ExecutePolicy

-- | <i>See:</i> <a>newExecutePolicy</a> smart constructor.
data ExecutePolicy
ExecutePolicy' :: Maybe Double -> Maybe Double -> Maybe Bool -> Maybe Text -> Text -> ExecutePolicy

-- | The metric value to compare to <tt>BreachThreshold</tt>. This enables
--   you to execute a policy of type <tt>StepScaling</tt> and determine
--   which step adjustment to use. For example, if the breach threshold is
--   50 and you want to use a step adjustment with a lower bound of 0 and
--   an upper bound of 10, you can set the metric value to 59.
--   
--   If you specify a metric value that doesn't correspond to a step
--   adjustment for the policy, the call returns an error.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
[$sel:metricValue:ExecutePolicy'] :: ExecutePolicy -> Maybe Double

-- | The breach threshold for the alarm.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
[$sel:breachThreshold:ExecutePolicy'] :: ExecutePolicy -> Maybe Double

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before executing the policy.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:honorCooldown:ExecutePolicy'] :: ExecutePolicy -> Maybe Bool

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:ExecutePolicy'] :: ExecutePolicy -> Maybe Text

-- | The name or ARN of the policy.
[$sel:policyName:ExecutePolicy'] :: ExecutePolicy -> Text

-- | Create a value of <a>ExecutePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricValue:ExecutePolicy'</a>,
--   <a>executePolicy_metricValue</a> - The metric value to compare to
--   <tt>BreachThreshold</tt>. This enables you to execute a policy of type
--   <tt>StepScaling</tt> and determine which step adjustment to use. For
--   example, if the breach threshold is 50 and you want to use a step
--   adjustment with a lower bound of 0 and an upper bound of 10, you can
--   set the metric value to 59.
--   
--   If you specify a metric value that doesn't correspond to a step
--   adjustment for the policy, the call returns an error.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
--   
--   <a>$sel:breachThreshold:ExecutePolicy'</a>,
--   <a>executePolicy_breachThreshold</a> - The breach threshold for the
--   alarm.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
--   
--   <a>$sel:honorCooldown:ExecutePolicy'</a>,
--   <a>executePolicy_honorCooldown</a> - Indicates whether Amazon EC2 Auto
--   Scaling waits for the cooldown period to complete before executing the
--   policy.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:ExecutePolicy'</a>,
--   <a>executePolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:ExecutePolicy'</a>, <a>executePolicy_policyName</a>
--   - The name or ARN of the policy.
newExecutePolicy :: Text -> ExecutePolicy

-- | The metric value to compare to <tt>BreachThreshold</tt>. This enables
--   you to execute a policy of type <tt>StepScaling</tt> and determine
--   which step adjustment to use. For example, if the breach threshold is
--   50 and you want to use a step adjustment with a lower bound of 0 and
--   an upper bound of 10, you can set the metric value to 59.
--   
--   If you specify a metric value that doesn't correspond to a step
--   adjustment for the policy, the call returns an error.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
executePolicy_metricValue :: Lens' ExecutePolicy (Maybe Double)

-- | The breach threshold for the alarm.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
executePolicy_breachThreshold :: Lens' ExecutePolicy (Maybe Double)

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before executing the policy.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
executePolicy_honorCooldown :: Lens' ExecutePolicy (Maybe Bool)

-- | The name of the Auto Scaling group.
executePolicy_autoScalingGroupName :: Lens' ExecutePolicy (Maybe Text)

-- | The name or ARN of the policy.
executePolicy_policyName :: Lens' ExecutePolicy Text

-- | <i>See:</i> <a>newExecutePolicyResponse</a> smart constructor.
data ExecutePolicyResponse
ExecutePolicyResponse' :: ExecutePolicyResponse

-- | Create a value of <a>ExecutePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newExecutePolicyResponse :: ExecutePolicyResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance GHC.Show.Show Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance GHC.Read.Read Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance GHC.Classes.Eq Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance GHC.Generics.Generic Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicyResponse
instance GHC.Show.Show Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicyResponse
instance GHC.Read.Read Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicyResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.ExecutePolicy.ExecutePolicy


-- | Moves the specified instances into the standby state.
--   
--   If you choose to decrement the desired capacity of the Auto Scaling
--   group, the instances can enter standby as long as the desired capacity
--   of the Auto Scaling group after the instances are placed into standby
--   is equal to or greater than the minimum capacity of the group.
--   
--   If you choose not to decrement the desired capacity of the Auto
--   Scaling group, the Auto Scaling group launches new instances to
--   replace the instances on standby.
--   
--   For more information, see <a>Temporarily removing instances from your
--   Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
module Network.AWS.AutoScaling.EnterStandby

-- | <i>See:</i> <a>newEnterStandby</a> smart constructor.
data EnterStandby
EnterStandby' :: Maybe [Text] -> Text -> Bool -> EnterStandby

-- | The IDs of the instances. You can specify up to 20 instances.
[$sel:instanceIds:EnterStandby'] :: EnterStandby -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:EnterStandby'] :: EnterStandby -> Text

-- | Indicates whether to decrement the desired capacity of the Auto
--   Scaling group by the number of instances moved to <tt>Standby</tt>
--   mode.
[$sel:shouldDecrementDesiredCapacity:EnterStandby'] :: EnterStandby -> Bool

-- | Create a value of <a>EnterStandby</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:EnterStandby'</a>, <a>enterStandby_instanceIds</a>
--   - The IDs of the instances. You can specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:EnterStandby'</a>,
--   <a>enterStandby_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:shouldDecrementDesiredCapacity:EnterStandby'</a>,
--   <a>enterStandby_shouldDecrementDesiredCapacity</a> - Indicates whether
--   to decrement the desired capacity of the Auto Scaling group by the
--   number of instances moved to <tt>Standby</tt> mode.
newEnterStandby :: Text -> Bool -> EnterStandby

-- | The IDs of the instances. You can specify up to 20 instances.
enterStandby_instanceIds :: Lens' EnterStandby (Maybe [Text])

-- | The name of the Auto Scaling group.
enterStandby_autoScalingGroupName :: Lens' EnterStandby Text

-- | Indicates whether to decrement the desired capacity of the Auto
--   Scaling group by the number of instances moved to <tt>Standby</tt>
--   mode.
enterStandby_shouldDecrementDesiredCapacity :: Lens' EnterStandby Bool

-- | <i>See:</i> <a>newEnterStandbyResponse</a> smart constructor.
data EnterStandbyResponse
EnterStandbyResponse' :: Maybe [Activity] -> Int -> EnterStandbyResponse

-- | The activities related to moving instances into <tt>Standby</tt> mode.
[$sel:activities:EnterStandbyResponse'] :: EnterStandbyResponse -> Maybe [Activity]

-- | The response's http status code.
[$sel:httpStatus:EnterStandbyResponse'] :: EnterStandbyResponse -> Int

-- | Create a value of <a>EnterStandbyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:EnterStandbyResponse'</a>,
--   <a>enterStandbyResponse_activities</a> - The activities related to
--   moving instances into <tt>Standby</tt> mode.
--   
--   <a>$sel:httpStatus:EnterStandbyResponse'</a>,
--   <a>enterStandbyResponse_httpStatus</a> - The response's http status
--   code.
newEnterStandbyResponse :: Int -> EnterStandbyResponse

-- | The activities related to moving instances into <tt>Standby</tt> mode.
enterStandbyResponse_activities :: Lens' EnterStandbyResponse (Maybe [Activity])

-- | The response's http status code.
enterStandbyResponse_httpStatus :: Lens' EnterStandbyResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance GHC.Show.Show Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance GHC.Read.Read Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance GHC.Classes.Eq Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance GHC.Generics.Generic Network.AWS.AutoScaling.EnterStandby.EnterStandbyResponse
instance GHC.Show.Show Network.AWS.AutoScaling.EnterStandby.EnterStandbyResponse
instance GHC.Read.Read Network.AWS.AutoScaling.EnterStandby.EnterStandbyResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.EnterStandby.EnterStandbyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.EnterStandby.EnterStandbyResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.EnterStandby.EnterStandby
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.EnterStandby.EnterStandby


-- | Enables group metrics for the specified Auto Scaling group. For more
--   information, see <a>Monitoring CloudWatch metrics for your Auto
--   Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
module Network.AWS.AutoScaling.EnableMetricsCollection

-- | <i>See:</i> <a>newEnableMetricsCollection</a> smart constructor.
data EnableMetricsCollection
EnableMetricsCollection' :: Maybe [Text] -> Text -> Text -> EnableMetricsCollection

-- | Specifies which group-level metrics to start collecting. You can
--   specify one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   </ul>
--   
--   The instance weighting feature supports the following additional
--   metrics:
--   
--   <ul>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   </ul>
--   
--   The warm pools feature supports the following additional metrics:
--   
--   <ul>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are enabled.
[$sel:metrics:EnableMetricsCollection'] :: EnableMetricsCollection -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:EnableMetricsCollection'] :: EnableMetricsCollection -> Text

-- | The granularity to associate with the metrics to collect. The only
--   valid value is <tt>1Minute</tt>.
[$sel:granularity:EnableMetricsCollection'] :: EnableMetricsCollection -> Text

-- | Create a value of <a>EnableMetricsCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_metrics</a> - Specifies which group-level
--   metrics to start collecting. You can specify one or more of the
--   following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   </ul>
--   
--   The instance weighting feature supports the following additional
--   metrics:
--   
--   <ul>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   </ul>
--   
--   The warm pools feature supports the following additional metrics:
--   
--   <ul>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are enabled.
--   
--   <a>$sel:autoScalingGroupName:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:granularity:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_granularity</a> - The granularity to
--   associate with the metrics to collect. The only valid value is
--   <tt>1Minute</tt>.
newEnableMetricsCollection :: Text -> Text -> EnableMetricsCollection

-- | Specifies which group-level metrics to start collecting. You can
--   specify one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   </ul>
--   
--   The instance weighting feature supports the following additional
--   metrics:
--   
--   <ul>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   </ul>
--   
--   The warm pools feature supports the following additional metrics:
--   
--   <ul>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are enabled.
enableMetricsCollection_metrics :: Lens' EnableMetricsCollection (Maybe [Text])

-- | The name of the Auto Scaling group.
enableMetricsCollection_autoScalingGroupName :: Lens' EnableMetricsCollection Text

-- | The granularity to associate with the metrics to collect. The only
--   valid value is <tt>1Minute</tt>.
enableMetricsCollection_granularity :: Lens' EnableMetricsCollection Text

-- | <i>See:</i> <a>newEnableMetricsCollectionResponse</a> smart
--   constructor.
data EnableMetricsCollectionResponse
EnableMetricsCollectionResponse' :: EnableMetricsCollectionResponse

-- | Create a value of <a>EnableMetricsCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableMetricsCollectionResponse :: EnableMetricsCollectionResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance GHC.Show.Show Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance GHC.Read.Read Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance GHC.Classes.Eq Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance GHC.Generics.Generic Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollectionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollectionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollectionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.EnableMetricsCollection.EnableMetricsCollection


-- | Disables group metrics for the specified Auto Scaling group.
module Network.AWS.AutoScaling.DisableMetricsCollection

-- | <i>See:</i> <a>newDisableMetricsCollection</a> smart constructor.
data DisableMetricsCollection
DisableMetricsCollection' :: Maybe [Text] -> Text -> DisableMetricsCollection

-- | Specifies one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are disabled.
[$sel:metrics:DisableMetricsCollection'] :: DisableMetricsCollection -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DisableMetricsCollection'] :: DisableMetricsCollection -> Text

-- | Create a value of <a>DisableMetricsCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:DisableMetricsCollection'</a>,
--   <a>disableMetricsCollection_metrics</a> - Specifies one or more of the
--   following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are disabled.
--   
--   <a>$sel:autoScalingGroupName:DisableMetricsCollection'</a>,
--   <a>disableMetricsCollection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDisableMetricsCollection :: Text -> DisableMetricsCollection

-- | Specifies one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are disabled.
disableMetricsCollection_metrics :: Lens' DisableMetricsCollection (Maybe [Text])

-- | The name of the Auto Scaling group.
disableMetricsCollection_autoScalingGroupName :: Lens' DisableMetricsCollection Text

-- | <i>See:</i> <a>newDisableMetricsCollectionResponse</a> smart
--   constructor.
data DisableMetricsCollectionResponse
DisableMetricsCollectionResponse' :: DisableMetricsCollectionResponse

-- | Create a value of <a>DisableMetricsCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableMetricsCollectionResponse :: DisableMetricsCollectionResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance GHC.Show.Show Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance GHC.Read.Read Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance GHC.Classes.Eq Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance GHC.Generics.Generic Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollectionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollectionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollectionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DisableMetricsCollection.DisableMetricsCollection


-- | Detaches one or more Classic Load Balancers from the specified Auto
--   Scaling group.
--   
--   This operation detaches only Classic Load Balancers. If you have
--   Application Load Balancers, Network Load Balancers, or Gateway Load
--   Balancers, use the DetachLoadBalancerTargetGroups API instead.
--   
--   When you detach a load balancer, it enters the <tt>Removing</tt> state
--   while deregistering the instances in the group. When all instances are
--   deregistered, then you can no longer describe the load balancer using
--   the DescribeLoadBalancers API call. The instances remain running.
module Network.AWS.AutoScaling.DetachLoadBalancers

-- | <i>See:</i> <a>newDetachLoadBalancers</a> smart constructor.
data DetachLoadBalancers
DetachLoadBalancers' :: Text -> [Text] -> DetachLoadBalancers

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DetachLoadBalancers'] :: DetachLoadBalancers -> Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
[$sel:loadBalancerNames:DetachLoadBalancers'] :: DetachLoadBalancers -> [Text]

-- | Create a value of <a>DetachLoadBalancers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DetachLoadBalancers'</a>,
--   <a>detachLoadBalancers_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:loadBalancerNames:DetachLoadBalancers'</a>,
--   <a>detachLoadBalancers_loadBalancerNames</a> - The names of the load
--   balancers. You can specify up to 10 load balancers.
newDetachLoadBalancers :: Text -> DetachLoadBalancers

-- | The name of the Auto Scaling group.
detachLoadBalancers_autoScalingGroupName :: Lens' DetachLoadBalancers Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
detachLoadBalancers_loadBalancerNames :: Lens' DetachLoadBalancers [Text]

-- | <i>See:</i> <a>newDetachLoadBalancersResponse</a> smart constructor.
data DetachLoadBalancersResponse
DetachLoadBalancersResponse' :: Int -> DetachLoadBalancersResponse

-- | The response's http status code.
[$sel:httpStatus:DetachLoadBalancersResponse'] :: DetachLoadBalancersResponse -> Int

-- | Create a value of <a>DetachLoadBalancersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachLoadBalancersResponse'</a>,
--   <a>detachLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDetachLoadBalancersResponse :: Int -> DetachLoadBalancersResponse

-- | The response's http status code.
detachLoadBalancersResponse_httpStatus :: Lens' DetachLoadBalancersResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance GHC.Show.Show Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance GHC.Read.Read Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancersResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancersResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancersResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancersResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DetachLoadBalancers.DetachLoadBalancers


-- | Detaches one or more target groups from the specified Auto Scaling
--   group.
module Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups

-- | <i>See:</i> <a>newDetachLoadBalancerTargetGroups</a> smart
--   constructor.
data DetachLoadBalancerTargetGroups
DetachLoadBalancerTargetGroups' :: Text -> [Text] -> DetachLoadBalancerTargetGroups

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DetachLoadBalancerTargetGroups'] :: DetachLoadBalancerTargetGroups -> Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups.
[$sel:targetGroupARNs:DetachLoadBalancerTargetGroups'] :: DetachLoadBalancerTargetGroups -> [Text]

-- | Create a value of <a>DetachLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DetachLoadBalancerTargetGroups'</a>,
--   <a>detachLoadBalancerTargetGroups_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:targetGroupARNs:DetachLoadBalancerTargetGroups'</a>,
--   <a>detachLoadBalancerTargetGroups_targetGroupARNs</a> - The Amazon
--   Resource Names (ARN) of the target groups. You can specify up to 10
--   target groups.
newDetachLoadBalancerTargetGroups :: Text -> DetachLoadBalancerTargetGroups

-- | The name of the Auto Scaling group.
detachLoadBalancerTargetGroups_autoScalingGroupName :: Lens' DetachLoadBalancerTargetGroups Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups.
detachLoadBalancerTargetGroups_targetGroupARNs :: Lens' DetachLoadBalancerTargetGroups [Text]

-- | <i>See:</i> <a>newDetachLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data DetachLoadBalancerTargetGroupsResponse
DetachLoadBalancerTargetGroupsResponse' :: Int -> DetachLoadBalancerTargetGroupsResponse

-- | The response's http status code.
[$sel:httpStatus:DetachLoadBalancerTargetGroupsResponse'] :: DetachLoadBalancerTargetGroupsResponse -> Int

-- | Create a value of <a>DetachLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachLoadBalancerTargetGroupsResponse'</a>,
--   <a>detachLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDetachLoadBalancerTargetGroupsResponse :: Int -> DetachLoadBalancerTargetGroupsResponse

-- | The response's http status code.
detachLoadBalancerTargetGroupsResponse_httpStatus :: Lens' DetachLoadBalancerTargetGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance GHC.Show.Show Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance GHC.Read.Read Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroupsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroupsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroupsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroupsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DetachLoadBalancerTargetGroups.DetachLoadBalancerTargetGroups


-- | Removes one or more instances from the specified Auto Scaling group.
--   
--   After the instances are detached, you can manage them independent of
--   the Auto Scaling group.
--   
--   If you do not specify the option to decrement the desired capacity,
--   Amazon EC2 Auto Scaling launches instances to replace the ones that
--   are detached.
--   
--   If there is a Classic Load Balancer attached to the Auto Scaling
--   group, the instances are deregistered from the load balancer. If there
--   are target groups attached to the Auto Scaling group, the instances
--   are deregistered from the target groups.
--   
--   For more information, see <a>Detach EC2 instances from your Auto
--   Scaling group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.DetachInstances

-- | <i>See:</i> <a>newDetachInstances</a> smart constructor.
data DetachInstances
DetachInstances' :: Maybe [Text] -> Text -> Bool -> DetachInstances

-- | The IDs of the instances. You can specify up to 20 instances.
[$sel:instanceIds:DetachInstances'] :: DetachInstances -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DetachInstances'] :: DetachInstances -> Text

-- | Indicates whether the Auto Scaling group decrements the desired
--   capacity value by the number of instances detached.
[$sel:shouldDecrementDesiredCapacity:DetachInstances'] :: DetachInstances -> Bool

-- | Create a value of <a>DetachInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DetachInstances'</a>,
--   <a>detachInstances_instanceIds</a> - The IDs of the instances. You can
--   specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:DetachInstances'</a>,
--   <a>detachInstances_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:shouldDecrementDesiredCapacity:DetachInstances'</a>,
--   <a>detachInstances_shouldDecrementDesiredCapacity</a> - Indicates
--   whether the Auto Scaling group decrements the desired capacity value
--   by the number of instances detached.
newDetachInstances :: Text -> Bool -> DetachInstances

-- | The IDs of the instances. You can specify up to 20 instances.
detachInstances_instanceIds :: Lens' DetachInstances (Maybe [Text])

-- | The name of the Auto Scaling group.
detachInstances_autoScalingGroupName :: Lens' DetachInstances Text

-- | Indicates whether the Auto Scaling group decrements the desired
--   capacity value by the number of instances detached.
detachInstances_shouldDecrementDesiredCapacity :: Lens' DetachInstances Bool

-- | <i>See:</i> <a>newDetachInstancesResponse</a> smart constructor.
data DetachInstancesResponse
DetachInstancesResponse' :: Maybe [Activity] -> Int -> DetachInstancesResponse

-- | The activities related to detaching the instances from the Auto
--   Scaling group.
[$sel:activities:DetachInstancesResponse'] :: DetachInstancesResponse -> Maybe [Activity]

-- | The response's http status code.
[$sel:httpStatus:DetachInstancesResponse'] :: DetachInstancesResponse -> Int

-- | Create a value of <a>DetachInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:DetachInstancesResponse'</a>,
--   <a>detachInstancesResponse_activities</a> - The activities related to
--   detaching the instances from the Auto Scaling group.
--   
--   <a>$sel:httpStatus:DetachInstancesResponse'</a>,
--   <a>detachInstancesResponse_httpStatus</a> - The response's http status
--   code.
newDetachInstancesResponse :: Int -> DetachInstancesResponse

-- | The activities related to detaching the instances from the Auto
--   Scaling group.
detachInstancesResponse_activities :: Lens' DetachInstancesResponse (Maybe [Activity])

-- | The response's http status code.
detachInstancesResponse_httpStatus :: Lens' DetachInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance GHC.Show.Show Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance GHC.Read.Read Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance GHC.Generics.Generic Network.AWS.AutoScaling.DetachInstances.DetachInstancesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DetachInstances.DetachInstancesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DetachInstances.DetachInstancesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DetachInstances.DetachInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachInstances.DetachInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DetachInstances.DetachInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DetachInstances.DetachInstances


-- | Gets information about a warm pool and its instances.
--   
--   For more information, see <a>Warm pools for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.DescribeWarmPool

-- | <i>See:</i> <a>newDescribeWarmPool</a> smart constructor.
data DescribeWarmPool
DescribeWarmPool' :: Maybe Text -> Maybe Int -> Text -> DescribeWarmPool

-- | The token for the next set of instances to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeWarmPool'] :: DescribeWarmPool -> Maybe Text

-- | The maximum number of instances to return with this call. The maximum
--   value is <tt>50</tt>.
[$sel:maxRecords:DescribeWarmPool'] :: DescribeWarmPool -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeWarmPool'] :: DescribeWarmPool -> Text

-- | Create a value of <a>DescribeWarmPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeWarmPool'</a>,
--   <a>describeWarmPool_nextToken</a> - The token for the next set of
--   instances to return. (You received this token from a previous call.)
--   
--   <a>$sel:maxRecords:DescribeWarmPool'</a>,
--   <a>describeWarmPool_maxRecords</a> - The maximum number of instances
--   to return with this call. The maximum value is <tt>50</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeWarmPool'</a>,
--   <a>describeWarmPool_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDescribeWarmPool :: Text -> DescribeWarmPool

-- | The token for the next set of instances to return. (You received this
--   token from a previous call.)
describeWarmPool_nextToken :: Lens' DescribeWarmPool (Maybe Text)

-- | The maximum number of instances to return with this call. The maximum
--   value is <tt>50</tt>.
describeWarmPool_maxRecords :: Lens' DescribeWarmPool (Maybe Int)

-- | The name of the Auto Scaling group.
describeWarmPool_autoScalingGroupName :: Lens' DescribeWarmPool Text

-- | <i>See:</i> <a>newDescribeWarmPoolResponse</a> smart constructor.
data DescribeWarmPoolResponse
DescribeWarmPoolResponse' :: Maybe Text -> Maybe [Instance] -> Maybe WarmPoolConfiguration -> Int -> DescribeWarmPoolResponse

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeWarmPoolResponse'] :: DescribeWarmPoolResponse -> Maybe Text

-- | The instances that are currently in the warm pool.
[$sel:instances:DescribeWarmPoolResponse'] :: DescribeWarmPoolResponse -> Maybe [Instance]

-- | The warm pool configuration details.
[$sel:warmPoolConfiguration:DescribeWarmPoolResponse'] :: DescribeWarmPoolResponse -> Maybe WarmPoolConfiguration

-- | The response's http status code.
[$sel:httpStatus:DescribeWarmPoolResponse'] :: DescribeWarmPoolResponse -> Int

-- | Create a value of <a>DescribeWarmPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeWarmPool'</a>,
--   <a>describeWarmPoolResponse_nextToken</a> - The token for the next set
--   of items to return. (You received this token from a previous call.)
--   
--   <a>$sel:instances:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_instances</a> - The instances that are
--   currently in the warm pool.
--   
--   <a>$sel:warmPoolConfiguration:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_warmPoolConfiguration</a> - The warm pool
--   configuration details.
--   
--   <a>$sel:httpStatus:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWarmPoolResponse :: Int -> DescribeWarmPoolResponse

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeWarmPoolResponse_nextToken :: Lens' DescribeWarmPoolResponse (Maybe Text)

-- | The instances that are currently in the warm pool.
describeWarmPoolResponse_instances :: Lens' DescribeWarmPoolResponse (Maybe [Instance])

-- | The warm pool configuration details.
describeWarmPoolResponse_warmPoolConfiguration :: Lens' DescribeWarmPoolResponse (Maybe WarmPoolConfiguration)

-- | The response's http status code.
describeWarmPoolResponse_httpStatus :: Lens' DescribeWarmPoolResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPoolResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPoolResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPoolResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeWarmPool.DescribeWarmPool


-- | Describes the termination policies supported by Amazon EC2 Auto
--   Scaling.
--   
--   For more information, see <a>Controlling which Auto Scaling instances
--   terminate during scale in</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
module Network.AWS.AutoScaling.DescribeTerminationPolicyTypes

-- | <i>See:</i> <a>newDescribeTerminationPolicyTypes</a> smart
--   constructor.
data DescribeTerminationPolicyTypes
DescribeTerminationPolicyTypes' :: DescribeTerminationPolicyTypes

-- | Create a value of <a>DescribeTerminationPolicyTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeTerminationPolicyTypes :: DescribeTerminationPolicyTypes

-- | <i>See:</i> <a>newDescribeTerminationPolicyTypesResponse</a> smart
--   constructor.
data DescribeTerminationPolicyTypesResponse
DescribeTerminationPolicyTypesResponse' :: Maybe [Text] -> Int -> DescribeTerminationPolicyTypesResponse

-- | The termination policies supported by Amazon EC2 Auto Scaling:
--   <tt>OldestInstance</tt>, <tt>OldestLaunchConfiguration</tt>,
--   <tt>NewestInstance</tt>, <tt>ClosestToNextInstanceHour</tt>,
--   <tt>Default</tt>, <tt>OldestLaunchTemplate</tt>, and
--   <tt>AllocationStrategy</tt>.
[$sel:terminationPolicyTypes:DescribeTerminationPolicyTypesResponse'] :: DescribeTerminationPolicyTypesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:DescribeTerminationPolicyTypesResponse'] :: DescribeTerminationPolicyTypesResponse -> Int

-- | Create a value of <a>DescribeTerminationPolicyTypesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:terminationPolicyTypes:DescribeTerminationPolicyTypesResponse'</a>,
--   <a>describeTerminationPolicyTypesResponse_terminationPolicyTypes</a> -
--   The termination policies supported by Amazon EC2 Auto Scaling:
--   <tt>OldestInstance</tt>, <tt>OldestLaunchConfiguration</tt>,
--   <tt>NewestInstance</tt>, <tt>ClosestToNextInstanceHour</tt>,
--   <tt>Default</tt>, <tt>OldestLaunchTemplate</tt>, and
--   <tt>AllocationStrategy</tt>.
--   
--   <a>$sel:httpStatus:DescribeTerminationPolicyTypesResponse'</a>,
--   <a>describeTerminationPolicyTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeTerminationPolicyTypesResponse :: Int -> DescribeTerminationPolicyTypesResponse

-- | The termination policies supported by Amazon EC2 Auto Scaling:
--   <tt>OldestInstance</tt>, <tt>OldestLaunchConfiguration</tt>,
--   <tt>NewestInstance</tt>, <tt>ClosestToNextInstanceHour</tt>,
--   <tt>Default</tt>, <tt>OldestLaunchTemplate</tt>, and
--   <tt>AllocationStrategy</tt>.
describeTerminationPolicyTypesResponse_terminationPolicyTypes :: Lens' DescribeTerminationPolicyTypesResponse (Maybe [Text])

-- | The response's http status code.
describeTerminationPolicyTypesResponse_httpStatus :: Lens' DescribeTerminationPolicyTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeTerminationPolicyTypes.DescribeTerminationPolicyTypes


-- | Describes the specified tags.
--   
--   You can use filters to limit the results. For example, you can query
--   for the tags for a specific Auto Scaling group. You can specify
--   multiple values for a filter. A tag must match at least one of the
--   specified values for it to be included in the results.
--   
--   You can also specify multiple filters. The result includes information
--   for a particular tag only if it matches all the filters. If there's no
--   match, no special message is returned.
--   
--   For more information, see <a>Tagging Auto Scaling groups and
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeTags

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Maybe Text -> Maybe [Filter] -> Maybe Int -> DescribeTags

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeTags'] :: DescribeTags -> Maybe Text

-- | One or more filters to scope the tags to return. The maximum number of
--   filters per filter type (for example, <tt>auto-scaling-group</tt>) is
--   1000.
[$sel:filters:DescribeTags'] :: DescribeTags -> Maybe [Filter]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeTags'] :: DescribeTags -> Maybe Int

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>, <a>describeTags_nextToken</a> -
--   The token for the next set of items to return. (You received this
--   token from a previous call.)
--   
--   <a>$sel:filters:DescribeTags'</a>, <a>describeTags_filters</a> - One
--   or more filters to scope the tags to return. The maximum number of
--   filters per filter type (for example, <tt>auto-scaling-group</tt>) is
--   1000.
--   
--   <a>$sel:maxRecords:DescribeTags'</a>, <a>describeTags_maxRecords</a> -
--   The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
newDescribeTags :: DescribeTags

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeTags_nextToken :: Lens' DescribeTags (Maybe Text)

-- | One or more filters to scope the tags to return. The maximum number of
--   filters per filter type (for example, <tt>auto-scaling-group</tt>) is
--   1000.
describeTags_filters :: Lens' DescribeTags (Maybe [Filter])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeTags_maxRecords :: Lens' DescribeTags (Maybe Int)

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe [TagDescription] -> Int -> DescribeTagsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe Text

-- | One or more tags.
[$sel:tags:DescribeTagsResponse'] :: DescribeTagsResponse -> Maybe [TagDescription]

-- | The response's http status code.
[$sel:httpStatus:DescribeTagsResponse'] :: DescribeTagsResponse -> Int

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>,
--   <a>describeTagsResponse_nextToken</a> - A string that indicates that
--   the response contains more items than can be returned in a single
--   response. To receive additional items, specify this string for the
--   <tt>NextToken</tt> value when requesting the next set of items. This
--   value is null when there are no more items to return.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - One or more tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeTagsResponse_nextToken :: Lens' DescribeTagsResponse (Maybe Text)

-- | One or more tags.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [TagDescription])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeTags.DescribeTagsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeTags.DescribeTagsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeTags.DescribeTagsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeTags.DescribeTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeTags.DescribeTagsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeTags.DescribeTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeTags.DescribeTags


-- | Gets information about the scheduled actions that haven't run or that
--   have not reached their end time.
--   
--   To describe the scaling activities for scheduled actions that have
--   already run, call the DescribeScalingActivities API.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeScheduledActions

-- | <i>See:</i> <a>newDescribeScheduledActions</a> smart constructor.
data DescribeScheduledActions
DescribeScheduledActions' :: Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe [Text] -> Maybe Int -> Maybe Text -> DescribeScheduledActions

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Text

-- | The earliest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
[$sel:startTime:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe ISO8601

-- | The latest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
[$sel:endTime:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe ISO8601

-- | The names of one or more scheduled actions. If you omit this
--   parameter, all scheduled actions are described. If you specify an
--   unknown scheduled action, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 actions.
[$sel:scheduledActionNames:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe [Text]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Text

-- | Create a value of <a>DescribeScheduledActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_nextToken</a> - The token for the next set
--   of items to return. (You received this token from a previous call.)
--   
--   <a>$sel:startTime:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_startTime</a> - The earliest scheduled
--   start time to return. If scheduled action names are provided, this
--   parameter is ignored.
--   
--   <a>$sel:endTime:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_endTime</a> - The latest scheduled start
--   time to return. If scheduled action names are provided, this parameter
--   is ignored.
--   
--   <a>$sel:scheduledActionNames:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scheduledActionNames</a> - The names of
--   one or more scheduled actions. If you omit this parameter, all
--   scheduled actions are described. If you specify an unknown scheduled
--   action, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 actions.
--   
--   <a>$sel:maxRecords:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeScheduledActions :: DescribeScheduledActions

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeScheduledActions_nextToken :: Lens' DescribeScheduledActions (Maybe Text)

-- | The earliest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
describeScheduledActions_startTime :: Lens' DescribeScheduledActions (Maybe UTCTime)

-- | The latest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
describeScheduledActions_endTime :: Lens' DescribeScheduledActions (Maybe UTCTime)

-- | The names of one or more scheduled actions. If you omit this
--   parameter, all scheduled actions are described. If you specify an
--   unknown scheduled action, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 actions.
describeScheduledActions_scheduledActionNames :: Lens' DescribeScheduledActions (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeScheduledActions_maxRecords :: Lens' DescribeScheduledActions (Maybe Int)

-- | The name of the Auto Scaling group.
describeScheduledActions_autoScalingGroupName :: Lens' DescribeScheduledActions (Maybe Text)

-- | <i>See:</i> <a>newDescribeScheduledActionsResponse</a> smart
--   constructor.
data DescribeScheduledActionsResponse
DescribeScheduledActionsResponse' :: Maybe Text -> Maybe [ScheduledUpdateGroupAction] -> Int -> DescribeScheduledActionsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Maybe Text

-- | The scheduled actions.
[$sel:scheduledUpdateGroupActions:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Maybe [ScheduledUpdateGroupAction]

-- | The response's http status code.
[$sel:httpStatus:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Int

-- | Create a value of <a>DescribeScheduledActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActionsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   
--   <a>$sel:scheduledUpdateGroupActions:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_scheduledUpdateGroupActions</a> -
--   The scheduled actions.
--   
--   <a>$sel:httpStatus:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScheduledActionsResponse :: Int -> DescribeScheduledActionsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeScheduledActionsResponse_nextToken :: Lens' DescribeScheduledActionsResponse (Maybe Text)

-- | The scheduled actions.
describeScheduledActionsResponse_scheduledUpdateGroupActions :: Lens' DescribeScheduledActionsResponse (Maybe [ScheduledUpdateGroupAction])

-- | The response's http status code.
describeScheduledActionsResponse_httpStatus :: Lens' DescribeScheduledActionsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeScheduledActions.DescribeScheduledActions


-- | Describes the scaling process types for use with the ResumeProcesses
--   and SuspendProcesses APIs.
module Network.AWS.AutoScaling.DescribeScalingProcessTypes

-- | <i>See:</i> <a>newDescribeScalingProcessTypes</a> smart constructor.
data DescribeScalingProcessTypes
DescribeScalingProcessTypes' :: DescribeScalingProcessTypes

-- | Create a value of <a>DescribeScalingProcessTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeScalingProcessTypes :: DescribeScalingProcessTypes

-- | <i>See:</i> <a>newDescribeScalingProcessTypesResponse</a> smart
--   constructor.
data DescribeScalingProcessTypesResponse
DescribeScalingProcessTypesResponse' :: Maybe [ProcessType] -> Int -> DescribeScalingProcessTypesResponse

-- | The names of the process types.
[$sel:processes:DescribeScalingProcessTypesResponse'] :: DescribeScalingProcessTypesResponse -> Maybe [ProcessType]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingProcessTypesResponse'] :: DescribeScalingProcessTypesResponse -> Int

-- | Create a value of <a>DescribeScalingProcessTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processes:DescribeScalingProcessTypesResponse'</a>,
--   <a>describeScalingProcessTypesResponse_processes</a> - The names of
--   the process types.
--   
--   <a>$sel:httpStatus:DescribeScalingProcessTypesResponse'</a>,
--   <a>describeScalingProcessTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingProcessTypesResponse :: Int -> DescribeScalingProcessTypesResponse

-- | The names of the process types.
describeScalingProcessTypesResponse_processes :: Lens' DescribeScalingProcessTypesResponse (Maybe [ProcessType])

-- | The response's http status code.
describeScalingProcessTypesResponse_httpStatus :: Lens' DescribeScalingProcessTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeScalingProcessTypes.DescribeScalingProcessTypes


-- | Gets information about the scaling activities in the account and
--   Region.
--   
--   When scaling events occur, you see a record of the scaling activity in
--   the scaling activities. For more information, see <a>Verifying a
--   scaling activity for an Auto Scaling group</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   If the scaling event succeeds, the value of the <tt>StatusCode</tt>
--   element in the response is <tt>Successful</tt>. If an attempt to
--   launch instances failed, the <tt>StatusCode</tt> value is
--   <tt>Failed</tt> or <tt>Cancelled</tt> and the <tt>StatusMessage</tt>
--   element in the response indicates the cause of the failure. For help
--   interpreting the <tt>StatusMessage</tt>, see <a>Troubleshooting Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeScalingActivities

-- | <i>See:</i> <a>newDescribeScalingActivities</a> smart constructor.
data DescribeScalingActivities
DescribeScalingActivities' :: Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Int -> Maybe Text -> DescribeScalingActivities

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Text

-- | The activity IDs of the desired scaling activities. If you omit this
--   parameter, all activities for the past six weeks are described. If
--   unknown activities are requested, they are ignored with no error. If
--   you specify an Auto Scaling group, the results are limited to that
--   group.
--   
--   Array Members: Maximum number of 50 IDs.
[$sel:activityIds:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe [Text]

-- | Indicates whether to include scaling activity from deleted Auto
--   Scaling groups.
[$sel:includeDeletedGroups:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Bool

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Text

-- | Create a value of <a>DescribeScalingActivities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:activityIds:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_activityIds</a> - The activity IDs of the
--   desired scaling activities. If you omit this parameter, all activities
--   for the past six weeks are described. If unknown activities are
--   requested, they are ignored with no error. If you specify an Auto
--   Scaling group, the results are limited to that group.
--   
--   Array Members: Maximum number of 50 IDs.
--   
--   <a>$sel:includeDeletedGroups:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_includeDeletedGroups</a> - Indicates
--   whether to include scaling activity from deleted Auto Scaling groups.
--   
--   <a>$sel:maxRecords:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>100</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newDescribeScalingActivities :: DescribeScalingActivities

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeScalingActivities_nextToken :: Lens' DescribeScalingActivities (Maybe Text)

-- | The activity IDs of the desired scaling activities. If you omit this
--   parameter, all activities for the past six weeks are described. If
--   unknown activities are requested, they are ignored with no error. If
--   you specify an Auto Scaling group, the results are limited to that
--   group.
--   
--   Array Members: Maximum number of 50 IDs.
describeScalingActivities_activityIds :: Lens' DescribeScalingActivities (Maybe [Text])

-- | Indicates whether to include scaling activity from deleted Auto
--   Scaling groups.
describeScalingActivities_includeDeletedGroups :: Lens' DescribeScalingActivities (Maybe Bool)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeScalingActivities_maxRecords :: Lens' DescribeScalingActivities (Maybe Int)

-- | The name of the Auto Scaling group.
describeScalingActivities_autoScalingGroupName :: Lens' DescribeScalingActivities (Maybe Text)

-- | <i>See:</i> <a>newDescribeScalingActivitiesResponse</a> smart
--   constructor.
data DescribeScalingActivitiesResponse
DescribeScalingActivitiesResponse' :: Maybe Text -> Int -> [Activity] -> DescribeScalingActivitiesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> Int

-- | The scaling activities. Activities are sorted by start time.
--   Activities still in progress are described first.
[$sel:activities:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> [Activity]

-- | Create a value of <a>DescribeScalingActivitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivitiesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:activities:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_activities</a> - The scaling
--   activities. Activities are sorted by start time. Activities still in
--   progress are described first.
newDescribeScalingActivitiesResponse :: Int -> DescribeScalingActivitiesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeScalingActivitiesResponse_nextToken :: Lens' DescribeScalingActivitiesResponse (Maybe Text)

-- | The response's http status code.
describeScalingActivitiesResponse_httpStatus :: Lens' DescribeScalingActivitiesResponse Int

-- | The scaling activities. Activities are sorted by start time.
--   Activities still in progress are described first.
describeScalingActivitiesResponse_activities :: Lens' DescribeScalingActivitiesResponse [Activity]
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeScalingActivities.DescribeScalingActivities


-- | Gets information about the scaling policies in the account and Region.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribePolicies

-- | <i>See:</i> <a>newDescribePolicies</a> smart constructor.
data DescribePolicies
DescribePolicies' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Int -> Maybe Text -> DescribePolicies

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribePolicies'] :: DescribePolicies -> Maybe Text

-- | One or more policy types. The valid values are <tt>SimpleScaling</tt>,
--   <tt>StepScaling</tt>, <tt>TargetTrackingScaling</tt>, and
--   <tt>PredictiveScaling</tt>.
[$sel:policyTypes:DescribePolicies'] :: DescribePolicies -> Maybe [Text]

-- | The names of one or more policies. If you omit this parameter, all
--   policies are described. If a group name is provided, the results are
--   limited to that group. If you specify an unknown policy name, it is
--   ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
[$sel:policyNames:DescribePolicies'] :: DescribePolicies -> Maybe [Text]

-- | The maximum number of items to be returned with each call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribePolicies'] :: DescribePolicies -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribePolicies'] :: DescribePolicies -> Maybe Text

-- | Create a value of <a>DescribePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePolicies'</a>,
--   <a>describePolicies_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:policyTypes:DescribePolicies'</a>,
--   <a>describePolicies_policyTypes</a> - One or more policy types. The
--   valid values are <tt>SimpleScaling</tt>, <tt>StepScaling</tt>,
--   <tt>TargetTrackingScaling</tt>, and <tt>PredictiveScaling</tt>.
--   
--   <a>$sel:policyNames:DescribePolicies'</a>,
--   <a>describePolicies_policyNames</a> - The names of one or more
--   policies. If you omit this parameter, all policies are described. If a
--   group name is provided, the results are limited to that group. If you
--   specify an unknown policy name, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:maxRecords:DescribePolicies'</a>,
--   <a>describePolicies_maxRecords</a> - The maximum number of items to be
--   returned with each call. The default value is <tt>50</tt> and the
--   maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribePolicies'</a>,
--   <a>describePolicies_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDescribePolicies :: DescribePolicies

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describePolicies_nextToken :: Lens' DescribePolicies (Maybe Text)

-- | One or more policy types. The valid values are <tt>SimpleScaling</tt>,
--   <tt>StepScaling</tt>, <tt>TargetTrackingScaling</tt>, and
--   <tt>PredictiveScaling</tt>.
describePolicies_policyTypes :: Lens' DescribePolicies (Maybe [Text])

-- | The names of one or more policies. If you omit this parameter, all
--   policies are described. If a group name is provided, the results are
--   limited to that group. If you specify an unknown policy name, it is
--   ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
describePolicies_policyNames :: Lens' DescribePolicies (Maybe [Text])

-- | The maximum number of items to be returned with each call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describePolicies_maxRecords :: Lens' DescribePolicies (Maybe Int)

-- | The name of the Auto Scaling group.
describePolicies_autoScalingGroupName :: Lens' DescribePolicies (Maybe Text)

-- | <i>See:</i> <a>newDescribePoliciesResponse</a> smart constructor.
data DescribePoliciesResponse
DescribePoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribePoliciesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribePoliciesResponse'] :: DescribePoliciesResponse -> Maybe Text

-- | The scaling policies.
[$sel:scalingPolicies:DescribePoliciesResponse'] :: DescribePoliciesResponse -> Maybe [ScalingPolicy]

-- | The response's http status code.
[$sel:httpStatus:DescribePoliciesResponse'] :: DescribePoliciesResponse -> Int

-- | Create a value of <a>DescribePoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePolicies'</a>,
--   <a>describePoliciesResponse_nextToken</a> - A string that indicates
--   that the response contains more items than can be returned in a single
--   response. To receive additional items, specify this string for the
--   <tt>NextToken</tt> value when requesting the next set of items. This
--   value is null when there are no more items to return.
--   
--   <a>$sel:scalingPolicies:DescribePoliciesResponse'</a>,
--   <a>describePoliciesResponse_scalingPolicies</a> - The scaling
--   policies.
--   
--   <a>$sel:httpStatus:DescribePoliciesResponse'</a>,
--   <a>describePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newDescribePoliciesResponse :: Int -> DescribePoliciesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describePoliciesResponse_nextToken :: Lens' DescribePoliciesResponse (Maybe Text)

-- | The scaling policies.
describePoliciesResponse_scalingPolicies :: Lens' DescribePoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describePoliciesResponse_httpStatus :: Lens' DescribePoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance GHC.Show.Show Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance GHC.Read.Read Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribePolicies.DescribePoliciesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribePolicies.DescribePoliciesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribePolicies.DescribePoliciesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribePolicies.DescribePoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribePolicies.DescribePoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribePolicies.DescribePolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribePolicies.DescribePolicies


-- | Gets information about the Amazon SNS notifications that are
--   configured for one or more Auto Scaling groups.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeNotificationConfigurations

-- | <i>See:</i> <a>newDescribeNotificationConfigurations</a> smart
--   constructor.
data DescribeNotificationConfigurations
DescribeNotificationConfigurations' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeNotificationConfigurations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeNotificationConfigurations'] :: DescribeNotificationConfigurations -> Maybe Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupNames:DescribeNotificationConfigurations'] :: DescribeNotificationConfigurations -> Maybe [Text]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeNotificationConfigurations'] :: DescribeNotificationConfigurations -> Maybe Int

-- | Create a value of <a>DescribeNotificationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_nextToken</a> - The token for
--   the next set of items to return. (You received this token from a
--   previous call.)
--   
--   <a>$sel:autoScalingGroupNames:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_autoScalingGroupNames</a> - The
--   name of the Auto Scaling group.
--   
--   <a>$sel:maxRecords:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_maxRecords</a> - The maximum
--   number of items to return with this call. The default value is
--   <tt>50</tt> and the maximum value is <tt>100</tt>.
newDescribeNotificationConfigurations :: DescribeNotificationConfigurations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeNotificationConfigurations_nextToken :: Lens' DescribeNotificationConfigurations (Maybe Text)

-- | The name of the Auto Scaling group.
describeNotificationConfigurations_autoScalingGroupNames :: Lens' DescribeNotificationConfigurations (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeNotificationConfigurations_maxRecords :: Lens' DescribeNotificationConfigurations (Maybe Int)

-- | <i>See:</i> <a>newDescribeNotificationConfigurationsResponse</a> smart
--   constructor.
data DescribeNotificationConfigurationsResponse
DescribeNotificationConfigurationsResponse' :: Maybe Text -> Int -> [NotificationConfiguration] -> DescribeNotificationConfigurationsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeNotificationConfigurationsResponse'] :: DescribeNotificationConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeNotificationConfigurationsResponse'] :: DescribeNotificationConfigurationsResponse -> Int

-- | The notification configurations.
[$sel:notificationConfigurations:DescribeNotificationConfigurationsResponse'] :: DescribeNotificationConfigurationsResponse -> [NotificationConfiguration]

-- | Create a value of <a>DescribeNotificationConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurationsResponse_nextToken</a> - A string
--   that indicates that the response contains more items than can be
--   returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
--   
--   <a>$sel:httpStatus:DescribeNotificationConfigurationsResponse'</a>,
--   <a>describeNotificationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:notificationConfigurations:DescribeNotificationConfigurationsResponse'</a>,
--   <a>describeNotificationConfigurationsResponse_notificationConfigurations</a>
--   - The notification configurations.
newDescribeNotificationConfigurationsResponse :: Int -> DescribeNotificationConfigurationsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeNotificationConfigurationsResponse_nextToken :: Lens' DescribeNotificationConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeNotificationConfigurationsResponse_httpStatus :: Lens' DescribeNotificationConfigurationsResponse Int

-- | The notification configurations.
describeNotificationConfigurationsResponse_notificationConfigurations :: Lens' DescribeNotificationConfigurationsResponse [NotificationConfiguration]
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurationsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurationsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeNotificationConfigurations.DescribeNotificationConfigurations


-- | Describes the available CloudWatch metrics for Amazon EC2 Auto
--   Scaling.
--   
--   The <tt>GroupStandbyInstances</tt> metric is not returned by default.
--   You must explicitly request this metric when calling the
--   EnableMetricsCollection API.
module Network.AWS.AutoScaling.DescribeMetricCollectionTypes

-- | <i>See:</i> <a>newDescribeMetricCollectionTypes</a> smart constructor.
data DescribeMetricCollectionTypes
DescribeMetricCollectionTypes' :: DescribeMetricCollectionTypes

-- | Create a value of <a>DescribeMetricCollectionTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeMetricCollectionTypes :: DescribeMetricCollectionTypes

-- | <i>See:</i> <a>newDescribeMetricCollectionTypesResponse</a> smart
--   constructor.
data DescribeMetricCollectionTypesResponse
DescribeMetricCollectionTypesResponse' :: Maybe [MetricCollectionType] -> Maybe [MetricGranularityType] -> Int -> DescribeMetricCollectionTypesResponse

-- | One or more metrics.
[$sel:metrics:DescribeMetricCollectionTypesResponse'] :: DescribeMetricCollectionTypesResponse -> Maybe [MetricCollectionType]

-- | The granularities for the metrics.
[$sel:granularities:DescribeMetricCollectionTypesResponse'] :: DescribeMetricCollectionTypesResponse -> Maybe [MetricGranularityType]

-- | The response's http status code.
[$sel:httpStatus:DescribeMetricCollectionTypesResponse'] :: DescribeMetricCollectionTypesResponse -> Int

-- | Create a value of <a>DescribeMetricCollectionTypesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_metrics</a> - One or more
--   metrics.
--   
--   <a>$sel:granularities:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_granularities</a> - The
--   granularities for the metrics.
--   
--   <a>$sel:httpStatus:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeMetricCollectionTypesResponse :: Int -> DescribeMetricCollectionTypesResponse

-- | One or more metrics.
describeMetricCollectionTypesResponse_metrics :: Lens' DescribeMetricCollectionTypesResponse (Maybe [MetricCollectionType])

-- | The granularities for the metrics.
describeMetricCollectionTypesResponse_granularities :: Lens' DescribeMetricCollectionTypesResponse (Maybe [MetricGranularityType])

-- | The response's http status code.
describeMetricCollectionTypesResponse_httpStatus :: Lens' DescribeMetricCollectionTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeMetricCollectionTypes.DescribeMetricCollectionTypes


-- | Gets information about the load balancers for the specified Auto
--   Scaling group.
--   
--   This operation describes only Classic Load Balancers. If you have
--   Application Load Balancers, Network Load Balancers, or Gateway Load
--   Balancers, use the DescribeLoadBalancerTargetGroups API instead.
--   
--   To determine the availability of registered instances, use the
--   <tt>State</tt> element in the response. When you attach a load
--   balancer to an Auto Scaling group, the initial <tt>State</tt> value is
--   <tt>Adding</tt>. The state transitions to <tt>Added</tt> after all
--   Auto Scaling instances are registered with the load balancer. If
--   Elastic Load Balancing health checks are enabled for the Auto Scaling
--   group, the state transitions to <tt>InService</tt> after at least one
--   Auto Scaling instance passes the health check. When the load balancer
--   is in the <tt>InService</tt> state, Amazon EC2 Auto Scaling can
--   terminate and replace any instances that are reported as unhealthy. If
--   no registered instances pass the health checks, the load balancer
--   doesn't enter the <tt>InService</tt> state.
--   
--   Load balancers also have an <tt>InService</tt> state if you attach
--   them in the CreateAutoScalingGroup API call. If your load balancer
--   state is <tt>InService</tt>, but it is not working properly, check the
--   scaling activities by calling DescribeScalingActivities and take any
--   corrective actions necessary.
--   
--   For help with failed health checks, see <a>Troubleshooting Amazon EC2
--   Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. For more information, see <a>Elastic Load Balancing and
--   Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeLoadBalancers

-- | <i>See:</i> <a>newDescribeLoadBalancers</a> smart constructor.
data DescribeLoadBalancers
DescribeLoadBalancers' :: Maybe Text -> Maybe Int -> Text -> DescribeLoadBalancers

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe Text

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeLoadBalancers'] :: DescribeLoadBalancers -> Text

-- | Create a value of <a>DescribeLoadBalancers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:maxRecords:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_maxRecords</a> - The maximum number of items
--   to return with this call. The default value is <tt>100</tt> and the
--   maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeLoadBalancers :: Text -> DescribeLoadBalancers

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLoadBalancers_nextToken :: Lens' DescribeLoadBalancers (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeLoadBalancers_maxRecords :: Lens' DescribeLoadBalancers (Maybe Int)

-- | The name of the Auto Scaling group.
describeLoadBalancers_autoScalingGroupName :: Lens' DescribeLoadBalancers Text

-- | <i>See:</i> <a>newDescribeLoadBalancersResponse</a> smart constructor.
data DescribeLoadBalancersResponse
DescribeLoadBalancersResponse' :: Maybe Text -> Maybe [LoadBalancerState] -> Int -> DescribeLoadBalancersResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Maybe Text

-- | The load balancers.
[$sel:loadBalancers:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Maybe [LoadBalancerState]

-- | The response's http status code.
[$sel:httpStatus:DescribeLoadBalancersResponse'] :: DescribeLoadBalancersResponse -> Int

-- | Create a value of <a>DescribeLoadBalancersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancersResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:loadBalancers:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_loadBalancers</a> - The load
--   balancers.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoadBalancersResponse :: Int -> DescribeLoadBalancersResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLoadBalancersResponse_nextToken :: Lens' DescribeLoadBalancersResponse (Maybe Text)

-- | The load balancers.
describeLoadBalancersResponse_loadBalancers :: Lens' DescribeLoadBalancersResponse (Maybe [LoadBalancerState])

-- | The response's http status code.
describeLoadBalancersResponse_httpStatus :: Lens' DescribeLoadBalancersResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeLoadBalancers.DescribeLoadBalancers


-- | Gets information about the load balancer target groups for the
--   specified Auto Scaling group.
--   
--   To determine the availability of registered instances, use the
--   <tt>State</tt> element in the response. When you attach a target group
--   to an Auto Scaling group, the initial <tt>State</tt> value is
--   <tt>Adding</tt>. The state transitions to <tt>Added</tt> after all
--   Auto Scaling instances are registered with the target group. If
--   Elastic Load Balancing health checks are enabled for the Auto Scaling
--   group, the state transitions to <tt>InService</tt> after at least one
--   Auto Scaling instance passes the health check. When the target group
--   is in the <tt>InService</tt> state, Amazon EC2 Auto Scaling can
--   terminate and replace any instances that are reported as unhealthy. If
--   no registered instances pass the health checks, the target group
--   doesn't enter the <tt>InService</tt> state.
--   
--   Target groups also have an <tt>InService</tt> state if you attach them
--   in the CreateAutoScalingGroup API call. If your target group state is
--   <tt>InService</tt>, but it is not working properly, check the scaling
--   activities by calling DescribeScalingActivities and take any
--   corrective actions necessary.
--   
--   For help with failed health checks, see <a>Troubleshooting Amazon EC2
--   Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>. For more information, see <a>Elastic Load Balancing and
--   Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups

-- | <i>See:</i> <a>newDescribeLoadBalancerTargetGroups</a> smart
--   constructor.
data DescribeLoadBalancerTargetGroups
DescribeLoadBalancerTargetGroups' :: Maybe Text -> Maybe Int -> Text -> DescribeLoadBalancerTargetGroups

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeLoadBalancerTargetGroups'] :: DescribeLoadBalancerTargetGroups -> Maybe Text

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeLoadBalancerTargetGroups'] :: DescribeLoadBalancerTargetGroups -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeLoadBalancerTargetGroups'] :: DescribeLoadBalancerTargetGroups -> Text

-- | Create a value of <a>DescribeLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_nextToken</a> - The token for the
--   next set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:maxRecords:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_maxRecords</a> - The maximum
--   number of items to return with this call. The default value is
--   <tt>100</tt> and the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_autoScalingGroupName</a> - The
--   name of the Auto Scaling group.
newDescribeLoadBalancerTargetGroups :: Text -> DescribeLoadBalancerTargetGroups

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLoadBalancerTargetGroups_nextToken :: Lens' DescribeLoadBalancerTargetGroups (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeLoadBalancerTargetGroups_maxRecords :: Lens' DescribeLoadBalancerTargetGroups (Maybe Int)

-- | The name of the Auto Scaling group.
describeLoadBalancerTargetGroups_autoScalingGroupName :: Lens' DescribeLoadBalancerTargetGroups Text

-- | <i>See:</i> <a>newDescribeLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data DescribeLoadBalancerTargetGroupsResponse
DescribeLoadBalancerTargetGroupsResponse' :: Maybe [LoadBalancerTargetGroupState] -> Maybe Text -> Int -> DescribeLoadBalancerTargetGroupsResponse

-- | Information about the target groups.
[$sel:loadBalancerTargetGroups:DescribeLoadBalancerTargetGroupsResponse'] :: DescribeLoadBalancerTargetGroupsResponse -> Maybe [LoadBalancerTargetGroupState]

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeLoadBalancerTargetGroupsResponse'] :: DescribeLoadBalancerTargetGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeLoadBalancerTargetGroupsResponse'] :: DescribeLoadBalancerTargetGroupsResponse -> Int

-- | Create a value of <a>DescribeLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:loadBalancerTargetGroups:DescribeLoadBalancerTargetGroupsResponse'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_loadBalancerTargetGroups</a>
--   - Information about the target groups.
--   
--   <a>$sel:nextToken:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_nextToken</a> - A string
--   that indicates that the response contains more items than can be
--   returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancerTargetGroupsResponse'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeLoadBalancerTargetGroupsResponse :: Int -> DescribeLoadBalancerTargetGroupsResponse

-- | Information about the target groups.
describeLoadBalancerTargetGroupsResponse_loadBalancerTargetGroups :: Lens' DescribeLoadBalancerTargetGroupsResponse (Maybe [LoadBalancerTargetGroupState])

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLoadBalancerTargetGroupsResponse_nextToken :: Lens' DescribeLoadBalancerTargetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeLoadBalancerTargetGroupsResponse_httpStatus :: Lens' DescribeLoadBalancerTargetGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroupsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroupsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroupsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeLoadBalancerTargetGroups.DescribeLoadBalancerTargetGroups


-- | Gets information about the lifecycle hooks for the specified Auto
--   Scaling group.
module Network.AWS.AutoScaling.DescribeLifecycleHooks

-- | <i>See:</i> <a>newDescribeLifecycleHooks</a> smart constructor.
data DescribeLifecycleHooks
DescribeLifecycleHooks' :: Maybe [Text] -> Text -> DescribeLifecycleHooks

-- | The names of one or more lifecycle hooks. If you omit this parameter,
--   all lifecycle hooks are described.
[$sel:lifecycleHookNames:DescribeLifecycleHooks'] :: DescribeLifecycleHooks -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeLifecycleHooks'] :: DescribeLifecycleHooks -> Text

-- | Create a value of <a>DescribeLifecycleHooks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookNames:DescribeLifecycleHooks'</a>,
--   <a>describeLifecycleHooks_lifecycleHookNames</a> - The names of one or
--   more lifecycle hooks. If you omit this parameter, all lifecycle hooks
--   are described.
--   
--   <a>$sel:autoScalingGroupName:DescribeLifecycleHooks'</a>,
--   <a>describeLifecycleHooks_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeLifecycleHooks :: Text -> DescribeLifecycleHooks

-- | The names of one or more lifecycle hooks. If you omit this parameter,
--   all lifecycle hooks are described.
describeLifecycleHooks_lifecycleHookNames :: Lens' DescribeLifecycleHooks (Maybe [Text])

-- | The name of the Auto Scaling group.
describeLifecycleHooks_autoScalingGroupName :: Lens' DescribeLifecycleHooks Text

-- | <i>See:</i> <a>newDescribeLifecycleHooksResponse</a> smart
--   constructor.
data DescribeLifecycleHooksResponse
DescribeLifecycleHooksResponse' :: Maybe [LifecycleHook] -> Int -> DescribeLifecycleHooksResponse

-- | The lifecycle hooks for the specified group.
[$sel:lifecycleHooks:DescribeLifecycleHooksResponse'] :: DescribeLifecycleHooksResponse -> Maybe [LifecycleHook]

-- | The response's http status code.
[$sel:httpStatus:DescribeLifecycleHooksResponse'] :: DescribeLifecycleHooksResponse -> Int

-- | Create a value of <a>DescribeLifecycleHooksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHooks:DescribeLifecycleHooksResponse'</a>,
--   <a>describeLifecycleHooksResponse_lifecycleHooks</a> - The lifecycle
--   hooks for the specified group.
--   
--   <a>$sel:httpStatus:DescribeLifecycleHooksResponse'</a>,
--   <a>describeLifecycleHooksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLifecycleHooksResponse :: Int -> DescribeLifecycleHooksResponse

-- | The lifecycle hooks for the specified group.
describeLifecycleHooksResponse_lifecycleHooks :: Lens' DescribeLifecycleHooksResponse (Maybe [LifecycleHook])

-- | The response's http status code.
describeLifecycleHooksResponse_httpStatus :: Lens' DescribeLifecycleHooksResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooksResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooksResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooksResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooksResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeLifecycleHooks.DescribeLifecycleHooks


-- | Describes the available types of lifecycle hooks.
--   
--   The following hook types are supported:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCHING</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATING</pre></li>
--   </ul>
module Network.AWS.AutoScaling.DescribeLifecycleHookTypes

-- | <i>See:</i> <a>newDescribeLifecycleHookTypes</a> smart constructor.
data DescribeLifecycleHookTypes
DescribeLifecycleHookTypes' :: DescribeLifecycleHookTypes

-- | Create a value of <a>DescribeLifecycleHookTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLifecycleHookTypes :: DescribeLifecycleHookTypes

-- | <i>See:</i> <a>newDescribeLifecycleHookTypesResponse</a> smart
--   constructor.
data DescribeLifecycleHookTypesResponse
DescribeLifecycleHookTypesResponse' :: Maybe [Text] -> Int -> DescribeLifecycleHookTypesResponse

-- | The lifecycle hook types.
[$sel:lifecycleHookTypes:DescribeLifecycleHookTypesResponse'] :: DescribeLifecycleHookTypesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:DescribeLifecycleHookTypesResponse'] :: DescribeLifecycleHookTypesResponse -> Int

-- | Create a value of <a>DescribeLifecycleHookTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookTypes:DescribeLifecycleHookTypesResponse'</a>,
--   <a>describeLifecycleHookTypesResponse_lifecycleHookTypes</a> - The
--   lifecycle hook types.
--   
--   <a>$sel:httpStatus:DescribeLifecycleHookTypesResponse'</a>,
--   <a>describeLifecycleHookTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeLifecycleHookTypesResponse :: Int -> DescribeLifecycleHookTypesResponse

-- | The lifecycle hook types.
describeLifecycleHookTypesResponse_lifecycleHookTypes :: Lens' DescribeLifecycleHookTypesResponse (Maybe [Text])

-- | The response's http status code.
describeLifecycleHookTypesResponse_httpStatus :: Lens' DescribeLifecycleHookTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeLifecycleHookTypes.DescribeLifecycleHookTypes


-- | Gets information about the launch configurations in the account and
--   Region.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeLaunchConfigurations

-- | <i>See:</i> <a>newDescribeLaunchConfigurations</a> smart constructor.
data DescribeLaunchConfigurations
DescribeLaunchConfigurations' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeLaunchConfigurations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeLaunchConfigurations'] :: DescribeLaunchConfigurations -> Maybe Text

-- | The launch configuration names. If you omit this parameter, all launch
--   configurations are described.
--   
--   Array Members: Maximum number of 50 items.
[$sel:launchConfigurationNames:DescribeLaunchConfigurations'] :: DescribeLaunchConfigurations -> Maybe [Text]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeLaunchConfigurations'] :: DescribeLaunchConfigurations -> Maybe Int

-- | Create a value of <a>DescribeLaunchConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:launchConfigurationNames:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_launchConfigurationNames</a> - The
--   launch configuration names. If you omit this parameter, all launch
--   configurations are described.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:maxRecords:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
newDescribeLaunchConfigurations :: DescribeLaunchConfigurations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLaunchConfigurations_nextToken :: Lens' DescribeLaunchConfigurations (Maybe Text)

-- | The launch configuration names. If you omit this parameter, all launch
--   configurations are described.
--   
--   Array Members: Maximum number of 50 items.
describeLaunchConfigurations_launchConfigurationNames :: Lens' DescribeLaunchConfigurations (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeLaunchConfigurations_maxRecords :: Lens' DescribeLaunchConfigurations (Maybe Int)

-- | <i>See:</i> <a>newDescribeLaunchConfigurationsResponse</a> smart
--   constructor.
data DescribeLaunchConfigurationsResponse
DescribeLaunchConfigurationsResponse' :: Maybe Text -> Int -> [LaunchConfiguration] -> DescribeLaunchConfigurationsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeLaunchConfigurationsResponse'] :: DescribeLaunchConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeLaunchConfigurationsResponse'] :: DescribeLaunchConfigurationsResponse -> Int

-- | The launch configurations.
[$sel:launchConfigurations:DescribeLaunchConfigurationsResponse'] :: DescribeLaunchConfigurationsResponse -> [LaunchConfiguration]

-- | Create a value of <a>DescribeLaunchConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurationsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeLaunchConfigurationsResponse'</a>,
--   <a>describeLaunchConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:launchConfigurations:DescribeLaunchConfigurationsResponse'</a>,
--   <a>describeLaunchConfigurationsResponse_launchConfigurations</a> - The
--   launch configurations.
newDescribeLaunchConfigurationsResponse :: Int -> DescribeLaunchConfigurationsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLaunchConfigurationsResponse_nextToken :: Lens' DescribeLaunchConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeLaunchConfigurationsResponse_httpStatus :: Lens' DescribeLaunchConfigurationsResponse Int

-- | The launch configurations.
describeLaunchConfigurationsResponse_launchConfigurations :: Lens' DescribeLaunchConfigurationsResponse [LaunchConfiguration]
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurationsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurationsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeLaunchConfigurations.DescribeLaunchConfigurations


-- | Gets information about the instance refreshes for the specified Auto
--   Scaling group.
--   
--   This operation is part of the <a>instance refresh feature</a> in
--   Amazon EC2 Auto Scaling, which helps you update instances in your Auto
--   Scaling group after you make configuration changes.
--   
--   To help you determine the status of an instance refresh, this
--   operation returns information about the instance refreshes you
--   previously initiated, including their status, end time, the percentage
--   of the instance refresh that is complete, and the number of instances
--   remaining to update before the instance refresh is complete.
--   
--   The following are the possible statuses:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
module Network.AWS.AutoScaling.DescribeInstanceRefreshes

-- | <i>See:</i> <a>newDescribeInstanceRefreshes</a> smart constructor.
data DescribeInstanceRefreshes
DescribeInstanceRefreshes' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Text -> DescribeInstanceRefreshes

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeInstanceRefreshes'] :: DescribeInstanceRefreshes -> Maybe Text

-- | One or more instance refresh IDs.
[$sel:instanceRefreshIds:DescribeInstanceRefreshes'] :: DescribeInstanceRefreshes -> Maybe [Text]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeInstanceRefreshes'] :: DescribeInstanceRefreshes -> Maybe Int

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DescribeInstanceRefreshes'] :: DescribeInstanceRefreshes -> Text

-- | Create a value of <a>DescribeInstanceRefreshes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:instanceRefreshIds:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_instanceRefreshIds</a> - One or more
--   instance refresh IDs.
--   
--   <a>$sel:maxRecords:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newDescribeInstanceRefreshes :: Text -> DescribeInstanceRefreshes

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeInstanceRefreshes_nextToken :: Lens' DescribeInstanceRefreshes (Maybe Text)

-- | One or more instance refresh IDs.
describeInstanceRefreshes_instanceRefreshIds :: Lens' DescribeInstanceRefreshes (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeInstanceRefreshes_maxRecords :: Lens' DescribeInstanceRefreshes (Maybe Int)

-- | The name of the Auto Scaling group.
describeInstanceRefreshes_autoScalingGroupName :: Lens' DescribeInstanceRefreshes Text

-- | <i>See:</i> <a>newDescribeInstanceRefreshesResponse</a> smart
--   constructor.
data DescribeInstanceRefreshesResponse
DescribeInstanceRefreshesResponse' :: Maybe Text -> Maybe [InstanceRefresh] -> Int -> DescribeInstanceRefreshesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeInstanceRefreshesResponse'] :: DescribeInstanceRefreshesResponse -> Maybe Text

-- | The instance refreshes for the specified group.
[$sel:instanceRefreshes:DescribeInstanceRefreshesResponse'] :: DescribeInstanceRefreshesResponse -> Maybe [InstanceRefresh]

-- | The response's http status code.
[$sel:httpStatus:DescribeInstanceRefreshesResponse'] :: DescribeInstanceRefreshesResponse -> Int

-- | Create a value of <a>DescribeInstanceRefreshesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:instanceRefreshes:DescribeInstanceRefreshesResponse'</a>,
--   <a>describeInstanceRefreshesResponse_instanceRefreshes</a> - The
--   instance refreshes for the specified group.
--   
--   <a>$sel:httpStatus:DescribeInstanceRefreshesResponse'</a>,
--   <a>describeInstanceRefreshesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeInstanceRefreshesResponse :: Int -> DescribeInstanceRefreshesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeInstanceRefreshesResponse_nextToken :: Lens' DescribeInstanceRefreshesResponse (Maybe Text)

-- | The instance refreshes for the specified group.
describeInstanceRefreshesResponse_instanceRefreshes :: Lens' DescribeInstanceRefreshesResponse (Maybe [InstanceRefresh])

-- | The response's http status code.
describeInstanceRefreshesResponse_httpStatus :: Lens' DescribeInstanceRefreshesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeInstanceRefreshes.DescribeInstanceRefreshes


-- | Describes the notification types that are supported by Amazon EC2 Auto
--   Scaling.
module Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes

-- | <i>See:</i> <a>newDescribeAutoScalingNotificationTypes</a> smart
--   constructor.
data DescribeAutoScalingNotificationTypes
DescribeAutoScalingNotificationTypes' :: DescribeAutoScalingNotificationTypes

-- | Create a value of <a>DescribeAutoScalingNotificationTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAutoScalingNotificationTypes :: DescribeAutoScalingNotificationTypes

-- | <i>See:</i> <a>newDescribeAutoScalingNotificationTypesResponse</a>
--   smart constructor.
data DescribeAutoScalingNotificationTypesResponse
DescribeAutoScalingNotificationTypesResponse' :: Maybe [Text] -> Int -> DescribeAutoScalingNotificationTypesResponse

-- | The notification types.
[$sel:autoScalingNotificationTypes:DescribeAutoScalingNotificationTypesResponse'] :: DescribeAutoScalingNotificationTypesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:DescribeAutoScalingNotificationTypesResponse'] :: DescribeAutoScalingNotificationTypesResponse -> Int

-- | Create a value of <a>DescribeAutoScalingNotificationTypesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingNotificationTypes:DescribeAutoScalingNotificationTypesResponse'</a>,
--   <a>describeAutoScalingNotificationTypesResponse_autoScalingNotificationTypes</a>
--   - The notification types.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingNotificationTypesResponse'</a>,
--   <a>describeAutoScalingNotificationTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAutoScalingNotificationTypesResponse :: Int -> DescribeAutoScalingNotificationTypesResponse

-- | The notification types.
describeAutoScalingNotificationTypesResponse_autoScalingNotificationTypes :: Lens' DescribeAutoScalingNotificationTypesResponse (Maybe [Text])

-- | The response's http status code.
describeAutoScalingNotificationTypesResponse_httpStatus :: Lens' DescribeAutoScalingNotificationTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes.DescribeAutoScalingNotificationTypes


-- | Gets information about the Auto Scaling instances in the account and
--   Region.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeAutoScalingInstances

-- | <i>See:</i> <a>newDescribeAutoScalingInstances</a> smart constructor.
data DescribeAutoScalingInstances
DescribeAutoScalingInstances' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeAutoScalingInstances

-- | The IDs of the instances. If you omit this parameter, all Auto Scaling
--   instances are described. If you specify an ID that does not exist, it
--   is ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
[$sel:instanceIds:DescribeAutoScalingInstances'] :: DescribeAutoScalingInstances -> Maybe [Text]

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeAutoScalingInstances'] :: DescribeAutoScalingInstances -> Maybe Text

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>50</tt>.
[$sel:maxRecords:DescribeAutoScalingInstances'] :: DescribeAutoScalingInstances -> Maybe Int

-- | Create a value of <a>DescribeAutoScalingInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_instanceIds</a> - The IDs of the
--   instances. If you omit this parameter, all Auto Scaling instances are
--   described. If you specify an ID that does not exist, it is ignored
--   with no error.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:nextToken:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:maxRecords:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>50</tt>.
newDescribeAutoScalingInstances :: DescribeAutoScalingInstances

-- | The IDs of the instances. If you omit this parameter, all Auto Scaling
--   instances are described. If you specify an ID that does not exist, it
--   is ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
describeAutoScalingInstances_instanceIds :: Lens' DescribeAutoScalingInstances (Maybe [Text])

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeAutoScalingInstances_nextToken :: Lens' DescribeAutoScalingInstances (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>50</tt>.
describeAutoScalingInstances_maxRecords :: Lens' DescribeAutoScalingInstances (Maybe Int)

-- | <i>See:</i> <a>newDescribeAutoScalingInstancesResponse</a> smart
--   constructor.
data DescribeAutoScalingInstancesResponse
DescribeAutoScalingInstancesResponse' :: Maybe Text -> Maybe [AutoScalingInstanceDetails] -> Int -> DescribeAutoScalingInstancesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeAutoScalingInstancesResponse'] :: DescribeAutoScalingInstancesResponse -> Maybe Text

-- | The instances.
[$sel:autoScalingInstances:DescribeAutoScalingInstancesResponse'] :: DescribeAutoScalingInstancesResponse -> Maybe [AutoScalingInstanceDetails]

-- | The response's http status code.
[$sel:httpStatus:DescribeAutoScalingInstancesResponse'] :: DescribeAutoScalingInstancesResponse -> Int

-- | Create a value of <a>DescribeAutoScalingInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstancesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   
--   <a>$sel:autoScalingInstances:DescribeAutoScalingInstancesResponse'</a>,
--   <a>describeAutoScalingInstancesResponse_autoScalingInstances</a> - The
--   instances.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingInstancesResponse'</a>,
--   <a>describeAutoScalingInstancesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAutoScalingInstancesResponse :: Int -> DescribeAutoScalingInstancesResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeAutoScalingInstancesResponse_nextToken :: Lens' DescribeAutoScalingInstancesResponse (Maybe Text)

-- | The instances.
describeAutoScalingInstancesResponse_autoScalingInstances :: Lens' DescribeAutoScalingInstancesResponse (Maybe [AutoScalingInstanceDetails])

-- | The response's http status code.
describeAutoScalingInstancesResponse_httpStatus :: Lens' DescribeAutoScalingInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstancesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstancesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstancesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeAutoScalingInstances.DescribeAutoScalingInstances


-- | Gets information about the Auto Scaling groups in the account and
--   Region.
--   
--   This operation returns information about instances in Auto Scaling
--   groups. To retrieve information about the instances in a warm pool,
--   you must call the DescribeWarmPool API.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScaling.DescribeAutoScalingGroups

-- | <i>See:</i> <a>newDescribeAutoScalingGroups</a> smart constructor.
data DescribeAutoScalingGroups
DescribeAutoScalingGroups' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeAutoScalingGroups

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeAutoScalingGroups'] :: DescribeAutoScalingGroups -> Maybe Text

-- | The names of the Auto Scaling groups. By default, you can only specify
--   up to 50 names. You can optionally increase this limit using the
--   <tt>MaxRecords</tt> parameter.
--   
--   If you omit this parameter, all Auto Scaling groups are described.
[$sel:autoScalingGroupNames:DescribeAutoScalingGroups'] :: DescribeAutoScalingGroups -> Maybe [Text]

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
[$sel:maxRecords:DescribeAutoScalingGroups'] :: DescribeAutoScalingGroups -> Maybe Int

-- | Create a value of <a>DescribeAutoScalingGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:autoScalingGroupNames:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_autoScalingGroupNames</a> - The names of
--   the Auto Scaling groups. By default, you can only specify up to 50
--   names. You can optionally increase this limit using the
--   <tt>MaxRecords</tt> parameter.
--   
--   If you omit this parameter, all Auto Scaling groups are described.
--   
--   <a>$sel:maxRecords:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
newDescribeAutoScalingGroups :: DescribeAutoScalingGroups

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeAutoScalingGroups_nextToken :: Lens' DescribeAutoScalingGroups (Maybe Text)

-- | The names of the Auto Scaling groups. By default, you can only specify
--   up to 50 names. You can optionally increase this limit using the
--   <tt>MaxRecords</tt> parameter.
--   
--   If you omit this parameter, all Auto Scaling groups are described.
describeAutoScalingGroups_autoScalingGroupNames :: Lens' DescribeAutoScalingGroups (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeAutoScalingGroups_maxRecords :: Lens' DescribeAutoScalingGroups (Maybe Int)

-- | <i>See:</i> <a>newDescribeAutoScalingGroupsResponse</a> smart
--   constructor.
data DescribeAutoScalingGroupsResponse
DescribeAutoScalingGroupsResponse' :: Maybe Text -> Int -> [AutoScalingGroup] -> DescribeAutoScalingGroupsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
[$sel:nextToken:DescribeAutoScalingGroupsResponse'] :: DescribeAutoScalingGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAutoScalingGroupsResponse'] :: DescribeAutoScalingGroupsResponse -> Int

-- | The groups.
[$sel:autoScalingGroups:DescribeAutoScalingGroupsResponse'] :: DescribeAutoScalingGroupsResponse -> [AutoScalingGroup]

-- | Create a value of <a>DescribeAutoScalingGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroupsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingGroupsResponse'</a>,
--   <a>describeAutoScalingGroupsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:autoScalingGroups:DescribeAutoScalingGroupsResponse'</a>,
--   <a>describeAutoScalingGroupsResponse_autoScalingGroups</a> - The
--   groups.
newDescribeAutoScalingGroupsResponse :: Int -> DescribeAutoScalingGroupsResponse

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeAutoScalingGroupsResponse_nextToken :: Lens' DescribeAutoScalingGroupsResponse (Maybe Text)

-- | The response's http status code.
describeAutoScalingGroupsResponse_httpStatus :: Lens' DescribeAutoScalingGroupsResponse Int

-- | The groups.
describeAutoScalingGroupsResponse_autoScalingGroups :: Lens' DescribeAutoScalingGroupsResponse [AutoScalingGroup]
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroupsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroupsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroupsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeAutoScalingGroups.DescribeAutoScalingGroups


-- | Describes the available adjustment types for step scaling and simple
--   scaling policies.
--   
--   The following adjustment types are supported:
--   
--   <ul>
--   <li><pre>ChangeInCapacity</pre></li>
--   <li><pre>ExactCapacity</pre></li>
--   <li><pre>PercentChangeInCapacity</pre></li>
--   </ul>
module Network.AWS.AutoScaling.DescribeAdjustmentTypes

-- | <i>See:</i> <a>newDescribeAdjustmentTypes</a> smart constructor.
data DescribeAdjustmentTypes
DescribeAdjustmentTypes' :: DescribeAdjustmentTypes

-- | Create a value of <a>DescribeAdjustmentTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAdjustmentTypes :: DescribeAdjustmentTypes

-- | <i>See:</i> <a>newDescribeAdjustmentTypesResponse</a> smart
--   constructor.
data DescribeAdjustmentTypesResponse
DescribeAdjustmentTypesResponse' :: Maybe [AdjustmentType] -> Int -> DescribeAdjustmentTypesResponse

-- | The policy adjustment types.
[$sel:adjustmentTypes:DescribeAdjustmentTypesResponse'] :: DescribeAdjustmentTypesResponse -> Maybe [AdjustmentType]

-- | The response's http status code.
[$sel:httpStatus:DescribeAdjustmentTypesResponse'] :: DescribeAdjustmentTypesResponse -> Int

-- | Create a value of <a>DescribeAdjustmentTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adjustmentTypes:DescribeAdjustmentTypesResponse'</a>,
--   <a>describeAdjustmentTypesResponse_adjustmentTypes</a> - The policy
--   adjustment types.
--   
--   <a>$sel:httpStatus:DescribeAdjustmentTypesResponse'</a>,
--   <a>describeAdjustmentTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAdjustmentTypesResponse :: Int -> DescribeAdjustmentTypesResponse

-- | The policy adjustment types.
describeAdjustmentTypesResponse_adjustmentTypes :: Lens' DescribeAdjustmentTypesResponse (Maybe [AdjustmentType])

-- | The response's http status code.
describeAdjustmentTypesResponse_httpStatus :: Lens' DescribeAdjustmentTypesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeAdjustmentTypes.DescribeAdjustmentTypes


-- | Describes the current Amazon EC2 Auto Scaling resource quotas for your
--   account.
--   
--   When you establish an account, the account has initial quotas on the
--   maximum number of Auto Scaling groups and launch configurations that
--   you can create in a given Region. For more information, see <a>Amazon
--   EC2 Auto Scaling service quotas</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
module Network.AWS.AutoScaling.DescribeAccountLimits

-- | <i>See:</i> <a>newDescribeAccountLimits</a> smart constructor.
data DescribeAccountLimits
DescribeAccountLimits' :: DescribeAccountLimits

-- | Create a value of <a>DescribeAccountLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAccountLimits :: DescribeAccountLimits

-- | <i>See:</i> <a>newDescribeAccountLimitsResponse</a> smart constructor.
data DescribeAccountLimitsResponse
DescribeAccountLimitsResponse' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Int -> DescribeAccountLimitsResponse

-- | The current number of groups for your account.
[$sel:numberOfAutoScalingGroups:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe Int

-- | The maximum number of launch configurations allowed for your account.
--   The default is 200 launch configurations per Region.
[$sel:maxNumberOfLaunchConfigurations:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe Int

-- | The current number of launch configurations for your account.
[$sel:numberOfLaunchConfigurations:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe Int

-- | The maximum number of groups allowed for your account. The default is
--   200 groups per Region.
[$sel:maxNumberOfAutoScalingGroups:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:DescribeAccountLimitsResponse'] :: DescribeAccountLimitsResponse -> Int

-- | Create a value of <a>DescribeAccountLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfAutoScalingGroups:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_numberOfAutoScalingGroups</a> - The
--   current number of groups for your account.
--   
--   
--   <a>$sel:maxNumberOfLaunchConfigurations:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_maxNumberOfLaunchConfigurations</a> -
--   The maximum number of launch configurations allowed for your account.
--   The default is 200 launch configurations per Region.
--   
--   
--   <a>$sel:numberOfLaunchConfigurations:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_numberOfLaunchConfigurations</a> -
--   The current number of launch configurations for your account.
--   
--   
--   <a>$sel:maxNumberOfAutoScalingGroups:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_maxNumberOfAutoScalingGroups</a> -
--   The maximum number of groups allowed for your account. The default is
--   200 groups per Region.
--   
--   <a>$sel:httpStatus:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccountLimitsResponse :: Int -> DescribeAccountLimitsResponse

-- | The current number of groups for your account.
describeAccountLimitsResponse_numberOfAutoScalingGroups :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The maximum number of launch configurations allowed for your account.
--   The default is 200 launch configurations per Region.
describeAccountLimitsResponse_maxNumberOfLaunchConfigurations :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The current number of launch configurations for your account.
describeAccountLimitsResponse_numberOfLaunchConfigurations :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The maximum number of groups allowed for your account. The default is
--   200 groups per Region.
describeAccountLimitsResponse_maxNumberOfAutoScalingGroups :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The response's http status code.
describeAccountLimitsResponse_httpStatus :: Lens' DescribeAccountLimitsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance GHC.Generics.Generic Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimitsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimitsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimitsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DescribeAccountLimits.DescribeAccountLimits


-- | Deletes the warm pool for the specified Auto Scaling group.
--   
--   For more information, see <a>Warm pools for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.DeleteWarmPool

-- | <i>See:</i> <a>newDeleteWarmPool</a> smart constructor.
data DeleteWarmPool
DeleteWarmPool' :: Maybe Bool -> Text -> DeleteWarmPool

-- | Specifies that the warm pool is to be deleted along with all of its
--   associated instances, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the warm pool instances.
[$sel:forceDelete:DeleteWarmPool'] :: DeleteWarmPool -> Maybe Bool

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeleteWarmPool'] :: DeleteWarmPool -> Text

-- | Create a value of <a>DeleteWarmPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeleteWarmPool'</a>,
--   <a>deleteWarmPool_forceDelete</a> - Specifies that the warm pool is to
--   be deleted along with all of its associated instances, without waiting
--   for all instances to be terminated. This parameter also deletes any
--   outstanding lifecycle actions associated with the warm pool instances.
--   
--   <a>$sel:autoScalingGroupName:DeleteWarmPool'</a>,
--   <a>deleteWarmPool_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDeleteWarmPool :: Text -> DeleteWarmPool

-- | Specifies that the warm pool is to be deleted along with all of its
--   associated instances, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the warm pool instances.
deleteWarmPool_forceDelete :: Lens' DeleteWarmPool (Maybe Bool)

-- | The name of the Auto Scaling group.
deleteWarmPool_autoScalingGroupName :: Lens' DeleteWarmPool Text

-- | <i>See:</i> <a>newDeleteWarmPoolResponse</a> smart constructor.
data DeleteWarmPoolResponse
DeleteWarmPoolResponse' :: Int -> DeleteWarmPoolResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteWarmPoolResponse'] :: DeleteWarmPoolResponse -> Int

-- | Create a value of <a>DeleteWarmPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWarmPoolResponse'</a>,
--   <a>deleteWarmPoolResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWarmPoolResponse :: Int -> DeleteWarmPoolResponse

-- | The response's http status code.
deleteWarmPoolResponse_httpStatus :: Lens' DeleteWarmPoolResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPoolResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPoolResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPoolResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteWarmPool.DeleteWarmPool


-- | Deletes the specified tags.
module Network.AWS.AutoScaling.DeleteTags

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: [Tag] -> DeleteTags

-- | One or more tags.
[$sel:tags:DeleteTags'] :: DeleteTags -> [Tag]

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DeleteTags'</a>, <a>deleteTags_tags</a> - One or more
--   tags.
newDeleteTags :: DeleteTags

-- | One or more tags.
deleteTags_tags :: Lens' DeleteTags [Tag]

-- | <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: DeleteTagsResponse

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTagsResponse :: DeleteTagsResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteTags.DeleteTagsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteTags.DeleteTagsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteTags.DeleteTagsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteTags.DeleteTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteTags.DeleteTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteTags.DeleteTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteTags.DeleteTags


-- | Deletes the specified scheduled action.
module Network.AWS.AutoScaling.DeleteScheduledAction

-- | <i>See:</i> <a>newDeleteScheduledAction</a> smart constructor.
data DeleteScheduledAction
DeleteScheduledAction' :: Text -> Text -> DeleteScheduledAction

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeleteScheduledAction'] :: DeleteScheduledAction -> Text

-- | The name of the action to delete.
[$sel:scheduledActionName:DeleteScheduledAction'] :: DeleteScheduledAction -> Text

-- | Create a value of <a>DeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:scheduledActionName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scheduledActionName</a> - The name of the
--   action to delete.
newDeleteScheduledAction :: Text -> Text -> DeleteScheduledAction

-- | The name of the Auto Scaling group.
deleteScheduledAction_autoScalingGroupName :: Lens' DeleteScheduledAction Text

-- | The name of the action to delete.
deleteScheduledAction_scheduledActionName :: Lens' DeleteScheduledAction Text

-- | <i>See:</i> <a>newDeleteScheduledActionResponse</a> smart constructor.
data DeleteScheduledActionResponse
DeleteScheduledActionResponse' :: DeleteScheduledActionResponse

-- | Create a value of <a>DeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScheduledActionResponse :: DeleteScheduledActionResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteScheduledAction.DeleteScheduledAction


-- | Deletes the specified scaling policy.
--   
--   Deleting either a step scaling policy or a simple scaling policy
--   deletes the underlying alarm action, but does not delete the alarm,
--   even if it no longer has an associated action.
--   
--   For more information, see <a>Deleting a scaling policy</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.DeletePolicy

-- | <i>See:</i> <a>newDeletePolicy</a> smart constructor.
data DeletePolicy
DeletePolicy' :: Maybe Text -> Text -> DeletePolicy

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeletePolicy'] :: DeletePolicy -> Maybe Text

-- | The name or Amazon Resource Name (ARN) of the policy.
[$sel:policyName:DeletePolicy'] :: DeletePolicy -> Text

-- | Create a value of <a>DeletePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeletePolicy'</a>,
--   <a>deletePolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:DeletePolicy'</a>, <a>deletePolicy_policyName</a> -
--   The name or Amazon Resource Name (ARN) of the policy.
newDeletePolicy :: Text -> DeletePolicy

-- | The name of the Auto Scaling group.
deletePolicy_autoScalingGroupName :: Lens' DeletePolicy (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the policy.
deletePolicy_policyName :: Lens' DeletePolicy Text

-- | <i>See:</i> <a>newDeletePolicyResponse</a> smart constructor.
data DeletePolicyResponse
DeletePolicyResponse' :: DeletePolicyResponse

-- | Create a value of <a>DeletePolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePolicyResponse :: DeletePolicyResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance GHC.Show.Show Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance GHC.Read.Read Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeletePolicy.DeletePolicyResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeletePolicy.DeletePolicyResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeletePolicy.DeletePolicyResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeletePolicy.DeletePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeletePolicy.DeletePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeletePolicy.DeletePolicy


-- | Deletes the specified notification.
module Network.AWS.AutoScaling.DeleteNotificationConfiguration

-- | <i>See:</i> <a>newDeleteNotificationConfiguration</a> smart
--   constructor.
data DeleteNotificationConfiguration
DeleteNotificationConfiguration' :: Text -> Text -> DeleteNotificationConfiguration

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeleteNotificationConfiguration'] :: DeleteNotificationConfiguration -> Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
[$sel:topicARN:DeleteNotificationConfiguration'] :: DeleteNotificationConfiguration -> Text

-- | Create a value of <a>DeleteNotificationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeleteNotificationConfiguration'</a>,
--   <a>deleteNotificationConfiguration_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:topicARN:DeleteNotificationConfiguration'</a>,
--   <a>deleteNotificationConfiguration_topicARN</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
--   topic.
newDeleteNotificationConfiguration :: Text -> Text -> DeleteNotificationConfiguration

-- | The name of the Auto Scaling group.
deleteNotificationConfiguration_autoScalingGroupName :: Lens' DeleteNotificationConfiguration Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
deleteNotificationConfiguration_topicARN :: Lens' DeleteNotificationConfiguration Text

-- | <i>See:</i> <a>newDeleteNotificationConfigurationResponse</a> smart
--   constructor.
data DeleteNotificationConfigurationResponse
DeleteNotificationConfigurationResponse' :: DeleteNotificationConfigurationResponse

-- | Create a value of <a>DeleteNotificationConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteNotificationConfigurationResponse :: DeleteNotificationConfigurationResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfigurationResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfigurationResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfigurationResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteNotificationConfiguration.DeleteNotificationConfiguration


-- | Deletes the specified lifecycle hook.
--   
--   If there are any outstanding lifecycle actions, they are completed
--   first (<tt>ABANDON</tt> for launching instances, <tt>CONTINUE</tt> for
--   terminating instances).
module Network.AWS.AutoScaling.DeleteLifecycleHook

-- | <i>See:</i> <a>newDeleteLifecycleHook</a> smart constructor.
data DeleteLifecycleHook
DeleteLifecycleHook' :: Text -> Text -> DeleteLifecycleHook

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:DeleteLifecycleHook'] :: DeleteLifecycleHook -> Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeleteLifecycleHook'] :: DeleteLifecycleHook -> Text

-- | Create a value of <a>DeleteLifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookName:DeleteLifecycleHook'</a>,
--   <a>deleteLifecycleHook_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:DeleteLifecycleHook'</a>,
--   <a>deleteLifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDeleteLifecycleHook :: Text -> Text -> DeleteLifecycleHook

-- | The name of the lifecycle hook.
deleteLifecycleHook_lifecycleHookName :: Lens' DeleteLifecycleHook Text

-- | The name of the Auto Scaling group.
deleteLifecycleHook_autoScalingGroupName :: Lens' DeleteLifecycleHook Text

-- | <i>See:</i> <a>newDeleteLifecycleHookResponse</a> smart constructor.
data DeleteLifecycleHookResponse
DeleteLifecycleHookResponse' :: Int -> DeleteLifecycleHookResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLifecycleHookResponse'] :: DeleteLifecycleHookResponse -> Int

-- | Create a value of <a>DeleteLifecycleHookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLifecycleHookResponse'</a>,
--   <a>deleteLifecycleHookResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLifecycleHookResponse :: Int -> DeleteLifecycleHookResponse

-- | The response's http status code.
deleteLifecycleHookResponse_httpStatus :: Lens' DeleteLifecycleHookResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHookResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHookResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHookResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHookResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHookResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteLifecycleHook.DeleteLifecycleHook


-- | Deletes the specified launch configuration.
--   
--   The launch configuration must not be attached to an Auto Scaling
--   group. When this call completes, the launch configuration is no longer
--   available for use.
module Network.AWS.AutoScaling.DeleteLaunchConfiguration

-- | <i>See:</i> <a>newDeleteLaunchConfiguration</a> smart constructor.
data DeleteLaunchConfiguration
DeleteLaunchConfiguration' :: Text -> DeleteLaunchConfiguration

-- | The name of the launch configuration.
[$sel:launchConfigurationName:DeleteLaunchConfiguration'] :: DeleteLaunchConfiguration -> Text

-- | Create a value of <a>DeleteLaunchConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchConfigurationName:DeleteLaunchConfiguration'</a>,
--   <a>deleteLaunchConfiguration_launchConfigurationName</a> - The name of
--   the launch configuration.
newDeleteLaunchConfiguration :: Text -> DeleteLaunchConfiguration

-- | The name of the launch configuration.
deleteLaunchConfiguration_launchConfigurationName :: Lens' DeleteLaunchConfiguration Text

-- | <i>See:</i> <a>newDeleteLaunchConfigurationResponse</a> smart
--   constructor.
data DeleteLaunchConfigurationResponse
DeleteLaunchConfigurationResponse' :: DeleteLaunchConfigurationResponse

-- | Create a value of <a>DeleteLaunchConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLaunchConfigurationResponse :: DeleteLaunchConfigurationResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfigurationResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfigurationResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfigurationResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteLaunchConfiguration.DeleteLaunchConfiguration


-- | Deletes the specified Auto Scaling group.
--   
--   If the group has instances or scaling activities in progress, you must
--   specify the option to force the deletion in order for it to succeed.
--   
--   If the group has policies, deleting the group deletes the policies,
--   the underlying alarm actions, and any alarm that no longer has an
--   associated action.
--   
--   To remove instances from the Auto Scaling group before deleting it,
--   call the DetachInstances API with the list of instances and the option
--   to decrement the desired capacity. This ensures that Amazon EC2 Auto
--   Scaling does not launch replacement instances.
--   
--   To terminate all instances before deleting the Auto Scaling group,
--   call the UpdateAutoScalingGroup API and set the minimum size and
--   desired capacity of the Auto Scaling group to zero.
module Network.AWS.AutoScaling.DeleteAutoScalingGroup

-- | <i>See:</i> <a>newDeleteAutoScalingGroup</a> smart constructor.
data DeleteAutoScalingGroup
DeleteAutoScalingGroup' :: Maybe Bool -> Text -> DeleteAutoScalingGroup

-- | Specifies that the group is to be deleted along with all instances
--   associated with the group, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the group.
[$sel:forceDelete:DeleteAutoScalingGroup'] :: DeleteAutoScalingGroup -> Maybe Bool

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:DeleteAutoScalingGroup'] :: DeleteAutoScalingGroup -> Text

-- | Create a value of <a>DeleteAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeleteAutoScalingGroup'</a>,
--   <a>deleteAutoScalingGroup_forceDelete</a> - Specifies that the group
--   is to be deleted along with all instances associated with the group,
--   without waiting for all instances to be terminated. This parameter
--   also deletes any outstanding lifecycle actions associated with the
--   group.
--   
--   <a>$sel:autoScalingGroupName:DeleteAutoScalingGroup'</a>,
--   <a>deleteAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDeleteAutoScalingGroup :: Text -> DeleteAutoScalingGroup

-- | Specifies that the group is to be deleted along with all instances
--   associated with the group, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the group.
deleteAutoScalingGroup_forceDelete :: Lens' DeleteAutoScalingGroup (Maybe Bool)

-- | The name of the Auto Scaling group.
deleteAutoScalingGroup_autoScalingGroupName :: Lens' DeleteAutoScalingGroup Text

-- | <i>See:</i> <a>newDeleteAutoScalingGroupResponse</a> smart
--   constructor.
data DeleteAutoScalingGroupResponse
DeleteAutoScalingGroupResponse' :: DeleteAutoScalingGroupResponse

-- | Create a value of <a>DeleteAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAutoScalingGroupResponse :: DeleteAutoScalingGroupResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance GHC.Generics.Generic Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroupResponse
instance GHC.Show.Show Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroupResponse
instance GHC.Read.Read Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroupResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.DeleteAutoScalingGroup.DeleteAutoScalingGroup


-- | Creates or updates tags for the specified Auto Scaling group.
--   
--   When you specify a tag with a key that already exists, the operation
--   overwrites the previous tag definition, and you do not get an error
--   message.
--   
--   For more information, see <a>Tagging Auto Scaling groups and
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.CreateOrUpdateTags

-- | <i>See:</i> <a>newCreateOrUpdateTags</a> smart constructor.
data CreateOrUpdateTags
CreateOrUpdateTags' :: [Tag] -> CreateOrUpdateTags

-- | One or more tags.
[$sel:tags:CreateOrUpdateTags'] :: CreateOrUpdateTags -> [Tag]

-- | Create a value of <a>CreateOrUpdateTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateOrUpdateTags'</a>, <a>createOrUpdateTags_tags</a> -
--   One or more tags.
newCreateOrUpdateTags :: CreateOrUpdateTags

-- | One or more tags.
createOrUpdateTags_tags :: Lens' CreateOrUpdateTags [Tag]

-- | <i>See:</i> <a>newCreateOrUpdateTagsResponse</a> smart constructor.
data CreateOrUpdateTagsResponse
CreateOrUpdateTagsResponse' :: CreateOrUpdateTagsResponse

-- | Create a value of <a>CreateOrUpdateTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateOrUpdateTagsResponse :: CreateOrUpdateTagsResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance GHC.Show.Show Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance GHC.Read.Read Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTagsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTagsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTagsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.CreateOrUpdateTags.CreateOrUpdateTags


-- | Creates a launch configuration.
--   
--   If you exceed your maximum limit of launch configurations, the call
--   fails. To query this limit, call the DescribeAccountLimits API. For
--   information about updating this limit, see <a>Amazon EC2 Auto Scaling
--   service quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   For more information, see <a>Launch configurations</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.CreateLaunchConfiguration

-- | <i>See:</i> <a>newCreateLaunchConfiguration</a> smart constructor.
data CreateLaunchConfiguration
CreateLaunchConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [BlockDeviceMapping] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMonitoring -> Maybe InstanceMetadataOptions -> Text -> CreateLaunchConfiguration

-- | The ID of the instance to use to create the launch configuration. The
--   new launch configuration derives attributes from the instance, except
--   for the block device mapping.
--   
--   To create a launch configuration with a block device mapping or
--   override any other instance attributes, specify them as part of the
--   same request.
--   
--   For more information, see <a>Creating a launch configuration using an
--   EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify both
--   <tt>ImageId</tt> and <tt>InstanceType</tt>.
[$sel:instanceId:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). The optimization provides
--   dedicated throughput to Amazon EBS and an optimized configuration
--   stack to provide optimal I/O performance. This optimization is not
--   available with all instance types. Additional fees are incurred when
--   you enable EBS optimization for an instance type that is not
--   EBS-optimized by default. For more information, see <a>Amazon
--   EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   The default value is <tt>false</tt>.
[$sel:ebsOptimized:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Bool

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
[$sel:userData:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | Specifies the instance type of the EC2 instance.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>InstanceType</tt>.
[$sel:instanceType:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | The ID of the RAM disk to select.
[$sel:ramdiskId:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | The IDs of one or more security groups for the specified
--   ClassicLink-enabled VPC. For more information, see <a>ClassicLink</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a>Linking
--   EC2-Classic instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you specify the <tt>ClassicLinkVPCId</tt> parameter, you must
--   specify this parameter.
[$sel:classicLinkVPCSecurityGroups:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe [Text]

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   When you change your maximum price by creating a new launch
--   configuration, running instances will continue to run as long as the
--   maximum price for those running instances is higher than the current
--   Spot price.
[$sel:spotPrice:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | For Auto Scaling groups that are running in a virtual private cloud
--   (VPC), specifies whether to assign a public IP address to the group's
--   instances. If you specify <tt>true</tt>, each instance in the Auto
--   Scaling group receives a unique public IP address. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you specify this parameter, you must specify at least one subnet
--   for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   If the instance is launched into a default subnet, the default is to
--   assign a public IP address, unless you disabled the option to assign a
--   public IP address on the subnet. If the instance is launched into a
--   nondefault subnet, the default is not to assign a public IP address,
--   unless you enabled the option to assign a public IP address on the
--   subnet.
[$sel:associatePublicIpAddress:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Bool

-- | The ID of the Amazon Machine Image (AMI) that was assigned during
--   registration. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>ImageId</tt>.
[$sel:imageId:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group.
--   
--   <ul>
--   <li><i>EC2-VPC</i> Specify the security group IDs. For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.</li>
--   <li><i>EC2-Classic</i> Specify either the security group names or the
--   security group IDs. For more information, see <a>Amazon EC2 Security
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.</li>
--   </ul>
[$sel:securityGroups:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe [Text]

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role.
--   
--   For more information, see <a>IAM role for applications that run on
--   Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:iamInstanceProfile:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   This parameter can only be used if you are launching EC2-Classic
--   instances.
[$sel:classicLinkVPCId:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | A block device mapping, which specifies the block devices for the
--   instance. You can specify virtual devices and EBS volumes. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
[$sel:blockDeviceMappings:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe [BlockDeviceMapping]

-- | The ID of the kernel associated with the AMI.
[$sel:kernelId:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | The tenancy of the instance. An instance with <tt>dedicated</tt>
--   tenancy runs on isolated, single-tenant hardware and can only be
--   launched into a VPC.
--   
--   To launch dedicated instances into a shared tenancy VPC (a VPC with
--   the instance placement tenancy attribute set to <tt>default</tt>), you
--   must set the value of this parameter to <tt>dedicated</tt>.
--   
--   If you specify <tt>PlacementTenancy</tt>, you must specify at least
--   one subnet for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>default</tt> | <tt>dedicated</tt>
[$sel:placementTenancy:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | The name of the key pair. For more information, see <a>Amazon EC2 Key
--   Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
[$sel:keyName:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe Text

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   The default value is <tt>true</tt> (enabled).
--   
--   When detailed monitoring is enabled, Amazon CloudWatch generates
--   metrics every minute and your account is charged a fee. When you
--   disable detailed monitoring, CloudWatch generates metrics every 5
--   minutes. For more information, see <a>Configure Monitoring for Auto
--   Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:instanceMonitoring:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe InstanceMonitoring

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
[$sel:metadataOptions:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Maybe InstanceMetadataOptions

-- | The name of the launch configuration. This name must be unique per
--   Region per account.
[$sel:launchConfigurationName:CreateLaunchConfiguration'] :: CreateLaunchConfiguration -> Text

-- | Create a value of <a>CreateLaunchConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceId</a> - The ID of the instance
--   to use to create the launch configuration. The new launch
--   configuration derives attributes from the instance, except for the
--   block device mapping.
--   
--   To create a launch configuration with a block device mapping or
--   override any other instance attributes, specify them as part of the
--   same request.
--   
--   For more information, see <a>Creating a launch configuration using an
--   EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify both
--   <tt>ImageId</tt> and <tt>InstanceType</tt>.
--   
--   <a>$sel:ebsOptimized:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_ebsOptimized</a> - Specifies whether the
--   launch configuration is optimized for EBS I/O (<tt>true</tt>) or not
--   (<tt>false</tt>). The optimization provides dedicated throughput to
--   Amazon EBS and an optimized configuration stack to provide optimal I/O
--   performance. This optimization is not available with all instance
--   types. Additional fees are incurred when you enable EBS optimization
--   for an instance type that is not EBS-optimized by default. For more
--   information, see <a>Amazon EBS-Optimized Instances</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:userData:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_userData</a> - The user data to make
--   available to the launched EC2 instances. For more information, see
--   <a>Instance metadata and user data</a> (Linux) and <a>Instance
--   metadata and user data</a> (Windows). If you are using a command line
--   tool, base64-encoding is performed for you, and you can load the text
--   from a file. Otherwise, you must provide base64-encoded text. User
--   data is limited to 16 KB.
--   
--   <a>$sel:instanceType:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceType</a> - Specifies the instance
--   type of the EC2 instance.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>InstanceType</tt>.
--   
--   <a>$sel:ramdiskId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_ramdiskId</a> - The ID of the RAM disk to
--   select.
--   
--   <a>$sel:classicLinkVPCSecurityGroups:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_classicLinkVPCSecurityGroups</a> - The
--   IDs of one or more security groups for the specified
--   ClassicLink-enabled VPC. For more information, see <a>ClassicLink</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a>Linking
--   EC2-Classic instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you specify the <tt>ClassicLinkVPCId</tt> parameter, you must
--   specify this parameter.
--   
--   <a>$sel:spotPrice:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_spotPrice</a> - The maximum hourly price
--   to be paid for any Spot Instance launched to fulfill the request. Spot
--   Instances are launched when the price you specify exceeds the current
--   Spot price. For more information, see <a>Requesting Spot Instances</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   When you change your maximum price by creating a new launch
--   configuration, running instances will continue to run as long as the
--   maximum price for those running instances is higher than the current
--   Spot price.
--   
--   <a>$sel:associatePublicIpAddress:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_associatePublicIpAddress</a> - For Auto
--   Scaling groups that are running in a virtual private cloud (VPC),
--   specifies whether to assign a public IP address to the group's
--   instances. If you specify <tt>true</tt>, each instance in the Auto
--   Scaling group receives a unique public IP address. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you specify this parameter, you must specify at least one subnet
--   for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   If the instance is launched into a default subnet, the default is to
--   assign a public IP address, unless you disabled the option to assign a
--   public IP address on the subnet. If the instance is launched into a
--   nondefault subnet, the default is not to assign a public IP address,
--   unless you enabled the option to assign a public IP address on the
--   subnet.
--   
--   <a>$sel:imageId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_imageId</a> - The ID of the Amazon
--   Machine Image (AMI) that was assigned during registration. For more
--   information, see <a>Finding an AMI</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>ImageId</tt>.
--   
--   <a>$sel:securityGroups:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_securityGroups</a> - A list that contains
--   the security groups to assign to the instances in the Auto Scaling
--   group.
--   
--   <ul>
--   <li><i>EC2-VPC</i> Specify the security group IDs. For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.</li>
--   <li><i>EC2-Classic</i> Specify either the security group names or the
--   security group IDs. For more information, see <a>Amazon EC2 Security
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.</li>
--   </ul>
--   
--   <a>$sel:iamInstanceProfile:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_iamInstanceProfile</a> - The name or the
--   Amazon Resource Name (ARN) of the instance profile associated with the
--   IAM role for the instance. The instance profile contains the IAM role.
--   
--   For more information, see <a>IAM role for applications that run on
--   Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:classicLinkVPCId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_classicLinkVPCId</a> - The ID of a
--   ClassicLink-enabled VPC to link your EC2-Classic instances to. For
--   more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   This parameter can only be used if you are launching EC2-Classic
--   instances.
--   
--   <a>$sel:blockDeviceMappings:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_blockDeviceMappings</a> - A block device
--   mapping, which specifies the block devices for the instance. You can
--   specify virtual devices and EBS volumes. For more information, see
--   <a>Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:kernelId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_kernelId</a> - The ID of the kernel
--   associated with the AMI.
--   
--   <a>$sel:placementTenancy:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_placementTenancy</a> - The tenancy of the
--   instance. An instance with <tt>dedicated</tt> tenancy runs on
--   isolated, single-tenant hardware and can only be launched into a VPC.
--   
--   To launch dedicated instances into a shared tenancy VPC (a VPC with
--   the instance placement tenancy attribute set to <tt>default</tt>), you
--   must set the value of this parameter to <tt>dedicated</tt>.
--   
--   If you specify <tt>PlacementTenancy</tt>, you must specify at least
--   one subnet for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>default</tt> | <tt>dedicated</tt>
--   
--   <a>$sel:keyName:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_keyName</a> - The name of the key pair.
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:instanceMonitoring:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceMonitoring</a> - Controls whether
--   instances in this group are launched with detailed (<tt>true</tt>) or
--   basic (<tt>false</tt>) monitoring.
--   
--   The default value is <tt>true</tt> (enabled).
--   
--   When detailed monitoring is enabled, Amazon CloudWatch generates
--   metrics every minute and your account is charged a fee. When you
--   disable detailed monitoring, CloudWatch generates metrics every 5
--   minutes. For more information, see <a>Configure Monitoring for Auto
--   Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:metadataOptions:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_metadataOptions</a> - The metadata
--   options for the instances. For more information, see <a>Configuring
--   the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_launchConfigurationName</a> - The name of
--   the launch configuration. This name must be unique per Region per
--   account.
newCreateLaunchConfiguration :: Text -> CreateLaunchConfiguration

-- | The ID of the instance to use to create the launch configuration. The
--   new launch configuration derives attributes from the instance, except
--   for the block device mapping.
--   
--   To create a launch configuration with a block device mapping or
--   override any other instance attributes, specify them as part of the
--   same request.
--   
--   For more information, see <a>Creating a launch configuration using an
--   EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify both
--   <tt>ImageId</tt> and <tt>InstanceType</tt>.
createLaunchConfiguration_instanceId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). The optimization provides
--   dedicated throughput to Amazon EBS and an optimized configuration
--   stack to provide optimal I/O performance. This optimization is not
--   available with all instance types. Additional fees are incurred when
--   you enable EBS optimization for an instance type that is not
--   EBS-optimized by default. For more information, see <a>Amazon
--   EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   The default value is <tt>false</tt>.
createLaunchConfiguration_ebsOptimized :: Lens' CreateLaunchConfiguration (Maybe Bool)

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
createLaunchConfiguration_userData :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Specifies the instance type of the EC2 instance.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>InstanceType</tt>.
createLaunchConfiguration_instanceType :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The ID of the RAM disk to select.
createLaunchConfiguration_ramdiskId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The IDs of one or more security groups for the specified
--   ClassicLink-enabled VPC. For more information, see <a>ClassicLink</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a>Linking
--   EC2-Classic instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you specify the <tt>ClassicLinkVPCId</tt> parameter, you must
--   specify this parameter.
createLaunchConfiguration_classicLinkVPCSecurityGroups :: Lens' CreateLaunchConfiguration (Maybe [Text])

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   When you change your maximum price by creating a new launch
--   configuration, running instances will continue to run as long as the
--   maximum price for those running instances is higher than the current
--   Spot price.
createLaunchConfiguration_spotPrice :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | For Auto Scaling groups that are running in a virtual private cloud
--   (VPC), specifies whether to assign a public IP address to the group's
--   instances. If you specify <tt>true</tt>, each instance in the Auto
--   Scaling group receives a unique public IP address. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you specify this parameter, you must specify at least one subnet
--   for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   If the instance is launched into a default subnet, the default is to
--   assign a public IP address, unless you disabled the option to assign a
--   public IP address on the subnet. If the instance is launched into a
--   nondefault subnet, the default is not to assign a public IP address,
--   unless you enabled the option to assign a public IP address on the
--   subnet.
createLaunchConfiguration_associatePublicIpAddress :: Lens' CreateLaunchConfiguration (Maybe Bool)

-- | The ID of the Amazon Machine Image (AMI) that was assigned during
--   registration. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>ImageId</tt>.
createLaunchConfiguration_imageId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group.
--   
--   <ul>
--   <li><i>EC2-VPC</i> Specify the security group IDs. For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.</li>
--   <li><i>EC2-Classic</i> Specify either the security group names or the
--   security group IDs. For more information, see <a>Amazon EC2 Security
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.</li>
--   </ul>
createLaunchConfiguration_securityGroups :: Lens' CreateLaunchConfiguration (Maybe [Text])

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role.
--   
--   For more information, see <a>IAM role for applications that run on
--   Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createLaunchConfiguration_iamInstanceProfile :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   This parameter can only be used if you are launching EC2-Classic
--   instances.
createLaunchConfiguration_classicLinkVPCId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | A block device mapping, which specifies the block devices for the
--   instance. You can specify virtual devices and EBS volumes. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
createLaunchConfiguration_blockDeviceMappings :: Lens' CreateLaunchConfiguration (Maybe [BlockDeviceMapping])

-- | The ID of the kernel associated with the AMI.
createLaunchConfiguration_kernelId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The tenancy of the instance. An instance with <tt>dedicated</tt>
--   tenancy runs on isolated, single-tenant hardware and can only be
--   launched into a VPC.
--   
--   To launch dedicated instances into a shared tenancy VPC (a VPC with
--   the instance placement tenancy attribute set to <tt>default</tt>), you
--   must set the value of this parameter to <tt>dedicated</tt>.
--   
--   If you specify <tt>PlacementTenancy</tt>, you must specify at least
--   one subnet for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>default</tt> | <tt>dedicated</tt>
createLaunchConfiguration_placementTenancy :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The name of the key pair. For more information, see <a>Amazon EC2 Key
--   Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
createLaunchConfiguration_keyName :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   The default value is <tt>true</tt> (enabled).
--   
--   When detailed monitoring is enabled, Amazon CloudWatch generates
--   metrics every minute and your account is charged a fee. When you
--   disable detailed monitoring, CloudWatch generates metrics every 5
--   minutes. For more information, see <a>Configure Monitoring for Auto
--   Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createLaunchConfiguration_instanceMonitoring :: Lens' CreateLaunchConfiguration (Maybe InstanceMonitoring)

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
createLaunchConfiguration_metadataOptions :: Lens' CreateLaunchConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the launch configuration. This name must be unique per
--   Region per account.
createLaunchConfiguration_launchConfigurationName :: Lens' CreateLaunchConfiguration Text

-- | <i>See:</i> <a>newCreateLaunchConfigurationResponse</a> smart
--   constructor.
data CreateLaunchConfigurationResponse
CreateLaunchConfigurationResponse' :: CreateLaunchConfigurationResponse

-- | Create a value of <a>CreateLaunchConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLaunchConfigurationResponse :: CreateLaunchConfigurationResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance GHC.Show.Show Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance GHC.Read.Read Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfigurationResponse
instance GHC.Show.Show Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfigurationResponse
instance GHC.Read.Read Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfigurationResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.CreateLaunchConfiguration.CreateLaunchConfiguration


-- | __We strongly recommend using a launch template when calling this
--   operation to ensure full functionality for Amazon EC2 Auto Scaling and
--   Amazon EC2.__
--   
--   Creates an Auto Scaling group with the specified name and attributes.
--   
--   If you exceed your maximum limit of Auto Scaling groups, the call
--   fails. To query this limit, call the DescribeAccountLimits API. For
--   information about updating this limit, see <a>Amazon EC2 Auto Scaling
--   service quotas</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   For introductory exercises for creating an Auto Scaling group, see
--   <a>Getting started with Amazon EC2 Auto Scaling</a> and <a>Tutorial:
--   Set up a scaled and load-balanced application</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>. For more information, see <a>Auto Scaling
--   groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Every Auto Scaling group has three size parameters
--   (<tt>DesiredCapacity</tt>, <tt>MaxSize</tt>, and <tt>MinSize</tt>).
--   Usually, you set these sizes based on a specific number of instances.
--   However, if you configure a mixed instances policy that defines
--   weights for the instance types, you must specify these sizes with the
--   same units that you use for weighting instances.
module Network.AWS.AutoScaling.CreateAutoScalingGroup

-- | <i>See:</i> <a>newCreateAutoScalingGroup</a> smart constructor.
data CreateAutoScalingGroup
CreateAutoScalingGroup' :: Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe [Tag] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [LifecycleHookSpecification] -> Maybe [Text] -> Text -> Int -> Int -> CreateAutoScalingGroup

-- | A list of Availability Zones where instances in the Auto Scaling group
--   can be created. This parameter is optional if you specify one or more
--   subnets for <tt>VPCZoneIdentifier</tt>.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into EC2-Classic.
[$sel:availabilityZones:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [Text]

-- | The ID of the instance used to base the launch configuration on. If
--   specified, Amazon EC2 Auto Scaling uses the configuration values from
--   the specified instance to create a new launch configuration. To get
--   the instance ID, use the Amazon EC2 <a>DescribeInstances</a> API
--   operation. For more information, see <a>Creating an Auto Scaling group
--   using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:instanceId:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   at the time of its creation and the capacity it attempts to maintain.
--   It can scale beyond this capacity if you configure auto scaling. This
--   number must be greater than or equal to the minimum size of the group
--   and less than or equal to the maximum size of the group. If you do not
--   specify a desired capacity, the default is the minimum size of the
--   group.
[$sel:desiredCapacity:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Int

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:defaultCooldown:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Int

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:maxInstanceLifetime:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Int

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
[$sel:placementGroup:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | Parameters used to specify the launch template and version to use to
--   launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   The launch template that is specified must be configured for use with
--   an Auto Scaling group. For more information, see <a>Creating a launch
--   template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:launchTemplate:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe LaunchTemplateSpecification

-- | The name of the launch configuration to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
[$sel:launchConfigurationName:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> (default) and <tt>ELB</tt>. If you configure an Auto
--   Scaling group to use load balancer (ELB) health checks, it considers
--   the instance unhealthy if it fails either the EC2 status checks or the
--   load balancer health checks. For more information, see <a>Health
--   checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:healthCheckType:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | Reserved.
[$sel:context:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | An embedded object that specifies a mixed instances policy. The
--   required properties must be specified. If optional properties are
--   unspecified, their default values are used.
--   
--   The policy includes properties that not only define the distribution
--   of On-Demand Instances and Spot Instances, the maximum price to pay
--   for Spot Instances, and how the Auto Scaling group allocates instance
--   types to fulfill On-Demand and Spot capacities, but also the
--   properties that specify the instance configuration information—the
--   launch template and instance types. The policy can also include a
--   weight for each instance type and different launch templates for
--   individual instance types. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:mixedInstancesPolicy:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe MixedInstancesPolicy

-- | One or more tags. You can tag your Auto Scaling group and propagate
--   the tags to the Amazon EC2 instances it launches. Tags are not
--   propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes,
--   specify the tags in a launch template but use caution. If the launch
--   template specifies an instance tag with a key that is also specified
--   for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the
--   value of that instance tag with the value specified by the Auto
--   Scaling group. For more information, see <a>Tagging Auto Scaling
--   groups and instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:tags:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [Tag]

-- | A list of Classic Load Balancers associated with this Auto Scaling
--   group. For Application Load Balancers, Network Load Balancers, and
--   Gateway Load Balancers, specify the <tt>TargetGroupARNs</tt> property
--   instead.
[$sel:loadBalancerNames:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [Text]

-- | The Amazon Resource Names (ARN) of the target groups to associate with
--   the Auto Scaling group. Instances are registered as targets in a
--   target group, and traffic is routed to the target group. For more
--   information, see <a>Elastic Load Balancing and Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:targetGroupARNs:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [Text]

-- | A comma-separated list of subnet IDs for a virtual private cloud (VPC)
--   where instances in the Auto Scaling group can be created. If you
--   specify <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>,
--   the subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into a VPC.
[$sel:vPCZoneIdentifier:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity
--   Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon
--   EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon
--   EC2 notifies that a Spot Instance is at an elevated risk of
--   interruption. After launching a new instance, it then terminates an
--   old instance. For more information, see <a>Amazon EC2 Auto Scaling
--   Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:capacityRebalance:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role
--   named <tt>AWSServiceRoleForAutoScaling</tt>, which it creates if it
--   does not exist. For more information, see <a>Service-linked roles</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:serviceLinkedRoleARN:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Text

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. During this time, any health check failures for the
--   instance are ignored. The default value is <tt>0</tt>. For more
--   information, see <a>Health check grace period</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
[$sel:healthCheckGracePeriod:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Int

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:newInstancesProtectedFromScaleIn':CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe Bool

-- | One or more lifecycle hooks for the group, which specify actions to
--   perform when Amazon EC2 Auto Scaling launches or terminates instances.
[$sel:lifecycleHookSpecificationList:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [LifecycleHookSpecification]

-- | A policy or a list of policies that are used to select the instance to
--   terminate. These policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:terminationPolicies:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Maybe [Text]

-- | The name of the Auto Scaling group. This name must be unique per
--   Region per account.
[$sel:autoScalingGroupName:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Text

-- | The minimum size of the group.
[$sel:minSize:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Int

-- | The maximum size of the group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
[$sel:maxSize:CreateAutoScalingGroup'] :: CreateAutoScalingGroup -> Int

-- | Create a value of <a>CreateAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_availabilityZones</a> - A list of
--   Availability Zones where instances in the Auto Scaling group can be
--   created. This parameter is optional if you specify one or more subnets
--   for <tt>VPCZoneIdentifier</tt>.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into EC2-Classic.
--   
--   <a>$sel:instanceId:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_instanceId</a> - The ID of the instance used
--   to base the launch configuration on. If specified, Amazon EC2 Auto
--   Scaling uses the configuration values from the specified instance to
--   create a new launch configuration. To get the instance ID, use the
--   Amazon EC2 <a>DescribeInstances</a> API operation. For more
--   information, see <a>Creating an Auto Scaling group using an EC2
--   instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:desiredCapacity:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_desiredCapacity</a> - The desired capacity
--   is the initial capacity of the Auto Scaling group at the time of its
--   creation and the capacity it attempts to maintain. It can scale beyond
--   this capacity if you configure auto scaling. This number must be
--   greater than or equal to the minimum size of the group and less than
--   or equal to the maximum size of the group. If you do not specify a
--   desired capacity, the default is the minimum size of the group.
--   
--   <a>$sel:defaultCooldown:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_defaultCooldown</a> - The amount of time, in
--   seconds, after a scaling activity completes before another scaling
--   activity can start. The default value is <tt>300</tt>. This setting
--   applies when using simple scaling policies, but not when using other
--   scaling policies or scheduled scaling. For more information, see
--   <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxInstanceLifetime:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_maxInstanceLifetime</a> - The maximum amount
--   of time, in seconds, that an instance can be in service. The default
--   is null. If specified, the value must be either 0 or a number equal to
--   or greater than 86,400 seconds (1 day). For more information, see
--   <a>Replacing Auto Scaling instances based on maximum instance
--   lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:placementGroup:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_placementGroup</a> - The name of an existing
--   placement group into which to launch your instances, if any. A
--   placement group is a logical grouping of instances within a single
--   Availability Zone. You cannot specify multiple Availability Zones and
--   a placement group. For more information, see <a>Placement Groups</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:launchTemplate:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_launchTemplate</a> - Parameters used to
--   specify the launch template and version to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   The launch template that is specified must be configured for use with
--   an Auto Scaling group. For more information, see <a>Creating a launch
--   template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_launchConfigurationName</a> - The name of
--   the launch configuration to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   <a>$sel:healthCheckType:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_healthCheckType</a> - The service to use for
--   the health checks. The valid values are <tt>EC2</tt> (default) and
--   <tt>ELB</tt>. If you configure an Auto Scaling group to use load
--   balancer (ELB) health checks, it considers the instance unhealthy if
--   it fails either the EC2 status checks or the load balancer health
--   checks. For more information, see <a>Health checks for Auto Scaling
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:context:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_context</a> - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_mixedInstancesPolicy</a> - An embedded
--   object that specifies a mixed instances policy. The required
--   properties must be specified. If optional properties are unspecified,
--   their default values are used.
--   
--   The policy includes properties that not only define the distribution
--   of On-Demand Instances and Spot Instances, the maximum price to pay
--   for Spot Instances, and how the Auto Scaling group allocates instance
--   types to fulfill On-Demand and Spot capacities, but also the
--   properties that specify the instance configuration information—the
--   launch template and instance types. The policy can also include a
--   weight for each instance type and different launch templates for
--   individual instance types. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:tags:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_tags</a> - One or more tags. You can tag
--   your Auto Scaling group and propagate the tags to the Amazon EC2
--   instances it launches. Tags are not propagated to Amazon EBS volumes.
--   To add tags to Amazon EBS volumes, specify the tags in a launch
--   template but use caution. If the launch template specifies an instance
--   tag with a key that is also specified for the Auto Scaling group,
--   Amazon EC2 Auto Scaling overrides the value of that instance tag with
--   the value specified by the Auto Scaling group. For more information,
--   see <a>Tagging Auto Scaling groups and instances</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:loadBalancerNames:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_loadBalancerNames</a> - A list of Classic
--   Load Balancers associated with this Auto Scaling group. For
--   Application Load Balancers, Network Load Balancers, and Gateway Load
--   Balancers, specify the <tt>TargetGroupARNs</tt> property instead.
--   
--   <a>$sel:targetGroupARNs:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_targetGroupARNs</a> - The Amazon Resource
--   Names (ARN) of the target groups to associate with the Auto Scaling
--   group. Instances are registered as targets in a target group, and
--   traffic is routed to the target group. For more information, see
--   <a>Elastic Load Balancing and Amazon EC2 Auto Scaling</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:vPCZoneIdentifier:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_vPCZoneIdentifier</a> - A comma-separated
--   list of subnet IDs for a virtual private cloud (VPC) where instances
--   in the Auto Scaling group can be created. If you specify
--   <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>, the
--   subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into a VPC.
--   
--   <a>$sel:capacityRebalance:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_capacityRebalance</a> - Indicates whether
--   Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is
--   disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto
--   Scaling attempts to launch a Spot Instance whenever Amazon EC2
--   notifies that a Spot Instance is at an elevated risk of interruption.
--   After launching a new instance, it then terminates an old instance.
--   For more information, see <a>Amazon EC2 Auto Scaling Capacity
--   Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:serviceLinkedRoleARN:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_serviceLinkedRoleARN</a> - The Amazon
--   Resource Name (ARN) of the service-linked role that the Auto Scaling
--   group uses to call other Amazon Web Services on your behalf. By
--   default, Amazon EC2 Auto Scaling uses a service-linked role named
--   <tt>AWSServiceRoleForAutoScaling</tt>, which it creates if it does not
--   exist. For more information, see <a>Service-linked roles</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:healthCheckGracePeriod:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_healthCheckGracePeriod</a> - The amount of
--   time, in seconds, that Amazon EC2 Auto Scaling waits before checking
--   the health status of an EC2 instance that has come into service.
--   During this time, any health check failures for the instance are
--   ignored. The default value is <tt>0</tt>. For more information, see
--   <a>Health check grace period</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_newInstancesProtectedFromScaleIn</a> -
--   Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:lifecycleHookSpecificationList:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_lifecycleHookSpecificationList</a> - One or
--   more lifecycle hooks for the group, which specify actions to perform
--   when Amazon EC2 Auto Scaling launches or terminates instances.
--   
--   <a>$sel:terminationPolicies:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_terminationPolicies</a> - A policy or a list
--   of policies that are used to select the instance to terminate. These
--   policies are executed in the order that you list them. For more
--   information, see <a>Controlling which Auto Scaling instances terminate
--   during scale in</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group. This name must be unique per Region per account.
--   
--   <a>$sel:minSize:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_minSize</a> - The minimum size of the group.
--   
--   <a>$sel:maxSize:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_maxSize</a> - The maximum size of the group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
newCreateAutoScalingGroup :: Text -> Int -> Int -> CreateAutoScalingGroup

-- | A list of Availability Zones where instances in the Auto Scaling group
--   can be created. This parameter is optional if you specify one or more
--   subnets for <tt>VPCZoneIdentifier</tt>.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into EC2-Classic.
createAutoScalingGroup_availabilityZones :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The ID of the instance used to base the launch configuration on. If
--   specified, Amazon EC2 Auto Scaling uses the configuration values from
--   the specified instance to create a new launch configuration. To get
--   the instance ID, use the Amazon EC2 <a>DescribeInstances</a> API
--   operation. For more information, see <a>Creating an Auto Scaling group
--   using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_instanceId :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   at the time of its creation and the capacity it attempts to maintain.
--   It can scale beyond this capacity if you configure auto scaling. This
--   number must be greater than or equal to the minimum size of the group
--   and less than or equal to the maximum size of the group. If you do not
--   specify a desired capacity, the default is the minimum size of the
--   group.
createAutoScalingGroup_desiredCapacity :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_defaultCooldown :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_maxInstanceLifetime :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
createAutoScalingGroup_placementGroup :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Parameters used to specify the launch template and version to use to
--   launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   The launch template that is specified must be configured for use with
--   an Auto Scaling group. For more information, see <a>Creating a launch
--   template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_launchTemplate :: Lens' CreateAutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the launch configuration to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
createAutoScalingGroup_launchConfigurationName :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> (default) and <tt>ELB</tt>. If you configure an Auto
--   Scaling group to use load balancer (ELB) health checks, it considers
--   the instance unhealthy if it fails either the EC2 status checks or the
--   load balancer health checks. For more information, see <a>Health
--   checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_healthCheckType :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Reserved.
createAutoScalingGroup_context :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | An embedded object that specifies a mixed instances policy. The
--   required properties must be specified. If optional properties are
--   unspecified, their default values are used.
--   
--   The policy includes properties that not only define the distribution
--   of On-Demand Instances and Spot Instances, the maximum price to pay
--   for Spot Instances, and how the Auto Scaling group allocates instance
--   types to fulfill On-Demand and Spot capacities, but also the
--   properties that specify the instance configuration information—the
--   launch template and instance types. The policy can also include a
--   weight for each instance type and different launch templates for
--   individual instance types. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_mixedInstancesPolicy :: Lens' CreateAutoScalingGroup (Maybe MixedInstancesPolicy)

-- | One or more tags. You can tag your Auto Scaling group and propagate
--   the tags to the Amazon EC2 instances it launches. Tags are not
--   propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes,
--   specify the tags in a launch template but use caution. If the launch
--   template specifies an instance tag with a key that is also specified
--   for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the
--   value of that instance tag with the value specified by the Auto
--   Scaling group. For more information, see <a>Tagging Auto Scaling
--   groups and instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_tags :: Lens' CreateAutoScalingGroup (Maybe [Tag])

-- | A list of Classic Load Balancers associated with this Auto Scaling
--   group. For Application Load Balancers, Network Load Balancers, and
--   Gateway Load Balancers, specify the <tt>TargetGroupARNs</tt> property
--   instead.
createAutoScalingGroup_loadBalancerNames :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the target groups to associate with
--   the Auto Scaling group. Instances are registered as targets in a
--   target group, and traffic is routed to the target group. For more
--   information, see <a>Elastic Load Balancing and Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_targetGroupARNs :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | A comma-separated list of subnet IDs for a virtual private cloud (VPC)
--   where instances in the Auto Scaling group can be created. If you
--   specify <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>,
--   the subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into a VPC.
createAutoScalingGroup_vPCZoneIdentifier :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity
--   Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon
--   EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon
--   EC2 notifies that a Spot Instance is at an elevated risk of
--   interruption. After launching a new instance, it then terminates an
--   old instance. For more information, see <a>Amazon EC2 Auto Scaling
--   Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_capacityRebalance :: Lens' CreateAutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role
--   named <tt>AWSServiceRoleForAutoScaling</tt>, which it creates if it
--   does not exist. For more information, see <a>Service-linked roles</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_serviceLinkedRoleARN :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. During this time, any health check failures for the
--   instance are ignored. The default value is <tt>0</tt>. For more
--   information, see <a>Health check grace period</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
createAutoScalingGroup_healthCheckGracePeriod :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' CreateAutoScalingGroup (Maybe Bool)

-- | One or more lifecycle hooks for the group, which specify actions to
--   perform when Amazon EC2 Auto Scaling launches or terminates instances.
createAutoScalingGroup_lifecycleHookSpecificationList :: Lens' CreateAutoScalingGroup (Maybe [LifecycleHookSpecification])

-- | A policy or a list of policies that are used to select the instance to
--   terminate. These policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_terminationPolicies :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group. This name must be unique per
--   Region per account.
createAutoScalingGroup_autoScalingGroupName :: Lens' CreateAutoScalingGroup Text

-- | The minimum size of the group.
createAutoScalingGroup_minSize :: Lens' CreateAutoScalingGroup Int

-- | The maximum size of the group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
createAutoScalingGroup_maxSize :: Lens' CreateAutoScalingGroup Int

-- | <i>See:</i> <a>newCreateAutoScalingGroupResponse</a> smart
--   constructor.
data CreateAutoScalingGroupResponse
CreateAutoScalingGroupResponse' :: CreateAutoScalingGroupResponse

-- | Create a value of <a>CreateAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateAutoScalingGroupResponse :: CreateAutoScalingGroupResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance GHC.Show.Show Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance GHC.Read.Read Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance GHC.Generics.Generic Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroupResponse
instance GHC.Show.Show Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroupResponse
instance GHC.Read.Read Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroupResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.CreateAutoScalingGroup.CreateAutoScalingGroup


-- | Completes the lifecycle action for the specified token or instance
--   with the specified result.
--   
--   This step is a part of the procedure for adding a lifecycle hook to an
--   Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.</li>
--   <li>If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state.</li>
--   <li>__If you finish before the timeout period ends, complete the
--   lifecycle action.__</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.CompleteLifecycleAction

-- | <i>See:</i> <a>newCompleteLifecycleAction</a> smart constructor.
data CompleteLifecycleAction
CompleteLifecycleAction' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CompleteLifecycleAction

-- | The ID of the instance.
[$sel:instanceId:CompleteLifecycleAction'] :: CompleteLifecycleAction -> Maybe Text

-- | A universally unique identifier (UUID) that identifies a specific
--   lifecycle action associated with an instance. Amazon EC2 Auto Scaling
--   sends this token to the notification target you specified when you
--   created the lifecycle hook.
[$sel:lifecycleActionToken:CompleteLifecycleAction'] :: CompleteLifecycleAction -> Maybe Text

-- | The name of the lifecycle hook.
[$sel:lifecycleHookName:CompleteLifecycleAction'] :: CompleteLifecycleAction -> Text

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:CompleteLifecycleAction'] :: CompleteLifecycleAction -> Text

-- | The action for the group to take. This parameter can be either
--   <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
[$sel:lifecycleActionResult:CompleteLifecycleAction'] :: CompleteLifecycleAction -> Text

-- | Create a value of <a>CompleteLifecycleAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:lifecycleActionToken:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleActionToken</a> - A universally
--   unique identifier (UUID) that identifies a specific lifecycle action
--   associated with an instance. Amazon EC2 Auto Scaling sends this token
--   to the notification target you specified when you created the
--   lifecycle hook.
--   
--   <a>$sel:lifecycleHookName:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:lifecycleActionResult:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleActionResult</a> - The action for
--   the group to take. This parameter can be either <tt>CONTINUE</tt> or
--   <tt>ABANDON</tt>.
newCompleteLifecycleAction :: Text -> Text -> Text -> CompleteLifecycleAction

-- | The ID of the instance.
completeLifecycleAction_instanceId :: Lens' CompleteLifecycleAction (Maybe Text)

-- | A universally unique identifier (UUID) that identifies a specific
--   lifecycle action associated with an instance. Amazon EC2 Auto Scaling
--   sends this token to the notification target you specified when you
--   created the lifecycle hook.
completeLifecycleAction_lifecycleActionToken :: Lens' CompleteLifecycleAction (Maybe Text)

-- | The name of the lifecycle hook.
completeLifecycleAction_lifecycleHookName :: Lens' CompleteLifecycleAction Text

-- | The name of the Auto Scaling group.
completeLifecycleAction_autoScalingGroupName :: Lens' CompleteLifecycleAction Text

-- | The action for the group to take. This parameter can be either
--   <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
completeLifecycleAction_lifecycleActionResult :: Lens' CompleteLifecycleAction Text

-- | <i>See:</i> <a>newCompleteLifecycleActionResponse</a> smart
--   constructor.
data CompleteLifecycleActionResponse
CompleteLifecycleActionResponse' :: Int -> CompleteLifecycleActionResponse

-- | The response's http status code.
[$sel:httpStatus:CompleteLifecycleActionResponse'] :: CompleteLifecycleActionResponse -> Int

-- | Create a value of <a>CompleteLifecycleActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CompleteLifecycleActionResponse'</a>,
--   <a>completeLifecycleActionResponse_httpStatus</a> - The response's
--   http status code.
newCompleteLifecycleActionResponse :: Int -> CompleteLifecycleActionResponse

-- | The response's http status code.
completeLifecycleActionResponse_httpStatus :: Lens' CompleteLifecycleActionResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance GHC.Show.Show Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance GHC.Read.Read Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance GHC.Generics.Generic Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleActionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleActionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleActionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.CompleteLifecycleAction.CompleteLifecycleAction


-- | Cancels an instance refresh operation in progress. Cancellation does
--   not roll back any replacements that have already been completed, but
--   it prevents new replacements from being started.
--   
--   This operation is part of the <a>instance refresh feature</a> in
--   Amazon EC2 Auto Scaling, which helps you update instances in your Auto
--   Scaling group after you make configuration changes.
module Network.AWS.AutoScaling.CancelInstanceRefresh

-- | <i>See:</i> <a>newCancelInstanceRefresh</a> smart constructor.
data CancelInstanceRefresh
CancelInstanceRefresh' :: Text -> CancelInstanceRefresh

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:CancelInstanceRefresh'] :: CancelInstanceRefresh -> Text

-- | Create a value of <a>CancelInstanceRefresh</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:CancelInstanceRefresh'</a>,
--   <a>cancelInstanceRefresh_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newCancelInstanceRefresh :: Text -> CancelInstanceRefresh

-- | The name of the Auto Scaling group.
cancelInstanceRefresh_autoScalingGroupName :: Lens' CancelInstanceRefresh Text

-- | <i>See:</i> <a>newCancelInstanceRefreshResponse</a> smart constructor.
data CancelInstanceRefreshResponse
CancelInstanceRefreshResponse' :: Maybe Text -> Int -> CancelInstanceRefreshResponse

-- | The instance refresh ID.
[$sel:instanceRefreshId:CancelInstanceRefreshResponse'] :: CancelInstanceRefreshResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelInstanceRefreshResponse'] :: CancelInstanceRefreshResponse -> Int

-- | Create a value of <a>CancelInstanceRefreshResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceRefreshId:CancelInstanceRefreshResponse'</a>,
--   <a>cancelInstanceRefreshResponse_instanceRefreshId</a> - The instance
--   refresh ID.
--   
--   <a>$sel:httpStatus:CancelInstanceRefreshResponse'</a>,
--   <a>cancelInstanceRefreshResponse_httpStatus</a> - The response's http
--   status code.
newCancelInstanceRefreshResponse :: Int -> CancelInstanceRefreshResponse

-- | The instance refresh ID.
cancelInstanceRefreshResponse_instanceRefreshId :: Lens' CancelInstanceRefreshResponse (Maybe Text)

-- | The response's http status code.
cancelInstanceRefreshResponse_httpStatus :: Lens' CancelInstanceRefreshResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance GHC.Show.Show Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance GHC.Read.Read Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance GHC.Classes.Eq Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance GHC.Generics.Generic Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefreshResponse
instance GHC.Show.Show Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefreshResponse
instance GHC.Read.Read Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefreshResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefreshResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefreshResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.CancelInstanceRefresh.CancelInstanceRefresh


-- | Creates or updates one or more scheduled scaling actions for an Auto
--   Scaling group.
module Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction

-- | <i>See:</i> <a>newBatchPutScheduledUpdateGroupAction</a> smart
--   constructor.
data BatchPutScheduledUpdateGroupAction
BatchPutScheduledUpdateGroupAction' :: Text -> [ScheduledUpdateGroupActionRequest] -> BatchPutScheduledUpdateGroupAction

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:BatchPutScheduledUpdateGroupAction'] :: BatchPutScheduledUpdateGroupAction -> Text

-- | One or more scheduled actions. The maximum number allowed is 50.
[$sel:scheduledUpdateGroupActions:BatchPutScheduledUpdateGroupAction'] :: BatchPutScheduledUpdateGroupAction -> [ScheduledUpdateGroupActionRequest]

-- | Create a value of <a>BatchPutScheduledUpdateGroupAction</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:BatchPutScheduledUpdateGroupAction'</a>,
--   <a>batchPutScheduledUpdateGroupAction_autoScalingGroupName</a> - The
--   name of the Auto Scaling group.
--   
--   
--   <a>$sel:scheduledUpdateGroupActions:BatchPutScheduledUpdateGroupAction'</a>,
--   <a>batchPutScheduledUpdateGroupAction_scheduledUpdateGroupActions</a>
--   - One or more scheduled actions. The maximum number allowed is 50.
newBatchPutScheduledUpdateGroupAction :: Text -> BatchPutScheduledUpdateGroupAction

-- | The name of the Auto Scaling group.
batchPutScheduledUpdateGroupAction_autoScalingGroupName :: Lens' BatchPutScheduledUpdateGroupAction Text

-- | One or more scheduled actions. The maximum number allowed is 50.
batchPutScheduledUpdateGroupAction_scheduledUpdateGroupActions :: Lens' BatchPutScheduledUpdateGroupAction [ScheduledUpdateGroupActionRequest]

-- | <i>See:</i> <a>newBatchPutScheduledUpdateGroupActionResponse</a> smart
--   constructor.
data BatchPutScheduledUpdateGroupActionResponse
BatchPutScheduledUpdateGroupActionResponse' :: Maybe [FailedScheduledUpdateGroupActionRequest] -> Int -> BatchPutScheduledUpdateGroupActionResponse

-- | The names of the scheduled actions that could not be created or
--   updated, including an error message.
[$sel:failedScheduledUpdateGroupActions:BatchPutScheduledUpdateGroupActionResponse'] :: BatchPutScheduledUpdateGroupActionResponse -> Maybe [FailedScheduledUpdateGroupActionRequest]

-- | The response's http status code.
[$sel:httpStatus:BatchPutScheduledUpdateGroupActionResponse'] :: BatchPutScheduledUpdateGroupActionResponse -> Int

-- | Create a value of <a>BatchPutScheduledUpdateGroupActionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:failedScheduledUpdateGroupActions:BatchPutScheduledUpdateGroupActionResponse'</a>,
--   <a>batchPutScheduledUpdateGroupActionResponse_failedScheduledUpdateGroupActions</a>
--   - The names of the scheduled actions that could not be created or
--   updated, including an error message.
--   
--   <a>$sel:httpStatus:BatchPutScheduledUpdateGroupActionResponse'</a>,
--   <a>batchPutScheduledUpdateGroupActionResponse_httpStatus</a> - The
--   response's http status code.
newBatchPutScheduledUpdateGroupActionResponse :: Int -> BatchPutScheduledUpdateGroupActionResponse

-- | The names of the scheduled actions that could not be created or
--   updated, including an error message.
batchPutScheduledUpdateGroupActionResponse_failedScheduledUpdateGroupActions :: Lens' BatchPutScheduledUpdateGroupActionResponse (Maybe [FailedScheduledUpdateGroupActionRequest])

-- | The response's http status code.
batchPutScheduledUpdateGroupActionResponse_httpStatus :: Lens' BatchPutScheduledUpdateGroupActionResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance GHC.Show.Show Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance GHC.Read.Read Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance GHC.Generics.Generic Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupActionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupActionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupActionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.BatchPutScheduledUpdateGroupAction.BatchPutScheduledUpdateGroupAction


-- | Deletes one or more scheduled actions for the specified Auto Scaling
--   group.
module Network.AWS.AutoScaling.BatchDeleteScheduledAction

-- | <i>See:</i> <a>newBatchDeleteScheduledAction</a> smart constructor.
data BatchDeleteScheduledAction
BatchDeleteScheduledAction' :: Text -> [Text] -> BatchDeleteScheduledAction

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:BatchDeleteScheduledAction'] :: BatchDeleteScheduledAction -> Text

-- | The names of the scheduled actions to delete. The maximum number
--   allowed is 50.
[$sel:scheduledActionNames:BatchDeleteScheduledAction'] :: BatchDeleteScheduledAction -> [Text]

-- | Create a value of <a>BatchDeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:BatchDeleteScheduledAction'</a>,
--   <a>batchDeleteScheduledAction_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:scheduledActionNames:BatchDeleteScheduledAction'</a>,
--   <a>batchDeleteScheduledAction_scheduledActionNames</a> - The names of
--   the scheduled actions to delete. The maximum number allowed is 50.
newBatchDeleteScheduledAction :: Text -> BatchDeleteScheduledAction

-- | The name of the Auto Scaling group.
batchDeleteScheduledAction_autoScalingGroupName :: Lens' BatchDeleteScheduledAction Text

-- | The names of the scheduled actions to delete. The maximum number
--   allowed is 50.
batchDeleteScheduledAction_scheduledActionNames :: Lens' BatchDeleteScheduledAction [Text]

-- | <i>See:</i> <a>newBatchDeleteScheduledActionResponse</a> smart
--   constructor.
data BatchDeleteScheduledActionResponse
BatchDeleteScheduledActionResponse' :: Maybe [FailedScheduledUpdateGroupActionRequest] -> Int -> BatchDeleteScheduledActionResponse

-- | The names of the scheduled actions that could not be deleted,
--   including an error message.
[$sel:failedScheduledActions:BatchDeleteScheduledActionResponse'] :: BatchDeleteScheduledActionResponse -> Maybe [FailedScheduledUpdateGroupActionRequest]

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteScheduledActionResponse'] :: BatchDeleteScheduledActionResponse -> Int

-- | Create a value of <a>BatchDeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:failedScheduledActions:BatchDeleteScheduledActionResponse'</a>,
--   <a>batchDeleteScheduledActionResponse_failedScheduledActions</a> - The
--   names of the scheduled actions that could not be deleted, including an
--   error message.
--   
--   <a>$sel:httpStatus:BatchDeleteScheduledActionResponse'</a>,
--   <a>batchDeleteScheduledActionResponse_httpStatus</a> - The response's
--   http status code.
newBatchDeleteScheduledActionResponse :: Int -> BatchDeleteScheduledActionResponse

-- | The names of the scheduled actions that could not be deleted,
--   including an error message.
batchDeleteScheduledActionResponse_failedScheduledActions :: Lens' BatchDeleteScheduledActionResponse (Maybe [FailedScheduledUpdateGroupActionRequest])

-- | The response's http status code.
batchDeleteScheduledActionResponse_httpStatus :: Lens' BatchDeleteScheduledActionResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance GHC.Show.Show Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance GHC.Read.Read Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance GHC.Classes.Eq Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance GHC.Generics.Generic Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledActionResponse
instance GHC.Show.Show Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledActionResponse
instance GHC.Read.Read Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledActionResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.BatchDeleteScheduledAction.BatchDeleteScheduledAction


-- | To attach an Application Load Balancer, Network Load Balancer, or
--   Gateway Load Balancer, use the AttachLoadBalancerTargetGroups API
--   operation instead.
--   
--   Attaches one or more Classic Load Balancers to the specified Auto
--   Scaling group. Amazon EC2 Auto Scaling registers the running instances
--   with these Classic Load Balancers.
--   
--   To describe the load balancers for an Auto Scaling group, call the
--   DescribeLoadBalancers API. To detach the load balancer from the Auto
--   Scaling group, call the DetachLoadBalancers API.
--   
--   For more information, see <a>Elastic Load Balancing and Amazon EC2
--   Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.AttachLoadBalancers

-- | <i>See:</i> <a>newAttachLoadBalancers</a> smart constructor.
data AttachLoadBalancers
AttachLoadBalancers' :: Text -> [Text] -> AttachLoadBalancers

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:AttachLoadBalancers'] :: AttachLoadBalancers -> Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
[$sel:loadBalancerNames:AttachLoadBalancers'] :: AttachLoadBalancers -> [Text]

-- | Create a value of <a>AttachLoadBalancers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:AttachLoadBalancers'</a>,
--   <a>attachLoadBalancers_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:loadBalancerNames:AttachLoadBalancers'</a>,
--   <a>attachLoadBalancers_loadBalancerNames</a> - The names of the load
--   balancers. You can specify up to 10 load balancers.
newAttachLoadBalancers :: Text -> AttachLoadBalancers

-- | The name of the Auto Scaling group.
attachLoadBalancers_autoScalingGroupName :: Lens' AttachLoadBalancers Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
attachLoadBalancers_loadBalancerNames :: Lens' AttachLoadBalancers [Text]

-- | <i>See:</i> <a>newAttachLoadBalancersResponse</a> smart constructor.
data AttachLoadBalancersResponse
AttachLoadBalancersResponse' :: Int -> AttachLoadBalancersResponse

-- | The response's http status code.
[$sel:httpStatus:AttachLoadBalancersResponse'] :: AttachLoadBalancersResponse -> Int

-- | Create a value of <a>AttachLoadBalancersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachLoadBalancersResponse'</a>,
--   <a>attachLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newAttachLoadBalancersResponse :: Int -> AttachLoadBalancersResponse

-- | The response's http status code.
attachLoadBalancersResponse_httpStatus :: Lens' AttachLoadBalancersResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance GHC.Show.Show Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance GHC.Read.Read Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancersResponse
instance GHC.Show.Show Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancersResponse
instance GHC.Read.Read Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancersResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancersResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.AttachLoadBalancers.AttachLoadBalancers


-- | Attaches one or more target groups to the specified Auto Scaling
--   group.
--   
--   This operation is used with the following load balancer types:
--   
--   <ul>
--   <li>Application Load Balancer - Operates at the application layer
--   (layer 7) and supports HTTP and HTTPS.</li>
--   <li>Network Load Balancer - Operates at the transport layer (layer 4)
--   and supports TCP, TLS, and UDP.</li>
--   <li>Gateway Load Balancer - Operates at the network layer (layer
--   3).</li>
--   </ul>
--   
--   To describe the target groups for an Auto Scaling group, call the
--   DescribeLoadBalancerTargetGroups API. To detach the target group from
--   the Auto Scaling group, call the DetachLoadBalancerTargetGroups API.
--   
--   For more information, see <a>Elastic Load Balancing and Amazon EC2
--   Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups

-- | <i>See:</i> <a>newAttachLoadBalancerTargetGroups</a> smart
--   constructor.
data AttachLoadBalancerTargetGroups
AttachLoadBalancerTargetGroups' :: Text -> [Text] -> AttachLoadBalancerTargetGroups

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:AttachLoadBalancerTargetGroups'] :: AttachLoadBalancerTargetGroups -> Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups. To get the ARN of a target group, use the
--   Elastic Load Balancing <a>DescribeTargetGroups</a> API operation.
[$sel:targetGroupARNs:AttachLoadBalancerTargetGroups'] :: AttachLoadBalancerTargetGroups -> [Text]

-- | Create a value of <a>AttachLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:AttachLoadBalancerTargetGroups'</a>,
--   <a>attachLoadBalancerTargetGroups_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:targetGroupARNs:AttachLoadBalancerTargetGroups'</a>,
--   <a>attachLoadBalancerTargetGroups_targetGroupARNs</a> - The Amazon
--   Resource Names (ARN) of the target groups. You can specify up to 10
--   target groups. To get the ARN of a target group, use the Elastic Load
--   Balancing <a>DescribeTargetGroups</a> API operation.
newAttachLoadBalancerTargetGroups :: Text -> AttachLoadBalancerTargetGroups

-- | The name of the Auto Scaling group.
attachLoadBalancerTargetGroups_autoScalingGroupName :: Lens' AttachLoadBalancerTargetGroups Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups. To get the ARN of a target group, use the
--   Elastic Load Balancing <a>DescribeTargetGroups</a> API operation.
attachLoadBalancerTargetGroups_targetGroupARNs :: Lens' AttachLoadBalancerTargetGroups [Text]

-- | <i>See:</i> <a>newAttachLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data AttachLoadBalancerTargetGroupsResponse
AttachLoadBalancerTargetGroupsResponse' :: Int -> AttachLoadBalancerTargetGroupsResponse

-- | The response's http status code.
[$sel:httpStatus:AttachLoadBalancerTargetGroupsResponse'] :: AttachLoadBalancerTargetGroupsResponse -> Int

-- | Create a value of <a>AttachLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachLoadBalancerTargetGroupsResponse'</a>,
--   <a>attachLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newAttachLoadBalancerTargetGroupsResponse :: Int -> AttachLoadBalancerTargetGroupsResponse

-- | The response's http status code.
attachLoadBalancerTargetGroupsResponse_httpStatus :: Lens' AttachLoadBalancerTargetGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance GHC.Show.Show Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance GHC.Read.Read Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroupsResponse
instance GHC.Show.Show Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroupsResponse
instance GHC.Read.Read Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroupsResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroupsResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.AttachLoadBalancerTargetGroups.AttachLoadBalancerTargetGroups


-- | Attaches one or more EC2 instances to the specified Auto Scaling
--   group.
--   
--   When you attach instances, Amazon EC2 Auto Scaling increases the
--   desired capacity of the group by the number of instances being
--   attached. If the number of instances being attached plus the desired
--   capacity of the group exceeds the maximum size of the group, the
--   operation fails.
--   
--   If there is a Classic Load Balancer attached to your Auto Scaling
--   group, the instances are also registered with the load balancer. If
--   there are target groups attached to your Auto Scaling group, the
--   instances are also registered with the target groups.
--   
--   For more information, see <a>Attach EC2 instances to your Auto Scaling
--   group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
module Network.AWS.AutoScaling.AttachInstances

-- | <i>See:</i> <a>newAttachInstances</a> smart constructor.
data AttachInstances
AttachInstances' :: Maybe [Text] -> Text -> AttachInstances

-- | The IDs of the instances. You can specify up to 20 instances.
[$sel:instanceIds:AttachInstances'] :: AttachInstances -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:AttachInstances'] :: AttachInstances -> Text

-- | Create a value of <a>AttachInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:AttachInstances'</a>,
--   <a>attachInstances_instanceIds</a> - The IDs of the instances. You can
--   specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:AttachInstances'</a>,
--   <a>attachInstances_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newAttachInstances :: Text -> AttachInstances

-- | The IDs of the instances. You can specify up to 20 instances.
attachInstances_instanceIds :: Lens' AttachInstances (Maybe [Text])

-- | The name of the Auto Scaling group.
attachInstances_autoScalingGroupName :: Lens' AttachInstances Text

-- | <i>See:</i> <a>newAttachInstancesResponse</a> smart constructor.
data AttachInstancesResponse
AttachInstancesResponse' :: AttachInstancesResponse

-- | Create a value of <a>AttachInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAttachInstancesResponse :: AttachInstancesResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance GHC.Show.Show Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance GHC.Read.Read Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance GHC.Generics.Generic Network.AWS.AutoScaling.AttachInstances.AttachInstancesResponse
instance GHC.Show.Show Network.AWS.AutoScaling.AttachInstances.AttachInstancesResponse
instance GHC.Read.Read Network.AWS.AutoScaling.AttachInstances.AttachInstancesResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.AttachInstances.AttachInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachInstances.AttachInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.AttachInstances.AttachInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.AttachInstances.AttachInstances


-- | __We strongly recommend that all Auto Scaling groups use launch
--   templates to ensure full functionality for Amazon EC2 Auto Scaling and
--   Amazon EC2.__
--   
--   Updates the configuration for the specified Auto Scaling group.
--   
--   To update an Auto Scaling group, specify the name of the group and the
--   parameter that you want to change. Any parameters that you don't
--   specify are not changed by this update request. The new settings take
--   effect on any scaling activities after this call returns.
--   
--   If you associate a new launch configuration or template with an Auto
--   Scaling group, all new instances will get the updated configuration.
--   Existing instances continue to run with the configuration that they
--   were originally launched with. When you update a group to specify a
--   mixed instances policy instead of a launch configuration or template,
--   existing instances may be replaced to match the new purchasing options
--   that you specified in the policy. For example, if the group currently
--   has 100% On-Demand capacity and the policy specifies 50% Spot
--   capacity, this means that half of your instances will be gradually
--   terminated and relaunched as Spot Instances. When replacing instances,
--   Amazon EC2 Auto Scaling launches new instances before terminating the
--   old ones, so that updating your group does not compromise the
--   performance or availability of your application.
--   
--   Note the following about changing <tt>DesiredCapacity</tt>,
--   <tt>MaxSize</tt>, or <tt>MinSize</tt>:
--   
--   <ul>
--   <li>If a scale-in activity occurs as a result of a new
--   <tt>DesiredCapacity</tt> value that is lower than the current size of
--   the group, the Auto Scaling group uses its termination policy to
--   determine which instances to terminate.</li>
--   <li>If you specify a new value for <tt>MinSize</tt> without specifying
--   a value for <tt>DesiredCapacity</tt>, and the new <tt>MinSize</tt> is
--   larger than the current size of the group, this sets the group's
--   <tt>DesiredCapacity</tt> to the new <tt>MinSize</tt> value.</li>
--   <li>If you specify a new value for <tt>MaxSize</tt> without specifying
--   a value for <tt>DesiredCapacity</tt>, and the new <tt>MaxSize</tt> is
--   smaller than the current size of the group, this sets the group's
--   <tt>DesiredCapacity</tt> to the new <tt>MaxSize</tt> value.</li>
--   </ul>
--   
--   To see which parameters have been set, call the
--   DescribeAutoScalingGroups API. To view the scaling policies for an
--   Auto Scaling group, call the DescribePolicies API. If the group has
--   scaling policies, you can update them by calling the PutScalingPolicy
--   API.
module Network.AWS.AutoScaling.UpdateAutoScalingGroup

-- | <i>See:</i> <a>newUpdateAutoScalingGroup</a> smart constructor.
data UpdateAutoScalingGroup
UpdateAutoScalingGroup' :: Maybe Int -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [Text] -> Text -> UpdateAutoScalingGroup

-- | The minimum size of the Auto Scaling group.
[$sel:minSize:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | One or more Availability Zones for the group.
[$sel:availabilityZones:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe [Text]

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain. This number must be greater than or equal to the minimum
--   size of the group and less than or equal to the maximum size of the
--   group.
[$sel:desiredCapacity:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:defaultCooldown:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). To clear
--   a previously set value, specify a new value of 0. For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
[$sel:maxInstanceLifetime:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
[$sel:placementGroup:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | The launch template and version to use to specify the updates. If you
--   specify <tt>LaunchTemplate</tt> in your update request, you can't
--   specify <tt>LaunchConfigurationName</tt> or
--   <tt>MixedInstancesPolicy</tt>.
[$sel:launchTemplate:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe LaunchTemplateSpecification

-- | The name of the launch configuration. If you specify
--   <tt>LaunchConfigurationName</tt> in your update request, you can't
--   specify <tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>.
[$sel:launchConfigurationName:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
[$sel:healthCheckType:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | Reserved.
[$sel:context:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | An embedded object that specifies a mixed instances policy. When you
--   make changes to an existing policy, all optional properties are left
--   unchanged if not specified. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:mixedInstancesPolicy:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe MixedInstancesPolicy

-- | The maximum size of the Auto Scaling group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
[$sel:maxSize:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | A comma-separated list of subnet IDs for a virtual private cloud
--   (VPC). If you specify <tt>VPCZoneIdentifier</tt> with
--   <tt>AvailabilityZones</tt>, the subnets that you specify for this
--   parameter must reside in those Availability Zones.
[$sel:vPCZoneIdentifier:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | Enables or disables Capacity Rebalancing. For more information, see
--   <a>Amazon EC2 Auto Scaling Capacity Rebalancing</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
[$sel:capacityRebalance:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. For more information, see <a>Service-linked roles</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
[$sel:serviceLinkedRoleARN:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Text

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. The default value is <tt>0</tt>. For more information,
--   see <a>Health check grace period</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
[$sel:healthCheckGracePeriod:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Int

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:newInstancesProtectedFromScaleIn':UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe Bool

-- | A policy or a list of policies that are used to select the instances
--   to terminate. The policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
[$sel:terminationPolicies:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Maybe [Text]

-- | The name of the Auto Scaling group.
[$sel:autoScalingGroupName:UpdateAutoScalingGroup'] :: UpdateAutoScalingGroup -> Text

-- | Create a value of <a>UpdateAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_minSize</a> - The minimum size of the Auto
--   Scaling group.
--   
--   <a>$sel:availabilityZones:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_availabilityZones</a> - One or more
--   Availability Zones for the group.
--   
--   <a>$sel:desiredCapacity:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_desiredCapacity</a> - The desired capacity
--   is the initial capacity of the Auto Scaling group after this operation
--   completes and the capacity it attempts to maintain. This number must
--   be greater than or equal to the minimum size of the group and less
--   than or equal to the maximum size of the group.
--   
--   <a>$sel:defaultCooldown:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_defaultCooldown</a> - The amount of time, in
--   seconds, after a scaling activity completes before another scaling
--   activity can start. The default value is <tt>300</tt>. This setting
--   applies when using simple scaling policies, but not when using other
--   scaling policies or scheduled scaling. For more information, see
--   <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxInstanceLifetime:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_maxInstanceLifetime</a> - The maximum amount
--   of time, in seconds, that an instance can be in service. The default
--   is null. If specified, the value must be either 0 or a number equal to
--   or greater than 86,400 seconds (1 day). To clear a previously set
--   value, specify a new value of 0. For more information, see
--   <a>Replacing Auto Scaling instances based on maximum instance
--   lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:placementGroup:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_placementGroup</a> - The name of an existing
--   placement group into which to launch your instances, if any. A
--   placement group is a logical grouping of instances within a single
--   Availability Zone. You cannot specify multiple Availability Zones and
--   a placement group. For more information, see <a>Placement Groups</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:launchTemplate:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_launchTemplate</a> - The launch template and
--   version to use to specify the updates. If you specify
--   <tt>LaunchTemplate</tt> in your update request, you can't specify
--   <tt>LaunchConfigurationName</tt> or <tt>MixedInstancesPolicy</tt>.
--   
--   <a>$sel:launchConfigurationName:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_launchConfigurationName</a> - The name of
--   the launch configuration. If you specify
--   <tt>LaunchConfigurationName</tt> in your update request, you can't
--   specify <tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>.
--   
--   <a>$sel:healthCheckType:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_healthCheckType</a> - The service to use for
--   the health checks. The valid values are <tt>EC2</tt> and <tt>ELB</tt>.
--   If you configure an Auto Scaling group to use <tt>ELB</tt> health
--   checks, it considers the instance unhealthy if it fails either the EC2
--   status checks or the load balancer health checks.
--   
--   <a>$sel:context:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_context</a> - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_mixedInstancesPolicy</a> - An embedded
--   object that specifies a mixed instances policy. When you make changes
--   to an existing policy, all optional properties are left unchanged if
--   not specified. For more information, see <a>Auto Scaling groups with
--   multiple instance types and purchase options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxSize:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_maxSize</a> - The maximum size of the Auto
--   Scaling group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
--   
--   <a>$sel:vPCZoneIdentifier:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_vPCZoneIdentifier</a> - A comma-separated
--   list of subnet IDs for a virtual private cloud (VPC). If you specify
--   <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>, the
--   subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   <a>$sel:capacityRebalance:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_capacityRebalance</a> - Enables or disables
--   Capacity Rebalancing. For more information, see <a>Amazon EC2 Auto
--   Scaling Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:serviceLinkedRoleARN:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_serviceLinkedRoleARN</a> - The Amazon
--   Resource Name (ARN) of the service-linked role that the Auto Scaling
--   group uses to call other Amazon Web Services on your behalf. For more
--   information, see <a>Service-linked roles</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:healthCheckGracePeriod:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_healthCheckGracePeriod</a> - The amount of
--   time, in seconds, that Amazon EC2 Auto Scaling waits before checking
--   the health status of an EC2 instance that has come into service. The
--   default value is <tt>0</tt>. For more information, see <a>Health check
--   grace period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_newInstancesProtectedFromScaleIn</a> -
--   Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:terminationPolicies:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_terminationPolicies</a> - A policy or a list
--   of policies that are used to select the instances to terminate. The
--   policies are executed in the order that you list them. For more
--   information, see <a>Controlling which Auto Scaling instances terminate
--   during scale in</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newUpdateAutoScalingGroup :: Text -> UpdateAutoScalingGroup

-- | The minimum size of the Auto Scaling group.
updateAutoScalingGroup_minSize :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | One or more Availability Zones for the group.
updateAutoScalingGroup_availabilityZones :: Lens' UpdateAutoScalingGroup (Maybe [Text])

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain. This number must be greater than or equal to the minimum
--   size of the group and less than or equal to the maximum size of the
--   group.
updateAutoScalingGroup_desiredCapacity :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_defaultCooldown :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). To clear
--   a previously set value, specify a new value of 0. For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
updateAutoScalingGroup_maxInstanceLifetime :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
updateAutoScalingGroup_placementGroup :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The launch template and version to use to specify the updates. If you
--   specify <tt>LaunchTemplate</tt> in your update request, you can't
--   specify <tt>LaunchConfigurationName</tt> or
--   <tt>MixedInstancesPolicy</tt>.
updateAutoScalingGroup_launchTemplate :: Lens' UpdateAutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the launch configuration. If you specify
--   <tt>LaunchConfigurationName</tt> in your update request, you can't
--   specify <tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>.
updateAutoScalingGroup_launchConfigurationName :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
updateAutoScalingGroup_healthCheckType :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | Reserved.
updateAutoScalingGroup_context :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | An embedded object that specifies a mixed instances policy. When you
--   make changes to an existing policy, all optional properties are left
--   unchanged if not specified. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_mixedInstancesPolicy :: Lens' UpdateAutoScalingGroup (Maybe MixedInstancesPolicy)

-- | The maximum size of the Auto Scaling group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
updateAutoScalingGroup_maxSize :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | A comma-separated list of subnet IDs for a virtual private cloud
--   (VPC). If you specify <tt>VPCZoneIdentifier</tt> with
--   <tt>AvailabilityZones</tt>, the subnets that you specify for this
--   parameter must reside in those Availability Zones.
updateAutoScalingGroup_vPCZoneIdentifier :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | Enables or disables Capacity Rebalancing. For more information, see
--   <a>Amazon EC2 Auto Scaling Capacity Rebalancing</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_capacityRebalance :: Lens' UpdateAutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. For more information, see <a>Service-linked roles</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_serviceLinkedRoleARN :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. The default value is <tt>0</tt>. For more information,
--   see <a>Health check grace period</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
updateAutoScalingGroup_healthCheckGracePeriod :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
updateAutoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' UpdateAutoScalingGroup (Maybe Bool)

-- | A policy or a list of policies that are used to select the instances
--   to terminate. The policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
updateAutoScalingGroup_terminationPolicies :: Lens' UpdateAutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group.
updateAutoScalingGroup_autoScalingGroupName :: Lens' UpdateAutoScalingGroup Text

-- | <i>See:</i> <a>newUpdateAutoScalingGroupResponse</a> smart
--   constructor.
data UpdateAutoScalingGroupResponse
UpdateAutoScalingGroupResponse' :: UpdateAutoScalingGroupResponse

-- | Create a value of <a>UpdateAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateAutoScalingGroupResponse :: UpdateAutoScalingGroupResponse
instance GHC.Generics.Generic Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance GHC.Show.Show Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance GHC.Read.Read Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance GHC.Classes.Eq Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance GHC.Generics.Generic Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroupResponse
instance GHC.Show.Show Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroupResponse
instance GHC.Read.Read Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroupResponse
instance GHC.Classes.Eq Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScaling.UpdateAutoScalingGroup.UpdateAutoScalingGroup


module Network.AWS.AutoScaling.Lens

-- | The metric value to compare to <tt>BreachThreshold</tt>. This enables
--   you to execute a policy of type <tt>StepScaling</tt> and determine
--   which step adjustment to use. For example, if the breach threshold is
--   50 and you want to use a step adjustment with a lower bound of 0 and
--   an upper bound of 10, you can set the metric value to 59.
--   
--   If you specify a metric value that doesn't correspond to a step
--   adjustment for the policy, the call returns an error.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
executePolicy_metricValue :: Lens' ExecutePolicy (Maybe Double)

-- | The breach threshold for the alarm.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
executePolicy_breachThreshold :: Lens' ExecutePolicy (Maybe Double)

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before executing the policy.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
executePolicy_honorCooldown :: Lens' ExecutePolicy (Maybe Bool)

-- | The name of the Auto Scaling group.
executePolicy_autoScalingGroupName :: Lens' ExecutePolicy (Maybe Text)

-- | The name or ARN of the policy.
executePolicy_policyName :: Lens' ExecutePolicy Text

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
suspendProcesses_scalingProcesses :: Lens' SuspendProcesses (Maybe [Text])

-- | The name of the Auto Scaling group.
suspendProcesses_autoScalingGroupName :: Lens' SuspendProcesses Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeInstanceRefreshes_nextToken :: Lens' DescribeInstanceRefreshes (Maybe Text)

-- | One or more instance refresh IDs.
describeInstanceRefreshes_instanceRefreshIds :: Lens' DescribeInstanceRefreshes (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeInstanceRefreshes_maxRecords :: Lens' DescribeInstanceRefreshes (Maybe Int)

-- | The name of the Auto Scaling group.
describeInstanceRefreshes_autoScalingGroupName :: Lens' DescribeInstanceRefreshes Text

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeInstanceRefreshesResponse_nextToken :: Lens' DescribeInstanceRefreshesResponse (Maybe Text)

-- | The instance refreshes for the specified group.
describeInstanceRefreshesResponse_instanceRefreshes :: Lens' DescribeInstanceRefreshesResponse (Maybe [InstanceRefresh])

-- | The response's http status code.
describeInstanceRefreshesResponse_httpStatus :: Lens' DescribeInstanceRefreshesResponse Int

-- | The IDs of the instances. You can specify up to 20 instances.
enterStandby_instanceIds :: Lens' EnterStandby (Maybe [Text])

-- | The name of the Auto Scaling group.
enterStandby_autoScalingGroupName :: Lens' EnterStandby Text

-- | Indicates whether to decrement the desired capacity of the Auto
--   Scaling group by the number of instances moved to <tt>Standby</tt>
--   mode.
enterStandby_shouldDecrementDesiredCapacity :: Lens' EnterStandby Bool

-- | The activities related to moving instances into <tt>Standby</tt> mode.
enterStandbyResponse_activities :: Lens' EnterStandbyResponse (Maybe [Activity])

-- | The response's http status code.
enterStandbyResponse_httpStatus :: Lens' EnterStandbyResponse Int

-- | The name of the lifecycle hook.
deleteLifecycleHook_lifecycleHookName :: Lens' DeleteLifecycleHook Text

-- | The name of the Auto Scaling group.
deleteLifecycleHook_autoScalingGroupName :: Lens' DeleteLifecycleHook Text

-- | The response's http status code.
deleteLifecycleHookResponse_httpStatus :: Lens' DeleteLifecycleHookResponse Int

-- | The name of the Auto Scaling group.
attachLoadBalancerTargetGroups_autoScalingGroupName :: Lens' AttachLoadBalancerTargetGroups Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups. To get the ARN of a target group, use the
--   Elastic Load Balancing <a>DescribeTargetGroups</a> API operation.
attachLoadBalancerTargetGroups_targetGroupARNs :: Lens' AttachLoadBalancerTargetGroups [Text]

-- | The response's http status code.
attachLoadBalancerTargetGroupsResponse_httpStatus :: Lens' AttachLoadBalancerTargetGroupsResponse Int

-- | The strategy to use for the instance refresh. The only valid value is
--   <tt>Rolling</tt>.
--   
--   A rolling update helps you update your instances gradually. A rolling
--   update can fail due to failed health checks or if instances are on
--   standby or are protected from scale in. If the rolling update process
--   fails, any instances that are replaced are not rolled back to their
--   previous configuration.
startInstanceRefresh_strategy :: Lens' StartInstanceRefresh (Maybe RefreshStrategy)

-- | The desired configuration. For example, the desired configuration can
--   specify a new launch template or a new version of the current launch
--   template.
--   
--   Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates
--   the settings of the Auto Scaling group to reflect the new desired
--   configuration.
--   
--   When you specify a new launch template or a new version of the current
--   launch template for your desired configuration, consider enabling the
--   <tt>SkipMatching</tt> property in preferences. If it's enabled, Amazon
--   EC2 Auto Scaling skips replacing instances that already use the
--   specified launch template and version. This can help you reduce the
--   number of replacements that are required to apply updates.
startInstanceRefresh_desiredConfiguration :: Lens' StartInstanceRefresh (Maybe DesiredConfiguration)

-- | Set of preferences associated with the instance refresh request. If
--   not provided, the default values are used.
startInstanceRefresh_preferences :: Lens' StartInstanceRefresh (Maybe RefreshPreferences)

-- | The name of the Auto Scaling group.
startInstanceRefresh_autoScalingGroupName :: Lens' StartInstanceRefresh Text

-- | A unique ID for tracking the progress of the request.
startInstanceRefreshResponse_instanceRefreshId :: Lens' StartInstanceRefreshResponse (Maybe Text)

-- | The response's http status code.
startInstanceRefreshResponse_httpStatus :: Lens' StartInstanceRefreshResponse Int

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
resumeProcesses_scalingProcesses :: Lens' ResumeProcesses (Maybe [Text])

-- | The name of the Auto Scaling group.
resumeProcesses_autoScalingGroupName :: Lens' ResumeProcesses Text

-- | The name of the Auto Scaling group.
putNotificationConfiguration_autoScalingGroupName :: Lens' PutNotificationConfiguration Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
putNotificationConfiguration_topicARN :: Lens' PutNotificationConfiguration Text

-- | The type of event that causes the notification to be sent. To query
--   the notification types supported by Amazon EC2 Auto Scaling, call the
--   DescribeAutoScalingNotificationTypes API.
putNotificationConfiguration_notificationTypes :: Lens' PutNotificationConfiguration [Text]

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeTags_nextToken :: Lens' DescribeTags (Maybe Text)

-- | One or more filters to scope the tags to return. The maximum number of
--   filters per filter type (for example, <tt>auto-scaling-group</tt>) is
--   1000.
describeTags_filters :: Lens' DescribeTags (Maybe [Filter])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeTags_maxRecords :: Lens' DescribeTags (Maybe Int)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeTagsResponse_nextToken :: Lens' DescribeTagsResponse (Maybe Text)

-- | One or more tags.
describeTagsResponse_tags :: Lens' DescribeTagsResponse (Maybe [TagDescription])

-- | The response's http status code.
describeTagsResponse_httpStatus :: Lens' DescribeTagsResponse Int

-- | Specifies that the warm pool is to be deleted along with all of its
--   associated instances, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the warm pool instances.
deleteWarmPool_forceDelete :: Lens' DeleteWarmPool (Maybe Bool)

-- | The name of the Auto Scaling group.
deleteWarmPool_autoScalingGroupName :: Lens' DeleteWarmPool Text

-- | The response's http status code.
deleteWarmPoolResponse_httpStatus :: Lens' DeleteWarmPoolResponse Int

-- | A target tracking scaling policy. Provides support for predefined or
--   customized metrics.
--   
--   The following predefined metrics are available:
--   
--   <ul>
--   <li><pre>ASGAverageCPUUtilization</pre></li>
--   <li><pre>ASGAverageNetworkIn</pre></li>
--   <li><pre>ASGAverageNetworkOut</pre></li>
--   <li><pre>ALBRequestCountPerTarget</pre></li>
--   </ul>
--   
--   If you specify <tt>ALBRequestCountPerTarget</tt> for the metric, you
--   must specify the <tt>ResourceLabel</tt> parameter with the
--   <tt>PredefinedMetricSpecification</tt>.
--   
--   For more information, see <a>TargetTrackingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>TargetTrackingScaling</tt>.
putScalingPolicy_targetTrackingConfiguration :: Lens' PutScalingPolicy (Maybe TargetTrackingConfiguration)

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   Required if the policy type is <tt>StepScaling</tt>. (Not used with
--   any other policy type.)
putScalingPolicy_stepAdjustments :: Lens' PutScalingPolicy (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   Valid only if the policy type is <tt>StepScaling</tt>.
putScalingPolicy_metricAggregationType :: Lens' PutScalingPolicy (Maybe Text)

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe Text)

-- | Indicates whether the scaling policy is enabled or disabled. The
--   default is enabled. For more information, see <a>Disabling a scaling
--   policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
putScalingPolicy_enabled :: Lens' PutScalingPolicy (Maybe Bool)

-- | The duration of the policy's cooldown period, in seconds. When a
--   cooldown period is specified here, it overrides the default cooldown
--   period defined for the Auto Scaling group.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
putScalingPolicy_cooldown :: Lens' PutScalingPolicy (Maybe Int)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
--   
--   Required if the policy type is <tt>SimpleScaling</tt>. (Not used with
--   any other policy type.)
putScalingPolicy_scalingAdjustment :: Lens' PutScalingPolicy (Maybe Int)

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
--   
--   Required if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
putScalingPolicy_adjustmentType :: Lens' PutScalingPolicy (Maybe Text)

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
putScalingPolicy_minAdjustmentStep :: Lens' PutScalingPolicy (Maybe Int)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. If not provided, the default is
--   to use the value from the default cooldown period for the Auto Scaling
--   group.
--   
--   Valid only if the policy type is <tt>TargetTrackingScaling</tt> or
--   <tt>StepScaling</tt>.
putScalingPolicy_estimatedInstanceWarmup :: Lens' PutScalingPolicy (Maybe Int)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Auto Scaling group by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the group
--   has 4 instances and the scaling policy is performed, 25 percent of 4
--   is 1. However, because you specified a <tt>MinAdjustmentMagnitude</tt>
--   of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
--   
--   Valid only if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Some Auto Scaling groups use instance weights. In this case, set the
--   <tt>MinAdjustmentMagnitude</tt> to a value that is at least as large
--   as your largest instance weight.
putScalingPolicy_minAdjustmentMagnitude :: Lens' PutScalingPolicy (Maybe Int)

-- | A predictive scaling policy. Provides support for only predefined
--   metrics.
--   
--   Predictive scaling works with CPU utilization, network in/out, and the
--   Application Load Balancer request count.
--   
--   For more information, see <a>PredictiveScalingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>PredictiveScaling</tt>.
putScalingPolicy_predictiveScalingConfiguration :: Lens' PutScalingPolicy (Maybe PredictiveScalingConfiguration)

-- | The name of the Auto Scaling group.
putScalingPolicy_autoScalingGroupName :: Lens' PutScalingPolicy Text

-- | The name of the policy.
putScalingPolicy_policyName :: Lens' PutScalingPolicy Text

-- | The CloudWatch alarms created for the target tracking scaling policy.
putScalingPolicyResponse_alarms :: Lens' PutScalingPolicyResponse (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the policy.
putScalingPolicyResponse_policyARN :: Lens' PutScalingPolicyResponse (Maybe Text)

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int

-- | One or more tags.
createOrUpdateTags_tags :: Lens' CreateOrUpdateTags [Tag]

-- | The name of the Auto Scaling group.
deletePolicy_autoScalingGroupName :: Lens' DeletePolicy (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the policy.
deletePolicy_policyName :: Lens' DeletePolicy Text

-- | The ID of the instance to use to create the launch configuration. The
--   new launch configuration derives attributes from the instance, except
--   for the block device mapping.
--   
--   To create a launch configuration with a block device mapping or
--   override any other instance attributes, specify them as part of the
--   same request.
--   
--   For more information, see <a>Creating a launch configuration using an
--   EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify both
--   <tt>ImageId</tt> and <tt>InstanceType</tt>.
createLaunchConfiguration_instanceId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). The optimization provides
--   dedicated throughput to Amazon EBS and an optimized configuration
--   stack to provide optimal I/O performance. This optimization is not
--   available with all instance types. Additional fees are incurred when
--   you enable EBS optimization for an instance type that is not
--   EBS-optimized by default. For more information, see <a>Amazon
--   EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   The default value is <tt>false</tt>.
createLaunchConfiguration_ebsOptimized :: Lens' CreateLaunchConfiguration (Maybe Bool)

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
createLaunchConfiguration_userData :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Specifies the instance type of the EC2 instance.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>InstanceType</tt>.
createLaunchConfiguration_instanceType :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The ID of the RAM disk to select.
createLaunchConfiguration_ramdiskId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The IDs of one or more security groups for the specified
--   ClassicLink-enabled VPC. For more information, see <a>ClassicLink</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a>Linking
--   EC2-Classic instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you specify the <tt>ClassicLinkVPCId</tt> parameter, you must
--   specify this parameter.
createLaunchConfiguration_classicLinkVPCSecurityGroups :: Lens' CreateLaunchConfiguration (Maybe [Text])

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   When you change your maximum price by creating a new launch
--   configuration, running instances will continue to run as long as the
--   maximum price for those running instances is higher than the current
--   Spot price.
createLaunchConfiguration_spotPrice :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | For Auto Scaling groups that are running in a virtual private cloud
--   (VPC), specifies whether to assign a public IP address to the group's
--   instances. If you specify <tt>true</tt>, each instance in the Auto
--   Scaling group receives a unique public IP address. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you specify this parameter, you must specify at least one subnet
--   for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   If the instance is launched into a default subnet, the default is to
--   assign a public IP address, unless you disabled the option to assign a
--   public IP address on the subnet. If the instance is launched into a
--   nondefault subnet, the default is not to assign a public IP address,
--   unless you enabled the option to assign a public IP address on the
--   subnet.
createLaunchConfiguration_associatePublicIpAddress :: Lens' CreateLaunchConfiguration (Maybe Bool)

-- | The ID of the Amazon Machine Image (AMI) that was assigned during
--   registration. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>ImageId</tt>.
createLaunchConfiguration_imageId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group.
--   
--   <ul>
--   <li><i>EC2-VPC</i> Specify the security group IDs. For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.</li>
--   <li><i>EC2-Classic</i> Specify either the security group names or the
--   security group IDs. For more information, see <a>Amazon EC2 Security
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.</li>
--   </ul>
createLaunchConfiguration_securityGroups :: Lens' CreateLaunchConfiguration (Maybe [Text])

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role.
--   
--   For more information, see <a>IAM role for applications that run on
--   Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createLaunchConfiguration_iamInstanceProfile :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   This parameter can only be used if you are launching EC2-Classic
--   instances.
createLaunchConfiguration_classicLinkVPCId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | A block device mapping, which specifies the block devices for the
--   instance. You can specify virtual devices and EBS volumes. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
createLaunchConfiguration_blockDeviceMappings :: Lens' CreateLaunchConfiguration (Maybe [BlockDeviceMapping])

-- | The ID of the kernel associated with the AMI.
createLaunchConfiguration_kernelId :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The tenancy of the instance. An instance with <tt>dedicated</tt>
--   tenancy runs on isolated, single-tenant hardware and can only be
--   launched into a VPC.
--   
--   To launch dedicated instances into a shared tenancy VPC (a VPC with
--   the instance placement tenancy attribute set to <tt>default</tt>), you
--   must set the value of this parameter to <tt>dedicated</tt>.
--   
--   If you specify <tt>PlacementTenancy</tt>, you must specify at least
--   one subnet for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>default</tt> | <tt>dedicated</tt>
createLaunchConfiguration_placementTenancy :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | The name of the key pair. For more information, see <a>Amazon EC2 Key
--   Pairs</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
createLaunchConfiguration_keyName :: Lens' CreateLaunchConfiguration (Maybe Text)

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   The default value is <tt>true</tt> (enabled).
--   
--   When detailed monitoring is enabled, Amazon CloudWatch generates
--   metrics every minute and your account is charged a fee. When you
--   disable detailed monitoring, CloudWatch generates metrics every 5
--   minutes. For more information, see <a>Configure Monitoring for Auto
--   Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createLaunchConfiguration_instanceMonitoring :: Lens' CreateLaunchConfiguration (Maybe InstanceMonitoring)

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
createLaunchConfiguration_metadataOptions :: Lens' CreateLaunchConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the launch configuration. This name must be unique per
--   Region per account.
createLaunchConfiguration_launchConfigurationName :: Lens' CreateLaunchConfiguration Text

-- | The notification types.
describeAutoScalingNotificationTypesResponse_autoScalingNotificationTypes :: Lens' DescribeAutoScalingNotificationTypesResponse (Maybe [Text])

-- | The response's http status code.
describeAutoScalingNotificationTypesResponse_httpStatus :: Lens' DescribeAutoScalingNotificationTypesResponse Int

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeScheduledActions_nextToken :: Lens' DescribeScheduledActions (Maybe Text)

-- | The earliest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
describeScheduledActions_startTime :: Lens' DescribeScheduledActions (Maybe UTCTime)

-- | The latest scheduled start time to return. If scheduled action names
--   are provided, this parameter is ignored.
describeScheduledActions_endTime :: Lens' DescribeScheduledActions (Maybe UTCTime)

-- | The names of one or more scheduled actions. If you omit this
--   parameter, all scheduled actions are described. If you specify an
--   unknown scheduled action, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 actions.
describeScheduledActions_scheduledActionNames :: Lens' DescribeScheduledActions (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeScheduledActions_maxRecords :: Lens' DescribeScheduledActions (Maybe Int)

-- | The name of the Auto Scaling group.
describeScheduledActions_autoScalingGroupName :: Lens' DescribeScheduledActions (Maybe Text)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeScheduledActionsResponse_nextToken :: Lens' DescribeScheduledActionsResponse (Maybe Text)

-- | The scheduled actions.
describeScheduledActionsResponse_scheduledUpdateGroupActions :: Lens' DescribeScheduledActionsResponse (Maybe [ScheduledUpdateGroupAction])

-- | The response's http status code.
describeScheduledActionsResponse_httpStatus :: Lens' DescribeScheduledActionsResponse Int

-- | The policy adjustment types.
describeAdjustmentTypesResponse_adjustmentTypes :: Lens' DescribeAdjustmentTypesResponse (Maybe [AdjustmentType])

-- | The response's http status code.
describeAdjustmentTypesResponse_httpStatus :: Lens' DescribeAdjustmentTypesResponse Int

-- | The name of the Auto Scaling group.
detachLoadBalancers_autoScalingGroupName :: Lens' DetachLoadBalancers Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
detachLoadBalancers_loadBalancerNames :: Lens' DetachLoadBalancers [Text]

-- | The response's http status code.
detachLoadBalancersResponse_httpStatus :: Lens' DetachLoadBalancersResponse Int

-- | The name of the Auto Scaling group.
deleteScheduledAction_autoScalingGroupName :: Lens' DeleteScheduledAction Text

-- | The name of the action to delete.
deleteScheduledAction_scheduledActionName :: Lens' DeleteScheduledAction Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeScalingActivities_nextToken :: Lens' DescribeScalingActivities (Maybe Text)

-- | The activity IDs of the desired scaling activities. If you omit this
--   parameter, all activities for the past six weeks are described. If
--   unknown activities are requested, they are ignored with no error. If
--   you specify an Auto Scaling group, the results are limited to that
--   group.
--   
--   Array Members: Maximum number of 50 IDs.
describeScalingActivities_activityIds :: Lens' DescribeScalingActivities (Maybe [Text])

-- | Indicates whether to include scaling activity from deleted Auto
--   Scaling groups.
describeScalingActivities_includeDeletedGroups :: Lens' DescribeScalingActivities (Maybe Bool)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeScalingActivities_maxRecords :: Lens' DescribeScalingActivities (Maybe Int)

-- | The name of the Auto Scaling group.
describeScalingActivities_autoScalingGroupName :: Lens' DescribeScalingActivities (Maybe Text)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeScalingActivitiesResponse_nextToken :: Lens' DescribeScalingActivitiesResponse (Maybe Text)

-- | The response's http status code.
describeScalingActivitiesResponse_httpStatus :: Lens' DescribeScalingActivitiesResponse Int

-- | The scaling activities. Activities are sorted by start time.
--   Activities still in progress are described first.
describeScalingActivitiesResponse_activities :: Lens' DescribeScalingActivitiesResponse [Activity]

-- | The names of one or more lifecycle hooks. If you omit this parameter,
--   all lifecycle hooks are described.
describeLifecycleHooks_lifecycleHookNames :: Lens' DescribeLifecycleHooks (Maybe [Text])

-- | The name of the Auto Scaling group.
describeLifecycleHooks_autoScalingGroupName :: Lens' DescribeLifecycleHooks Text

-- | The lifecycle hooks for the specified group.
describeLifecycleHooksResponse_lifecycleHooks :: Lens' DescribeLifecycleHooksResponse (Maybe [LifecycleHook])

-- | The response's http status code.
describeLifecycleHooksResponse_httpStatus :: Lens' DescribeLifecycleHooksResponse Int

-- | The minimum size of the Auto Scaling group.
putScheduledUpdateGroupAction_minSize :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain. It can scale beyond this capacity if you add more scaling
--   conditions.
putScheduledUpdateGroupAction_desiredCapacity :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule your action in the past, Amazon EC2 Auto
--   Scaling returns an error message.
putScheduledUpdateGroupAction_startTime :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
putScheduledUpdateGroupAction_endTime :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The recurring schedule for this action. This format consists of five
--   fields separated by white spaces: [Minute] [Hour] [Day_of_Month]
--   [Month_of_Year] [Day_of_Week]. The value must be in quotes (for
--   example, <tt>"30 0 1 1,6,12 *"</tt>). For more information about this
--   format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
putScheduledUpdateGroupAction_recurrence :: Lens' PutScheduledUpdateGroupAction (Maybe Text)

-- | The maximum size of the Auto Scaling group.
putScheduledUpdateGroupAction_maxSize :: Lens' PutScheduledUpdateGroupAction (Maybe Int)

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
putScheduledUpdateGroupAction_timeZone :: Lens' PutScheduledUpdateGroupAction (Maybe Text)

-- | This parameter is no longer used.
putScheduledUpdateGroupAction_time :: Lens' PutScheduledUpdateGroupAction (Maybe UTCTime)

-- | The name of the Auto Scaling group.
putScheduledUpdateGroupAction_autoScalingGroupName :: Lens' PutScheduledUpdateGroupAction Text

-- | The name of this scaling action.
putScheduledUpdateGroupAction_scheduledActionName :: Lens' PutScheduledUpdateGroupAction Text

-- | One or more tags.
deleteTags_tags :: Lens' DeleteTags [Tag]

-- | The name of the Auto Scaling group.
detachLoadBalancerTargetGroups_autoScalingGroupName :: Lens' DetachLoadBalancerTargetGroups Text

-- | The Amazon Resource Names (ARN) of the target groups. You can specify
--   up to 10 target groups.
detachLoadBalancerTargetGroups_targetGroupARNs :: Lens' DetachLoadBalancerTargetGroups [Text]

-- | The response's http status code.
detachLoadBalancerTargetGroupsResponse_httpStatus :: Lens' DetachLoadBalancerTargetGroupsResponse Int

-- | The token for the next set of instances to return. (You received this
--   token from a previous call.)
describeWarmPool_nextToken :: Lens' DescribeWarmPool (Maybe Text)

-- | The maximum number of instances to return with this call. The maximum
--   value is <tt>50</tt>.
describeWarmPool_maxRecords :: Lens' DescribeWarmPool (Maybe Int)

-- | The name of the Auto Scaling group.
describeWarmPool_autoScalingGroupName :: Lens' DescribeWarmPool Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeWarmPoolResponse_nextToken :: Lens' DescribeWarmPoolResponse (Maybe Text)

-- | The instances that are currently in the warm pool.
describeWarmPoolResponse_instances :: Lens' DescribeWarmPoolResponse (Maybe [Instance])

-- | The warm pool configuration details.
describeWarmPoolResponse_warmPoolConfiguration :: Lens' DescribeWarmPoolResponse (Maybe WarmPoolConfiguration)

-- | The response's http status code.
describeWarmPoolResponse_httpStatus :: Lens' DescribeWarmPoolResponse Int

-- | One or more instance IDs. You can specify up to 50 instances.
setInstanceProtection_instanceIds :: Lens' SetInstanceProtection [Text]

-- | The name of the Auto Scaling group.
setInstanceProtection_autoScalingGroupName :: Lens' SetInstanceProtection Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
setInstanceProtection_protectedFromScaleIn :: Lens' SetInstanceProtection Bool

-- | The response's http status code.
setInstanceProtectionResponse_httpStatus :: Lens' SetInstanceProtectionResponse Int

-- | The IDs of the instances. You can specify up to 20 instances.
detachInstances_instanceIds :: Lens' DetachInstances (Maybe [Text])

-- | The name of the Auto Scaling group.
detachInstances_autoScalingGroupName :: Lens' DetachInstances Text

-- | Indicates whether the Auto Scaling group decrements the desired
--   capacity value by the number of instances detached.
detachInstances_shouldDecrementDesiredCapacity :: Lens' DetachInstances Bool

-- | The activities related to detaching the instances from the Auto
--   Scaling group.
detachInstancesResponse_activities :: Lens' DetachInstancesResponse (Maybe [Activity])

-- | The response's http status code.
detachInstancesResponse_httpStatus :: Lens' DetachInstancesResponse Int

-- | The ID of the instance.
terminateInstanceInAutoScalingGroup_instanceId :: Lens' TerminateInstanceInAutoScalingGroup Text

-- | Indicates whether terminating the instance also decrements the size of
--   the Auto Scaling group.
terminateInstanceInAutoScalingGroup_shouldDecrementDesiredCapacity :: Lens' TerminateInstanceInAutoScalingGroup Bool

-- | A scaling activity.
terminateInstanceInAutoScalingGroupResponse_activity :: Lens' TerminateInstanceInAutoScalingGroupResponse (Maybe Activity)

-- | The response's http status code.
terminateInstanceInAutoScalingGroupResponse_httpStatus :: Lens' TerminateInstanceInAutoScalingGroupResponse Int

-- | The name of the Auto Scaling group.
attachLoadBalancers_autoScalingGroupName :: Lens' AttachLoadBalancers Text

-- | The names of the load balancers. You can specify up to 10 load
--   balancers.
attachLoadBalancers_loadBalancerNames :: Lens' AttachLoadBalancers [Text]

-- | The response's http status code.
attachLoadBalancersResponse_httpStatus :: Lens' AttachLoadBalancersResponse Int

-- | The current number of groups for your account.
describeAccountLimitsResponse_numberOfAutoScalingGroups :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The maximum number of launch configurations allowed for your account.
--   The default is 200 launch configurations per Region.
describeAccountLimitsResponse_maxNumberOfLaunchConfigurations :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The current number of launch configurations for your account.
describeAccountLimitsResponse_numberOfLaunchConfigurations :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The maximum number of groups allowed for your account. The default is
--   200 groups per Region.
describeAccountLimitsResponse_maxNumberOfAutoScalingGroups :: Lens' DescribeAccountLimitsResponse (Maybe Int)

-- | The response's http status code.
describeAccountLimitsResponse_httpStatus :: Lens' DescribeAccountLimitsResponse Int

-- | The termination policies supported by Amazon EC2 Auto Scaling:
--   <tt>OldestInstance</tt>, <tt>OldestLaunchConfiguration</tt>,
--   <tt>NewestInstance</tt>, <tt>ClosestToNextInstanceHour</tt>,
--   <tt>Default</tt>, <tt>OldestLaunchTemplate</tt>, and
--   <tt>AllocationStrategy</tt>.
describeTerminationPolicyTypesResponse_terminationPolicyTypes :: Lens' DescribeTerminationPolicyTypesResponse (Maybe [Text])

-- | The response's http status code.
describeTerminationPolicyTypesResponse_httpStatus :: Lens' DescribeTerminationPolicyTypesResponse Int

-- | If the Auto Scaling group of the specified instance has a
--   <tt>HealthCheckGracePeriod</tt> specified for the group, by default,
--   this call respects the grace period. Set this to <tt>False</tt>, to
--   have the call not respect the grace period associated with the group.
--   
--   For more information about the health check grace period, see
--   <a>CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
setInstanceHealth_shouldRespectGracePeriod :: Lens' SetInstanceHealth (Maybe Bool)

-- | The ID of the instance.
setInstanceHealth_instanceId :: Lens' SetInstanceHealth Text

-- | The health status of the instance. Set to <tt>Healthy</tt> to have the
--   instance remain in service. Set to <tt>Unhealthy</tt> to have the
--   instance be out of service. Amazon EC2 Auto Scaling terminates and
--   replaces the unhealthy instance.
setInstanceHealth_healthStatus :: Lens' SetInstanceHealth Text

-- | The IDs of the instances. You can specify up to 20 instances.
exitStandby_instanceIds :: Lens' ExitStandby (Maybe [Text])

-- | The name of the Auto Scaling group.
exitStandby_autoScalingGroupName :: Lens' ExitStandby Text

-- | The activities related to moving instances out of <tt>Standby</tt>
--   mode.
exitStandbyResponse_activities :: Lens' ExitStandbyResponse (Maybe [Activity])

-- | The response's http status code.
exitStandbyResponse_httpStatus :: Lens' ExitStandbyResponse Int

-- | The name of the Auto Scaling group.
getPredictiveScalingForecast_autoScalingGroupName :: Lens' GetPredictiveScalingForecast Text

-- | The name of the policy.
getPredictiveScalingForecast_policyName :: Lens' GetPredictiveScalingForecast Text

-- | The inclusive start time of the time range for the forecast data to
--   get. At most, the date and time can be one year before the current
--   date and time.
getPredictiveScalingForecast_startTime :: Lens' GetPredictiveScalingForecast UTCTime

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is 30 days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   Amazon EC2 Auto Scaling only issues forecasts for periods of two days
--   in advance.
getPredictiveScalingForecast_endTime :: Lens' GetPredictiveScalingForecast UTCTime

-- | The response's http status code.
getPredictiveScalingForecastResponse_httpStatus :: Lens' GetPredictiveScalingForecastResponse Int

-- | The load forecast.
getPredictiveScalingForecastResponse_loadForecast :: Lens' GetPredictiveScalingForecastResponse [LoadForecast]

-- | The capacity forecast.
getPredictiveScalingForecastResponse_capacityForecast :: Lens' GetPredictiveScalingForecastResponse CapacityForecast

-- | The time the forecast was made.
getPredictiveScalingForecastResponse_updateTime :: Lens' GetPredictiveScalingForecastResponse UTCTime

-- | Specifies the minimum number of instances to maintain in the warm
--   pool. This helps you to ensure that there is always a certain number
--   of warmed instances available to handle traffic spikes. Defaults to 0
--   if not specified.
putWarmPool_minSize :: Lens' PutWarmPool (Maybe Natural)

-- | Sets the instance state to transition to after the lifecycle actions
--   are complete. Default is <tt>Stopped</tt>.
putWarmPool_poolState :: Lens' PutWarmPool (Maybe WarmPoolState)

-- | Specifies the maximum number of instances that are allowed to be in
--   the warm pool or in any state except <tt>Terminated</tt> for the Auto
--   Scaling group. This is an optional property. Specify it only if you do
--   not want the warm pool size to be determined by the difference between
--   the group's maximum capacity and its desired capacity.
--   
--   If a value for <tt>MaxGroupPreparedCapacity</tt> is not specified,
--   Amazon EC2 Auto Scaling launches and maintains the difference between
--   the group's maximum capacity and its desired capacity. If you specify
--   a value for <tt>MaxGroupPreparedCapacity</tt>, Amazon EC2 Auto Scaling
--   uses the difference between the <tt>MaxGroupPreparedCapacity</tt> and
--   the desired capacity instead.
--   
--   The size of the warm pool is dynamic. Only when
--   <tt>MaxGroupPreparedCapacity</tt> and <tt>MinSize</tt> are set to the
--   same value does the warm pool have an absolute size.
--   
--   If the desired capacity of the Auto Scaling group is higher than the
--   <tt>MaxGroupPreparedCapacity</tt>, the capacity of the warm pool is 0,
--   unless you specify a value for <tt>MinSize</tt>. To remove a value
--   that you previously set, include the property but specify -1 for the
--   value.
putWarmPool_maxGroupPreparedCapacity :: Lens' PutWarmPool (Maybe Int)

-- | The name of the Auto Scaling group.
putWarmPool_autoScalingGroupName :: Lens' PutWarmPool Text

-- | The response's http status code.
putWarmPoolResponse_httpStatus :: Lens' PutWarmPoolResponse Int

-- | The name of the Auto Scaling group.
deleteNotificationConfiguration_autoScalingGroupName :: Lens' DeleteNotificationConfiguration Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
deleteNotificationConfiguration_topicARN :: Lens' DeleteNotificationConfiguration Text

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
putLifecycleHook_roleARN :: Lens' PutLifecycleHook (Maybe Text)

-- | The instance state to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
putLifecycleHook_lifecycleTransition :: Lens' PutLifecycleHook (Maybe Text)

-- | The ARN of the notification target that Amazon EC2 Auto Scaling uses
--   to notify you when an instance is in the transition state for the
--   lifecycle hook. This target can be either an SQS queue or an SNS
--   topic.
--   
--   If you specify an empty string, this overrides the current ARN.
--   
--   This operation uses the JSON format when sending notifications to an
--   Amazon SQS queue, and an email key-value pair format when sending
--   notifications to an Amazon SNS topic.
--   
--   When you specify a notification target, Amazon EC2 Auto Scaling sends
--   it a test message. Test messages contain the following additional
--   key-value pair: <tt>"Event": "autoscaling:TEST_NOTIFICATION"</tt>.
putLifecycleHook_notificationTargetARN :: Lens' PutLifecycleHook (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. The range is from <tt>30</tt> to <tt>7200</tt>
--   seconds. The default value is <tt>3600</tt> seconds (1 hour).
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling the
--   RecordLifecycleActionHeartbeat API.
putLifecycleHook_heartbeatTimeout :: Lens' PutLifecycleHook (Maybe Int)

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
putLifecycleHook_notificationMetadata :: Lens' PutLifecycleHook (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs.
--   This parameter can be either <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
--   The default value is <tt>ABANDON</tt>.
putLifecycleHook_defaultResult :: Lens' PutLifecycleHook (Maybe Text)

-- | The name of the lifecycle hook.
putLifecycleHook_lifecycleHookName :: Lens' PutLifecycleHook Text

-- | The name of the Auto Scaling group.
putLifecycleHook_autoScalingGroupName :: Lens' PutLifecycleHook Text

-- | The response's http status code.
putLifecycleHookResponse_httpStatus :: Lens' PutLifecycleHookResponse Int

-- | The name of the Auto Scaling group.
batchPutScheduledUpdateGroupAction_autoScalingGroupName :: Lens' BatchPutScheduledUpdateGroupAction Text

-- | One or more scheduled actions. The maximum number allowed is 50.
batchPutScheduledUpdateGroupAction_scheduledUpdateGroupActions :: Lens' BatchPutScheduledUpdateGroupAction [ScheduledUpdateGroupActionRequest]

-- | The names of the scheduled actions that could not be created or
--   updated, including an error message.
batchPutScheduledUpdateGroupActionResponse_failedScheduledUpdateGroupActions :: Lens' BatchPutScheduledUpdateGroupActionResponse (Maybe [FailedScheduledUpdateGroupActionRequest])

-- | The response's http status code.
batchPutScheduledUpdateGroupActionResponse_httpStatus :: Lens' BatchPutScheduledUpdateGroupActionResponse Int

-- | One or more metrics.
describeMetricCollectionTypesResponse_metrics :: Lens' DescribeMetricCollectionTypesResponse (Maybe [MetricCollectionType])

-- | The granularities for the metrics.
describeMetricCollectionTypesResponse_granularities :: Lens' DescribeMetricCollectionTypesResponse (Maybe [MetricGranularityType])

-- | The response's http status code.
describeMetricCollectionTypesResponse_httpStatus :: Lens' DescribeMetricCollectionTypesResponse Int

-- | The name of the launch configuration.
deleteLaunchConfiguration_launchConfigurationName :: Lens' DeleteLaunchConfiguration Text

-- | The minimum size of the Auto Scaling group.
updateAutoScalingGroup_minSize :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | One or more Availability Zones for the group.
updateAutoScalingGroup_availabilityZones :: Lens' UpdateAutoScalingGroup (Maybe [Text])

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain. This number must be greater than or equal to the minimum
--   size of the group and less than or equal to the maximum size of the
--   group.
updateAutoScalingGroup_desiredCapacity :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_defaultCooldown :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). To clear
--   a previously set value, specify a new value of 0. For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
updateAutoScalingGroup_maxInstanceLifetime :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
updateAutoScalingGroup_placementGroup :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The launch template and version to use to specify the updates. If you
--   specify <tt>LaunchTemplate</tt> in your update request, you can't
--   specify <tt>LaunchConfigurationName</tt> or
--   <tt>MixedInstancesPolicy</tt>.
updateAutoScalingGroup_launchTemplate :: Lens' UpdateAutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the launch configuration. If you specify
--   <tt>LaunchConfigurationName</tt> in your update request, you can't
--   specify <tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>.
updateAutoScalingGroup_launchConfigurationName :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
updateAutoScalingGroup_healthCheckType :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | Reserved.
updateAutoScalingGroup_context :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | An embedded object that specifies a mixed instances policy. When you
--   make changes to an existing policy, all optional properties are left
--   unchanged if not specified. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_mixedInstancesPolicy :: Lens' UpdateAutoScalingGroup (Maybe MixedInstancesPolicy)

-- | The maximum size of the Auto Scaling group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
updateAutoScalingGroup_maxSize :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | A comma-separated list of subnet IDs for a virtual private cloud
--   (VPC). If you specify <tt>VPCZoneIdentifier</tt> with
--   <tt>AvailabilityZones</tt>, the subnets that you specify for this
--   parameter must reside in those Availability Zones.
updateAutoScalingGroup_vPCZoneIdentifier :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | Enables or disables Capacity Rebalancing. For more information, see
--   <a>Amazon EC2 Auto Scaling Capacity Rebalancing</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_capacityRebalance :: Lens' UpdateAutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. For more information, see <a>Service-linked roles</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
updateAutoScalingGroup_serviceLinkedRoleARN :: Lens' UpdateAutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. The default value is <tt>0</tt>. For more information,
--   see <a>Health check grace period</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
updateAutoScalingGroup_healthCheckGracePeriod :: Lens' UpdateAutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
updateAutoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' UpdateAutoScalingGroup (Maybe Bool)

-- | A policy or a list of policies that are used to select the instances
--   to terminate. The policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
updateAutoScalingGroup_terminationPolicies :: Lens' UpdateAutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group.
updateAutoScalingGroup_autoScalingGroupName :: Lens' UpdateAutoScalingGroup Text

-- | Specifies that the group is to be deleted along with all instances
--   associated with the group, without waiting for all instances to be
--   terminated. This parameter also deletes any outstanding lifecycle
--   actions associated with the group.
deleteAutoScalingGroup_forceDelete :: Lens' DeleteAutoScalingGroup (Maybe Bool)

-- | The name of the Auto Scaling group.
deleteAutoScalingGroup_autoScalingGroupName :: Lens' DeleteAutoScalingGroup Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLoadBalancers_nextToken :: Lens' DescribeLoadBalancers (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeLoadBalancers_maxRecords :: Lens' DescribeLoadBalancers (Maybe Int)

-- | The name of the Auto Scaling group.
describeLoadBalancers_autoScalingGroupName :: Lens' DescribeLoadBalancers Text

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLoadBalancersResponse_nextToken :: Lens' DescribeLoadBalancersResponse (Maybe Text)

-- | The load balancers.
describeLoadBalancersResponse_loadBalancers :: Lens' DescribeLoadBalancersResponse (Maybe [LoadBalancerState])

-- | The response's http status code.
describeLoadBalancersResponse_httpStatus :: Lens' DescribeLoadBalancersResponse Int

-- | A list of Availability Zones where instances in the Auto Scaling group
--   can be created. This parameter is optional if you specify one or more
--   subnets for <tt>VPCZoneIdentifier</tt>.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into EC2-Classic.
createAutoScalingGroup_availabilityZones :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The ID of the instance used to base the launch configuration on. If
--   specified, Amazon EC2 Auto Scaling uses the configuration values from
--   the specified instance to create a new launch configuration. To get
--   the instance ID, use the Amazon EC2 <a>DescribeInstances</a> API
--   operation. For more information, see <a>Creating an Auto Scaling group
--   using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_instanceId :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   at the time of its creation and the capacity it attempts to maintain.
--   It can scale beyond this capacity if you configure auto scaling. This
--   number must be greater than or equal to the minimum size of the group
--   and less than or equal to the maximum size of the group. If you do not
--   specify a desired capacity, the default is the minimum size of the
--   group.
createAutoScalingGroup_desiredCapacity :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The amount of time, in seconds, after a scaling activity completes
--   before another scaling activity can start. The default value is
--   <tt>300</tt>. This setting applies when using simple scaling policies,
--   but not when using other scaling policies or scheduled scaling. For
--   more information, see <a>Scaling cooldowns for Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_defaultCooldown :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service. The default is null. If specified, the value must be either 0
--   or a number equal to or greater than 86,400 seconds (1 day). For more
--   information, see <a>Replacing Auto Scaling instances based on maximum
--   instance lifetime</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_maxInstanceLifetime :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | The name of an existing placement group into which to launch your
--   instances, if any. A placement group is a logical grouping of
--   instances within a single Availability Zone. You cannot specify
--   multiple Availability Zones and a placement group. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
createAutoScalingGroup_placementGroup :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Parameters used to specify the launch template and version to use to
--   launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   The launch template that is specified must be configured for use with
--   an Auto Scaling group. For more information, see <a>Creating a launch
--   template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_launchTemplate :: Lens' CreateAutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the launch configuration to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
createAutoScalingGroup_launchConfigurationName :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> (default) and <tt>ELB</tt>. If you configure an Auto
--   Scaling group to use load balancer (ELB) health checks, it considers
--   the instance unhealthy if it fails either the EC2 status checks or the
--   load balancer health checks. For more information, see <a>Health
--   checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_healthCheckType :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Reserved.
createAutoScalingGroup_context :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | An embedded object that specifies a mixed instances policy. The
--   required properties must be specified. If optional properties are
--   unspecified, their default values are used.
--   
--   The policy includes properties that not only define the distribution
--   of On-Demand Instances and Spot Instances, the maximum price to pay
--   for Spot Instances, and how the Auto Scaling group allocates instance
--   types to fulfill On-Demand and Spot capacities, but also the
--   properties that specify the instance configuration information—the
--   launch template and instance types. The policy can also include a
--   weight for each instance type and different launch templates for
--   individual instance types. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_mixedInstancesPolicy :: Lens' CreateAutoScalingGroup (Maybe MixedInstancesPolicy)

-- | One or more tags. You can tag your Auto Scaling group and propagate
--   the tags to the Amazon EC2 instances it launches. Tags are not
--   propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes,
--   specify the tags in a launch template but use caution. If the launch
--   template specifies an instance tag with a key that is also specified
--   for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the
--   value of that instance tag with the value specified by the Auto
--   Scaling group. For more information, see <a>Tagging Auto Scaling
--   groups and instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_tags :: Lens' CreateAutoScalingGroup (Maybe [Tag])

-- | A list of Classic Load Balancers associated with this Auto Scaling
--   group. For Application Load Balancers, Network Load Balancers, and
--   Gateway Load Balancers, specify the <tt>TargetGroupARNs</tt> property
--   instead.
createAutoScalingGroup_loadBalancerNames :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the target groups to associate with
--   the Auto Scaling group. Instances are registered as targets in a
--   target group, and traffic is routed to the target group. For more
--   information, see <a>Elastic Load Balancing and Amazon EC2 Auto
--   Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_targetGroupARNs :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | A comma-separated list of subnet IDs for a virtual private cloud (VPC)
--   where instances in the Auto Scaling group can be created. If you
--   specify <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>,
--   the subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into a VPC.
createAutoScalingGroup_vPCZoneIdentifier :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity
--   Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon
--   EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon
--   EC2 notifies that a Spot Instance is at an elevated risk of
--   interruption. After launching a new instance, it then terminates an
--   old instance. For more information, see <a>Amazon EC2 Auto Scaling
--   Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
createAutoScalingGroup_capacityRebalance :: Lens' CreateAutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role
--   named <tt>AWSServiceRoleForAutoScaling</tt>, which it creates if it
--   does not exist. For more information, see <a>Service-linked roles</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
createAutoScalingGroup_serviceLinkedRoleARN :: Lens' CreateAutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service. During this time, any health check failures for the
--   instance are ignored. The default value is <tt>0</tt>. For more
--   information, see <a>Health check grace period</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
createAutoScalingGroup_healthCheckGracePeriod :: Lens' CreateAutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' CreateAutoScalingGroup (Maybe Bool)

-- | One or more lifecycle hooks for the group, which specify actions to
--   perform when Amazon EC2 Auto Scaling launches or terminates instances.
createAutoScalingGroup_lifecycleHookSpecificationList :: Lens' CreateAutoScalingGroup (Maybe [LifecycleHookSpecification])

-- | A policy or a list of policies that are used to select the instance to
--   terminate. These policies are executed in the order that you list
--   them. For more information, see <a>Controlling which Auto Scaling
--   instances terminate during scale in</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
createAutoScalingGroup_terminationPolicies :: Lens' CreateAutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group. This name must be unique per
--   Region per account.
createAutoScalingGroup_autoScalingGroupName :: Lens' CreateAutoScalingGroup Text

-- | The minimum size of the group.
createAutoScalingGroup_minSize :: Lens' CreateAutoScalingGroup Int

-- | The maximum size of the group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
createAutoScalingGroup_maxSize :: Lens' CreateAutoScalingGroup Int

-- | The IDs of the instances. You can specify up to 20 instances.
attachInstances_instanceIds :: Lens' AttachInstances (Maybe [Text])

-- | The name of the Auto Scaling group.
attachInstances_autoScalingGroupName :: Lens' AttachInstances Text

-- | The ID of the instance.
completeLifecycleAction_instanceId :: Lens' CompleteLifecycleAction (Maybe Text)

-- | A universally unique identifier (UUID) that identifies a specific
--   lifecycle action associated with an instance. Amazon EC2 Auto Scaling
--   sends this token to the notification target you specified when you
--   created the lifecycle hook.
completeLifecycleAction_lifecycleActionToken :: Lens' CompleteLifecycleAction (Maybe Text)

-- | The name of the lifecycle hook.
completeLifecycleAction_lifecycleHookName :: Lens' CompleteLifecycleAction Text

-- | The name of the Auto Scaling group.
completeLifecycleAction_autoScalingGroupName :: Lens' CompleteLifecycleAction Text

-- | The action for the group to take. This parameter can be either
--   <tt>CONTINUE</tt> or <tt>ABANDON</tt>.
completeLifecycleAction_lifecycleActionResult :: Lens' CompleteLifecycleAction Text

-- | The response's http status code.
completeLifecycleActionResponse_httpStatus :: Lens' CompleteLifecycleActionResponse Int

-- | Indicates whether Amazon EC2 Auto Scaling waits for the cooldown
--   period to complete before initiating a scaling activity to set your
--   Auto Scaling group to its new capacity. By default, Amazon EC2 Auto
--   Scaling does not honor the cooldown period during manual scaling
--   activities.
setDesiredCapacity_honorCooldown :: Lens' SetDesiredCapacity (Maybe Bool)

-- | The name of the Auto Scaling group.
setDesiredCapacity_autoScalingGroupName :: Lens' SetDesiredCapacity Text

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after this operation completes and the capacity it attempts to
--   maintain.
setDesiredCapacity_desiredCapacity :: Lens' SetDesiredCapacity Int

-- | The lifecycle hook types.
describeLifecycleHookTypesResponse_lifecycleHookTypes :: Lens' DescribeLifecycleHookTypesResponse (Maybe [Text])

-- | The response's http status code.
describeLifecycleHookTypesResponse_httpStatus :: Lens' DescribeLifecycleHookTypesResponse Int

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeNotificationConfigurations_nextToken :: Lens' DescribeNotificationConfigurations (Maybe Text)

-- | The name of the Auto Scaling group.
describeNotificationConfigurations_autoScalingGroupNames :: Lens' DescribeNotificationConfigurations (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeNotificationConfigurations_maxRecords :: Lens' DescribeNotificationConfigurations (Maybe Int)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeNotificationConfigurationsResponse_nextToken :: Lens' DescribeNotificationConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeNotificationConfigurationsResponse_httpStatus :: Lens' DescribeNotificationConfigurationsResponse Int

-- | The notification configurations.
describeNotificationConfigurationsResponse_notificationConfigurations :: Lens' DescribeNotificationConfigurationsResponse [NotificationConfiguration]

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describePolicies_nextToken :: Lens' DescribePolicies (Maybe Text)

-- | One or more policy types. The valid values are <tt>SimpleScaling</tt>,
--   <tt>StepScaling</tt>, <tt>TargetTrackingScaling</tt>, and
--   <tt>PredictiveScaling</tt>.
describePolicies_policyTypes :: Lens' DescribePolicies (Maybe [Text])

-- | The names of one or more policies. If you omit this parameter, all
--   policies are described. If a group name is provided, the results are
--   limited to that group. If you specify an unknown policy name, it is
--   ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
describePolicies_policyNames :: Lens' DescribePolicies (Maybe [Text])

-- | The maximum number of items to be returned with each call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describePolicies_maxRecords :: Lens' DescribePolicies (Maybe Int)

-- | The name of the Auto Scaling group.
describePolicies_autoScalingGroupName :: Lens' DescribePolicies (Maybe Text)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describePoliciesResponse_nextToken :: Lens' DescribePoliciesResponse (Maybe Text)

-- | The scaling policies.
describePoliciesResponse_scalingPolicies :: Lens' DescribePoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describePoliciesResponse_httpStatus :: Lens' DescribePoliciesResponse Int

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLaunchConfigurations_nextToken :: Lens' DescribeLaunchConfigurations (Maybe Text)

-- | The launch configuration names. If you omit this parameter, all launch
--   configurations are described.
--   
--   Array Members: Maximum number of 50 items.
describeLaunchConfigurations_launchConfigurationNames :: Lens' DescribeLaunchConfigurations (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeLaunchConfigurations_maxRecords :: Lens' DescribeLaunchConfigurations (Maybe Int)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLaunchConfigurationsResponse_nextToken :: Lens' DescribeLaunchConfigurationsResponse (Maybe Text)

-- | The response's http status code.
describeLaunchConfigurationsResponse_httpStatus :: Lens' DescribeLaunchConfigurationsResponse Int

-- | The launch configurations.
describeLaunchConfigurationsResponse_launchConfigurations :: Lens' DescribeLaunchConfigurationsResponse [LaunchConfiguration]

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeAutoScalingGroups_nextToken :: Lens' DescribeAutoScalingGroups (Maybe Text)

-- | The names of the Auto Scaling groups. By default, you can only specify
--   up to 50 names. You can optionally increase this limit using the
--   <tt>MaxRecords</tt> parameter.
--   
--   If you omit this parameter, all Auto Scaling groups are described.
describeAutoScalingGroups_autoScalingGroupNames :: Lens' DescribeAutoScalingGroups (Maybe [Text])

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
describeAutoScalingGroups_maxRecords :: Lens' DescribeAutoScalingGroups (Maybe Int)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeAutoScalingGroupsResponse_nextToken :: Lens' DescribeAutoScalingGroupsResponse (Maybe Text)

-- | The response's http status code.
describeAutoScalingGroupsResponse_httpStatus :: Lens' DescribeAutoScalingGroupsResponse Int

-- | The groups.
describeAutoScalingGroupsResponse_autoScalingGroups :: Lens' DescribeAutoScalingGroupsResponse [AutoScalingGroup]

-- | Specifies which group-level metrics to start collecting. You can
--   specify one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   </ul>
--   
--   The instance weighting feature supports the following additional
--   metrics:
--   
--   <ul>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   </ul>
--   
--   The warm pools feature supports the following additional metrics:
--   
--   <ul>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are enabled.
enableMetricsCollection_metrics :: Lens' EnableMetricsCollection (Maybe [Text])

-- | The name of the Auto Scaling group.
enableMetricsCollection_autoScalingGroupName :: Lens' EnableMetricsCollection Text

-- | The granularity to associate with the metrics to collect. The only
--   valid value is <tt>1Minute</tt>.
enableMetricsCollection_granularity :: Lens' EnableMetricsCollection Text

-- | The names of the process types.
describeScalingProcessTypesResponse_processes :: Lens' DescribeScalingProcessTypesResponse (Maybe [ProcessType])

-- | The response's http status code.
describeScalingProcessTypesResponse_httpStatus :: Lens' DescribeScalingProcessTypesResponse Int

-- | The ID of the instance.
recordLifecycleActionHeartbeat_instanceId :: Lens' RecordLifecycleActionHeartbeat (Maybe Text)

-- | A token that uniquely identifies a specific lifecycle action
--   associated with an instance. Amazon EC2 Auto Scaling sends this token
--   to the notification target that you specified when you created the
--   lifecycle hook.
recordLifecycleActionHeartbeat_lifecycleActionToken :: Lens' RecordLifecycleActionHeartbeat (Maybe Text)

-- | The name of the lifecycle hook.
recordLifecycleActionHeartbeat_lifecycleHookName :: Lens' RecordLifecycleActionHeartbeat Text

-- | The name of the Auto Scaling group.
recordLifecycleActionHeartbeat_autoScalingGroupName :: Lens' RecordLifecycleActionHeartbeat Text

-- | The response's http status code.
recordLifecycleActionHeartbeatResponse_httpStatus :: Lens' RecordLifecycleActionHeartbeatResponse Int

-- | Specifies one or more of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are disabled.
disableMetricsCollection_metrics :: Lens' DisableMetricsCollection (Maybe [Text])

-- | The name of the Auto Scaling group.
disableMetricsCollection_autoScalingGroupName :: Lens' DisableMetricsCollection Text

-- | The IDs of the instances. If you omit this parameter, all Auto Scaling
--   instances are described. If you specify an ID that does not exist, it
--   is ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
describeAutoScalingInstances_instanceIds :: Lens' DescribeAutoScalingInstances (Maybe [Text])

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeAutoScalingInstances_nextToken :: Lens' DescribeAutoScalingInstances (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>50</tt>.
describeAutoScalingInstances_maxRecords :: Lens' DescribeAutoScalingInstances (Maybe Int)

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeAutoScalingInstancesResponse_nextToken :: Lens' DescribeAutoScalingInstancesResponse (Maybe Text)

-- | The instances.
describeAutoScalingInstancesResponse_autoScalingInstances :: Lens' DescribeAutoScalingInstancesResponse (Maybe [AutoScalingInstanceDetails])

-- | The response's http status code.
describeAutoScalingInstancesResponse_httpStatus :: Lens' DescribeAutoScalingInstancesResponse Int

-- | The name of the Auto Scaling group.
cancelInstanceRefresh_autoScalingGroupName :: Lens' CancelInstanceRefresh Text

-- | The instance refresh ID.
cancelInstanceRefreshResponse_instanceRefreshId :: Lens' CancelInstanceRefreshResponse (Maybe Text)

-- | The response's http status code.
cancelInstanceRefreshResponse_httpStatus :: Lens' CancelInstanceRefreshResponse Int

-- | The name of the Auto Scaling group.
batchDeleteScheduledAction_autoScalingGroupName :: Lens' BatchDeleteScheduledAction Text

-- | The names of the scheduled actions to delete. The maximum number
--   allowed is 50.
batchDeleteScheduledAction_scheduledActionNames :: Lens' BatchDeleteScheduledAction [Text]

-- | The names of the scheduled actions that could not be deleted,
--   including an error message.
batchDeleteScheduledActionResponse_failedScheduledActions :: Lens' BatchDeleteScheduledActionResponse (Maybe [FailedScheduledUpdateGroupActionRequest])

-- | The response's http status code.
batchDeleteScheduledActionResponse_httpStatus :: Lens' BatchDeleteScheduledActionResponse Int

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLoadBalancerTargetGroups_nextToken :: Lens' DescribeLoadBalancerTargetGroups (Maybe Text)

-- | The maximum number of items to return with this call. The default
--   value is <tt>100</tt> and the maximum value is <tt>100</tt>.
describeLoadBalancerTargetGroups_maxRecords :: Lens' DescribeLoadBalancerTargetGroups (Maybe Int)

-- | The name of the Auto Scaling group.
describeLoadBalancerTargetGroups_autoScalingGroupName :: Lens' DescribeLoadBalancerTargetGroups Text

-- | Information about the target groups.
describeLoadBalancerTargetGroupsResponse_loadBalancerTargetGroups :: Lens' DescribeLoadBalancerTargetGroupsResponse (Maybe [LoadBalancerTargetGroupState])

-- | A string that indicates that the response contains more items than can
--   be returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
describeLoadBalancerTargetGroupsResponse_nextToken :: Lens' DescribeLoadBalancerTargetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeLoadBalancerTargetGroupsResponse_httpStatus :: Lens' DescribeLoadBalancerTargetGroupsResponse Int

-- | A friendly, more verbose description of the activity status.
activity_statusMessage :: Lens' Activity (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
activity_autoScalingGroupARN :: Lens' Activity (Maybe Text)

-- | The end time of the activity.
activity_endTime :: Lens' Activity (Maybe UTCTime)

-- | The state of the Auto Scaling group, which is either
--   <tt>InService</tt> or <tt>Deleted</tt>.
activity_autoScalingGroupState :: Lens' Activity (Maybe Text)

-- | The details about the activity.
activity_details :: Lens' Activity (Maybe Text)

-- | A friendly, more verbose description of the activity.
activity_description :: Lens' Activity (Maybe Text)

-- | A value between 0 and 100 that indicates the progress of the activity.
activity_progress :: Lens' Activity (Maybe Int)

-- | The name of the Auto Scaling group.
activity_autoScalingGroupName :: Lens' Activity (Maybe Text)

-- | The ID of the activity.
activity_activityId :: Lens' Activity Text

-- | The reason the activity began.
activity_cause :: Lens' Activity Text

-- | The start time of the activity.
activity_startTime :: Lens' Activity UTCTime

-- | The current status of the activity.
activity_statusCode :: Lens' Activity ScalingActivityStatusCode

-- | The policy adjustment type. The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
adjustmentType_adjustmentType :: Lens' AdjustmentType (Maybe Text)

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm (Maybe Text)

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm (Maybe Text)

-- | The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
autoScalingGroup_status :: Lens' AutoScalingGroup (Maybe Text)

-- | The maximum amount of time, in seconds, that an instance can be in
--   service.
--   
--   Valid Range: Minimum value of 0.
autoScalingGroup_maxInstanceLifetime :: Lens' AutoScalingGroup (Maybe Int)

-- | The name of the placement group into which to launch your instances,
--   if any.
autoScalingGroup_placementGroup :: Lens' AutoScalingGroup (Maybe Text)

-- | The suspended processes associated with the group.
autoScalingGroup_suspendedProcesses :: Lens' AutoScalingGroup (Maybe [SuspendedProcess])

-- | The predicted capacity of the group when it has a predictive scaling
--   policy.
autoScalingGroup_predictedCapacity :: Lens' AutoScalingGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Auto Scaling group.
autoScalingGroup_autoScalingGroupARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The launch template for the group.
autoScalingGroup_launchTemplate :: Lens' AutoScalingGroup (Maybe LaunchTemplateSpecification)

-- | The name of the associated launch configuration.
autoScalingGroup_launchConfigurationName :: Lens' AutoScalingGroup (Maybe Text)

-- | The EC2 instances associated with the group.
autoScalingGroup_instances :: Lens' AutoScalingGroup (Maybe [Instance])

-- | Reserved.
autoScalingGroup_context :: Lens' AutoScalingGroup (Maybe Text)

-- | The mixed instances policy for the group.
autoScalingGroup_mixedInstancesPolicy :: Lens' AutoScalingGroup (Maybe MixedInstancesPolicy)

-- | The tags for the group.
autoScalingGroup_tags :: Lens' AutoScalingGroup (Maybe [TagDescription])

-- | One or more load balancers associated with the group.
autoScalingGroup_loadBalancerNames :: Lens' AutoScalingGroup (Maybe [Text])

-- | The Amazon Resource Names (ARN) of the target groups for your load
--   balancer.
autoScalingGroup_targetGroupARNs :: Lens' AutoScalingGroup (Maybe [Text])

-- | One or more subnet IDs, if applicable, separated by commas.
autoScalingGroup_vPCZoneIdentifier :: Lens' AutoScalingGroup (Maybe Text)

-- | The current size of the warm pool.
autoScalingGroup_warmPoolSize :: Lens' AutoScalingGroup (Maybe Int)

-- | The warm pool for the group.
autoScalingGroup_warmPoolConfiguration :: Lens' AutoScalingGroup (Maybe WarmPoolConfiguration)

-- | Indicates whether Capacity Rebalancing is enabled.
autoScalingGroup_capacityRebalance :: Lens' AutoScalingGroup (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the service-linked role that the
--   Auto Scaling group uses to call other Amazon Web Services on your
--   behalf.
autoScalingGroup_serviceLinkedRoleARN :: Lens' AutoScalingGroup (Maybe Text)

-- | The amount of time, in seconds, that Amazon EC2 Auto Scaling waits
--   before checking the health status of an EC2 instance that has come
--   into service.
autoScalingGroup_healthCheckGracePeriod :: Lens' AutoScalingGroup (Maybe Int)

-- | Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in.
autoScalingGroup_newInstancesProtectedFromScaleIn :: Lens' AutoScalingGroup (Maybe Bool)

-- | The metrics enabled for the group.
autoScalingGroup_enabledMetrics :: Lens' AutoScalingGroup (Maybe [EnabledMetric])

-- | The termination policies for the group.
autoScalingGroup_terminationPolicies :: Lens' AutoScalingGroup (Maybe [Text])

-- | The name of the Auto Scaling group.
autoScalingGroup_autoScalingGroupName :: Lens' AutoScalingGroup Text

-- | The minimum size of the group.
autoScalingGroup_minSize :: Lens' AutoScalingGroup Int

-- | The maximum size of the group.
autoScalingGroup_maxSize :: Lens' AutoScalingGroup Int

-- | The desired size of the group.
autoScalingGroup_desiredCapacity :: Lens' AutoScalingGroup Int

-- | The duration of the default cooldown period, in seconds.
autoScalingGroup_defaultCooldown :: Lens' AutoScalingGroup Int

-- | One or more Availability Zones for the group.
autoScalingGroup_availabilityZones :: Lens' AutoScalingGroup [Text]

-- | The service to use for the health checks. The valid values are
--   <tt>EC2</tt> and <tt>ELB</tt>. If you configure an Auto Scaling group
--   to use <tt>ELB</tt> health checks, it considers the instance unhealthy
--   if it fails either the EC2 status checks or the load balancer health
--   checks.
autoScalingGroup_healthCheckType :: Lens' AutoScalingGroup Text

-- | The date and time the group was created.
autoScalingGroup_createdTime :: Lens' AutoScalingGroup UTCTime

-- | The instance type of the EC2 instance.
autoScalingInstanceDetails_instanceType :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The launch template for the instance.
autoScalingInstanceDetails_launchTemplate :: Lens' AutoScalingInstanceDetails (Maybe LaunchTemplateSpecification)

-- | The launch configuration used to launch the instance. This value is
--   not available if you attached the instance to the Auto Scaling group.
autoScalingInstanceDetails_launchConfigurationName :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
autoScalingInstanceDetails_weightedCapacity :: Lens' AutoScalingInstanceDetails (Maybe Text)

-- | The ID of the instance.
autoScalingInstanceDetails_instanceId :: Lens' AutoScalingInstanceDetails Text

-- | The name of the Auto Scaling group for the instance.
autoScalingInstanceDetails_autoScalingGroupName :: Lens' AutoScalingInstanceDetails Text

-- | The Availability Zone for the instance.
autoScalingInstanceDetails_availabilityZone :: Lens' AutoScalingInstanceDetails Text

-- | The lifecycle state for the instance. The <tt>Quarantined</tt> state
--   is not used. For information about lifecycle states, see <a>Instance
--   lifecycle</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
autoScalingInstanceDetails_lifecycleState :: Lens' AutoScalingInstanceDetails Text

-- | The last reported health status of this instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and Amazon EC2 Auto Scaling
--   should terminate and replace it.
autoScalingInstanceDetails_healthStatus :: Lens' AutoScalingInstanceDetails Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
autoScalingInstanceDetails_protectedFromScaleIn :: Lens' AutoScalingInstanceDetails Bool

-- | Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_ebs :: Lens' BlockDeviceMapping (Maybe Ebs)

-- | Setting this value to <tt>true</tt> suppresses the specified device
--   included in the block device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
blockDeviceMapping_noDevice :: Lens' BlockDeviceMapping (Maybe Bool)

-- | The name of the virtual device (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
blockDeviceMapping_virtualName :: Lens' BlockDeviceMapping (Maybe Text)

-- | The device name exposed to the EC2 instance (for example,
--   <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For more information, see
--   <a>Device Naming on Linux Instances</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
blockDeviceMapping_deviceName :: Lens' BlockDeviceMapping Text

-- | The time stamps for the data points, in UTC format.
capacityForecast_timestamps :: Lens' CapacityForecast [UTCTime]

-- | The values of the data points.
capacityForecast_values :: Lens' CapacityForecast [Double]

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic

-- | Undocumented member.
desiredConfiguration_launchTemplate :: Lens' DesiredConfiguration (Maybe LaunchTemplateSpecification)

-- | Undocumented member.
desiredConfiguration_mixedInstancesPolicy :: Lens' DesiredConfiguration (Maybe MixedInstancesPolicy)

-- | Specifies whether the volume should be encrypted. Encrypted EBS
--   volumes can only be attached to instances that support Amazon EBS
--   encryption. For more information, see <a>Supported Instance Types</a>.
--   If your AMI uses encrypted volumes, you can also only launch it on
--   supported instance types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
ebs_encrypted :: Lens' Ebs (Maybe Bool)

-- | The throughput (MiBps) to provision for a <tt>gp3</tt> volume.
ebs_throughput :: Lens' Ebs (Maybe Natural)

-- | Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
ebs_deleteOnTermination :: Lens' Ebs (Maybe Bool)

-- | The snapshot ID of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
ebs_snapshotId :: Lens' Ebs (Maybe Text)

-- | The volume type. For more information, see <a>Amazon EBS Volume
--   Types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
ebs_volumeType :: Lens' Ebs (Maybe Text)

-- | The number of input/output (I/O) operations per second (IOPS) to
--   provision for the volume. For <tt>gp3</tt> and <tt>io1</tt> volumes,
--   this represents the number of IOPS that are provisioned for the
--   volume. For <tt>gp2</tt> volumes, this represents the baseline
--   performance of the volume and the rate at which the volume accumulates
--   I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
ebs_iops :: Lens' Ebs (Maybe Natural)

-- | The volume size, in GiBs. The following are the supported volumes
--   sizes for each volume type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
ebs_volumeSize :: Lens' Ebs (Maybe Natural)

-- | The granularity of the metric. The only valid value is
--   <tt>1Minute</tt>.
enabledMetric_granularity :: Lens' EnabledMetric (Maybe Text)

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
enabledMetric_metric :: Lens' EnabledMetric (Maybe Text)

-- | The error message accompanying the error code.
failedScheduledUpdateGroupActionRequest_errorMessage :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The error code.
failedScheduledUpdateGroupActionRequest_errorCode :: Lens' FailedScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scheduled action.
failedScheduledUpdateGroupActionRequest_scheduledActionName :: Lens' FailedScheduledUpdateGroupActionRequest Text

-- | One or more filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the filter. The valid values are:
--   <tt>auto-scaling-group</tt>, <tt>key</tt>, <tt>value</tt>, and
--   <tt>propagate-at-launch</tt>.
filter_name :: Lens' Filter Text

-- | The instance type of the EC2 instance.
instance_instanceType :: Lens' Instance (Maybe Text)

-- | The launch template for the instance.
instance_launchTemplate :: Lens' Instance (Maybe LaunchTemplateSpecification)

-- | The launch configuration associated with the instance.
instance_launchConfigurationName :: Lens' Instance (Maybe Text)

-- | The number of capacity units contributed by the instance based on its
--   instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
instance_weightedCapacity :: Lens' Instance (Maybe Text)

-- | The ID of the instance.
instance_instanceId :: Lens' Instance Text

-- | The Availability Zone in which the instance is running.
instance_availabilityZone :: Lens' Instance Text

-- | A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
instance_lifecycleState :: Lens' Instance LifecycleState

-- | The last reported health status of the instance. "Healthy" means that
--   the instance is healthy and should remain in service. "Unhealthy"
--   means that the instance is unhealthy and that Amazon EC2 Auto Scaling
--   should terminate and replace it.
instance_healthStatus :: Lens' Instance Text

-- | Indicates whether the instance is protected from termination by Amazon
--   EC2 Auto Scaling when scaling in.
instance_protectedFromScaleIn :: Lens' Instance Bool

-- | This parameter enables or disables the HTTP metadata endpoint on your
--   instances. If the parameter is not specified, the default state is
--   <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
instanceMetadataOptions_httpEndpoint :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataEndpointState)

-- | The desired HTTP PUT response hop limit for instance metadata
--   requests. The larger the number, the further instance metadata
--   requests can travel.
--   
--   Default: 1
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | The state of token usage for your instance metadata requests. If the
--   parameter is not specified in the request, the default state is
--   <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe InstanceMetadataHttpTokensState)

-- | If <tt>true</tt>, detailed monitoring is enabled. Otherwise, basic
--   monitoring is enabled.
instanceMonitoring_enabled :: Lens' InstanceMonitoring (Maybe Bool)

-- | The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
instanceRefresh_status :: Lens' InstanceRefresh (Maybe InstanceRefreshStatus)

-- | The instance refresh ID.
instanceRefresh_instanceRefreshId :: Lens' InstanceRefresh (Maybe Text)

-- | The percentage of the instance refresh that is complete. For each
--   instance replacement, Amazon EC2 Auto Scaling tracks the instance's
--   health status and warm-up time. When the instance's health status
--   changes to healthy and the specified warm-up time passes, the instance
--   is considered updated and is added to the percentage complete.
instanceRefresh_percentageComplete :: Lens' InstanceRefresh (Maybe Natural)

-- | The date and time at which the instance refresh began.
instanceRefresh_startTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | The date and time at which the instance refresh ended.
instanceRefresh_endTime :: Lens' InstanceRefresh (Maybe UTCTime)

-- | Additional progress details for an Auto Scaling group that has a warm
--   pool.
instanceRefresh_progressDetails :: Lens' InstanceRefresh (Maybe InstanceRefreshProgressDetails)

-- | Describes the specific update you want to deploy.
instanceRefresh_desiredConfiguration :: Lens' InstanceRefresh (Maybe DesiredConfiguration)

-- | Undocumented member.
instanceRefresh_preferences :: Lens' InstanceRefresh (Maybe RefreshPreferences)

-- | Provides more details about the current status of the instance
--   refresh.
instanceRefresh_statusReason :: Lens' InstanceRefresh (Maybe Text)

-- | The number of instances remaining to update before the instance
--   refresh is complete.
instanceRefresh_instancesToUpdate :: Lens' InstanceRefresh (Maybe Natural)

-- | The name of the Auto Scaling group.
instanceRefresh_autoScalingGroupName :: Lens' InstanceRefresh (Maybe Text)

-- | The percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
instanceRefreshLivePoolProgress_percentageComplete :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshLivePoolProgress_instancesToUpdate :: Lens' InstanceRefreshLivePoolProgress (Maybe Natural)

-- | Indicates the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
instanceRefreshProgressDetails_livePoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshLivePoolProgress)

-- | Indicates the progress of an instance refresh on instances that are in
--   the warm pool.
instanceRefreshProgressDetails_warmPoolProgress :: Lens' InstanceRefreshProgressDetails (Maybe InstanceRefreshWarmPoolProgress)

-- | The percentage of instances in the warm pool that have been replaced.
--   For each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
instanceRefreshWarmPoolProgress_percentageComplete :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)

-- | The number of instances remaining to update.
instanceRefreshWarmPoolProgress_instancesToUpdate :: Lens' InstanceRefreshWarmPoolProgress (Maybe Natural)

-- | The maximum price per unit hour that you are willing to pay for a Spot
--   Instance. If you leave the value at its default (empty), Amazon EC2
--   Auto Scaling uses the On-Demand price as the maximum Spot price. To
--   remove a value that you previously set, include the property but
--   specify an empty string ("") for the value.
instancesDistribution_spotMaxPrice :: Lens' InstancesDistribution (Maybe Text)

-- | The number of Spot Instance pools across which to allocate your Spot
--   Instances. The Spot pools are determined from the different instance
--   types in the overrides. Valid only when the Spot allocation strategy
--   is <tt>lowest-price</tt>. Value must be in the range of 1 to 20.
--   Defaults to 2 if not specified.
instancesDistribution_spotInstancePools :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
instancesDistribution_spotAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
instancesDistribution_onDemandPercentageAboveBaseCapacity :: Lens' InstancesDistribution (Maybe Int)

-- | Indicates how to allocate instance types to fulfill On-Demand
--   capacity. The only valid value is <tt>prioritized</tt>, which is also
--   the default value. This strategy uses the order of instance types in
--   the <tt>LaunchTemplateOverrides</tt> to define the launch priority of
--   each instance type. The first instance type in the array is
--   prioritized higher than the last. If all your On-Demand capacity
--   cannot be fulfilled using your highest priority instance, then the
--   Auto Scaling groups launches the remaining capacity using the second
--   priority instance type, and so on.
instancesDistribution_onDemandAllocationStrategy :: Lens' InstancesDistribution (Maybe Text)

-- | The minimum amount of the Auto Scaling group's capacity that must be
--   fulfilled by On-Demand Instances. This base portion is provisioned
--   first as your group scales. Defaults to 0 if not specified. If you
--   specify weights for the instance types in the overrides, set the value
--   of <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
instancesDistribution_onDemandBaseCapacity :: Lens' InstancesDistribution (Maybe Int)

-- | Specifies whether the launch configuration is optimized for EBS I/O
--   (<tt>true</tt>) or not (<tt>false</tt>). For more information, see
--   <a>Amazon EBS-Optimized Instances</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
launchConfiguration_ebsOptimized :: Lens' LaunchConfiguration (Maybe Bool)

-- | The user data to make available to the launched EC2 instances. For
--   more information, see <a>Instance metadata and user data</a> (Linux)
--   and <a>Instance metadata and user data</a> (Windows). If you are using
--   a command line tool, base64-encoding is performed for you, and you can
--   load the text from a file. Otherwise, you must provide base64-encoded
--   text. User data is limited to 16 KB.
launchConfiguration_userData :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of the RAM disk associated with the AMI.
launchConfiguration_ramdiskId :: Lens' LaunchConfiguration (Maybe Text)

-- | The IDs of one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_classicLinkVPCSecurityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The maximum hourly price to be paid for any Spot Instance launched to
--   fulfill the request. Spot Instances are launched when the price you
--   specify exceeds the current Spot price. For more information, see
--   <a>Requesting Spot Instances</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
launchConfiguration_spotPrice :: Lens' LaunchConfiguration (Maybe Text)

-- | For Auto Scaling groups that are running in a VPC, specifies whether
--   to assign a public IP address to the group's instances. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_associatePublicIpAddress :: Lens' LaunchConfiguration (Maybe Bool)

-- | A list that contains the security groups to assign to the instances in
--   the Auto Scaling group. For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
launchConfiguration_securityGroups :: Lens' LaunchConfiguration (Maybe [Text])

-- | The name or the Amazon Resource Name (ARN) of the instance profile
--   associated with the IAM role for the instance. The instance profile
--   contains the IAM role. For more information, see <a>IAM role for
--   applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_iamInstanceProfile :: Lens' LaunchConfiguration (Maybe Text)

-- | The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances
--   to. For more information, see <a>ClassicLink</a> in the <i>Amazon EC2
--   User Guide for Linux Instances</i> and <a>Linking EC2-Classic
--   instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchConfiguration_classicLinkVPCId :: Lens' LaunchConfiguration (Maybe Text)

-- | A block device mapping, which specifies the block devices for the
--   instance. For more information, see <a>Block Device Mapping</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_blockDeviceMappings :: Lens' LaunchConfiguration (Maybe [BlockDeviceMapping])

-- | The ID of the kernel associated with the AMI.
launchConfiguration_kernelId :: Lens' LaunchConfiguration (Maybe Text)

-- | The tenancy of the instance, either <tt>default</tt> or
--   <tt>dedicated</tt>. An instance with <tt>dedicated</tt> tenancy runs
--   on isolated, single-tenant hardware and can only be launched into a
--   VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_placementTenancy :: Lens' LaunchConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the launch configuration.
launchConfiguration_launchConfigurationARN :: Lens' LaunchConfiguration (Maybe Text)

-- | The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
launchConfiguration_keyName :: Lens' LaunchConfiguration (Maybe Text)

-- | Controls whether instances in this group are launched with detailed
--   (<tt>true</tt>) or basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
launchConfiguration_instanceMonitoring :: Lens' LaunchConfiguration (Maybe InstanceMonitoring)

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
launchConfiguration_metadataOptions :: Lens' LaunchConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the launch configuration.
launchConfiguration_launchConfigurationName :: Lens' LaunchConfiguration Text

-- | The ID of the Amazon Machine Image (AMI) to use to launch your EC2
--   instances. For more information, see <a>Finding an AMI</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
launchConfiguration_imageId :: Lens' LaunchConfiguration Text

-- | The instance type for the instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
launchConfiguration_instanceType :: Lens' LaunchConfiguration Text

-- | The creation date and time for the launch configuration.
launchConfiguration_createdTime :: Lens' LaunchConfiguration UTCTime

-- | The launch template to use.
launchTemplate_launchTemplateSpecification :: Lens' LaunchTemplate (Maybe LaunchTemplateSpecification)

-- | Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
launchTemplate_overrides :: Lens' LaunchTemplate (Maybe [LaunchTemplateOverrides])

-- | The instance type, such as <tt>m3.xlarge</tt>. You must use an
--   instance type that is supported in your requested Region and
--   Availability Zones. For more information, see <a>Instance types</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
launchTemplateOverrides_instanceType :: Lens' LaunchTemplateOverrides (Maybe Text)

-- | Provides the launch template to be used when launching the instance
--   type. For example, some instance types might require a launch template
--   with a different AMI. If not provided, Amazon EC2 Auto Scaling uses
--   the launch template that's defined for your mixed instances policy.
--   For more information, see <a>Specifying a different launch template
--   for an instance type</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
launchTemplateOverrides_launchTemplateSpecification :: Lens' LaunchTemplateOverrides (Maybe LaunchTemplateSpecification)

-- | The number of capacity units provided by the specified instance type
--   in terms of virtual CPUs, memory, storage, throughput, or other
--   relative performance characteristic. When a Spot or On-Demand Instance
--   is provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
launchTemplateOverrides_weightedCapacity :: Lens' LaunchTemplateOverrides (Maybe Text)

-- | The ID of the launch template. To get the template ID, use the Amazon
--   EC2 <a>DescribeLaunchTemplates</a> API operation. New launch templates
--   can be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number, <tt>$Latest</tt>, or <tt>$Default</tt>. To get the
--   version number, use the Amazon EC2
--   <a>DescribeLaunchTemplateVersions</a> API operation. New launch
--   template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The name of the launch template. To get the template name, use the
--   Amazon EC2 <a>DescribeLaunchTemplates</a> API operation. New launch
--   templates can be created using the Amazon EC2
--   <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target.
lifecycleHook_roleARN :: Lens' LifecycleHook (Maybe Text)

-- | The state of the EC2 instance to which to attach the lifecycle hook.
--   The following are possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHook_lifecycleTransition :: Lens' LifecycleHook (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHook_notificationTargetARN :: Lens' LifecycleHook (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out. If the lifecycle hook times out, Amazon EC2 Auto
--   Scaling performs the action that you specified in the
--   <tt>DefaultResult</tt> parameter.
lifecycleHook_heartbeatTimeout :: Lens' LifecycleHook (Maybe Int)

-- | The maximum time, in seconds, that an instance can remain in a
--   <tt>Pending:Wait</tt> or <tt>Terminating:Wait</tt> state. The maximum
--   is 172800 seconds (48 hours) or 100 times <tt>HeartbeatTimeout</tt>,
--   whichever is smaller.
lifecycleHook_globalTimeout :: Lens' LifecycleHook (Maybe Int)

-- | Additional information that is included any time Amazon EC2 Auto
--   Scaling sends a message to the notification target.
lifecycleHook_notificationMetadata :: Lens' LifecycleHook (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHook_lifecycleHookName :: Lens' LifecycleHook (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   possible values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
lifecycleHook_defaultResult :: Lens' LifecycleHook (Maybe Text)

-- | The name of the Auto Scaling group for the lifecycle hook.
lifecycleHook_autoScalingGroupName :: Lens' LifecycleHook (Maybe Text)

-- | The ARN of the IAM role that allows the Auto Scaling group to publish
--   to the specified notification target, for example, an Amazon SNS topic
--   or an Amazon SQS queue.
lifecycleHookSpecification_roleARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The ARN of the target that Amazon EC2 Auto Scaling sends notifications
--   to when an instance is in the transition state for the lifecycle hook.
--   The notification target can be either an SQS queue or an SNS topic.
lifecycleHookSpecification_notificationTargetARN :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The maximum time, in seconds, that can elapse before the lifecycle
--   hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
lifecycleHookSpecification_heartbeatTimeout :: Lens' LifecycleHookSpecification (Maybe Int)

-- | Additional information that you want to include any time Amazon EC2
--   Auto Scaling sends a message to the notification target.
lifecycleHookSpecification_notificationMetadata :: Lens' LifecycleHookSpecification (Maybe Text)

-- | Defines the action the Auto Scaling group should take when the
--   lifecycle hook timeout elapses or if an unexpected failure occurs. The
--   valid values are <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default
--   value is <tt>ABANDON</tt>.
lifecycleHookSpecification_defaultResult :: Lens' LifecycleHookSpecification (Maybe Text)

-- | The name of the lifecycle hook.
lifecycleHookSpecification_lifecycleHookName :: Lens' LifecycleHookSpecification Text

-- | The state of the EC2 instance to which you want to attach the
--   lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
lifecycleHookSpecification_lifecycleTransition :: Lens' LifecycleHookSpecification Text

-- | One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
loadBalancerState_state :: Lens' LoadBalancerState (Maybe Text)

-- | The name of the load balancer.
loadBalancerState_loadBalancerName :: Lens' LoadBalancerState (Maybe Text)

-- | The state of the target group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
loadBalancerTargetGroupState_state :: Lens' LoadBalancerTargetGroupState (Maybe Text)

-- | The Amazon Resource Name (ARN) of the target group.
loadBalancerTargetGroupState_loadBalancerTargetGroupARN :: Lens' LoadBalancerTargetGroupState (Maybe Text)

-- | The time stamps for the data points, in UTC format.
loadForecast_timestamps :: Lens' LoadForecast [UTCTime]

-- | The values of the data points.
loadForecast_values :: Lens' LoadForecast [Double]

-- | The metric specification for the load forecast.
loadForecast_metricSpecification :: Lens' LoadForecast PredictiveScalingMetricSpecification

-- | One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
metricCollectionType_metric :: Lens' MetricCollectionType (Maybe Text)

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | The granularity. The only valid value is <tt>1Minute</tt>.
metricGranularityType_granularity :: Lens' MetricGranularityType (Maybe Text)

-- | Specifies the instances distribution. If not provided, the value for
--   each property in <tt>InstancesDistribution</tt> uses a default value.
mixedInstancesPolicy_instancesDistribution :: Lens' MixedInstancesPolicy (Maybe InstancesDistribution)

-- | Specifies the launch template to use and the instance types
--   (overrides) that are used to provision EC2 instances to fulfill
--   On-Demand and Spot capacities. Required when creating a mixed
--   instances policy.
mixedInstancesPolicy_launchTemplate :: Lens' MixedInstancesPolicy (Maybe LaunchTemplate)

-- | One of the following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
notificationConfiguration_notificationType :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (Amazon SNS) topic.
notificationConfiguration_topicARN :: Lens' NotificationConfiguration (Maybe Text)

-- | The name of the Auto Scaling group.
notificationConfiguration_autoScalingGroupName :: Lens' NotificationConfiguration (Maybe Text)

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
predictiveScalingConfiguration_maxCapacityBreachBehavior :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMaxCapacityBreachBehavior)

-- | The predictive scaling mode. Defaults to <tt>ForecastOnly</tt> if not
--   specified.
predictiveScalingConfiguration_mode :: Lens' PredictiveScalingConfiguration (Maybe PredictiveScalingMode)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
predictiveScalingConfiguration_maxCapacityBuffer :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | The amount of time, in seconds, by which the instance launch time can
--   be advanced. For example, the forecast says to add capacity at 10:00
--   AM, and you choose to pre-launch instances by 5 minutes. In that case,
--   the instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
predictiveScalingConfiguration_schedulingBufferTime :: Lens' PredictiveScalingConfiguration (Maybe Natural)

-- | This structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
predictiveScalingConfiguration_metricSpecifications :: Lens' PredictiveScalingConfiguration [PredictiveScalingMetricSpecification]

-- | The load metric specification.
predictiveScalingMetricSpecification_predefinedLoadMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedLoadMetric)

-- | The scaling metric specification.
predictiveScalingMetricSpecification_predefinedScalingMetricSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedScalingMetric)

-- | The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
predictiveScalingMetricSpecification_predefinedMetricPairSpecification :: Lens' PredictiveScalingMetricSpecification (Maybe PredictiveScalingPredefinedMetricPair)

-- | Specifies the target utilization.
predictiveScalingMetricSpecification_targetValue :: Lens' PredictiveScalingMetricSpecification Double

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the request count served by your
--   Auto Scaling group. You can't specify a resource label unless the
--   target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedLoadMetric_resourceLabel :: Lens' PredictiveScalingPredefinedLoadMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedLoadMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedLoadMetric PredefinedLoadMetricType

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the total and average request
--   count served by your Auto Scaling group. You can't specify a resource
--   label unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedMetricPair_resourceLabel :: Lens' PredictiveScalingPredefinedMetricPair (Maybe Text)

-- | Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
predictiveScalingPredefinedMetricPair_predefinedMetricType :: Lens' PredictiveScalingPredefinedMetricPair PredefinedMetricPairType

-- | A label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predictiveScalingPredefinedScalingMetric_resourceLabel :: Lens' PredictiveScalingPredefinedScalingMetric (Maybe Text)

-- | The metric type.
predictiveScalingPredefinedScalingMetric_predefinedMetricType :: Lens' PredictiveScalingPredefinedScalingMetric PredefinedScalingMetricType

-- | One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
processType_processName :: Lens' ProcessType Text

-- | The amount of time, in seconds, to wait after a checkpoint before
--   continuing. This property is optional, but if you specify a value for
--   it, you must also specify a value for <tt>CheckpointPercentages</tt>.
--   If you specify a value for <tt>CheckpointPercentages</tt> and not for
--   <tt>CheckpointDelay</tt>, the <tt>CheckpointDelay</tt> defaults to
--   <tt>3600</tt> (1 hour).
refreshPreferences_checkpointDelay :: Lens' RefreshPreferences (Maybe Natural)

-- | The amount of capacity in the Auto Scaling group that must remain
--   healthy during an instance refresh to allow the operation to continue.
--   The value is expressed as a percentage of the desired capacity of the
--   Auto Scaling group (rounded up to the nearest integer). The default is
--   <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
refreshPreferences_minHealthyPercentage :: Lens' RefreshPreferences (Maybe Natural)

-- | The number of seconds until a newly launched instance is configured
--   and ready to use. During this time, Amazon EC2 Auto Scaling does not
--   immediately move on to the next replacement. The default is to use the
--   value for the health check grace period defined for the group.
refreshPreferences_instanceWarmup :: Lens' RefreshPreferences (Maybe Natural)

-- | A boolean value that indicates whether skip matching is enabled. If
--   true, then Amazon EC2 Auto Scaling skips replacing instances that
--   match the desired configuration. If no desired configuration is
--   specified, then it skips replacing instances that have the same
--   configuration that is already set on the group. The default is
--   <tt>false</tt>.
refreshPreferences_skipMatching :: Lens' RefreshPreferences (Maybe Bool)

-- | Threshold values for each checkpoint in ascending order. Each number
--   must be unique. To replace all instances in the Auto Scaling group,
--   the last number in the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
refreshPreferences_checkpointPercentages :: Lens' RefreshPreferences (Maybe [Natural])

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy (Maybe Text)

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
scalingPolicy_stepAdjustments :: Lens' ScalingPolicy (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. The valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>.
scalingPolicy_metricAggregationType :: Lens' ScalingPolicy (Maybe Text)

-- | One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
scalingPolicy_policyType :: Lens' ScalingPolicy (Maybe Text)

-- | Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
scalingPolicy_enabled :: Lens' ScalingPolicy (Maybe Bool)

-- | The duration of the policy's cooldown period, in seconds.
scalingPolicy_cooldown :: Lens' ScalingPolicy (Maybe Int)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
scalingPolicy_scalingAdjustment :: Lens' ScalingPolicy (Maybe Int)

-- | Specifies how the scaling adjustment is interpreted (for example, an
--   absolute number or a percentage). The valid values are
--   <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>, and
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_adjustmentType :: Lens' ScalingPolicy (Maybe Text)

-- | Available for backward compatibility. Use
--   <tt>MinAdjustmentMagnitude</tt> instead.
scalingPolicy_minAdjustmentStep :: Lens' ScalingPolicy (Maybe Int)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics.
scalingPolicy_estimatedInstanceWarmup :: Lens' ScalingPolicy (Maybe Int)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>.
scalingPolicy_minAdjustmentMagnitude :: Lens' ScalingPolicy (Maybe Int)

-- | The CloudWatch alarms related to the policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy (Maybe Text)

-- | A predictive scaling policy.
scalingPolicy_predictiveScalingConfiguration :: Lens' ScalingPolicy (Maybe PredictiveScalingConfiguration)

-- | The name of the Auto Scaling group.
scalingPolicy_autoScalingGroupName :: Lens' ScalingPolicy (Maybe Text)

-- | One or more of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
scalingProcessQuery_scalingProcesses :: Lens' ScalingProcessQuery (Maybe [Text])

-- | The name of the Auto Scaling group.
scalingProcessQuery_autoScalingGroupName :: Lens' ScalingProcessQuery Text

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupAction_minSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupAction_desiredCapacity :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The date and time in UTC for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_startTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The date and time in UTC for the recurring schedule to end. For
--   example, <tt>"2019-06-01T00:00:00Z"</tt>.
scheduledUpdateGroupAction_endTime :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledUpdateGroupAction_scheduledActionARN :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
scheduledUpdateGroupAction_recurrence :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupAction_maxSize :: Lens' ScheduledUpdateGroupAction (Maybe Int)

-- | The time zone for the cron expression.
scheduledUpdateGroupAction_timeZone :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The name of the scheduled action.
scheduledUpdateGroupAction_scheduledActionName :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | This parameter is no longer used.
scheduledUpdateGroupAction_time :: Lens' ScheduledUpdateGroupAction (Maybe UTCTime)

-- | The name of the Auto Scaling group.
scheduledUpdateGroupAction_autoScalingGroupName :: Lens' ScheduledUpdateGroupAction (Maybe Text)

-- | The minimum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_minSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The desired capacity is the initial capacity of the Auto Scaling group
--   after the scheduled action runs and the capacity it attempts to
--   maintain.
scheduledUpdateGroupActionRequest_desiredCapacity :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | The date and time for the action to start, in YYYY-MM-DDThh:mm:ssZ
--   format in UTC/GMT only and in quotes (for example,
--   <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
scheduledUpdateGroupActionRequest_startTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
scheduledUpdateGroupActionRequest_endTime :: Lens' ScheduledUpdateGroupActionRequest (Maybe UTCTime)

-- | The recurring schedule for the action, in Unix cron syntax format.
--   This format consists of five fields separated by white spaces:
--   [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
--   value must be in quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For
--   more information about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
scheduledUpdateGroupActionRequest_recurrence :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The maximum size of the Auto Scaling group.
scheduledUpdateGroupActionRequest_maxSize :: Lens' ScheduledUpdateGroupActionRequest (Maybe Int)

-- | Specifies the time zone for a cron expression. If a time zone is not
--   provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
scheduledUpdateGroupActionRequest_timeZone :: Lens' ScheduledUpdateGroupActionRequest (Maybe Text)

-- | The name of the scaling action.
scheduledUpdateGroupActionRequest_scheduledActionName :: Lens' ScheduledUpdateGroupActionRequest Text

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int

-- | The name of the suspended process.
suspendedProcess_processName :: Lens' SuspendedProcess (Maybe Text)

-- | The reason that the process was suspended.
suspendedProcess_suspensionReason :: Lens' SuspendedProcess (Maybe Text)

-- | The tag key.
tag_key :: Lens' Tag Text

-- | The name of the Auto Scaling group.
tag_resourceId :: Lens' Tag Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tag_resourceType :: Lens' Tag Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tag_propagateAtLaunch :: Lens' Tag Bool

-- | The tag value.
tag_value :: Lens' Tag Text

-- | The name of the group.
tagDescription_resourceId :: Lens' TagDescription Text

-- | The type of resource. The only supported value is
--   <tt>auto-scaling-group</tt>.
tagDescription_resourceType :: Lens' TagDescription Text

-- | The tag key.
tagDescription_key :: Lens' TagDescription Text

-- | Determines whether the tag is added to new instances as they are
--   launched in the group.
tagDescription_propagateAtLaunch :: Lens' TagDescription Bool

-- | The tag value.
tagDescription_value :: Lens' TagDescription Text

-- | Indicates whether scaling in by the target tracking scaling policy is
--   disabled. If scaling in is disabled, the target tracking scaling
--   policy doesn't remove instances from the Auto Scaling group.
--   Otherwise, the target tracking scaling policy can remove instances
--   from the Auto Scaling group. The default is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A predefined metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedMetricSpecification)

-- | A customized metric. You must specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedMetricSpecification)

-- | The target value for the metric.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double

-- | The minimum number of instances to maintain in the warm pool.
warmPoolConfiguration_minSize :: Lens' WarmPoolConfiguration (Maybe Natural)

-- | The status of a warm pool that is marked for deletion.
warmPoolConfiguration_status :: Lens' WarmPoolConfiguration (Maybe WarmPoolStatus)

-- | The instance state to transition to after the lifecycle actions are
--   complete.
warmPoolConfiguration_poolState :: Lens' WarmPoolConfiguration (Maybe WarmPoolState)

-- | The maximum number of instances that are allowed to be in the warm
--   pool or in any state except <tt>Terminated</tt> for the Auto Scaling
--   group.
warmPoolConfiguration_maxGroupPreparedCapacity :: Lens' WarmPoolConfiguration (Maybe Int)


module Network.AWS.AutoScaling.Waiters


-- | Derived from API version <tt>2011-01-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon EC2 Auto Scaling
--   
--   Amazon EC2 Auto Scaling is designed to automatically launch or
--   terminate EC2 instances based on user-defined scaling policies,
--   scheduled actions, and health checks.
--   
--   For more information about Amazon EC2 Auto Scaling, see the <a>Amazon
--   EC2 Auto Scaling User Guide</a>. For information about granting IAM
--   users required permissions for calls to Amazon EC2 Auto Scaling, see
--   <a>Granting IAM users required permissions for Amazon EC2 Auto Scaling
--   resources</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.
module Network.AWS.AutoScaling

-- | API version <tt>2011-01-01</tt> of the Amazon Auto Scaling SDK
--   configuration.
defaultService :: Service

-- | The request failed because an active instance refresh operation
--   already exists for the specified Auto Scaling group.
_InstanceRefreshInProgressFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be performed because the resource is in use.
_ResourceInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have an Auto Scaling group or launch configuration with
--   this name.
_AlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have already reached a limit for your Amazon EC2 Auto Scaling
--   resources (for example, Auto Scaling groups, launch configurations, or
--   lifecycle hooks). For more information, see
--   <a>DescribeAccountLimits</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
_LimitExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be performed because there are scaling activities
--   in progress.
_ScalingActivityInProgressFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a pending update to an Amazon EC2 Auto Scaling
--   resource (for example, an Auto Scaling group, instance, or load
--   balancer).
_ResourceContentionFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because an active instance refresh for the
--   specified Auto Scaling group was not found.
_ActiveInstanceRefreshNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service-linked role is not yet ready for use.
_ServiceLinkedRoleFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>NextToken</tt> value is not valid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newExecutePolicy</a> smart constructor.
data ExecutePolicy
ExecutePolicy' :: Maybe Double -> Maybe Double -> Maybe Bool -> Maybe Text -> Text -> ExecutePolicy

-- | Create a value of <a>ExecutePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricValue:ExecutePolicy'</a>,
--   <a>executePolicy_metricValue</a> - The metric value to compare to
--   <tt>BreachThreshold</tt>. This enables you to execute a policy of type
--   <tt>StepScaling</tt> and determine which step adjustment to use. For
--   example, if the breach threshold is 50 and you want to use a step
--   adjustment with a lower bound of 0 and an upper bound of 10, you can
--   set the metric value to 59.
--   
--   If you specify a metric value that doesn't correspond to a step
--   adjustment for the policy, the call returns an error.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
--   
--   <a>$sel:breachThreshold:ExecutePolicy'</a>,
--   <a>executePolicy_breachThreshold</a> - The breach threshold for the
--   alarm.
--   
--   Required if the policy type is <tt>StepScaling</tt> and not supported
--   otherwise.
--   
--   <a>$sel:honorCooldown:ExecutePolicy'</a>,
--   <a>executePolicy_honorCooldown</a> - Indicates whether Amazon EC2 Auto
--   Scaling waits for the cooldown period to complete before executing the
--   policy.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:ExecutePolicy'</a>,
--   <a>executePolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:ExecutePolicy'</a>, <a>executePolicy_policyName</a>
--   - The name or ARN of the policy.
newExecutePolicy :: Text -> ExecutePolicy

-- | <i>See:</i> <a>newExecutePolicyResponse</a> smart constructor.
data ExecutePolicyResponse
ExecutePolicyResponse' :: ExecutePolicyResponse

-- | Create a value of <a>ExecutePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newExecutePolicyResponse :: ExecutePolicyResponse

-- | <i>See:</i> <a>newSuspendProcesses</a> smart constructor.
data SuspendProcesses
SuspendProcesses' :: Maybe [Text] -> Text -> SuspendProcesses

-- | Create a value of <a>SuspendProcesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:SuspendProcesses'</a>,
--   <a>suspendProcesses_scalingProcesses</a> - One or more of the
--   following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:SuspendProcesses'</a>,
--   <a>suspendProcesses_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newSuspendProcesses :: Text -> SuspendProcesses

-- | <i>See:</i> <a>newSuspendProcessesResponse</a> smart constructor.
data SuspendProcessesResponse
SuspendProcessesResponse' :: SuspendProcessesResponse

-- | Create a value of <a>SuspendProcessesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSuspendProcessesResponse :: SuspendProcessesResponse

-- | <i>See:</i> <a>newDescribeInstanceRefreshes</a> smart constructor.
data DescribeInstanceRefreshes
DescribeInstanceRefreshes' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Text -> DescribeInstanceRefreshes

-- | Create a value of <a>DescribeInstanceRefreshes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:instanceRefreshIds:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_instanceRefreshIds</a> - One or more
--   instance refresh IDs.
--   
--   <a>$sel:maxRecords:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshes_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newDescribeInstanceRefreshes :: Text -> DescribeInstanceRefreshes

-- | <i>See:</i> <a>newDescribeInstanceRefreshesResponse</a> smart
--   constructor.
data DescribeInstanceRefreshesResponse
DescribeInstanceRefreshesResponse' :: Maybe Text -> Maybe [InstanceRefresh] -> Int -> DescribeInstanceRefreshesResponse

-- | Create a value of <a>DescribeInstanceRefreshesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInstanceRefreshes'</a>,
--   <a>describeInstanceRefreshesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:instanceRefreshes:DescribeInstanceRefreshesResponse'</a>,
--   <a>describeInstanceRefreshesResponse_instanceRefreshes</a> - The
--   instance refreshes for the specified group.
--   
--   <a>$sel:httpStatus:DescribeInstanceRefreshesResponse'</a>,
--   <a>describeInstanceRefreshesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeInstanceRefreshesResponse :: Int -> DescribeInstanceRefreshesResponse

-- | <i>See:</i> <a>newEnterStandby</a> smart constructor.
data EnterStandby
EnterStandby' :: Maybe [Text] -> Text -> Bool -> EnterStandby

-- | Create a value of <a>EnterStandby</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:EnterStandby'</a>, <a>enterStandby_instanceIds</a>
--   - The IDs of the instances. You can specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:EnterStandby'</a>,
--   <a>enterStandby_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:shouldDecrementDesiredCapacity:EnterStandby'</a>,
--   <a>enterStandby_shouldDecrementDesiredCapacity</a> - Indicates whether
--   to decrement the desired capacity of the Auto Scaling group by the
--   number of instances moved to <tt>Standby</tt> mode.
newEnterStandby :: Text -> Bool -> EnterStandby

-- | <i>See:</i> <a>newEnterStandbyResponse</a> smart constructor.
data EnterStandbyResponse
EnterStandbyResponse' :: Maybe [Activity] -> Int -> EnterStandbyResponse

-- | Create a value of <a>EnterStandbyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:EnterStandbyResponse'</a>,
--   <a>enterStandbyResponse_activities</a> - The activities related to
--   moving instances into <tt>Standby</tt> mode.
--   
--   <a>$sel:httpStatus:EnterStandbyResponse'</a>,
--   <a>enterStandbyResponse_httpStatus</a> - The response's http status
--   code.
newEnterStandbyResponse :: Int -> EnterStandbyResponse

-- | <i>See:</i> <a>newDeleteLifecycleHook</a> smart constructor.
data DeleteLifecycleHook
DeleteLifecycleHook' :: Text -> Text -> DeleteLifecycleHook

-- | Create a value of <a>DeleteLifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookName:DeleteLifecycleHook'</a>,
--   <a>deleteLifecycleHook_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:DeleteLifecycleHook'</a>,
--   <a>deleteLifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDeleteLifecycleHook :: Text -> Text -> DeleteLifecycleHook

-- | <i>See:</i> <a>newDeleteLifecycleHookResponse</a> smart constructor.
data DeleteLifecycleHookResponse
DeleteLifecycleHookResponse' :: Int -> DeleteLifecycleHookResponse

-- | Create a value of <a>DeleteLifecycleHookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLifecycleHookResponse'</a>,
--   <a>deleteLifecycleHookResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLifecycleHookResponse :: Int -> DeleteLifecycleHookResponse

-- | <i>See:</i> <a>newAttachLoadBalancerTargetGroups</a> smart
--   constructor.
data AttachLoadBalancerTargetGroups
AttachLoadBalancerTargetGroups' :: Text -> [Text] -> AttachLoadBalancerTargetGroups

-- | Create a value of <a>AttachLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:AttachLoadBalancerTargetGroups'</a>,
--   <a>attachLoadBalancerTargetGroups_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:targetGroupARNs:AttachLoadBalancerTargetGroups'</a>,
--   <a>attachLoadBalancerTargetGroups_targetGroupARNs</a> - The Amazon
--   Resource Names (ARN) of the target groups. You can specify up to 10
--   target groups. To get the ARN of a target group, use the Elastic Load
--   Balancing <a>DescribeTargetGroups</a> API operation.
newAttachLoadBalancerTargetGroups :: Text -> AttachLoadBalancerTargetGroups

-- | <i>See:</i> <a>newAttachLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data AttachLoadBalancerTargetGroupsResponse
AttachLoadBalancerTargetGroupsResponse' :: Int -> AttachLoadBalancerTargetGroupsResponse

-- | Create a value of <a>AttachLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachLoadBalancerTargetGroupsResponse'</a>,
--   <a>attachLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newAttachLoadBalancerTargetGroupsResponse :: Int -> AttachLoadBalancerTargetGroupsResponse

-- | <i>See:</i> <a>newStartInstanceRefresh</a> smart constructor.
data StartInstanceRefresh
StartInstanceRefresh' :: Maybe RefreshStrategy -> Maybe DesiredConfiguration -> Maybe RefreshPreferences -> Text -> StartInstanceRefresh

-- | Create a value of <a>StartInstanceRefresh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:strategy:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_strategy</a> - The strategy to use for the
--   instance refresh. The only valid value is <tt>Rolling</tt>.
--   
--   A rolling update helps you update your instances gradually. A rolling
--   update can fail due to failed health checks or if instances are on
--   standby or are protected from scale in. If the rolling update process
--   fails, any instances that are replaced are not rolled back to their
--   previous configuration.
--   
--   <a>$sel:desiredConfiguration:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_desiredConfiguration</a> - The desired
--   configuration. For example, the desired configuration can specify a
--   new launch template or a new version of the current launch template.
--   
--   Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates
--   the settings of the Auto Scaling group to reflect the new desired
--   configuration.
--   
--   When you specify a new launch template or a new version of the current
--   launch template for your desired configuration, consider enabling the
--   <tt>SkipMatching</tt> property in preferences. If it's enabled, Amazon
--   EC2 Auto Scaling skips replacing instances that already use the
--   specified launch template and version. This can help you reduce the
--   number of replacements that are required to apply updates.
--   
--   <a>$sel:preferences:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_preferences</a> - Set of preferences
--   associated with the instance refresh request. If not provided, the
--   default values are used.
--   
--   <a>$sel:autoScalingGroupName:StartInstanceRefresh'</a>,
--   <a>startInstanceRefresh_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newStartInstanceRefresh :: Text -> StartInstanceRefresh

-- | <i>See:</i> <a>newStartInstanceRefreshResponse</a> smart constructor.
data StartInstanceRefreshResponse
StartInstanceRefreshResponse' :: Maybe Text -> Int -> StartInstanceRefreshResponse

-- | Create a value of <a>StartInstanceRefreshResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceRefreshId:StartInstanceRefreshResponse'</a>,
--   <a>startInstanceRefreshResponse_instanceRefreshId</a> - A unique ID
--   for tracking the progress of the request.
--   
--   <a>$sel:httpStatus:StartInstanceRefreshResponse'</a>,
--   <a>startInstanceRefreshResponse_httpStatus</a> - The response's http
--   status code.
newStartInstanceRefreshResponse :: Int -> StartInstanceRefreshResponse

-- | <i>See:</i> <a>newResumeProcesses</a> smart constructor.
data ResumeProcesses
ResumeProcesses' :: Maybe [Text] -> Text -> ResumeProcesses

-- | Create a value of <a>ResumeProcesses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:ResumeProcesses'</a>,
--   <a>resumeProcesses_scalingProcesses</a> - One or more of the following
--   processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:ResumeProcesses'</a>,
--   <a>resumeProcesses_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newResumeProcesses :: Text -> ResumeProcesses

-- | <i>See:</i> <a>newResumeProcessesResponse</a> smart constructor.
data ResumeProcessesResponse
ResumeProcessesResponse' :: ResumeProcessesResponse

-- | Create a value of <a>ResumeProcessesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newResumeProcessesResponse :: ResumeProcessesResponse

-- | <i>See:</i> <a>newPutNotificationConfiguration</a> smart constructor.
data PutNotificationConfiguration
PutNotificationConfiguration' :: Text -> Text -> [Text] -> PutNotificationConfiguration

-- | Create a value of <a>PutNotificationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:topicARN:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_topicARN</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
--   topic.
--   
--   <a>$sel:notificationTypes:PutNotificationConfiguration'</a>,
--   <a>putNotificationConfiguration_notificationTypes</a> - The type of
--   event that causes the notification to be sent. To query the
--   notification types supported by Amazon EC2 Auto Scaling, call the
--   DescribeAutoScalingNotificationTypes API.
newPutNotificationConfiguration :: Text -> Text -> PutNotificationConfiguration

-- | <i>See:</i> <a>newPutNotificationConfigurationResponse</a> smart
--   constructor.
data PutNotificationConfigurationResponse
PutNotificationConfigurationResponse' :: PutNotificationConfigurationResponse

-- | Create a value of <a>PutNotificationConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutNotificationConfigurationResponse :: PutNotificationConfigurationResponse

-- | <i>See:</i> <a>newDescribeTags</a> smart constructor.
data DescribeTags
DescribeTags' :: Maybe Text -> Maybe [Filter] -> Maybe Int -> DescribeTags

-- | Create a value of <a>DescribeTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>, <a>describeTags_nextToken</a> -
--   The token for the next set of items to return. (You received this
--   token from a previous call.)
--   
--   <a>$sel:filters:DescribeTags'</a>, <a>describeTags_filters</a> - One
--   or more filters to scope the tags to return. The maximum number of
--   filters per filter type (for example, <tt>auto-scaling-group</tt>) is
--   1000.
--   
--   <a>$sel:maxRecords:DescribeTags'</a>, <a>describeTags_maxRecords</a> -
--   The maximum number of items to return with this call. The default
--   value is <tt>50</tt> and the maximum value is <tt>100</tt>.
newDescribeTags :: DescribeTags

-- | <i>See:</i> <a>newDescribeTagsResponse</a> smart constructor.
data DescribeTagsResponse
DescribeTagsResponse' :: Maybe Text -> Maybe [TagDescription] -> Int -> DescribeTagsResponse

-- | Create a value of <a>DescribeTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeTags'</a>,
--   <a>describeTagsResponse_nextToken</a> - A string that indicates that
--   the response contains more items than can be returned in a single
--   response. To receive additional items, specify this string for the
--   <tt>NextToken</tt> value when requesting the next set of items. This
--   value is null when there are no more items to return.
--   
--   <a>$sel:tags:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_tags</a> - One or more tags.
--   
--   <a>$sel:httpStatus:DescribeTagsResponse'</a>,
--   <a>describeTagsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeTagsResponse :: Int -> DescribeTagsResponse

-- | <i>See:</i> <a>newDeleteWarmPool</a> smart constructor.
data DeleteWarmPool
DeleteWarmPool' :: Maybe Bool -> Text -> DeleteWarmPool

-- | Create a value of <a>DeleteWarmPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeleteWarmPool'</a>,
--   <a>deleteWarmPool_forceDelete</a> - Specifies that the warm pool is to
--   be deleted along with all of its associated instances, without waiting
--   for all instances to be terminated. This parameter also deletes any
--   outstanding lifecycle actions associated with the warm pool instances.
--   
--   <a>$sel:autoScalingGroupName:DeleteWarmPool'</a>,
--   <a>deleteWarmPool_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDeleteWarmPool :: Text -> DeleteWarmPool

-- | <i>See:</i> <a>newDeleteWarmPoolResponse</a> smart constructor.
data DeleteWarmPoolResponse
DeleteWarmPoolResponse' :: Int -> DeleteWarmPoolResponse

-- | Create a value of <a>DeleteWarmPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWarmPoolResponse'</a>,
--   <a>deleteWarmPoolResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWarmPoolResponse :: Int -> DeleteWarmPoolResponse

-- | <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe TargetTrackingConfiguration -> Maybe [StepAdjustment] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe PredictiveScalingConfiguration -> Text -> Text -> PutScalingPolicy

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetTrackingConfiguration</a> - A target
--   tracking scaling policy. Provides support for predefined or customized
--   metrics.
--   
--   The following predefined metrics are available:
--   
--   <ul>
--   <li><pre>ASGAverageCPUUtilization</pre></li>
--   <li><pre>ASGAverageNetworkIn</pre></li>
--   <li><pre>ASGAverageNetworkOut</pre></li>
--   <li><pre>ALBRequestCountPerTarget</pre></li>
--   </ul>
--   
--   If you specify <tt>ALBRequestCountPerTarget</tt> for the metric, you
--   must specify the <tt>ResourceLabel</tt> parameter with the
--   <tt>PredefinedMetricSpecification</tt>.
--   
--   For more information, see <a>TargetTrackingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>TargetTrackingScaling</tt>.
--   
--   <a>$sel:stepAdjustments:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_stepAdjustments</a> - A set of adjustments that
--   enable you to scale based on the size of the alarm breach.
--   
--   Required if the policy type is <tt>StepScaling</tt>. (Not used with
--   any other policy type.)
--   
--   <a>$sel:metricAggregationType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_metricAggregationType</a> - The aggregation type
--   for the CloudWatch metrics. The valid values are <tt>Minimum</tt>,
--   <tt>Maximum</tt>, and <tt>Average</tt>. If the aggregation type is
--   null, the value is treated as <tt>Average</tt>.
--   
--   Valid only if the policy type is <tt>StepScaling</tt>.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - One of the following policy
--   types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   <a>$sel:enabled:PutScalingPolicy'</a>, <a>putScalingPolicy_enabled</a>
--   - Indicates whether the scaling policy is enabled or disabled. The
--   default is enabled. For more information, see <a>Disabling a scaling
--   policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:cooldown:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_cooldown</a> - The duration of the policy's
--   cooldown period, in seconds. When a cooldown period is specified here,
--   it overrides the default cooldown period defined for the Auto Scaling
--   group.
--   
--   Valid only if the policy type is <tt>SimpleScaling</tt>. For more
--   information, see <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:scalingAdjustment:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity. For exact capacity, you must specify a positive
--   value.
--   
--   Required if the policy type is <tt>SimpleScaling</tt>. (Not used with
--   any other policy type.)
--   
--   <a>$sel:adjustmentType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_adjustmentType</a> - Specifies how the scaling
--   adjustment is interpreted (for example, an absolute number or a
--   percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   Required if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:minAdjustmentStep:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_minAdjustmentStep</a> - Available for backward
--   compatibility. Use <tt>MinAdjustmentMagnitude</tt> instead.
--   
--   <a>$sel:estimatedInstanceWarmup:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_estimatedInstanceWarmup</a> - The estimated time,
--   in seconds, until a newly launched instance can contribute to the
--   CloudWatch metrics. If not provided, the default is to use the value
--   from the default cooldown period for the Auto Scaling group.
--   
--   Valid only if the policy type is <tt>TargetTrackingScaling</tt> or
--   <tt>StepScaling</tt>.
--   
--   <a>$sel:minAdjustmentMagnitude:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_minAdjustmentMagnitude</a> - The minimum value to
--   scale by when the adjustment type is <tt>PercentChangeInCapacity</tt>.
--   For example, suppose that you create a step scaling policy to scale
--   out an Auto Scaling group by 25 percent and you specify a
--   <tt>MinAdjustmentMagnitude</tt> of 2. If the group has 4 instances and
--   the scaling policy is performed, 25 percent of 4 is 1. However,
--   because you specified a <tt>MinAdjustmentMagnitude</tt> of 2, Amazon
--   EC2 Auto Scaling scales out the group by 2 instances.
--   
--   Valid only if the policy type is <tt>StepScaling</tt> or
--   <tt>SimpleScaling</tt>. For more information, see <a>Scaling
--   adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Some Auto Scaling groups use instance weights. In this case, set the
--   <tt>MinAdjustmentMagnitude</tt> to a value that is at least as large
--   as your largest instance weight.
--   
--   <a>$sel:predictiveScalingConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_predictiveScalingConfiguration</a> - A predictive
--   scaling policy. Provides support for only predefined metrics.
--   
--   Predictive scaling works with CPU utilization, network in/out, and the
--   Application Load Balancer request count.
--   
--   For more information, see <a>PredictiveScalingConfiguration</a> in the
--   <i>Amazon EC2 Auto Scaling API Reference</i>.
--   
--   Required if the policy type is <tt>PredictiveScaling</tt>.
--   
--   <a>$sel:autoScalingGroupName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyName</a> - The name of the policy.
newPutScalingPolicy :: Text -> Text -> PutScalingPolicy

-- | Contains the output of PutScalingPolicy.
--   
--   <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe [Alarm] -> Maybe Text -> Int -> PutScalingPolicyResponse

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarms:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_alarms</a> - The CloudWatch alarms created
--   for the target tracking scaling policy.
--   
--   <a>$sel:policyARN:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_policyARN</a> - The Amazon Resource Name
--   (ARN) of the policy.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutScalingPolicyResponse :: Int -> PutScalingPolicyResponse

-- | <i>See:</i> <a>newCreateOrUpdateTags</a> smart constructor.
data CreateOrUpdateTags
CreateOrUpdateTags' :: [Tag] -> CreateOrUpdateTags

-- | Create a value of <a>CreateOrUpdateTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateOrUpdateTags'</a>, <a>createOrUpdateTags_tags</a> -
--   One or more tags.
newCreateOrUpdateTags :: CreateOrUpdateTags

-- | <i>See:</i> <a>newCreateOrUpdateTagsResponse</a> smart constructor.
data CreateOrUpdateTagsResponse
CreateOrUpdateTagsResponse' :: CreateOrUpdateTagsResponse

-- | Create a value of <a>CreateOrUpdateTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateOrUpdateTagsResponse :: CreateOrUpdateTagsResponse

-- | <i>See:</i> <a>newDeletePolicy</a> smart constructor.
data DeletePolicy
DeletePolicy' :: Maybe Text -> Text -> DeletePolicy

-- | Create a value of <a>DeletePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeletePolicy'</a>,
--   <a>deletePolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:policyName:DeletePolicy'</a>, <a>deletePolicy_policyName</a> -
--   The name or Amazon Resource Name (ARN) of the policy.
newDeletePolicy :: Text -> DeletePolicy

-- | <i>See:</i> <a>newDeletePolicyResponse</a> smart constructor.
data DeletePolicyResponse
DeletePolicyResponse' :: DeletePolicyResponse

-- | Create a value of <a>DeletePolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePolicyResponse :: DeletePolicyResponse

-- | <i>See:</i> <a>newCreateLaunchConfiguration</a> smart constructor.
data CreateLaunchConfiguration
CreateLaunchConfiguration' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [BlockDeviceMapping] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMonitoring -> Maybe InstanceMetadataOptions -> Text -> CreateLaunchConfiguration

-- | Create a value of <a>CreateLaunchConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceId</a> - The ID of the instance
--   to use to create the launch configuration. The new launch
--   configuration derives attributes from the instance, except for the
--   block device mapping.
--   
--   To create a launch configuration with a block device mapping or
--   override any other instance attributes, specify them as part of the
--   same request.
--   
--   For more information, see <a>Creating a launch configuration using an
--   EC2 instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify both
--   <tt>ImageId</tt> and <tt>InstanceType</tt>.
--   
--   <a>$sel:ebsOptimized:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_ebsOptimized</a> - Specifies whether the
--   launch configuration is optimized for EBS I/O (<tt>true</tt>) or not
--   (<tt>false</tt>). The optimization provides dedicated throughput to
--   Amazon EBS and an optimized configuration stack to provide optimal I/O
--   performance. This optimization is not available with all instance
--   types. Additional fees are incurred when you enable EBS optimization
--   for an instance type that is not EBS-optimized by default. For more
--   information, see <a>Amazon EBS-Optimized Instances</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:userData:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_userData</a> - The user data to make
--   available to the launched EC2 instances. For more information, see
--   <a>Instance metadata and user data</a> (Linux) and <a>Instance
--   metadata and user data</a> (Windows). If you are using a command line
--   tool, base64-encoding is performed for you, and you can load the text
--   from a file. Otherwise, you must provide base64-encoded text. User
--   data is limited to 16 KB.
--   
--   <a>$sel:instanceType:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceType</a> - Specifies the instance
--   type of the EC2 instance.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>InstanceType</tt>.
--   
--   <a>$sel:ramdiskId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_ramdiskId</a> - The ID of the RAM disk to
--   select.
--   
--   <a>$sel:classicLinkVPCSecurityGroups:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_classicLinkVPCSecurityGroups</a> - The
--   IDs of one or more security groups for the specified
--   ClassicLink-enabled VPC. For more information, see <a>ClassicLink</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and <a>Linking
--   EC2-Classic instances to a VPC</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   If you specify the <tt>ClassicLinkVPCId</tt> parameter, you must
--   specify this parameter.
--   
--   <a>$sel:spotPrice:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_spotPrice</a> - The maximum hourly price
--   to be paid for any Spot Instance launched to fulfill the request. Spot
--   Instances are launched when the price you specify exceeds the current
--   Spot price. For more information, see <a>Requesting Spot Instances</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   When you change your maximum price by creating a new launch
--   configuration, running instances will continue to run as long as the
--   maximum price for those running instances is higher than the current
--   Spot price.
--   
--   <a>$sel:associatePublicIpAddress:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_associatePublicIpAddress</a> - For Auto
--   Scaling groups that are running in a virtual private cloud (VPC),
--   specifies whether to assign a public IP address to the group's
--   instances. If you specify <tt>true</tt>, each instance in the Auto
--   Scaling group receives a unique public IP address. For more
--   information, see <a>Launching Auto Scaling instances in a VPC</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   If you specify this parameter, you must specify at least one subnet
--   for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   If the instance is launched into a default subnet, the default is to
--   assign a public IP address, unless you disabled the option to assign a
--   public IP address on the subnet. If the instance is launched into a
--   nondefault subnet, the default is not to assign a public IP address,
--   unless you enabled the option to assign a public IP address on the
--   subnet.
--   
--   <a>$sel:imageId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_imageId</a> - The ID of the Amazon
--   Machine Image (AMI) that was assigned during registration. For more
--   information, see <a>Finding an AMI</a> in the <i>Amazon EC2 User Guide
--   for Linux Instances</i>.
--   
--   If you do not specify <tt>InstanceId</tt>, you must specify
--   <tt>ImageId</tt>.
--   
--   <a>$sel:securityGroups:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_securityGroups</a> - A list that contains
--   the security groups to assign to the instances in the Auto Scaling
--   group.
--   
--   <ul>
--   <li><i>EC2-VPC</i> Specify the security group IDs. For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.</li>
--   <li><i>EC2-Classic</i> Specify either the security group names or the
--   security group IDs. For more information, see <a>Amazon EC2 Security
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.</li>
--   </ul>
--   
--   <a>$sel:iamInstanceProfile:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_iamInstanceProfile</a> - The name or the
--   Amazon Resource Name (ARN) of the instance profile associated with the
--   IAM role for the instance. The instance profile contains the IAM role.
--   
--   For more information, see <a>IAM role for applications that run on
--   Amazon EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:classicLinkVPCId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_classicLinkVPCId</a> - The ID of a
--   ClassicLink-enabled VPC to link your EC2-Classic instances to. For
--   more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   This parameter can only be used if you are launching EC2-Classic
--   instances.
--   
--   <a>$sel:blockDeviceMappings:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_blockDeviceMappings</a> - A block device
--   mapping, which specifies the block devices for the instance. You can
--   specify virtual devices and EBS volumes. For more information, see
--   <a>Block Device Mapping</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:kernelId:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_kernelId</a> - The ID of the kernel
--   associated with the AMI.
--   
--   <a>$sel:placementTenancy:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_placementTenancy</a> - The tenancy of the
--   instance. An instance with <tt>dedicated</tt> tenancy runs on
--   isolated, single-tenant hardware and can only be launched into a VPC.
--   
--   To launch dedicated instances into a shared tenancy VPC (a VPC with
--   the instance placement tenancy attribute set to <tt>default</tt>), you
--   must set the value of this parameter to <tt>dedicated</tt>.
--   
--   If you specify <tt>PlacementTenancy</tt>, you must specify at least
--   one subnet for <tt>VPCZoneIdentifier</tt> when you create your group.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>default</tt> | <tt>dedicated</tt>
--   
--   <a>$sel:keyName:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_keyName</a> - The name of the key pair.
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:instanceMonitoring:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_instanceMonitoring</a> - Controls whether
--   instances in this group are launched with detailed (<tt>true</tt>) or
--   basic (<tt>false</tt>) monitoring.
--   
--   The default value is <tt>true</tt> (enabled).
--   
--   When detailed monitoring is enabled, Amazon CloudWatch generates
--   metrics every minute and your account is charged a fee. When you
--   disable detailed monitoring, CloudWatch generates metrics every 5
--   minutes. For more information, see <a>Configure Monitoring for Auto
--   Scaling Instances</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:metadataOptions:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_metadataOptions</a> - The metadata
--   options for the instances. For more information, see <a>Configuring
--   the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:CreateLaunchConfiguration'</a>,
--   <a>createLaunchConfiguration_launchConfigurationName</a> - The name of
--   the launch configuration. This name must be unique per Region per
--   account.
newCreateLaunchConfiguration :: Text -> CreateLaunchConfiguration

-- | <i>See:</i> <a>newCreateLaunchConfigurationResponse</a> smart
--   constructor.
data CreateLaunchConfigurationResponse
CreateLaunchConfigurationResponse' :: CreateLaunchConfigurationResponse

-- | Create a value of <a>CreateLaunchConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLaunchConfigurationResponse :: CreateLaunchConfigurationResponse

-- | <i>See:</i> <a>newDescribeAutoScalingNotificationTypes</a> smart
--   constructor.
data DescribeAutoScalingNotificationTypes
DescribeAutoScalingNotificationTypes' :: DescribeAutoScalingNotificationTypes

-- | Create a value of <a>DescribeAutoScalingNotificationTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAutoScalingNotificationTypes :: DescribeAutoScalingNotificationTypes

-- | <i>See:</i> <a>newDescribeAutoScalingNotificationTypesResponse</a>
--   smart constructor.
data DescribeAutoScalingNotificationTypesResponse
DescribeAutoScalingNotificationTypesResponse' :: Maybe [Text] -> Int -> DescribeAutoScalingNotificationTypesResponse

-- | Create a value of <a>DescribeAutoScalingNotificationTypesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoScalingNotificationTypes:DescribeAutoScalingNotificationTypesResponse'</a>,
--   <a>describeAutoScalingNotificationTypesResponse_autoScalingNotificationTypes</a>
--   - The notification types.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingNotificationTypesResponse'</a>,
--   <a>describeAutoScalingNotificationTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAutoScalingNotificationTypesResponse :: Int -> DescribeAutoScalingNotificationTypesResponse

-- | <i>See:</i> <a>newDescribeScheduledActions</a> smart constructor.
data DescribeScheduledActions
DescribeScheduledActions' :: Maybe Text -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe [Text] -> Maybe Int -> Maybe Text -> DescribeScheduledActions

-- | Create a value of <a>DescribeScheduledActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_nextToken</a> - The token for the next set
--   of items to return. (You received this token from a previous call.)
--   
--   <a>$sel:startTime:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_startTime</a> - The earliest scheduled
--   start time to return. If scheduled action names are provided, this
--   parameter is ignored.
--   
--   <a>$sel:endTime:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_endTime</a> - The latest scheduled start
--   time to return. If scheduled action names are provided, this parameter
--   is ignored.
--   
--   <a>$sel:scheduledActionNames:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scheduledActionNames</a> - The names of
--   one or more scheduled actions. If you omit this parameter, all
--   scheduled actions are described. If you specify an unknown scheduled
--   action, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 actions.
--   
--   <a>$sel:maxRecords:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeScheduledActions :: DescribeScheduledActions

-- | <i>See:</i> <a>newDescribeScheduledActionsResponse</a> smart
--   constructor.
data DescribeScheduledActionsResponse
DescribeScheduledActionsResponse' :: Maybe Text -> Maybe [ScheduledUpdateGroupAction] -> Int -> DescribeScheduledActionsResponse

-- | Create a value of <a>DescribeScheduledActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActionsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   
--   <a>$sel:scheduledUpdateGroupActions:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_scheduledUpdateGroupActions</a> -
--   The scheduled actions.
--   
--   <a>$sel:httpStatus:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScheduledActionsResponse :: Int -> DescribeScheduledActionsResponse

-- | <i>See:</i> <a>newDescribeAdjustmentTypes</a> smart constructor.
data DescribeAdjustmentTypes
DescribeAdjustmentTypes' :: DescribeAdjustmentTypes

-- | Create a value of <a>DescribeAdjustmentTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAdjustmentTypes :: DescribeAdjustmentTypes

-- | <i>See:</i> <a>newDescribeAdjustmentTypesResponse</a> smart
--   constructor.
data DescribeAdjustmentTypesResponse
DescribeAdjustmentTypesResponse' :: Maybe [AdjustmentType] -> Int -> DescribeAdjustmentTypesResponse

-- | Create a value of <a>DescribeAdjustmentTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adjustmentTypes:DescribeAdjustmentTypesResponse'</a>,
--   <a>describeAdjustmentTypesResponse_adjustmentTypes</a> - The policy
--   adjustment types.
--   
--   <a>$sel:httpStatus:DescribeAdjustmentTypesResponse'</a>,
--   <a>describeAdjustmentTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAdjustmentTypesResponse :: Int -> DescribeAdjustmentTypesResponse

-- | <i>See:</i> <a>newDetachLoadBalancers</a> smart constructor.
data DetachLoadBalancers
DetachLoadBalancers' :: Text -> [Text] -> DetachLoadBalancers

-- | Create a value of <a>DetachLoadBalancers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DetachLoadBalancers'</a>,
--   <a>detachLoadBalancers_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:loadBalancerNames:DetachLoadBalancers'</a>,
--   <a>detachLoadBalancers_loadBalancerNames</a> - The names of the load
--   balancers. You can specify up to 10 load balancers.
newDetachLoadBalancers :: Text -> DetachLoadBalancers

-- | <i>See:</i> <a>newDetachLoadBalancersResponse</a> smart constructor.
data DetachLoadBalancersResponse
DetachLoadBalancersResponse' :: Int -> DetachLoadBalancersResponse

-- | Create a value of <a>DetachLoadBalancersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachLoadBalancersResponse'</a>,
--   <a>detachLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDetachLoadBalancersResponse :: Int -> DetachLoadBalancersResponse

-- | <i>See:</i> <a>newDeleteScheduledAction</a> smart constructor.
data DeleteScheduledAction
DeleteScheduledAction' :: Text -> Text -> DeleteScheduledAction

-- | Create a value of <a>DeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:scheduledActionName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scheduledActionName</a> - The name of the
--   action to delete.
newDeleteScheduledAction :: Text -> Text -> DeleteScheduledAction

-- | <i>See:</i> <a>newDeleteScheduledActionResponse</a> smart constructor.
data DeleteScheduledActionResponse
DeleteScheduledActionResponse' :: DeleteScheduledActionResponse

-- | Create a value of <a>DeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteScheduledActionResponse :: DeleteScheduledActionResponse

-- | <i>See:</i> <a>newDescribeScalingActivities</a> smart constructor.
data DescribeScalingActivities
DescribeScalingActivities' :: Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Int -> Maybe Text -> DescribeScalingActivities

-- | Create a value of <a>DescribeScalingActivities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:activityIds:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_activityIds</a> - The activity IDs of the
--   desired scaling activities. If you omit this parameter, all activities
--   for the past six weeks are described. If unknown activities are
--   requested, they are ignored with no error. If you specify an Auto
--   Scaling group, the results are limited to that group.
--   
--   Array Members: Maximum number of 50 IDs.
--   
--   <a>$sel:includeDeletedGroups:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_includeDeletedGroups</a> - Indicates
--   whether to include scaling activity from deleted Auto Scaling groups.
--   
--   <a>$sel:maxRecords:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>100</tt> and
--   the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newDescribeScalingActivities :: DescribeScalingActivities

-- | <i>See:</i> <a>newDescribeScalingActivitiesResponse</a> smart
--   constructor.
data DescribeScalingActivitiesResponse
DescribeScalingActivitiesResponse' :: Maybe Text -> Int -> [Activity] -> DescribeScalingActivitiesResponse

-- | Create a value of <a>DescribeScalingActivitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivitiesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:activities:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_activities</a> - The scaling
--   activities. Activities are sorted by start time. Activities still in
--   progress are described first.
newDescribeScalingActivitiesResponse :: Int -> DescribeScalingActivitiesResponse

-- | <i>See:</i> <a>newDescribeLifecycleHooks</a> smart constructor.
data DescribeLifecycleHooks
DescribeLifecycleHooks' :: Maybe [Text] -> Text -> DescribeLifecycleHooks

-- | Create a value of <a>DescribeLifecycleHooks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookNames:DescribeLifecycleHooks'</a>,
--   <a>describeLifecycleHooks_lifecycleHookNames</a> - The names of one or
--   more lifecycle hooks. If you omit this parameter, all lifecycle hooks
--   are described.
--   
--   <a>$sel:autoScalingGroupName:DescribeLifecycleHooks'</a>,
--   <a>describeLifecycleHooks_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeLifecycleHooks :: Text -> DescribeLifecycleHooks

-- | <i>See:</i> <a>newDescribeLifecycleHooksResponse</a> smart
--   constructor.
data DescribeLifecycleHooksResponse
DescribeLifecycleHooksResponse' :: Maybe [LifecycleHook] -> Int -> DescribeLifecycleHooksResponse

-- | Create a value of <a>DescribeLifecycleHooksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHooks:DescribeLifecycleHooksResponse'</a>,
--   <a>describeLifecycleHooksResponse_lifecycleHooks</a> - The lifecycle
--   hooks for the specified group.
--   
--   <a>$sel:httpStatus:DescribeLifecycleHooksResponse'</a>,
--   <a>describeLifecycleHooksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLifecycleHooksResponse :: Int -> DescribeLifecycleHooksResponse

-- | <i>See:</i> <a>newPutScheduledUpdateGroupAction</a> smart constructor.
data PutScheduledUpdateGroupAction
PutScheduledUpdateGroupAction' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe ISO8601 -> Text -> Text -> PutScheduledUpdateGroupAction

-- | Create a value of <a>PutScheduledUpdateGroupAction</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_minSize</a> - The minimum size of the
--   Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain. It can
--   scale beyond this capacity if you add more scaling conditions.
--   
--   <a>$sel:startTime:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_startTime</a> - The date and time for
--   this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only
--   and in quotes (for example, <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule your action in the past, Amazon EC2 Auto
--   Scaling returns an error message.
--   
--   <a>$sel:endTime:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_endTime</a> - The date and time for
--   the recurring schedule to end, in UTC.
--   
--   <a>$sel:recurrence:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_recurrence</a> - The recurring
--   schedule for this action. This format consists of five fields
--   separated by white spaces: [Minute] [Hour] [Day_of_Month]
--   [Month_of_Year] [Day_of_Week]. The value must be in quotes (for
--   example, <tt>"30 0 1 1,6,12 *"</tt>). For more information about this
--   format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
--   
--   <a>$sel:maxSize:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_maxSize</a> - The maximum size of the
--   Auto Scaling group.
--   
--   <a>$sel:timeZone:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_timeZone</a> - Specifies the time
--   zone for a cron expression. If a time zone is not provided, UTC is
--   used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
--   
--   <a>$sel:time:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_time</a> - This parameter is no
--   longer used.
--   
--   <a>$sel:autoScalingGroupName:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:scheduledActionName:PutScheduledUpdateGroupAction'</a>,
--   <a>putScheduledUpdateGroupAction_scheduledActionName</a> - The name of
--   this scaling action.
newPutScheduledUpdateGroupAction :: Text -> Text -> PutScheduledUpdateGroupAction

-- | <i>See:</i> <a>newPutScheduledUpdateGroupActionResponse</a> smart
--   constructor.
data PutScheduledUpdateGroupActionResponse
PutScheduledUpdateGroupActionResponse' :: PutScheduledUpdateGroupActionResponse

-- | Create a value of <a>PutScheduledUpdateGroupActionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutScheduledUpdateGroupActionResponse :: PutScheduledUpdateGroupActionResponse

-- | <i>See:</i> <a>newDeleteTags</a> smart constructor.
data DeleteTags
DeleteTags' :: [Tag] -> DeleteTags

-- | Create a value of <a>DeleteTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:DeleteTags'</a>, <a>deleteTags_tags</a> - One or more
--   tags.
newDeleteTags :: DeleteTags

-- | <i>See:</i> <a>newDeleteTagsResponse</a> smart constructor.
data DeleteTagsResponse
DeleteTagsResponse' :: DeleteTagsResponse

-- | Create a value of <a>DeleteTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTagsResponse :: DeleteTagsResponse

-- | <i>See:</i> <a>newDetachLoadBalancerTargetGroups</a> smart
--   constructor.
data DetachLoadBalancerTargetGroups
DetachLoadBalancerTargetGroups' :: Text -> [Text] -> DetachLoadBalancerTargetGroups

-- | Create a value of <a>DetachLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DetachLoadBalancerTargetGroups'</a>,
--   <a>detachLoadBalancerTargetGroups_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:targetGroupARNs:DetachLoadBalancerTargetGroups'</a>,
--   <a>detachLoadBalancerTargetGroups_targetGroupARNs</a> - The Amazon
--   Resource Names (ARN) of the target groups. You can specify up to 10
--   target groups.
newDetachLoadBalancerTargetGroups :: Text -> DetachLoadBalancerTargetGroups

-- | <i>See:</i> <a>newDetachLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data DetachLoadBalancerTargetGroupsResponse
DetachLoadBalancerTargetGroupsResponse' :: Int -> DetachLoadBalancerTargetGroupsResponse

-- | Create a value of <a>DetachLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DetachLoadBalancerTargetGroupsResponse'</a>,
--   <a>detachLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDetachLoadBalancerTargetGroupsResponse :: Int -> DetachLoadBalancerTargetGroupsResponse

-- | <i>See:</i> <a>newDescribeWarmPool</a> smart constructor.
data DescribeWarmPool
DescribeWarmPool' :: Maybe Text -> Maybe Int -> Text -> DescribeWarmPool

-- | Create a value of <a>DescribeWarmPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeWarmPool'</a>,
--   <a>describeWarmPool_nextToken</a> - The token for the next set of
--   instances to return. (You received this token from a previous call.)
--   
--   <a>$sel:maxRecords:DescribeWarmPool'</a>,
--   <a>describeWarmPool_maxRecords</a> - The maximum number of instances
--   to return with this call. The maximum value is <tt>50</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeWarmPool'</a>,
--   <a>describeWarmPool_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDescribeWarmPool :: Text -> DescribeWarmPool

-- | <i>See:</i> <a>newDescribeWarmPoolResponse</a> smart constructor.
data DescribeWarmPoolResponse
DescribeWarmPoolResponse' :: Maybe Text -> Maybe [Instance] -> Maybe WarmPoolConfiguration -> Int -> DescribeWarmPoolResponse

-- | Create a value of <a>DescribeWarmPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeWarmPool'</a>,
--   <a>describeWarmPoolResponse_nextToken</a> - The token for the next set
--   of items to return. (You received this token from a previous call.)
--   
--   <a>$sel:instances:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_instances</a> - The instances that are
--   currently in the warm pool.
--   
--   <a>$sel:warmPoolConfiguration:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_warmPoolConfiguration</a> - The warm pool
--   configuration details.
--   
--   <a>$sel:httpStatus:DescribeWarmPoolResponse'</a>,
--   <a>describeWarmPoolResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWarmPoolResponse :: Int -> DescribeWarmPoolResponse

-- | <i>See:</i> <a>newSetInstanceProtection</a> smart constructor.
data SetInstanceProtection
SetInstanceProtection' :: [Text] -> Text -> Bool -> SetInstanceProtection

-- | Create a value of <a>SetInstanceProtection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_instanceIds</a> - One or more instance IDs.
--   You can specify up to 50 instances.
--   
--   <a>$sel:autoScalingGroupName:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:protectedFromScaleIn:SetInstanceProtection'</a>,
--   <a>setInstanceProtection_protectedFromScaleIn</a> - Indicates whether
--   the instance is protected from termination by Amazon EC2 Auto Scaling
--   when scaling in.
newSetInstanceProtection :: Text -> Bool -> SetInstanceProtection

-- | <i>See:</i> <a>newSetInstanceProtectionResponse</a> smart constructor.
data SetInstanceProtectionResponse
SetInstanceProtectionResponse' :: Int -> SetInstanceProtectionResponse

-- | Create a value of <a>SetInstanceProtectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetInstanceProtectionResponse'</a>,
--   <a>setInstanceProtectionResponse_httpStatus</a> - The response's http
--   status code.
newSetInstanceProtectionResponse :: Int -> SetInstanceProtectionResponse

-- | <i>See:</i> <a>newDetachInstances</a> smart constructor.
data DetachInstances
DetachInstances' :: Maybe [Text] -> Text -> Bool -> DetachInstances

-- | Create a value of <a>DetachInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DetachInstances'</a>,
--   <a>detachInstances_instanceIds</a> - The IDs of the instances. You can
--   specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:DetachInstances'</a>,
--   <a>detachInstances_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:shouldDecrementDesiredCapacity:DetachInstances'</a>,
--   <a>detachInstances_shouldDecrementDesiredCapacity</a> - Indicates
--   whether the Auto Scaling group decrements the desired capacity value
--   by the number of instances detached.
newDetachInstances :: Text -> Bool -> DetachInstances

-- | <i>See:</i> <a>newDetachInstancesResponse</a> smart constructor.
data DetachInstancesResponse
DetachInstancesResponse' :: Maybe [Activity] -> Int -> DetachInstancesResponse

-- | Create a value of <a>DetachInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:DetachInstancesResponse'</a>,
--   <a>detachInstancesResponse_activities</a> - The activities related to
--   detaching the instances from the Auto Scaling group.
--   
--   <a>$sel:httpStatus:DetachInstancesResponse'</a>,
--   <a>detachInstancesResponse_httpStatus</a> - The response's http status
--   code.
newDetachInstancesResponse :: Int -> DetachInstancesResponse

-- | <i>See:</i> <a>newTerminateInstanceInAutoScalingGroup</a> smart
--   constructor.
data TerminateInstanceInAutoScalingGroup
TerminateInstanceInAutoScalingGroup' :: Text -> Bool -> TerminateInstanceInAutoScalingGroup

-- | Create a value of <a>TerminateInstanceInAutoScalingGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:TerminateInstanceInAutoScalingGroup'</a>,
--   <a>terminateInstanceInAutoScalingGroup_instanceId</a> - The ID of the
--   instance.
--   
--   
--   <a>$sel:shouldDecrementDesiredCapacity:TerminateInstanceInAutoScalingGroup'</a>,
--   <a>terminateInstanceInAutoScalingGroup_shouldDecrementDesiredCapacity</a>
--   - Indicates whether terminating the instance also decrements the size
--   of the Auto Scaling group.
newTerminateInstanceInAutoScalingGroup :: Text -> Bool -> TerminateInstanceInAutoScalingGroup

-- | <i>See:</i> <a>newTerminateInstanceInAutoScalingGroupResponse</a>
--   smart constructor.
data TerminateInstanceInAutoScalingGroupResponse
TerminateInstanceInAutoScalingGroupResponse' :: Maybe Activity -> Int -> TerminateInstanceInAutoScalingGroupResponse

-- | Create a value of <a>TerminateInstanceInAutoScalingGroupResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activity:TerminateInstanceInAutoScalingGroupResponse'</a>,
--   <a>terminateInstanceInAutoScalingGroupResponse_activity</a> - A
--   scaling activity.
--   
--   <a>$sel:httpStatus:TerminateInstanceInAutoScalingGroupResponse'</a>,
--   <a>terminateInstanceInAutoScalingGroupResponse_httpStatus</a> - The
--   response's http status code.
newTerminateInstanceInAutoScalingGroupResponse :: Int -> TerminateInstanceInAutoScalingGroupResponse

-- | <i>See:</i> <a>newAttachLoadBalancers</a> smart constructor.
data AttachLoadBalancers
AttachLoadBalancers' :: Text -> [Text] -> AttachLoadBalancers

-- | Create a value of <a>AttachLoadBalancers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:AttachLoadBalancers'</a>,
--   <a>attachLoadBalancers_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:loadBalancerNames:AttachLoadBalancers'</a>,
--   <a>attachLoadBalancers_loadBalancerNames</a> - The names of the load
--   balancers. You can specify up to 10 load balancers.
newAttachLoadBalancers :: Text -> AttachLoadBalancers

-- | <i>See:</i> <a>newAttachLoadBalancersResponse</a> smart constructor.
data AttachLoadBalancersResponse
AttachLoadBalancersResponse' :: Int -> AttachLoadBalancersResponse

-- | Create a value of <a>AttachLoadBalancersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AttachLoadBalancersResponse'</a>,
--   <a>attachLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newAttachLoadBalancersResponse :: Int -> AttachLoadBalancersResponse

-- | <i>See:</i> <a>newDescribeAccountLimits</a> smart constructor.
data DescribeAccountLimits
DescribeAccountLimits' :: DescribeAccountLimits

-- | Create a value of <a>DescribeAccountLimits</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAccountLimits :: DescribeAccountLimits

-- | <i>See:</i> <a>newDescribeAccountLimitsResponse</a> smart constructor.
data DescribeAccountLimitsResponse
DescribeAccountLimitsResponse' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Int -> DescribeAccountLimitsResponse

-- | Create a value of <a>DescribeAccountLimitsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfAutoScalingGroups:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_numberOfAutoScalingGroups</a> - The
--   current number of groups for your account.
--   
--   
--   <a>$sel:maxNumberOfLaunchConfigurations:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_maxNumberOfLaunchConfigurations</a> -
--   The maximum number of launch configurations allowed for your account.
--   The default is 200 launch configurations per Region.
--   
--   
--   <a>$sel:numberOfLaunchConfigurations:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_numberOfLaunchConfigurations</a> -
--   The current number of launch configurations for your account.
--   
--   
--   <a>$sel:maxNumberOfAutoScalingGroups:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_maxNumberOfAutoScalingGroups</a> -
--   The maximum number of groups allowed for your account. The default is
--   200 groups per Region.
--   
--   <a>$sel:httpStatus:DescribeAccountLimitsResponse'</a>,
--   <a>describeAccountLimitsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAccountLimitsResponse :: Int -> DescribeAccountLimitsResponse

-- | <i>See:</i> <a>newDescribeTerminationPolicyTypes</a> smart
--   constructor.
data DescribeTerminationPolicyTypes
DescribeTerminationPolicyTypes' :: DescribeTerminationPolicyTypes

-- | Create a value of <a>DescribeTerminationPolicyTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeTerminationPolicyTypes :: DescribeTerminationPolicyTypes

-- | <i>See:</i> <a>newDescribeTerminationPolicyTypesResponse</a> smart
--   constructor.
data DescribeTerminationPolicyTypesResponse
DescribeTerminationPolicyTypesResponse' :: Maybe [Text] -> Int -> DescribeTerminationPolicyTypesResponse

-- | Create a value of <a>DescribeTerminationPolicyTypesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:terminationPolicyTypes:DescribeTerminationPolicyTypesResponse'</a>,
--   <a>describeTerminationPolicyTypesResponse_terminationPolicyTypes</a> -
--   The termination policies supported by Amazon EC2 Auto Scaling:
--   <tt>OldestInstance</tt>, <tt>OldestLaunchConfiguration</tt>,
--   <tt>NewestInstance</tt>, <tt>ClosestToNextInstanceHour</tt>,
--   <tt>Default</tt>, <tt>OldestLaunchTemplate</tt>, and
--   <tt>AllocationStrategy</tt>.
--   
--   <a>$sel:httpStatus:DescribeTerminationPolicyTypesResponse'</a>,
--   <a>describeTerminationPolicyTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeTerminationPolicyTypesResponse :: Int -> DescribeTerminationPolicyTypesResponse

-- | <i>See:</i> <a>newSetInstanceHealth</a> smart constructor.
data SetInstanceHealth
SetInstanceHealth' :: Maybe Bool -> Text -> Text -> SetInstanceHealth

-- | Create a value of <a>SetInstanceHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:shouldRespectGracePeriod:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_shouldRespectGracePeriod</a> - If the Auto
--   Scaling group of the specified instance has a
--   <tt>HealthCheckGracePeriod</tt> specified for the group, by default,
--   this call respects the grace period. Set this to <tt>False</tt>, to
--   have the call not respect the grace period associated with the group.
--   
--   For more information about the health check grace period, see
--   <a>CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API
--   Reference</i>.
--   
--   <a>$sel:instanceId:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:healthStatus:SetInstanceHealth'</a>,
--   <a>setInstanceHealth_healthStatus</a> - The health status of the
--   instance. Set to <tt>Healthy</tt> to have the instance remain in
--   service. Set to <tt>Unhealthy</tt> to have the instance be out of
--   service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy
--   instance.
newSetInstanceHealth :: Text -> Text -> SetInstanceHealth

-- | <i>See:</i> <a>newSetInstanceHealthResponse</a> smart constructor.
data SetInstanceHealthResponse
SetInstanceHealthResponse' :: SetInstanceHealthResponse

-- | Create a value of <a>SetInstanceHealthResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetInstanceHealthResponse :: SetInstanceHealthResponse

-- | <i>See:</i> <a>newExitStandby</a> smart constructor.
data ExitStandby
ExitStandby' :: Maybe [Text] -> Text -> ExitStandby

-- | Create a value of <a>ExitStandby</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:ExitStandby'</a>, <a>exitStandby_instanceIds</a> -
--   The IDs of the instances. You can specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:ExitStandby'</a>,
--   <a>exitStandby_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
newExitStandby :: Text -> ExitStandby

-- | <i>See:</i> <a>newExitStandbyResponse</a> smart constructor.
data ExitStandbyResponse
ExitStandbyResponse' :: Maybe [Activity] -> Int -> ExitStandbyResponse

-- | Create a value of <a>ExitStandbyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activities:ExitStandbyResponse'</a>,
--   <a>exitStandbyResponse_activities</a> - The activities related to
--   moving instances out of <tt>Standby</tt> mode.
--   
--   <a>$sel:httpStatus:ExitStandbyResponse'</a>,
--   <a>exitStandbyResponse_httpStatus</a> - The response's http status
--   code.
newExitStandbyResponse :: Int -> ExitStandbyResponse

-- | <i>See:</i> <a>newGetPredictiveScalingForecast</a> smart constructor.
data GetPredictiveScalingForecast
GetPredictiveScalingForecast' :: Text -> Text -> ISO8601 -> ISO8601 -> GetPredictiveScalingForecast

-- | Create a value of <a>GetPredictiveScalingForecast</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:policyName:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_policyName</a> - The name of the
--   policy.
--   
--   <a>$sel:startTime:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_startTime</a> - The inclusive start
--   time of the time range for the forecast data to get. At most, the date
--   and time can be one year before the current date and time.
--   
--   <a>$sel:endTime:GetPredictiveScalingForecast'</a>,
--   <a>getPredictiveScalingForecast_endTime</a> - The exclusive end time
--   of the time range for the forecast data to get. The maximum time
--   duration between the start and end time is 30 days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   Amazon EC2 Auto Scaling only issues forecasts for periods of two days
--   in advance.
newGetPredictiveScalingForecast :: Text -> Text -> UTCTime -> UTCTime -> GetPredictiveScalingForecast

-- | <i>See:</i> <a>newGetPredictiveScalingForecastResponse</a> smart
--   constructor.
data GetPredictiveScalingForecastResponse
GetPredictiveScalingForecastResponse' :: Int -> [LoadForecast] -> CapacityForecast -> ISO8601 -> GetPredictiveScalingForecastResponse

-- | Create a value of <a>GetPredictiveScalingForecastResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:loadForecast:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_loadForecast</a> - The load
--   forecast.
--   
--   <a>$sel:capacityForecast:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_capacityForecast</a> - The
--   capacity forecast.
--   
--   <a>$sel:updateTime:GetPredictiveScalingForecastResponse'</a>,
--   <a>getPredictiveScalingForecastResponse_updateTime</a> - The time the
--   forecast was made.
newGetPredictiveScalingForecastResponse :: Int -> CapacityForecast -> UTCTime -> GetPredictiveScalingForecastResponse

-- | <i>See:</i> <a>newPutWarmPool</a> smart constructor.
data PutWarmPool
PutWarmPool' :: Maybe Natural -> Maybe WarmPoolState -> Maybe Int -> Text -> PutWarmPool

-- | Create a value of <a>PutWarmPool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:PutWarmPool'</a>, <a>putWarmPool_minSize</a> -
--   Specifies the minimum number of instances to maintain in the warm
--   pool. This helps you to ensure that there is always a certain number
--   of warmed instances available to handle traffic spikes. Defaults to 0
--   if not specified.
--   
--   <a>$sel:poolState:PutWarmPool'</a>, <a>putWarmPool_poolState</a> -
--   Sets the instance state to transition to after the lifecycle actions
--   are complete. Default is <tt>Stopped</tt>.
--   
--   <a>$sel:maxGroupPreparedCapacity:PutWarmPool'</a>,
--   <a>putWarmPool_maxGroupPreparedCapacity</a> - Specifies the maximum
--   number of instances that are allowed to be in the warm pool or in any
--   state except <tt>Terminated</tt> for the Auto Scaling group. This is
--   an optional property. Specify it only if you do not want the warm pool
--   size to be determined by the difference between the group's maximum
--   capacity and its desired capacity.
--   
--   If a value for <tt>MaxGroupPreparedCapacity</tt> is not specified,
--   Amazon EC2 Auto Scaling launches and maintains the difference between
--   the group's maximum capacity and its desired capacity. If you specify
--   a value for <tt>MaxGroupPreparedCapacity</tt>, Amazon EC2 Auto Scaling
--   uses the difference between the <tt>MaxGroupPreparedCapacity</tt> and
--   the desired capacity instead.
--   
--   The size of the warm pool is dynamic. Only when
--   <tt>MaxGroupPreparedCapacity</tt> and <tt>MinSize</tt> are set to the
--   same value does the warm pool have an absolute size.
--   
--   If the desired capacity of the Auto Scaling group is higher than the
--   <tt>MaxGroupPreparedCapacity</tt>, the capacity of the warm pool is 0,
--   unless you specify a value for <tt>MinSize</tt>. To remove a value
--   that you previously set, include the property but specify -1 for the
--   value.
--   
--   <a>$sel:autoScalingGroupName:PutWarmPool'</a>,
--   <a>putWarmPool_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
newPutWarmPool :: Text -> PutWarmPool

-- | <i>See:</i> <a>newPutWarmPoolResponse</a> smart constructor.
data PutWarmPoolResponse
PutWarmPoolResponse' :: Int -> PutWarmPoolResponse

-- | Create a value of <a>PutWarmPoolResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutWarmPoolResponse'</a>,
--   <a>putWarmPoolResponse_httpStatus</a> - The response's http status
--   code.
newPutWarmPoolResponse :: Int -> PutWarmPoolResponse

-- | <i>See:</i> <a>newDeleteNotificationConfiguration</a> smart
--   constructor.
data DeleteNotificationConfiguration
DeleteNotificationConfiguration' :: Text -> Text -> DeleteNotificationConfiguration

-- | Create a value of <a>DeleteNotificationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:DeleteNotificationConfiguration'</a>,
--   <a>deleteNotificationConfiguration_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
--   
--   <a>$sel:topicARN:DeleteNotificationConfiguration'</a>,
--   <a>deleteNotificationConfiguration_topicARN</a> - The Amazon Resource
--   Name (ARN) of the Amazon Simple Notification Service (Amazon SNS)
--   topic.
newDeleteNotificationConfiguration :: Text -> Text -> DeleteNotificationConfiguration

-- | <i>See:</i> <a>newDeleteNotificationConfigurationResponse</a> smart
--   constructor.
data DeleteNotificationConfigurationResponse
DeleteNotificationConfigurationResponse' :: DeleteNotificationConfigurationResponse

-- | Create a value of <a>DeleteNotificationConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteNotificationConfigurationResponse :: DeleteNotificationConfigurationResponse

-- | <i>See:</i> <a>newPutLifecycleHook</a> smart constructor.
data PutLifecycleHook
PutLifecycleHook' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> Text -> PutLifecycleHook

-- | Create a value of <a>PutLifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:PutLifecycleHook'</a>, <a>putLifecycleHook_roleARN</a>
--   - The ARN of the IAM role that allows the Auto Scaling group to
--   publish to the specified notification target, for example, an Amazon
--   SNS topic or an Amazon SQS queue.
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
--   
--   <a>$sel:lifecycleTransition:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_lifecycleTransition</a> - The instance state to
--   which you want to attach the lifecycle hook. The valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   Required for new lifecycle hooks, but optional when updating existing
--   hooks.
--   
--   <a>$sel:notificationTargetARN:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_notificationTargetARN</a> - The ARN of the
--   notification target that Amazon EC2 Auto Scaling uses to notify you
--   when an instance is in the transition state for the lifecycle hook.
--   This target can be either an SQS queue or an SNS topic.
--   
--   If you specify an empty string, this overrides the current ARN.
--   
--   This operation uses the JSON format when sending notifications to an
--   Amazon SQS queue, and an email key-value pair format when sending
--   notifications to an Amazon SNS topic.
--   
--   When you specify a notification target, Amazon EC2 Auto Scaling sends
--   it a test message. Test messages contain the following additional
--   key-value pair: <tt>"Event": "autoscaling:TEST_NOTIFICATION"</tt>.
--   
--   <a>$sel:heartbeatTimeout:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_heartbeatTimeout</a> - The maximum time, in
--   seconds, that can elapse before the lifecycle hook times out. The
--   range is from <tt>30</tt> to <tt>7200</tt> seconds. The default value
--   is <tt>3600</tt> seconds (1 hour).
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling the
--   RecordLifecycleActionHeartbeat API.
--   
--   <a>$sel:notificationMetadata:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_notificationMetadata</a> - Additional information
--   that you want to include any time Amazon EC2 Auto Scaling sends a
--   message to the notification target.
--   
--   <a>$sel:defaultResult:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_defaultResult</a> - Defines the action the Auto
--   Scaling group should take when the lifecycle hook timeout elapses or
--   if an unexpected failure occurs. This parameter can be either
--   <tt>CONTINUE</tt> or <tt>ABANDON</tt>. The default value is
--   <tt>ABANDON</tt>.
--   
--   <a>$sel:lifecycleHookName:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_lifecycleHookName</a> - The name of the lifecycle
--   hook.
--   
--   <a>$sel:autoScalingGroupName:PutLifecycleHook'</a>,
--   <a>putLifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newPutLifecycleHook :: Text -> Text -> PutLifecycleHook

-- | <i>See:</i> <a>newPutLifecycleHookResponse</a> smart constructor.
data PutLifecycleHookResponse
PutLifecycleHookResponse' :: Int -> PutLifecycleHookResponse

-- | Create a value of <a>PutLifecycleHookResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLifecycleHookResponse'</a>,
--   <a>putLifecycleHookResponse_httpStatus</a> - The response's http
--   status code.
newPutLifecycleHookResponse :: Int -> PutLifecycleHookResponse

-- | <i>See:</i> <a>newBatchPutScheduledUpdateGroupAction</a> smart
--   constructor.
data BatchPutScheduledUpdateGroupAction
BatchPutScheduledUpdateGroupAction' :: Text -> [ScheduledUpdateGroupActionRequest] -> BatchPutScheduledUpdateGroupAction

-- | Create a value of <a>BatchPutScheduledUpdateGroupAction</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:BatchPutScheduledUpdateGroupAction'</a>,
--   <a>batchPutScheduledUpdateGroupAction_autoScalingGroupName</a> - The
--   name of the Auto Scaling group.
--   
--   
--   <a>$sel:scheduledUpdateGroupActions:BatchPutScheduledUpdateGroupAction'</a>,
--   <a>batchPutScheduledUpdateGroupAction_scheduledUpdateGroupActions</a>
--   - One or more scheduled actions. The maximum number allowed is 50.
newBatchPutScheduledUpdateGroupAction :: Text -> BatchPutScheduledUpdateGroupAction

-- | <i>See:</i> <a>newBatchPutScheduledUpdateGroupActionResponse</a> smart
--   constructor.
data BatchPutScheduledUpdateGroupActionResponse
BatchPutScheduledUpdateGroupActionResponse' :: Maybe [FailedScheduledUpdateGroupActionRequest] -> Int -> BatchPutScheduledUpdateGroupActionResponse

-- | Create a value of <a>BatchPutScheduledUpdateGroupActionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:failedScheduledUpdateGroupActions:BatchPutScheduledUpdateGroupActionResponse'</a>,
--   <a>batchPutScheduledUpdateGroupActionResponse_failedScheduledUpdateGroupActions</a>
--   - The names of the scheduled actions that could not be created or
--   updated, including an error message.
--   
--   <a>$sel:httpStatus:BatchPutScheduledUpdateGroupActionResponse'</a>,
--   <a>batchPutScheduledUpdateGroupActionResponse_httpStatus</a> - The
--   response's http status code.
newBatchPutScheduledUpdateGroupActionResponse :: Int -> BatchPutScheduledUpdateGroupActionResponse

-- | <i>See:</i> <a>newDescribeMetricCollectionTypes</a> smart constructor.
data DescribeMetricCollectionTypes
DescribeMetricCollectionTypes' :: DescribeMetricCollectionTypes

-- | Create a value of <a>DescribeMetricCollectionTypes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeMetricCollectionTypes :: DescribeMetricCollectionTypes

-- | <i>See:</i> <a>newDescribeMetricCollectionTypesResponse</a> smart
--   constructor.
data DescribeMetricCollectionTypesResponse
DescribeMetricCollectionTypesResponse' :: Maybe [MetricCollectionType] -> Maybe [MetricGranularityType] -> Int -> DescribeMetricCollectionTypesResponse

-- | Create a value of <a>DescribeMetricCollectionTypesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_metrics</a> - One or more
--   metrics.
--   
--   <a>$sel:granularities:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_granularities</a> - The
--   granularities for the metrics.
--   
--   <a>$sel:httpStatus:DescribeMetricCollectionTypesResponse'</a>,
--   <a>describeMetricCollectionTypesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeMetricCollectionTypesResponse :: Int -> DescribeMetricCollectionTypesResponse

-- | <i>See:</i> <a>newDeleteLaunchConfiguration</a> smart constructor.
data DeleteLaunchConfiguration
DeleteLaunchConfiguration' :: Text -> DeleteLaunchConfiguration

-- | Create a value of <a>DeleteLaunchConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchConfigurationName:DeleteLaunchConfiguration'</a>,
--   <a>deleteLaunchConfiguration_launchConfigurationName</a> - The name of
--   the launch configuration.
newDeleteLaunchConfiguration :: Text -> DeleteLaunchConfiguration

-- | <i>See:</i> <a>newDeleteLaunchConfigurationResponse</a> smart
--   constructor.
data DeleteLaunchConfigurationResponse
DeleteLaunchConfigurationResponse' :: DeleteLaunchConfigurationResponse

-- | Create a value of <a>DeleteLaunchConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLaunchConfigurationResponse :: DeleteLaunchConfigurationResponse

-- | <i>See:</i> <a>newUpdateAutoScalingGroup</a> smart constructor.
data UpdateAutoScalingGroup
UpdateAutoScalingGroup' :: Maybe Int -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [Text] -> Text -> UpdateAutoScalingGroup

-- | Create a value of <a>UpdateAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_minSize</a> - The minimum size of the Auto
--   Scaling group.
--   
--   <a>$sel:availabilityZones:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_availabilityZones</a> - One or more
--   Availability Zones for the group.
--   
--   <a>$sel:desiredCapacity:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_desiredCapacity</a> - The desired capacity
--   is the initial capacity of the Auto Scaling group after this operation
--   completes and the capacity it attempts to maintain. This number must
--   be greater than or equal to the minimum size of the group and less
--   than or equal to the maximum size of the group.
--   
--   <a>$sel:defaultCooldown:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_defaultCooldown</a> - The amount of time, in
--   seconds, after a scaling activity completes before another scaling
--   activity can start. The default value is <tt>300</tt>. This setting
--   applies when using simple scaling policies, but not when using other
--   scaling policies or scheduled scaling. For more information, see
--   <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxInstanceLifetime:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_maxInstanceLifetime</a> - The maximum amount
--   of time, in seconds, that an instance can be in service. The default
--   is null. If specified, the value must be either 0 or a number equal to
--   or greater than 86,400 seconds (1 day). To clear a previously set
--   value, specify a new value of 0. For more information, see
--   <a>Replacing Auto Scaling instances based on maximum instance
--   lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:placementGroup:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_placementGroup</a> - The name of an existing
--   placement group into which to launch your instances, if any. A
--   placement group is a logical grouping of instances within a single
--   Availability Zone. You cannot specify multiple Availability Zones and
--   a placement group. For more information, see <a>Placement Groups</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:launchTemplate:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_launchTemplate</a> - The launch template and
--   version to use to specify the updates. If you specify
--   <tt>LaunchTemplate</tt> in your update request, you can't specify
--   <tt>LaunchConfigurationName</tt> or <tt>MixedInstancesPolicy</tt>.
--   
--   <a>$sel:launchConfigurationName:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_launchConfigurationName</a> - The name of
--   the launch configuration. If you specify
--   <tt>LaunchConfigurationName</tt> in your update request, you can't
--   specify <tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>.
--   
--   <a>$sel:healthCheckType:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_healthCheckType</a> - The service to use for
--   the health checks. The valid values are <tt>EC2</tt> and <tt>ELB</tt>.
--   If you configure an Auto Scaling group to use <tt>ELB</tt> health
--   checks, it considers the instance unhealthy if it fails either the EC2
--   status checks or the load balancer health checks.
--   
--   <a>$sel:context:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_context</a> - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_mixedInstancesPolicy</a> - An embedded
--   object that specifies a mixed instances policy. When you make changes
--   to an existing policy, all optional properties are left unchanged if
--   not specified. For more information, see <a>Auto Scaling groups with
--   multiple instance types and purchase options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxSize:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_maxSize</a> - The maximum size of the Auto
--   Scaling group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
--   
--   <a>$sel:vPCZoneIdentifier:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_vPCZoneIdentifier</a> - A comma-separated
--   list of subnet IDs for a virtual private cloud (VPC). If you specify
--   <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>, the
--   subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   <a>$sel:capacityRebalance:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_capacityRebalance</a> - Enables or disables
--   Capacity Rebalancing. For more information, see <a>Amazon EC2 Auto
--   Scaling Capacity Rebalancing</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:serviceLinkedRoleARN:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_serviceLinkedRoleARN</a> - The Amazon
--   Resource Name (ARN) of the service-linked role that the Auto Scaling
--   group uses to call other Amazon Web Services on your behalf. For more
--   information, see <a>Service-linked roles</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:healthCheckGracePeriod:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_healthCheckGracePeriod</a> - The amount of
--   time, in seconds, that Amazon EC2 Auto Scaling waits before checking
--   the health status of an EC2 instance that has come into service. The
--   default value is <tt>0</tt>. For more information, see <a>Health check
--   grace period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_newInstancesProtectedFromScaleIn</a> -
--   Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:terminationPolicies:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_terminationPolicies</a> - A policy or a list
--   of policies that are used to select the instances to terminate. The
--   policies are executed in the order that you list them. For more
--   information, see <a>Controlling which Auto Scaling instances terminate
--   during scale in</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:UpdateAutoScalingGroup'</a>,
--   <a>updateAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newUpdateAutoScalingGroup :: Text -> UpdateAutoScalingGroup

-- | <i>See:</i> <a>newUpdateAutoScalingGroupResponse</a> smart
--   constructor.
data UpdateAutoScalingGroupResponse
UpdateAutoScalingGroupResponse' :: UpdateAutoScalingGroupResponse

-- | Create a value of <a>UpdateAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateAutoScalingGroupResponse :: UpdateAutoScalingGroupResponse

-- | <i>See:</i> <a>newDeleteAutoScalingGroup</a> smart constructor.
data DeleteAutoScalingGroup
DeleteAutoScalingGroup' :: Maybe Bool -> Text -> DeleteAutoScalingGroup

-- | Create a value of <a>DeleteAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceDelete:DeleteAutoScalingGroup'</a>,
--   <a>deleteAutoScalingGroup_forceDelete</a> - Specifies that the group
--   is to be deleted along with all instances associated with the group,
--   without waiting for all instances to be terminated. This parameter
--   also deletes any outstanding lifecycle actions associated with the
--   group.
--   
--   <a>$sel:autoScalingGroupName:DeleteAutoScalingGroup'</a>,
--   <a>deleteAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDeleteAutoScalingGroup :: Text -> DeleteAutoScalingGroup

-- | <i>See:</i> <a>newDeleteAutoScalingGroupResponse</a> smart
--   constructor.
data DeleteAutoScalingGroupResponse
DeleteAutoScalingGroupResponse' :: DeleteAutoScalingGroupResponse

-- | Create a value of <a>DeleteAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAutoScalingGroupResponse :: DeleteAutoScalingGroupResponse

-- | <i>See:</i> <a>newDescribeLoadBalancers</a> smart constructor.
data DescribeLoadBalancers
DescribeLoadBalancers' :: Maybe Text -> Maybe Int -> Text -> DescribeLoadBalancers

-- | Create a value of <a>DescribeLoadBalancers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:maxRecords:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_maxRecords</a> - The maximum number of items
--   to return with this call. The default value is <tt>100</tt> and the
--   maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancers_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDescribeLoadBalancers :: Text -> DescribeLoadBalancers

-- | <i>See:</i> <a>newDescribeLoadBalancersResponse</a> smart constructor.
data DescribeLoadBalancersResponse
DescribeLoadBalancersResponse' :: Maybe Text -> Maybe [LoadBalancerState] -> Int -> DescribeLoadBalancersResponse

-- | Create a value of <a>DescribeLoadBalancersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancers'</a>,
--   <a>describeLoadBalancersResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:loadBalancers:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_loadBalancers</a> - The load
--   balancers.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancersResponse'</a>,
--   <a>describeLoadBalancersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoadBalancersResponse :: Int -> DescribeLoadBalancersResponse

-- | <i>See:</i> <a>newCreateAutoScalingGroup</a> smart constructor.
data CreateAutoScalingGroup
CreateAutoScalingGroup' :: Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe [Tag] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [LifecycleHookSpecification] -> Maybe [Text] -> Text -> Int -> Int -> CreateAutoScalingGroup

-- | Create a value of <a>CreateAutoScalingGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_availabilityZones</a> - A list of
--   Availability Zones where instances in the Auto Scaling group can be
--   created. This parameter is optional if you specify one or more subnets
--   for <tt>VPCZoneIdentifier</tt>.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into EC2-Classic.
--   
--   <a>$sel:instanceId:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_instanceId</a> - The ID of the instance used
--   to base the launch configuration on. If specified, Amazon EC2 Auto
--   Scaling uses the configuration values from the specified instance to
--   create a new launch configuration. To get the instance ID, use the
--   Amazon EC2 <a>DescribeInstances</a> API operation. For more
--   information, see <a>Creating an Auto Scaling group using an EC2
--   instance</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:desiredCapacity:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_desiredCapacity</a> - The desired capacity
--   is the initial capacity of the Auto Scaling group at the time of its
--   creation and the capacity it attempts to maintain. It can scale beyond
--   this capacity if you configure auto scaling. This number must be
--   greater than or equal to the minimum size of the group and less than
--   or equal to the maximum size of the group. If you do not specify a
--   desired capacity, the default is the minimum size of the group.
--   
--   <a>$sel:defaultCooldown:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_defaultCooldown</a> - The amount of time, in
--   seconds, after a scaling activity completes before another scaling
--   activity can start. The default value is <tt>300</tt>. This setting
--   applies when using simple scaling policies, but not when using other
--   scaling policies or scheduled scaling. For more information, see
--   <a>Scaling cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:maxInstanceLifetime:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_maxInstanceLifetime</a> - The maximum amount
--   of time, in seconds, that an instance can be in service. The default
--   is null. If specified, the value must be either 0 or a number equal to
--   or greater than 86,400 seconds (1 day). For more information, see
--   <a>Replacing Auto Scaling instances based on maximum instance
--   lifetime</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:placementGroup:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_placementGroup</a> - The name of an existing
--   placement group into which to launch your instances, if any. A
--   placement group is a logical grouping of instances within a single
--   Availability Zone. You cannot specify multiple Availability Zones and
--   a placement group. For more information, see <a>Placement Groups</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:launchTemplate:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_launchTemplate</a> - Parameters used to
--   specify the launch template and version to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   The launch template that is specified must be configured for use with
--   an Auto Scaling group. For more information, see <a>Creating a launch
--   template for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_launchConfigurationName</a> - The name of
--   the launch configuration to use to launch instances.
--   
--   Conditional: You must specify either a launch template
--   (<tt>LaunchTemplate</tt> or <tt>MixedInstancesPolicy</tt>) or a launch
--   configuration (<tt>LaunchConfigurationName</tt> or
--   <tt>InstanceId</tt>).
--   
--   <a>$sel:healthCheckType:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_healthCheckType</a> - The service to use for
--   the health checks. The valid values are <tt>EC2</tt> (default) and
--   <tt>ELB</tt>. If you configure an Auto Scaling group to use load
--   balancer (ELB) health checks, it considers the instance unhealthy if
--   it fails either the EC2 status checks or the load balancer health
--   checks. For more information, see <a>Health checks for Auto Scaling
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:context:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_context</a> - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_mixedInstancesPolicy</a> - An embedded
--   object that specifies a mixed instances policy. The required
--   properties must be specified. If optional properties are unspecified,
--   their default values are used.
--   
--   The policy includes properties that not only define the distribution
--   of On-Demand Instances and Spot Instances, the maximum price to pay
--   for Spot Instances, and how the Auto Scaling group allocates instance
--   types to fulfill On-Demand and Spot capacities, but also the
--   properties that specify the instance configuration information—the
--   launch template and instance types. The policy can also include a
--   weight for each instance type and different launch templates for
--   individual instance types. For more information, see <a>Auto Scaling
--   groups with multiple instance types and purchase options</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:tags:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_tags</a> - One or more tags. You can tag
--   your Auto Scaling group and propagate the tags to the Amazon EC2
--   instances it launches. Tags are not propagated to Amazon EBS volumes.
--   To add tags to Amazon EBS volumes, specify the tags in a launch
--   template but use caution. If the launch template specifies an instance
--   tag with a key that is also specified for the Auto Scaling group,
--   Amazon EC2 Auto Scaling overrides the value of that instance tag with
--   the value specified by the Auto Scaling group. For more information,
--   see <a>Tagging Auto Scaling groups and instances</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:loadBalancerNames:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_loadBalancerNames</a> - A list of Classic
--   Load Balancers associated with this Auto Scaling group. For
--   Application Load Balancers, Network Load Balancers, and Gateway Load
--   Balancers, specify the <tt>TargetGroupARNs</tt> property instead.
--   
--   <a>$sel:targetGroupARNs:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_targetGroupARNs</a> - The Amazon Resource
--   Names (ARN) of the target groups to associate with the Auto Scaling
--   group. Instances are registered as targets in a target group, and
--   traffic is routed to the target group. For more information, see
--   <a>Elastic Load Balancing and Amazon EC2 Auto Scaling</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:vPCZoneIdentifier:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_vPCZoneIdentifier</a> - A comma-separated
--   list of subnet IDs for a virtual private cloud (VPC) where instances
--   in the Auto Scaling group can be created. If you specify
--   <tt>VPCZoneIdentifier</tt> with <tt>AvailabilityZones</tt>, the
--   subnets that you specify for this parameter must reside in those
--   Availability Zones.
--   
--   Conditional: If your account supports EC2-Classic and VPC, this
--   parameter is required to launch instances into a VPC.
--   
--   <a>$sel:capacityRebalance:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_capacityRebalance</a> - Indicates whether
--   Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is
--   disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto
--   Scaling attempts to launch a Spot Instance whenever Amazon EC2
--   notifies that a Spot Instance is at an elevated risk of interruption.
--   After launching a new instance, it then terminates an old instance.
--   For more information, see <a>Amazon EC2 Auto Scaling Capacity
--   Rebalancing</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:serviceLinkedRoleARN:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_serviceLinkedRoleARN</a> - The Amazon
--   Resource Name (ARN) of the service-linked role that the Auto Scaling
--   group uses to call other Amazon Web Services on your behalf. By
--   default, Amazon EC2 Auto Scaling uses a service-linked role named
--   <tt>AWSServiceRoleForAutoScaling</tt>, which it creates if it does not
--   exist. For more information, see <a>Service-linked roles</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:healthCheckGracePeriod:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_healthCheckGracePeriod</a> - The amount of
--   time, in seconds, that Amazon EC2 Auto Scaling waits before checking
--   the health status of an EC2 instance that has come into service.
--   During this time, any health check failures for the instance are
--   ignored. The default value is <tt>0</tt>. For more information, see
--   <a>Health check grace period</a> in the <i>Amazon EC2 Auto Scaling
--   User Guide</i>.
--   
--   Conditional: Required if you are adding an <tt>ELB</tt> health check.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_newInstancesProtectedFromScaleIn</a> -
--   Indicates whether newly launched instances are protected from
--   termination by Amazon EC2 Auto Scaling when scaling in. For more
--   information about preventing instances from terminating on scale in,
--   see <a>Instance scale-in protection</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:lifecycleHookSpecificationList:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_lifecycleHookSpecificationList</a> - One or
--   more lifecycle hooks for the group, which specify actions to perform
--   when Amazon EC2 Auto Scaling launches or terminates instances.
--   
--   <a>$sel:terminationPolicies:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_terminationPolicies</a> - A policy or a list
--   of policies that are used to select the instance to terminate. These
--   policies are executed in the order that you list them. For more
--   information, see <a>Controlling which Auto Scaling instances terminate
--   during scale in</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:autoScalingGroupName:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_autoScalingGroupName</a> - The name of the
--   Auto Scaling group. This name must be unique per Region per account.
--   
--   <a>$sel:minSize:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_minSize</a> - The minimum size of the group.
--   
--   <a>$sel:maxSize:CreateAutoScalingGroup'</a>,
--   <a>createAutoScalingGroup_maxSize</a> - The maximum size of the group.
--   
--   With a mixed instances policy that uses instance weighting, Amazon EC2
--   Auto Scaling may need to go above <tt>MaxSize</tt> to meet your
--   capacity requirements. In this event, Amazon EC2 Auto Scaling will
--   never go above <tt>MaxSize</tt> by more than your largest instance
--   weight (weights that define how many units each instance contributes
--   to the desired capacity of the group).
newCreateAutoScalingGroup :: Text -> Int -> Int -> CreateAutoScalingGroup

-- | <i>See:</i> <a>newCreateAutoScalingGroupResponse</a> smart
--   constructor.
data CreateAutoScalingGroupResponse
CreateAutoScalingGroupResponse' :: CreateAutoScalingGroupResponse

-- | Create a value of <a>CreateAutoScalingGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateAutoScalingGroupResponse :: CreateAutoScalingGroupResponse

-- | <i>See:</i> <a>newAttachInstances</a> smart constructor.
data AttachInstances
AttachInstances' :: Maybe [Text] -> Text -> AttachInstances

-- | Create a value of <a>AttachInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:AttachInstances'</a>,
--   <a>attachInstances_instanceIds</a> - The IDs of the instances. You can
--   specify up to 20 instances.
--   
--   <a>$sel:autoScalingGroupName:AttachInstances'</a>,
--   <a>attachInstances_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newAttachInstances :: Text -> AttachInstances

-- | <i>See:</i> <a>newAttachInstancesResponse</a> smart constructor.
data AttachInstancesResponse
AttachInstancesResponse' :: AttachInstancesResponse

-- | Create a value of <a>AttachInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAttachInstancesResponse :: AttachInstancesResponse

-- | <i>See:</i> <a>newCompleteLifecycleAction</a> smart constructor.
data CompleteLifecycleAction
CompleteLifecycleAction' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CompleteLifecycleAction

-- | Create a value of <a>CompleteLifecycleAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:lifecycleActionToken:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleActionToken</a> - A universally
--   unique identifier (UUID) that identifies a specific lifecycle action
--   associated with an instance. Amazon EC2 Auto Scaling sends this token
--   to the notification target you specified when you created the
--   lifecycle hook.
--   
--   <a>$sel:lifecycleHookName:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:lifecycleActionResult:CompleteLifecycleAction'</a>,
--   <a>completeLifecycleAction_lifecycleActionResult</a> - The action for
--   the group to take. This parameter can be either <tt>CONTINUE</tt> or
--   <tt>ABANDON</tt>.
newCompleteLifecycleAction :: Text -> Text -> Text -> CompleteLifecycleAction

-- | <i>See:</i> <a>newCompleteLifecycleActionResponse</a> smart
--   constructor.
data CompleteLifecycleActionResponse
CompleteLifecycleActionResponse' :: Int -> CompleteLifecycleActionResponse

-- | Create a value of <a>CompleteLifecycleActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CompleteLifecycleActionResponse'</a>,
--   <a>completeLifecycleActionResponse_httpStatus</a> - The response's
--   http status code.
newCompleteLifecycleActionResponse :: Int -> CompleteLifecycleActionResponse

-- | <i>See:</i> <a>newSetDesiredCapacity</a> smart constructor.
data SetDesiredCapacity
SetDesiredCapacity' :: Maybe Bool -> Text -> Int -> SetDesiredCapacity

-- | Create a value of <a>SetDesiredCapacity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:honorCooldown:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_honorCooldown</a> - Indicates whether Amazon EC2
--   Auto Scaling waits for the cooldown period to complete before
--   initiating a scaling activity to set your Auto Scaling group to its
--   new capacity. By default, Amazon EC2 Auto Scaling does not honor the
--   cooldown period during manual scaling activities.
--   
--   <a>$sel:autoScalingGroupName:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:desiredCapacity:SetDesiredCapacity'</a>,
--   <a>setDesiredCapacity_desiredCapacity</a> - The desired capacity is
--   the initial capacity of the Auto Scaling group after this operation
--   completes and the capacity it attempts to maintain.
newSetDesiredCapacity :: Text -> Int -> SetDesiredCapacity

-- | <i>See:</i> <a>newSetDesiredCapacityResponse</a> smart constructor.
data SetDesiredCapacityResponse
SetDesiredCapacityResponse' :: SetDesiredCapacityResponse

-- | Create a value of <a>SetDesiredCapacityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetDesiredCapacityResponse :: SetDesiredCapacityResponse

-- | <i>See:</i> <a>newDescribeLifecycleHookTypes</a> smart constructor.
data DescribeLifecycleHookTypes
DescribeLifecycleHookTypes' :: DescribeLifecycleHookTypes

-- | Create a value of <a>DescribeLifecycleHookTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLifecycleHookTypes :: DescribeLifecycleHookTypes

-- | <i>See:</i> <a>newDescribeLifecycleHookTypesResponse</a> smart
--   constructor.
data DescribeLifecycleHookTypesResponse
DescribeLifecycleHookTypesResponse' :: Maybe [Text] -> Int -> DescribeLifecycleHookTypesResponse

-- | Create a value of <a>DescribeLifecycleHookTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lifecycleHookTypes:DescribeLifecycleHookTypesResponse'</a>,
--   <a>describeLifecycleHookTypesResponse_lifecycleHookTypes</a> - The
--   lifecycle hook types.
--   
--   <a>$sel:httpStatus:DescribeLifecycleHookTypesResponse'</a>,
--   <a>describeLifecycleHookTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeLifecycleHookTypesResponse :: Int -> DescribeLifecycleHookTypesResponse

-- | <i>See:</i> <a>newDescribeNotificationConfigurations</a> smart
--   constructor.
data DescribeNotificationConfigurations
DescribeNotificationConfigurations' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeNotificationConfigurations

-- | Create a value of <a>DescribeNotificationConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_nextToken</a> - The token for
--   the next set of items to return. (You received this token from a
--   previous call.)
--   
--   <a>$sel:autoScalingGroupNames:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_autoScalingGroupNames</a> - The
--   name of the Auto Scaling group.
--   
--   <a>$sel:maxRecords:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurations_maxRecords</a> - The maximum
--   number of items to return with this call. The default value is
--   <tt>50</tt> and the maximum value is <tt>100</tt>.
newDescribeNotificationConfigurations :: DescribeNotificationConfigurations

-- | <i>See:</i> <a>newDescribeNotificationConfigurationsResponse</a> smart
--   constructor.
data DescribeNotificationConfigurationsResponse
DescribeNotificationConfigurationsResponse' :: Maybe Text -> Int -> [NotificationConfiguration] -> DescribeNotificationConfigurationsResponse

-- | Create a value of <a>DescribeNotificationConfigurationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationConfigurations'</a>,
--   <a>describeNotificationConfigurationsResponse_nextToken</a> - A string
--   that indicates that the response contains more items than can be
--   returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
--   
--   <a>$sel:httpStatus:DescribeNotificationConfigurationsResponse'</a>,
--   <a>describeNotificationConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:notificationConfigurations:DescribeNotificationConfigurationsResponse'</a>,
--   <a>describeNotificationConfigurationsResponse_notificationConfigurations</a>
--   - The notification configurations.
newDescribeNotificationConfigurationsResponse :: Int -> DescribeNotificationConfigurationsResponse

-- | <i>See:</i> <a>newDescribePolicies</a> smart constructor.
data DescribePolicies
DescribePolicies' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Int -> Maybe Text -> DescribePolicies

-- | Create a value of <a>DescribePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePolicies'</a>,
--   <a>describePolicies_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:policyTypes:DescribePolicies'</a>,
--   <a>describePolicies_policyTypes</a> - One or more policy types. The
--   valid values are <tt>SimpleScaling</tt>, <tt>StepScaling</tt>,
--   <tt>TargetTrackingScaling</tt>, and <tt>PredictiveScaling</tt>.
--   
--   <a>$sel:policyNames:DescribePolicies'</a>,
--   <a>describePolicies_policyNames</a> - The names of one or more
--   policies. If you omit this parameter, all policies are described. If a
--   group name is provided, the results are limited to that group. If you
--   specify an unknown policy name, it is ignored with no error.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:maxRecords:DescribePolicies'</a>,
--   <a>describePolicies_maxRecords</a> - The maximum number of items to be
--   returned with each call. The default value is <tt>50</tt> and the
--   maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribePolicies'</a>,
--   <a>describePolicies_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newDescribePolicies :: DescribePolicies

-- | <i>See:</i> <a>newDescribePoliciesResponse</a> smart constructor.
data DescribePoliciesResponse
DescribePoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribePoliciesResponse

-- | Create a value of <a>DescribePoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePolicies'</a>,
--   <a>describePoliciesResponse_nextToken</a> - A string that indicates
--   that the response contains more items than can be returned in a single
--   response. To receive additional items, specify this string for the
--   <tt>NextToken</tt> value when requesting the next set of items. This
--   value is null when there are no more items to return.
--   
--   <a>$sel:scalingPolicies:DescribePoliciesResponse'</a>,
--   <a>describePoliciesResponse_scalingPolicies</a> - The scaling
--   policies.
--   
--   <a>$sel:httpStatus:DescribePoliciesResponse'</a>,
--   <a>describePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newDescribePoliciesResponse :: Int -> DescribePoliciesResponse

-- | <i>See:</i> <a>newDescribeLaunchConfigurations</a> smart constructor.
data DescribeLaunchConfigurations
DescribeLaunchConfigurations' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeLaunchConfigurations

-- | Create a value of <a>DescribeLaunchConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:launchConfigurationNames:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_launchConfigurationNames</a> - The
--   launch configuration names. If you omit this parameter, all launch
--   configurations are described.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:maxRecords:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurations_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
newDescribeLaunchConfigurations :: DescribeLaunchConfigurations

-- | <i>See:</i> <a>newDescribeLaunchConfigurationsResponse</a> smart
--   constructor.
data DescribeLaunchConfigurationsResponse
DescribeLaunchConfigurationsResponse' :: Maybe Text -> Int -> [LaunchConfiguration] -> DescribeLaunchConfigurationsResponse

-- | Create a value of <a>DescribeLaunchConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLaunchConfigurations'</a>,
--   <a>describeLaunchConfigurationsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeLaunchConfigurationsResponse'</a>,
--   <a>describeLaunchConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:launchConfigurations:DescribeLaunchConfigurationsResponse'</a>,
--   <a>describeLaunchConfigurationsResponse_launchConfigurations</a> - The
--   launch configurations.
newDescribeLaunchConfigurationsResponse :: Int -> DescribeLaunchConfigurationsResponse

-- | <i>See:</i> <a>newDescribeAutoScalingGroups</a> smart constructor.
data DescribeAutoScalingGroups
DescribeAutoScalingGroups' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeAutoScalingGroups

-- | Create a value of <a>DescribeAutoScalingGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:autoScalingGroupNames:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_autoScalingGroupNames</a> - The names of
--   the Auto Scaling groups. By default, you can only specify up to 50
--   names. You can optionally increase this limit using the
--   <tt>MaxRecords</tt> parameter.
--   
--   If you omit this parameter, all Auto Scaling groups are described.
--   
--   <a>$sel:maxRecords:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroups_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>100</tt>.
newDescribeAutoScalingGroups :: DescribeAutoScalingGroups

-- | <i>See:</i> <a>newDescribeAutoScalingGroupsResponse</a> smart
--   constructor.
data DescribeAutoScalingGroupsResponse
DescribeAutoScalingGroupsResponse' :: Maybe Text -> Int -> [AutoScalingGroup] -> DescribeAutoScalingGroupsResponse

-- | Create a value of <a>DescribeAutoScalingGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingGroups'</a>,
--   <a>describeAutoScalingGroupsResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingGroupsResponse'</a>,
--   <a>describeAutoScalingGroupsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:autoScalingGroups:DescribeAutoScalingGroupsResponse'</a>,
--   <a>describeAutoScalingGroupsResponse_autoScalingGroups</a> - The
--   groups.
newDescribeAutoScalingGroupsResponse :: Int -> DescribeAutoScalingGroupsResponse

-- | <i>See:</i> <a>newEnableMetricsCollection</a> smart constructor.
data EnableMetricsCollection
EnableMetricsCollection' :: Maybe [Text] -> Text -> Text -> EnableMetricsCollection

-- | Create a value of <a>EnableMetricsCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_metrics</a> - Specifies which group-level
--   metrics to start collecting. You can specify one or more of the
--   following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   </ul>
--   
--   The instance weighting feature supports the following additional
--   metrics:
--   
--   <ul>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   </ul>
--   
--   The warm pools feature supports the following additional metrics:
--   
--   <ul>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are enabled.
--   
--   <a>$sel:autoScalingGroupName:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:granularity:EnableMetricsCollection'</a>,
--   <a>enableMetricsCollection_granularity</a> - The granularity to
--   associate with the metrics to collect. The only valid value is
--   <tt>1Minute</tt>.
newEnableMetricsCollection :: Text -> Text -> EnableMetricsCollection

-- | <i>See:</i> <a>newEnableMetricsCollectionResponse</a> smart
--   constructor.
data EnableMetricsCollectionResponse
EnableMetricsCollectionResponse' :: EnableMetricsCollectionResponse

-- | Create a value of <a>EnableMetricsCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableMetricsCollectionResponse :: EnableMetricsCollectionResponse

-- | <i>See:</i> <a>newDescribeScalingProcessTypes</a> smart constructor.
data DescribeScalingProcessTypes
DescribeScalingProcessTypes' :: DescribeScalingProcessTypes

-- | Create a value of <a>DescribeScalingProcessTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeScalingProcessTypes :: DescribeScalingProcessTypes

-- | <i>See:</i> <a>newDescribeScalingProcessTypesResponse</a> smart
--   constructor.
data DescribeScalingProcessTypesResponse
DescribeScalingProcessTypesResponse' :: Maybe [ProcessType] -> Int -> DescribeScalingProcessTypesResponse

-- | Create a value of <a>DescribeScalingProcessTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processes:DescribeScalingProcessTypesResponse'</a>,
--   <a>describeScalingProcessTypesResponse_processes</a> - The names of
--   the process types.
--   
--   <a>$sel:httpStatus:DescribeScalingProcessTypesResponse'</a>,
--   <a>describeScalingProcessTypesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingProcessTypesResponse :: Int -> DescribeScalingProcessTypesResponse

-- | <i>See:</i> <a>newRecordLifecycleActionHeartbeat</a> smart
--   constructor.
data RecordLifecycleActionHeartbeat
RecordLifecycleActionHeartbeat' :: Maybe Text -> Maybe Text -> Text -> Text -> RecordLifecycleActionHeartbeat

-- | Create a value of <a>RecordLifecycleActionHeartbeat</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_instanceId</a> - The ID of the
--   instance.
--   
--   <a>$sel:lifecycleActionToken:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_lifecycleActionToken</a> - A token
--   that uniquely identifies a specific lifecycle action associated with
--   an instance. Amazon EC2 Auto Scaling sends this token to the
--   notification target that you specified when you created the lifecycle
--   hook.
--   
--   <a>$sel:lifecycleHookName:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_lifecycleHookName</a> - The name of
--   the lifecycle hook.
--   
--   <a>$sel:autoScalingGroupName:RecordLifecycleActionHeartbeat'</a>,
--   <a>recordLifecycleActionHeartbeat_autoScalingGroupName</a> - The name
--   of the Auto Scaling group.
newRecordLifecycleActionHeartbeat :: Text -> Text -> RecordLifecycleActionHeartbeat

-- | <i>See:</i> <a>newRecordLifecycleActionHeartbeatResponse</a> smart
--   constructor.
data RecordLifecycleActionHeartbeatResponse
RecordLifecycleActionHeartbeatResponse' :: Int -> RecordLifecycleActionHeartbeatResponse

-- | Create a value of <a>RecordLifecycleActionHeartbeatResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RecordLifecycleActionHeartbeatResponse'</a>,
--   <a>recordLifecycleActionHeartbeatResponse_httpStatus</a> - The
--   response's http status code.
newRecordLifecycleActionHeartbeatResponse :: Int -> RecordLifecycleActionHeartbeatResponse

-- | <i>See:</i> <a>newDisableMetricsCollection</a> smart constructor.
data DisableMetricsCollection
DisableMetricsCollection' :: Maybe [Text] -> Text -> DisableMetricsCollection

-- | Create a value of <a>DisableMetricsCollection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metrics:DisableMetricsCollection'</a>,
--   <a>disableMetricsCollection_metrics</a> - Specifies one or more of the
--   following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
--   
--   If you omit this parameter, all metrics are disabled.
--   
--   <a>$sel:autoScalingGroupName:DisableMetricsCollection'</a>,
--   <a>disableMetricsCollection_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newDisableMetricsCollection :: Text -> DisableMetricsCollection

-- | <i>See:</i> <a>newDisableMetricsCollectionResponse</a> smart
--   constructor.
data DisableMetricsCollectionResponse
DisableMetricsCollectionResponse' :: DisableMetricsCollectionResponse

-- | Create a value of <a>DisableMetricsCollectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableMetricsCollectionResponse :: DisableMetricsCollectionResponse

-- | <i>See:</i> <a>newDescribeAutoScalingInstances</a> smart constructor.
data DescribeAutoScalingInstances
DescribeAutoScalingInstances' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeAutoScalingInstances

-- | Create a value of <a>DescribeAutoScalingInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceIds:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_instanceIds</a> - The IDs of the
--   instances. If you omit this parameter, all Auto Scaling instances are
--   described. If you specify an ID that does not exist, it is ignored
--   with no error.
--   
--   Array Members: Maximum number of 50 items.
--   
--   <a>$sel:nextToken:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:maxRecords:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstances_maxRecords</a> - The maximum number of
--   items to return with this call. The default value is <tt>50</tt> and
--   the maximum value is <tt>50</tt>.
newDescribeAutoScalingInstances :: DescribeAutoScalingInstances

-- | <i>See:</i> <a>newDescribeAutoScalingInstancesResponse</a> smart
--   constructor.
data DescribeAutoScalingInstancesResponse
DescribeAutoScalingInstancesResponse' :: Maybe Text -> Maybe [AutoScalingInstanceDetails] -> Int -> DescribeAutoScalingInstancesResponse

-- | Create a value of <a>DescribeAutoScalingInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAutoScalingInstances'</a>,
--   <a>describeAutoScalingInstancesResponse_nextToken</a> - A string that
--   indicates that the response contains more items than can be returned
--   in a single response. To receive additional items, specify this string
--   for the <tt>NextToken</tt> value when requesting the next set of
--   items. This value is null when there are no more items to return.
--   
--   
--   <a>$sel:autoScalingInstances:DescribeAutoScalingInstancesResponse'</a>,
--   <a>describeAutoScalingInstancesResponse_autoScalingInstances</a> - The
--   instances.
--   
--   <a>$sel:httpStatus:DescribeAutoScalingInstancesResponse'</a>,
--   <a>describeAutoScalingInstancesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeAutoScalingInstancesResponse :: Int -> DescribeAutoScalingInstancesResponse

-- | <i>See:</i> <a>newCancelInstanceRefresh</a> smart constructor.
data CancelInstanceRefresh
CancelInstanceRefresh' :: Text -> CancelInstanceRefresh

-- | Create a value of <a>CancelInstanceRefresh</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:CancelInstanceRefresh'</a>,
--   <a>cancelInstanceRefresh_autoScalingGroupName</a> - The name of the
--   Auto Scaling group.
newCancelInstanceRefresh :: Text -> CancelInstanceRefresh

-- | <i>See:</i> <a>newCancelInstanceRefreshResponse</a> smart constructor.
data CancelInstanceRefreshResponse
CancelInstanceRefreshResponse' :: Maybe Text -> Int -> CancelInstanceRefreshResponse

-- | Create a value of <a>CancelInstanceRefreshResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceRefreshId:CancelInstanceRefreshResponse'</a>,
--   <a>cancelInstanceRefreshResponse_instanceRefreshId</a> - The instance
--   refresh ID.
--   
--   <a>$sel:httpStatus:CancelInstanceRefreshResponse'</a>,
--   <a>cancelInstanceRefreshResponse_httpStatus</a> - The response's http
--   status code.
newCancelInstanceRefreshResponse :: Int -> CancelInstanceRefreshResponse

-- | <i>See:</i> <a>newBatchDeleteScheduledAction</a> smart constructor.
data BatchDeleteScheduledAction
BatchDeleteScheduledAction' :: Text -> [Text] -> BatchDeleteScheduledAction

-- | Create a value of <a>BatchDeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoScalingGroupName:BatchDeleteScheduledAction'</a>,
--   <a>batchDeleteScheduledAction_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
--   
--   <a>$sel:scheduledActionNames:BatchDeleteScheduledAction'</a>,
--   <a>batchDeleteScheduledAction_scheduledActionNames</a> - The names of
--   the scheduled actions to delete. The maximum number allowed is 50.
newBatchDeleteScheduledAction :: Text -> BatchDeleteScheduledAction

-- | <i>See:</i> <a>newBatchDeleteScheduledActionResponse</a> smart
--   constructor.
data BatchDeleteScheduledActionResponse
BatchDeleteScheduledActionResponse' :: Maybe [FailedScheduledUpdateGroupActionRequest] -> Int -> BatchDeleteScheduledActionResponse

-- | Create a value of <a>BatchDeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:failedScheduledActions:BatchDeleteScheduledActionResponse'</a>,
--   <a>batchDeleteScheduledActionResponse_failedScheduledActions</a> - The
--   names of the scheduled actions that could not be deleted, including an
--   error message.
--   
--   <a>$sel:httpStatus:BatchDeleteScheduledActionResponse'</a>,
--   <a>batchDeleteScheduledActionResponse_httpStatus</a> - The response's
--   http status code.
newBatchDeleteScheduledActionResponse :: Int -> BatchDeleteScheduledActionResponse

-- | <i>See:</i> <a>newDescribeLoadBalancerTargetGroups</a> smart
--   constructor.
data DescribeLoadBalancerTargetGroups
DescribeLoadBalancerTargetGroups' :: Maybe Text -> Maybe Int -> Text -> DescribeLoadBalancerTargetGroups

-- | Create a value of <a>DescribeLoadBalancerTargetGroups</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_nextToken</a> - The token for the
--   next set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:maxRecords:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_maxRecords</a> - The maximum
--   number of items to return with this call. The default value is
--   <tt>100</tt> and the maximum value is <tt>100</tt>.
--   
--   <a>$sel:autoScalingGroupName:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroups_autoScalingGroupName</a> - The
--   name of the Auto Scaling group.
newDescribeLoadBalancerTargetGroups :: Text -> DescribeLoadBalancerTargetGroups

-- | <i>See:</i> <a>newDescribeLoadBalancerTargetGroupsResponse</a> smart
--   constructor.
data DescribeLoadBalancerTargetGroupsResponse
DescribeLoadBalancerTargetGroupsResponse' :: Maybe [LoadBalancerTargetGroupState] -> Maybe Text -> Int -> DescribeLoadBalancerTargetGroupsResponse

-- | Create a value of <a>DescribeLoadBalancerTargetGroupsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:loadBalancerTargetGroups:DescribeLoadBalancerTargetGroupsResponse'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_loadBalancerTargetGroups</a>
--   - Information about the target groups.
--   
--   <a>$sel:nextToken:DescribeLoadBalancerTargetGroups'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_nextToken</a> - A string
--   that indicates that the response contains more items than can be
--   returned in a single response. To receive additional items, specify
--   this string for the <tt>NextToken</tt> value when requesting the next
--   set of items. This value is null when there are no more items to
--   return.
--   
--   <a>$sel:httpStatus:DescribeLoadBalancerTargetGroupsResponse'</a>,
--   <a>describeLoadBalancerTargetGroupsResponse_httpStatus</a> - The
--   response's http status code.
newDescribeLoadBalancerTargetGroupsResponse :: Int -> DescribeLoadBalancerTargetGroupsResponse
newtype InstanceMetadataEndpointState
InstanceMetadataEndpointState' :: Text -> InstanceMetadataEndpointState
[fromInstanceMetadataEndpointState] :: InstanceMetadataEndpointState -> Text
pattern InstanceMetadataEndpointState_Disabled :: InstanceMetadataEndpointState
pattern InstanceMetadataEndpointState_Enabled :: InstanceMetadataEndpointState
newtype InstanceMetadataHttpTokensState
InstanceMetadataHttpTokensState' :: Text -> InstanceMetadataHttpTokensState
[fromInstanceMetadataHttpTokensState] :: InstanceMetadataHttpTokensState -> Text
pattern InstanceMetadataHttpTokensState_Optional :: InstanceMetadataHttpTokensState
pattern InstanceMetadataHttpTokensState_Required :: InstanceMetadataHttpTokensState
newtype InstanceRefreshStatus
InstanceRefreshStatus' :: Text -> InstanceRefreshStatus
[fromInstanceRefreshStatus] :: InstanceRefreshStatus -> Text
pattern InstanceRefreshStatus_Cancelled :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Cancelling :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Failed :: InstanceRefreshStatus
pattern InstanceRefreshStatus_InProgress :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Pending :: InstanceRefreshStatus
pattern InstanceRefreshStatus_Successful :: InstanceRefreshStatus
newtype LifecycleState
LifecycleState' :: Text -> LifecycleState
[fromLifecycleState] :: LifecycleState -> Text
pattern LifecycleState_Detached :: LifecycleState
pattern LifecycleState_Detaching :: LifecycleState
pattern LifecycleState_EnteringStandby :: LifecycleState
pattern LifecycleState_InService :: LifecycleState
pattern LifecycleState_Pending :: LifecycleState
pattern LifecycleState_Pending_Proceed :: LifecycleState
pattern LifecycleState_Pending_Wait :: LifecycleState
pattern LifecycleState_Quarantined :: LifecycleState
pattern LifecycleState_Standby :: LifecycleState
pattern LifecycleState_Terminated :: LifecycleState
pattern LifecycleState_Terminating :: LifecycleState
pattern LifecycleState_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Terminating_Wait :: LifecycleState
pattern LifecycleState_Warmed_Pending :: LifecycleState
pattern LifecycleState_Warmed_Pending_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Pending_Wait :: LifecycleState
pattern LifecycleState_Warmed_Running :: LifecycleState
pattern LifecycleState_Warmed_Stopped :: LifecycleState
pattern LifecycleState_Warmed_Terminated :: LifecycleState
pattern LifecycleState_Warmed_Terminating :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Proceed :: LifecycleState
pattern LifecycleState_Warmed_Terminating_Wait :: LifecycleState
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_ASGAverageCPUUtilization :: MetricType
pattern MetricType_ASGAverageNetworkIn :: MetricType
pattern MetricType_ASGAverageNetworkOut :: MetricType
newtype PredefinedLoadMetricType
PredefinedLoadMetricType' :: Text -> PredefinedLoadMetricType
[fromPredefinedLoadMetricType] :: PredefinedLoadMetricType -> Text
pattern PredefinedLoadMetricType_ALBTargetGroupRequestCount :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalCPUUtilization :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkIn :: PredefinedLoadMetricType
pattern PredefinedLoadMetricType_ASGTotalNetworkOut :: PredefinedLoadMetricType
newtype PredefinedMetricPairType
PredefinedMetricPairType' :: Text -> PredefinedMetricPairType
[fromPredefinedMetricPairType] :: PredefinedMetricPairType -> Text
pattern PredefinedMetricPairType_ALBRequestCount :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGCPUUtilization :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkIn :: PredefinedMetricPairType
pattern PredefinedMetricPairType_ASGNetworkOut :: PredefinedMetricPairType
newtype PredefinedScalingMetricType
PredefinedScalingMetricType' :: Text -> PredefinedScalingMetricType
[fromPredefinedScalingMetricType] :: PredefinedScalingMetricType -> Text
pattern PredefinedScalingMetricType_ALBRequestCountPerTarget :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageCPUUtilization :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkIn :: PredefinedScalingMetricType
pattern PredefinedScalingMetricType_ASGAverageNetworkOut :: PredefinedScalingMetricType
newtype PredictiveScalingMaxCapacityBreachBehavior
PredictiveScalingMaxCapacityBreachBehavior' :: Text -> PredictiveScalingMaxCapacityBreachBehavior
[fromPredictiveScalingMaxCapacityBreachBehavior] :: PredictiveScalingMaxCapacityBreachBehavior -> Text
pattern PredictiveScalingMaxCapacityBreachBehavior_HonorMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
pattern PredictiveScalingMaxCapacityBreachBehavior_IncreaseMaxCapacity :: PredictiveScalingMaxCapacityBreachBehavior
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
newtype RefreshStrategy
RefreshStrategy' :: Text -> RefreshStrategy
[fromRefreshStrategy] :: RefreshStrategy -> Text
pattern RefreshStrategy_Rolling :: RefreshStrategy
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Cancelled :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_MidLifecycleAction :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PendingSpotBidPlacement :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_PreInService :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForELBConnectionDraining :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForInstanceWarmup :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceId :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_WaitingForSpotInstanceRequestId :: ScalingActivityStatusCode
newtype WarmPoolState
WarmPoolState' :: Text -> WarmPoolState
[fromWarmPoolState] :: WarmPoolState -> Text
pattern WarmPoolState_Running :: WarmPoolState
pattern WarmPoolState_Stopped :: WarmPoolState
newtype WarmPoolStatus
WarmPoolStatus' :: Text -> WarmPoolStatus
[fromWarmPoolStatus] :: WarmPoolStatus -> Text
pattern WarmPoolStatus_PendingDelete :: WarmPoolStatus

-- | Describes scaling activity, which is a long-running process that
--   represents a change to your Auto Scaling group, such as changing its
--   size or replacing an instance.
--   
--   <i>See:</i> <a>newActivity</a> smart constructor.
data Activity
Activity' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> Text -> ISO8601 -> ScalingActivityStatusCode -> Activity

-- | Create a value of <a>Activity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:Activity'</a>, <a>activity_statusMessage</a> - A
--   friendly, more verbose description of the activity status.
--   
--   <a>$sel:autoScalingGroupARN:Activity'</a>,
--   <a>activity_autoScalingGroupARN</a> - The Amazon Resource Name (ARN)
--   of the Auto Scaling group.
--   
--   <a>$sel:endTime:Activity'</a>, <a>activity_endTime</a> - The end time
--   of the activity.
--   
--   <a>$sel:autoScalingGroupState:Activity'</a>,
--   <a>activity_autoScalingGroupState</a> - The state of the Auto Scaling
--   group, which is either <tt>InService</tt> or <tt>Deleted</tt>.
--   
--   <a>$sel:details:Activity'</a>, <a>activity_details</a> - The details
--   about the activity.
--   
--   <a>$sel:description:Activity'</a>, <a>activity_description</a> - A
--   friendly, more verbose description of the activity.
--   
--   <a>$sel:progress:Activity'</a>, <a>activity_progress</a> - A value
--   between 0 and 100 that indicates the progress of the activity.
--   
--   <a>$sel:autoScalingGroupName:Activity'</a>,
--   <a>activity_autoScalingGroupName</a> - The name of the Auto Scaling
--   group.
--   
--   <a>$sel:activityId:Activity'</a>, <a>activity_activityId</a> - The ID
--   of the activity.
--   
--   <a>$sel:cause:Activity'</a>, <a>activity_cause</a> - The reason the
--   activity began.
--   
--   <a>$sel:startTime:Activity'</a>, <a>activity_startTime</a> - The start
--   time of the activity.
--   
--   <a>$sel:statusCode:Activity'</a>, <a>activity_statusCode</a> - The
--   current status of the activity.
newActivity :: Text -> Text -> UTCTime -> ScalingActivityStatusCode -> Activity

-- | Describes a policy adjustment type.
--   
--   <i>See:</i> <a>newAdjustmentType</a> smart constructor.
data AdjustmentType
AdjustmentType' :: Maybe Text -> AdjustmentType

-- | Create a value of <a>AdjustmentType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adjustmentType:AdjustmentType'</a>,
--   <a>adjustmentType_adjustmentType</a> - The policy adjustment type. The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
newAdjustmentType :: AdjustmentType

-- | Describes an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe Text -> Alarm

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
newAlarm :: Alarm

-- | Describes an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [SuspendedProcess] -> Maybe Int -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe [Instance] -> Maybe Text -> Maybe MixedInstancesPolicy -> Maybe [TagDescription] -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe WarmPoolConfiguration -> Maybe Bool -> Maybe Text -> Maybe Int -> Maybe Bool -> Maybe [EnabledMetric] -> Maybe [Text] -> Text -> Int -> Int -> Int -> Int -> [Text] -> Text -> ISO8601 -> AutoScalingGroup

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AutoScalingGroup'</a>, <a>autoScalingGroup_status</a> -
--   The current state of the group when the DeleteAutoScalingGroup
--   operation is in progress.
--   
--   <a>$sel:maxInstanceLifetime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_maxInstanceLifetime</a> - The maximum amount of
--   time, in seconds, that an instance can be in service.
--   
--   Valid Range: Minimum value of 0.
--   
--   <a>$sel:placementGroup:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_placementGroup</a> - The name of the placement
--   group into which to launch your instances, if any.
--   
--   <a>$sel:suspendedProcesses:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_suspendedProcesses</a> - The suspended processes
--   associated with the group.
--   
--   <a>$sel:predictedCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_predictedCapacity</a> - The predicted capacity of
--   the group when it has a predictive scaling policy.
--   
--   <a>$sel:autoScalingGroupARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupARN</a> - The Amazon Resource Name
--   (ARN) of the Auto Scaling group.
--   
--   <a>$sel:launchTemplate:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchTemplate</a> - The launch template for the
--   group.
--   
--   <a>$sel:launchConfigurationName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_launchConfigurationName</a> - The name of the
--   associated launch configuration.
--   
--   <a>$sel:instances:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_instances</a> - The EC2 instances associated with
--   the group.
--   
--   <a>$sel:context:AutoScalingGroup'</a>, <a>autoScalingGroup_context</a>
--   - Reserved.
--   
--   <a>$sel:mixedInstancesPolicy:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_mixedInstancesPolicy</a> - The mixed instances
--   policy for the group.
--   
--   <a>$sel:tags:AutoScalingGroup'</a>, <a>autoScalingGroup_tags</a> - The
--   tags for the group.
--   
--   <a>$sel:loadBalancerNames:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_loadBalancerNames</a> - One or more load balancers
--   associated with the group.
--   
--   <a>$sel:targetGroupARNs:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_targetGroupARNs</a> - The Amazon Resource Names
--   (ARN) of the target groups for your load balancer.
--   
--   <a>$sel:vPCZoneIdentifier:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_vPCZoneIdentifier</a> - One or more subnet IDs, if
--   applicable, separated by commas.
--   
--   <a>$sel:warmPoolSize:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolSize</a> - The current size of the warm
--   pool.
--   
--   <a>$sel:warmPoolConfiguration:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_warmPoolConfiguration</a> - The warm pool for the
--   group.
--   
--   <a>$sel:capacityRebalance:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_capacityRebalance</a> - Indicates whether Capacity
--   Rebalancing is enabled.
--   
--   <a>$sel:serviceLinkedRoleARN:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_serviceLinkedRoleARN</a> - The Amazon Resource
--   Name (ARN) of the service-linked role that the Auto Scaling group uses
--   to call other Amazon Web Services on your behalf.
--   
--   <a>$sel:healthCheckGracePeriod:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckGracePeriod</a> - The amount of time,
--   in seconds, that Amazon EC2 Auto Scaling waits before checking the
--   health status of an EC2 instance that has come into service.
--   
--   <a>$sel:newInstancesProtectedFromScaleIn':AutoScalingGroup'</a>,
--   <a>autoScalingGroup_newInstancesProtectedFromScaleIn</a> - Indicates
--   whether newly launched instances are protected from termination by
--   Amazon EC2 Auto Scaling when scaling in.
--   
--   <a>$sel:enabledMetrics:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_enabledMetrics</a> - The metrics enabled for the
--   group.
--   
--   <a>$sel:terminationPolicies:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_terminationPolicies</a> - The termination policies
--   for the group.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
--   
--   <a>$sel:minSize:AutoScalingGroup'</a>, <a>autoScalingGroup_minSize</a>
--   - The minimum size of the group.
--   
--   <a>$sel:maxSize:AutoScalingGroup'</a>, <a>autoScalingGroup_maxSize</a>
--   - The maximum size of the group.
--   
--   <a>$sel:desiredCapacity:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_desiredCapacity</a> - The desired size of the
--   group.
--   
--   <a>$sel:defaultCooldown:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_defaultCooldown</a> - The duration of the default
--   cooldown period, in seconds.
--   
--   <a>$sel:availabilityZones:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_availabilityZones</a> - One or more Availability
--   Zones for the group.
--   
--   <a>$sel:healthCheckType:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_healthCheckType</a> - The service to use for the
--   health checks. The valid values are <tt>EC2</tt> and <tt>ELB</tt>. If
--   you configure an Auto Scaling group to use <tt>ELB</tt> health checks,
--   it considers the instance unhealthy if it fails either the EC2 status
--   checks or the load balancer health checks.
--   
--   <a>$sel:createdTime:AutoScalingGroup'</a>,
--   <a>autoScalingGroup_createdTime</a> - The date and time the group was
--   created.
newAutoScalingGroup :: Text -> Int -> Int -> Int -> Int -> Text -> UTCTime -> AutoScalingGroup

-- | Describes an EC2 instance associated with an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingInstanceDetails</a> smart constructor.
data AutoScalingInstanceDetails
AutoScalingInstanceDetails' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | Create a value of <a>AutoScalingInstanceDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceType</a> - The instance type of
--   the EC2 instance.
--   
--   <a>$sel:launchTemplate:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchTemplate</a> - The launch template
--   for the instance.
--   
--   <a>$sel:launchConfigurationName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_launchConfigurationName</a> - The launch
--   configuration used to launch the instance. This value is not available
--   if you attached the instance to the Auto Scaling group.
--   
--   <a>$sel:weightedCapacity:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_weightedCapacity</a> - The number of
--   capacity units contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_instanceId</a> - The ID of the instance.
--   
--   <a>$sel:autoScalingGroupName:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_autoScalingGroupName</a> - The name of
--   the Auto Scaling group for the instance.
--   
--   <a>$sel:availabilityZone:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_availabilityZone</a> - The Availability
--   Zone for the instance.
--   
--   <a>$sel:lifecycleState:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_lifecycleState</a> - The lifecycle state
--   for the instance. The <tt>Quarantined</tt> state is not used. For
--   information about lifecycle states, see <a>Instance lifecycle</a> in
--   the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   Valid Values: <tt>Pending</tt> | <tt>Pending:Wait</tt> |
--   <tt>Pending:Proceed</tt> | <tt>Quarantined</tt> | <tt>InService</tt> |
--   <tt>Terminating</tt> | <tt>Terminating:Wait</tt> |
--   <tt>Terminating:Proceed</tt> | <tt>Terminated</tt> |
--   <tt>Detaching</tt> | <tt>Detached</tt> | <tt>EnteringStandby</tt> |
--   <tt>Standby</tt> | <tt>Warmed:Pending</tt> |
--   <tt>Warmed:Pending:Wait</tt> | <tt>Warmed:Pending:Proceed</tt> |
--   <tt>Warmed:Terminating</tt> | <tt>Warmed:Terminating:Wait</tt> |
--   <tt>Warmed:Terminating:Proceed</tt> | <tt>Warmed:Terminated</tt> |
--   <tt>Warmed:Stopped</tt> | <tt>Warmed:Running</tt>
--   
--   <a>$sel:healthStatus:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_healthStatus</a> - The last reported
--   health status of this instance. "Healthy" means that the instance is
--   healthy and should remain in service. "Unhealthy" means that the
--   instance is unhealthy and Amazon EC2 Auto Scaling should terminate and
--   replace it.
--   
--   <a>$sel:protectedFromScaleIn:AutoScalingInstanceDetails'</a>,
--   <a>autoScalingInstanceDetails_protectedFromScaleIn</a> - Indicates
--   whether the instance is protected from termination by Amazon EC2 Auto
--   Scaling when scaling in.
newAutoScalingInstanceDetails :: Text -> Text -> Text -> Text -> Text -> Bool -> AutoScalingInstanceDetails

-- | Describes a block device mapping.
--   
--   <i>See:</i> <a>newBlockDeviceMapping</a> smart constructor.
data BlockDeviceMapping
BlockDeviceMapping' :: Maybe Ebs -> Maybe Bool -> Maybe Text -> Text -> BlockDeviceMapping

-- | Create a value of <a>BlockDeviceMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebs:BlockDeviceMapping'</a>, <a>blockDeviceMapping_ebs</a> -
--   Parameters used to automatically set up EBS volumes when an instance
--   is launched.
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:noDevice:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_noDevice</a> - Setting this value to
--   <tt>true</tt> suppresses the specified device included in the block
--   device mapping of the AMI.
--   
--   If <tt>NoDevice</tt> is <tt>true</tt> for the root device, instances
--   might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling
--   launches replacement instances.
--   
--   If you specify <tt>NoDevice</tt>, you cannot specify <tt>Ebs</tt>.
--   
--   <a>$sel:virtualName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_virtualName</a> - The name of the virtual device
--   (for example, <tt>ephemeral0</tt>).
--   
--   You can specify either <tt>VirtualName</tt> or <tt>Ebs</tt>, but not
--   both.
--   
--   <a>$sel:deviceName:BlockDeviceMapping'</a>,
--   <a>blockDeviceMapping_deviceName</a> - The device name exposed to the
--   EC2 instance (for example, <tt>/dev/sdh</tt> or <tt>xvdh</tt>). For
--   more information, see <a>Device Naming on Linux Instances</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
newBlockDeviceMapping :: Text -> BlockDeviceMapping

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the capacity
--   forecast for a predictive scaling policy. This structure includes the
--   data points for that capacity forecast, along with the timestamps of
--   those data points.
--   
--   <i>See:</i> <a>newCapacityForecast</a> smart constructor.
data CapacityForecast
CapacityForecast' :: [ISO8601] -> [Double] -> CapacityForecast

-- | Create a value of <a>CapacityForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:CapacityForecast'</a>,
--   <a>capacityForecast_timestamps</a> - The time stamps for the data
--   points, in UTC format.
--   
--   <a>$sel:values:CapacityForecast'</a>, <a>capacityForecast_values</a> -
--   The values of the data points.
newCapacityForecast :: CapacityForecast

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Amazon EC2 Auto Scaling.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | Describes the desired configuration for an instance refresh.
--   
--   If you specify a desired configuration, you must specify either a
--   <tt>LaunchTemplate</tt> or a <tt>MixedInstancesPolicy</tt>.
--   
--   <i>See:</i> <a>newDesiredConfiguration</a> smart constructor.
data DesiredConfiguration
DesiredConfiguration' :: Maybe LaunchTemplateSpecification -> Maybe MixedInstancesPolicy -> DesiredConfiguration

-- | Create a value of <a>DesiredConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplate:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_launchTemplate</a> - Undocumented member.
--   
--   <a>$sel:mixedInstancesPolicy:DesiredConfiguration'</a>,
--   <a>desiredConfiguration_mixedInstancesPolicy</a> - Undocumented
--   member.
newDesiredConfiguration :: DesiredConfiguration

-- | Describes information used to set up an Amazon EBS volume specified in
--   a block device mapping.
--   
--   <i>See:</i> <a>newEbs</a> smart constructor.
data Ebs
Ebs' :: Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Ebs

-- | Create a value of <a>Ebs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encrypted:Ebs'</a>, <a>ebs_encrypted</a> - Specifies whether
--   the volume should be encrypted. Encrypted EBS volumes can only be
--   attached to instances that support Amazon EBS encryption. For more
--   information, see <a>Supported Instance Types</a>. If your AMI uses
--   encrypted volumes, you can also only launch it on supported instance
--   types.
--   
--   If you are creating a volume from a snapshot, you cannot specify an
--   encryption value. Volumes that are created from encrypted snapshots
--   are automatically encrypted, and volumes that are created from
--   unencrypted snapshots are automatically unencrypted. By default,
--   encrypted snapshots use the Amazon Web Services managed CMK that is
--   used for EBS encryption, but you can specify a custom CMK when you
--   create the snapshot. The ability to encrypt a snapshot during copying
--   also allows you to apply a new CMK to an already-encrypted snapshot.
--   Volumes restored from the resulting copy are only accessible using the
--   new CMK.
--   
--   Enabling <a>encryption by default</a> results in all EBS volumes being
--   encrypted with the Amazon Web Services managed CMK or a customer
--   managed CMK, whether or not the snapshot was encrypted.
--   
--   For more information, see <a>Using Encryption with EBS-Backed AMIs</a>
--   in the <i>Amazon EC2 User Guide for Linux Instances</i> and
--   <a>Required CMK key policy for use with encrypted volumes</a> in the
--   <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:throughput:Ebs'</a>, <a>ebs_throughput</a> - The throughput
--   (MiBps) to provision for a <tt>gp3</tt> volume.
--   
--   <a>$sel:deleteOnTermination:Ebs'</a>, <a>ebs_deleteOnTermination</a> -
--   Indicates whether the volume is deleted on instance termination. For
--   Amazon EC2 Auto Scaling, the default value is <tt>true</tt>.
--   
--   <a>$sel:snapshotId:Ebs'</a>, <a>ebs_snapshotId</a> - The snapshot ID
--   of the volume to use.
--   
--   You must specify either a <tt>VolumeSize</tt> or a
--   <tt>SnapshotId</tt>.
--   
--   <a>$sel:volumeType:Ebs'</a>, <a>ebs_volumeType</a> - The volume type.
--   For more information, see <a>Amazon EBS Volume Types</a> in the
--   <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   Valid Values: <tt>standard</tt> | <tt>io1</tt> | <tt>gp2</tt> |
--   <tt>st1</tt> | <tt>sc1</tt> | <tt>gp3</tt>
--   
--   <a>$sel:iops:Ebs'</a>, <a>ebs_iops</a> - The number of input/output
--   (I/O) operations per second (IOPS) to provision for the volume. For
--   <tt>gp3</tt> and <tt>io1</tt> volumes, this represents the number of
--   IOPS that are provisioned for the volume. For <tt>gp2</tt> volumes,
--   this represents the baseline performance of the volume and the rate at
--   which the volume accumulates I/O credits for bursting.
--   
--   The following are the supported values for each volume type:
--   
--   <ul>
--   <li><tt>gp3</tt>: 3,000-16,000 IOPS</li>
--   <li><tt>io1</tt>: 100-64,000 IOPS</li>
--   </ul>
--   
--   For <tt>io1</tt> volumes, we guarantee 64,000 IOPS only for
--   <a>Instances built on the Nitro System</a>. Other instance families
--   guarantee performance up to 32,000 IOPS.
--   
--   <tt>Iops</tt> is supported when the volume type is <tt>gp3</tt> or
--   <tt>io1</tt> and required only when the volume type is <tt>io1</tt>.
--   (Not used with <tt>standard</tt>, <tt>gp2</tt>, <tt>st1</tt>, or
--   <tt>sc1</tt> volumes.)
--   
--   <a>$sel:volumeSize:Ebs'</a>, <a>ebs_volumeSize</a> - The volume size,
--   in GiBs. The following are the supported volumes sizes for each volume
--   type:
--   
--   <ul>
--   <li><tt>gp2</tt> and <tt>gp3</tt>: 1-16,384</li>
--   <li><tt>io1</tt>: 4-16,384</li>
--   <li><tt>st1</tt> and <tt>sc1</tt>: 125-16,384</li>
--   <li><tt>standard</tt>: 1-1,024</li>
--   </ul>
--   
--   You must specify either a <tt>SnapshotId</tt> or a
--   <tt>VolumeSize</tt>. If you specify both <tt>SnapshotId</tt> and
--   <tt>VolumeSize</tt>, the volume size must be equal or greater than the
--   size of the snapshot.
newEbs :: Ebs

-- | Describes an enabled metric.
--   
--   <i>See:</i> <a>newEnabledMetric</a> smart constructor.
data EnabledMetric
EnabledMetric' :: Maybe Text -> Maybe Text -> EnabledMetric

-- | Create a value of <a>EnabledMetric</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:EnabledMetric'</a>,
--   <a>enabledMetric_granularity</a> - The granularity of the metric. The
--   only valid value is <tt>1Minute</tt>.
--   
--   <a>$sel:metric:EnabledMetric'</a>, <a>enabledMetric_metric</a> - One
--   of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newEnabledMetric :: EnabledMetric

-- | Describes a scheduled action that could not be created, updated, or
--   deleted.
--   
--   <i>See:</i> <a>newFailedScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data FailedScheduledUpdateGroupActionRequest
FailedScheduledUpdateGroupActionRequest' :: Maybe Text -> Maybe Text -> Text -> FailedScheduledUpdateGroupActionRequest

-- | Create a value of <a>FailedScheduledUpdateGroupActionRequest</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorMessage:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorMessage</a> - The
--   error message accompanying the error code.
--   
--   <a>$sel:errorCode:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_errorCode</a> - The error
--   code.
--   
--   
--   <a>$sel:scheduledActionName:FailedScheduledUpdateGroupActionRequest'</a>,
--   <a>failedScheduledUpdateGroupActionRequest_scheduledActionName</a> -
--   The name of the scheduled action.
newFailedScheduledUpdateGroupActionRequest :: Text -> FailedScheduledUpdateGroupActionRequest

-- | Describes a filter that is used to return a more specific list of
--   results when describing tags.
--   
--   For more information, see <a>Tagging Auto Scaling groups and
--   instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - One or more filter
--   values. Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   The valid values are: <tt>auto-scaling-group</tt>, <tt>key</tt>,
--   <tt>value</tt>, and <tt>propagate-at-launch</tt>.
newFilter :: Text -> Filter

-- | Describes an EC2 instance.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:Instance'</a>, <a>instance_instanceType</a> - The
--   instance type of the EC2 instance.
--   
--   <a>$sel:launchTemplate:Instance'</a>, <a>instance_launchTemplate</a> -
--   The launch template for the instance.
--   
--   <a>$sel:launchConfigurationName:Instance'</a>,
--   <a>instance_launchConfigurationName</a> - The launch configuration
--   associated with the instance.
--   
--   <a>$sel:weightedCapacity:Instance'</a>,
--   <a>instance_weightedCapacity</a> - The number of capacity units
--   contributed by the instance based on its instance type.
--   
--   Valid Range: Minimum value of 1. Maximum value of 999.
--   
--   <a>$sel:instanceId:Instance'</a>, <a>instance_instanceId</a> - The ID
--   of the instance.
--   
--   <a>$sel:availabilityZone:Instance'</a>,
--   <a>instance_availabilityZone</a> - The Availability Zone in which the
--   instance is running.
--   
--   <a>$sel:lifecycleState:Instance'</a>, <a>instance_lifecycleState</a> -
--   A description of the current lifecycle state. The <tt>Quarantined</tt>
--   state is not used. For information about lifecycle states, see
--   <a>Instance lifecycle</a> in the <i>Amazon EC2 Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:healthStatus:Instance'</a>, <a>instance_healthStatus</a> - The
--   last reported health status of the instance. "Healthy" means that the
--   instance is healthy and should remain in service. "Unhealthy" means
--   that the instance is unhealthy and that Amazon EC2 Auto Scaling should
--   terminate and replace it.
--   
--   <a>$sel:protectedFromScaleIn:Instance'</a>,
--   <a>instance_protectedFromScaleIn</a> - Indicates whether the instance
--   is protected from termination by Amazon EC2 Auto Scaling when scaling
--   in.
newInstance :: Text -> Text -> LifecycleState -> Text -> Bool -> Instance

-- | The metadata options for the instances. For more information, see
--   <a>Configuring the Instance Metadata Options</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe InstanceMetadataEndpointState -> Maybe Natural -> Maybe InstanceMetadataHttpTokensState -> InstanceMetadataOptions

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpEndpoint</a> - This parameter enables
--   or disables the HTTP metadata endpoint on your instances. If the
--   parameter is not specified, the default state is <tt>enabled</tt>.
--   
--   If you specify a value of <tt>disabled</tt>, you will not be able to
--   access your instance metadata.
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - The desired
--   HTTP PUT response hop limit for instance metadata requests. The larger
--   the number, the further instance metadata requests can travel.
--   
--   Default: 1
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - The state of token usage
--   for your instance metadata requests. If the parameter is not specified
--   in the request, the default state is <tt>optional</tt>.
--   
--   If the state is <tt>optional</tt>, you can choose to retrieve instance
--   metadata with or without a signed token header on your request. If you
--   retrieve the IAM role credentials without a token, the version 1.0
--   role credentials are returned. If you retrieve the IAM role
--   credentials using a valid signed token, the version 2.0 role
--   credentials are returned.
--   
--   If the state is <tt>required</tt>, you must send a signed token header
--   with any instance metadata retrieval requests. In this state,
--   retrieving the IAM role credentials always returns the version 2.0
--   credentials; the version 1.0 credentials are not available.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | Describes whether detailed monitoring is enabled for the Auto Scaling
--   instances.
--   
--   <i>See:</i> <a>newInstanceMonitoring</a> smart constructor.
data InstanceMonitoring
InstanceMonitoring' :: Maybe Bool -> InstanceMonitoring

-- | Create a value of <a>InstanceMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:InstanceMonitoring'</a>,
--   <a>instanceMonitoring_enabled</a> - If <tt>true</tt>, detailed
--   monitoring is enabled. Otherwise, basic monitoring is enabled.
newInstanceMonitoring :: InstanceMonitoring

-- | Describes an instance refresh for an Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefresh</a> smart constructor.
data InstanceRefresh
InstanceRefresh' :: Maybe InstanceRefreshStatus -> Maybe Text -> Maybe Natural -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe InstanceRefreshProgressDetails -> Maybe DesiredConfiguration -> Maybe RefreshPreferences -> Maybe Text -> Maybe Natural -> Maybe Text -> InstanceRefresh

-- | Create a value of <a>InstanceRefresh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:InstanceRefresh'</a>, <a>instanceRefresh_status</a> -
--   The current status for the instance refresh operation:
--   
--   <ul>
--   <li><tt>Pending</tt> - The request was created, but the operation has
--   not started.</li>
--   <li><tt>InProgress</tt> - The operation is in progress.</li>
--   <li><tt>Successful</tt> - The operation completed successfully.</li>
--   <li><tt>Failed</tt> - The operation failed to complete. You can
--   troubleshoot using the status reason and the scaling activities.</li>
--   <li><tt>Cancelling</tt> - An ongoing operation is being cancelled.
--   Cancellation does not roll back any replacements that have already
--   been completed, but it prevents new replacements from being
--   started.</li>
--   <li><tt>Cancelled</tt> - The operation is cancelled.</li>
--   </ul>
--   
--   <a>$sel:instanceRefreshId:InstanceRefresh'</a>,
--   <a>instanceRefresh_instanceRefreshId</a> - The instance refresh ID.
--   
--   <a>$sel:percentageComplete:InstanceRefresh'</a>,
--   <a>instanceRefresh_percentageComplete</a> - The percentage of the
--   instance refresh that is complete. For each instance replacement,
--   Amazon EC2 Auto Scaling tracks the instance's health status and
--   warm-up time. When the instance's health status changes to healthy and
--   the specified warm-up time passes, the instance is considered updated
--   and is added to the percentage complete.
--   
--   <a>$sel:startTime:InstanceRefresh'</a>,
--   <a>instanceRefresh_startTime</a> - The date and time at which the
--   instance refresh began.
--   
--   <a>$sel:endTime:InstanceRefresh'</a>, <a>instanceRefresh_endTime</a> -
--   The date and time at which the instance refresh ended.
--   
--   <a>$sel:progressDetails:InstanceRefresh'</a>,
--   <a>instanceRefresh_progressDetails</a> - Additional progress details
--   for an Auto Scaling group that has a warm pool.
--   
--   <a>$sel:desiredConfiguration:InstanceRefresh'</a>,
--   <a>instanceRefresh_desiredConfiguration</a> - Describes the specific
--   update you want to deploy.
--   
--   <a>$sel:preferences:InstanceRefresh'</a>,
--   <a>instanceRefresh_preferences</a> - Undocumented member.
--   
--   <a>$sel:statusReason:InstanceRefresh'</a>,
--   <a>instanceRefresh_statusReason</a> - Provides more details about the
--   current status of the instance refresh.
--   
--   <a>$sel:instancesToUpdate:InstanceRefresh'</a>,
--   <a>instanceRefresh_instancesToUpdate</a> - The number of instances
--   remaining to update before the instance refresh is complete.
--   
--   <a>$sel:autoScalingGroupName:InstanceRefresh'</a>,
--   <a>instanceRefresh_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newInstanceRefresh :: InstanceRefresh

-- | Reports the progress of an instance refresh on instances that are in
--   the Auto Scaling group.
--   
--   <i>See:</i> <a>newInstanceRefreshLivePoolProgress</a> smart
--   constructor.
data InstanceRefreshLivePoolProgress
InstanceRefreshLivePoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshLivePoolProgress

-- | Create a value of <a>InstanceRefreshLivePoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_percentageComplete</a> - The
--   percentage of instances in the Auto Scaling group that have been
--   replaced. For each instance replacement, Amazon EC2 Auto Scaling
--   tracks the instance's health status and warm-up time. When the
--   instance's health status changes to healthy and the specified warm-up
--   time passes, the instance is considered updated and is added to the
--   percentage complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshLivePoolProgress'</a>,
--   <a>instanceRefreshLivePoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshLivePoolProgress :: InstanceRefreshLivePoolProgress

-- | Reports the progress of an instance refresh on an Auto Scaling group
--   that has a warm pool. This includes separate details for instances in
--   the warm pool and instances in the Auto Scaling group (the live pool).
--   
--   <i>See:</i> <a>newInstanceRefreshProgressDetails</a> smart
--   constructor.
data InstanceRefreshProgressDetails
InstanceRefreshProgressDetails' :: Maybe InstanceRefreshLivePoolProgress -> Maybe InstanceRefreshWarmPoolProgress -> InstanceRefreshProgressDetails

-- | Create a value of <a>InstanceRefreshProgressDetails</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:livePoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_livePoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the Auto
--   Scaling group.
--   
--   <a>$sel:warmPoolProgress:InstanceRefreshProgressDetails'</a>,
--   <a>instanceRefreshProgressDetails_warmPoolProgress</a> - Indicates the
--   progress of an instance refresh on instances that are in the warm
--   pool.
newInstanceRefreshProgressDetails :: InstanceRefreshProgressDetails

-- | Reports the progress of an instance refresh on instances that are in
--   the warm pool.
--   
--   <i>See:</i> <a>newInstanceRefreshWarmPoolProgress</a> smart
--   constructor.
data InstanceRefreshWarmPoolProgress
InstanceRefreshWarmPoolProgress' :: Maybe Natural -> Maybe Natural -> InstanceRefreshWarmPoolProgress

-- | Create a value of <a>InstanceRefreshWarmPoolProgress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentageComplete:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_percentageComplete</a> - The
--   percentage of instances in the warm pool that have been replaced. For
--   each instance replacement, Amazon EC2 Auto Scaling tracks the
--   instance's health status and warm-up time. When the instance's health
--   status changes to healthy and the specified warm-up time passes, the
--   instance is considered updated and is added to the percentage
--   complete.
--   
--   <a>$sel:instancesToUpdate:InstanceRefreshWarmPoolProgress'</a>,
--   <a>instanceRefreshWarmPoolProgress_instancesToUpdate</a> - The number
--   of instances remaining to update.
newInstanceRefreshWarmPoolProgress :: InstanceRefreshWarmPoolProgress

-- | Describes an instances distribution for an Auto Scaling group with a
--   MixedInstancesPolicy.
--   
--   The instances distribution specifies the distribution of On-Demand
--   Instances and Spot Instances, the maximum price to pay for Spot
--   Instances, and how the Auto Scaling group allocates instance types to
--   fulfill On-Demand and Spot capacities.
--   
--   When you modify <tt>SpotAllocationStrategy</tt>,
--   <tt>SpotInstancePools</tt>, or <tt>SpotMaxPrice</tt> in the
--   UpdateAutoScalingGroup API call, this update action does not deploy
--   any changes across the running Amazon EC2 instances in the group. Your
--   existing Spot Instances continue to run as long as the maximum price
--   for those instances is higher than the current Spot price. When scale
--   out occurs, Amazon EC2 Auto Scaling launches instances based on the
--   new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates
--   instances according to the group's termination policies.
--   
--   <i>See:</i> <a>newInstancesDistribution</a> smart constructor.
data InstancesDistribution
InstancesDistribution' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> InstancesDistribution

-- | Create a value of <a>InstancesDistribution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:spotMaxPrice:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotMaxPrice</a> - The maximum price per unit
--   hour that you are willing to pay for a Spot Instance. If you leave the
--   value at its default (empty), Amazon EC2 Auto Scaling uses the
--   On-Demand price as the maximum Spot price. To remove a value that you
--   previously set, include the property but specify an empty string ("")
--   for the value.
--   
--   <a>$sel:spotInstancePools:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotInstancePools</a> - The number of Spot
--   Instance pools across which to allocate your Spot Instances. The Spot
--   pools are determined from the different instance types in the
--   overrides. Valid only when the Spot allocation strategy is
--   <tt>lowest-price</tt>. Value must be in the range of 1 to 20. Defaults
--   to 2 if not specified.
--   
--   <a>$sel:spotAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_spotAllocationStrategy</a> - Indicates how to
--   allocate instances across Spot Instance pools.
--   
--   If the allocation strategy is <tt>lowest-price</tt>, the Auto Scaling
--   group launches instances using the Spot pools with the lowest price,
--   and evenly allocates your instances across the number of Spot pools
--   that you specify. Defaults to <tt>lowest-price</tt> if not specified.
--   
--   If the allocation strategy is <tt>capacity-optimized</tt>
--   (recommended), the Auto Scaling group launches instances using Spot
--   pools that are optimally chosen based on the available Spot capacity.
--   Alternatively, you can use <tt>capacity-optimized-prioritized</tt> and
--   set the order of instance types in the list of launch template
--   overrides from highest to lowest priority (from first to last in the
--   list). Amazon EC2 Auto Scaling honors the instance type priorities on
--   a best-effort basis but optimizes for capacity first.
--   
--   
--   <a>$sel:onDemandPercentageAboveBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandPercentageAboveBaseCapacity</a> -
--   Controls the percentages of On-Demand Instances and Spot Instances for
--   your additional capacity beyond <tt>OnDemandBaseCapacity</tt>.
--   Expressed as a number (for example, 20 specifies 20% On-Demand
--   Instances, 80% Spot Instances). Defaults to 100 if not specified. If
--   set to 100, only On-Demand Instances are provisioned.
--   
--   <a>$sel:onDemandAllocationStrategy:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandAllocationStrategy</a> - Indicates
--   how to allocate instance types to fulfill On-Demand capacity. The only
--   valid value is <tt>prioritized</tt>, which is also the default value.
--   This strategy uses the order of instance types in the
--   <tt>LaunchTemplateOverrides</tt> to define the launch priority of each
--   instance type. The first instance type in the array is prioritized
--   higher than the last. If all your On-Demand capacity cannot be
--   fulfilled using your highest priority instance, then the Auto Scaling
--   groups launches the remaining capacity using the second priority
--   instance type, and so on.
--   
--   <a>$sel:onDemandBaseCapacity:InstancesDistribution'</a>,
--   <a>instancesDistribution_onDemandBaseCapacity</a> - The minimum amount
--   of the Auto Scaling group's capacity that must be fulfilled by
--   On-Demand Instances. This base portion is provisioned first as your
--   group scales. Defaults to 0 if not specified. If you specify weights
--   for the instance types in the overrides, set the value of
--   <tt>OnDemandBaseCapacity</tt> in terms of the number of capacity
--   units, and not the number of instances.
newInstancesDistribution :: InstancesDistribution

-- | Describes a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfiguration</a> smart constructor.
data LaunchConfiguration
LaunchConfiguration' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [BlockDeviceMapping] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMonitoring -> Maybe InstanceMetadataOptions -> Text -> Text -> Text -> ISO8601 -> LaunchConfiguration

-- | Create a value of <a>LaunchConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsOptimized:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ebsOptimized</a> - Specifies whether the launch
--   configuration is optimized for EBS I/O (<tt>true</tt>) or not
--   (<tt>false</tt>). For more information, see <a>Amazon EBS-Optimized
--   Instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:userData:LaunchConfiguration'</a>,
--   <a>launchConfiguration_userData</a> - The user data to make available
--   to the launched EC2 instances. For more information, see <a>Instance
--   metadata and user data</a> (Linux) and <a>Instance metadata and user
--   data</a> (Windows). If you are using a command line tool,
--   base64-encoding is performed for you, and you can load the text from a
--   file. Otherwise, you must provide base64-encoded text. User data is
--   limited to 16 KB.
--   
--   <a>$sel:ramdiskId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_ramdiskId</a> - The ID of the RAM disk
--   associated with the AMI.
--   
--   <a>$sel:classicLinkVPCSecurityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCSecurityGroups</a> - The IDs of
--   one or more security groups for the VPC specified in
--   <tt>ClassicLinkVPCId</tt>.
--   
--   For more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:spotPrice:LaunchConfiguration'</a>,
--   <a>launchConfiguration_spotPrice</a> - The maximum hourly price to be
--   paid for any Spot Instance launched to fulfill the request. Spot
--   Instances are launched when the price you specify exceeds the current
--   Spot price. For more information, see <a>Requesting Spot Instances</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:associatePublicIpAddress:LaunchConfiguration'</a>,
--   <a>launchConfiguration_associatePublicIpAddress</a> - For Auto Scaling
--   groups that are running in a VPC, specifies whether to assign a public
--   IP address to the group's instances. For more information, see
--   <a>Launching Auto Scaling instances in a VPC</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <a>$sel:securityGroups:LaunchConfiguration'</a>,
--   <a>launchConfiguration_securityGroups</a> - A list that contains the
--   security groups to assign to the instances in the Auto Scaling group.
--   For more information, see <a>Security Groups for Your VPC</a> in the
--   <i>Amazon Virtual Private Cloud User Guide</i>.
--   
--   <a>$sel:iamInstanceProfile:LaunchConfiguration'</a>,
--   <a>launchConfiguration_iamInstanceProfile</a> - The name or the Amazon
--   Resource Name (ARN) of the instance profile associated with the IAM
--   role for the instance. The instance profile contains the IAM role. For
--   more information, see <a>IAM role for applications that run on Amazon
--   EC2 instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:classicLinkVPCId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_classicLinkVPCId</a> - The ID of a
--   ClassicLink-enabled VPC to link your EC2-Classic instances to. For
--   more information, see <a>ClassicLink</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i> and <a>Linking EC2-Classic instances to
--   a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:blockDeviceMappings:LaunchConfiguration'</a>,
--   <a>launchConfiguration_blockDeviceMappings</a> - A block device
--   mapping, which specifies the block devices for the instance. For more
--   information, see <a>Block Device Mapping</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   <a>$sel:kernelId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_kernelId</a> - The ID of the kernel associated
--   with the AMI.
--   
--   <a>$sel:placementTenancy:LaunchConfiguration'</a>,
--   <a>launchConfiguration_placementTenancy</a> - The tenancy of the
--   instance, either <tt>default</tt> or <tt>dedicated</tt>. An instance
--   with <tt>dedicated</tt> tenancy runs on isolated, single-tenant
--   hardware and can only be launched into a VPC.
--   
--   For more information, see <a>Configuring instance tenancy with Amazon
--   EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationARN:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationARN</a> - The Amazon
--   Resource Name (ARN) of the launch configuration.
--   
--   <a>$sel:keyName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_keyName</a> - The name of the key pair.
--   
--   For more information, see <a>Amazon EC2 Key Pairs</a> in the <i>Amazon
--   EC2 User Guide for Linux Instances</i>.
--   
--   <a>$sel:instanceMonitoring:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceMonitoring</a> - Controls whether
--   instances in this group are launched with detailed (<tt>true</tt>) or
--   basic (<tt>false</tt>) monitoring.
--   
--   For more information, see <a>Configure Monitoring for Auto Scaling
--   Instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:metadataOptions:LaunchConfiguration'</a>,
--   <a>launchConfiguration_metadataOptions</a> - The metadata options for
--   the instances. For more information, see <a>Configuring the Instance
--   Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:launchConfigurationName:LaunchConfiguration'</a>,
--   <a>launchConfiguration_launchConfigurationName</a> - The name of the
--   launch configuration.
--   
--   <a>$sel:imageId:LaunchConfiguration'</a>,
--   <a>launchConfiguration_imageId</a> - The ID of the Amazon Machine
--   Image (AMI) to use to launch your EC2 instances. For more information,
--   see <a>Finding an AMI</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:instanceType:LaunchConfiguration'</a>,
--   <a>launchConfiguration_instanceType</a> - The instance type for the
--   instances.
--   
--   For information about available instance types, see <a>Available
--   Instance Types</a> in the <i>Amazon EC2 User Guide for Linux
--   Instances</i>.
--   
--   <a>$sel:createdTime:LaunchConfiguration'</a>,
--   <a>launchConfiguration_createdTime</a> - The creation date and time
--   for the launch configuration.
newLaunchConfiguration :: Text -> Text -> Text -> UTCTime -> LaunchConfiguration

-- | Describes a launch template and overrides.
--   
--   You specify these properties as part of a mixed instances policy.
--   
--   When you update the launch template or overrides in the
--   UpdateAutoScalingGroup API call, existing Amazon EC2 instances
--   continue to run. When scale out occurs, Amazon EC2 Auto Scaling
--   launches instances to match the new settings. When scale in occurs,
--   Amazon EC2 Auto Scaling terminates instances according to the group's
--   termination policies.
--   
--   <i>See:</i> <a>newLaunchTemplate</a> smart constructor.
data LaunchTemplate
LaunchTemplate' :: Maybe LaunchTemplateSpecification -> Maybe [LaunchTemplateOverrides] -> LaunchTemplate

-- | Create a value of <a>LaunchTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplate'</a>,
--   <a>launchTemplate_launchTemplateSpecification</a> - The launch
--   template to use.
--   
--   <a>$sel:overrides:LaunchTemplate'</a>, <a>launchTemplate_overrides</a>
--   - Any properties that you specify override the same properties in the
--   launch template. If not provided, Amazon EC2 Auto Scaling uses the
--   instance type specified in the launch template when it launches an
--   instance.
newLaunchTemplate :: LaunchTemplate

-- | Describes an override for a launch template. The maximum number of
--   instance types that can be associated with an Auto Scaling group is
--   40. The maximum number of distinct launch templates you can define for
--   an Auto Scaling group is 20. For more information about configuring
--   overrides, see <a>Configuring overrides</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateOverrides</a> smart constructor.
data LaunchTemplateOverrides
LaunchTemplateOverrides' :: Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> LaunchTemplateOverrides

-- | Create a value of <a>LaunchTemplateOverrides</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceType:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_instanceType</a> - The instance type, such
--   as <tt>m3.xlarge</tt>. You must use an instance type that is supported
--   in your requested Region and Availability Zones. For more information,
--   see <a>Instance types</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   <a>$sel:launchTemplateSpecification:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_launchTemplateSpecification</a> - Provides
--   the launch template to be used when launching the instance type. For
--   example, some instance types might require a launch template with a
--   different AMI. If not provided, Amazon EC2 Auto Scaling uses the
--   launch template that's defined for your mixed instances policy. For
--   more information, see <a>Specifying a different launch template for an
--   instance type</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <a>$sel:weightedCapacity:LaunchTemplateOverrides'</a>,
--   <a>launchTemplateOverrides_weightedCapacity</a> - The number of
--   capacity units provided by the specified instance type in terms of
--   virtual CPUs, memory, storage, throughput, or other relative
--   performance characteristic. When a Spot or On-Demand Instance is
--   provisioned, the capacity units count toward the desired capacity.
--   Amazon EC2 Auto Scaling provisions instances until the desired
--   capacity is totally fulfilled, even if this results in an overage. For
--   example, if there are 2 units remaining to fulfill capacity, and
--   Amazon EC2 Auto Scaling can only provision an instance with a
--   <tt>WeightedCapacity</tt> of 5 units, the instance is provisioned, and
--   the desired capacity is exceeded by 3 units. For more information, see
--   <a>Instance weighting for Amazon EC2 Auto Scaling</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>. Value must be in the range of 1 to
--   999.
newLaunchTemplateOverrides :: LaunchTemplateOverrides

-- | Describes the launch template and the version of the launch template
--   that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For
--   more information about launch templates, see <a>Launch templates</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template. To get the template ID, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number,
--   <tt>$Latest</tt>, or <tt>$Default</tt>. To get the version number, use
--   the Amazon EC2 <a>DescribeLaunchTemplateVersions</a> API operation.
--   New launch template versions can be created using the Amazon EC2
--   <a>CreateLaunchTemplateVersion</a> API. If the value is
--   <tt>$Latest</tt>, Amazon EC2 Auto Scaling selects the latest version
--   of the launch template when launching instances. If the value is
--   <tt>$Default</tt>, Amazon EC2 Auto Scaling selects the default version
--   of the launch template when launching instances. The default value is
--   <tt>$Default</tt>.
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template. To get the template name, use the Amazon EC2
--   <a>DescribeLaunchTemplates</a> API operation. New launch templates can
--   be created using the Amazon EC2 <a>CreateLaunchTemplate</a> API.
--   
--   Conditional: You must specify either a <tt>LaunchTemplateId</tt> or a
--   <tt>LaunchTemplateName</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that
--   you want to perform an action whenever it launches instances or
--   terminates instances.
--   
--   <i>See:</i> <a>newLifecycleHook</a> smart constructor.
data LifecycleHook
LifecycleHook' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LifecycleHook

-- | Create a value of <a>LifecycleHook</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHook'</a>, <a>lifecycleHook_roleARN</a> - The
--   ARN of the IAM role that allows the Auto Scaling group to publish to
--   the specified notification target.
--   
--   <a>$sel:lifecycleTransition:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleTransition</a> - The state of the EC2
--   instance to which to attach the lifecycle hook. The following are
--   possible values:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
--   
--   <a>$sel:notificationTargetARN:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationTargetARN</a> - The ARN of the target
--   that Amazon EC2 Auto Scaling sends notifications to when an instance
--   is in the transition state for the lifecycle hook. The notification
--   target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_heartbeatTimeout</a> - The maximum time, in seconds,
--   that can elapse before the lifecycle hook times out. If the lifecycle
--   hook times out, Amazon EC2 Auto Scaling performs the action that you
--   specified in the <tt>DefaultResult</tt> parameter.
--   
--   <a>$sel:globalTimeout:LifecycleHook'</a>,
--   <a>lifecycleHook_globalTimeout</a> - The maximum time, in seconds,
--   that an instance can remain in a <tt>Pending:Wait</tt> or
--   <tt>Terminating:Wait</tt> state. The maximum is 172800 seconds (48
--   hours) or 100 times <tt>HeartbeatTimeout</tt>, whichever is smaller.
--   
--   <a>$sel:notificationMetadata:LifecycleHook'</a>,
--   <a>lifecycleHook_notificationMetadata</a> - Additional information
--   that is included any time Amazon EC2 Auto Scaling sends a message to
--   the notification target.
--   
--   <a>$sel:lifecycleHookName:LifecycleHook'</a>,
--   <a>lifecycleHook_lifecycleHookName</a> - The name of the lifecycle
--   hook.
--   
--   <a>$sel:defaultResult:LifecycleHook'</a>,
--   <a>lifecycleHook_defaultResult</a> - Defines the action the Auto
--   Scaling group should take when the lifecycle hook timeout elapses or
--   if an unexpected failure occurs. The possible values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>.
--   
--   <a>$sel:autoScalingGroupName:LifecycleHook'</a>,
--   <a>lifecycleHook_autoScalingGroupName</a> - The name of the Auto
--   Scaling group for the lifecycle hook.
newLifecycleHook :: LifecycleHook

-- | Describes information used to specify a lifecycle hook for an Auto
--   Scaling group.
--   
--   A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on
--   an instance when the instance launches (before it is put into service)
--   or as the instance terminates (before it is fully terminated).
--   
--   This step is a part of the procedure for creating a lifecycle hook for
--   an Auto Scaling group:
--   
--   <ol>
--   <li>(Optional) Create a Lambda function and a rule that allows
--   CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto
--   Scaling launches or terminates instances.</li>
--   <li>(Optional) Create a notification target and an IAM role. The
--   target can be either an Amazon SQS queue or an Amazon SNS topic. The
--   role allows Amazon EC2 Auto Scaling to publish lifecycle notifications
--   to the target.</li>
--   <li>__Create the lifecycle hook. Specify whether the hook is used when
--   the instances launch or terminate.__</li>
--   <li>If you need more time, record the lifecycle action heartbeat to
--   keep the instance in a pending state.</li>
--   <li>If you finish before the timeout period ends, complete the
--   lifecycle action.</li>
--   </ol>
--   
--   For more information, see <a>Amazon EC2 Auto Scaling lifecycle
--   hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newLifecycleHookSpecification</a> smart constructor.
data LifecycleHookSpecification
LifecycleHookSpecification' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> Text -> LifecycleHookSpecification

-- | Create a value of <a>LifecycleHookSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_roleARN</a> - The ARN of the IAM role
--   that allows the Auto Scaling group to publish to the specified
--   notification target, for example, an Amazon SNS topic or an Amazon SQS
--   queue.
--   
--   <a>$sel:notificationTargetARN:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationTargetARN</a> - The ARN of
--   the target that Amazon EC2 Auto Scaling sends notifications to when an
--   instance is in the transition state for the lifecycle hook. The
--   notification target can be either an SQS queue or an SNS topic.
--   
--   <a>$sel:heartbeatTimeout:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_heartbeatTimeout</a> - The maximum time,
--   in seconds, that can elapse before the lifecycle hook times out.
--   
--   If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the
--   action that you specified in the <tt>DefaultResult</tt> parameter. You
--   can prevent the lifecycle hook from timing out by calling
--   RecordLifecycleActionHeartbeat.
--   
--   <a>$sel:notificationMetadata:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_notificationMetadata</a> - Additional
--   information that you want to include any time Amazon EC2 Auto Scaling
--   sends a message to the notification target.
--   
--   <a>$sel:defaultResult:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_defaultResult</a> - Defines the action
--   the Auto Scaling group should take when the lifecycle hook timeout
--   elapses or if an unexpected failure occurs. The valid values are
--   <tt>CONTINUE</tt> and <tt>ABANDON</tt>. The default value is
--   <tt>ABANDON</tt>.
--   
--   <a>$sel:lifecycleHookName:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleHookName</a> - The name of the
--   lifecycle hook.
--   
--   <a>$sel:lifecycleTransition:LifecycleHookSpecification'</a>,
--   <a>lifecycleHookSpecification_lifecycleTransition</a> - The state of
--   the EC2 instance to which you want to attach the lifecycle hook. The
--   valid values are:
--   
--   <ul>
--   <li>autoscaling:EC2_INSTANCE_LAUNCHING</li>
--   <li>autoscaling:EC2_INSTANCE_TERMINATING</li>
--   </ul>
newLifecycleHookSpecification :: Text -> Text -> LifecycleHookSpecification

-- | Describes the state of a Classic Load Balancer.
--   
--   <i>See:</i> <a>newLoadBalancerState</a> smart constructor.
data LoadBalancerState
LoadBalancerState' :: Maybe Text -> Maybe Text -> LoadBalancerState

-- | Create a value of <a>LoadBalancerState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerState'</a>, <a>loadBalancerState_state</a> -
--   One of the following load balancer states:
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the load balancer.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the load balancer.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the load balancer. If connection draining is
--   enabled, Elastic Load Balancing waits for in-flight requests to
--   complete before deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the load balancer.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerName:LoadBalancerState'</a>,
--   <a>loadBalancerState_loadBalancerName</a> - The name of the load
--   balancer.
newLoadBalancerState :: LoadBalancerState

-- | Describes the state of a target group.
--   
--   <i>See:</i> <a>newLoadBalancerTargetGroupState</a> smart constructor.
data LoadBalancerTargetGroupState
LoadBalancerTargetGroupState' :: Maybe Text -> Maybe Text -> LoadBalancerTargetGroupState

-- | Create a value of <a>LoadBalancerTargetGroupState</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_state</a> - The state of the target
--   group.
--   
--   <ul>
--   <li><tt>Adding</tt> - The Auto Scaling instances are being registered
--   with the target group.</li>
--   <li><tt>Added</tt> - All Auto Scaling instances are registered with
--   the target group.</li>
--   <li><tt>InService</tt> - At least one Auto Scaling instance passed an
--   <tt>ELB</tt> health check.</li>
--   <li><tt>Removing</tt> - The Auto Scaling instances are being
--   deregistered from the target group. If connection draining is enabled,
--   Elastic Load Balancing waits for in-flight requests to complete before
--   deregistering the instances.</li>
--   <li><tt>Removed</tt> - All Auto Scaling instances are deregistered
--   from the target group.</li>
--   </ul>
--   
--   <a>$sel:loadBalancerTargetGroupARN:LoadBalancerTargetGroupState'</a>,
--   <a>loadBalancerTargetGroupState_loadBalancerTargetGroupARN</a> - The
--   Amazon Resource Name (ARN) of the target group.
newLoadBalancerTargetGroupState :: LoadBalancerTargetGroupState

-- | A <tt>GetPredictiveScalingForecast</tt> call returns the load forecast
--   for a predictive scaling policy. This structure includes the data
--   points for that load forecast, along with the timestamps of those data
--   points and the metric specification.
--   
--   <i>See:</i> <a>newLoadForecast</a> smart constructor.
data LoadForecast
LoadForecast' :: [ISO8601] -> [Double] -> PredictiveScalingMetricSpecification -> LoadForecast

-- | Create a value of <a>LoadForecast</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamps:LoadForecast'</a>, <a>loadForecast_timestamps</a> -
--   The time stamps for the data points, in UTC format.
--   
--   <a>$sel:values:LoadForecast'</a>, <a>loadForecast_values</a> - The
--   values of the data points.
--   
--   <a>$sel:metricSpecification:LoadForecast'</a>,
--   <a>loadForecast_metricSpecification</a> - The metric specification for
--   the load forecast.
newLoadForecast :: PredictiveScalingMetricSpecification -> LoadForecast

-- | Describes a metric.
--   
--   <i>See:</i> <a>newMetricCollectionType</a> smart constructor.
data MetricCollectionType
MetricCollectionType' :: Maybe Text -> MetricCollectionType

-- | Create a value of <a>MetricCollectionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metric:MetricCollectionType'</a>,
--   <a>metricCollectionType_metric</a> - One of the following metrics:
--   
--   <ul>
--   <li><pre>GroupMinSize</pre></li>
--   <li><pre>GroupMaxSize</pre></li>
--   <li><pre>GroupDesiredCapacity</pre></li>
--   <li><pre>GroupInServiceInstances</pre></li>
--   <li><pre>GroupPendingInstances</pre></li>
--   <li><pre>GroupStandbyInstances</pre></li>
--   <li><pre>GroupTerminatingInstances</pre></li>
--   <li><pre>GroupTotalInstances</pre></li>
--   <li><pre>GroupInServiceCapacity</pre></li>
--   <li><pre>GroupPendingCapacity</pre></li>
--   <li><pre>GroupStandbyCapacity</pre></li>
--   <li><pre>GroupTerminatingCapacity</pre></li>
--   <li><pre>GroupTotalCapacity</pre></li>
--   <li><pre>WarmPoolDesiredCapacity</pre></li>
--   <li><pre>WarmPoolWarmedCapacity</pre></li>
--   <li><pre>WarmPoolPendingCapacity</pre></li>
--   <li><pre>WarmPoolTerminatingCapacity</pre></li>
--   <li><pre>WarmPoolTotalCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolDesiredCapacity</pre></li>
--   <li><pre>GroupAndWarmPoolTotalCapacity</pre></li>
--   </ul>
newMetricCollectionType :: MetricCollectionType

-- | Describes the dimension of a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | Describes a granularity of a metric.
--   
--   <i>See:</i> <a>newMetricGranularityType</a> smart constructor.
data MetricGranularityType
MetricGranularityType' :: Maybe Text -> MetricGranularityType

-- | Create a value of <a>MetricGranularityType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:granularity:MetricGranularityType'</a>,
--   <a>metricGranularityType_granularity</a> - The granularity. The only
--   valid value is <tt>1Minute</tt>.
newMetricGranularityType :: MetricGranularityType

-- | Describes a mixed instances policy. A mixed instances policy contains
--   the instance types Amazon EC2 Auto Scaling can launch, and other
--   information Amazon EC2 Auto Scaling can use to launch instances to
--   help you optimize your costs. For more information, see <a>Auto
--   Scaling groups with multiple instance types and purchase options</a>
--   in the <i>Amazon EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newMixedInstancesPolicy</a> smart constructor.
data MixedInstancesPolicy
MixedInstancesPolicy' :: Maybe InstancesDistribution -> Maybe LaunchTemplate -> MixedInstancesPolicy

-- | Create a value of <a>MixedInstancesPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instancesDistribution:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_instancesDistribution</a> - Specifies the
--   instances distribution. If not provided, the value for each property
--   in <tt>InstancesDistribution</tt> uses a default value.
--   
--   <a>$sel:launchTemplate:MixedInstancesPolicy'</a>,
--   <a>mixedInstancesPolicy_launchTemplate</a> - Specifies the launch
--   template to use and the instance types (overrides) that are used to
--   provision EC2 instances to fulfill On-Demand and Spot capacities.
--   Required when creating a mixed instances policy.
newMixedInstancesPolicy :: MixedInstancesPolicy

-- | Describes a notification.
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> NotificationConfiguration

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationType:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_notificationType</a> - One of the
--   following event notification types:
--   
--   <ul>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE</pre></li>
--   <li><pre>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</pre></li>
--   <li><pre>autoscaling:TEST_NOTIFICATION</pre></li>
--   </ul>
--   
--   <a>$sel:topicARN:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicARN</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic.
--   
--   <a>$sel:autoScalingGroupName:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newNotificationConfiguration :: NotificationConfiguration

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - A label that
--   uniquely identifies a specific Application Load Balancer target group
--   from which to determine the average request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The following predefined metrics are available:
--   
--   <ul>
--   <li><tt>ASGAverageCPUUtilization</tt> - Average CPU utilization of the
--   Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkIn</tt> - Average number of bytes received on
--   all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ASGAverageNetworkOut</tt> - Average number of bytes sent out
--   on all network interfaces by the Auto Scaling group.</li>
--   <li><tt>ALBRequestCountPerTarget</tt> - Number of requests completed
--   per target in an Application Load Balancer target group.</li>
--   </ul>
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | Represents a predictive scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newPredictiveScalingConfiguration</a> smart
--   constructor.
data PredictiveScalingConfiguration
PredictiveScalingConfiguration' :: Maybe PredictiveScalingMaxCapacityBreachBehavior -> Maybe PredictiveScalingMode -> Maybe Natural -> Maybe Natural -> [PredictiveScalingMetricSpecification] -> PredictiveScalingConfiguration

-- | Create a value of <a>PredictiveScalingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacityBreachBehavior:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBreachBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity of the Auto Scaling group.
--   Defaults to <tt>HonorMaxCapacity</tt> if not specified.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>HonorMaxCapacity</tt> - Amazon EC2 Auto Scaling cannot scale
--   out capacity higher than the maximum capacity. The maximum capacity is
--   enforced as a hard limit.</li>
--   <li><tt>IncreaseMaxCapacity</tt> - Amazon EC2 Auto Scaling can scale
--   out capacity higher than the maximum capacity when the forecast
--   capacity is close to or exceeds the maximum capacity. The upper limit
--   is determined by the forecasted capacity and the value for
--   <tt>MaxCapacityBuffer</tt>.</li>
--   </ul>
--   
--   <a>$sel:mode:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_mode</a> - The predictive scaling
--   mode. Defaults to <tt>ForecastOnly</tt> if not specified.
--   
--   <a>$sel:maxCapacityBuffer:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_maxCapacityBuffer</a> - The size of
--   the capacity buffer to use when the forecast capacity is close to or
--   exceeds the maximum capacity. The value is specified as a percentage
--   relative to the forecast capacity. For example, if the buffer is 10,
--   this means a 10 percent buffer, such that if the forecast capacity is
--   50, and the maximum capacity is 40, then the effective maximum
--   capacity is 55.
--   
--   If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than
--   the maximum capacity to equal but not exceed forecast capacity.
--   
--   Required if the <tt>MaxCapacityBreachBehavior</tt> property is set to
--   <tt>IncreaseMaxCapacity</tt>, and cannot be used otherwise.
--   
--   <a>$sel:schedulingBufferTime:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_schedulingBufferTime</a> - The
--   amount of time, in seconds, by which the instance launch time can be
--   advanced. For example, the forecast says to add capacity at 10:00 AM,
--   and you choose to pre-launch instances by 5 minutes. In that case, the
--   instances will be launched at 9:55 AM. The intention is to give
--   resources time to be provisioned. It can take a few minutes to launch
--   an EC2 instance. The actual amount of time required depends on several
--   factors, such as the size of the instance and whether there are
--   startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). Defaults to 300 seconds if not specified.
--   
--   <a>$sel:metricSpecifications:PredictiveScalingConfiguration'</a>,
--   <a>predictiveScalingConfiguration_metricSpecifications</a> - This
--   structure includes the metrics and target utilization to use for
--   predictive scaling.
--   
--   This is an array, but we currently only support a single metric
--   specification. That is, you can specify a target value and a single
--   metric pair, or a target value and one scaling metric and one load
--   metric.
newPredictiveScalingConfiguration :: PredictiveScalingConfiguration

-- | This structure specifies the metrics and target utilization settings
--   for a predictive scaling policy.
--   
--   You must specify either a metric pair, or a load metric and a scaling
--   metric individually. Specifying a metric pair instead of individual
--   metrics provides a simpler way to configure metrics for a scaling
--   policy. You choose the metric pair, and the policy automatically knows
--   the correct sum and average statistics to use for the load metric and
--   the scaling metric.
--   
--   Example
--   
--   <ul>
--   <li>You create a predictive scaling policy and specify
--   <tt>ALBRequestCount</tt> as the value for the metric pair and
--   <tt>1000.0</tt> as the target value. For this type of metric, you must
--   provide the metric dimension for the corresponding target group, so
--   you also provide a resource label for the Application Load Balancer
--   target group that is attached to your Auto Scaling group.</li>
--   <li>The number of requests the target group receives per minute
--   provides the load metric, and the request count averaged between the
--   members of the target group provides the scaling metric. In
--   CloudWatch, this refers to the <tt>RequestCount</tt> and
--   <tt>RequestCountPerTarget</tt> metrics, respectively.</li>
--   <li>For optimal use of predictive scaling, you adhere to the best
--   practice of using a dynamic scaling policy to automatically scale
--   between the minimum capacity and maximum capacity in response to
--   real-time changes in resource utilization.</li>
--   <li>Amazon EC2 Auto Scaling consumes data points for the load metric
--   over the last 14 days and creates an hourly load forecast for
--   predictive scaling. (A minimum of 24 hours of data is required.)</li>
--   <li>After creating the load forecast, Amazon EC2 Auto Scaling
--   determines when to reduce or increase the capacity of your Auto
--   Scaling group in each hour of the forecast period so that the average
--   number of requests received by each instance is as close to 1000
--   requests per minute as possible at all times.</li>
--   </ul>
--   
--   <i>See:</i> <a>newPredictiveScalingMetricSpecification</a> smart
--   constructor.
data PredictiveScalingMetricSpecification
PredictiveScalingMetricSpecification' :: Maybe PredictiveScalingPredefinedLoadMetric -> Maybe PredictiveScalingPredefinedScalingMetric -> Maybe PredictiveScalingPredefinedMetricPair -> Double -> PredictiveScalingMetricSpecification

-- | Create a value of <a>PredictiveScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:predefinedLoadMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedLoadMetricSpecification</a>
--   - The load metric specification.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedScalingMetricSpecification</a>
--   - The scaling metric specification.
--   
--   
--   <a>$sel:predefinedMetricPairSpecification:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_predefinedMetricPairSpecification</a>
--   - The metric pair specification from which Amazon EC2 Auto Scaling
--   determines the appropriate scaling metric and load metric to use.
--   
--   <a>$sel:targetValue:PredictiveScalingMetricSpecification'</a>,
--   <a>predictiveScalingMetricSpecification_targetValue</a> - Specifies
--   the target utilization.
newPredictiveScalingMetricSpecification :: Double -> PredictiveScalingMetricSpecification

-- | Describes a load metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedLoadMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedLoadMetric
PredictiveScalingPredefinedLoadMetric' :: Maybe Text -> PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | Create a value of <a>PredictiveScalingPredefinedLoadMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the request count served by your Auto
--   Scaling group. You can't specify a resource label unless the target
--   group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedLoadMetric'</a>,
--   <a>predictiveScalingPredefinedLoadMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedLoadMetric :: PredefinedLoadMetricType -> PredictiveScalingPredefinedLoadMetric

-- | Represents a metric pair for a predictive scaling policy.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedMetricPair</a> smart
--   constructor.
data PredictiveScalingPredefinedMetricPair
PredictiveScalingPredefinedMetricPair' :: Maybe Text -> PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | Create a value of <a>PredictiveScalingPredefinedMetricPair</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_resourceLabel</a> - A label
--   that uniquely identifies a specific Application Load Balancer target
--   group from which to determine the total and average request count
--   served by your Auto Scaling group. You can't specify a resource label
--   unless the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedMetricPair'</a>,
--   <a>predictiveScalingPredefinedMetricPair_predefinedMetricType</a> -
--   Indicates which metrics to use. There are two different types of
--   metrics for each metric type: one is a load metric and one is a
--   scaling metric. For example, if the metric type is
--   <tt>ASGCPUUtilization</tt>, the Auto Scaling group's total CPU metric
--   is used as the load metric, and the average CPU metric is used for the
--   scaling metric.
newPredictiveScalingPredefinedMetricPair :: PredefinedMetricPairType -> PredictiveScalingPredefinedMetricPair

-- | Describes a scaling metric for a predictive scaling policy.
--   
--   When returned in the output of <tt>DescribePolicies</tt>, it indicates
--   that a predictive scaling policy uses individually specified load and
--   scaling metrics instead of a metric pair.
--   
--   <i>See:</i> <a>newPredictiveScalingPredefinedScalingMetric</a> smart
--   constructor.
data PredictiveScalingPredefinedScalingMetric
PredictiveScalingPredefinedScalingMetric' :: Maybe Text -> PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | Create a value of <a>PredictiveScalingPredefinedScalingMetric</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_resourceLabel</a> - A
--   label that uniquely identifies a specific Application Load Balancer
--   target group from which to determine the average request count served
--   by your Auto Scaling group. You can't specify a resource label unless
--   the target group is attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedMetricType:PredictiveScalingPredefinedScalingMetric'</a>,
--   <a>predictiveScalingPredefinedScalingMetric_predefinedMetricType</a> -
--   The metric type.
newPredictiveScalingPredefinedScalingMetric :: PredefinedScalingMetricType -> PredictiveScalingPredefinedScalingMetric

-- | Describes a process type.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newProcessType</a> smart constructor.
data ProcessType
ProcessType' :: Text -> ProcessType

-- | Create a value of <a>ProcessType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:ProcessType'</a>, <a>processType_processName</a> -
--   One of the following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
newProcessType :: Text -> ProcessType

-- | Describes the preferences for an instance refresh.
--   
--   <i>See:</i> <a>newRefreshPreferences</a> smart constructor.
data RefreshPreferences
RefreshPreferences' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe [Natural] -> RefreshPreferences

-- | Create a value of <a>RefreshPreferences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkpointDelay:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointDelay</a> - The amount of time, in
--   seconds, to wait after a checkpoint before continuing. This property
--   is optional, but if you specify a value for it, you must also specify
--   a value for <tt>CheckpointPercentages</tt>. If you specify a value for
--   <tt>CheckpointPercentages</tt> and not for <tt>CheckpointDelay</tt>,
--   the <tt>CheckpointDelay</tt> defaults to <tt>3600</tt> (1 hour).
--   
--   <a>$sel:minHealthyPercentage:RefreshPreferences'</a>,
--   <a>refreshPreferences_minHealthyPercentage</a> - The amount of
--   capacity in the Auto Scaling group that must remain healthy during an
--   instance refresh to allow the operation to continue. The value is
--   expressed as a percentage of the desired capacity of the Auto Scaling
--   group (rounded up to the nearest integer). The default is <tt>90</tt>.
--   
--   Setting the minimum healthy percentage to 100 percent limits the rate
--   of replacement to one instance at a time. In contrast, setting it to 0
--   percent has the effect of replacing all instances at the same time.
--   
--   <a>$sel:instanceWarmup:RefreshPreferences'</a>,
--   <a>refreshPreferences_instanceWarmup</a> - The number of seconds until
--   a newly launched instance is configured and ready to use. During this
--   time, Amazon EC2 Auto Scaling does not immediately move on to the next
--   replacement. The default is to use the value for the health check
--   grace period defined for the group.
--   
--   <a>$sel:skipMatching:RefreshPreferences'</a>,
--   <a>refreshPreferences_skipMatching</a> - A boolean value that
--   indicates whether skip matching is enabled. If true, then Amazon EC2
--   Auto Scaling skips replacing instances that match the desired
--   configuration. If no desired configuration is specified, then it skips
--   replacing instances that have the same configuration that is already
--   set on the group. The default is <tt>false</tt>.
--   
--   <a>$sel:checkpointPercentages:RefreshPreferences'</a>,
--   <a>refreshPreferences_checkpointPercentages</a> - Threshold values for
--   each checkpoint in ascending order. Each number must be unique. To
--   replace all instances in the Auto Scaling group, the last number in
--   the array must be <tt>100</tt>.
--   
--   For usage examples, see <a>Adding checkpoints to an instance
--   refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
newRefreshPreferences :: RefreshPreferences

-- | Describes a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe Text -> Maybe TargetTrackingConfiguration -> Maybe [StepAdjustment] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe [Alarm] -> Maybe Text -> Maybe PredictiveScalingConfiguration -> Maybe Text -> ScalingPolicy

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - A target tracking
--   scaling policy.
--   
--   <a>$sel:stepAdjustments:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepAdjustments</a> - A set of adjustments that
--   enable you to scale based on the size of the alarm breach.
--   
--   <a>$sel:metricAggregationType:ScalingPolicy'</a>,
--   <a>scalingPolicy_metricAggregationType</a> - The aggregation type for
--   the CloudWatch metrics. The valid values are <tt>Minimum</tt>,
--   <tt>Maximum</tt>, and <tt>Average</tt>.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - One of the following policy types:
--   
--   <ul>
--   <li><pre>TargetTrackingScaling</pre></li>
--   <li><pre>StepScaling</pre></li>
--   <li><tt>SimpleScaling</tt> (default)</li>
--   <li><pre>PredictiveScaling</pre></li>
--   </ul>
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step and simple scaling policies</a> in the <i>Amazon EC2 Auto
--   Scaling User Guide</i>.
--   
--   <a>$sel:enabled:ScalingPolicy'</a>, <a>scalingPolicy_enabled</a> -
--   Indicates whether the policy is enabled (<tt>true</tt>) or disabled
--   (<tt>false</tt>).
--   
--   <a>$sel:cooldown:ScalingPolicy'</a>, <a>scalingPolicy_cooldown</a> -
--   The duration of the policy's cooldown period, in seconds.
--   
--   <a>$sel:scalingAdjustment:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalingAdjustment</a> - The amount by which to scale,
--   based on the specified adjustment type. A positive value adds to the
--   current capacity while a negative number removes from the current
--   capacity.
--   
--   <a>$sel:adjustmentType:ScalingPolicy'</a>,
--   <a>scalingPolicy_adjustmentType</a> - Specifies how the scaling
--   adjustment is interpreted (for example, an absolute number or a
--   percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:minAdjustmentStep:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentStep</a> - Available for backward
--   compatibility. Use <tt>MinAdjustmentMagnitude</tt> instead.
--   
--   <a>$sel:estimatedInstanceWarmup:ScalingPolicy'</a>,
--   <a>scalingPolicy_estimatedInstanceWarmup</a> - The estimated time, in
--   seconds, until a newly launched instance can contribute to the
--   CloudWatch metrics.
--   
--   <a>$sel:minAdjustmentMagnitude:ScalingPolicy'</a>,
--   <a>scalingPolicy_minAdjustmentMagnitude</a> - The minimum value to
--   scale by when the adjustment type is <tt>PercentChangeInCapacity</tt>.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms related to the policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the policy.
--   
--   <a>$sel:predictiveScalingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_predictiveScalingConfiguration</a> - A predictive
--   scaling policy.
--   
--   <a>$sel:autoScalingGroupName:ScalingPolicy'</a>,
--   <a>scalingPolicy_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingPolicy :: ScalingPolicy

-- | <i>See:</i> <a>newScalingProcessQuery</a> smart constructor.
data ScalingProcessQuery
ScalingProcessQuery' :: Maybe [Text] -> Text -> ScalingProcessQuery

-- | Create a value of <a>ScalingProcessQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingProcesses:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_scalingProcesses</a> - One or more of the
--   following processes:
--   
--   <ul>
--   <li><pre>Launch</pre></li>
--   <li><pre>Terminate</pre></li>
--   <li><pre>AddToLoadBalancer</pre></li>
--   <li><pre>AlarmNotification</pre></li>
--   <li><pre>AZRebalance</pre></li>
--   <li><pre>HealthCheck</pre></li>
--   <li><pre>InstanceRefresh</pre></li>
--   <li><pre>ReplaceUnhealthy</pre></li>
--   <li><pre>ScheduledActions</pre></li>
--   </ul>
--   
--   If you omit this parameter, all processes are specified.
--   
--   <a>$sel:autoScalingGroupName:ScalingProcessQuery'</a>,
--   <a>scalingProcessQuery_autoScalingGroupName</a> - The name of the Auto
--   Scaling group.
newScalingProcessQuery :: Text -> ScalingProcessQuery

-- | Describes a scheduled scaling action.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupAction</a> smart constructor.
data ScheduledUpdateGroupAction
ScheduledUpdateGroupAction' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> ScheduledUpdateGroupAction

-- | Create a value of <a>ScheduledUpdateGroupAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_minSize</a> - The minimum size of the
--   Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_startTime</a> - The date and time in UTC
--   for this action to start. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_endTime</a> - The date and time in UTC
--   for the recurring schedule to end. For example,
--   <tt>"2019-06-01T00:00:00Z"</tt>.
--   
--   <a>$sel:scheduledActionARN:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionARN</a> - The Amazon
--   Resource Name (ARN) of the scheduled action.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_recurrence</a> - The recurring schedule
--   for the action, in Unix cron syntax format.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_maxSize</a> - The maximum size of the
--   Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_timeZone</a> - The time zone for the
--   cron expression.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_scheduledActionName</a> - The name of
--   the scheduled action.
--   
--   <a>$sel:time:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_time</a> - This parameter is no longer
--   used.
--   
--   <a>$sel:autoScalingGroupName:ScheduledUpdateGroupAction'</a>,
--   <a>scheduledUpdateGroupAction_autoScalingGroupName</a> - The name of
--   the Auto Scaling group.
newScheduledUpdateGroupAction :: ScheduledUpdateGroupAction

-- | Describes information used for one or more scheduled scaling action
--   updates in a BatchPutScheduledUpdateGroupAction operation.
--   
--   <i>See:</i> <a>newScheduledUpdateGroupActionRequest</a> smart
--   constructor.
data ScheduledUpdateGroupActionRequest
ScheduledUpdateGroupActionRequest' :: Maybe Int -> Maybe Int -> Maybe ISO8601 -> Maybe ISO8601 -> Maybe Text -> Maybe Int -> Maybe Text -> Text -> ScheduledUpdateGroupActionRequest

-- | Create a value of <a>ScheduledUpdateGroupActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_minSize</a> - The minimum size of
--   the Auto Scaling group.
--   
--   <a>$sel:desiredCapacity:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_desiredCapacity</a> - The desired
--   capacity is the initial capacity of the Auto Scaling group after the
--   scheduled action runs and the capacity it attempts to maintain.
--   
--   <a>$sel:startTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_startTime</a> - The date and time
--   for the action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
--   only and in quotes (for example, <tt>"2019-06-01T00:00:00Z"</tt>).
--   
--   If you specify <tt>Recurrence</tt> and <tt>StartTime</tt>, Amazon EC2
--   Auto Scaling performs the action at this time, and then performs the
--   action based on the specified recurrence.
--   
--   If you try to schedule the action in the past, Amazon EC2 Auto Scaling
--   returns an error message.
--   
--   <a>$sel:endTime:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_endTime</a> - The date and time
--   for the recurring schedule to end, in UTC.
--   
--   <a>$sel:recurrence:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_recurrence</a> - The recurring
--   schedule for the action, in Unix cron syntax format. This format
--   consists of five fields separated by white spaces: [Minute] [Hour]
--   [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in
--   quotes (for example, <tt>"30 0 1 1,6,12 *"</tt>). For more information
--   about this format, see <a>Crontab</a>.
--   
--   When <tt>StartTime</tt> and <tt>EndTime</tt> are specified with
--   <tt>Recurrence</tt>, they form the boundaries of when the recurring
--   action starts and stops.
--   
--   Cron expressions use Universal Coordinated Time (UTC) by default.
--   
--   <a>$sel:maxSize:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_maxSize</a> - The maximum size of
--   the Auto Scaling group.
--   
--   <a>$sel:timeZone:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_timeZone</a> - Specifies the time
--   zone for a cron expression. If a time zone is not provided, UTC is
--   used by default.
--   
--   Valid values are the canonical names of the IANA time zones, derived
--   from the IANA Time Zone Database (such as <tt>Etc/GMT+9</tt> or
--   <tt>Pacific/Tahiti</tt>). For more information, see
--   <a>https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.
--   
--   <a>$sel:scheduledActionName:ScheduledUpdateGroupActionRequest'</a>,
--   <a>scheduledUpdateGroupActionRequest_scheduledActionName</a> - The
--   name of the scaling action.
newScheduledUpdateGroupActionRequest :: Text -> ScheduledUpdateGroupActionRequest

-- | Describes information used to create a step adjustment for a step
--   scaling policy.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most, one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most, one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   For more information, see <a>Step adjustments</a> in the <i>Amazon EC2
--   Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity.
newStepAdjustment :: Int -> StepAdjustment

-- | Describes an auto scaling process that has been suspended.
--   
--   For more information, see <a>Scaling processes</a> in the <i>Amazon
--   EC2 Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newSuspendedProcess</a> smart constructor.
data SuspendedProcess
SuspendedProcess' :: Maybe Text -> Maybe Text -> SuspendedProcess

-- | Create a value of <a>SuspendedProcess</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processName:SuspendedProcess'</a>,
--   <a>suspendedProcess_processName</a> - The name of the suspended
--   process.
--   
--   <a>$sel:suspensionReason:SuspendedProcess'</a>,
--   <a>suspendedProcess_suspensionReason</a> - The reason that the process
--   was suspended.
newSuspendedProcess :: SuspendedProcess

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag key.
--   
--   <a>$sel:resourceId:Tag'</a>, <a>tag_resourceId</a> - The name of the
--   Auto Scaling group.
--   
--   <a>$sel:resourceType:Tag'</a>, <a>tag_resourceType</a> - The type of
--   resource. The only supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:propagateAtLaunch:Tag'</a>, <a>tag_propagateAtLaunch</a> -
--   Determines whether the tag is added to new instances as they are
--   launched in the group.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag value.
newTag :: Text -> Text -> Text -> Bool -> Text -> Tag

-- | Describes a tag for an Auto Scaling group.
--   
--   <i>See:</i> <a>newTagDescription</a> smart constructor.
data TagDescription
TagDescription' :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | Create a value of <a>TagDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:TagDescription'</a>,
--   <a>tagDescription_resourceId</a> - The name of the group.
--   
--   <a>$sel:resourceType:TagDescription'</a>,
--   <a>tagDescription_resourceType</a> - The type of resource. The only
--   supported value is <tt>auto-scaling-group</tt>.
--   
--   <a>$sel:key:TagDescription'</a>, <a>tagDescription_key</a> - The tag
--   key.
--   
--   <a>$sel:propagateAtLaunch:TagDescription'</a>,
--   <a>tagDescription_propagateAtLaunch</a> - Determines whether the tag
--   is added to new instances as they are launched in the group.
--   
--   <a>$sel:value:TagDescription'</a>, <a>tagDescription_value</a> - The
--   tag value.
newTagDescription :: Text -> Text -> Text -> Bool -> Text -> TagDescription

-- | Represents a target tracking scaling policy configuration to use with
--   Amazon EC2 Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe CustomizedMetricSpecification -> Double -> TargetTrackingConfiguration

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scaling in by the target tracking scaling policy is disabled. If
--   scaling in is disabled, the target tracking scaling policy doesn't
--   remove instances from the Auto Scaling group. Otherwise, the target
--   tracking scaling policy can remove instances from the Auto Scaling
--   group. The default is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedMetricSpecification</a> - A
--   predefined metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedMetricSpecification</a> - A
--   customized metric. You must specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Describes a warm pool configuration.
--   
--   <i>See:</i> <a>newWarmPoolConfiguration</a> smart constructor.
data WarmPoolConfiguration
WarmPoolConfiguration' :: Maybe Natural -> Maybe WarmPoolStatus -> Maybe WarmPoolState -> Maybe Int -> WarmPoolConfiguration

-- | Create a value of <a>WarmPoolConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minSize:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_minSize</a> - The minimum number of instances
--   to maintain in the warm pool.
--   
--   <a>$sel:status:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_status</a> - The status of a warm pool that
--   is marked for deletion.
--   
--   <a>$sel:poolState:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_poolState</a> - The instance state to
--   transition to after the lifecycle actions are complete.
--   
--   <a>$sel:maxGroupPreparedCapacity:WarmPoolConfiguration'</a>,
--   <a>warmPoolConfiguration_maxGroupPreparedCapacity</a> - The maximum
--   number of instances that are allowed to be in the warm pool or in any
--   state except <tt>Terminated</tt> for the Auto Scaling group.
newWarmPoolConfiguration :: WarmPoolConfiguration
